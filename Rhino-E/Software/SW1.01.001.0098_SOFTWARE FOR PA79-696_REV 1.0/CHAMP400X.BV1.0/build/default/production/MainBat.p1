Version 4.0 HI-TECH Software Intermediate Code
"2 ./structure.h
[; ;./structure.h: 2: {
[s S1490 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1490 Type_D digitdp1 digitdp2 digitdp3 digitdp4 digitdp5 digitdp6 digitdp7 digitdp8 ]
"15
[; ;./structure.h: 15: {
[u S1491 `S1490 1 `uc -> -> 1 `i `ux ]
[n S1491 Type_DP TypeD DPGROUP ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"16617 ./pic18f46k40.h
[; ;./pic18f46k40.h: 16617:     struct {
[s S825 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S825 . LATC0 LATC1 LATC2 LATC3 LATC4 LATC5 LATC6 LATC7 ]
"16627
[; ;./pic18f46k40.h: 16627:     struct {
[s S826 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S826 . LC0 LC1 LC2 LC3 LC4 LC5 LC6 LC7 ]
"16616
[; ;./pic18f46k40.h: 16616: typedef union {
[u S824 `S825 1 `S826 1 ]
[n S824 . . . ]
"16638
[; ;./pic18f46k40.h: 16638: extern volatile LATCbits_t LATCbits __attribute__((address(0xF85)));
[v _LATCbits `VS824 ~T0 @X0 0 e@3973 ]
"16841
[; ;./pic18f46k40.h: 16841:     struct {
[s S831 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S831 . LATE0 LATE1 LATE2 ]
"16846
[; ;./pic18f46k40.h: 16846:     struct {
[s S832 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S832 . LE0 LE1 LE2 ]
"16851
[; ;./pic18f46k40.h: 16851:     struct {
[s S833 :3 `uc 1 :1 `uc 1 ]
[n S833 . . LE3 ]
"16855
[; ;./pic18f46k40.h: 16855:     struct {
[s S834 :4 `uc 1 :1 `uc 1 ]
[n S834 . . LE4 ]
"16859
[; ;./pic18f46k40.h: 16859:     struct {
[s S835 :5 `uc 1 :1 `uc 1 ]
[n S835 . . LE5 ]
"16863
[; ;./pic18f46k40.h: 16863:     struct {
[s S836 :6 `uc 1 :1 `uc 1 ]
[n S836 . . LE6 ]
"16867
[; ;./pic18f46k40.h: 16867:     struct {
[s S837 :7 `uc 1 :1 `uc 1 ]
[n S837 . . LE7 ]
"16840
[; ;./pic18f46k40.h: 16840: typedef union {
[u S830 `S831 1 `S832 1 `S833 1 `S834 1 `S835 1 `S836 1 `S837 1 ]
[n S830 . . . . . . . . ]
"16872
[; ;./pic18f46k40.h: 16872: extern volatile LATEbits_t LATEbits __attribute__((address(0xF87)));
[v _LATEbits `VS830 ~T0 @X0 0 e@3975 ]
"19 ./function.h
[; ;./function.h: 19: void Delay(unsigned int iCnt, unsigned char cUnit);
[v _Delay `(v ~T0 @X0 0 ef2`ui`uc ]
"4797 ./pic18f46k40.h
[; ;./pic18f46k40.h: 4797:     struct {
[s S300 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S300 . INT0IF INT1IF INT2IF . IOCIF TMR0IF ]
"4796
[; ;./pic18f46k40.h: 4796: typedef union {
[u S299 `S300 1 ]
[n S299 . . ]
"4806
[; ;./pic18f46k40.h: 4806: extern volatile PIR0bits_t PIR0bits __attribute__((address(0xECA)));
[v _PIR0bits `VS299 ~T0 @X0 0 e@3786 ]
"26612
[; ;./pic18f46k40.h: 26612: extern volatile unsigned char TMR0H __attribute__((address(0xFD4)));
[v _TMR0H `Vuc ~T0 @X0 0 e@4052 ]
"26474
[; ;./pic18f46k40.h: 26474: extern volatile unsigned char TMR0L __attribute__((address(0xFD3)));
[v _TMR0L `Vuc ~T0 @X0 0 e@4051 ]
"3 ./function.h
[; ;./function.h: 3: void display(void);
[v _display `(v ~T0 @X0 0 ef ]
"13923 ./pic18f46k40.h
[; ;./pic18f46k40.h: 13923:     struct {
[s S716 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S716 . ADGO . ADFM . ADCS . ADCONT ADON ]
"13933
[; ;./pic18f46k40.h: 13933:     struct {
[s S717 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S717 . GO . ADFM0 ]
"13938
[; ;./pic18f46k40.h: 13938:     struct {
[s S718 :1 `uc 1 ]
[n S718 . DONE ]
"13941
[; ;./pic18f46k40.h: 13941:     struct {
[s S719 :1 `uc 1 ]
[n S719 . GO_NOT_DONE ]
"13944
[; ;./pic18f46k40.h: 13944:     struct {
[s S720 :1 `uc 1 ]
[n S720 . GO_nDONE ]
"13947
[; ;./pic18f46k40.h: 13947:     struct {
[s S721 :7 `uc 1 :1 `uc 1 ]
[n S721 . . ADCAL ]
"13922
[; ;./pic18f46k40.h: 13922: typedef union {
[u S715 `S716 1 `S717 1 `S718 1 `S719 1 `S720 1 `S721 1 ]
[n S715 . . . . . . . ]
"13952
[; ;./pic18f46k40.h: 13952: extern volatile ADCON0bits_t ADCON0bits __attribute__((address(0xF60)));
[v _ADCON0bits `VS715 ~T0 @X0 0 e@3936 ]
"4436
[; ;./pic18f46k40.h: 4436:     struct {
[s S281 :1 `uc 1 :1 `uc 1 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S281 . ADIE ADTIE . CSWIE OSCFIE ]
"4443
[; ;./pic18f46k40.h: 4443:     struct {
[s S282 :7 `uc 1 :1 `uc 1 ]
[n S282 . . PSPIE ]
"4435
[; ;./pic18f46k40.h: 4435: typedef union {
[u S280 `S281 1 `S282 1 ]
[n S280 . . . ]
"4448
[; ;./pic18f46k40.h: 4448: extern volatile PIE1bits_t PIE1bits __attribute__((address(0xEC3)));
[v _PIE1bits `VS280 ~T0 @X0 0 e@3779 ]
"4842
[; ;./pic18f46k40.h: 4842:     struct {
[s S302 :1 `uc 1 :1 `uc 1 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S302 . ADIF ADTIF . CSWIF OSCFIF ]
"4849
[; ;./pic18f46k40.h: 4849:     struct {
[s S303 :7 `uc 1 :1 `uc 1 ]
[n S303 . . PSPIF ]
"4841
[; ;./pic18f46k40.h: 4841: typedef union {
[u S301 `S302 1 `S303 1 ]
[n S301 . . . ]
"4854
[; ;./pic18f46k40.h: 4854: extern volatile PIR1bits_t PIR1bits __attribute__((address(0xECB)));
[v _PIR1bits `VS301 ~T0 @X0 0 e@3787 ]
"14236
[; ;./pic18f46k40.h: 14236: extern volatile unsigned char ADRESH __attribute__((address(0xF64)));
[v _ADRESH `Vuc ~T0 @X0 0 e@3940 ]
"14166
[; ;./pic18f46k40.h: 14166: extern volatile unsigned char ADRESL __attribute__((address(0xF63)));
[v _ADRESL `Vuc ~T0 @X0 0 e@3939 ]
"13859
[; ;./pic18f46k40.h: 13859: extern volatile unsigned char ADPCH __attribute__((address(0xF5F)));
[v _ADPCH `Vuc ~T0 @X0 0 e@3935 ]
"56 ./function.h
[; ;./function.h: 56: void Trip_detect(unsigned int trip_vtg);
[v _Trip_detect `(v ~T0 @X0 0 ef1`ui ]
"57
[; ;./function.h: 57: void Trip_detect_OV(unsigned int trip_vtge);
[v _Trip_detect_OV `(v ~T0 @X0 0 ef1`ui ]
"4938 ./pic18f46k40.h
[; ;./pic18f46k40.h: 4938:     struct {
[s S308 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S308 . SSP1IF BCL1IF SSP2IF BCL2IF TX1IF RC1IF TX2IF RC2IF ]
"4948
[; ;./pic18f46k40.h: 4948:     struct {
[s S309 :1 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S309 . . RXBNIF . TXBNIF ]
"4937
[; ;./pic18f46k40.h: 4937: typedef union {
[u S307 `S308 1 `S309 1 ]
[n S307 . . . ]
"4955
[; ;./pic18f46k40.h: 4955: extern volatile PIR3bits_t PIR3bits __attribute__((address(0xECD)));
[v _PIR3bits `VS307 ~T0 @X0 0 e@3789 ]
"4532
[; ;./pic18f46k40.h: 4532:     struct {
[s S287 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S287 . SSP1IE BCL1IE SSP2IE BCL2IE TX1IE RC1IE TX2IE RC2IE ]
"4542
[; ;./pic18f46k40.h: 4542:     struct {
[s S288 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S288 . RXB0IE RXB1IE TXB0IE TXB1IE TXB2IE ]
"4549
[; ;./pic18f46k40.h: 4549:     struct {
[s S289 :1 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S289 . . RXBNIE . TXBNIE ]
"4531
[; ;./pic18f46k40.h: 4531: typedef union {
[u S286 `S287 1 `S288 1 `S289 1 ]
[n S286 . . . . ]
"4556
[; ;./pic18f46k40.h: 4556: extern volatile PIE3bits_t PIE3bits __attribute__((address(0xEC5)));
[v _PIE3bits `VS286 ~T0 @X0 0 e@3781 ]
"19043
[; ;./pic18f46k40.h: 19043: extern volatile unsigned char RCREG1 __attribute__((address(0xF99)));
[v _RCREG1 `Vuc ~T0 @X0 0 e@3993 ]
"1292
[; ;./pic18f46k40.h: 1292: extern volatile unsigned char RCREG2 __attribute__((address(0xE99)));
[v _RCREG2 `Vuc ~T0 @X0 0 e@3737 ]
"5743
[; ;./pic18f46k40.h: 5743: extern volatile unsigned char OSCCON1 __attribute__((address(0xED8)));
[v _OSCCON1 `Vuc ~T0 @X0 0 e@3800 ]
"5883
[; ;./pic18f46k40.h: 5883: extern volatile unsigned char OSCCON3 __attribute__((address(0xEDA)));
[v _OSCCON3 `Vuc ~T0 @X0 0 e@3802 ]
"6041
[; ;./pic18f46k40.h: 6041:     struct {
[s S358 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S358 . . ADOEN SOSCEN LFOEN MFOEN HFOEN EXTOEN ]
"6040
[; ;./pic18f46k40.h: 6040: typedef union {
[u S357 `S358 1 ]
[n S357 . . ]
"6051
[; ;./pic18f46k40.h: 6051: extern volatile OSCENbits_t OSCENbits __attribute__((address(0xEDC)));
[v _OSCENbits `VS357 ~T0 @X0 0 e@3804 ]
"6144
[; ;./pic18f46k40.h: 6144: extern volatile unsigned char OSCFRQ __attribute__((address(0xEDE)));
[v _OSCFRQ `Vuc ~T0 @X0 0 e@3806 ]
"6086
[; ;./pic18f46k40.h: 6086: extern volatile unsigned char OSCTUNE __attribute__((address(0xEDD)));
[v _OSCTUNE `Vuc ~T0 @X0 0 e@3805 ]
"5923
[; ;./pic18f46k40.h: 5923: extern volatile unsigned char OSCSTAT __attribute__((address(0xEDB)));
[v _OSCSTAT `Vuc ~T0 @X0 0 e@3803 ]
"6230
[; ;./pic18f46k40.h: 6230:     struct {
[s S369 :1 `uc 1 :6 `uc 1 :1 `uc 1 ]
[n S369 . BORRDY . SBOREN ]
"6229
[; ;./pic18f46k40.h: 6229: typedef union {
[u S368 `S369 1 ]
[n S368 . . ]
"6236
[; ;./pic18f46k40.h: 6236: extern volatile BORCONbits_t BORCONbits __attribute__((address(0xEE0)));
[v _BORCONbits `VS368 ~T0 @X0 0 e@3808 ]
"9024
[; ;./pic18f46k40.h: 9024:     struct {
[s S486 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S486 . ANSELB0 ANSELB1 ANSELB2 ANSELB3 ANSELB4 ANSELB5 ANSELB6 ANSELB7 ]
"9023
[; ;./pic18f46k40.h: 9023: typedef union {
[u S485 `S486 1 ]
[n S485 . . ]
"9035
[; ;./pic18f46k40.h: 9035: extern volatile ANSELBbits_t ANSELBbits __attribute__((address(0xF19)));
[v _ANSELBbits `VS485 ~T0 @X0 0 e@3865 ]
"8528
[; ;./pic18f46k40.h: 8528:     struct {
[s S470 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S470 . ANSELA0 ANSELA1 ANSELA2 ANSELA3 ANSELA4 ANSELA5 ANSELA6 ANSELA7 ]
"8527
[; ;./pic18f46k40.h: 8527: typedef union {
[u S469 `S470 1 ]
[n S469 . . ]
"8539
[; ;./pic18f46k40.h: 8539: extern volatile ANSELAbits_t ANSELAbits __attribute__((address(0xF11)));
[v _ANSELAbits `VS469 ~T0 @X0 0 e@3857 ]
"9520
[; ;./pic18f46k40.h: 9520:     struct {
[s S502 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S502 . ANSELC0 ANSELC1 ANSELC2 ANSELC3 ANSELC4 ANSELC5 ANSELC6 ANSELC7 ]
"9519
[; ;./pic18f46k40.h: 9519: typedef union {
[u S501 `S502 1 ]
[n S501 . . ]
"9531
[; ;./pic18f46k40.h: 9531: extern volatile ANSELCbits_t ANSELCbits __attribute__((address(0xF21)));
[v _ANSELCbits `VS501 ~T0 @X0 0 e@3873 ]
"17065
[; ;./pic18f46k40.h: 17065:     struct {
[s S843 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S843 . TRISB0 TRISB1 TRISB2 TRISB3 TRISB4 TRISB5 TRISB6 TRISB7 ]
"17064
[; ;./pic18f46k40.h: 17064: typedef union {
[u S842 `S843 1 ]
[n S842 . . ]
"17076
[; ;./pic18f46k40.h: 17076: extern volatile TRISBbits_t TRISBbits __attribute__((address(0xF89)));
[v _TRISBbits `VS842 ~T0 @X0 0 e@3977 ]
"17187
[; ;./pic18f46k40.h: 17187:     struct {
[s S847 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S847 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"17186
[; ;./pic18f46k40.h: 17186: typedef union {
[u S846 `S847 1 ]
[n S846 . . ]
"17198
[; ;./pic18f46k40.h: 17198: extern volatile TRISCbits_t TRISCbits __attribute__((address(0xF8A)));
[v _TRISCbits `VS846 ~T0 @X0 0 e@3978 ]
"16943
[; ;./pic18f46k40.h: 16943:     struct {
[s S839 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S839 . TRISA0 TRISA1 TRISA2 TRISA3 TRISA4 TRISA5 TRISA6 TRISA7 ]
"16942
[; ;./pic18f46k40.h: 16942: typedef union {
[u S838 `S839 1 ]
[n S838 . . ]
"16954
[; ;./pic18f46k40.h: 16954: extern volatile TRISAbits_t TRISAbits __attribute__((address(0xF88)));
[v _TRISAbits `VS838 ~T0 @X0 0 e@3976 ]
"9830
[; ;./pic18f46k40.h: 9830:     struct {
[s S512 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S512 . ANSELD0 ANSELD1 ANSELD2 ANSELD3 ANSELD4 ANSELD5 ANSELD6 ANSELD7 ]
"9829
[; ;./pic18f46k40.h: 9829: typedef union {
[u S511 `S512 1 ]
[n S511 . . ]
"9841
[; ;./pic18f46k40.h: 9841: extern volatile ANSELDbits_t ANSELDbits __attribute__((address(0xF26)));
[v _ANSELDbits `VS511 ~T0 @X0 0 e@3878 ]
"17309
[; ;./pic18f46k40.h: 17309:     struct {
[s S851 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S851 . TRISD0 TRISD1 TRISD2 TRISD3 TRISD4 TRISD5 TRISD6 TRISD7 ]
"17308
[; ;./pic18f46k40.h: 17308: typedef union {
[u S850 `S851 1 ]
[n S850 . . ]
"17320
[; ;./pic18f46k40.h: 17320: extern volatile TRISDbits_t TRISDbits __attribute__((address(0xF8B)));
[v _TRISDbits `VS850 ~T0 @X0 0 e@3979 ]
"10095
[; ;./pic18f46k40.h: 10095:     struct {
[s S528 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S528 . ANSELE0 ANSELE1 ANSELE2 ]
"10094
[; ;./pic18f46k40.h: 10094: typedef union {
[u S527 `S528 1 ]
[n S527 . . ]
"10101
[; ;./pic18f46k40.h: 10101: extern volatile ANSELEbits_t ANSELEbits __attribute__((address(0xF2E)));
[v _ANSELEbits `VS527 ~T0 @X0 0 e@3886 ]
"17431
[; ;./pic18f46k40.h: 17431:     struct {
[s S855 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S855 . TRISE0 TRISE1 TRISE2 ]
"17430
[; ;./pic18f46k40.h: 17430: typedef union {
[u S854 `S855 1 ]
[n S854 . . ]
"17437
[; ;./pic18f46k40.h: 17437: extern volatile TRISEbits_t TRISEbits __attribute__((address(0xF8C)));
[v _TRISEbits `VS854 ~T0 @X0 0 e@3980 ]
"6443
[; ;./pic18f46k40.h: 6443:     struct {
[s S379 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S379 . CCP1MD CCP2MD PWM3MD PWM4MD ]
"6442
[; ;./pic18f46k40.h: 6442: typedef union {
[u S378 `S379 1 ]
[n S378 . . ]
"6450
[; ;./pic18f46k40.h: 6450: extern volatile PMD3bits_t PMD3bits __attribute__((address(0xEE4)));
[v _PMD3bits `VS378 ~T0 @X0 0 e@3812 ]
"21434
[; ;./pic18f46k40.h: 21434:     struct {
[s S1116 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1116 . MODE FMT OUT . EN ]
"21441
[; ;./pic18f46k40.h: 21441:     struct {
[s S1117 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1117 . MODE0 MODE1 MODE2 MODE3 ]
"21447
[; ;./pic18f46k40.h: 21447:     struct {
[s S1118 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1118 . CCP2MODE CCP2FMT CCP2OUT . CCP2EN ]
"21454
[; ;./pic18f46k40.h: 21454:     struct {
[s S1119 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1119 . CCP2MODE0 CCP2MODE1 CCP2MODE2 CCP2MODE3 ]
"21460
[; ;./pic18f46k40.h: 21460:     struct {
[s S1120 :7 `uc 1 :1 `uc 1 ]
[n S1120 . . P2M1 ]
"21433
[; ;./pic18f46k40.h: 21433: typedef union {
[u S1115 `S1116 1 `S1117 1 `S1118 1 `S1119 1 `S1120 1 ]
[n S1115 . . . . . . ]
"21465
[; ;./pic18f46k40.h: 21465: extern volatile CCP2CONbits_t CCP2CONbits __attribute__((address(0xFA8)));
[v _CCP2CONbits `VS1115 ~T0 @X0 0 e@4008 ]
"5098
[; ;./pic18f46k40.h: 5098:     struct {
[s S315 :1 `uc 1 :1 `uc 1 ]
[n S315 . CCP1IF CCP2IF ]
"5097
[; ;./pic18f46k40.h: 5097: typedef union {
[u S314 `S315 1 ]
[n S314 . . ]
"5103
[; ;./pic18f46k40.h: 5103: extern volatile PIR6bits_t PIR6bits __attribute__((address(0xED0)));
[v _PIR6bits `VS314 ~T0 @X0 0 e@3792 ]
"4724
[; ;./pic18f46k40.h: 4724:     struct {
[s S295 :1 `uc 1 :1 `uc 1 ]
[n S295 . CCP1IE CCP2IE ]
"4723
[; ;./pic18f46k40.h: 4723: typedef union {
[u S294 `S295 1 ]
[n S294 . . ]
"4729
[; ;./pic18f46k40.h: 4729: extern volatile PIE6bits_t PIE6bits __attribute__((address(0xEC8)));
[v _PIE6bits `VS294 ~T0 @X0 0 e@3784 ]
"26872
[; ;./pic18f46k40.h: 26872:     struct {
[s S1392 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1392 . T0OUTPS T016BIT T0OUT . T0EN ]
"26879
[; ;./pic18f46k40.h: 26879:     struct {
[s S1393 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1393 . T0OUTPS0 T0OUTPS1 T0OUTPS2 T0OUTPS3 ]
"26871
[; ;./pic18f46k40.h: 26871: typedef union {
[u S1391 `S1392 1 `S1393 1 ]
[n S1391 . . . ]
"26886
[; ;./pic18f46k40.h: 26886: extern volatile T0CON0bits_t T0CON0bits __attribute__((address(0xFD5)));
[v _T0CON0bits `VS1391 ~T0 @X0 0 e@4053 ]
"26937
[; ;./pic18f46k40.h: 26937:     struct {
[s S1395 :4 `uc 1 :1 `uc 1 :3 `uc 1 ]
[n S1395 . T0CKPS T0ASYNC T0CS ]
"26942
[; ;./pic18f46k40.h: 26942:     struct {
[s S1396 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1396 . T0CKPS0 T0CKPS1 T0CKPS2 T0CKPS3 . T0CS0 T0CS1 T0CS2 ]
"26952
[; ;./pic18f46k40.h: 26952:     struct {
[s S1397 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1397 . T0PS0 T0PS1 T0PS2 T0PS3 ]
"26958
[; ;./pic18f46k40.h: 26958:     struct {
[s S1398 :4 `uc 1 ]
[n S1398 . T0PS ]
"26936
[; ;./pic18f46k40.h: 26936: typedef union {
[u S1394 `S1395 1 `S1396 1 `S1397 1 `S1398 1 ]
[n S1394 . . . . . ]
"26962
[; ;./pic18f46k40.h: 26962: extern volatile T0CON1bits_t T0CON1bits __attribute__((address(0xFD6)));
[v _T0CON1bits `VS1394 ~T0 @X0 0 e@4054 ]
"4391
[; ;./pic18f46k40.h: 4391:     struct {
[s S279 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S279 . INT0IE INT1IE INT2IE . IOCIE TMR0IE ]
"4390
[; ;./pic18f46k40.h: 4390: typedef union {
[u S278 `S279 1 ]
[n S278 . . ]
"4400
[; ;./pic18f46k40.h: 4400: extern volatile PIE0bits_t PIE0bits __attribute__((address(0xEC2)));
[v _PIE0bits `VS278 ~T0 @X0 0 e@3778 ]
"27764
[; ;./pic18f46k40.h: 27764:     struct {
[s S1455 :1 `uc 1 :1 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1455 . INT0EDG INT1EDG INT2EDG . IPEN PEIE_GIEL GIE_GIEH ]
"27773
[; ;./pic18f46k40.h: 27773:     struct {
[s S1456 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1456 . . PEIE GIE ]
"27778
[; ;./pic18f46k40.h: 27778:     struct {
[s S1457 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1457 . . GIEL GIEH ]
"27763
[; ;./pic18f46k40.h: 27763: typedef union {
[u S1454 `S1455 1 `S1456 1 `S1457 1 ]
[n S1454 . . . . ]
"27784
[; ;./pic18f46k40.h: 27784: extern volatile INTCONbits_t INTCONbits __attribute__((address(0xFF2)));
[v _INTCONbits `VS1454 ~T0 @X0 0 e@4082 ]
"6398
[; ;./pic18f46k40.h: 6398:     struct {
[s S377 :1 `uc 1 :1 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S377 . ZCDMD CMP1MD CMP2MD . ADCMD DACMD ]
"6397
[; ;./pic18f46k40.h: 6397: typedef union {
[u S376 `S377 1 ]
[n S376 . . ]
"6407
[; ;./pic18f46k40.h: 6407: extern volatile PMD2bits_t PMD2bits __attribute__((address(0xEE3)));
[v _PMD2bits `VS376 ~T0 @X0 0 e@3811 ]
"13865
[; ;./pic18f46k40.h: 13865:     struct {
[s S713 :6 `uc 1 ]
[n S713 . ADPCH ]
"13868
[; ;./pic18f46k40.h: 13868:     struct {
[s S714 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S714 . ADPCH0 ADPCH1 ADPCH2 ADPCH3 ADPCH4 ADPCH5 ]
"13864
[; ;./pic18f46k40.h: 13864: typedef union {
[u S712 `S713 1 `S714 1 ]
[n S712 . . . ]
"13877
[; ;./pic18f46k40.h: 13877: extern volatile ADPCHbits_t ADPCHbits __attribute__((address(0xF5F)));
[v _ADPCHbits `VS712 ~T0 @X0 0 e@3935 ]
"13445
[; ;./pic18f46k40.h: 13445:     struct {
[s S693 :2 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S693 . ADPREF . ADNREF ]
"13450
[; ;./pic18f46k40.h: 13450:     struct {
[s S694 :1 `uc 1 :1 `uc 1 ]
[n S694 . ADPREF0 ADPREF1 ]
"13444
[; ;./pic18f46k40.h: 13444: typedef union {
[u S692 `S693 1 `S694 1 ]
[n S692 . . . ]
"13455
[; ;./pic18f46k40.h: 13455: extern volatile ADREFbits_t ADREFbits __attribute__((address(0xF58)));
[v _ADREFbits `VS692 ~T0 @X0 0 e@3928 ]
"13381
[; ;./pic18f46k40.h: 13381: extern volatile unsigned char ADCLK __attribute__((address(0xF57)));
[v _ADCLK `Vuc ~T0 @X0 0 e@3927 ]
"13667
[; ;./pic18f46k40.h: 13667: extern volatile unsigned char ADACQ __attribute__((address(0xF5C)));
[v _ADACQ `Vuc ~T0 @X0 0 e@3932 ]
"30 ./function.h
[; ;./function.h: 30: void I2C_init(void);
[v _I2C_init `(v ~T0 @X0 0 ef ]
"75
[; ;./function.h: 75: void send_string_u1(char *s);
[v _send_string_u1 `(v ~T0 @X0 0 ef1`*uc ]
[p mainexit ]
"67
[; ;./function.h: 67: void ModelSelection(void);
[v _ModelSelection `(v ~T0 @X0 0 ef ]
"52
[; ;./function.h: 52: unsigned int Read_EEPROM(unsigned int);
[v _Read_EEPROM `(ui ~T0 @X0 0 ef1`ui ]
"51
[; ;./function.h: 51: void Write_EEPROM(unsigned int,unsigned int);
[v _Write_EEPROM `(v ~T0 @X0 0 ef2`ui`ui ]
"17643 ./pic18f46k40.h
[; ;./pic18f46k40.h: 17643:     struct {
[s S865 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S865 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"17653
[; ;./pic18f46k40.h: 17653:     struct {
[s S866 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S866 . . CCP2 PA1 ]
"17658
[; ;./pic18f46k40.h: 17658:     struct {
[s S867 :1 `uc 1 :1 `uc 1 ]
[n S867 . . PA2 ]
"17642
[; ;./pic18f46k40.h: 17642: typedef union {
[u S864 `S865 1 `S866 1 `S867 1 ]
[n S864 . . . . ]
"17663
[; ;./pic18f46k40.h: 17663: extern volatile PORTCbits_t PORTCbits __attribute__((address(0xF8F)));
[v _PORTCbits `VS864 ~T0 @X0 0 e@3983 ]
"18 ./function.h
[; ;./function.h: 18: void Modelcalibration(void);
[v _Modelcalibration `(v ~T0 @X0 0 ef ]
"174 ./variable.h
[; ;./variable.h: 174: void USART_initialize(void);
[v _USART_initialize `(v ~T0 @X0 0 ef ]
"77 ./function.h
[; ;./function.h: 77: void USART2_initialize(void);
[v _USART2_initialize `(v ~T0 @X0 0 ef ]
"74
[; ;./function.h: 74: void TRANS1(unsigned char data);
[v _TRANS1 `(v ~T0 @X0 0 ef1`uc ]
"176 ./variable.h
[; ;./variable.h: 176: void TRANSNUM(unsigned int iTemp);
[v _TRANSNUM `(v ~T0 @X0 0 ef1`ui ]
"27 ./function.h
[; ;./function.h: 27: void TIME(unsigned int iTemp2) ;
[v _TIME `(v ~T0 @X0 0 ef1`ui ]
"177 ./variable.h
[; ;./variable.h: 177:  void TRANSNUM2(unsigned int iTemp2);
[v _TRANSNUM2 `(v ~T0 @X0 0 ef1`ui ]
"22 ./function.h
[; ;./function.h: 22: unsigned int MMACCLookup(unsigned int iCurrent);
[v _MMACCLookup `(ui ~T0 @X0 0 ef1`ui ]
"39
[; ;./function.h: 39: void I2C_Write(unsigned int data_out);
[v _I2C_Write `(v ~T0 @X0 0 ef1`ui ]
"44
[; ;./function.h: 44: void Read_RockerSwitch(void);
[v _Read_RockerSwitch `(v ~T0 @X0 0 ef ]
"48
[; ;./function.h: 48: void Read_VRD_Switch(void);
[v _Read_VRD_Switch `(v ~T0 @X0 0 ef ]
"16393 ./pic18f46k40.h
[; ;./pic18f46k40.h: 16393:     struct {
[s S819 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S819 . LATA0 LATA1 LATA2 LATA3 LATA4 LATA5 LATA6 LATA7 ]
"16403
[; ;./pic18f46k40.h: 16403:     struct {
[s S820 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S820 . LA0 LA1 LA2 LA3 LA4 LA5 LA6 LA7 ]
"16392
[; ;./pic18f46k40.h: 16392: typedef union {
[u S818 `S819 1 `S820 1 ]
[n S818 . . . ]
"16414
[; ;./pic18f46k40.h: 16414: extern volatile LATAbits_t LATAbits __attribute__((address(0xF83)));
[v _LATAbits `VS818 ~T0 @X0 0 e@3971 ]
"4 ./function.h
[; ;./function.h: 4: void hex_to_dec_curr(unsigned int);
[v _hex_to_dec_curr `(v ~T0 @X0 0 ef1`ui ]
"5
[; ;./function.h: 5: void hex_to_dec_volt(unsigned int);
[v _hex_to_dec_volt `(v ~T0 @X0 0 ef1`ui ]
"68
[; ;./function.h: 68: void CheckPinShort(void);
[v _CheckPinShort `(v ~T0 @X0 0 ef ]
"17572 ./pic18f46k40.h
[; ;./pic18f46k40.h: 17572:     struct {
[s S862 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S862 . RB0 RB1 RB2 RB3 RB4 RB5 RB6 RB7 ]
"17582
[; ;./pic18f46k40.h: 17582:     struct {
[s S863 :3 `uc 1 :1 `uc 1 ]
[n S863 . . CCP2_PA2 ]
"17571
[; ;./pic18f46k40.h: 17571: typedef union {
[u S861 `S862 1 `S863 1 ]
[n S861 . . . ]
"17587
[; ;./pic18f46k40.h: 17587: extern volatile PORTBbits_t PORTBbits __attribute__((address(0xF8E)));
[v _PORTBbits `VS861 ~T0 @X0 0 e@3982 ]
"60 ./function.h
[; ;./function.h: 60: void Write_byte(unsigned int data,unsigned int adrs);
[v _Write_byte `(v ~T0 @X0 0 ef2`ui`ui ]
"61
[; ;./function.h: 61: unsigned char Read_byte(unsigned int adrs);
[v _Read_byte `(uc ~T0 @X0 0 ef1`ui ]
"16307 ./pic18f46k40.h
[; ;./pic18f46k40.h: 16307:     struct {
[s S814 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :2 `uc 1 ]
[n S814 . RD WR WREN WRERR FREE . NVMREG ]
"16316
[; ;./pic18f46k40.h: 16316:     struct {
[s S815 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S815 . . NVMREG0 NVMREG1 ]
"16306
[; ;./pic18f46k40.h: 16306: typedef union {
[u S813 `S814 1 `S815 1 ]
[n S813 . . . ]
"16322
[; ;./pic18f46k40.h: 16322: extern volatile NVMCON1bits_t NVMCON1bits __attribute__((address(0xF81)));
[v _NVMCON1bits `VS813 ~T0 @X0 0 e@3969 ]
"16175
[; ;./pic18f46k40.h: 16175: extern volatile unsigned char NVMADRH __attribute__((address(0xF7F)));
[v _NVMADRH `Vuc ~T0 @X0 0 e@3967 ]
"16047
[; ;./pic18f46k40.h: 16047: extern volatile unsigned char NVMADRL __attribute__((address(0xF7E)));
[v _NVMADRL `Vuc ~T0 @X0 0 e@3966 ]
"16231
[; ;./pic18f46k40.h: 16231: extern volatile unsigned char NVMDAT __attribute__((address(0xF80)));
[v _NVMDAT `Vuc ~T0 @X0 0 e@3968 ]
"16367
[; ;./pic18f46k40.h: 16367: extern volatile unsigned char NVMCON2 __attribute__((address(0xF82)));
[v _NVMCON2 `Vuc ~T0 @X0 0 e@3970 ]
"5124
[; ;./pic18f46k40.h: 5124:     struct {
[s S317 :1 `uc 1 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S317 . CWGIF . NVMIF CRCIF SCANIF ]
"5131
[; ;./pic18f46k40.h: 5131:     struct {
[s S318 :1 `uc 1 ]
[n S318 . CWG1IF ]
"5123
[; ;./pic18f46k40.h: 5123: typedef union {
[u S316 `S317 1 `S318 1 ]
[n S316 . . . ]
"5135
[; ;./pic18f46k40.h: 5135: extern volatile PIR7bits_t PIR7bits __attribute__((address(0xED1)));
[v _PIR7bits `VS316 ~T0 @X0 0 e@3793 ]
"6481
[; ;./pic18f46k40.h: 6481:     struct {
[s S381 :1 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S381 . CWGMD . MSSP1MD MSSP2MD UART1MD UART2MD ]
"6489
[; ;./pic18f46k40.h: 6489:     struct {
[s S382 :1 `uc 1 ]
[n S382 . CWG1MD ]
"6480
[; ;./pic18f46k40.h: 6480: typedef union {
[u S380 `S381 1 `S382 1 ]
[n S380 . . . ]
"6493
[; ;./pic18f46k40.h: 6493: extern volatile PMD4bits_t PMD4bits __attribute__((address(0xEE5)));
[v _PMD4bits `VS380 ~T0 @X0 0 e@3813 ]
"7560
[; ;./pic18f46k40.h: 7560: extern volatile unsigned char RC7PPS __attribute__((address(0xEFE)));
[v _RC7PPS `Vuc ~T0 @X0 0 e@3838 ]
"7516
[; ;./pic18f46k40.h: 7516: extern volatile unsigned char RC6PPS __attribute__((address(0xEFD)));
[v _RC6PPS `Vuc ~T0 @X0 0 e@3837 ]
"19716
[; ;./pic18f46k40.h: 19716:     struct {
[s S992 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S992 . TX9D TRMT BRGH SENDB SYNC TXEN TX9 CSRC ]
"19726
[; ;./pic18f46k40.h: 19726:     struct {
[s S993 :6 `uc 1 :1 `uc 1 ]
[n S993 . . TX8_9 ]
"19730
[; ;./pic18f46k40.h: 19730:     struct {
[s S994 :1 `uc 1 ]
[n S994 . TXD8 ]
"19733
[; ;./pic18f46k40.h: 19733:     struct {
[s S995 :2 `uc 1 :1 `uc 1 ]
[n S995 . . BRGH1 ]
"19737
[; ;./pic18f46k40.h: 19737:     struct {
[s S996 :7 `uc 1 :1 `uc 1 ]
[n S996 . . CSRC1 ]
"19741
[; ;./pic18f46k40.h: 19741:     struct {
[s S997 :3 `uc 1 :1 `uc 1 ]
[n S997 . . SENDB1 ]
"19745
[; ;./pic18f46k40.h: 19745:     struct {
[s S998 :4 `uc 1 :1 `uc 1 ]
[n S998 . . SYNC1 ]
"19749
[; ;./pic18f46k40.h: 19749:     struct {
[s S999 :1 `uc 1 :1 `uc 1 ]
[n S999 . . TRMT1 ]
"19753
[; ;./pic18f46k40.h: 19753:     struct {
[s S1000 :6 `uc 1 :1 `uc 1 ]
[n S1000 . . TX91 ]
"19757
[; ;./pic18f46k40.h: 19757:     struct {
[s S1001 :1 `uc 1 ]
[n S1001 . TX9D1 ]
"19760
[; ;./pic18f46k40.h: 19760:     struct {
[s S1002 :5 `uc 1 :1 `uc 1 ]
[n S1002 . . TXEN1 ]
"19715
[; ;./pic18f46k40.h: 19715: typedef union {
[u S991 `S992 1 `S993 1 `S994 1 `S995 1 `S996 1 `S997 1 `S998 1 `S999 1 `S1000 1 `S1001 1 `S1002 1 ]
[n S991 . . . . . . . . . . . . ]
"19765
[; ;./pic18f46k40.h: 19765: extern volatile TXSTA1bits_t TXSTA1bits __attribute__((address(0xF9E)));
[v _TXSTA1bits `VS991 ~T0 @X0 0 e@3998 ]
"19378
[; ;./pic18f46k40.h: 19378:     struct {
[s S968 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S968 . RX9D OERR FERR ADDEN CREN SREN RX9 SPEN ]
"19388
[; ;./pic18f46k40.h: 19388:     struct {
[s S969 :6 `uc 1 :1 `uc 1 ]
[n S969 . . RC8_9 ]
"19392
[; ;./pic18f46k40.h: 19392:     struct {
[s S970 :6 `uc 1 :1 `uc 1 ]
[n S970 . . RC9 ]
"19396
[; ;./pic18f46k40.h: 19396:     struct {
[s S971 :1 `uc 1 ]
[n S971 . RCD8 ]
"19399
[; ;./pic18f46k40.h: 19399:     struct {
[s S972 :5 `uc 1 :1 `uc 1 ]
[n S972 . . SRENA ]
"19377
[; ;./pic18f46k40.h: 19377: typedef union {
[u S967 `S968 1 `S969 1 `S970 1 `S971 1 `S972 1 ]
[n S967 . . . . . . ]
"19404
[; ;./pic18f46k40.h: 19404: extern volatile RCSTA1bits_t RCSTA1bits __attribute__((address(0xF9D)));
[v _RCSTA1bits `VS967 ~T0 @X0 0 e@3997 ]
"20025
[; ;./pic18f46k40.h: 20025:     struct {
[s S1016 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S1016 . ABDEN WUE . BRG16 SCKP . RCIDL ABDOVF ]
"20035
[; ;./pic18f46k40.h: 20035:     struct {
[s S1017 :1 `uc 1 ]
[n S1017 . ABDEN1 ]
"20038
[; ;./pic18f46k40.h: 20038:     struct {
[s S1018 :7 `uc 1 :1 `uc 1 ]
[n S1018 . . ABDOVF1 ]
"20042
[; ;./pic18f46k40.h: 20042:     struct {
[s S1019 :3 `uc 1 :1 `uc 1 ]
[n S1019 . . BRG161 ]
"20046
[; ;./pic18f46k40.h: 20046:     struct {
[s S1020 :4 `uc 1 :1 `uc 1 ]
[n S1020 . . CKTXP ]
"20050
[; ;./pic18f46k40.h: 20050:     struct {
[s S1021 :6 `uc 1 :1 `uc 1 ]
[n S1021 . . RCIDL1 ]
"20054
[; ;./pic18f46k40.h: 20054:     struct {
[s S1022 :6 `uc 1 :1 `uc 1 ]
[n S1022 . . RCMT ]
"20058
[; ;./pic18f46k40.h: 20058:     struct {
[s S1023 :6 `uc 1 :1 `uc 1 ]
[n S1023 . . RCMT1 ]
"20062
[; ;./pic18f46k40.h: 20062:     struct {
[s S1024 :4 `uc 1 :1 `uc 1 ]
[n S1024 . . SCKP1 ]
"20066
[; ;./pic18f46k40.h: 20066:     struct {
[s S1025 :4 `uc 1 :1 `uc 1 ]
[n S1025 . . TXCKP ]
"20070
[; ;./pic18f46k40.h: 20070:     struct {
[s S1026 :4 `uc 1 :1 `uc 1 ]
[n S1026 . . TXCKP1 ]
"20074
[; ;./pic18f46k40.h: 20074:     struct {
[s S1027 :1 `uc 1 :1 `uc 1 ]
[n S1027 . . WUE1 ]
"20078
[; ;./pic18f46k40.h: 20078:     struct {
[s S1028 :1 `uc 1 :1 `uc 1 ]
[n S1028 . . W4E ]
"20024
[; ;./pic18f46k40.h: 20024: typedef union {
[u S1015 `S1016 1 `S1017 1 `S1018 1 `S1019 1 `S1020 1 `S1021 1 `S1022 1 `S1023 1 `S1024 1 `S1025 1 `S1026 1 `S1027 1 `S1028 1 ]
[n S1015 . . . . . . . . . . . . . . ]
"20083
[; ;./pic18f46k40.h: 20083: extern volatile BAUD1CONbits_t BAUD1CONbits __attribute__((address(0xF9F)));
[v _BAUD1CONbits `VS1015 ~T0 @X0 0 e@3999 ]
"19149
[; ;./pic18f46k40.h: 19149: extern volatile unsigned char SP1BRGL __attribute__((address(0xF9B)));
[v _SP1BRGL `Vuc ~T0 @X0 0 e@3995 ]
"19219
[; ;./pic18f46k40.h: 19219: extern volatile unsigned char SP1BRGH __attribute__((address(0xF9C)));
[v _SP1BRGH `Vuc ~T0 @X0 0 e@3996 ]
"7208
[; ;./pic18f46k40.h: 7208: extern volatile unsigned char RB7PPS __attribute__((address(0xEF6)));
[v _RB7PPS `Vuc ~T0 @X0 0 e@3830 ]
"7164
[; ;./pic18f46k40.h: 7164: extern volatile unsigned char RB6PPS __attribute__((address(0xEF5)));
[v _RB6PPS `Vuc ~T0 @X0 0 e@3829 ]
"1703
[; ;./pic18f46k40.h: 1703:     struct {
[s S97 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S97 . TX9D TRMT BRGH SENDB SYNC TXEN TX9 CSRC ]
"1713
[; ;./pic18f46k40.h: 1713:     struct {
[s S98 :6 `uc 1 :1 `uc 1 ]
[n S98 . . TX8_92 ]
"1717
[; ;./pic18f46k40.h: 1717:     struct {
[s S99 :1 `uc 1 ]
[n S99 . TXD82 ]
"1702
[; ;./pic18f46k40.h: 1702: typedef union {
[u S96 `S97 1 `S98 1 `S99 1 ]
[n S96 . . . . ]
"1721
[; ;./pic18f46k40.h: 1721: extern volatile TXSTA2bits_t TXSTA2bits __attribute__((address(0xE9E)));
[v _TXSTA2bits `VS96 ~T0 @X0 0 e@3742 ]
"1538
[; ;./pic18f46k40.h: 1538:     struct {
[s S88 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S88 . RX9D OERR FERR ADDEN CREN SREN RX9 SPEN ]
"1548
[; ;./pic18f46k40.h: 1548:     struct {
[s S89 :6 `uc 1 :1 `uc 1 ]
[n S89 . . RC8_92 ]
"1552
[; ;./pic18f46k40.h: 1552:     struct {
[s S90 :6 `uc 1 :1 `uc 1 ]
[n S90 . . RC92 ]
"1556
[; ;./pic18f46k40.h: 1556:     struct {
[s S91 :1 `uc 1 ]
[n S91 . RCD82 ]
"1537
[; ;./pic18f46k40.h: 1537: typedef union {
[u S87 `S88 1 `S89 1 `S90 1 `S91 1 ]
[n S87 . . . . . ]
"1560
[; ;./pic18f46k40.h: 1560: extern volatile RCSTA2bits_t RCSTA2bits __attribute__((address(0xE9D)));
[v _RCSTA2bits `VS87 ~T0 @X0 0 e@3741 ]
"1791
[; ;./pic18f46k40.h: 1791:     struct {
[s S101 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S101 . ABDEN WUE . BRG16 SCKP . RCIDL ABDOVF ]
"1801
[; ;./pic18f46k40.h: 1801:     struct {
[s S102 :1 `uc 1 ]
[n S102 . ABDEN2 ]
"1804
[; ;./pic18f46k40.h: 1804:     struct {
[s S103 :7 `uc 1 :1 `uc 1 ]
[n S103 . . ABDOVF2 ]
"1808
[; ;./pic18f46k40.h: 1808:     struct {
[s S104 :3 `uc 1 :1 `uc 1 ]
[n S104 . . BRG162 ]
"1812
[; ;./pic18f46k40.h: 1812:     struct {
[s S105 :6 `uc 1 :1 `uc 1 ]
[n S105 . . RCIDL2 ]
"1816
[; ;./pic18f46k40.h: 1816:     struct {
[s S106 :6 `uc 1 :1 `uc 1 ]
[n S106 . . RCMT2 ]
"1820
[; ;./pic18f46k40.h: 1820:     struct {
[s S107 :4 `uc 1 :1 `uc 1 ]
[n S107 . . SCKP2 ]
"1824
[; ;./pic18f46k40.h: 1824:     struct {
[s S108 :4 `uc 1 :1 `uc 1 ]
[n S108 . . TXCKP2 ]
"1828
[; ;./pic18f46k40.h: 1828:     struct {
[s S109 :1 `uc 1 :1 `uc 1 ]
[n S109 . . WUE2 ]
"1790
[; ;./pic18f46k40.h: 1790: typedef union {
[u S100 `S101 1 `S102 1 `S103 1 `S104 1 `S105 1 `S106 1 `S107 1 `S108 1 `S109 1 ]
[n S100 . . . . . . . . . . ]
"1833
[; ;./pic18f46k40.h: 1833: extern volatile BAUD2CONbits_t BAUD2CONbits __attribute__((address(0xE9F)));
[v _BAUD2CONbits `VS100 ~T0 @X0 0 e@3743 ]
"1370
[; ;./pic18f46k40.h: 1370: extern volatile unsigned char SP2BRGL __attribute__((address(0xE9B)));
[v _SP2BRGL `Vuc ~T0 @X0 0 e@3739 ]
"1408
[; ;./pic18f46k40.h: 1408: extern volatile unsigned char SP2BRGH __attribute__((address(0xE9C)));
[v _SP2BRGH `Vuc ~T0 @X0 0 e@3740 ]
"19088
[; ;./pic18f46k40.h: 19088: extern volatile unsigned char TX1REG __attribute__((address(0xF9A)));
[v _TX1REG `Vuc ~T0 @X0 0 e@3994 ]
"1325
[; ;./pic18f46k40.h: 1325: extern volatile unsigned char TX2REG __attribute__((address(0xE9A)));
[v _TX2REG `Vuc ~T0 @X0 0 e@3738 ]
"54 ./pic18f46k40.h
[; ;./pic18f46k40.h: 54: __asm("RX2PPS equ 0E8Dh");
[; <" RX2PPS equ 0E8Dh ;# ">
"88
[; ;./pic18f46k40.h: 88: __asm("CK2PPS equ 0E8Eh");
[; <" CK2PPS equ 0E8Eh ;# ">
"93
[; ;./pic18f46k40.h: 93: __asm("TX2PPS equ 0E8Eh");
[; <" TX2PPS equ 0E8Eh ;# ">
"154
[; ;./pic18f46k40.h: 154: __asm("SSP2CLKPPS equ 0E8Fh");
[; <" SSP2CLKPPS equ 0E8Fh ;# ">
"188
[; ;./pic18f46k40.h: 188: __asm("SSP2DATPPS equ 0E90h");
[; <" SSP2DATPPS equ 0E90h ;# ">
"222
[; ;./pic18f46k40.h: 222: __asm("SSP2SSPPS equ 0E91h");
[; <" SSP2SSPPS equ 0E91h ;# ">
"256
[; ;./pic18f46k40.h: 256: __asm("SSP2BUF equ 0E92h");
[; <" SSP2BUF equ 0E92h ;# ">
"276
[; ;./pic18f46k40.h: 276: __asm("SSP2ADD equ 0E93h");
[; <" SSP2ADD equ 0E93h ;# ">
"396
[; ;./pic18f46k40.h: 396: __asm("SSP2MSK equ 0E94h");
[; <" SSP2MSK equ 0E94h ;# ">
"466
[; ;./pic18f46k40.h: 466: __asm("SSP2STAT equ 0E95h");
[; <" SSP2STAT equ 0E95h ;# ">
"920
[; ;./pic18f46k40.h: 920: __asm("SSP2CON1 equ 0E96h");
[; <" SSP2CON1 equ 0E96h ;# ">
"1040
[; ;./pic18f46k40.h: 1040: __asm("SSP2CON2 equ 0E97h");
[; <" SSP2CON2 equ 0E97h ;# ">
"1227
[; ;./pic18f46k40.h: 1227: __asm("SSP2CON3 equ 0E98h");
[; <" SSP2CON3 equ 0E98h ;# ">
"1289
[; ;./pic18f46k40.h: 1289: __asm("RC2REG equ 0E99h");
[; <" RC2REG equ 0E99h ;# ">
"1294
[; ;./pic18f46k40.h: 1294: __asm("RCREG2 equ 0E99h");
[; <" RCREG2 equ 0E99h ;# ">
"1327
[; ;./pic18f46k40.h: 1327: __asm("TX2REG equ 0E9Ah");
[; <" TX2REG equ 0E9Ah ;# ">
"1332
[; ;./pic18f46k40.h: 1332: __asm("TXREG2 equ 0E9Ah");
[; <" TXREG2 equ 0E9Ah ;# ">
"1365
[; ;./pic18f46k40.h: 1365: __asm("SP2BRG equ 0E9Bh");
[; <" SP2BRG equ 0E9Bh ;# ">
"1372
[; ;./pic18f46k40.h: 1372: __asm("SP2BRGL equ 0E9Bh");
[; <" SP2BRGL equ 0E9Bh ;# ">
"1377
[; ;./pic18f46k40.h: 1377: __asm("SPBRG2 equ 0E9Bh");
[; <" SPBRG2 equ 0E9Bh ;# ">
"1410
[; ;./pic18f46k40.h: 1410: __asm("SP2BRGH equ 0E9Ch");
[; <" SP2BRGH equ 0E9Ch ;# ">
"1415
[; ;./pic18f46k40.h: 1415: __asm("SPBRGH2 equ 0E9Ch");
[; <" SPBRGH2 equ 0E9Ch ;# ">
"1448
[; ;./pic18f46k40.h: 1448: __asm("RC2STA equ 0E9Dh");
[; <" RC2STA equ 0E9Dh ;# ">
"1453
[; ;./pic18f46k40.h: 1453: __asm("RCSTA2 equ 0E9Dh");
[; <" RCSTA2 equ 0E9Dh ;# ">
"1622
[; ;./pic18f46k40.h: 1622: __asm("TX2STA equ 0E9Eh");
[; <" TX2STA equ 0E9Eh ;# ">
"1627
[; ;./pic18f46k40.h: 1627: __asm("TXSTA2 equ 0E9Eh");
[; <" TXSTA2 equ 0E9Eh ;# ">
"1778
[; ;./pic18f46k40.h: 1778: __asm("BAUD2CON equ 0E9Fh");
[; <" BAUD2CON equ 0E9Fh ;# ">
"1783
[; ;./pic18f46k40.h: 1783: __asm("BAUDCON2 equ 0E9Fh");
[; <" BAUDCON2 equ 0E9Fh ;# ">
"1787
[; ;./pic18f46k40.h: 1787: __asm("BAUDCTL2 equ 0E9Fh");
[; <" BAUDCTL2 equ 0E9Fh ;# ">
"2141
[; ;./pic18f46k40.h: 2141: __asm("PPSLOCK equ 0EA0h");
[; <" PPSLOCK equ 0EA0h ;# ">
"2161
[; ;./pic18f46k40.h: 2161: __asm("INT0PPS equ 0EA1h");
[; <" INT0PPS equ 0EA1h ;# ">
"2221
[; ;./pic18f46k40.h: 2221: __asm("INT1PPS equ 0EA2h");
[; <" INT1PPS equ 0EA2h ;# ">
"2281
[; ;./pic18f46k40.h: 2281: __asm("INT2PPS equ 0EA3h");
[; <" INT2PPS equ 0EA3h ;# ">
"2341
[; ;./pic18f46k40.h: 2341: __asm("T0CKIPPS equ 0EA4h");
[; <" T0CKIPPS equ 0EA4h ;# ">
"2401
[; ;./pic18f46k40.h: 2401: __asm("T1CKIPPS equ 0EA5h");
[; <" T1CKIPPS equ 0EA5h ;# ">
"2467
[; ;./pic18f46k40.h: 2467: __asm("T1GPPS equ 0EA6h");
[; <" T1GPPS equ 0EA6h ;# ">
"2533
[; ;./pic18f46k40.h: 2533: __asm("T3CKIPPS equ 0EA7h");
[; <" T3CKIPPS equ 0EA7h ;# ">
"2599
[; ;./pic18f46k40.h: 2599: __asm("T3GPPS equ 0EA8h");
[; <" T3GPPS equ 0EA8h ;# ">
"2665
[; ;./pic18f46k40.h: 2665: __asm("T5CKIPPS equ 0EA9h");
[; <" T5CKIPPS equ 0EA9h ;# ">
"2731
[; ;./pic18f46k40.h: 2731: __asm("T5GPPS equ 0EAAh");
[; <" T5GPPS equ 0EAAh ;# ">
"2797
[; ;./pic18f46k40.h: 2797: __asm("T2INPPS equ 0EABh");
[; <" T2INPPS equ 0EABh ;# ">
"2863
[; ;./pic18f46k40.h: 2863: __asm("T4INPPS equ 0EACh");
[; <" T4INPPS equ 0EACh ;# ">
"2929
[; ;./pic18f46k40.h: 2929: __asm("T6INPPS equ 0EADh");
[; <" T6INPPS equ 0EADh ;# ">
"2995
[; ;./pic18f46k40.h: 2995: __asm("ADACTPPS equ 0EAEh");
[; <" ADACTPPS equ 0EAEh ;# ">
"3061
[; ;./pic18f46k40.h: 3061: __asm("CCP1PPS equ 0EAFh");
[; <" CCP1PPS equ 0EAFh ;# ">
"3127
[; ;./pic18f46k40.h: 3127: __asm("CCP2PPS equ 0EB0h");
[; <" CCP2PPS equ 0EB0h ;# ">
"3193
[; ;./pic18f46k40.h: 3193: __asm("CWG1PPS equ 0EB1h");
[; <" CWG1PPS equ 0EB1h ;# ">
"3198
[; ;./pic18f46k40.h: 3198: __asm("CWGINPPS equ 0EB1h");
[; <" CWGINPPS equ 0EB1h ;# ">
"3403
[; ;./pic18f46k40.h: 3403: __asm("MDCARLPPS equ 0EB2h");
[; <" MDCARLPPS equ 0EB2h ;# ">
"3469
[; ;./pic18f46k40.h: 3469: __asm("MDCARHPPS equ 0EB3h");
[; <" MDCARHPPS equ 0EB3h ;# ">
"3535
[; ;./pic18f46k40.h: 3535: __asm("MDSRCPPS equ 0EB4h");
[; <" MDSRCPPS equ 0EB4h ;# ">
"3601
[; ;./pic18f46k40.h: 3601: __asm("RX1PPS equ 0EB5h");
[; <" RX1PPS equ 0EB5h ;# ">
"3606
[; ;./pic18f46k40.h: 3606: __asm("RXPPS equ 0EB5h");
[; <" RXPPS equ 0EB5h ;# ">
"3667
[; ;./pic18f46k40.h: 3667: __asm("CK1PPS equ 0EB6h");
[; <" CK1PPS equ 0EB6h ;# ">
"3672
[; ;./pic18f46k40.h: 3672: __asm("TX1PPS equ 0EB6h");
[; <" TX1PPS equ 0EB6h ;# ">
"3676
[; ;./pic18f46k40.h: 3676: __asm("CKPPS equ 0EB6h");
[; <" CKPPS equ 0EB6h ;# ">
"3680
[; ;./pic18f46k40.h: 3680: __asm("TXPPS equ 0EB6h");
[; <" TXPPS equ 0EB6h ;# ">
"3793
[; ;./pic18f46k40.h: 3793: __asm("SSP1CLKPPS equ 0EB7h");
[; <" SSP1CLKPPS equ 0EB7h ;# ">
"3798
[; ;./pic18f46k40.h: 3798: __asm("SSPCLKPPS equ 0EB7h");
[; <" SSPCLKPPS equ 0EB7h ;# ">
"3859
[; ;./pic18f46k40.h: 3859: __asm("SSP1DATPPS equ 0EB8h");
[; <" SSP1DATPPS equ 0EB8h ;# ">
"3864
[; ;./pic18f46k40.h: 3864: __asm("SSPDATPPS equ 0EB8h");
[; <" SSPDATPPS equ 0EB8h ;# ">
"3925
[; ;./pic18f46k40.h: 3925: __asm("SSP1SSPPS equ 0EB9h");
[; <" SSP1SSPPS equ 0EB9h ;# ">
"3930
[; ;./pic18f46k40.h: 3930: __asm("SSPSSPPS equ 0EB9h");
[; <" SSPSSPPS equ 0EB9h ;# ">
"3991
[; ;./pic18f46k40.h: 3991: __asm("IPR0 equ 0EBAh");
[; <" IPR0 equ 0EBAh ;# ">
"4036
[; ;./pic18f46k40.h: 4036: __asm("IPR1 equ 0EBBh");
[; <" IPR1 equ 0EBBh ;# ">
"4084
[; ;./pic18f46k40.h: 4084: __asm("IPR2 equ 0EBCh");
[; <" IPR2 equ 0EBCh ;# ">
"4132
[; ;./pic18f46k40.h: 4132: __asm("IPR3 equ 0EBDh");
[; <" IPR3 equ 0EBDh ;# ">
"4210
[; ;./pic18f46k40.h: 4210: __asm("IPR4 equ 0EBEh");
[; <" IPR4 equ 0EBEh ;# ">
"4268
[; ;./pic18f46k40.h: 4268: __asm("IPR5 equ 0EBFh");
[; <" IPR5 equ 0EBFh ;# ">
"4314
[; ;./pic18f46k40.h: 4314: __asm("IPR6 equ 0EC0h");
[; <" IPR6 equ 0EC0h ;# ">
"4340
[; ;./pic18f46k40.h: 4340: __asm("IPR7 equ 0EC1h");
[; <" IPR7 equ 0EC1h ;# ">
"4387
[; ;./pic18f46k40.h: 4387: __asm("PIE0 equ 0EC2h");
[; <" PIE0 equ 0EC2h ;# ">
"4432
[; ;./pic18f46k40.h: 4432: __asm("PIE1 equ 0EC3h");
[; <" PIE1 equ 0EC3h ;# ">
"4480
[; ;./pic18f46k40.h: 4480: __asm("PIE2 equ 0EC4h");
[; <" PIE2 equ 0EC4h ;# ">
"4528
[; ;./pic18f46k40.h: 4528: __asm("PIE3 equ 0EC5h");
[; <" PIE3 equ 0EC5h ;# ">
"4638
[; ;./pic18f46k40.h: 4638: __asm("PIE4 equ 0EC6h");
[; <" PIE4 equ 0EC6h ;# ">
"4688
[; ;./pic18f46k40.h: 4688: __asm("PIE5 equ 0EC7h");
[; <" PIE5 equ 0EC7h ;# ">
"4720
[; ;./pic18f46k40.h: 4720: __asm("PIE6 equ 0EC8h");
[; <" PIE6 equ 0EC8h ;# ">
"4746
[; ;./pic18f46k40.h: 4746: __asm("PIE7 equ 0EC9h");
[; <" PIE7 equ 0EC9h ;# ">
"4793
[; ;./pic18f46k40.h: 4793: __asm("PIR0 equ 0ECAh");
[; <" PIR0 equ 0ECAh ;# ">
"4838
[; ;./pic18f46k40.h: 4838: __asm("PIR1 equ 0ECBh");
[; <" PIR1 equ 0ECBh ;# ">
"4886
[; ;./pic18f46k40.h: 4886: __asm("PIR2 equ 0ECCh");
[; <" PIR2 equ 0ECCh ;# ">
"4934
[; ;./pic18f46k40.h: 4934: __asm("PIR3 equ 0ECDh");
[; <" PIR3 equ 0ECDh ;# ">
"5012
[; ;./pic18f46k40.h: 5012: __asm("PIR4 equ 0ECEh");
[; <" PIR4 equ 0ECEh ;# ">
"5062
[; ;./pic18f46k40.h: 5062: __asm("PIR5 equ 0ECFh");
[; <" PIR5 equ 0ECFh ;# ">
"5094
[; ;./pic18f46k40.h: 5094: __asm("PIR6 equ 0ED0h");
[; <" PIR6 equ 0ED0h ;# ">
"5120
[; ;./pic18f46k40.h: 5120: __asm("PIR7 equ 0ED1h");
[; <" PIR7 equ 0ED1h ;# ">
"5167
[; ;./pic18f46k40.h: 5167: __asm("WDTCON0 equ 0ED2h");
[; <" WDTCON0 equ 0ED2h ;# ">
"5242
[; ;./pic18f46k40.h: 5242: __asm("WDTCON1 equ 0ED3h");
[; <" WDTCON1 equ 0ED3h ;# ">
"5336
[; ;./pic18f46k40.h: 5336: __asm("WDTPSL equ 0ED4h");
[; <" WDTPSL equ 0ED4h ;# ">
"5464
[; ;./pic18f46k40.h: 5464: __asm("WDTPSH equ 0ED5h");
[; <" WDTPSH equ 0ED5h ;# ">
"5592
[; ;./pic18f46k40.h: 5592: __asm("WDTTMR equ 0ED6h");
[; <" WDTTMR equ 0ED6h ;# ">
"5680
[; ;./pic18f46k40.h: 5680: __asm("CPUDOZE equ 0ED7h");
[; <" CPUDOZE equ 0ED7h ;# ">
"5745
[; ;./pic18f46k40.h: 5745: __asm("OSCCON1 equ 0ED8h");
[; <" OSCCON1 equ 0ED8h ;# ">
"5815
[; ;./pic18f46k40.h: 5815: __asm("OSCCON2 equ 0ED9h");
[; <" OSCCON2 equ 0ED9h ;# ">
"5885
[; ;./pic18f46k40.h: 5885: __asm("OSCCON3 equ 0EDAh");
[; <" OSCCON3 equ 0EDAh ;# ">
"5925
[; ;./pic18f46k40.h: 5925: __asm("OSCSTAT equ 0EDBh");
[; <" OSCSTAT equ 0EDBh ;# ">
"5930
[; ;./pic18f46k40.h: 5930: __asm("OSCSTAT1 equ 0EDBh");
[; <" OSCSTAT1 equ 0EDBh ;# ">
"6037
[; ;./pic18f46k40.h: 6037: __asm("OSCEN equ 0EDCh");
[; <" OSCEN equ 0EDCh ;# ">
"6088
[; ;./pic18f46k40.h: 6088: __asm("OSCTUNE equ 0EDDh");
[; <" OSCTUNE equ 0EDDh ;# ">
"6146
[; ;./pic18f46k40.h: 6146: __asm("OSCFRQ equ 0EDEh");
[; <" OSCFRQ equ 0EDEh ;# ">
"6192
[; ;./pic18f46k40.h: 6192: __asm("VREGCON equ 0EDFh");
[; <" VREGCON equ 0EDFh ;# ">
"6226
[; ;./pic18f46k40.h: 6226: __asm("BORCON equ 0EE0h");
[; <" BORCON equ 0EE0h ;# ">
"6253
[; ;./pic18f46k40.h: 6253: __asm("PMD0 equ 0EE1h");
[; <" PMD0 equ 0EE1h ;# ">
"6330
[; ;./pic18f46k40.h: 6330: __asm("PMD1 equ 0EE2h");
[; <" PMD1 equ 0EE2h ;# ">
"6394
[; ;./pic18f46k40.h: 6394: __asm("PMD2 equ 0EE3h");
[; <" PMD2 equ 0EE3h ;# ">
"6439
[; ;./pic18f46k40.h: 6439: __asm("PMD3 equ 0EE4h");
[; <" PMD3 equ 0EE4h ;# ">
"6477
[; ;./pic18f46k40.h: 6477: __asm("PMD4 equ 0EE5h");
[; <" PMD4 equ 0EE5h ;# ">
"6530
[; ;./pic18f46k40.h: 6530: __asm("PMD5 equ 0EE6h");
[; <" PMD5 equ 0EE6h ;# ">
"6550
[; ;./pic18f46k40.h: 6550: __asm("RA0PPS equ 0EE7h");
[; <" RA0PPS equ 0EE7h ;# ">
"6594
[; ;./pic18f46k40.h: 6594: __asm("RA1PPS equ 0EE8h");
[; <" RA1PPS equ 0EE8h ;# ">
"6638
[; ;./pic18f46k40.h: 6638: __asm("RA2PPS equ 0EE9h");
[; <" RA2PPS equ 0EE9h ;# ">
"6682
[; ;./pic18f46k40.h: 6682: __asm("RA3PPS equ 0EEAh");
[; <" RA3PPS equ 0EEAh ;# ">
"6726
[; ;./pic18f46k40.h: 6726: __asm("RA4PPS equ 0EEBh");
[; <" RA4PPS equ 0EEBh ;# ">
"6770
[; ;./pic18f46k40.h: 6770: __asm("RA5PPS equ 0EECh");
[; <" RA5PPS equ 0EECh ;# ">
"6814
[; ;./pic18f46k40.h: 6814: __asm("RA6PPS equ 0EEDh");
[; <" RA6PPS equ 0EEDh ;# ">
"6858
[; ;./pic18f46k40.h: 6858: __asm("RA7PPS equ 0EEEh");
[; <" RA7PPS equ 0EEEh ;# ">
"6902
[; ;./pic18f46k40.h: 6902: __asm("RB0PPS equ 0EEFh");
[; <" RB0PPS equ 0EEFh ;# ">
"6946
[; ;./pic18f46k40.h: 6946: __asm("RB1PPS equ 0EF0h");
[; <" RB1PPS equ 0EF0h ;# ">
"6990
[; ;./pic18f46k40.h: 6990: __asm("RB2PPS equ 0EF1h");
[; <" RB2PPS equ 0EF1h ;# ">
"7034
[; ;./pic18f46k40.h: 7034: __asm("RB3PPS equ 0EF2h");
[; <" RB3PPS equ 0EF2h ;# ">
"7078
[; ;./pic18f46k40.h: 7078: __asm("RB4PPS equ 0EF3h");
[; <" RB4PPS equ 0EF3h ;# ">
"7122
[; ;./pic18f46k40.h: 7122: __asm("RB5PPS equ 0EF4h");
[; <" RB5PPS equ 0EF4h ;# ">
"7166
[; ;./pic18f46k40.h: 7166: __asm("RB6PPS equ 0EF5h");
[; <" RB6PPS equ 0EF5h ;# ">
"7210
[; ;./pic18f46k40.h: 7210: __asm("RB7PPS equ 0EF6h");
[; <" RB7PPS equ 0EF6h ;# ">
"7254
[; ;./pic18f46k40.h: 7254: __asm("RC0PPS equ 0EF7h");
[; <" RC0PPS equ 0EF7h ;# ">
"7298
[; ;./pic18f46k40.h: 7298: __asm("RC1PPS equ 0EF8h");
[; <" RC1PPS equ 0EF8h ;# ">
"7342
[; ;./pic18f46k40.h: 7342: __asm("RC2PPS equ 0EF9h");
[; <" RC2PPS equ 0EF9h ;# ">
"7386
[; ;./pic18f46k40.h: 7386: __asm("RC3PPS equ 0EFAh");
[; <" RC3PPS equ 0EFAh ;# ">
"7430
[; ;./pic18f46k40.h: 7430: __asm("RC4PPS equ 0EFBh");
[; <" RC4PPS equ 0EFBh ;# ">
"7474
[; ;./pic18f46k40.h: 7474: __asm("RC5PPS equ 0EFCh");
[; <" RC5PPS equ 0EFCh ;# ">
"7518
[; ;./pic18f46k40.h: 7518: __asm("RC6PPS equ 0EFDh");
[; <" RC6PPS equ 0EFDh ;# ">
"7562
[; ;./pic18f46k40.h: 7562: __asm("RC7PPS equ 0EFEh");
[; <" RC7PPS equ 0EFEh ;# ">
"7606
[; ;./pic18f46k40.h: 7606: __asm("RD0PPS equ 0EFFh");
[; <" RD0PPS equ 0EFFh ;# ">
"7650
[; ;./pic18f46k40.h: 7650: __asm("RD1PPS equ 0F00h");
[; <" RD1PPS equ 0F00h ;# ">
"7694
[; ;./pic18f46k40.h: 7694: __asm("RD2PPS equ 0F01h");
[; <" RD2PPS equ 0F01h ;# ">
"7738
[; ;./pic18f46k40.h: 7738: __asm("RD3PPS equ 0F02h");
[; <" RD3PPS equ 0F02h ;# ">
"7782
[; ;./pic18f46k40.h: 7782: __asm("RD4PPS equ 0F03h");
[; <" RD4PPS equ 0F03h ;# ">
"7826
[; ;./pic18f46k40.h: 7826: __asm("RD5PPS equ 0F04h");
[; <" RD5PPS equ 0F04h ;# ">
"7870
[; ;./pic18f46k40.h: 7870: __asm("RD6PPS equ 0F05h");
[; <" RD6PPS equ 0F05h ;# ">
"7914
[; ;./pic18f46k40.h: 7914: __asm("RD7PPS equ 0F06h");
[; <" RD7PPS equ 0F06h ;# ">
"7958
[; ;./pic18f46k40.h: 7958: __asm("RE0PPS equ 0F07h");
[; <" RE0PPS equ 0F07h ;# ">
"8002
[; ;./pic18f46k40.h: 8002: __asm("RE1PPS equ 0F08h");
[; <" RE1PPS equ 0F08h ;# ">
"8046
[; ;./pic18f46k40.h: 8046: __asm("RE2PPS equ 0F09h");
[; <" RE2PPS equ 0F09h ;# ">
"8090
[; ;./pic18f46k40.h: 8090: __asm("IOCAF equ 0F0Ah");
[; <" IOCAF equ 0F0Ah ;# ">
"8152
[; ;./pic18f46k40.h: 8152: __asm("IOCAN equ 0F0Bh");
[; <" IOCAN equ 0F0Bh ;# ">
"8214
[; ;./pic18f46k40.h: 8214: __asm("IOCAP equ 0F0Ch");
[; <" IOCAP equ 0F0Ch ;# ">
"8276
[; ;./pic18f46k40.h: 8276: __asm("INLVLA equ 0F0Dh");
[; <" INLVLA equ 0F0Dh ;# ">
"8338
[; ;./pic18f46k40.h: 8338: __asm("SLRCONA equ 0F0Eh");
[; <" SLRCONA equ 0F0Eh ;# ">
"8400
[; ;./pic18f46k40.h: 8400: __asm("ODCONA equ 0F0Fh");
[; <" ODCONA equ 0F0Fh ;# ">
"8462
[; ;./pic18f46k40.h: 8462: __asm("WPUA equ 0F10h");
[; <" WPUA equ 0F10h ;# ">
"8524
[; ;./pic18f46k40.h: 8524: __asm("ANSELA equ 0F11h");
[; <" ANSELA equ 0F11h ;# ">
"8586
[; ;./pic18f46k40.h: 8586: __asm("IOCBF equ 0F12h");
[; <" IOCBF equ 0F12h ;# ">
"8648
[; ;./pic18f46k40.h: 8648: __asm("IOCBN equ 0F13h");
[; <" IOCBN equ 0F13h ;# ">
"8710
[; ;./pic18f46k40.h: 8710: __asm("IOCBP equ 0F14h");
[; <" IOCBP equ 0F14h ;# ">
"8772
[; ;./pic18f46k40.h: 8772: __asm("INLVLB equ 0F15h");
[; <" INLVLB equ 0F15h ;# ">
"8834
[; ;./pic18f46k40.h: 8834: __asm("SLRCONB equ 0F16h");
[; <" SLRCONB equ 0F16h ;# ">
"8896
[; ;./pic18f46k40.h: 8896: __asm("ODCONB equ 0F17h");
[; <" ODCONB equ 0F17h ;# ">
"8958
[; ;./pic18f46k40.h: 8958: __asm("WPUB equ 0F18h");
[; <" WPUB equ 0F18h ;# ">
"9020
[; ;./pic18f46k40.h: 9020: __asm("ANSELB equ 0F19h");
[; <" ANSELB equ 0F19h ;# ">
"9082
[; ;./pic18f46k40.h: 9082: __asm("IOCCF equ 0F1Ah");
[; <" IOCCF equ 0F1Ah ;# ">
"9144
[; ;./pic18f46k40.h: 9144: __asm("IOCCN equ 0F1Bh");
[; <" IOCCN equ 0F1Bh ;# ">
"9206
[; ;./pic18f46k40.h: 9206: __asm("IOCCP equ 0F1Ch");
[; <" IOCCP equ 0F1Ch ;# ">
"9268
[; ;./pic18f46k40.h: 9268: __asm("INLVLC equ 0F1Dh");
[; <" INLVLC equ 0F1Dh ;# ">
"9330
[; ;./pic18f46k40.h: 9330: __asm("SLRCONC equ 0F1Eh");
[; <" SLRCONC equ 0F1Eh ;# ">
"9392
[; ;./pic18f46k40.h: 9392: __asm("ODCONC equ 0F1Fh");
[; <" ODCONC equ 0F1Fh ;# ">
"9454
[; ;./pic18f46k40.h: 9454: __asm("WPUC equ 0F20h");
[; <" WPUC equ 0F20h ;# ">
"9516
[; ;./pic18f46k40.h: 9516: __asm("ANSELC equ 0F21h");
[; <" ANSELC equ 0F21h ;# ">
"9578
[; ;./pic18f46k40.h: 9578: __asm("INLVLD equ 0F22h");
[; <" INLVLD equ 0F22h ;# ">
"9640
[; ;./pic18f46k40.h: 9640: __asm("SLRCOND equ 0F23h");
[; <" SLRCOND equ 0F23h ;# ">
"9702
[; ;./pic18f46k40.h: 9702: __asm("ODCOND equ 0F24h");
[; <" ODCOND equ 0F24h ;# ">
"9764
[; ;./pic18f46k40.h: 9764: __asm("WPUD equ 0F25h");
[; <" WPUD equ 0F25h ;# ">
"9826
[; ;./pic18f46k40.h: 9826: __asm("ANSELD equ 0F26h");
[; <" ANSELD equ 0F26h ;# ">
"9888
[; ;./pic18f46k40.h: 9888: __asm("IOCEF equ 0F27h");
[; <" IOCEF equ 0F27h ;# ">
"9909
[; ;./pic18f46k40.h: 9909: __asm("IOCEN equ 0F28h");
[; <" IOCEN equ 0F28h ;# ">
"9930
[; ;./pic18f46k40.h: 9930: __asm("IOCEP equ 0F29h");
[; <" IOCEP equ 0F29h ;# ">
"9951
[; ;./pic18f46k40.h: 9951: __asm("INLVLE equ 0F2Ah");
[; <" INLVLE equ 0F2Ah ;# ">
"9989
[; ;./pic18f46k40.h: 9989: __asm("SLRCONE equ 0F2Bh");
[; <" SLRCONE equ 0F2Bh ;# ">
"10021
[; ;./pic18f46k40.h: 10021: __asm("ODCONE equ 0F2Ch");
[; <" ODCONE equ 0F2Ch ;# ">
"10053
[; ;./pic18f46k40.h: 10053: __asm("WPUE equ 0F2Dh");
[; <" WPUE equ 0F2Dh ;# ">
"10091
[; ;./pic18f46k40.h: 10091: __asm("ANSELE equ 0F2Eh");
[; <" ANSELE equ 0F2Eh ;# ">
"10123
[; ;./pic18f46k40.h: 10123: __asm("HLVDCON0 equ 0F2Fh");
[; <" HLVDCON0 equ 0F2Fh ;# ">
"10203
[; ;./pic18f46k40.h: 10203: __asm("HLVDCON1 equ 0F30h");
[; <" HLVDCON1 equ 0F30h ;# ">
"10275
[; ;./pic18f46k40.h: 10275: __asm("FVRCON equ 0F31h");
[; <" FVRCON equ 0F31h ;# ">
"10364
[; ;./pic18f46k40.h: 10364: __asm("ZCDCON equ 0F32h");
[; <" ZCDCON equ 0F32h ;# ">
"10444
[; ;./pic18f46k40.h: 10444: __asm("DAC1CON0 equ 0F33h");
[; <" DAC1CON0 equ 0F33h ;# ">
"10545
[; ;./pic18f46k40.h: 10545: __asm("DAC1CON1 equ 0F34h");
[; <" DAC1CON1 equ 0F34h ;# ">
"10597
[; ;./pic18f46k40.h: 10597: __asm("CM2CON0 equ 0F35h");
[; <" CM2CON0 equ 0F35h ;# ">
"10677
[; ;./pic18f46k40.h: 10677: __asm("CM2CON1 equ 0F36h");
[; <" CM2CON1 equ 0F36h ;# ">
"10717
[; ;./pic18f46k40.h: 10717: __asm("CM2NCH equ 0F37h");
[; <" CM2NCH equ 0F37h ;# ">
"10777
[; ;./pic18f46k40.h: 10777: __asm("CM2PCH equ 0F38h");
[; <" CM2PCH equ 0F38h ;# ">
"10837
[; ;./pic18f46k40.h: 10837: __asm("CM1CON0 equ 0F39h");
[; <" CM1CON0 equ 0F39h ;# ">
"10917
[; ;./pic18f46k40.h: 10917: __asm("CM1CON1 equ 0F3Ah");
[; <" CM1CON1 equ 0F3Ah ;# ">
"10957
[; ;./pic18f46k40.h: 10957: __asm("CM1NCH equ 0F3Bh");
[; <" CM1NCH equ 0F3Bh ;# ">
"11017
[; ;./pic18f46k40.h: 11017: __asm("CM1PCH equ 0F3Ch");
[; <" CM1PCH equ 0F3Ch ;# ">
"11077
[; ;./pic18f46k40.h: 11077: __asm("CMOUT equ 0F3Dh");
[; <" CMOUT equ 0F3Dh ;# ">
"11103
[; ;./pic18f46k40.h: 11103: __asm("CLKRCON equ 0F3Eh");
[; <" CLKRCON equ 0F3Eh ;# ">
"11207
[; ;./pic18f46k40.h: 11207: __asm("CLKRCLK equ 0F3Fh");
[; <" CLKRCLK equ 0F3Fh ;# ">
"11267
[; ;./pic18f46k40.h: 11267: __asm("CWG1CLK equ 0F40h");
[; <" CWG1CLK equ 0F40h ;# ">
"11272
[; ;./pic18f46k40.h: 11272: __asm("CWG1CLKCON equ 0F40h");
[; <" CWG1CLKCON equ 0F40h ;# ">
"11321
[; ;./pic18f46k40.h: 11321: __asm("CWG1ISM equ 0F41h");
[; <" CWG1ISM equ 0F41h ;# ">
"11367
[; ;./pic18f46k40.h: 11367: __asm("CWG1DBR equ 0F42h");
[; <" CWG1DBR equ 0F42h ;# ">
"11471
[; ;./pic18f46k40.h: 11471: __asm("CWG1DBF equ 0F43h");
[; <" CWG1DBF equ 0F43h ;# ">
"11575
[; ;./pic18f46k40.h: 11575: __asm("CWG1CON0 equ 0F44h");
[; <" CWG1CON0 equ 0F44h ;# ">
"11676
[; ;./pic18f46k40.h: 11676: __asm("CWG1CON1 equ 0F45h");
[; <" CWG1CON1 equ 0F45h ;# ">
"11754
[; ;./pic18f46k40.h: 11754: __asm("CWG1AS0 equ 0F46h");
[; <" CWG1AS0 equ 0F46h ;# ">
"11874
[; ;./pic18f46k40.h: 11874: __asm("CWG1AS1 equ 0F47h");
[; <" CWG1AS1 equ 0F47h ;# ">
"11924
[; ;./pic18f46k40.h: 11924: __asm("CWG1STR equ 0F48h");
[; <" CWG1STR equ 0F48h ;# ">
"12038
[; ;./pic18f46k40.h: 12038: __asm("SCANLADR equ 0F49h");
[; <" SCANLADR equ 0F49h ;# ">
"12045
[; ;./pic18f46k40.h: 12045: __asm("SCANLADRL equ 0F49h");
[; <" SCANLADRL equ 0F49h ;# ">
"12173
[; ;./pic18f46k40.h: 12173: __asm("SCANLADRH equ 0F4Ah");
[; <" SCANLADRH equ 0F4Ah ;# ">
"12301
[; ;./pic18f46k40.h: 12301: __asm("SCANLADRU equ 0F4Bh");
[; <" SCANLADRU equ 0F4Bh ;# ">
"12407
[; ;./pic18f46k40.h: 12407: __asm("SCANHADR equ 0F4Ch");
[; <" SCANHADR equ 0F4Ch ;# ">
"12414
[; ;./pic18f46k40.h: 12414: __asm("SCANHADRL equ 0F4Ch");
[; <" SCANHADRL equ 0F4Ch ;# ">
"12542
[; ;./pic18f46k40.h: 12542: __asm("SCANHADRH equ 0F4Dh");
[; <" SCANHADRH equ 0F4Dh ;# ">
"12670
[; ;./pic18f46k40.h: 12670: __asm("SCANHADRU equ 0F4Eh");
[; <" SCANHADRU equ 0F4Eh ;# ">
"12774
[; ;./pic18f46k40.h: 12774: __asm("SCANCON0 equ 0F4Fh");
[; <" SCANCON0 equ 0F4Fh ;# ">
"12901
[; ;./pic18f46k40.h: 12901: __asm("SCANTRIG equ 0F50h");
[; <" SCANTRIG equ 0F50h ;# ">
"12981
[; ;./pic18f46k40.h: 12981: __asm("MDCON0 equ 0F51h");
[; <" MDCON0 equ 0F51h ;# ">
"13049
[; ;./pic18f46k40.h: 13049: __asm("MDCON1 equ 0F52h");
[; <" MDCON1 equ 0F52h ;# ">
"13115
[; ;./pic18f46k40.h: 13115: __asm("MDSRC equ 0F53h");
[; <" MDSRC equ 0F53h ;# ">
"13195
[; ;./pic18f46k40.h: 13195: __asm("MDCARL equ 0F54h");
[; <" MDCARL equ 0F54h ;# ">
"13263
[; ;./pic18f46k40.h: 13263: __asm("MDCARH equ 0F55h");
[; <" MDCARH equ 0F55h ;# ">
"13331
[; ;./pic18f46k40.h: 13331: __asm("ADACT equ 0F56h");
[; <" ADACT equ 0F56h ;# ">
"13383
[; ;./pic18f46k40.h: 13383: __asm("ADCLK equ 0F57h");
[; <" ADCLK equ 0F57h ;# ">
"13441
[; ;./pic18f46k40.h: 13441: __asm("ADREF equ 0F58h");
[; <" ADREF equ 0F58h ;# ">
"13482
[; ;./pic18f46k40.h: 13482: __asm("ADCON1 equ 0F59h");
[; <" ADCON1 equ 0F59h ;# ">
"13521
[; ;./pic18f46k40.h: 13521: __asm("ADCON2 equ 0F5Ah");
[; <" ADCON2 equ 0F5Ah ;# ">
"13598
[; ;./pic18f46k40.h: 13598: __asm("ADCON3 equ 0F5Bh");
[; <" ADCON3 equ 0F5Bh ;# ">
"13669
[; ;./pic18f46k40.h: 13669: __asm("ADACQ equ 0F5Ch");
[; <" ADACQ equ 0F5Ch ;# ">
"13739
[; ;./pic18f46k40.h: 13739: __asm("ADCAP equ 0F5Dh");
[; <" ADCAP equ 0F5Dh ;# ">
"13791
[; ;./pic18f46k40.h: 13791: __asm("ADPRE equ 0F5Eh");
[; <" ADPRE equ 0F5Eh ;# ">
"13861
[; ;./pic18f46k40.h: 13861: __asm("ADPCH equ 0F5Fh");
[; <" ADPCH equ 0F5Fh ;# ">
"13919
[; ;./pic18f46k40.h: 13919: __asm("ADCON0 equ 0F60h");
[; <" ADCON0 equ 0F60h ;# ">
"14014
[; ;./pic18f46k40.h: 14014: __asm("ADPREV equ 0F61h");
[; <" ADPREV equ 0F61h ;# ">
"14021
[; ;./pic18f46k40.h: 14021: __asm("ADPREVL equ 0F61h");
[; <" ADPREVL equ 0F61h ;# ">
"14091
[; ;./pic18f46k40.h: 14091: __asm("ADPREVH equ 0F62h");
[; <" ADPREVH equ 0F62h ;# ">
"14161
[; ;./pic18f46k40.h: 14161: __asm("ADRES equ 0F63h");
[; <" ADRES equ 0F63h ;# ">
"14168
[; ;./pic18f46k40.h: 14168: __asm("ADRESL equ 0F63h");
[; <" ADRESL equ 0F63h ;# ">
"14238
[; ;./pic18f46k40.h: 14238: __asm("ADRESH equ 0F64h");
[; <" ADRESH equ 0F64h ;# ">
"14300
[; ;./pic18f46k40.h: 14300: __asm("ADSTAT equ 0F65h");
[; <" ADSTAT equ 0F65h ;# ">
"14365
[; ;./pic18f46k40.h: 14365: __asm("ADRPT equ 0F66h");
[; <" ADRPT equ 0F66h ;# ">
"14435
[; ;./pic18f46k40.h: 14435: __asm("ADCNT equ 0F67h");
[; <" ADCNT equ 0F67h ;# ">
"14505
[; ;./pic18f46k40.h: 14505: __asm("ADSTPT equ 0F68h");
[; <" ADSTPT equ 0F68h ;# ">
"14512
[; ;./pic18f46k40.h: 14512: __asm("ADSTPTL equ 0F68h");
[; <" ADSTPTL equ 0F68h ;# ">
"14582
[; ;./pic18f46k40.h: 14582: __asm("ADSTPTH equ 0F69h");
[; <" ADSTPTH equ 0F69h ;# ">
"14652
[; ;./pic18f46k40.h: 14652: __asm("ADLTH equ 0F6Ah");
[; <" ADLTH equ 0F6Ah ;# ">
"14659
[; ;./pic18f46k40.h: 14659: __asm("ADLTHL equ 0F6Ah");
[; <" ADLTHL equ 0F6Ah ;# ">
"14729
[; ;./pic18f46k40.h: 14729: __asm("ADLTHH equ 0F6Bh");
[; <" ADLTHH equ 0F6Bh ;# ">
"14799
[; ;./pic18f46k40.h: 14799: __asm("ADUTH equ 0F6Ch");
[; <" ADUTH equ 0F6Ch ;# ">
"14806
[; ;./pic18f46k40.h: 14806: __asm("ADUTHL equ 0F6Ch");
[; <" ADUTHL equ 0F6Ch ;# ">
"14876
[; ;./pic18f46k40.h: 14876: __asm("ADUTHH equ 0F6Dh");
[; <" ADUTHH equ 0F6Dh ;# ">
"14946
[; ;./pic18f46k40.h: 14946: __asm("ADERR equ 0F6Eh");
[; <" ADERR equ 0F6Eh ;# ">
"14953
[; ;./pic18f46k40.h: 14953: __asm("ADERRL equ 0F6Eh");
[; <" ADERRL equ 0F6Eh ;# ">
"15023
[; ;./pic18f46k40.h: 15023: __asm("ADERRH equ 0F6Fh");
[; <" ADERRH equ 0F6Fh ;# ">
"15093
[; ;./pic18f46k40.h: 15093: __asm("ADACC equ 0F70h");
[; <" ADACC equ 0F70h ;# ">
"15100
[; ;./pic18f46k40.h: 15100: __asm("ADACCL equ 0F70h");
[; <" ADACCL equ 0F70h ;# ">
"15170
[; ;./pic18f46k40.h: 15170: __asm("ADACCH equ 0F71h");
[; <" ADACCH equ 0F71h ;# ">
"15240
[; ;./pic18f46k40.h: 15240: __asm("ADFLTR equ 0F72h");
[; <" ADFLTR equ 0F72h ;# ">
"15247
[; ;./pic18f46k40.h: 15247: __asm("ADFLTRL equ 0F72h");
[; <" ADFLTRL equ 0F72h ;# ">
"15317
[; ;./pic18f46k40.h: 15317: __asm("ADFLTRH equ 0F73h");
[; <" ADFLTRH equ 0F73h ;# ">
"15387
[; ;./pic18f46k40.h: 15387: __asm("CRCDATA equ 0F74h");
[; <" CRCDATA equ 0F74h ;# ">
"15394
[; ;./pic18f46k40.h: 15394: __asm("CRCDATL equ 0F74h");
[; <" CRCDATL equ 0F74h ;# ">
"15456
[; ;./pic18f46k40.h: 15456: __asm("CRCDATH equ 0F75h");
[; <" CRCDATH equ 0F75h ;# ">
"15518
[; ;./pic18f46k40.h: 15518: __asm("CRCACC equ 0F76h");
[; <" CRCACC equ 0F76h ;# ">
"15525
[; ;./pic18f46k40.h: 15525: __asm("CRCACCL equ 0F76h");
[; <" CRCACCL equ 0F76h ;# ">
"15587
[; ;./pic18f46k40.h: 15587: __asm("CRCACCH equ 0F77h");
[; <" CRCACCH equ 0F77h ;# ">
"15649
[; ;./pic18f46k40.h: 15649: __asm("CRCSHFT equ 0F78h");
[; <" CRCSHFT equ 0F78h ;# ">
"15656
[; ;./pic18f46k40.h: 15656: __asm("CRCSHIFTL equ 0F78h");
[; <" CRCSHIFTL equ 0F78h ;# ">
"15718
[; ;./pic18f46k40.h: 15718: __asm("CRCSHIFTH equ 0F79h");
[; <" CRCSHIFTH equ 0F79h ;# ">
"15780
[; ;./pic18f46k40.h: 15780: __asm("CRCXOR equ 0F7Ah");
[; <" CRCXOR equ 0F7Ah ;# ">
"15787
[; ;./pic18f46k40.h: 15787: __asm("CRCXORL equ 0F7Ah");
[; <" CRCXORL equ 0F7Ah ;# ">
"15844
[; ;./pic18f46k40.h: 15844: __asm("CRCXORH equ 0F7Bh");
[; <" CRCXORH equ 0F7Bh ;# ">
"15906
[; ;./pic18f46k40.h: 15906: __asm("CRCCON0 equ 0F7Ch");
[; <" CRCCON0 equ 0F7Ch ;# ">
"15966
[; ;./pic18f46k40.h: 15966: __asm("CRCCON1 equ 0F7Dh");
[; <" CRCCON1 equ 0F7Dh ;# ">
"16042
[; ;./pic18f46k40.h: 16042: __asm("NVMADR equ 0F7Eh");
[; <" NVMADR equ 0F7Eh ;# ">
"16049
[; ;./pic18f46k40.h: 16049: __asm("NVMADRL equ 0F7Eh");
[; <" NVMADRL equ 0F7Eh ;# ">
"16177
[; ;./pic18f46k40.h: 16177: __asm("NVMADRH equ 0F7Fh");
[; <" NVMADRH equ 0F7Fh ;# ">
"16233
[; ;./pic18f46k40.h: 16233: __asm("NVMDAT equ 0F80h");
[; <" NVMDAT equ 0F80h ;# ">
"16303
[; ;./pic18f46k40.h: 16303: __asm("NVMCON1 equ 0F81h");
[; <" NVMCON1 equ 0F81h ;# ">
"16369
[; ;./pic18f46k40.h: 16369: __asm("NVMCON2 equ 0F82h");
[; <" NVMCON2 equ 0F82h ;# ">
"16389
[; ;./pic18f46k40.h: 16389: __asm("LATA equ 0F83h");
[; <" LATA equ 0F83h ;# ">
"16501
[; ;./pic18f46k40.h: 16501: __asm("LATB equ 0F84h");
[; <" LATB equ 0F84h ;# ">
"16613
[; ;./pic18f46k40.h: 16613: __asm("LATC equ 0F85h");
[; <" LATC equ 0F85h ;# ">
"16725
[; ;./pic18f46k40.h: 16725: __asm("LATD equ 0F86h");
[; <" LATD equ 0F86h ;# ">
"16837
[; ;./pic18f46k40.h: 16837: __asm("LATE equ 0F87h");
[; <" LATE equ 0F87h ;# ">
"16934
[; ;./pic18f46k40.h: 16934: __asm("TRISA equ 0F88h");
[; <" TRISA equ 0F88h ;# ">
"16939
[; ;./pic18f46k40.h: 16939: __asm("DDRA equ 0F88h");
[; <" DDRA equ 0F88h ;# ">
"17056
[; ;./pic18f46k40.h: 17056: __asm("TRISB equ 0F89h");
[; <" TRISB equ 0F89h ;# ">
"17061
[; ;./pic18f46k40.h: 17061: __asm("DDRB equ 0F89h");
[; <" DDRB equ 0F89h ;# ">
"17178
[; ;./pic18f46k40.h: 17178: __asm("TRISC equ 0F8Ah");
[; <" TRISC equ 0F8Ah ;# ">
"17183
[; ;./pic18f46k40.h: 17183: __asm("DDRC equ 0F8Ah");
[; <" DDRC equ 0F8Ah ;# ">
"17300
[; ;./pic18f46k40.h: 17300: __asm("TRISD equ 0F8Bh");
[; <" TRISD equ 0F8Bh ;# ">
"17305
[; ;./pic18f46k40.h: 17305: __asm("DDRD equ 0F8Bh");
[; <" DDRD equ 0F8Bh ;# ">
"17422
[; ;./pic18f46k40.h: 17422: __asm("TRISE equ 0F8Ch");
[; <" TRISE equ 0F8Ch ;# ">
"17427
[; ;./pic18f46k40.h: 17427: __asm("DDRE equ 0F8Ch");
[; <" DDRE equ 0F8Ch ;# ">
"17484
[; ;./pic18f46k40.h: 17484: __asm("PORTA equ 0F8Dh");
[; <" PORTA equ 0F8Dh ;# ">
"17568
[; ;./pic18f46k40.h: 17568: __asm("PORTB equ 0F8Eh");
[; <" PORTB equ 0F8Eh ;# ">
"17639
[; ;./pic18f46k40.h: 17639: __asm("PORTC equ 0F8Fh");
[; <" PORTC equ 0F8Fh ;# ">
"17725
[; ;./pic18f46k40.h: 17725: __asm("PORTD equ 0F90h");
[; <" PORTD equ 0F90h ;# ">
"17796
[; ;./pic18f46k40.h: 17796: __asm("PORTE equ 0F91h");
[; <" PORTE equ 0F91h ;# ">
"18003
[; ;./pic18f46k40.h: 18003: __asm("SSP1BUF equ 0F92h");
[; <" SSP1BUF equ 0F92h ;# ">
"18023
[; ;./pic18f46k40.h: 18023: __asm("SSP1ADD equ 0F93h");
[; <" SSP1ADD equ 0F93h ;# ">
"18143
[; ;./pic18f46k40.h: 18143: __asm("SSP1MSK equ 0F94h");
[; <" SSP1MSK equ 0F94h ;# ">
"18213
[; ;./pic18f46k40.h: 18213: __asm("SSP1STAT equ 0F95h");
[; <" SSP1STAT equ 0F95h ;# ">
"18667
[; ;./pic18f46k40.h: 18667: __asm("SSP1CON1 equ 0F96h");
[; <" SSP1CON1 equ 0F96h ;# ">
"18787
[; ;./pic18f46k40.h: 18787: __asm("SSP1CON2 equ 0F97h");
[; <" SSP1CON2 equ 0F97h ;# ">
"18974
[; ;./pic18f46k40.h: 18974: __asm("SSP1CON3 equ 0F98h");
[; <" SSP1CON3 equ 0F98h ;# ">
"19036
[; ;./pic18f46k40.h: 19036: __asm("RC1REG equ 0F99h");
[; <" RC1REG equ 0F99h ;# ">
"19041
[; ;./pic18f46k40.h: 19041: __asm("RCREG equ 0F99h");
[; <" RCREG equ 0F99h ;# ">
"19045
[; ;./pic18f46k40.h: 19045: __asm("RCREG1 equ 0F99h");
[; <" RCREG1 equ 0F99h ;# ">
"19090
[; ;./pic18f46k40.h: 19090: __asm("TX1REG equ 0F9Ah");
[; <" TX1REG equ 0F9Ah ;# ">
"19095
[; ;./pic18f46k40.h: 19095: __asm("TXREG1 equ 0F9Ah");
[; <" TXREG1 equ 0F9Ah ;# ">
"19099
[; ;./pic18f46k40.h: 19099: __asm("TXREG equ 0F9Ah");
[; <" TXREG equ 0F9Ah ;# ">
"19144
[; ;./pic18f46k40.h: 19144: __asm("SP1BRG equ 0F9Bh");
[; <" SP1BRG equ 0F9Bh ;# ">
"19151
[; ;./pic18f46k40.h: 19151: __asm("SP1BRGL equ 0F9Bh");
[; <" SP1BRGL equ 0F9Bh ;# ">
"19156
[; ;./pic18f46k40.h: 19156: __asm("SPBRG equ 0F9Bh");
[; <" SPBRG equ 0F9Bh ;# ">
"19160
[; ;./pic18f46k40.h: 19160: __asm("SPBRG1 equ 0F9Bh");
[; <" SPBRG1 equ 0F9Bh ;# ">
"19164
[; ;./pic18f46k40.h: 19164: __asm("SPBRGL equ 0F9Bh");
[; <" SPBRGL equ 0F9Bh ;# ">
"19221
[; ;./pic18f46k40.h: 19221: __asm("SP1BRGH equ 0F9Ch");
[; <" SP1BRGH equ 0F9Ch ;# ">
"19226
[; ;./pic18f46k40.h: 19226: __asm("SPBRGH equ 0F9Ch");
[; <" SPBRGH equ 0F9Ch ;# ">
"19230
[; ;./pic18f46k40.h: 19230: __asm("SPBRGH1 equ 0F9Ch");
[; <" SPBRGH1 equ 0F9Ch ;# ">
"19275
[; ;./pic18f46k40.h: 19275: __asm("RC1STA equ 0F9Dh");
[; <" RC1STA equ 0F9Dh ;# ">
"19280
[; ;./pic18f46k40.h: 19280: __asm("RCSTA1 equ 0F9Dh");
[; <" RCSTA1 equ 0F9Dh ;# ">
"19284
[; ;./pic18f46k40.h: 19284: __asm("RCSTA equ 0F9Dh");
[; <" RCSTA equ 0F9Dh ;# ">
"19560
[; ;./pic18f46k40.h: 19560: __asm("TX1STA equ 0F9Eh");
[; <" TX1STA equ 0F9Eh ;# ">
"19565
[; ;./pic18f46k40.h: 19565: __asm("TXSTA1 equ 0F9Eh");
[; <" TXSTA1 equ 0F9Eh ;# ">
"19569
[; ;./pic18f46k40.h: 19569: __asm("TXSTA equ 0F9Eh");
[; <" TXSTA equ 0F9Eh ;# ">
"20004
[; ;./pic18f46k40.h: 20004: __asm("BAUD1CON equ 0F9Fh");
[; <" BAUD1CON equ 0F9Fh ;# ">
"20009
[; ;./pic18f46k40.h: 20009: __asm("BAUDCON1 equ 0F9Fh");
[; <" BAUDCON1 equ 0F9Fh ;# ">
"20013
[; ;./pic18f46k40.h: 20013: __asm("BAUDCTL1 equ 0F9Fh");
[; <" BAUDCTL1 equ 0F9Fh ;# ">
"20017
[; ;./pic18f46k40.h: 20017: __asm("BAUDCON equ 0F9Fh");
[; <" BAUDCON equ 0F9Fh ;# ">
"20021
[; ;./pic18f46k40.h: 20021: __asm("BAUDCTL equ 0F9Fh");
[; <" BAUDCTL equ 0F9Fh ;# ">
"20785
[; ;./pic18f46k40.h: 20785: __asm("PWM4DC equ 0FA0h");
[; <" PWM4DC equ 0FA0h ;# ">
"20792
[; ;./pic18f46k40.h: 20792: __asm("PWM4DCL equ 0FA0h");
[; <" PWM4DCL equ 0FA0h ;# ">
"20858
[; ;./pic18f46k40.h: 20858: __asm("PWM4DCH equ 0FA1h");
[; <" PWM4DCH equ 0FA1h ;# ">
"21028
[; ;./pic18f46k40.h: 21028: __asm("PWM4CON equ 0FA2h");
[; <" PWM4CON equ 0FA2h ;# ">
"21084
[; ;./pic18f46k40.h: 21084: __asm("PWM3DC equ 0FA3h");
[; <" PWM3DC equ 0FA3h ;# ">
"21091
[; ;./pic18f46k40.h: 21091: __asm("PWM3DCL equ 0FA3h");
[; <" PWM3DCL equ 0FA3h ;# ">
"21157
[; ;./pic18f46k40.h: 21157: __asm("PWM3DCH equ 0FA4h");
[; <" PWM3DCH equ 0FA4h ;# ">
"21327
[; ;./pic18f46k40.h: 21327: __asm("PWM3CON equ 0FA5h");
[; <" PWM3CON equ 0FA5h ;# ">
"21383
[; ;./pic18f46k40.h: 21383: __asm("CCPR2 equ 0FA6h");
[; <" CCPR2 equ 0FA6h ;# ">
"21390
[; ;./pic18f46k40.h: 21390: __asm("CCPR2L equ 0FA6h");
[; <" CCPR2L equ 0FA6h ;# ">
"21410
[; ;./pic18f46k40.h: 21410: __asm("CCPR2H equ 0FA7h");
[; <" CCPR2H equ 0FA7h ;# ">
"21430
[; ;./pic18f46k40.h: 21430: __asm("CCP2CON equ 0FA8h");
[; <" CCP2CON equ 0FA8h ;# ">
"21557
[; ;./pic18f46k40.h: 21557: __asm("CCP2CAP equ 0FA9h");
[; <" CCP2CAP equ 0FA9h ;# ">
"21613
[; ;./pic18f46k40.h: 21613: __asm("CCPR1 equ 0FAAh");
[; <" CCPR1 equ 0FAAh ;# ">
"21620
[; ;./pic18f46k40.h: 21620: __asm("CCPR1L equ 0FAAh");
[; <" CCPR1L equ 0FAAh ;# ">
"21640
[; ;./pic18f46k40.h: 21640: __asm("CCPR1H equ 0FABh");
[; <" CCPR1H equ 0FABh ;# ">
"21660
[; ;./pic18f46k40.h: 21660: __asm("CCP1CON equ 0FACh");
[; <" CCP1CON equ 0FACh ;# ">
"21787
[; ;./pic18f46k40.h: 21787: __asm("CCP1CAP equ 0FADh");
[; <" CCP1CAP equ 0FADh ;# ">
"21843
[; ;./pic18f46k40.h: 21843: __asm("CCPTMRS equ 0FAEh");
[; <" CCPTMRS equ 0FAEh ;# ">
"21931
[; ;./pic18f46k40.h: 21931: __asm("T6TMR equ 0FAFh");
[; <" T6TMR equ 0FAFh ;# ">
"21936
[; ;./pic18f46k40.h: 21936: __asm("TMR6 equ 0FAFh");
[; <" TMR6 equ 0FAFh ;# ">
"21969
[; ;./pic18f46k40.h: 21969: __asm("T6PR equ 0FB0h");
[; <" T6PR equ 0FB0h ;# ">
"21974
[; ;./pic18f46k40.h: 21974: __asm("PR6 equ 0FB0h");
[; <" PR6 equ 0FB0h ;# ">
"22007
[; ;./pic18f46k40.h: 22007: __asm("T6CON equ 0FB1h");
[; <" T6CON equ 0FB1h ;# ">
"22153
[; ;./pic18f46k40.h: 22153: __asm("T6HLT equ 0FB2h");
[; <" T6HLT equ 0FB2h ;# ">
"22281
[; ;./pic18f46k40.h: 22281: __asm("T6CLKCON equ 0FB3h");
[; <" T6CLKCON equ 0FB3h ;# ">
"22286
[; ;./pic18f46k40.h: 22286: __asm("T6CLK equ 0FB3h");
[; <" T6CLK equ 0FB3h ;# ">
"22439
[; ;./pic18f46k40.h: 22439: __asm("T6RST equ 0FB4h");
[; <" T6RST equ 0FB4h ;# ">
"22519
[; ;./pic18f46k40.h: 22519: __asm("T4TMR equ 0FB5h");
[; <" T4TMR equ 0FB5h ;# ">
"22524
[; ;./pic18f46k40.h: 22524: __asm("TMR4 equ 0FB5h");
[; <" TMR4 equ 0FB5h ;# ">
"22557
[; ;./pic18f46k40.h: 22557: __asm("T4PR equ 0FB6h");
[; <" T4PR equ 0FB6h ;# ">
"22562
[; ;./pic18f46k40.h: 22562: __asm("PR4 equ 0FB6h");
[; <" PR4 equ 0FB6h ;# ">
"22595
[; ;./pic18f46k40.h: 22595: __asm("T4CON equ 0FB7h");
[; <" T4CON equ 0FB7h ;# ">
"22741
[; ;./pic18f46k40.h: 22741: __asm("T4HLT equ 0FB8h");
[; <" T4HLT equ 0FB8h ;# ">
"22869
[; ;./pic18f46k40.h: 22869: __asm("T4CLKCON equ 0FB9h");
[; <" T4CLKCON equ 0FB9h ;# ">
"22874
[; ;./pic18f46k40.h: 22874: __asm("T4CLK equ 0FB9h");
[; <" T4CLK equ 0FB9h ;# ">
"23027
[; ;./pic18f46k40.h: 23027: __asm("T4RST equ 0FBAh");
[; <" T4RST equ 0FBAh ;# ">
"23107
[; ;./pic18f46k40.h: 23107: __asm("T2TMR equ 0FBBh");
[; <" T2TMR equ 0FBBh ;# ">
"23112
[; ;./pic18f46k40.h: 23112: __asm("TMR2 equ 0FBBh");
[; <" TMR2 equ 0FBBh ;# ">
"23145
[; ;./pic18f46k40.h: 23145: __asm("T2PR equ 0FBCh");
[; <" T2PR equ 0FBCh ;# ">
"23150
[; ;./pic18f46k40.h: 23150: __asm("PR2 equ 0FBCh");
[; <" PR2 equ 0FBCh ;# ">
"23183
[; ;./pic18f46k40.h: 23183: __asm("T2CON equ 0FBDh");
[; <" T2CON equ 0FBDh ;# ">
"23329
[; ;./pic18f46k40.h: 23329: __asm("T2HLT equ 0FBEh");
[; <" T2HLT equ 0FBEh ;# ">
"23457
[; ;./pic18f46k40.h: 23457: __asm("T2CLKCON equ 0FBFh");
[; <" T2CLKCON equ 0FBFh ;# ">
"23462
[; ;./pic18f46k40.h: 23462: __asm("T2CLK equ 0FBFh");
[; <" T2CLK equ 0FBFh ;# ">
"23615
[; ;./pic18f46k40.h: 23615: __asm("T2RST equ 0FC0h");
[; <" T2RST equ 0FC0h ;# ">
"23695
[; ;./pic18f46k40.h: 23695: __asm("TMR5 equ 0FC1h");
[; <" TMR5 equ 0FC1h ;# ">
"23702
[; ;./pic18f46k40.h: 23702: __asm("TMR5L equ 0FC1h");
[; <" TMR5L equ 0FC1h ;# ">
"23872
[; ;./pic18f46k40.h: 23872: __asm("TMR5H equ 0FC2h");
[; <" TMR5H equ 0FC2h ;# ">
"23992
[; ;./pic18f46k40.h: 23992: __asm("T5CON equ 0FC3h");
[; <" T5CON equ 0FC3h ;# ">
"24106
[; ;./pic18f46k40.h: 24106: __asm("T5GCON equ 0FC4h");
[; <" T5GCON equ 0FC4h ;# ">
"24111
[; ;./pic18f46k40.h: 24111: __asm("PR5 equ 0FC4h");
[; <" PR5 equ 0FC4h ;# ">
"24338
[; ;./pic18f46k40.h: 24338: __asm("T5GATE equ 0FC5h");
[; <" T5GATE equ 0FC5h ;# ">
"24343
[; ;./pic18f46k40.h: 24343: __asm("TMR5GATE equ 0FC5h");
[; <" TMR5GATE equ 0FC5h ;# ">
"24480
[; ;./pic18f46k40.h: 24480: __asm("T5CLK equ 0FC6h");
[; <" T5CLK equ 0FC6h ;# ">
"24485
[; ;./pic18f46k40.h: 24485: __asm("TMR5CLK equ 0FC6h");
[; <" TMR5CLK equ 0FC6h ;# ">
"24622
[; ;./pic18f46k40.h: 24622: __asm("TMR3 equ 0FC7h");
[; <" TMR3 equ 0FC7h ;# ">
"24629
[; ;./pic18f46k40.h: 24629: __asm("TMR3L equ 0FC7h");
[; <" TMR3L equ 0FC7h ;# ">
"24799
[; ;./pic18f46k40.h: 24799: __asm("TMR3H equ 0FC8h");
[; <" TMR3H equ 0FC8h ;# ">
"24919
[; ;./pic18f46k40.h: 24919: __asm("T3CON equ 0FC9h");
[; <" T3CON equ 0FC9h ;# ">
"25033
[; ;./pic18f46k40.h: 25033: __asm("T3GCON equ 0FCAh");
[; <" T3GCON equ 0FCAh ;# ">
"25038
[; ;./pic18f46k40.h: 25038: __asm("PR3 equ 0FCAh");
[; <" PR3 equ 0FCAh ;# ">
"25265
[; ;./pic18f46k40.h: 25265: __asm("T3GATE equ 0FCBh");
[; <" T3GATE equ 0FCBh ;# ">
"25270
[; ;./pic18f46k40.h: 25270: __asm("TMR3GATE equ 0FCBh");
[; <" TMR3GATE equ 0FCBh ;# ">
"25407
[; ;./pic18f46k40.h: 25407: __asm("T3CLK equ 0FCCh");
[; <" T3CLK equ 0FCCh ;# ">
"25412
[; ;./pic18f46k40.h: 25412: __asm("TMR3CLK equ 0FCCh");
[; <" TMR3CLK equ 0FCCh ;# ">
"25549
[; ;./pic18f46k40.h: 25549: __asm("TMR1 equ 0FCDh");
[; <" TMR1 equ 0FCDh ;# ">
"25556
[; ;./pic18f46k40.h: 25556: __asm("TMR1L equ 0FCDh");
[; <" TMR1L equ 0FCDh ;# ">
"25726
[; ;./pic18f46k40.h: 25726: __asm("TMR1H equ 0FCEh");
[; <" TMR1H equ 0FCEh ;# ">
"25846
[; ;./pic18f46k40.h: 25846: __asm("T1CON equ 0FCFh");
[; <" T1CON equ 0FCFh ;# ">
"25960
[; ;./pic18f46k40.h: 25960: __asm("T1GCON equ 0FD0h");
[; <" T1GCON equ 0FD0h ;# ">
"25965
[; ;./pic18f46k40.h: 25965: __asm("PR1 equ 0FD0h");
[; <" PR1 equ 0FD0h ;# ">
"26192
[; ;./pic18f46k40.h: 26192: __asm("T1GATE equ 0FD1h");
[; <" T1GATE equ 0FD1h ;# ">
"26197
[; ;./pic18f46k40.h: 26197: __asm("TMR1GATE equ 0FD1h");
[; <" TMR1GATE equ 0FD1h ;# ">
"26334
[; ;./pic18f46k40.h: 26334: __asm("T1CLK equ 0FD2h");
[; <" T1CLK equ 0FD2h ;# ">
"26339
[; ;./pic18f46k40.h: 26339: __asm("TMR1CLK equ 0FD2h");
[; <" TMR1CLK equ 0FD2h ;# ">
"26476
[; ;./pic18f46k40.h: 26476: __asm("TMR0L equ 0FD3h");
[; <" TMR0L equ 0FD3h ;# ">
"26481
[; ;./pic18f46k40.h: 26481: __asm("TMR0 equ 0FD3h");
[; <" TMR0 equ 0FD3h ;# ">
"26614
[; ;./pic18f46k40.h: 26614: __asm("TMR0H equ 0FD4h");
[; <" TMR0H equ 0FD4h ;# ">
"26619
[; ;./pic18f46k40.h: 26619: __asm("PR0 equ 0FD4h");
[; <" PR0 equ 0FD4h ;# ">
"26868
[; ;./pic18f46k40.h: 26868: __asm("T0CON0 equ 0FD5h");
[; <" T0CON0 equ 0FD5h ;# ">
"26933
[; ;./pic18f46k40.h: 26933: __asm("T0CON1 equ 0FD6h");
[; <" T0CON1 equ 0FD6h ;# ">
"27044
[; ;./pic18f46k40.h: 27044: __asm("PCON0 equ 0FD7h");
[; <" PCON0 equ 0FD7h ;# ">
"27197
[; ;./pic18f46k40.h: 27197: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"27313
[; ;./pic18f46k40.h: 27313: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"27320
[; ;./pic18f46k40.h: 27320: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"27340
[; ;./pic18f46k40.h: 27340: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"27347
[; ;./pic18f46k40.h: 27347: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"27367
[; ;./pic18f46k40.h: 27367: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"27387
[; ;./pic18f46k40.h: 27387: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"27407
[; ;./pic18f46k40.h: 27407: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"27427
[; ;./pic18f46k40.h: 27427: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"27447
[; ;./pic18f46k40.h: 27447: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"27454
[; ;./pic18f46k40.h: 27454: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"27461
[; ;./pic18f46k40.h: 27461: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"27481
[; ;./pic18f46k40.h: 27481: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"27488
[; ;./pic18f46k40.h: 27488: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"27508
[; ;./pic18f46k40.h: 27508: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"27528
[; ;./pic18f46k40.h: 27528: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"27548
[; ;./pic18f46k40.h: 27548: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"27568
[; ;./pic18f46k40.h: 27568: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"27588
[; ;./pic18f46k40.h: 27588: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"27626
[; ;./pic18f46k40.h: 27626: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"27633
[; ;./pic18f46k40.h: 27633: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"27653
[; ;./pic18f46k40.h: 27653: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"27660
[; ;./pic18f46k40.h: 27660: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"27680
[; ;./pic18f46k40.h: 27680: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"27700
[; ;./pic18f46k40.h: 27700: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"27720
[; ;./pic18f46k40.h: 27720: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"27740
[; ;./pic18f46k40.h: 27740: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"27760
[; ;./pic18f46k40.h: 27760: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"27841
[; ;./pic18f46k40.h: 27841: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"27848
[; ;./pic18f46k40.h: 27848: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"27868
[; ;./pic18f46k40.h: 27868: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"27888
[; ;./pic18f46k40.h: 27888: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"27910
[; ;./pic18f46k40.h: 27910: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"27917
[; ;./pic18f46k40.h: 27917: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"27937
[; ;./pic18f46k40.h: 27937: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"27957
[; ;./pic18f46k40.h: 27957: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"27988
[; ;./pic18f46k40.h: 27988: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"27995
[; ;./pic18f46k40.h: 27995: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"28002
[; ;./pic18f46k40.h: 28002: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"28022
[; ;./pic18f46k40.h: 28022: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"28042
[; ;./pic18f46k40.h: 28042: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"28062
[; ;./pic18f46k40.h: 28062: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"28160
[; ;./pic18f46k40.h: 28160: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"28167
[; ;./pic18f46k40.h: 28167: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"28187
[; ;./pic18f46k40.h: 28187: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"28207
[; ;./pic18f46k40.h: 28207: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"20 ./structure.h
[; ;./structure.h: 20: union Type_DP TypeDP;
[v _TypeDP `S1491 ~T0 @X0 1 e ]
"1 ./variable.h
[; ;./variable.h: 1: unsigned char temp=0,ijk=0,disdigit=1,arr[8],ucB_M_SEL=0,B_led=0;
[v _temp `uc ~T0 @X0 1 e ]
[i _temp
-> -> 0 `i `uc
]
[v _ijk `uc ~T0 @X0 1 e ]
[i _ijk
-> -> 0 `i `uc
]
[v _disdigit `uc ~T0 @X0 1 e ]
[i _disdigit
-> -> 1 `i `uc
]
[v _arr `uc ~T0 @X0 -> 8 `i e ]
[v _ucB_M_SEL `uc ~T0 @X0 1 e ]
[i _ucB_M_SEL
-> -> 0 `i `uc
]
[v _B_led `uc ~T0 @X0 1 e ]
[i _B_led
-> -> 0 `i `uc
]
"2
[; ;./variable.h: 2: unsigned int uiBatV=0;
[v _uiBatV `ui ~T0 @X0 1 e ]
[i _uiBatV
-> -> 0 `i `ui
]
"3
[; ;./variable.h: 3: unsigned char setdp=0;
[v _setdp `uc ~T0 @X0 1 e ]
[i _setdp
-> -> 0 `i `uc
]
"4
[; ;./variable.h: 4: unsigned char iDispcurr[4],iDispvolt[4];
[v _iDispcurr `uc ~T0 @X0 -> 4 `i e ]
[v _iDispvolt `uc ~T0 @X0 -> 4 `i e ]
"5
[; ;./variable.h: 5: unsigned int iTemp,iTemp2,count_1ms,count_3s;
[v _iTemp `ui ~T0 @X0 1 e ]
[v _iTemp2 `ui ~T0 @X0 1 e ]
[v _count_1ms `ui ~T0 @X0 1 e ]
[v _count_3s `ui ~T0 @X0 1 e ]
"6
[; ;./variable.h: 6: unsigned char encod,old,firstpulse,secondpulse,new1,plus,minus,temp1,encoder;
[v _encod `uc ~T0 @X0 1 e ]
[v _old `uc ~T0 @X0 1 e ]
[v _firstpulse `uc ~T0 @X0 1 e ]
[v _secondpulse `uc ~T0 @X0 1 e ]
[v _new1 `uc ~T0 @X0 1 e ]
[v _plus `uc ~T0 @X0 1 e ]
[v _minus `uc ~T0 @X0 1 e ]
[v _temp1 `uc ~T0 @X0 1 e ]
[v _encoder `uc ~T0 @X0 1 e ]
"7
[; ;./variable.h: 7: unsigned int setcurrent,hotstart=0,Rsetcurrent;
[v _setcurrent `ui ~T0 @X0 1 e ]
[v _hotstart `ui ~T0 @X0 1 e ]
[i _hotstart
-> -> 0 `i `ui
]
[v _Rsetcurrent `ui ~T0 @X0 1 e ]
"8
[; ;./variable.h: 8: unsigned char count_100ms=0,count2_100ms=0,pluspara=0,minuspara=0,psetcurrent=0,pluscount=0,minuscount=0,arcforce=0;
[v _count_100ms `uc ~T0 @X0 1 e ]
[i _count_100ms
-> -> 0 `i `uc
]
[v _count2_100ms `uc ~T0 @X0 1 e ]
[i _count2_100ms
-> -> 0 `i `uc
]
[v _pluspara `uc ~T0 @X0 1 e ]
[i _pluspara
-> -> 0 `i `uc
]
[v _minuspara `uc ~T0 @X0 1 e ]
[i _minuspara
-> -> 0 `i `uc
]
[v _psetcurrent `uc ~T0 @X0 1 e ]
[i _psetcurrent
-> -> 0 `i `uc
]
[v _pluscount `uc ~T0 @X0 1 e ]
[i _pluscount
-> -> 0 `i `uc
]
[v _minuscount `uc ~T0 @X0 1 e ]
[i _minuscount
-> -> 0 `i `uc
]
[v _arcforce `uc ~T0 @X0 1 e ]
[i _arcforce
-> -> 0 `i `uc
]
"9
[; ;./variable.h: 9: unsigned char memoryfg;
[v _memoryfg `uc ~T0 @X0 1 e ]
"10
[; ;./variable.h: 10: unsigned int iDacref;
[v _iDacref `ui ~T0 @X0 1 e ]
"11
[; ;./variable.h: 11: unsigned char tfg,iCntChk;
[v _tfg `uc ~T0 @X0 1 e ]
[v _iCntChk `uc ~T0 @X0 1 e ]
"12
[; ;./variable.h: 12: unsigned int cnt1ms,cnt10ms,cnt_1s;
[v _cnt1ms `ui ~T0 @X0 1 e ]
[v _cnt10ms `ui ~T0 @X0 1 e ]
[v _cnt_1s `ui ~T0 @X0 1 e ]
"13
[; ;./variable.h: 13: unsigned char cMemorybusyfg,cPrevmode,cMode;
[v _cMemorybusyfg `uc ~T0 @X0 1 e ]
[v _cPrevmode `uc ~T0 @X0 1 e ]
[v _cMode `uc ~T0 @X0 1 e ]
"14
[; ;./variable.h: 14: unsigned char dacoutfg,dispvtgupdatefg,switchfg;
[v _dacoutfg `uc ~T0 @X0 1 e ]
[v _dispvtgupdatefg `uc ~T0 @X0 1 e ]
[v _switchfg `uc ~T0 @X0 1 e ]
"15
[; ;./variable.h: 15: unsigned int stateButton1=0,prevstateButton=0,stateButton2,stateSwitch,prevstateSwitch;
[v _stateButton1 `ui ~T0 @X0 1 e ]
[i _stateButton1
-> -> 0 `i `ui
]
[v _prevstateButton `ui ~T0 @X0 1 e ]
[i _prevstateButton
-> -> 0 `i `ui
]
[v _stateButton2 `ui ~T0 @X0 1 e ]
[v _stateSwitch `ui ~T0 @X0 1 e ]
[v _prevstateSwitch `ui ~T0 @X0 1 e ]
"16
[; ;./variable.h: 16: unsigned char arcrstkeyfg=0,tempfg=0,arconkeyfg=0,arconrstfg=0,setarcdp=0,arconfg=0,arcrstfg=0,OCV_OFF=1,battery_switch=0;
[v _arcrstkeyfg `uc ~T0 @X0 1 e ]
[i _arcrstkeyfg
-> -> 0 `i `uc
]
[v _tempfg `uc ~T0 @X0 1 e ]
[i _tempfg
-> -> 0 `i `uc
]
[v _arconkeyfg `uc ~T0 @X0 1 e ]
[i _arconkeyfg
-> -> 0 `i `uc
]
[v _arconrstfg `uc ~T0 @X0 1 e ]
[i _arconrstfg
-> -> 0 `i `uc
]
[v _setarcdp `uc ~T0 @X0 1 e ]
[i _setarcdp
-> -> 0 `i `uc
]
[v _arconfg `uc ~T0 @X0 1 e ]
[i _arconfg
-> -> 0 `i `uc
]
[v _arcrstfg `uc ~T0 @X0 1 e ]
[i _arcrstfg
-> -> 0 `i `uc
]
[v _OCV_OFF `uc ~T0 @X0 1 e ]
[i _OCV_OFF
-> -> 1 `i `uc
]
[v _battery_switch `uc ~T0 @X0 1 e ]
[i _battery_switch
-> -> 0 `i `uc
]
"17
[; ;./variable.h: 17: unsigned int weldoncnt=0;
[v _weldoncnt `ui ~T0 @X0 1 e ]
[i _weldoncnt
-> -> 0 `i `ui
]
"18
[; ;./variable.h: 18: unsigned char channel = 11;
[v _channel `uc ~T0 @X0 1 e ]
[i _channel
-> -> 11 `i `uc
]
"19
[; ;./variable.h: 19: unsigned char high_byte=0,low_byte=0;
[v _high_byte `uc ~T0 @X0 1 e ]
[i _high_byte
-> -> 0 `i `uc
]
[v _low_byte `uc ~T0 @X0 1 e ]
[i _low_byte
-> -> 0 `i `uc
]
"20
[; ;./variable.h: 20: unsigned int adc=0,iCnt=0;
[v _adc `ui ~T0 @X0 1 e ]
[i _adc
-> -> 0 `i `ui
]
[v _iCnt `ui ~T0 @X0 1 e ]
[i _iCnt
-> -> 0 `i `ui
]
"21
[; ;./variable.h: 21: volatile unsigned int ADC_Volt,ADC_Current,Avg_Current;
[v _ADC_Volt `Vui ~T0 @X0 1 e ]
[v _ADC_Current `Vui ~T0 @X0 1 e ]
[v _Avg_Current `Vui ~T0 @X0 1 e ]
"22
[; ;./variable.h: 22: volatile unsigned int Total_ADC_Volt=0,Total_ADC_Current=0;
[v _Total_ADC_Volt `Vui ~T0 @X0 1 e ]
[i _Total_ADC_Volt
-> -> 0 `i `ui
]
[v _Total_ADC_Current `Vui ~T0 @X0 1 e ]
[i _Total_ADC_Current
-> -> 0 `i `ui
]
"23
[; ;./variable.h: 23: unsigned char adc_vcnt=0,adc_ccnt=0;
[v _adc_vcnt `uc ~T0 @X0 1 e ]
[i _adc_vcnt
-> -> 0 `i `uc
]
[v _adc_ccnt `uc ~T0 @X0 1 e ]
[i _adc_ccnt
-> -> 0 `i `uc
]
"24
[; ;./variable.h: 24: volatile unsigned int VOLTAGE=0,CURRENT=0;
[v _VOLTAGE `Vui ~T0 @X0 1 e ]
[i _VOLTAGE
-> -> 0 `i `ui
]
[v _CURRENT `Vui ~T0 @X0 1 e ]
[i _CURRENT
-> -> 0 `i `ui
]
"25
[; ;./variable.h: 25: unsigned int daccount=0,iHotStartdaccount=0,iArcforcedaccount=0;
[v _daccount `ui ~T0 @X0 1 e ]
[i _daccount
-> -> 0 `i `ui
]
[v _iHotStartdaccount `ui ~T0 @X0 1 e ]
[i _iHotStartdaccount
-> -> 0 `i `ui
]
[v _iArcforcedaccount `ui ~T0 @X0 1 e ]
[i _iArcforcedaccount
-> -> 0 `i `ui
]
"26
[; ;./variable.h: 26: unsigned int arconrstcnt=0,rstcnt=0,timecnt=0,count1_100ms=0;
[v _arconrstcnt `ui ~T0 @X0 1 e ]
[i _arconrstcnt
-> -> 0 `i `ui
]
[v _rstcnt `ui ~T0 @X0 1 e ]
[i _rstcnt
-> -> 0 `i `ui
]
[v _timecnt `ui ~T0 @X0 1 e ]
[i _timecnt
-> -> 0 `i `ui
]
[v _count1_100ms `ui ~T0 @X0 1 e ]
[i _count1_100ms
-> -> 0 `i `ui
]
"27
[; ;./variable.h: 27: volatile unsigned int min=0,sec=0,hr=0;
[v _min `Vui ~T0 @X0 1 e ]
[i _min
-> -> 0 `i `ui
]
[v _sec `Vui ~T0 @X0 1 e ]
[i _sec
-> -> 0 `i `ui
]
[v _hr `Vui ~T0 @X0 1 e ]
[i _hr
-> -> 0 `i `ui
]
"28
[; ;./variable.h: 28: unsigned char cMode,cArcforceMode,cHotstartMode,cDisplayfg,cPrevmode,cDisplaylockfg,cReleasefg,cModechangefg,cSkipfg, ARCFORCE_LEDLAT ;
[v _cMode `uc ~T0 @X0 1 e ]
[v _cArcforceMode `uc ~T0 @X0 1 e ]
[v _cHotstartMode `uc ~T0 @X0 1 e ]
[v _cDisplayfg `uc ~T0 @X0 1 e ]
[v _cPrevmode `uc ~T0 @X0 1 e ]
[v _cDisplaylockfg `uc ~T0 @X0 1 e ]
[v _cReleasefg `uc ~T0 @X0 1 e ]
[v _cModechangefg `uc ~T0 @X0 1 e ]
[v _cSkipfg `uc ~T0 @X0 1 e ]
[v _ARCFORCE_LEDLAT `uc ~T0 @X0 1 e ]
"29
[; ;./variable.h: 29: unsigned int iHotStrRePresscnt,iHotfg=0;
[v _iHotStrRePresscnt `ui ~T0 @X0 1 e ]
[v _iHotfg `ui ~T0 @X0 1 e ]
[i _iHotfg
-> -> 0 `i `ui
]
"30
[; ;./variable.h: 30: unsigned char cFlashMenufg, cHotStrRePressfg,Read_ADC_fg;
[v _cFlashMenufg `uc ~T0 @X0 1 e ]
[v _cHotStrRePressfg `uc ~T0 @X0 1 e ]
[v _Read_ADC_fg `uc ~T0 @X0 1 e ]
"31
[; ;./variable.h: 31: unsigned char cEncupdatefg,iResetfg,iArconDispfg;
[v _cEncupdatefg `uc ~T0 @X0 1 e ]
[v _iResetfg `uc ~T0 @X0 1 e ]
[v _iArconDispfg `uc ~T0 @X0 1 e ]
"32
[; ;./variable.h: 32: unsigned int iHotstartcnt,iHotstart=0,iArcforce=0,ADC_BUF,iRemote,iData,iADCcnt,iEncoderdbcnt,iSkipcnt;
[v _iHotstartcnt `ui ~T0 @X0 1 e ]
[v _iHotstart `ui ~T0 @X0 1 e ]
[i _iHotstart
-> -> 0 `i `ui
]
[v _iArcforce `ui ~T0 @X0 1 e ]
[i _iArcforce
-> -> 0 `i `ui
]
[v _ADC_BUF `ui ~T0 @X0 1 e ]
[v _iRemote `ui ~T0 @X0 1 e ]
[v _iData `ui ~T0 @X0 1 e ]
[v _iADCcnt `ui ~T0 @X0 1 e ]
[v _iEncoderdbcnt `ui ~T0 @X0 1 e ]
[v _iSkipcnt `ui ~T0 @X0 1 e ]
"33
[; ;./variable.h: 33: unsigned int iVolt,iCurr,iTripVolt,iTripVolt1,iVolt1;
[v _iVolt `ui ~T0 @X0 1 e ]
[v _iCurr `ui ~T0 @X0 1 e ]
[v _iTripVolt `ui ~T0 @X0 1 e ]
[v _iTripVolt1 `ui ~T0 @X0 1 e ]
[v _iVolt1 `ui ~T0 @X0 1 e ]
"34
[; ;./variable.h: 34: unsigned char MMA_WELD_ON=0,TIG_WELD_ON=0;
[v _MMA_WELD_ON `uc ~T0 @X0 1 e ]
[i _MMA_WELD_ON
-> -> 0 `i `uc
]
[v _TIG_WELD_ON `uc ~T0 @X0 1 e ]
[i _TIG_WELD_ON
-> -> 0 `i `uc
]
"35
[; ;./variable.h: 35: unsigned int hotstartcount=0,iResetcnt=0,iArconDiscnt=0,iModeSwitchcnt=0,iTimeResetcnt=0;
[v _hotstartcount `ui ~T0 @X0 1 e ]
[i _hotstartcount
-> -> 0 `i `ui
]
[v _iResetcnt `ui ~T0 @X0 1 e ]
[i _iResetcnt
-> -> 0 `i `ui
]
[v _iArconDiscnt `ui ~T0 @X0 1 e ]
[i _iArconDiscnt
-> -> 0 `i `ui
]
[v _iModeSwitchcnt `ui ~T0 @X0 1 e ]
[i _iModeSwitchcnt
-> -> 0 `i `ui
]
[v _iTimeResetcnt `ui ~T0 @X0 1 e ]
[i _iTimeResetcnt
-> -> 0 `i `ui
]
"36
[; ;./variable.h: 36: unsigned int memdata=0,memdatacurr,memdatarcf,memdatahot,memdatamode,memdataswitchselcnt,memdataswitchsel;
[v _memdata `ui ~T0 @X0 1 e ]
[i _memdata
-> -> 0 `i `ui
]
[v _memdatacurr `ui ~T0 @X0 1 e ]
[v _memdatarcf `ui ~T0 @X0 1 e ]
[v _memdatahot `ui ~T0 @X0 1 e ]
[v _memdatamode `ui ~T0 @X0 1 e ]
[v _memdataswitchselcnt `ui ~T0 @X0 1 e ]
[v _memdataswitchsel `ui ~T0 @X0 1 e ]
"37
[; ;./variable.h: 37: unsigned char memorypara[6];
[v _memorypara `uc ~T0 @X0 -> 6 `i e ]
"38
[; ;./variable.h: 38: unsigned char readpara[6];
[v _readpara `uc ~T0 @X0 -> 6 `i e ]
"39
[; ;./variable.h: 39: volatile unsigned int d=0;
[v _d `Vui ~T0 @X0 1 e ]
[i _d
-> -> 0 `i `ui
]
"40
[; ;./variable.h: 40: unsigned int cnt1ms,delaymsec,remotedispcnt=0,cnt100ms;
[v _cnt1ms `ui ~T0 @X0 1 e ]
[v _delaymsec `ui ~T0 @X0 1 e ]
[v _remotedispcnt `ui ~T0 @X0 1 e ]
[i _remotedispcnt
-> -> 0 `i `ui
]
[v _cnt100ms `ui ~T0 @X0 1 e ]
"41
[; ;./variable.h: 41: unsigned char weldonfg=0,Display_updatefg,Error_flag,dispfg;
[v _weldonfg `uc ~T0 @X0 1 e ]
[i _weldonfg
-> -> 0 `i `uc
]
[v _Display_updatefg `uc ~T0 @X0 1 e ]
[v _Error_flag `uc ~T0 @X0 1 e ]
[v _dispfg `uc ~T0 @X0 1 e ]
"42
[; ;./variable.h: 42: unsigned int prevsetcurrent=0,weldvoltage=0,weldcurrent=0,prevweldcurrent=0,prevweldvoltage=0,iHotstartCurrent=0,iArcforceCurrent=0;
[v _prevsetcurrent `ui ~T0 @X0 1 e ]
[i _prevsetcurrent
-> -> 0 `i `ui
]
[v _weldvoltage `ui ~T0 @X0 1 e ]
[i _weldvoltage
-> -> 0 `i `ui
]
[v _weldcurrent `ui ~T0 @X0 1 e ]
[i _weldcurrent
-> -> 0 `i `ui
]
[v _prevweldcurrent `ui ~T0 @X0 1 e ]
[i _prevweldcurrent
-> -> 0 `i `ui
]
[v _prevweldvoltage `ui ~T0 @X0 1 e ]
[i _prevweldvoltage
-> -> 0 `i `ui
]
[v _iHotstartCurrent `ui ~T0 @X0 1 e ]
[i _iHotstartCurrent
-> -> 0 `i `ui
]
[v _iArcforceCurrent `ui ~T0 @X0 1 e ]
[i _iArcforceCurrent
-> -> 0 `i `ui
]
"43
[; ;./variable.h: 43: unsigned int iSamplecnt,tripvoltage=0,iRemotecurr=0,tripvoltage1=0;
[v _iSamplecnt `ui ~T0 @X0 1 e ]
[v _tripvoltage `ui ~T0 @X0 1 e ]
[i _tripvoltage
-> -> 0 `i `ui
]
[v _iRemotecurr `ui ~T0 @X0 1 e ]
[i _iRemotecurr
-> -> 0 `i `ui
]
[v _tripvoltage1 `ui ~T0 @X0 1 e ]
[i _tripvoltage1
-> -> 0 `i `ui
]
"44
[; ;./variable.h: 44: unsigned char UV_ERR_fg,OV_ERR_fg,TH_ERR_fg,LP_ERR_fg,OCV_ERR_fg,NO_CN9_CONNECTOR_ERR_fg;
[v _UV_ERR_fg `uc ~T0 @X0 1 e ]
[v _OV_ERR_fg `uc ~T0 @X0 1 e ]
[v _TH_ERR_fg `uc ~T0 @X0 1 e ]
[v _LP_ERR_fg `uc ~T0 @X0 1 e ]
[v _OCV_ERR_fg `uc ~T0 @X0 1 e ]
[v _NO_CN9_CONNECTOR_ERR_fg `uc ~T0 @X0 1 e ]
"45
[; ;./variable.h: 45: unsigned char testdisplayfg,AFcurrcnt=0,AFtripvtgcnt=0,AFtripvtgcnt1=0;
[v _testdisplayfg `uc ~T0 @X0 1 e ]
[v _AFcurrcnt `uc ~T0 @X0 1 e ]
[i _AFcurrcnt
-> -> 0 `i `uc
]
[v _AFtripvtgcnt `uc ~T0 @X0 1 e ]
[i _AFtripvtgcnt
-> -> 0 `i `uc
]
[v _AFtripvtgcnt1 `uc ~T0 @X0 1 e ]
[i _AFtripvtgcnt1
-> -> 0 `i `uc
]
"46
[; ;./variable.h: 46: unsigned int AFvtgcnt=0,AFvtgcnt1=0,AFremotecnt=0;
[v _AFvtgcnt `ui ~T0 @X0 1 e ]
[i _AFvtgcnt
-> -> 0 `i `ui
]
[v _AFvtgcnt1 `ui ~T0 @X0 1 e ]
[i _AFvtgcnt1
-> -> 0 `i `ui
]
[v _AFremotecnt `ui ~T0 @X0 1 e ]
[i _AFremotecnt
-> -> 0 `i `ui
]
"47
[; ;./variable.h: 47: unsigned char adcremotecurrreadfg,adcfeedbackcurrfg,adcfeedbackvtgfg;
[v _adcremotecurrreadfg `uc ~T0 @X0 1 e ]
[v _adcfeedbackcurrfg `uc ~T0 @X0 1 e ]
[v _adcfeedbackvtgfg `uc ~T0 @X0 1 e ]
"48
[; ;./variable.h: 48: unsigned int iActualcurr=0,iActualtripvolt=0,iActualtripvolt1=0;
[v _iActualcurr `ui ~T0 @X0 1 e ]
[i _iActualcurr
-> -> 0 `i `ui
]
[v _iActualtripvolt `ui ~T0 @X0 1 e ]
[i _iActualtripvolt
-> -> 0 `i `ui
]
[v _iActualtripvolt1 `ui ~T0 @X0 1 e ]
[i _iActualtripvolt1
-> -> 0 `i `ui
]
"49
[; ;./variable.h: 49: unsigned int iActualvolt,iRemoteoffset,iActualRemotecurr1,iActualRemotecurr2,iActualvolt1;
[v _iActualvolt `ui ~T0 @X0 1 e ]
[v _iRemoteoffset `ui ~T0 @X0 1 e ]
[v _iActualRemotecurr1 `ui ~T0 @X0 1 e ]
[v _iActualRemotecurr2 `ui ~T0 @X0 1 e ]
[v _iActualvolt1 `ui ~T0 @X0 1 e ]
"50
[; ;./variable.h: 50: unsigned int long AFremotecurr,AFvtg,AFcurr,AFtripvtg,AFtripvtg1,AFvtg1;
[v _AFremotecurr `ul ~T0 @X0 1 e ]
[v _AFvtg `ul ~T0 @X0 1 e ]
[v _AFcurr `ul ~T0 @X0 1 e ]
[v _AFtripvtg `ul ~T0 @X0 1 e ]
[v _AFtripvtg1 `ul ~T0 @X0 1 e ]
[v _AFvtg1 `ul ~T0 @X0 1 e ]
"51
[; ;./variable.h: 51: unsigned char antistickfg,dispcurrfg,dispvtgfg,iRemotefg,premotesetcurrent=0,disptripvtgfg;
[v _antistickfg `uc ~T0 @X0 1 e ]
[v _dispcurrfg `uc ~T0 @X0 1 e ]
[v _dispvtgfg `uc ~T0 @X0 1 e ]
[v _iRemotefg `uc ~T0 @X0 1 e ]
[v _premotesetcurrent `uc ~T0 @X0 1 e ]
[i _premotesetcurrent
-> -> 0 `i `uc
]
[v _disptripvtgfg `uc ~T0 @X0 1 e ]
"52
[; ;./variable.h: 52: unsigned int cnt200ms=0,cnt1sec=0;
[v _cnt200ms `ui ~T0 @X0 1 e ]
[i _cnt200ms
-> -> 0 `i `ui
]
[v _cnt1sec `ui ~T0 @X0 1 e ]
[i _cnt1sec
-> -> 0 `i `ui
]
"53
[; ;./variable.h: 53: unsigned char prevsec=0,prevmin=0,prevhr=0;
[v _prevsec `uc ~T0 @X0 1 e ]
[i _prevsec
-> -> 0 `i `uc
]
[v _prevmin `uc ~T0 @X0 1 e ]
[i _prevmin
-> -> 0 `i `uc
]
[v _prevhr `uc ~T0 @X0 1 e ]
[i _prevhr
-> -> 0 `i `uc
]
"54
[; ;./variable.h: 54: unsigned int iArcForceTimeCnt,default_setcurrent,default_cModel;
[v _iArcForceTimeCnt `ui ~T0 @X0 1 e ]
[v _default_setcurrent `ui ~T0 @X0 1 e ]
[v _default_cModel `ui ~T0 @X0 1 e ]
"55
[; ;./variable.h: 55: unsigned char cEnDCurrUpdatefg,cArcForceUpdatefg,cHotStartUpdatefg,cRemoteEnDCurrUpdatefg,cEnDCurrfg;
[v _cEnDCurrUpdatefg `uc ~T0 @X0 1 e ]
[v _cArcForceUpdatefg `uc ~T0 @X0 1 e ]
[v _cHotStartUpdatefg `uc ~T0 @X0 1 e ]
[v _cRemoteEnDCurrUpdatefg `uc ~T0 @X0 1 e ]
[v _cEnDCurrfg `uc ~T0 @X0 1 e ]
"56
[; ;./variable.h: 56: unsigned char c10Msecfg,SwitchModefg,c100Msecfg;
[v _c10Msecfg `uc ~T0 @X0 1 e ]
[v _SwitchModefg `uc ~T0 @X0 1 e ]
[v _c100Msecfg `uc ~T0 @X0 1 e ]
"57
[; ;./variable.h: 57: unsigned char cArcForceOnfg,cSkipHotfg,cHotstartmenufg,cSwitchmodefg;
[v _cArcForceOnfg `uc ~T0 @X0 1 e ]
[v _cSkipHotfg `uc ~T0 @X0 1 e ]
[v _cHotstartmenufg `uc ~T0 @X0 1 e ]
[v _cSwitchmodefg `uc ~T0 @X0 1 e ]
"58
[; ;./variable.h: 58: unsigned int iRockerORtactileSwitchcnt,iModeSelection;
[v _iRockerORtactileSwitchcnt `ui ~T0 @X0 1 e ]
[v _iModeSelection `ui ~T0 @X0 1 e ]
"59
[; ;./variable.h: 59: unsigned char cForSwitchSelectionfg,cForSwitchSelectionMode,cSkipModefg,count3_100ms=0,cModel,cTest=0,cFlashMenuSWfg;
[v _cForSwitchSelectionfg `uc ~T0 @X0 1 e ]
[v _cForSwitchSelectionMode `uc ~T0 @X0 1 e ]
[v _cSkipModefg `uc ~T0 @X0 1 e ]
[v _count3_100ms `uc ~T0 @X0 1 e ]
[i _count3_100ms
-> -> 0 `i `uc
]
[v _cModel `uc ~T0 @X0 1 e ]
[v _cTest `uc ~T0 @X0 1 e ]
[i _cTest
-> -> 0 `i `uc
]
[v _cFlashMenuSWfg `uc ~T0 @X0 1 e ]
"60
[; ;./variable.h: 60: unsigned int tem1=1,SwitchMode;
[v _tem1 `ui ~T0 @X0 1 e ]
[i _tem1
-> -> 1 `i `ui
]
[v _SwitchMode `ui ~T0 @X0 1 e ]
"61
[; ;./variable.h: 61: unsigned int tem2=1,tem3=1;
[v _tem2 `ui ~T0 @X0 1 e ]
[i _tem2
-> -> 1 `i `ui
]
[v _tem3 `ui ~T0 @X0 1 e ]
[i _tem3
-> -> 1 `i `ui
]
"62
[; ;./variable.h: 62: unsigned char cSkipTRfg,cResetRePressfg,cFlashTRMenufg,cArcOnMode,cResetMode,ArcOnMenuMode,cReset=0,cResetDecide,cArcOnfoundfg;
[v _cSkipTRfg `uc ~T0 @X0 1 e ]
[v _cResetRePressfg `uc ~T0 @X0 1 e ]
[v _cFlashTRMenufg `uc ~T0 @X0 1 e ]
[v _cArcOnMode `uc ~T0 @X0 1 e ]
[v _cResetMode `uc ~T0 @X0 1 e ]
[v _ArcOnMenuMode `uc ~T0 @X0 1 e ]
[v _cReset `uc ~T0 @X0 1 e ]
[i _cReset
-> -> 0 `i `uc
]
[v _cResetDecide `uc ~T0 @X0 1 e ]
[v _cArcOnfoundfg `uc ~T0 @X0 1 e ]
"63
[; ;./variable.h: 63: unsigned char MenuMode,keyfoundfg,Switchkeyfoundfg,SwitchMenuMode,Display_EnDUpdatefg;
[v _MenuMode `uc ~T0 @X0 1 e ]
[v _keyfoundfg `uc ~T0 @X0 1 e ]
[v _Switchkeyfoundfg `uc ~T0 @X0 1 e ]
[v _SwitchMenuMode `uc ~T0 @X0 1 e ]
[v _Display_EnDUpdatefg `uc ~T0 @X0 1 e ]
"64
[; ;./variable.h: 64: unsigned char err_dispfg=0;
[v _err_dispfg `uc ~T0 @X0 1 e ]
[i _err_dispfg
-> -> 0 `i `uc
]
"65
[; ;./variable.h: 65: volatile unsigned int er1,er2,er3,er4;
[v _er1 `Vui ~T0 @X0 1 e ]
[v _er2 `Vui ~T0 @X0 1 e ]
[v _er3 `Vui ~T0 @X0 1 e ]
[v _er4 `Vui ~T0 @X0 1 e ]
"66
[; ;./variable.h: 66: unsigned char cErrorFlashfg,cFlashfg;
[v _cErrorFlashfg `uc ~T0 @X0 1 e ]
[v _cFlashfg `uc ~T0 @X0 1 e ]
"67
[; ;./variable.h: 67: unsigned int cFlashCntr,iEncodercnt,iRemoteoffset1;
[v _cFlashCntr `ui ~T0 @X0 1 e ]
[v _iEncodercnt `ui ~T0 @X0 1 e ]
[v _iRemoteoffset1 `ui ~T0 @X0 1 e ]
"68
[; ;./variable.h: 68: unsigned char no_connector_fg;
[v _no_connector_fg `uc ~T0 @X0 1 e ]
"69
[; ;./variable.h: 69: unsigned char cOffsetSavefg,cRemoteCalfg;
[v _cOffsetSavefg `uc ~T0 @X0 1 e ]
[v _cRemoteCalfg `uc ~T0 @X0 1 e ]
"70
[; ;./variable.h: 70: unsigned int iPerCentage,iOffsetDiv;
[v _iPerCentage `ui ~T0 @X0 1 e ]
[v _iOffsetDiv `ui ~T0 @X0 1 e ]
"71
[; ;./variable.h: 71: unsigned char cRemoteOnfg;
[v _cRemoteOnfg `uc ~T0 @X0 1 e ]
"72
[; ;./variable.h: 72: unsigned char RemoteOffsetMenu,remotekeyfoundfg,cRemotemaxoffsetfg,cRemoteMenufg,cRemoteoffsetmaxmode,cRemoteoffsetminmode;
[v _RemoteOffsetMenu `uc ~T0 @X0 1 e ]
[v _remotekeyfoundfg `uc ~T0 @X0 1 e ]
[v _cRemotemaxoffsetfg `uc ~T0 @X0 1 e ]
[v _cRemoteMenufg `uc ~T0 @X0 1 e ]
[v _cRemoteoffsetmaxmode `uc ~T0 @X0 1 e ]
[v _cRemoteoffsetminmode `uc ~T0 @X0 1 e ]
"73
[; ;./variable.h: 73: unsigned int iPOndelay;
[v _iPOndelay `ui ~T0 @X0 1 e ]
"74
[; ;./variable.h: 74: unsigned int iPrevSetcurrent;
[v _iPrevSetcurrent `ui ~T0 @X0 1 e ]
"75
[; ;./variable.h: 75: unsigned int iRemoteoffsetmin,iRemoteoffsetmax,iActualRemotecurr;
[v _iRemoteoffsetmin `ui ~T0 @X0 1 e ]
[v _iRemoteoffsetmax `ui ~T0 @X0 1 e ]
[v _iActualRemotecurr `ui ~T0 @X0 1 e ]
"76
[; ;./variable.h: 76: unsigned int iRemoteoffCal;
[v _iRemoteoffCal `ui ~T0 @X0 1 e ]
"77
[; ;./variable.h: 77: unsigned int iPrevsetcurrent,iPrevMode,iPrevHotstart,iPrevArcforce;
[v _iPrevsetcurrent `ui ~T0 @X0 1 e ]
[v _iPrevMode `ui ~T0 @X0 1 e ]
[v _iPrevHotstart `ui ~T0 @X0 1 e ]
[v _iPrevArcforce `ui ~T0 @X0 1 e ]
"78
[; ;./variable.h: 78: unsigned char cModeLatchfg;
[v _cModeLatchfg `uc ~T0 @X0 1 e ]
"79
[; ;./variable.h: 79: unsigned int remotecurr;
[v _remotecurr `ui ~T0 @X0 1 e ]
"80
[; ;./variable.h: 80: unsigned char cVRD_sel=0,cVRD_mode,cVRD_fg,cVRDTimerSavefg,cnt3fg,cRecordVRDONvtg;
[v _cVRD_sel `uc ~T0 @X0 1 e ]
[i _cVRD_sel
-> -> 0 `i `uc
]
[v _cVRD_mode `uc ~T0 @X0 1 e ]
[v _cVRD_fg `uc ~T0 @X0 1 e ]
[v _cVRDTimerSavefg `uc ~T0 @X0 1 e ]
[v _cnt3fg `uc ~T0 @X0 1 e ]
[v _cRecordVRDONvtg `uc ~T0 @X0 1 e ]
"81
[; ;./variable.h: 81: unsigned int ivrdcnt,iPrevVRDTime,ivrdcnt1,iVRD_Time;
[v _ivrdcnt `ui ~T0 @X0 1 e ]
[v _iPrevVRDTime `ui ~T0 @X0 1 e ]
[v _ivrdcnt1 `ui ~T0 @X0 1 e ]
[v _iVRD_Time `ui ~T0 @X0 1 e ]
"82
[; ;./variable.h: 82: unsigned int iActualVRDvtgON,iSampleVRDvtgcnt,VRDTimecnt_1s;
[v _iActualVRDvtgON `ui ~T0 @X0 1 e ]
[v _iSampleVRDvtgcnt `ui ~T0 @X0 1 e ]
[v _VRDTimecnt_1s `ui ~T0 @X0 1 e ]
"83
[; ;./variable.h: 83: unsigned char cEditfg;
[v _cEditfg `uc ~T0 @X0 1 e ]
"84
[; ;./variable.h: 84: unsigned char cModel_Select=2,ModelMenuMode,menukeyfoundfg,MainMenuMode=0,secondmenukeyfoundfg;
[v _cModel_Select `uc ~T0 @X0 1 e ]
[i _cModel_Select
-> -> 2 `i `uc
]
[v _ModelMenuMode `uc ~T0 @X0 1 e ]
[v _menukeyfoundfg `uc ~T0 @X0 1 e ]
[v _MainMenuMode `uc ~T0 @X0 1 e ]
[i _MainMenuMode
-> -> 0 `i `uc
]
[v _secondmenukeyfoundfg `uc ~T0 @X0 1 e ]
"85
[; ;./variable.h: 85: unsigned int temp3,tem4=1,model_setcurrent;
[v _temp3 `ui ~T0 @X0 1 e ]
[v _tem4 `ui ~T0 @X0 1 e ]
[i _tem4
-> -> 1 `i `ui
]
[v _model_setcurrent `ui ~T0 @X0 1 e ]
"86
[; ;./variable.h: 86: unsigned char cTest1,cEncoderPressDetectfg;
[v _cTest1 `uc ~T0 @X0 1 e ]
[v _cEncoderPressDetectfg `uc ~T0 @X0 1 e ]
"87
[; ;./variable.h: 87: unsigned char cCommonEnDUpdatefg,cMenudata_changefg;
[v _cCommonEnDUpdatefg `uc ~T0 @X0 1 e ]
[v _cMenudata_changefg `uc ~T0 @X0 1 e ]
"88
[; ;./variable.h: 88: unsigned int iMenudata_no_change_cnt,iMenudata_no_change_cntt;
[v _iMenudata_no_change_cnt `ui ~T0 @X0 1 e ]
[v _iMenudata_no_change_cntt `ui ~T0 @X0 1 e ]
"89
[; ;./variable.h: 89: unsigned int iRemotecnt,iRemotecnt1;
[v _iRemotecnt `ui ~T0 @X0 1 e ]
[v _iRemotecnt1 `ui ~T0 @X0 1 e ]
"90
[; ;./variable.h: 90: unsigned char cBypass_Menudata_no_change_cnt_fg;
[v _cBypass_Menudata_no_change_cnt_fg `uc ~T0 @X0 1 e ]
"91
[; ;./variable.h: 91: float fOffset,fOffsetpart_600,fOffset1;
[v _fOffset `f ~T0 @X0 1 e ]
[v _fOffsetpart_600 `f ~T0 @X0 1 e ]
[v _fOffset1 `f ~T0 @X0 1 e ]
"92
[; ;./variable.h: 92: float fGndRes,ftemp,ftest1,fremotecurr;
[v _fGndRes `f ~T0 @X0 1 e ]
[v _ftemp `f ~T0 @X0 1 e ]
[v _ftest1 `f ~T0 @X0 1 e ]
[v _fremotecurr `f ~T0 @X0 1 e ]
"93
[; ;./variable.h: 93: unsigned int iGndRes,count_10Ms,cnt_10ms,cnt_10s;
[v _iGndRes `ui ~T0 @X0 1 e ]
[v _count_10Ms `ui ~T0 @X0 1 e ]
[v _cnt_10ms `ui ~T0 @X0 1 e ]
[v _cnt_10s `ui ~T0 @X0 1 e ]
"94
[; ;./variable.h: 94: unsigned int iBLEHotStart=0,iBLEArcForce=0;
[v _iBLEHotStart `ui ~T0 @X0 1 e ]
[i _iBLEHotStart
-> -> 0 `i `ui
]
[v _iBLEArcForce `ui ~T0 @X0 1 e ]
[i _iBLEArcForce
-> -> 0 `i `ui
]
"95
[; ;./variable.h: 95: unsigned int iPotSetcurrent,ASetcurrentcnt,iDispSetcurrent,iPotArcForce,AArcForcecnt,iDispArcForce,iPotHotStart,AHotStartcnt,iDispHotStart;
[v _iPotSetcurrent `ui ~T0 @X0 1 e ]
[v _ASetcurrentcnt `ui ~T0 @X0 1 e ]
[v _iDispSetcurrent `ui ~T0 @X0 1 e ]
[v _iPotArcForce `ui ~T0 @X0 1 e ]
[v _AArcForcecnt `ui ~T0 @X0 1 e ]
[v _iDispArcForce `ui ~T0 @X0 1 e ]
[v _iPotHotStart `ui ~T0 @X0 1 e ]
[v _AHotStartcnt `ui ~T0 @X0 1 e ]
[v _iDispHotStart `ui ~T0 @X0 1 e ]
"96
[; ;./variable.h: 96: unsigned int long ASetcurrent,AArcForce,AHotStart,ASetBand;
[v _ASetcurrent `ul ~T0 @X0 1 e ]
[v _AArcForce `ul ~T0 @X0 1 e ]
[v _AHotStart `ul ~T0 @X0 1 e ]
[v _ASetBand `ul ~T0 @X0 1 e ]
"97
[; ;./variable.h: 97: unsigned char cModelSelectfg,cSwitchSelectionfg,cGoToModelSelectionfg,cSaveModelfg,cModelReadfg,cTestfg=0,ctestfg;
[v _cModelSelectfg `uc ~T0 @X0 1 e ]
[v _cSwitchSelectionfg `uc ~T0 @X0 1 e ]
[v _cGoToModelSelectionfg `uc ~T0 @X0 1 e ]
[v _cSaveModelfg `uc ~T0 @X0 1 e ]
[v _cModelReadfg `uc ~T0 @X0 1 e ]
[v _cTestfg `uc ~T0 @X0 1 e ]
[i _cTestfg
-> -> 0 `i `uc
]
[v _ctestfg `uc ~T0 @X0 1 e ]
"98
[; ;./variable.h: 98: unsigned char cSaveModel1fg,cSaveModel2fg,cSaveModel3fg,cModel_CurrSelect1,cModel_CurrSelect2,cAlreadyModelSelectedfg=0,cModel_CurrSelect3;
[v _cSaveModel1fg `uc ~T0 @X0 1 e ]
[v _cSaveModel2fg `uc ~T0 @X0 1 e ]
[v _cSaveModel3fg `uc ~T0 @X0 1 e ]
[v _cModel_CurrSelect1 `uc ~T0 @X0 1 e ]
[v _cModel_CurrSelect2 `uc ~T0 @X0 1 e ]
[v _cAlreadyModelSelectedfg `uc ~T0 @X0 1 e ]
[i _cAlreadyModelSelectedfg
-> -> 0 `i `uc
]
[v _cModel_CurrSelect3 `uc ~T0 @X0 1 e ]
"99
[; ;./variable.h: 99: unsigned int iVRDSwitchcnt,iModelSelectBand;
[v _iVRDSwitchcnt `ui ~T0 @X0 1 e ]
[v _iModelSelectBand `ui ~T0 @X0 1 e ]
"100
[; ;./variable.h: 100: unsigned char cCheckPinStatefg,cPrevModel,cDefaultMemoryReadfg,cSETResetfg;
[v _cCheckPinStatefg `uc ~T0 @X0 1 e ]
[v _cPrevModel `uc ~T0 @X0 1 e ]
[v _cDefaultMemoryReadfg `uc ~T0 @X0 1 e ]
[v _cSETResetfg `uc ~T0 @X0 1 e ]
"101
[; ;./variable.h: 101: unsigned char cModeSelectDonefg,cRemoteDetectedfg=0,cDisplayDetectedfg,dispDisplaycurrupdatefg,dispRemotecurrupdatefg;
[v _cModeSelectDonefg `uc ~T0 @X0 1 e ]
[v _cRemoteDetectedfg `uc ~T0 @X0 1 e ]
[i _cRemoteDetectedfg
-> -> 0 `i `uc
]
[v _cDisplayDetectedfg `uc ~T0 @X0 1 e ]
[v _dispDisplaycurrupdatefg `uc ~T0 @X0 1 e ]
[v _dispRemotecurrupdatefg `uc ~T0 @X0 1 e ]
"102
[; ;./variable.h: 102: unsigned int iPrevDisplaySetcurrent,iRemoteCheckcnt,cFlashResetcntr,iPrevDisplayUARTSetcurrent;
[v _iPrevDisplaySetcurrent `ui ~T0 @X0 1 e ]
[v _iRemoteCheckcnt `ui ~T0 @X0 1 e ]
[v _cFlashResetcntr `ui ~T0 @X0 1 e ]
[v _iPrevDisplayUARTSetcurrent `ui ~T0 @X0 1 e ]
"103
[; ;./variable.h: 103: unsigned char cResetfg,cResetdonefg,cMeasureARCOnTimefg,cLongPressResetfg,cResetMenufg;
[v _cResetfg `uc ~T0 @X0 1 e ]
[v _cResetdonefg `uc ~T0 @X0 1 e ]
[v _cMeasureARCOnTimefg `uc ~T0 @X0 1 e ]
[v _cLongPressResetfg `uc ~T0 @X0 1 e ]
[v _cResetMenufg `uc ~T0 @X0 1 e ]
"104
[; ;./variable.h: 104: unsigned int iPrevsec,iPrevmin,iPrevhr,iPotBand,iPotBandcnt,iTimeResetSwitchcnt,iResetcnt1,cFlashResetfg,iEnterResetMenucnt;
[v _iPrevsec `ui ~T0 @X0 1 e ]
[v _iPrevmin `ui ~T0 @X0 1 e ]
[v _iPrevhr `ui ~T0 @X0 1 e ]
[v _iPotBand `ui ~T0 @X0 1 e ]
[v _iPotBandcnt `ui ~T0 @X0 1 e ]
[v _iTimeResetSwitchcnt `ui ~T0 @X0 1 e ]
[v _iResetcnt1 `ui ~T0 @X0 1 e ]
[v _cFlashResetfg `ui ~T0 @X0 1 e ]
[v _iEnterResetMenucnt `ui ~T0 @X0 1 e ]
"105
[; ;./variable.h: 105: float ftemp_disp,fGndRes_disp;
[v _ftemp_disp `f ~T0 @X0 1 e ]
[v _fGndRes_disp `f ~T0 @X0 1 e ]
"106
[; ;./variable.h: 106: unsigned int iOffsetBand,iMAXFBCurrOffset,iSlope,iOffsetBand1,iMINFBCurrOffset;
[v _iOffsetBand `ui ~T0 @X0 1 e ]
[v _iMAXFBCurrOffset `ui ~T0 @X0 1 e ]
[v _iSlope `ui ~T0 @X0 1 e ]
[v _iOffsetBand1 `ui ~T0 @X0 1 e ]
[v _iMINFBCurrOffset `ui ~T0 @X0 1 e ]
"107
[; ;./variable.h: 107: unsigned char cMaxFBCurrCalibrationfg,cOffsetCalifg,cCaliCurrfg,cSetcurrentfg;
[v _cMaxFBCurrCalibrationfg `uc ~T0 @X0 1 e ]
[v _cOffsetCalifg `uc ~T0 @X0 1 e ]
[v _cCaliCurrfg `uc ~T0 @X0 1 e ]
[v _cSetcurrentfg `uc ~T0 @X0 1 e ]
"108
[; ;./variable.h: 108: unsigned char reccnt,creceivefg,recstrtptr,rec_arr[10];
[v _reccnt `uc ~T0 @X0 1 e ]
[v _creceivefg `uc ~T0 @X0 1 e ]
[v _recstrtptr `uc ~T0 @X0 1 e ]
[v _rec_arr `uc ~T0 @X0 -> 10 `i e ]
"109
[; ;./variable.h: 109: unsigned char ctranschksum,crecchksum,csendtoremotefg,count_10ms,cDigitalremoteDetectfg,model,cDigitalFramRxfg;
[v _ctranschksum `uc ~T0 @X0 1 e ]
[v _crecchksum `uc ~T0 @X0 1 e ]
[v _csendtoremotefg `uc ~T0 @X0 1 e ]
[v _count_10ms `uc ~T0 @X0 1 e ]
[v _cDigitalremoteDetectfg `uc ~T0 @X0 1 e ]
[v _model `uc ~T0 @X0 1 e ]
[v _cDigitalFramRxfg `uc ~T0 @X0 1 e ]
"110
[; ;./variable.h: 110: unsigned int reclower,rechigher,recremotevtg,recremotecurr,sendcur,sendvtg,iUARTRemotecurr;
[v _reclower `ui ~T0 @X0 1 e ]
[v _rechigher `ui ~T0 @X0 1 e ]
[v _recremotevtg `ui ~T0 @X0 1 e ]
[v _recremotecurr `ui ~T0 @X0 1 e ]
[v _sendcur `ui ~T0 @X0 1 e ]
[v _sendvtg `ui ~T0 @X0 1 e ]
[v _iUARTRemotecurr `ui ~T0 @X0 1 e ]
"111
[; ;./variable.h: 111: char uartdata=0;
[v _uartdata `uc ~T0 @X0 1 e ]
[i _uartdata
-> -> 0 `i `uc
]
"112
[; ;./variable.h: 112: unsigned char cRemoteSetcurrentfg;
[v _cRemoteSetcurrentfg `uc ~T0 @X0 1 e ]
"113
[; ;./variable.h: 113: unsigned int cDigitalRXMonitorcnt,count_1s,iDigiRXmaxcurrmax,iDigiRXmaxcurrmin,iPrevRemoteCurr,RSetcurrent;
[v _cDigitalRXMonitorcnt `ui ~T0 @X0 1 e ]
[v _count_1s `ui ~T0 @X0 1 e ]
[v _iDigiRXmaxcurrmax `ui ~T0 @X0 1 e ]
[v _iDigiRXmaxcurrmin `ui ~T0 @X0 1 e ]
[v _iPrevRemoteCurr `ui ~T0 @X0 1 e ]
[v _RSetcurrent `ui ~T0 @X0 1 e ]
"114
[; ;./variable.h: 114: signed int iOFFSET_TERM_400,iOFFSET_TERM_600;
[v _iOFFSET_TERM_400 `i ~T0 @X0 1 e ]
[v _iOFFSET_TERM_600 `i ~T0 @X0 1 e ]
"115
[; ;./variable.h: 115: float fOFFSET_MID_400,fOFFSET_MID_600,fSLOPE_MID_400,fOFFSET_MID_400_MIN,fOFFSET_MID_600_MIN,fOFFSET_TERM_600;
[v _fOFFSET_MID_400 `f ~T0 @X0 1 e ]
[v _fOFFSET_MID_600 `f ~T0 @X0 1 e ]
[v _fSLOPE_MID_400 `f ~T0 @X0 1 e ]
[v _fOFFSET_MID_400_MIN `f ~T0 @X0 1 e ]
[v _fOFFSET_MID_600_MIN `f ~T0 @X0 1 e ]
[v _fOFFSET_TERM_600 `f ~T0 @X0 1 e ]
"116
[; ;./variable.h: 116: unsigned char cVRDCountSettingfg,cDispVRDcountfg,cVRDCntSavefg,cCaliDetectfg,cDispSetcurrentfg,cVRDcntDispf=0;
[v _cVRDCountSettingfg `uc ~T0 @X0 1 e ]
[v _cDispVRDcountfg `uc ~T0 @X0 1 e ]
[v _cVRDCntSavefg `uc ~T0 @X0 1 e ]
[v _cCaliDetectfg `uc ~T0 @X0 1 e ]
[v _cDispSetcurrentfg `uc ~T0 @X0 1 e ]
[v _cVRDcntDispf `uc ~T0 @X0 1 e ]
[i _cVRDcntDispf
-> -> 0 `i `uc
]
"117
[; ;./variable.h: 117: unsigned int iSetVRD_Time,iVRDCount,memdatavrdcnt,iVRDCount2;
[v _iSetVRD_Time `ui ~T0 @X0 1 e ]
[v _iVRDCount `ui ~T0 @X0 1 e ]
[v _memdatavrdcnt `ui ~T0 @X0 1 e ]
[v _iVRDCount2 `ui ~T0 @X0 1 e ]
"118
[; ;./variable.h: 118: unsigned char cPowerONfg,cMinFBCurrCalibrationfg;
[v _cPowerONfg `uc ~T0 @X0 1 e ]
[v _cMinFBCurrCalibrationfg `uc ~T0 @X0 1 e ]
"119
[; ;./variable.h: 119: unsigned int iPowerONcnt , cDispFBCurrCalifg,iDispFBCurrCaliCount,cCaliDispFBCurrfg;
[v _iPowerONcnt `ui ~T0 @X0 1 e ]
[v _cDispFBCurrCalifg `ui ~T0 @X0 1 e ]
[v _iDispFBCurrCaliCount `ui ~T0 @X0 1 e ]
[v _cCaliDispFBCurrfg `ui ~T0 @X0 1 e ]
"120
[; ;./variable.h: 120: float fSLOPE_400,fSLOPE1,fDispArcForce;
[v _fSLOPE_400 `f ~T0 @X0 1 e ]
[v _fSLOPE1 `f ~T0 @X0 1 e ]
[v _fDispArcForce `f ~T0 @X0 1 e ]
"121
[; ;./variable.h: 121: unsigned int MMASLOPE_400,iMaxCurrent,x,icalibrationfg=0,ivrdcalibrationfg=0,ivrdledfg=1;
[v _MMASLOPE_400 `ui ~T0 @X0 1 e ]
[v _iMaxCurrent `ui ~T0 @X0 1 e ]
[v _x `ui ~T0 @X0 1 e ]
[v _icalibrationfg `ui ~T0 @X0 1 e ]
[i _icalibrationfg
-> -> 0 `i `ui
]
[v _ivrdcalibrationfg `ui ~T0 @X0 1 e ]
[i _ivrdcalibrationfg
-> -> 0 `i `ui
]
[v _ivrdledfg `ui ~T0 @X0 1 e ]
[i _ivrdledfg
-> -> 1 `i `ui
]
"122
[; ;./variable.h: 122: unsigned long int iDispArcForce1;
[v _iDispArcForce1 `ul ~T0 @X0 1 e ]
[v F10481 `Cui ~T0 @X0 -> 8 `i t ]
"123
[; ;./variable.h: 123: const unsigned int lookup_table[47][8]=
[v _lookup_table `F10481 ~T0 @X0 -> 47 `i e ]
[i _lookup_table
:U ..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 1 `i `ui
-> -> 0 `i `ui
..
..
]
"178
[; ;./variable.h: 178: unsigned char Rx1Receive=0,ucRXFlag=0,ucInitCMD=0,ucCMDSEND=0,ucBlutoothInit=0,i=0;
[v _Rx1Receive `uc ~T0 @X0 1 e ]
[i _Rx1Receive
-> -> 0 `i `uc
]
[v _ucRXFlag `uc ~T0 @X0 1 e ]
[i _ucRXFlag
-> -> 0 `i `uc
]
[v _ucInitCMD `uc ~T0 @X0 1 e ]
[i _ucInitCMD
-> -> 0 `i `uc
]
[v _ucCMDSEND `uc ~T0 @X0 1 e ]
[i _ucCMDSEND
-> -> 0 `i `uc
]
[v _ucBlutoothInit `uc ~T0 @X0 1 e ]
[i _ucBlutoothInit
-> -> 0 `i `uc
]
[v _i `uc ~T0 @X0 1 e ]
[i _i
-> -> 0 `i `uc
]
"179
[; ;./variable.h: 179: unsigned char RxReceive=0,Rx2Receive=0,ucRx2Flag=0,bit7=0,bit4=0,j=0,ucIDcnt=0;;
[v _RxReceive `uc ~T0 @X0 1 e ]
[i _RxReceive
-> -> 0 `i `uc
]
[v _Rx2Receive `uc ~T0 @X0 1 e ]
[i _Rx2Receive
-> -> 0 `i `uc
]
[v _ucRx2Flag `uc ~T0 @X0 1 e ]
[i _ucRx2Flag
-> -> 0 `i `uc
]
[v _bit7 `uc ~T0 @X0 1 e ]
[i _bit7
-> -> 0 `i `uc
]
[v _bit4 `uc ~T0 @X0 1 e ]
[i _bit4
-> -> 0 `i `uc
]
[v _j `uc ~T0 @X0 1 e ]
[i _j
-> -> 0 `i `uc
]
[v _ucIDcnt `uc ~T0 @X0 1 e ]
[i _ucIDcnt
-> -> 0 `i `uc
]
"180
[; ;./variable.h: 180: unsigned int uiBRSetCurr=0;
[v _uiBRSetCurr `ui ~T0 @X0 1 e ]
[i _uiBRSetCurr
-> -> 0 `i `ui
]
"181
[; ;./variable.h: 181: unsigned int uiBCnt=0;
[v _uiBCnt `ui ~T0 @X0 1 e ]
[i _uiBCnt
-> -> 0 `i `ui
]
"183
[; ;./variable.h: 183: unsigned char AT[]="AT\r\n";
[v _AT `uc ~T0 @X0 -> 5 `i e ]
[i _AT
:U ..
-> 65 `c
-> 84 `c
-> 13 `c
-> 10 `c
-> 0 `c
..
]
"184
[; ;./variable.h: 184: unsigned char BLENAME_R[]="AT+BLENAME?\r\n";
[v _BLENAME_R `uc ~T0 @X0 -> 14 `i e ]
[i _BLENAME_R
:U ..
-> 65 `c
-> 84 `c
-> 43 `c
-> 66 `c
-> 76 `c
-> 69 `c
-> 78 `c
-> 65 `c
-> 77 `c
-> 69 `c
-> 63 `c
-> 13 `c
-> 10 `c
-> 0 `c
..
]
"185
[; ;./variable.h: 185: unsigned char BLENAME_S[]="AT+BLENAME=ADOR\r\n";
[v _BLENAME_S `uc ~T0 @X0 -> 18 `i e ]
[i _BLENAME_S
:U ..
-> 65 `c
-> 84 `c
-> 43 `c
-> 66 `c
-> 76 `c
-> 69 `c
-> 78 `c
-> 65 `c
-> 77 `c
-> 69 `c
-> 61 `c
-> 65 `c
-> 68 `c
-> 79 `c
-> 82 `c
-> 13 `c
-> 10 `c
-> 0 `c
..
]
"186
[; ;./variable.h: 186: unsigned char BLEMODE_R[]="AT+BLEMODE?\r\n";
[v _BLEMODE_R `uc ~T0 @X0 -> 14 `i e ]
[i _BLEMODE_R
:U ..
-> 65 `c
-> 84 `c
-> 43 `c
-> 66 `c
-> 76 `c
-> 69 `c
-> 77 `c
-> 79 `c
-> 68 `c
-> 69 `c
-> 63 `c
-> 13 `c
-> 10 `c
-> 0 `c
..
]
"187
[; ;./variable.h: 187: unsigned char BLEMODE_S[]="AT+BLEMODE=0\r\n";
[v _BLEMODE_S `uc ~T0 @X0 -> 15 `i e ]
[i _BLEMODE_S
:U ..
-> 65 `c
-> 84 `c
-> 43 `c
-> 66 `c
-> 76 `c
-> 69 `c
-> 77 `c
-> 79 `c
-> 68 `c
-> 69 `c
-> 61 `c
-> 48 `c
-> 13 `c
-> 10 `c
-> 0 `c
..
]
"188
[; ;./variable.h: 188: unsigned char TRANSENTER[]="AT+TRANSENTER\r\n";
[v _TRANSENTER `uc ~T0 @X0 -> 16 `i e ]
[i _TRANSENTER
:U ..
-> 65 `c
-> 84 `c
-> 43 `c
-> 84 `c
-> 82 `c
-> 65 `c
-> 78 `c
-> 83 `c
-> 69 `c
-> 78 `c
-> 84 `c
-> 69 `c
-> 82 `c
-> 13 `c
-> 10 `c
-> 0 `c
..
]
"189
[; ;./variable.h: 189: unsigned char CMDMODE[]="+++";
[v _CMDMODE `uc ~T0 @X0 -> 4 `i e ]
[i _CMDMODE
:U ..
-> 43 `c
-> 43 `c
-> 43 `c
-> 0 `c
..
]
"190
[; ;./variable.h: 190: unsigned char ucState=0,ucCount=0,ucDataSend=0,ucBLE_CON_DIS=0;
[v _ucState `uc ~T0 @X0 1 e ]
[i _ucState
-> -> 0 `i `uc
]
[v _ucCount `uc ~T0 @X0 1 e ]
[i _ucCount
-> -> 0 `i `uc
]
[v _ucDataSend `uc ~T0 @X0 1 e ]
[i _ucDataSend
-> -> 0 `i `uc
]
[v _ucBLE_CON_DIS `uc ~T0 @X0 1 e ]
[i _ucBLE_CON_DIS
-> -> 0 `i `uc
]
"191
[; ;./variable.h: 191: unsigned char ucState1=0,ucCount1=0,ucDataSend1=0,ucBLE_CON_DIS1=0;
[v _ucState1 `uc ~T0 @X0 1 e ]
[i _ucState1
-> -> 0 `i `uc
]
[v _ucCount1 `uc ~T0 @X0 1 e ]
[i _ucCount1
-> -> 0 `i `uc
]
[v _ucDataSend1 `uc ~T0 @X0 1 e ]
[i _ucDataSend1
-> -> 0 `i `uc
]
[v _ucBLE_CON_DIS1 `uc ~T0 @X0 1 e ]
[i _ucBLE_CON_DIS1
-> -> 0 `i `uc
]
"192
[; ;./variable.h: 192: unsigned char ucSetCur[3]={0};
[v _ucSetCur `uc ~T0 @X0 -> 3 `i e ]
[i _ucSetCur
:U ..
-> -> 0 `i `uc
..
]
"193
[; ;./variable.h: 193: unsigned int SendBuff[10]={0};
[v _SendBuff `ui ~T0 @X0 -> 10 `i e ]
[i _SendBuff
:U ..
-> -> 0 `i `ui
..
]
"194
[; ;./variable.h: 194: unsigned char SendBuff2[4]={0};
[v _SendBuff2 `uc ~T0 @X0 -> 4 `i e ]
[i _SendBuff2
:U ..
-> -> 0 `i `uc
..
]
"195
[; ;./variable.h: 195: unsigned char BLE_CONDIS[]={0};
[v _BLE_CONDIS `uc ~T0 @X0 -> -> 1 `i `ux e ]
[i _BLE_CONDIS
:U ..
-> -> 0 `i `uc
..
]
"196
[; ;./variable.h: 196: unsigned char TimeBuf[3]={0};
[v _TimeBuf `uc ~T0 @X0 -> 3 `i e ]
[i _TimeBuf
:U ..
-> -> 0 `i `uc
..
]
"197
[; ;./variable.h: 197: unsigned char Temp[10];
[v _Temp `uc ~T0 @X0 -> 10 `i e ]
"198
[; ;./variable.h: 198: unsigned int uiBPer=0,uiBTemp=0;
[v _uiBPer `ui ~T0 @X0 1 e ]
[i _uiBPer
-> -> 0 `i `ui
]
[v _uiBTemp `ui ~T0 @X0 1 e ]
[i _uiBTemp
-> -> 0 `i `ui
]
"16 MainBat.c
[p x FEXTOSC    =  OFF                    ]
"22
[p x BOREN        =  OFF ]
"23
[p x MCLRE        =  EXTMCLR  ]
"24
[p x LVP            =  OFF               ]
"26
[p x STVREN      =  OFF  ]
"27
[p x WDTE          =  OFF ]
[v $root$_INTERRUPT_InterruptManager `(v ~T0 @X0 0 e ]
"91
[; ;MainBat.c: 91: void __attribute__((picinterrupt(("")))) INTERRUPT_InterruptManager (void)
[v _INTERRUPT_InterruptManager `(v ~T1 @X0 1 ef ]
"92
[; ;MainBat.c: 92: {
{
[e :U _INTERRUPT_InterruptManager ]
[f ]
"93
[; ;MainBat.c: 93:     if(OCV_OFF == 1)
[e $ ! == -> _OCV_OFF `i -> 1 `i 1493  ]
"94
[; ;MainBat.c: 94:     {
{
"95
[; ;MainBat.c: 95:         Error_flag= 1;
[e = _Error_flag -> -> 1 `i `uc ]
"96
[; ;MainBat.c: 96:         err_dispfg= 1;
[e = _err_dispfg -> -> 1 `i `uc ]
"97
[; ;MainBat.c: 97:         LATCbits.LATC2= 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"98
[; ;MainBat.c: 98:         daccount= 0;
[e = _daccount -> -> 0 `i `ui ]
"99
[; ;MainBat.c: 99:         LATEbits.LATE2= 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"100
[; ;MainBat.c: 100:         Delay(30,'s');
[e ( _Delay (2 , -> -> 30 `i `ui -> -> 115 `ui `uc ]
"101
[; ;MainBat.c: 101:         Error_flag=0;
[e = _Error_flag -> -> 0 `i `uc ]
"102
[; ;MainBat.c: 102:         err_dispfg=0;
[e = _err_dispfg -> -> 0 `i `uc ]
"103
[; ;MainBat.c: 103:         LATCbits.LATC2=0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"104
[; ;MainBat.c: 104:         OCV_OFF=0;
[e = _OCV_OFF -> -> 0 `i `uc ]
"105
[; ;MainBat.c: 105:         LATEbits.LATE2=1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"107
[; ;MainBat.c: 107:     }
}
[e :U 1493 ]
"109
[; ;MainBat.c: 109:     if(PIR0bits.TMR0IF == 1)
[e $ ! == -> . . _PIR0bits 0 5 `i -> 1 `i 1494  ]
"110
[; ;MainBat.c: 110:     {
{
"111
[; ;MainBat.c: 111:         PIR0bits.IOCIF = 0;
[e = . . _PIR0bits 0 4 -> -> 0 `i `uc ]
"112
[; ;MainBat.c: 112:         PIR0bits.TMR0IF = 0;
[e = . . _PIR0bits 0 5 -> -> 0 `i `uc ]
"113
[; ;MainBat.c: 113:         TMR0H = 0xD1;
[e = _TMR0H -> -> 209 `i `uc ]
"114
[; ;MainBat.c: 114:         TMR0L = 0x20;
[e = _TMR0L -> -> 32 `i `uc ]
"115
[; ;MainBat.c: 115:         cnt1ms++;
[e ++ _cnt1ms -> -> 1 `i `ui ]
"116
[; ;MainBat.c: 116:         display();
[e ( _display ..  ]
"117
[; ;MainBat.c: 117:         ADCON0bits.ADGO = 1;
[e = . . _ADCON0bits 0 0 -> -> 1 `i `uc ]
"118
[; ;MainBat.c: 118:         VRDTimecnt_1s++;
[e ++ _VRDTimecnt_1s -> -> 1 `i `ui ]
"119
[; ;MainBat.c: 119:         count_10Ms++;
[e ++ _count_10Ms -> -> 1 `i `ui ]
"120
[; ;MainBat.c: 120:         cnt_10ms++;
[e ++ _cnt_10ms -> -> 1 `i `ui ]
"121
[; ;MainBat.c: 121:         if(ucBlutoothInit==1)
[e $ ! == -> _ucBlutoothInit `i -> 1 `i 1495  ]
"122
[; ;MainBat.c: 122:         {
{
"123
[; ;MainBat.c: 123:             uiBCnt++;
[e ++ _uiBCnt -> -> 1 `i `ui ]
"124
[; ;MainBat.c: 124:             if(uiBCnt>2000)
[e $ ! > _uiBCnt -> -> 2000 `i `ui 1496  ]
"125
[; ;MainBat.c: 125:             {
{
"126
[; ;MainBat.c: 126:                uiBCnt=0;ucCMDSEND=1;
[e = _uiBCnt -> -> 0 `i `ui ]
[e = _ucCMDSEND -> -> 1 `i `uc ]
"127
[; ;MainBat.c: 127:             }
}
[e :U 1496 ]
"128
[; ;MainBat.c: 128:         }
}
[e $U 1497  ]
"129
[; ;MainBat.c: 129:         else
[e :U 1495 ]
"130
[; ;MainBat.c: 130:         {
{
"131
[; ;MainBat.c: 131:             uiBCnt++;
[e ++ _uiBCnt -> -> 1 `i `ui ]
"132
[; ;MainBat.c: 132:             if(uiBCnt>1000)
[e $ ! > _uiBCnt -> -> 1000 `i `ui 1498  ]
"133
[; ;MainBat.c: 133:             {
{
"134
[; ;MainBat.c: 134:                uiBCnt=0;ucDataSend=1;
[e = _uiBCnt -> -> 0 `i `ui ]
[e = _ucDataSend -> -> 1 `i `uc ]
"135
[; ;MainBat.c: 135:             }
}
[e :U 1498 ]
"136
[; ;MainBat.c: 136:         }
}
[e :U 1497 ]
"137
[; ;MainBat.c: 137:         if(cPowerONfg == 1)
[e $ ! == -> _cPowerONfg `i -> 1 `i 1499  ]
"138
[; ;MainBat.c: 138:         {
{
"139
[; ;MainBat.c: 139:             if(iPowerONcnt == 0)
[e $ ! == _iPowerONcnt -> -> 0 `i `ui 1500  ]
"140
[; ;MainBat.c: 140:             {
{
"141
[; ;MainBat.c: 141:                 iPowerONcnt = 0;
[e = _iPowerONcnt -> -> 0 `i `ui ]
"142
[; ;MainBat.c: 142:                 cPowerONfg = 0;
[e = _cPowerONfg -> -> 0 `i `uc ]
"143
[; ;MainBat.c: 143:             }
}
[e $U 1501  ]
"144
[; ;MainBat.c: 144:             else
[e :U 1500 ]
"145
[; ;MainBat.c: 145:             {
{
"146
[; ;MainBat.c: 146:                 iPowerONcnt--;
[e -- _iPowerONcnt -> -> 1 `i `ui ]
"147
[; ;MainBat.c: 147:             }
}
[e :U 1501 ]
"148
[; ;MainBat.c: 148:         }
}
[e :U 1499 ]
"204
[; ;MainBat.c: 204:         if(VRDTimecnt_1s >= 10)
[e $ ! >= _VRDTimecnt_1s -> -> 10 `i `ui 1502  ]
"205
[; ;MainBat.c: 205:         {
{
"206
[; ;MainBat.c: 206:             VRDTimecnt_1s = 0;
[e = _VRDTimecnt_1s -> -> 0 `i `ui ]
"207
[; ;MainBat.c: 207:             if(iVRD_Time != 0)
[e $ ! != _iVRD_Time -> -> 0 `i `ui 1503  ]
"208
[; ;MainBat.c: 208:             {
{
"209
[; ;MainBat.c: 209:                 if((iActualvolt1 > 650) && (weldonfg == 0) && (cEditfg == 0))
[e $ ! && && > _iActualvolt1 -> -> 650 `i `ui == -> _weldonfg `i -> 0 `i == -> _cEditfg `i -> 0 `i 1504  ]
"210
[; ;MainBat.c: 210:                 {
{
"211
[; ;MainBat.c: 211:                     if(cMode == 'M')
[e $ ! == -> _cMode `ui -> 77 `ui 1505  ]
"212
[; ;MainBat.c: 212:                     {
{
"213
[; ;MainBat.c: 213:                         ivrdcnt++;
[e ++ _ivrdcnt -> -> 1 `i `ui ]
"214
[; ;MainBat.c: 214:                     }
}
[e :U 1505 ]
"215
[; ;MainBat.c: 215:                     if((ivrdcnt >= (iVRD_Time*100)) && (cVRD_fg == 0) && (cMode == 'M'))
[e $ ! && && >= _ivrdcnt * _iVRD_Time -> -> 100 `i `ui == -> _cVRD_fg `i -> 0 `i == -> _cMode `ui -> 77 `ui 1506  ]
"216
[; ;MainBat.c: 216:                     {
{
"217
[; ;MainBat.c: 217:                         LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"218
[; ;MainBat.c: 218:                         LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"219
[; ;MainBat.c: 219:                         ivrdcnt = 0;
[e = _ivrdcnt -> -> 0 `i `ui ]
"220
[; ;MainBat.c: 220:                         cVRD_fg = 1;
[e = _cVRD_fg -> -> 1 `i `uc ]
"221
[; ;MainBat.c: 221:                         cRecordVRDONvtg = 1;
[e = _cRecordVRDONvtg -> -> 1 `i `uc ]
"222
[; ;MainBat.c: 222:                         iSampleVRDvtgcnt = 0;
[e = _iSampleVRDvtgcnt -> -> 0 `i `ui ]
"223
[; ;MainBat.c: 223:                     }
}
[e :U 1506 ]
"224
[; ;MainBat.c: 224:                 }
}
[e $U 1507  ]
"225
[; ;MainBat.c: 225:                 else if(cVRD_fg == 0)
[e :U 1504 ]
[e $ ! == -> _cVRD_fg `i -> 0 `i 1508  ]
"226
[; ;MainBat.c: 226:                 {
{
"227
[; ;MainBat.c: 227:                     LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"228
[; ;MainBat.c: 228:                     LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"229
[; ;MainBat.c: 229:                 }
}
[e :U 1508 ]
[e :U 1507 ]
"230
[; ;MainBat.c: 230:             }
}
[e $U 1509  ]
"231
[; ;MainBat.c: 231:             else if(iVRD_Time == 0)
[e :U 1503 ]
[e $ ! == _iVRD_Time -> -> 0 `i `ui 1510  ]
"232
[; ;MainBat.c: 232:             {
{
"233
[; ;MainBat.c: 233:                 LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"234
[; ;MainBat.c: 234:                 LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"235
[; ;MainBat.c: 235:                 cVRD_fg = 0;
[e = _cVRD_fg -> -> 0 `i `uc ]
"236
[; ;MainBat.c: 236:                 ivrdcnt = 0;
[e = _ivrdcnt -> -> 0 `i `ui ]
"237
[; ;MainBat.c: 237:             }
}
[e :U 1510 ]
[e :U 1509 ]
"239
[; ;MainBat.c: 239:             if(cVRD_fg == 1)
[e $ ! == -> _cVRD_fg `i -> 1 `i 1511  ]
"240
[; ;MainBat.c: 240:             {
{
"241
[; ;MainBat.c: 241:                 if((((iActualVRDvtgON*90)/100) > iActualvolt1) && (cRecordVRDONvtg == 0))
[e $ ! && > / * _iActualVRDvtgON -> -> 90 `i `ui -> -> 100 `i `ui _iActualvolt1 == -> _cRecordVRDONvtg `i -> 0 `i 1512  ]
"242
[; ;MainBat.c: 242:                 {
{
"243
[; ;MainBat.c: 243:                     ivrdcnt = 0;
[e = _ivrdcnt -> -> 0 `i `ui ]
"244
[; ;MainBat.c: 244:                     cVRD_fg = 0;
[e = _cVRD_fg -> -> 0 `i `uc ]
"245
[; ;MainBat.c: 245:                 }
}
[e :U 1512 ]
"246
[; ;MainBat.c: 246:             }
}
[e :U 1511 ]
"247
[; ;MainBat.c: 247:         }
}
[e :U 1502 ]
"249
[; ;MainBat.c: 249:         if(cnt1ms >=10)
[e $ ! >= _cnt1ms -> -> 10 `i `ui 1513  ]
"250
[; ;MainBat.c: 250:         {
{
"251
[; ;MainBat.c: 251:             c10Msecfg = 1;
[e = _c10Msecfg -> -> 1 `i `uc ]
"253
[; ;MainBat.c: 253:             if(iPOndelay == 0)
[e $ ! == _iPOndelay -> -> 0 `i `ui 1514  ]
"254
[; ;MainBat.c: 254:             {
{
"256
[; ;MainBat.c: 256:             }
}
[e $U 1515  ]
"257
[; ;MainBat.c: 257:             else
[e :U 1514 ]
"258
[; ;MainBat.c: 258:             {
{
"259
[; ;MainBat.c: 259:                 iPOndelay--;
[e -- _iPOndelay -> -> 1 `i `ui ]
"260
[; ;MainBat.c: 260:             }
}
[e :U 1515 ]
"261
[; ;MainBat.c: 261:             cnt1ms = 0;
[e = _cnt1ms -> -> 0 `i `ui ]
"262
[; ;MainBat.c: 262:         }
}
[e :U 1513 ]
"264
[; ;MainBat.c: 264:         if(cFlashCntr != 0)
[e $ ! != _cFlashCntr -> -> 0 `i `ui 1516  ]
"265
[; ;MainBat.c: 265:         {
{
"266
[; ;MainBat.c: 266:             cFlashCntr--;
[e -- _cFlashCntr -> -> 1 `i `ui ]
"267
[; ;MainBat.c: 267:         }
}
[e $U 1517  ]
"268
[; ;MainBat.c: 268:         else
[e :U 1516 ]
"269
[; ;MainBat.c: 269:         {
{
"270
[; ;MainBat.c: 270:             cFlashCntr = 0;
[e = _cFlashCntr -> -> 0 `i `ui ]
"271
[; ;MainBat.c: 271:         }
}
[e :U 1517 ]
"273
[; ;MainBat.c: 273:         if(weldonfg == 1)
[e $ ! == -> _weldonfg `i -> 1 `i 1518  ]
"274
[; ;MainBat.c: 274:         {
{
"275
[; ;MainBat.c: 275:             timecnt++;
[e ++ _timecnt -> -> 1 `i `ui ]
"277
[; ;MainBat.c: 277:             if(timecnt>=1000)
[e $ ! >= _timecnt -> -> 1000 `i `ui 1519  ]
"278
[; ;MainBat.c: 278:             {
{
"279
[; ;MainBat.c: 279:                 timecnt=0;
[e = _timecnt -> -> 0 `i `ui ]
"280
[; ;MainBat.c: 280:                 sec++;
[e ++ _sec -> -> 1 `i `Vui ]
"281
[; ;MainBat.c: 281:                 if(sec>=60)
[e $ ! >= _sec -> -> 60 `i `ui 1520  ]
"282
[; ;MainBat.c: 282:                 {
{
"283
[; ;MainBat.c: 283:                     sec=0;
[e = _sec -> -> 0 `i `ui ]
"284
[; ;MainBat.c: 284:                     min++;
[e ++ _min -> -> 1 `i `Vui ]
"285
[; ;MainBat.c: 285:                 }
}
[e :U 1520 ]
"286
[; ;MainBat.c: 286:                 if(min>=60)
[e $ ! >= _min -> -> 60 `i `ui 1521  ]
"287
[; ;MainBat.c: 287:                 {
{
"288
[; ;MainBat.c: 288:                     min=0;
[e = _min -> -> 0 `i `ui ]
"289
[; ;MainBat.c: 289:                     sec=0;
[e = _sec -> -> 0 `i `ui ]
"290
[; ;MainBat.c: 290:                     hr++;
[e ++ _hr -> -> 1 `i `Vui ]
"291
[; ;MainBat.c: 291:                 }
}
[e :U 1521 ]
"292
[; ;MainBat.c: 292:                 if(hr>=99)
[e $ ! >= _hr -> -> 99 `i `ui 1522  ]
"293
[; ;MainBat.c: 293:                 {
{
"294
[; ;MainBat.c: 294:                     min=0;
[e = _min -> -> 0 `i `ui ]
"295
[; ;MainBat.c: 295:                     sec=0;
[e = _sec -> -> 0 `i `ui ]
"296
[; ;MainBat.c: 296:                     hr=0;
[e = _hr -> -> 0 `i `ui ]
"297
[; ;MainBat.c: 297:                 }
}
[e :U 1522 ]
"298
[; ;MainBat.c: 298:             }
}
[e :U 1519 ]
"299
[; ;MainBat.c: 299:         }
}
[e :U 1518 ]
"300
[; ;MainBat.c: 300:     }
}
[e :U 1494 ]
"302
[; ;MainBat.c: 302:     if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
[e $ ! && == -> . . _PIE1bits 0 0 `i -> 1 `i == -> . . _PIR1bits 0 0 `i -> 1 `i 1523  ]
"303
[; ;MainBat.c: 303:     {
{
"304
[; ;MainBat.c: 304:         ADC_BUF = ADRESH;
[e = _ADC_BUF -> _ADRESH `ui ]
"305
[; ;MainBat.c: 305:         ADC_BUF = ADC_BUF << 8;
[e = _ADC_BUF << _ADC_BUF -> 8 `i ]
"306
[; ;MainBat.c: 306:         ADC_BUF = (ADC_BUF + ADRESL);
[e = _ADC_BUF + _ADC_BUF -> _ADRESL `ui ]
"308
[; ;MainBat.c: 308:         if(channel == 0)
[e $ ! == -> _channel `i -> 0 `i 1524  ]
"309
[; ;MainBat.c: 309:         {
{
"310
[; ;MainBat.c: 310:             iVolt = ADC_BUF;
[e = _iVolt _ADC_BUF ]
"312
[; ;MainBat.c: 312:             AFvtg+=iVolt;
[e =+ _AFvtg -> _iVolt `ul ]
"313
[; ;MainBat.c: 313:             AFvtgcnt++;
[e ++ _AFvtgcnt -> -> 1 `i `ui ]
"314
[; ;MainBat.c: 314:             if(AFvtgcnt >= 16)
[e $ ! >= _AFvtgcnt -> -> 16 `i `ui 1525  ]
"315
[; ;MainBat.c: 315:             {
{
"316
[; ;MainBat.c: 316:                 iActualvolt = AFvtg;
[e = _iActualvolt -> _AFvtg `ui ]
"317
[; ;MainBat.c: 317:                 iActualvolt = iActualvolt >> 4;
[e = _iActualvolt >> _iActualvolt -> 4 `i ]
"318
[; ;MainBat.c: 318:                 iActualvolt = iActualvolt * 1.5338;
[e = _iActualvolt -> * -> _iActualvolt `d .1.5338 `ui ]
"319
[; ;MainBat.c: 319:                 dispvtgupdatefg=1;
[e = _dispvtgupdatefg -> -> 1 `i `uc ]
"320
[; ;MainBat.c: 320:                 AFvtg = 0;
[e = _AFvtg -> -> -> 0 `i `l `ul ]
"321
[; ;MainBat.c: 321:                 AFvtgcnt = 0;
[e = _AFvtgcnt -> -> 0 `i `ui ]
"322
[; ;MainBat.c: 322:             }
}
[e :U 1525 ]
"324
[; ;MainBat.c: 324:             iVolt1 = ADC_BUF;
[e = _iVolt1 _ADC_BUF ]
"325
[; ;MainBat.c: 325:             AFvtg1+=iVolt1;
[e =+ _AFvtg1 -> _iVolt1 `ul ]
"326
[; ;MainBat.c: 326:             AFvtgcnt1++;
[e ++ _AFvtgcnt1 -> -> 1 `i `ui ]
"327
[; ;MainBat.c: 327:             if(AFvtgcnt1 >= 64)
[e $ ! >= _AFvtgcnt1 -> -> 64 `i `ui 1526  ]
"328
[; ;MainBat.c: 328:             {
{
"329
[; ;MainBat.c: 329:                 iActualvolt1 = AFvtg1;
[e = _iActualvolt1 -> _AFvtg1 `ui ]
"330
[; ;MainBat.c: 330:                 iActualvolt1 = iActualvolt1 >> 6;
[e = _iActualvolt1 >> _iActualvolt1 -> 6 `i ]
"331
[; ;MainBat.c: 331:                 iActualvolt1 = iActualvolt1 * 1.5338;
[e = _iActualvolt1 -> * -> _iActualvolt1 `d .1.5338 `ui ]
"332
[; ;MainBat.c: 332:                 if(cRecordVRDONvtg == 1)
[e $ ! == -> _cRecordVRDONvtg `i -> 1 `i 1527  ]
"333
[; ;MainBat.c: 333:                 {
{
"334
[; ;MainBat.c: 334:                     iSampleVRDvtgcnt++;
[e ++ _iSampleVRDvtgcnt -> -> 1 `i `ui ]
"335
[; ;MainBat.c: 335:                     if(iSampleVRDvtgcnt >= 3)
[e $ ! >= _iSampleVRDvtgcnt -> -> 3 `i `ui 1528  ]
"336
[; ;MainBat.c: 336:                     {
{
"337
[; ;MainBat.c: 337:                         iActualVRDvtgON = iActualvolt1;
[e = _iActualVRDvtgON _iActualvolt1 ]
"338
[; ;MainBat.c: 338:                         cRecordVRDONvtg = 0;
[e = _cRecordVRDONvtg -> -> 0 `i `uc ]
"339
[; ;MainBat.c: 339:                         iSampleVRDvtgcnt = 0;
[e = _iSampleVRDvtgcnt -> -> 0 `i `ui ]
"340
[; ;MainBat.c: 340:                     }
}
[e :U 1528 ]
"341
[; ;MainBat.c: 341:                 }
}
[e :U 1527 ]
"342
[; ;MainBat.c: 342:                 dispvtgfg = 1;
[e = _dispvtgfg -> -> 1 `i `uc ]
"343
[; ;MainBat.c: 343:                 AFvtg1 = 0;
[e = _AFvtg1 -> -> -> 0 `i `l `ul ]
"344
[; ;MainBat.c: 344:                 AFvtgcnt1 = 0;
[e = _AFvtgcnt1 -> -> 0 `i `ui ]
"345
[; ;MainBat.c: 345:             }
}
[e :U 1526 ]
"347
[; ;MainBat.c: 347:             channel = 1;
[e = _channel -> -> 1 `i `uc ]
"348
[; ;MainBat.c: 348:             ADPCH = 0x01;
[e = _ADPCH -> -> 1 `i `uc ]
"349
[; ;MainBat.c: 349:         }
}
[e $U 1529  ]
"350
[; ;MainBat.c: 350:         else if(channel == 1)
[e :U 1524 ]
[e $ ! == -> _channel `i -> 1 `i 1530  ]
"351
[; ;MainBat.c: 351:         {
{
"352
[; ;MainBat.c: 352:             iCurr = ADC_BUF;
[e = _iCurr _ADC_BUF ]
"354
[; ;MainBat.c: 354:             AFcurr+=iCurr;
[e =+ _AFcurr -> _iCurr `ul ]
"355
[; ;MainBat.c: 355:             AFcurrcnt++;
[e ++ _AFcurrcnt -> -> 1 `i `uc ]
"356
[; ;MainBat.c: 356:             if(AFcurrcnt >= 64)
[e $ ! >= -> _AFcurrcnt `i -> 64 `i 1531  ]
"357
[; ;MainBat.c: 357:             {
{
"358
[; ;MainBat.c: 358:                 iActualcurr = AFcurr;
[e = _iActualcurr -> _AFcurr `ui ]
"359
[; ;MainBat.c: 359:                 iActualcurr = (iActualcurr >> 6);
[e = _iActualcurr >> _iActualcurr -> 6 `i ]
"361
[; ;MainBat.c: 361:                 if(iActualcurr<=80)
[e $ ! <= _iActualcurr -> -> 80 `i `ui 1532  ]
"362
[; ;MainBat.c: 362:                  iActualcurr = (iActualcurr * 5.3)/10;
[e = _iActualcurr -> / * -> _iActualcurr `d .5.3 -> -> 10 `i `d `ui ]
[e $U 1533  ]
"363
[; ;MainBat.c: 363:                 else if((iActualcurr>80) && (iActualcurr<=245))
[e :U 1532 ]
[e $ ! && > _iActualcurr -> -> 80 `i `ui <= _iActualcurr -> -> 245 `i `ui 1534  ]
"364
[; ;MainBat.c: 364:                  iActualcurr = (iActualcurr * 5.2)/10;
[e = _iActualcurr -> / * -> _iActualcurr `d .5.2 -> -> 10 `i `d `ui ]
[e $U 1535  ]
"365
[; ;MainBat.c: 365:                 else
[e :U 1534 ]
"366
[; ;MainBat.c: 366:                    iActualcurr = (iActualcurr * 5.0)/10;
[e = _iActualcurr -> / * -> _iActualcurr `d .5.0 -> -> 10 `i `d `ui ]
[e :U 1535 ]
[e :U 1533 ]
"369
[; ;MainBat.c: 369:                 iActualcurr = iActualcurr*2.3;
[e = _iActualcurr -> * -> _iActualcurr `d .2.3 `ui ]
"370
[; ;MainBat.c: 370:                 dispcurrfg = 1;
[e = _dispcurrfg -> -> 1 `i `uc ]
"371
[; ;MainBat.c: 371:                 AFcurr = 0;
[e = _AFcurr -> -> -> 0 `i `l `ul ]
"372
[; ;MainBat.c: 372:                 AFcurrcnt = 0;
[e = _AFcurrcnt -> -> 0 `i `uc ]
"373
[; ;MainBat.c: 373:             }
}
[e :U 1531 ]
"374
[; ;MainBat.c: 374:             channel = 13;
[e = _channel -> -> 13 `i `uc ]
"375
[; ;MainBat.c: 375:             ADPCH = 0x0D;
[e = _ADPCH -> -> 13 `i `uc ]
"376
[; ;MainBat.c: 376:         }
}
[e $U 1536  ]
"377
[; ;MainBat.c: 377:         else if(channel == 13)
[e :U 1530 ]
[e $ ! == -> _channel `i -> 13 `i 1537  ]
"378
[; ;MainBat.c: 378:         {
{
"379
[; ;MainBat.c: 379:             iRemote = ADC_BUF;
[e = _iRemote _ADC_BUF ]
"380
[; ;MainBat.c: 380:             AFremotecurr+=iRemote;
[e =+ _AFremotecurr -> _iRemote `ul ]
"381
[; ;MainBat.c: 381:             AFremotecnt++;
[e ++ _AFremotecnt -> -> 1 `i `ui ]
"383
[; ;MainBat.c: 383:             if(AFremotecnt >= 32)
[e $ ! >= _AFremotecnt -> -> 32 `i `ui 1538  ]
"384
[; ;MainBat.c: 384:             {
{
"385
[; ;MainBat.c: 385:                 AFremotecurr = AFremotecurr >> 5;
[e = _AFremotecurr >> _AFremotecurr -> 5 `i ]
"386
[; ;MainBat.c: 386:                 iActualRemotecurr = AFremotecurr;
[e = _iActualRemotecurr -> _AFremotecurr `ui ]
"387
[; ;MainBat.c: 387:                 iActualRemotecurr = iActualRemotecurr * 4.88;
[e = _iActualRemotecurr -> * -> _iActualRemotecurr `d .4.88 `ui ]
"388
[; ;MainBat.c: 388:                 iRemoteCheckcnt = iActualRemotecurr;
[e = _iRemoteCheckcnt _iActualRemotecurr ]
"390
[; ;MainBat.c: 390:                 ftemp = iActualRemotecurr;
[e = _ftemp -> _iActualRemotecurr `f ]
"392
[; ;MainBat.c: 392:                 fGndRes = (ftemp * 10000) /(5000 - ftemp);
[e = _fGndRes / * _ftemp -> -> 10000 `i `f - -> -> 5000 `i `f _ftemp ]
"394
[; ;MainBat.c: 394:                 ftemp = (fGndRes * 5000) / (10000 + 9600);
[e = _ftemp / * _fGndRes -> -> 5000 `i `f -> + -> 10000 `i -> 9600 `i `f ]
"396
[; ;MainBat.c: 396:                 iActualRemotecurr = ftemp;
[e = _iActualRemotecurr -> _ftemp `ui ]
"399
[; ;MainBat.c: 399:                 if(cModel_Select == 1)
[e $ ! == -> _cModel_Select `i -> 1 `i 1539  ]
"400
[; ;MainBat.c: 400:                 {
{
"401
[; ;MainBat.c: 401:                     fOffset = 9.5;
[e = _fOffset -> .9.5 `f ]
"402
[; ;MainBat.c: 402:                 }
}
[e $U 1540  ]
"403
[; ;MainBat.c: 403:                 else if(cModel_Select == 2)
[e :U 1539 ]
[e $ ! == -> _cModel_Select `i -> 2 `i 1541  ]
"404
[; ;MainBat.c: 404:                 {
{
"406
[; ;MainBat.c: 406:                     fOffset = 6.2;
[e = _fOffset -> .6.2 `f ]
"407
[; ;MainBat.c: 407:                 }
}
[e $U 1542  ]
"408
[; ;MainBat.c: 408:                 else if(cModel_Select == 3)
[e :U 1541 ]
[e $ ! == -> _cModel_Select `i -> 3 `i 1543  ]
"409
[; ;MainBat.c: 409:                 {
{
"410
[; ;MainBat.c: 410:                     fOffset = 4.0;
[e = _fOffset -> .4.0 `f ]
"411
[; ;MainBat.c: 411:                 }
}
[e :U 1543 ]
[e :U 1542 ]
[e :U 1540 ]
"412
[; ;MainBat.c: 412:                 iRemotecnt = 3900;
[e = _iRemotecnt -> -> 3900 `i `ui ]
"413
[; ;MainBat.c: 413:                 if(iRemoteCheckcnt <= iRemotecnt)
[e $ ! <= _iRemoteCheckcnt _iRemotecnt 1544  ]
"414
[; ;MainBat.c: 414:                 {
{
"415
[; ;MainBat.c: 415:                     cRemoteDetectedfg = 1;
[e = _cRemoteDetectedfg -> -> 1 `i `uc ]
"416
[; ;MainBat.c: 416:                     iActualRemotecurr = iActualRemotecurr/fOffset;
[e = _iActualRemotecurr -> / -> _iActualRemotecurr `f _fOffset `ui ]
"418
[; ;MainBat.c: 418:                     if(cModel_Select == 1)
[e $ ! == -> _cModel_Select `i -> 1 `i 1545  ]
"419
[; ;MainBat.c: 419:                     {
{
"420
[; ;MainBat.c: 420:                         if(iActualRemotecurr <= 10)
[e $ ! <= _iActualRemotecurr -> -> 10 `i `ui 1546  ]
"421
[; ;MainBat.c: 421:                             iActualRemotecurr = 10;
[e = _iActualRemotecurr -> -> 10 `i `ui ]
[e :U 1546 ]
"422
[; ;MainBat.c: 422:                         if(iActualRemotecurr >= 250)
[e $ ! >= _iActualRemotecurr -> -> 250 `i `ui 1547  ]
"423
[; ;MainBat.c: 423:                             iActualRemotecurr = 250;
[e = _iActualRemotecurr -> -> 250 `i `ui ]
[e :U 1547 ]
"424
[; ;MainBat.c: 424:                         setcurrent = iActualRemotecurr;
[e = _setcurrent _iActualRemotecurr ]
"425
[; ;MainBat.c: 425:                     }
}
[e $U 1548  ]
"426
[; ;MainBat.c: 426:                     else if((cModel_Select == 2)&&(ucB_M_SEL=0))
[e :U 1545 ]
[e $ ! && == -> _cModel_Select `i -> 2 `i != -> = _ucB_M_SEL -> -> 0 `i `uc `i -> 0 `i 1549  ]
"427
[; ;MainBat.c: 427:                     {
{
"428
[; ;MainBat.c: 428:                         if(iActualRemotecurr <= 10)
[e $ ! <= _iActualRemotecurr -> -> 10 `i `ui 1550  ]
"429
[; ;MainBat.c: 429:                             iActualRemotecurr = 10;
[e = _iActualRemotecurr -> -> 10 `i `ui ]
[e :U 1550 ]
"430
[; ;MainBat.c: 430:                         if(iActualRemotecurr >= 400)
[e $ ! >= _iActualRemotecurr -> -> 400 `i `ui 1551  ]
"431
[; ;MainBat.c: 431:                             iActualRemotecurr = 400;
[e = _iActualRemotecurr -> -> 400 `i `ui ]
[e :U 1551 ]
"432
[; ;MainBat.c: 432:                         setcurrent = iActualRemotecurr;
[e = _setcurrent _iActualRemotecurr ]
"433
[; ;MainBat.c: 433:                     }
}
[e $U 1552  ]
"434
[; ;MainBat.c: 434:                     else if((cModel_Select == 2)&&(ucB_M_SEL=1))
[e :U 1549 ]
[e $ ! && == -> _cModel_Select `i -> 2 `i != -> = _ucB_M_SEL -> -> 1 `i `uc `i -> 0 `i 1553  ]
"435
[; ;MainBat.c: 435:                     {
{
"436
[; ;MainBat.c: 436:                         if(iActualRemotecurr <= 10)
[e $ ! <= _iActualRemotecurr -> -> 10 `i `ui 1554  ]
"437
[; ;MainBat.c: 437:                             iActualRemotecurr = 10;
[e = _iActualRemotecurr -> -> 10 `i `ui ]
[e :U 1554 ]
"438
[; ;MainBat.c: 438:                         if(iActualRemotecurr >= 200)
[e $ ! >= _iActualRemotecurr -> -> 200 `i `ui 1555  ]
"439
[; ;MainBat.c: 439:                             iActualRemotecurr = 200;
[e = _iActualRemotecurr -> -> 200 `i `ui ]
[e :U 1555 ]
"440
[; ;MainBat.c: 440:                         setcurrent = iActualRemotecurr;
[e = _setcurrent _iActualRemotecurr ]
"441
[; ;MainBat.c: 441:                     }
}
[e $U 1556  ]
"442
[; ;MainBat.c: 442:                     else if(cModel_Select == 3)
[e :U 1553 ]
[e $ ! == -> _cModel_Select `i -> 3 `i 1557  ]
"443
[; ;MainBat.c: 443:                     {
{
"444
[; ;MainBat.c: 444:                         if(iActualRemotecurr <= 20)
[e $ ! <= _iActualRemotecurr -> -> 20 `i `ui 1558  ]
"445
[; ;MainBat.c: 445:                             iActualRemotecurr = 20;
[e = _iActualRemotecurr -> -> 20 `i `ui ]
[e :U 1558 ]
"446
[; ;MainBat.c: 446:                         if(iActualRemotecurr >= 600)
[e $ ! >= _iActualRemotecurr -> -> 600 `i `ui 1559  ]
"447
[; ;MainBat.c: 447:                             iActualRemotecurr = 600;
[e = _iActualRemotecurr -> -> 600 `i `ui ]
[e :U 1559 ]
"449
[; ;MainBat.c: 449:                         setcurrent = iActualRemotecurr;
[e = _setcurrent _iActualRemotecurr ]
"450
[; ;MainBat.c: 450:                     }
}
[e :U 1557 ]
[e :U 1556 ]
[e :U 1552 ]
[e :U 1548 ]
"451
[; ;MainBat.c: 451:                     if(iPrevSetcurrent != setcurrent)
[e $ ! != _iPrevSetcurrent _setcurrent 1560  ]
"452
[; ;MainBat.c: 452:                     {
{
"453
[; ;MainBat.c: 453:                         iPrevSetcurrent = setcurrent;
[e = _iPrevSetcurrent _setcurrent ]
"454
[; ;MainBat.c: 454:                         cRemoteEnDCurrUpdatefg = 1;
[e = _cRemoteEnDCurrUpdatefg -> -> 1 `i `uc ]
"455
[; ;MainBat.c: 455:                     }
}
[e :U 1560 ]
"456
[; ;MainBat.c: 456:                 }
}
[e $U 1561  ]
"457
[; ;MainBat.c: 457:                 else
[e :U 1544 ]
"458
[; ;MainBat.c: 458:                 {
{
"459
[; ;MainBat.c: 459:                     if(cRemoteDetectedfg == 1)
[e $ ! == -> _cRemoteDetectedfg `i -> 1 `i 1562  ]
"460
[; ;MainBat.c: 460:                     {
{
"461
[; ;MainBat.c: 461:                         iPrevDisplaySetcurrent = 0;
[e = _iPrevDisplaySetcurrent -> -> 0 `i `ui ]
"462
[; ;MainBat.c: 462:                         Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"463
[; ;MainBat.c: 463:                     }
}
[e :U 1562 ]
"464
[; ;MainBat.c: 464:                     cRemoteDetectedfg = 0;
[e = _cRemoteDetectedfg -> -> 0 `i `uc ]
"465
[; ;MainBat.c: 465:                 }
}
[e :U 1561 ]
"467
[; ;MainBat.c: 467:                 AFremotecurr = 0;
[e = _AFremotecurr -> -> -> 0 `i `l `ul ]
"468
[; ;MainBat.c: 468:                 AFremotecnt = 0;
[e = _AFremotecnt -> -> 0 `i `ui ]
"469
[; ;MainBat.c: 469:             }
}
[e :U 1538 ]
"470
[; ;MainBat.c: 470:             channel = 2;
[e = _channel -> -> 2 `i `uc ]
"471
[; ;MainBat.c: 471:             ADPCH = 0x02;
[e = _ADPCH -> -> 2 `i `uc ]
"472
[; ;MainBat.c: 472:         }
}
[e $U 1563  ]
"473
[; ;MainBat.c: 473:         else if(channel == 2)
[e :U 1537 ]
[e $ ! == -> _channel `i -> 2 `i 1564  ]
"474
[; ;MainBat.c: 474:         {
{
"475
[; ;MainBat.c: 475:             iTripVolt = ADC_BUF;
[e = _iTripVolt _ADC_BUF ]
"476
[; ;MainBat.c: 476:             count_3s++;
[e ++ _count_3s -> -> 1 `i `ui ]
"477
[; ;MainBat.c: 477:             AFtripvtg+=iTripVolt;
[e =+ _AFtripvtg -> _iTripVolt `ul ]
"478
[; ;MainBat.c: 478:             AFtripvtgcnt++;
[e ++ _AFtripvtgcnt -> -> 1 `i `uc ]
"479
[; ;MainBat.c: 479:             if(AFtripvtgcnt >= 64)
[e $ ! >= -> _AFtripvtgcnt `i -> 64 `i 1565  ]
"480
[; ;MainBat.c: 480:             {
{
"481
[; ;MainBat.c: 481:                 iActualtripvolt = AFtripvtg;
[e = _iActualtripvolt -> _AFtripvtg `ui ]
"482
[; ;MainBat.c: 482:                 iActualtripvolt = iActualtripvolt >> 6;
[e = _iActualtripvolt >> _iActualtripvolt -> 6 `i ]
"483
[; ;MainBat.c: 483:                 iActualtripvolt = iActualtripvolt * 4.88;
[e = _iActualtripvolt -> * -> _iActualtripvolt `d .4.88 `ui ]
"485
[; ;MainBat.c: 485:                 disptripvtgfg = 1;
[e = _disptripvtgfg -> -> 1 `i `uc ]
"486
[; ;MainBat.c: 486:                 AFtripvtg = 0;
[e = _AFtripvtg -> -> -> 0 `i `l `ul ]
"487
[; ;MainBat.c: 487:                 AFtripvtgcnt = 0;
[e = _AFtripvtgcnt -> -> 0 `i `uc ]
"488
[; ;MainBat.c: 488:             }
}
[e :U 1565 ]
"489
[; ;MainBat.c: 489:             Trip_detect(tripvoltage);
[e ( _Trip_detect (1 _tripvoltage ]
"490
[; ;MainBat.c: 490:             channel = 21;
[e = _channel -> -> 21 `i `uc ]
"491
[; ;MainBat.c: 491:             ADPCH = 0x15;
[e = _ADPCH -> -> 21 `i `uc ]
"493
[; ;MainBat.c: 493:         }
}
[e $U 1566  ]
"494
[; ;MainBat.c: 494:         else if(channel == 21)
[e :U 1564 ]
[e $ ! == -> _channel `i -> 21 `i 1567  ]
"495
[; ;MainBat.c: 495:         {
{
"496
[; ;MainBat.c: 496:             iTripVolt1 = ADC_BUF;
[e = _iTripVolt1 _ADC_BUF ]
"498
[; ;MainBat.c: 498:             AFtripvtg1+=iTripVolt1;
[e =+ _AFtripvtg1 -> _iTripVolt1 `ul ]
"499
[; ;MainBat.c: 499:             AFtripvtgcnt1++;
[e ++ _AFtripvtgcnt1 -> -> 1 `i `uc ]
"500
[; ;MainBat.c: 500:             if(AFtripvtgcnt1 >= 64)
[e $ ! >= -> _AFtripvtgcnt1 `i -> 64 `i 1568  ]
"501
[; ;MainBat.c: 501:             {
{
"502
[; ;MainBat.c: 502:                 iActualtripvolt1 = AFtripvtg1;
[e = _iActualtripvolt1 -> _AFtripvtg1 `ui ]
"503
[; ;MainBat.c: 503:                 iActualtripvolt1 = iActualtripvolt1 >> 6;
[e = _iActualtripvolt1 >> _iActualtripvolt1 -> 6 `i ]
"504
[; ;MainBat.c: 504:                 iActualtripvolt1 = iActualtripvolt1 * 4.88;
[e = _iActualtripvolt1 -> * -> _iActualtripvolt1 `d .4.88 `ui ]
"506
[; ;MainBat.c: 506:                 AFtripvtg1 = 0;
[e = _AFtripvtg1 -> -> -> 0 `i `l `ul ]
"507
[; ;MainBat.c: 507:                 AFtripvtgcnt1 = 0;
[e = _AFtripvtgcnt1 -> -> 0 `i `uc ]
"508
[; ;MainBat.c: 508:             }
}
[e :U 1568 ]
"509
[; ;MainBat.c: 509:             Trip_detect_OV(tripvoltage1);
[e ( _Trip_detect_OV (1 _tripvoltage1 ]
"510
[; ;MainBat.c: 510:             channel = 4;
[e = _channel -> -> 4 `i `uc ]
"511
[; ;MainBat.c: 511:             ADPCH = 0x04;
[e = _ADPCH -> -> 4 `i `uc ]
"512
[; ;MainBat.c: 512:         }
}
[e $U 1569  ]
"513
[; ;MainBat.c: 513:         else if(channel == 4)
[e :U 1567 ]
[e $ ! == -> _channel `i -> 4 `i 1570  ]
"514
[; ;MainBat.c: 514:         {
{
"515
[; ;MainBat.c: 515:             iPotSetcurrent = ADC_BUF;
[e = _iPotSetcurrent _ADC_BUF ]
"516
[; ;MainBat.c: 516:             ASetcurrent+=iPotSetcurrent;
[e =+ _ASetcurrent -> _iPotSetcurrent `ul ]
"517
[; ;MainBat.c: 517:             if(cRemoteDetectedfg == 0)
[e $ ! == -> _cRemoteDetectedfg `i -> 0 `i 1571  ]
"518
[; ;MainBat.c: 518:             {
{
"519
[; ;MainBat.c: 519:                 ASetcurrentcnt++;
[e ++ _ASetcurrentcnt -> -> 1 `i `ui ]
"520
[; ;MainBat.c: 520:             }
}
[e :U 1571 ]
"521
[; ;MainBat.c: 521:             if(ASetcurrentcnt >= 16)
[e $ ! >= _ASetcurrentcnt -> -> 16 `i `ui 1572  ]
"522
[; ;MainBat.c: 522:             {
{
"523
[; ;MainBat.c: 523:                 ASetcurrent = ASetcurrent >> 4;
[e = _ASetcurrent >> _ASetcurrent -> 4 `i ]
"524
[; ;MainBat.c: 524:                 iDispSetcurrent = ASetcurrent;
[e = _iDispSetcurrent -> _ASetcurrent `ui ]
"525
[; ;MainBat.c: 525:                 iDispSetcurrent = iDispSetcurrent * 4.88;
[e = _iDispSetcurrent -> * -> _iDispSetcurrent `d .4.88 `ui ]
"526
[; ;MainBat.c: 526:                 iModelSelectBand = iDispSetcurrent;
[e = _iModelSelectBand _iDispSetcurrent ]
"533
[; ;MainBat.c: 533:                 if(cModel_Select == 1)
[e $ ! == -> _cModel_Select `i -> 1 `i 1573  ]
"534
[; ;MainBat.c: 534:                 {
{
"535
[; ;MainBat.c: 535:                     iDispSetcurrent = iDispSetcurrent/19;
[e = _iDispSetcurrent / _iDispSetcurrent -> -> 19 `i `ui ]
"536
[; ;MainBat.c: 536:                     setcurrent = iDispSetcurrent;
[e = _setcurrent _iDispSetcurrent ]
"538
[; ;MainBat.c: 538:                     if(setcurrent <= 10)
[e $ ! <= _setcurrent -> -> 10 `i `ui 1574  ]
"539
[; ;MainBat.c: 539:                         setcurrent = 10;
[e = _setcurrent -> -> 10 `i `ui ]
[e :U 1574 ]
"540
[; ;MainBat.c: 540:                     if(setcurrent >= 250)
[e $ ! >= _setcurrent -> -> 250 `i `ui 1575  ]
"541
[; ;MainBat.c: 541:                         setcurrent = 250;
[e = _setcurrent -> -> 250 `i `ui ]
[e :U 1575 ]
"542
[; ;MainBat.c: 542:                 }
}
[e $U 1576  ]
"543
[; ;MainBat.c: 543:                 else if((cModel_Select == 2)&&(ucBLE_CON_DIS==0)&&(ucB_M_SEL==0))
[e :U 1573 ]
[e $ ! && && == -> _cModel_Select `i -> 2 `i == -> _ucBLE_CON_DIS `i -> 0 `i == -> _ucB_M_SEL `i -> 0 `i 1577  ]
"544
[; ;MainBat.c: 544:                 {
{
"545
[; ;MainBat.c: 545:                     iDispSetcurrent = iDispSetcurrent/12.2;
[e = _iDispSetcurrent -> / -> _iDispSetcurrent `d .12.2 `ui ]
"546
[; ;MainBat.c: 546:                     setcurrent = iDispSetcurrent;
[e = _setcurrent _iDispSetcurrent ]
"548
[; ;MainBat.c: 548:                     if(setcurrent <= 10)
[e $ ! <= _setcurrent -> -> 10 `i `ui 1578  ]
"549
[; ;MainBat.c: 549:                         setcurrent = 10;
[e = _setcurrent -> -> 10 `i `ui ]
[e :U 1578 ]
"550
[; ;MainBat.c: 550:                     if(setcurrent >= 400)
[e $ ! >= _setcurrent -> -> 400 `i `ui 1579  ]
"551
[; ;MainBat.c: 551:                         setcurrent = 400;
[e = _setcurrent -> -> 400 `i `ui ]
[e :U 1579 ]
"552
[; ;MainBat.c: 552:                 }
}
[e $U 1580  ]
"553
[; ;MainBat.c: 553:                 else if((cModel_Select == 2)&&(ucBLE_CON_DIS==0)&&(ucB_M_SEL==1))
[e :U 1577 ]
[e $ ! && && == -> _cModel_Select `i -> 2 `i == -> _ucBLE_CON_DIS `i -> 0 `i == -> _ucB_M_SEL `i -> 1 `i 1581  ]
"554
[; ;MainBat.c: 554:                 {
{
"555
[; ;MainBat.c: 555:                     iDispSetcurrent = iDispSetcurrent/12.2;
[e = _iDispSetcurrent -> / -> _iDispSetcurrent `d .12.2 `ui ]
"556
[; ;MainBat.c: 556:                     setcurrent = iDispSetcurrent;
[e = _setcurrent _iDispSetcurrent ]
"558
[; ;MainBat.c: 558:                     if(setcurrent <= 10)
[e $ ! <= _setcurrent -> -> 10 `i `ui 1582  ]
"559
[; ;MainBat.c: 559:                         setcurrent = 10;
[e = _setcurrent -> -> 10 `i `ui ]
[e :U 1582 ]
"560
[; ;MainBat.c: 560:                     if(setcurrent >= 200)
[e $ ! >= _setcurrent -> -> 200 `i `ui 1583  ]
"561
[; ;MainBat.c: 561:                         setcurrent = 200;
[e = _setcurrent -> -> 200 `i `ui ]
[e :U 1583 ]
"562
[; ;MainBat.c: 562:                 }
}
[e $U 1584  ]
"563
[; ;MainBat.c: 563:                 else if(cModel_Select == 3)
[e :U 1581 ]
[e $ ! == -> _cModel_Select `i -> 3 `i 1585  ]
"564
[; ;MainBat.c: 564:                 {
{
"565
[; ;MainBat.c: 565:                     iDispSetcurrent = iDispSetcurrent/8.0;
[e = _iDispSetcurrent -> / -> _iDispSetcurrent `d .8.0 `ui ]
"566
[; ;MainBat.c: 566:                     setcurrent = iDispSetcurrent;
[e = _setcurrent _iDispSetcurrent ]
"568
[; ;MainBat.c: 568:                     if(setcurrent <= 20)
[e $ ! <= _setcurrent -> -> 20 `i `ui 1586  ]
"569
[; ;MainBat.c: 569:                         setcurrent = 20;
[e = _setcurrent -> -> 20 `i `ui ]
[e :U 1586 ]
"570
[; ;MainBat.c: 570:                     if(setcurrent >= 600)
[e $ ! >= _setcurrent -> -> 600 `i `ui 1587  ]
"571
[; ;MainBat.c: 571:                         setcurrent = 600;
[e = _setcurrent -> -> 600 `i `ui ]
[e :U 1587 ]
"572
[; ;MainBat.c: 572:                 }
}
[e :U 1585 ]
[e :U 1584 ]
[e :U 1580 ]
[e :U 1576 ]
"573
[; ;MainBat.c: 573:                 if((iPrevDisplaySetcurrent != setcurrent)&&(ucBLE_CON_DIS==0))
[e $ ! && != _iPrevDisplaySetcurrent _setcurrent == -> _ucBLE_CON_DIS `i -> 0 `i 1588  ]
"574
[; ;MainBat.c: 574:                 {
{
"575
[; ;MainBat.c: 575:                     iPrevDisplaySetcurrent = setcurrent;
[e = _iPrevDisplaySetcurrent _setcurrent ]
"576
[; ;MainBat.c: 576:                     cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"577
[; ;MainBat.c: 577:                     cDispSetcurrentfg = 1;
[e = _cDispSetcurrentfg -> -> 1 `i `uc ]
"578
[; ;MainBat.c: 578:                 }
}
[e :U 1588 ]
"580
[; ;MainBat.c: 580:                 ASetcurrentcnt = 0;
[e = _ASetcurrentcnt -> -> 0 `i `ui ]
"581
[; ;MainBat.c: 581:                 ASetcurrent = 0;
[e = _ASetcurrent -> -> -> 0 `i `l `ul ]
"582
[; ;MainBat.c: 582:             }
}
[e :U 1572 ]
"583
[; ;MainBat.c: 583:             channel = 32;
[e = _channel -> -> 32 `i `uc ]
"584
[; ;MainBat.c: 584:             ADPCH = 0x20;
[e = _ADPCH -> -> 32 `i `uc ]
"585
[; ;MainBat.c: 585:         }
}
[e $U 1589  ]
"586
[; ;MainBat.c: 586:         else if(channel == 32)
[e :U 1570 ]
[e $ ! == -> _channel `i -> 32 `i 1590  ]
"587
[; ;MainBat.c: 587:         {
{
"588
[; ;MainBat.c: 588:             iPotArcForce = ADC_BUF;
[e = _iPotArcForce _ADC_BUF ]
"589
[; ;MainBat.c: 589:             AArcForce+=iPotArcForce;
[e =+ _AArcForce -> _iPotArcForce `ul ]
"590
[; ;MainBat.c: 590:             AArcForcecnt++;
[e ++ _AArcForcecnt -> -> 1 `i `ui ]
"591
[; ;MainBat.c: 591:             if(AArcForcecnt >= 32)
[e $ ! >= _AArcForcecnt -> -> 32 `i `ui 1591  ]
"592
[; ;MainBat.c: 592:             {
{
"593
[; ;MainBat.c: 593:                 AArcForce = AArcForce >> 5;
[e = _AArcForce >> _AArcForce -> 5 `i ]
"594
[; ;MainBat.c: 594:                 iDispArcForce = AArcForce;
[e = _iDispArcForce -> _AArcForce `ui ]
"595
[; ;MainBat.c: 595:                 iDispArcForce = iDispArcForce * 4.88;
[e = _iDispArcForce -> * -> _iDispArcForce `d .4.88 `ui ]
"596
[; ;MainBat.c: 596:                 iDispArcForce = iDispArcForce/49;
[e = _iDispArcForce / _iDispArcForce -> -> 49 `i `ui ]
"598
[; ;MainBat.c: 598:                 if((cMaxFBCurrCalibrationfg == 1) && (cVRDCountSettingfg == 0))
[e $ ! && == -> _cMaxFBCurrCalibrationfg `i -> 1 `i == -> _cVRDCountSettingfg `i -> 0 `i 1592  ]
"599
[; ;MainBat.c: 599:                 {
{
"600
[; ;MainBat.c: 600:                     fDispArcForce = AArcForce;
[e = _fDispArcForce -> _AArcForce `f ]
"601
[; ;MainBat.c: 601:                     fDispArcForce = fDispArcForce / 2.88;
[e = _fDispArcForce -> / -> _fDispArcForce `d .2.88 `f ]
"602
[; ;MainBat.c: 602:                     fDispArcForce = fDispArcForce/49;
[e = _fDispArcForce / _fDispArcForce -> -> 49 `i `f ]
"604
[; ;MainBat.c: 604:                         fSLOPE1 = fDispArcForce;
[e = _fSLOPE1 _fDispArcForce ]
"605
[; ;MainBat.c: 605:                         iMAXFBCurrOffset=fSLOPE1*100;
[e = _iMAXFBCurrOffset -> * _fSLOPE1 -> -> 100 `i `f `ui ]
"606
[; ;MainBat.c: 606:                         fSLOPE1=((float)iMAXFBCurrOffset/100);
[e = _fSLOPE1 / -> _iMAXFBCurrOffset `f -> -> 100 `i `f ]
"607
[; ;MainBat.c: 607:                 }
}
[e :U 1592 ]
"608
[; ;MainBat.c: 608:                 if((cMinFBCurrCalibrationfg == 1))
[e $ ! == -> _cMinFBCurrCalibrationfg `i -> 1 `i 1593  ]
"609
[; ;MainBat.c: 609:                 {
{
"610
[; ;MainBat.c: 610:                     iOffsetBand1 = iDispArcForce;
[e = _iOffsetBand1 _iDispArcForce ]
"611
[; ;MainBat.c: 611:                     iMINFBCurrOffset = iOffsetBand1;
[e = _iMINFBCurrOffset _iOffsetBand1 ]
"612
[; ;MainBat.c: 612:                 }
}
[e :U 1593 ]
"614
[; ;MainBat.c: 614:                 if(iDispArcForce<=0)
[e $ ! <= _iDispArcForce -> -> 0 `i `ui 1594  ]
"615
[; ;MainBat.c: 615:                     iDispArcForce=0;
[e = _iDispArcForce -> -> 0 `i `ui ]
[e $U 1595  ]
"616
[; ;MainBat.c: 616:                 else if(iDispArcForce>=100)
[e :U 1594 ]
[e $ ! >= _iDispArcForce -> -> 100 `i `ui 1596  ]
"617
[; ;MainBat.c: 617:                     iDispArcForce=100;
[e = _iDispArcForce -> -> 100 `i `ui ]
[e :U 1596 ]
[e :U 1595 ]
"619
[; ;MainBat.c: 619:                 if(ucBLE_CON_DIS==0)
[e $ ! == -> _ucBLE_CON_DIS `i -> 0 `i 1597  ]
"620
[; ;MainBat.c: 620:                     iArcforce = iDispArcForce;
[e = _iArcforce _iDispArcForce ]
[e $U 1598  ]
"621
[; ;MainBat.c: 621:                 else
[e :U 1597 ]
"622
[; ;MainBat.c: 622:                    iArcforce = iBLEArcForce;
[e = _iArcforce _iBLEArcForce ]
[e :U 1598 ]
"624
[; ;MainBat.c: 624:                 if(iPrevArcforce != iArcforce)
[e $ ! != _iPrevArcforce _iArcforce 1599  ]
"625
[; ;MainBat.c: 625:                 {
{
"626
[; ;MainBat.c: 626:                     iPrevArcforce = iArcforce;
[e = _iPrevArcforce _iArcforce ]
"627
[; ;MainBat.c: 627:                     cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"628
[; ;MainBat.c: 628:                 }
}
[e :U 1599 ]
"630
[; ;MainBat.c: 630:                 AArcForcecnt = 0;
[e = _AArcForcecnt -> -> 0 `i `ui ]
"631
[; ;MainBat.c: 631:                 AArcForce = 0;
[e = _AArcForce -> -> -> 0 `i `l `ul ]
"632
[; ;MainBat.c: 632:             }
}
[e :U 1591 ]
"633
[; ;MainBat.c: 633:             channel = 33;
[e = _channel -> -> 33 `i `uc ]
"634
[; ;MainBat.c: 634:             ADPCH = 0x21;
[e = _ADPCH -> -> 33 `i `uc ]
"635
[; ;MainBat.c: 635:         }
}
[e $U 1600  ]
"636
[; ;MainBat.c: 636:         else if(channel == 33)
[e :U 1590 ]
[e $ ! == -> _channel `i -> 33 `i 1601  ]
"637
[; ;MainBat.c: 637:         {
{
"638
[; ;MainBat.c: 638:             iPotHotStart = ADC_BUF;
[e = _iPotHotStart _ADC_BUF ]
"639
[; ;MainBat.c: 639:             AHotStart+=iPotHotStart;
[e =+ _AHotStart -> _iPotHotStart `ul ]
"640
[; ;MainBat.c: 640:             AHotStartcnt++;
[e ++ _AHotStartcnt -> -> 1 `i `ui ]
"642
[; ;MainBat.c: 642:             if(AHotStartcnt >= 32)
[e $ ! >= _AHotStartcnt -> -> 32 `i `ui 1602  ]
"643
[; ;MainBat.c: 643:             {
{
"644
[; ;MainBat.c: 644:                 AHotStart = AHotStart >> 5;
[e = _AHotStart >> _AHotStart -> 5 `i ]
"645
[; ;MainBat.c: 645:                 iDispHotStart = AHotStart;
[e = _iDispHotStart -> _AHotStart `ui ]
"646
[; ;MainBat.c: 646:                 iDispHotStart = iDispHotStart * 4.88;
[e = _iDispHotStart -> * -> _iDispHotStart `d .4.88 `ui ]
"647
[; ;MainBat.c: 647:                 iDispHotStart = iDispHotStart/49;
[e = _iDispHotStart / _iDispHotStart -> -> 49 `i `ui ]
"649
[; ;MainBat.c: 649:                 if((cVRDCountSettingfg == 1) && (cMaxFBCurrCalibrationfg == 0))
[e $ ! && == -> _cVRDCountSettingfg `i -> 1 `i == -> _cMaxFBCurrCalibrationfg `i -> 0 `i 1603  ]
"650
[; ;MainBat.c: 650:                 {
{
"651
[; ;MainBat.c: 651:                     cDispVRDcountfg = 1;
[e = _cDispVRDcountfg -> -> 1 `i `uc ]
"652
[; ;MainBat.c: 652:                     iVRDCount = iDispHotStart;
[e = _iVRDCount _iDispHotStart ]
"653
[; ;MainBat.c: 653:                 }
}
[e :U 1603 ]
"660
[; ;MainBat.c: 660:                 if(iDispHotStart<=0)
[e $ ! <= _iDispHotStart -> -> 0 `i `ui 1604  ]
"661
[; ;MainBat.c: 661:                     iDispHotStart=0;
[e = _iDispHotStart -> -> 0 `i `ui ]
[e $U 1605  ]
"662
[; ;MainBat.c: 662:                 else if(iDispHotStart>=100)
[e :U 1604 ]
[e $ ! >= _iDispHotStart -> -> 100 `i `ui 1606  ]
"663
[; ;MainBat.c: 663:                     iDispHotStart=100;
[e = _iDispHotStart -> -> 100 `i `ui ]
[e :U 1606 ]
[e :U 1605 ]
"665
[; ;MainBat.c: 665:                 if(ucBLE_CON_DIS==0)
[e $ ! == -> _ucBLE_CON_DIS `i -> 0 `i 1607  ]
"666
[; ;MainBat.c: 666:                     iHotstart = iDispHotStart;
[e = _iHotstart _iDispHotStart ]
[e $U 1608  ]
"667
[; ;MainBat.c: 667:                 else
[e :U 1607 ]
"668
[; ;MainBat.c: 668:                     iHotstart = iBLEHotStart;
[e = _iHotstart _iBLEHotStart ]
[e :U 1608 ]
"670
[; ;MainBat.c: 670:                 if(iPrevHotstart != iHotstart)
[e $ ! != _iPrevHotstart _iHotstart 1609  ]
"671
[; ;MainBat.c: 671:                 {
{
"672
[; ;MainBat.c: 672:                     iPrevHotstart = iHotstart;
[e = _iPrevHotstart _iHotstart ]
"673
[; ;MainBat.c: 673:                     cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"674
[; ;MainBat.c: 674:                 }
}
[e :U 1609 ]
"676
[; ;MainBat.c: 676:                 AHotStartcnt = 0;
[e = _AHotStartcnt -> -> 0 `i `ui ]
"677
[; ;MainBat.c: 677:                 AHotStart = 0;
[e = _AHotStart -> -> -> 0 `i `l `ul ]
"678
[; ;MainBat.c: 678:             }
}
[e :U 1602 ]
"679
[; ;MainBat.c: 679:             channel = 0;
[e = _channel -> -> 0 `i `uc ]
"680
[; ;MainBat.c: 680:             ADPCH = 0x00;
[e = _ADPCH -> -> 0 `i `uc ]
"681
[; ;MainBat.c: 681:         }
}
[e :U 1601 ]
[e :U 1600 ]
[e :U 1589 ]
[e :U 1569 ]
[e :U 1566 ]
[e :U 1563 ]
[e :U 1536 ]
[e :U 1529 ]
"683
[; ;MainBat.c: 683:         PIR1bits.ADIF = 0;
[e = . . _PIR1bits 0 0 -> -> 0 `i `uc ]
"684
[; ;MainBat.c: 684:     }
}
[e :U 1523 ]
"686
[; ;MainBat.c: 686:     if (PIR3bits.RC1IF)
[e $ ! != -> . . _PIR3bits 0 5 `i -> 0 `i 1610  ]
"687
[; ;MainBat.c: 687:     {
{
"688
[; ;MainBat.c: 688:         PIE3bits.RC1IE = 0;
[e = . . _PIE3bits 0 5 -> -> 0 `i `uc ]
"689
[; ;MainBat.c: 689:         Rx1Receive = RCREG1;
[e = _Rx1Receive _RCREG1 ]
"690
[; ;MainBat.c: 690:         switch(ucState)
[e $U 1612  ]
"691
[; ;MainBat.c: 691:         {
{
"692
[; ;MainBat.c: 692:             case 0 :if((Rx1Receive=='?')&&(ucBlutoothInit==0)&&(ucBLE_CON_DIS==4))
[e :U 1613 ]
[e $ ! && && == -> _Rx1Receive `ui -> 63 `ui == -> _ucBlutoothInit `i -> 0 `i == -> _ucBLE_CON_DIS `i -> 4 `i 1614  ]
"693
[; ;MainBat.c: 693:                     {
{
"694
[; ;MainBat.c: 694:                         ucState=1; ucCount=0;
[e = _ucState -> -> 1 `i `uc ]
[e = _ucCount -> -> 0 `i `uc ]
"695
[; ;MainBat.c: 695:                     }
}
[e $U 1615  ]
"696
[; ;MainBat.c: 696:                     else if((Rx1Receive=='+')&&(ucBlutoothInit==0))
[e :U 1614 ]
[e $ ! && == -> _Rx1Receive `ui -> 43 `ui == -> _ucBlutoothInit `i -> 0 `i 1616  ]
"697
[; ;MainBat.c: 697:                     {
{
"698
[; ;MainBat.c: 698:                         ucState=2; ucCount=0;
[e = _ucState -> -> 2 `i `uc ]
[e = _ucCount -> -> 0 `i `uc ]
"699
[; ;MainBat.c: 699:                     }
}
[e $U 1617  ]
"700
[; ;MainBat.c: 700:                     else
[e :U 1616 ]
"701
[; ;MainBat.c: 701:                         ucState=0;ucCount=0;
[e = _ucState -> -> 0 `i `uc ]
[e :U 1617 ]
[e :U 1615 ]
[e = _ucCount -> -> 0 `i `uc ]
"702
[; ;MainBat.c: 702:                     break;
[e $U 1611  ]
"703
[; ;MainBat.c: 703:             case 1 :if(ucCount<4)
[e :U 1618 ]
[e $ ! < -> _ucCount `i -> 4 `i 1619  ]
"704
[; ;MainBat.c: 704:                     {
{
"705
[; ;MainBat.c: 705:                       ucSetCur[ucCount]=Rx1Receive;
[e = *U + &U _ucSetCur * -> _ucCount `ux -> -> # *U &U _ucSetCur `ui `ux _Rx1Receive ]
"706
[; ;MainBat.c: 706:                       ucCount++;
[e ++ _ucCount -> -> 1 `i `uc ]
"707
[; ;MainBat.c: 707:                       if(ucCount==4)
[e $ ! == -> _ucCount `i -> 4 `i 1620  ]
"708
[; ;MainBat.c: 708:                       {
{
"709
[; ;MainBat.c: 709:                         if(ucSetCur[0]=='A')
[e $ ! == -> *U + &U _ucSetCur * -> -> -> 0 `i `ui `ux -> -> # *U &U _ucSetCur `ui `ux `ui -> 65 `ui 1621  ]
"710
[; ;MainBat.c: 710:                         {
{
"711
[; ;MainBat.c: 711:                             uiBRSetCurr=((ucSetCur[1]-0x30)*100)+((ucSetCur[2]-0x30)*10)+(ucSetCur[3]-0x30);
[e = _uiBRSetCurr -> + + * - -> *U + &U _ucSetCur * -> -> -> 1 `i `ui `ux -> -> # *U &U _ucSetCur `ui `ux `i -> 48 `i -> 100 `i * - -> *U + &U _ucSetCur * -> -> -> 2 `i `ui `ux -> -> # *U &U _ucSetCur `ui `ux `i -> 48 `i -> 10 `i - -> *U + &U _ucSetCur * -> -> -> 3 `i `ui `ux -> -> # *U &U _ucSetCur `ui `ux `i -> 48 `i `ui ]
"712
[; ;MainBat.c: 712:                         }
}
[e :U 1621 ]
"713
[; ;MainBat.c: 713:                         if(ucSetCur[0]=='H')
[e $ ! == -> *U + &U _ucSetCur * -> -> -> 0 `i `ui `ux -> -> # *U &U _ucSetCur `ui `ux `ui -> 72 `ui 1622  ]
"714
[; ;MainBat.c: 714:                         {
{
"715
[; ;MainBat.c: 715:                           iBLEHotStart=((ucSetCur[1]-0x30)*100)+((ucSetCur[2]-0x30)*10)+(ucSetCur[3]-0x30);
[e = _iBLEHotStart -> + + * - -> *U + &U _ucSetCur * -> -> -> 1 `i `ui `ux -> -> # *U &U _ucSetCur `ui `ux `i -> 48 `i -> 100 `i * - -> *U + &U _ucSetCur * -> -> -> 2 `i `ui `ux -> -> # *U &U _ucSetCur `ui `ux `i -> 48 `i -> 10 `i - -> *U + &U _ucSetCur * -> -> -> 3 `i `ui `ux -> -> # *U &U _ucSetCur `ui `ux `i -> 48 `i `ui ]
"717
[; ;MainBat.c: 717:                         }
}
[e :U 1622 ]
"718
[; ;MainBat.c: 718:                         if(ucSetCur[0]=='F')
[e $ ! == -> *U + &U _ucSetCur * -> -> -> 0 `i `ui `ux -> -> # *U &U _ucSetCur `ui `ux `ui -> 70 `ui 1623  ]
"719
[; ;MainBat.c: 719:                         {
{
"720
[; ;MainBat.c: 720:                             iBLEArcForce=((ucSetCur[1]-0x30)*100)+((ucSetCur[2]-0x30)*10)+(ucSetCur[3]-0x30);
[e = _iBLEArcForce -> + + * - -> *U + &U _ucSetCur * -> -> -> 1 `i `ui `ux -> -> # *U &U _ucSetCur `ui `ux `i -> 48 `i -> 100 `i * - -> *U + &U _ucSetCur * -> -> -> 2 `i `ui `ux -> -> # *U &U _ucSetCur `ui `ux `i -> 48 `i -> 10 `i - -> *U + &U _ucSetCur * -> -> -> 3 `i `ui `ux -> -> # *U &U _ucSetCur `ui `ux `i -> 48 `i `ui ]
"722
[; ;MainBat.c: 722:                         }
}
[e :U 1623 ]
"723
[; ;MainBat.c: 723:                         if((cModel_Select == 2)&&(ucB_M_SEL==0))
[e $ ! && == -> _cModel_Select `i -> 2 `i == -> _ucB_M_SEL `i -> 0 `i 1624  ]
"724
[; ;MainBat.c: 724:                         {
{
"725
[; ;MainBat.c: 725:                             setcurrent=uiBRSetCurr;
[e = _setcurrent _uiBRSetCurr ]
"727
[; ;MainBat.c: 727:                             if(setcurrent <= 10)
[e $ ! <= _setcurrent -> -> 10 `i `ui 1625  ]
"728
[; ;MainBat.c: 728:                                 setcurrent = 10;
[e = _setcurrent -> -> 10 `i `ui ]
[e :U 1625 ]
"729
[; ;MainBat.c: 729:                             if(setcurrent >= 400)
[e $ ! >= _setcurrent -> -> 400 `i `ui 1626  ]
"730
[; ;MainBat.c: 730:                                 setcurrent = 400;
[e = _setcurrent -> -> 400 `i `ui ]
[e :U 1626 ]
"731
[; ;MainBat.c: 731:                         }
}
[e :U 1624 ]
"732
[; ;MainBat.c: 732:                          if((cModel_Select == 2)&&(ucB_M_SEL==1))
[e $ ! && == -> _cModel_Select `i -> 2 `i == -> _ucB_M_SEL `i -> 1 `i 1627  ]
"733
[; ;MainBat.c: 733:                         {
{
"734
[; ;MainBat.c: 734:                             setcurrent=uiBRSetCurr;
[e = _setcurrent _uiBRSetCurr ]
"736
[; ;MainBat.c: 736:                             if(setcurrent <= 10)
[e $ ! <= _setcurrent -> -> 10 `i `ui 1628  ]
"737
[; ;MainBat.c: 737:                                 setcurrent = 10;
[e = _setcurrent -> -> 10 `i `ui ]
[e :U 1628 ]
"738
[; ;MainBat.c: 738:                             if(setcurrent >= 200)
[e $ ! >= _setcurrent -> -> 200 `i `ui 1629  ]
"739
[; ;MainBat.c: 739:                                 setcurrent = 200;
[e = _setcurrent -> -> 200 `i `ui ]
[e :U 1629 ]
"740
[; ;MainBat.c: 740:                         }
}
[e :U 1627 ]
"742
[; ;MainBat.c: 742:                         if(iPrevDisplaySetcurrent != setcurrent)
[e $ ! != _iPrevDisplaySetcurrent _setcurrent 1630  ]
"743
[; ;MainBat.c: 743:                         {
{
"744
[; ;MainBat.c: 744:                             iPrevDisplaySetcurrent = setcurrent;
[e = _iPrevDisplaySetcurrent _setcurrent ]
"745
[; ;MainBat.c: 745:                             cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"746
[; ;MainBat.c: 746:                             cDispSetcurrentfg = 1;
[e = _cDispSetcurrentfg -> -> 1 `i `uc ]
"748
[; ;MainBat.c: 748:                         }
}
[e :U 1630 ]
"749
[; ;MainBat.c: 749:                         ucState=0;
[e = _ucState -> -> 0 `i `uc ]
"750
[; ;MainBat.c: 750:                       }
}
[e :U 1620 ]
"751
[; ;MainBat.c: 751:                     }
}
[e :U 1619 ]
"752
[; ;MainBat.c: 752:                     break;
[e $U 1611  ]
"753
[; ;MainBat.c: 753:             case 2 :if((Rx1Receive=='_')&&(ucBlutoothInit==0))
[e :U 1631 ]
[e $ ! && == -> _Rx1Receive `ui -> 95 `ui == -> _ucBlutoothInit `i -> 0 `i 1632  ]
"754
[; ;MainBat.c: 754:                         ucState=3;
[e = _ucState -> -> 3 `i `uc ]
[e $U 1633  ]
"755
[; ;MainBat.c: 755:                     else
[e :U 1632 ]
"756
[; ;MainBat.c: 756:                         ucState=2;
[e = _ucState -> -> 2 `i `uc ]
[e :U 1633 ]
"758
[; ;MainBat.c: 758:                     break;
[e $U 1611  ]
"759
[; ;MainBat.c: 759:             case 3 :if((Rx1Receive=='C')&&(ucBlutoothInit==0))
[e :U 1634 ]
[e $ ! && == -> _Rx1Receive `ui -> 67 `ui == -> _ucBlutoothInit `i -> 0 `i 1635  ]
"760
[; ;MainBat.c: 760:                     {
{
"761
[; ;MainBat.c: 761:                       ucState=4;
[e = _ucState -> -> 4 `i `uc ]
"762
[; ;MainBat.c: 762:                     }
}
[e $U 1636  ]
"763
[; ;MainBat.c: 763:                     else if((Rx1Receive=='D')&&(ucBlutoothInit==0))
[e :U 1635 ]
[e $ ! && == -> _Rx1Receive `ui -> 68 `ui == -> _ucBlutoothInit `i -> 0 `i 1637  ]
"764
[; ;MainBat.c: 764:                       ucState=5;
[e = _ucState -> -> 5 `i `uc ]
[e $U 1638  ]
"765
[; ;MainBat.c: 765:                     else
[e :U 1637 ]
"766
[; ;MainBat.c: 766:                         ucState=0;
[e = _ucState -> -> 0 `i `uc ]
[e :U 1638 ]
[e :U 1636 ]
"768
[; ;MainBat.c: 768:                     break;
[e $U 1611  ]
"769
[; ;MainBat.c: 769:             case 4 :if((Rx1Receive=='D')&&(ucBlutoothInit==0))
[e :U 1639 ]
[e $ ! && == -> _Rx1Receive `ui -> 68 `ui == -> _ucBlutoothInit `i -> 0 `i 1640  ]
"770
[; ;MainBat.c: 770:                     {
{
"771
[; ;MainBat.c: 771:                        ucBLE_CON_DIS=1;ucState=0; ucCount=0;
[e = _ucBLE_CON_DIS -> -> 1 `i `uc ]
[e = _ucState -> -> 0 `i `uc ]
[e = _ucCount -> -> 0 `i `uc ]
"772
[; ;MainBat.c: 772:                     }
}
[e $U 1641  ]
"773
[; ;MainBat.c: 773:                    else
[e :U 1640 ]
"774
[; ;MainBat.c: 774:                        ucState=4;
[e = _ucState -> -> 4 `i `uc ]
[e :U 1641 ]
"775
[; ;MainBat.c: 775:                     break;
[e $U 1611  ]
"776
[; ;MainBat.c: 776:             case 5 :if((Rx1Receive=='T')&&(ucBlutoothInit==0))
[e :U 1642 ]
[e $ ! && == -> _Rx1Receive `ui -> 84 `ui == -> _ucBlutoothInit `i -> 0 `i 1643  ]
"777
[; ;MainBat.c: 777:                     {
{
"778
[; ;MainBat.c: 778:                         ucBLE_CON_DIS=2;ucState=0; ucCount=0;
[e = _ucBLE_CON_DIS -> -> 2 `i `uc ]
[e = _ucState -> -> 0 `i `uc ]
[e = _ucCount -> -> 0 `i `uc ]
"779
[; ;MainBat.c: 779:                     }
}
[e $U 1644  ]
"780
[; ;MainBat.c: 780:                     else
[e :U 1643 ]
"781
[; ;MainBat.c: 781:                         ucState=5;
[e = _ucState -> -> 5 `i `uc ]
[e :U 1644 ]
"782
[; ;MainBat.c: 782:                     break;
[e $U 1611  ]
"783
[; ;MainBat.c: 783:             default:
[e :U 1645 ]
"784
[; ;MainBat.c: 784:                      break;
[e $U 1611  ]
"785
[; ;MainBat.c: 785:         }
}
[e $U 1611  ]
[e :U 1612 ]
[e [\ -> _ucState `i , $ -> 0 `i 1613
 , $ -> 1 `i 1618
 , $ -> 2 `i 1631
 , $ -> 3 `i 1634
 , $ -> 4 `i 1639
 , $ -> 5 `i 1642
 1645 ]
[e :U 1611 ]
"787
[; ;MainBat.c: 787:         PIR3bits.RC1IF = 0;
[e = . . _PIR3bits 0 5 -> -> 0 `i `uc ]
"788
[; ;MainBat.c: 788:         PIE3bits.RC1IE = 1;
[e = . . _PIE3bits 0 5 -> -> 1 `i `uc ]
"789
[; ;MainBat.c: 789:     }
}
[e :U 1610 ]
"791
[; ;MainBat.c: 791:     if (PIR3bits.RC2IF)
[e $ ! != -> . . _PIR3bits 0 7 `i -> 0 `i 1646  ]
"792
[; ;MainBat.c: 792:     {
{
"793
[; ;MainBat.c: 793:         PIE3bits.RC2IE = 0;
[e = . . _PIE3bits 0 7 -> -> 0 `i `uc ]
"794
[; ;MainBat.c: 794:         PIR3bits.RC2IF = 0;
[e = . . _PIR3bits 0 7 -> -> 0 `i `uc ]
"795
[; ;MainBat.c: 795:         Rx2Receive = RCREG2;
[e = _Rx2Receive _RCREG2 ]
"797
[; ;MainBat.c: 797:         switch(ucState1)
[e $U 1648  ]
"798
[; ;MainBat.c: 798:         {
{
"799
[; ;MainBat.c: 799:             case 0:if(Rx2Receive == '@')
[e :U 1649 ]
[e $ ! == -> _Rx2Receive `ui -> 64 `ui 1650  ]
"800
[; ;MainBat.c: 800:                    {
{
"801
[; ;MainBat.c: 801:                        ucState1 = 1;
[e = _ucState1 -> -> 1 `i `uc ]
"802
[; ;MainBat.c: 802:                        ucCount1 = 0;
[e = _ucCount1 -> -> 0 `i `uc ]
"803
[; ;MainBat.c: 803:                    }
}
[e $U 1651  ]
"804
[; ;MainBat.c: 804:                    else
[e :U 1650 ]
"805
[; ;MainBat.c: 805:                    {
{
"806
[; ;MainBat.c: 806:                        ucState1 = 0;
[e = _ucState1 -> -> 0 `i `uc ]
"807
[; ;MainBat.c: 807:                    }
}
[e :U 1651 ]
"808
[; ;MainBat.c: 808:                      break;
[e $U 1647  ]
"809
[; ;MainBat.c: 809:              case 1:if(ucCount1<8)
[e :U 1652 ]
[e $ ! < -> _ucCount1 `i -> 8 `i 1653  ]
"810
[; ;MainBat.c: 810:                     {
{
"811
[; ;MainBat.c: 811:                         Temp[ucCount1] = Rx2Receive;
[e = *U + &U _Temp * -> _ucCount1 `ux -> -> # *U &U _Temp `ui `ux _Rx2Receive ]
"812
[; ;MainBat.c: 812:                         if(ucCount1==7)
[e $ ! == -> _ucCount1 `i -> 7 `i 1654  ]
"813
[; ;MainBat.c: 813:                         {
{
"814
[; ;MainBat.c: 814:                            ucRx2Flag=1;
[e = _ucRx2Flag -> -> 1 `i `uc ]
"815
[; ;MainBat.c: 815:                            ucState1 = 0;
[e = _ucState1 -> -> 0 `i `uc ]
"816
[; ;MainBat.c: 816:                            uiBPer = (unsigned int)Temp[0];
[e = _uiBPer -> *U + &U _Temp * -> -> -> 0 `i `ui `ux -> -> # *U &U _Temp `ui `ux `ui ]
"817
[; ;MainBat.c: 817:                         }
}
[e :U 1654 ]
"818
[; ;MainBat.c: 818:                         ucCount1++;
[e ++ _ucCount1 -> -> 1 `i `uc ]
"819
[; ;MainBat.c: 819:                     }
}
[e :U 1653 ]
"820
[; ;MainBat.c: 820:                     break;
[e $U 1647  ]
"822
[; ;MainBat.c: 822:                     default:
[e :U 1655 ]
"823
[; ;MainBat.c: 823:                          break;
[e $U 1647  ]
"824
[; ;MainBat.c: 824:          }
}
[e $U 1647  ]
[e :U 1648 ]
[e [\ -> _ucState1 `i , $ -> 0 `i 1649
 , $ -> 1 `i 1652
 1655 ]
[e :U 1647 ]
"825
[; ;MainBat.c: 825:         PIE3bits.RC2IE = 1;
[e = . . _PIE3bits 0 7 -> -> 1 `i `uc ]
"826
[; ;MainBat.c: 826:     }
}
[e :U 1646 ]
"829
[; ;MainBat.c: 829: }
[e :UE 1492 ]
}
"833
[; ;MainBat.c: 833: void oscillator_init()
[v _oscillator_init `(v ~T0 @X0 1 ef ]
"834
[; ;MainBat.c: 834: {
{
[e :U _oscillator_init ]
[f ]
"835
[; ;MainBat.c: 835:     OSCCON1 = 0X60;
[e = _OSCCON1 -> -> 96 `i `uc ]
"836
[; ;MainBat.c: 836:     OSCCON3 = 0X00;
[e = _OSCCON3 -> -> 0 `i `uc ]
"837
[; ;MainBat.c: 837:     OSCENbits.HFOEN = 1;
[e = . . _OSCENbits 0 5 -> -> 1 `i `uc ]
"838
[; ;MainBat.c: 838:     OSCENbits.ADOEN = 1;
[e = . . _OSCENbits 0 1 -> -> 1 `i `uc ]
"839
[; ;MainBat.c: 839:     OSCFRQ = 0x07;
[e = _OSCFRQ -> -> 7 `i `uc ]
"840
[; ;MainBat.c: 840:     OSCTUNE = 0x00;
[e = _OSCTUNE -> -> 0 `i `uc ]
"841
[; ;MainBat.c: 841:     OSCSTAT = 0x00;
[e = _OSCSTAT -> -> 0 `i `uc ]
"842
[; ;MainBat.c: 842:     BORCONbits.SBOREN = 0;
[e = . . _BORCONbits 0 2 -> -> 0 `i `uc ]
"843
[; ;MainBat.c: 843: }
[e :UE 1656 ]
}
"845
[; ;MainBat.c: 845: void portpin_init()
[v _portpin_init `(v ~T0 @X0 1 ef ]
"846
[; ;MainBat.c: 846: {
{
[e :U _portpin_init ]
[f ]
"848
[; ;MainBat.c: 848:     ANSELBbits.ANSELB0 = 0;
[e = . . _ANSELBbits 0 0 -> -> 0 `i `uc ]
"849
[; ;MainBat.c: 849:     ANSELBbits.ANSELB1 = 0;
[e = . . _ANSELBbits 0 1 -> -> 0 `i `uc ]
"850
[; ;MainBat.c: 850:     ANSELBbits.ANSELB2 = 0;
[e = . . _ANSELBbits 0 2 -> -> 0 `i `uc ]
"851
[; ;MainBat.c: 851:     ANSELBbits.ANSELB4 = 0;
[e = . . _ANSELBbits 0 4 -> -> 0 `i `uc ]
"852
[; ;MainBat.c: 852:     ANSELAbits.ANSELA7 = 0;
[e = . . _ANSELAbits 0 7 -> -> 0 `i `uc ]
"853
[; ;MainBat.c: 853:     ANSELAbits.ANSELA6 = 0;
[e = . . _ANSELAbits 0 6 -> -> 0 `i `uc ]
"854
[; ;MainBat.c: 854:     ANSELCbits.ANSELC1 = 0;
[e = . . _ANSELCbits 0 1 -> -> 0 `i `uc ]
"855
[; ;MainBat.c: 855:     ANSELAbits.ANSELA3 = 0;
[e = . . _ANSELAbits 0 3 -> -> 0 `i `uc ]
"857
[; ;MainBat.c: 857:     TRISBbits.TRISB0 = 0;
[e = . . _TRISBbits 0 0 -> -> 0 `i `uc ]
"858
[; ;MainBat.c: 858:     TRISBbits.TRISB1 = 0;
[e = . . _TRISBbits 0 1 -> -> 0 `i `uc ]
"859
[; ;MainBat.c: 859:     TRISBbits.TRISB2 = 0;
[e = . . _TRISBbits 0 2 -> -> 0 `i `uc ]
"860
[; ;MainBat.c: 860:     TRISBbits.TRISB4 = 0;
[e = . . _TRISBbits 0 4 -> -> 0 `i `uc ]
"861
[; ;MainBat.c: 861:     TRISCbits.TRISC1 = 1;
[e = . . _TRISCbits 0 1 -> -> 1 `i `uc ]
"862
[; ;MainBat.c: 862:     TRISAbits.TRISA7 = 0;
[e = . . _TRISAbits 0 7 -> -> 0 `i `uc ]
"863
[; ;MainBat.c: 863:     TRISAbits.TRISA6 = 0;
[e = . . _TRISAbits 0 6 -> -> 0 `i `uc ]
"864
[; ;MainBat.c: 864:     TRISAbits.TRISA3 = 0;
[e = . . _TRISAbits 0 3 -> -> 0 `i `uc ]
"866
[; ;MainBat.c: 866:     ANSELDbits.ANSELD0 = 0;
[e = . . _ANSELDbits 0 0 -> -> 0 `i `uc ]
"867
[; ;MainBat.c: 867:     ANSELDbits.ANSELD1 = 0;
[e = . . _ANSELDbits 0 1 -> -> 0 `i `uc ]
"868
[; ;MainBat.c: 868:     ANSELDbits.ANSELD2 = 0;
[e = . . _ANSELDbits 0 2 -> -> 0 `i `uc ]
"869
[; ;MainBat.c: 869:     ANSELDbits.ANSELD3 = 0;
[e = . . _ANSELDbits 0 3 -> -> 0 `i `uc ]
"870
[; ;MainBat.c: 870:     ANSELDbits.ANSELD4 = 0;
[e = . . _ANSELDbits 0 4 -> -> 0 `i `uc ]
"871
[; ;MainBat.c: 871:     ANSELDbits.ANSELD5 = 0;
[e = . . _ANSELDbits 0 5 -> -> 0 `i `uc ]
"872
[; ;MainBat.c: 872:     ANSELDbits.ANSELD6 = 0;
[e = . . _ANSELDbits 0 6 -> -> 0 `i `uc ]
"873
[; ;MainBat.c: 873:     ANSELDbits.ANSELD7 = 0;
[e = . . _ANSELDbits 0 7 -> -> 0 `i `uc ]
"875
[; ;MainBat.c: 875:     TRISDbits.TRISD0 = 0;
[e = . . _TRISDbits 0 0 -> -> 0 `i `uc ]
"876
[; ;MainBat.c: 876:     TRISDbits.TRISD1 = 0;
[e = . . _TRISDbits 0 1 -> -> 0 `i `uc ]
"877
[; ;MainBat.c: 877:     TRISDbits.TRISD2 = 0;
[e = . . _TRISDbits 0 2 -> -> 0 `i `uc ]
"878
[; ;MainBat.c: 878:     TRISDbits.TRISD3 = 0;
[e = . . _TRISDbits 0 3 -> -> 0 `i `uc ]
"879
[; ;MainBat.c: 879:     TRISDbits.TRISD4 = 0;
[e = . . _TRISDbits 0 4 -> -> 0 `i `uc ]
"880
[; ;MainBat.c: 880:     TRISDbits.TRISD5 = 0;
[e = . . _TRISDbits 0 5 -> -> 0 `i `uc ]
"881
[; ;MainBat.c: 881:     TRISDbits.TRISD6 = 0;
[e = . . _TRISDbits 0 6 -> -> 0 `i `uc ]
"882
[; ;MainBat.c: 882:     TRISDbits.TRISD7 = 0;
[e = . . _TRISDbits 0 7 -> -> 0 `i `uc ]
"886
[; ;MainBat.c: 886:     ANSELEbits.ANSELE2 = 0;
[e = . . _ANSELEbits 0 2 -> -> 0 `i `uc ]
"889
[; ;MainBat.c: 889:     TRISEbits.TRISE2 = 0;
[e = . . _TRISEbits 0 2 -> -> 0 `i `uc ]
"894
[; ;MainBat.c: 894:     ANSELCbits.ANSELC0 = 0;
[e = . . _ANSELCbits 0 0 -> -> 0 `i `uc ]
"895
[; ;MainBat.c: 895:     ANSELAbits.ANSELA5 = 0;
[e = . . _ANSELAbits 0 5 -> -> 0 `i `uc ]
"896
[; ;MainBat.c: 896:     ANSELBbits.ANSELB3 = 0;
[e = . . _ANSELBbits 0 3 -> -> 0 `i `uc ]
"898
[; ;MainBat.c: 898:     TRISCbits.TRISC0 = 1;
[e = . . _TRISCbits 0 0 -> -> 1 `i `uc ]
"900
[; ;MainBat.c: 900:     TRISBbits.TRISB3 = 1;
[e = . . _TRISBbits 0 3 -> -> 1 `i `uc ]
"901
[; ;MainBat.c: 901:     TRISAbits.TRISA5 = 0;
[e = . . _TRISAbits 0 5 -> -> 0 `i `uc ]
"903
[; ;MainBat.c: 903:     ANSELCbits.ANSELC3 = 0;
[e = . . _ANSELCbits 0 3 -> -> 0 `i `uc ]
"904
[; ;MainBat.c: 904:     ANSELCbits.ANSELC4 = 0;
[e = . . _ANSELCbits 0 4 -> -> 0 `i `uc ]
"907
[; ;MainBat.c: 907:     PMD3bits.CCP2MD = 1;
[e = . . _PMD3bits 0 1 -> -> 1 `i `uc ]
"908
[; ;MainBat.c: 908:     CCP2CONbits.CCP2EN = 0x00;
[e = . . _CCP2CONbits 2 4 -> -> 0 `i `uc ]
"909
[; ;MainBat.c: 909:     CCP2CONbits.CCP2MODE0 = 0;
[e = . . _CCP2CONbits 3 0 -> -> 0 `i `uc ]
"910
[; ;MainBat.c: 910:     CCP2CONbits.CCP2MODE1 = 0;
[e = . . _CCP2CONbits 3 1 -> -> 0 `i `uc ]
"911
[; ;MainBat.c: 911:     CCP2CONbits.CCP2MODE2 = 0;
[e = . . _CCP2CONbits 3 2 -> -> 0 `i `uc ]
"912
[; ;MainBat.c: 912:     CCP2CONbits.CCP2MODE3 = 0;
[e = . . _CCP2CONbits 3 3 -> -> 0 `i `uc ]
"913
[; ;MainBat.c: 913:     PIR6bits.CCP2IF = 0;
[e = . . _PIR6bits 0 1 -> -> 0 `i `uc ]
"914
[; ;MainBat.c: 914:     PIE6bits.CCP2IE = 0;
[e = . . _PIE6bits 0 1 -> -> 0 `i `uc ]
"916
[; ;MainBat.c: 916:     ANSELCbits.ANSELC2 = 0;
[e = . . _ANSELCbits 0 2 -> -> 0 `i `uc ]
"917
[; ;MainBat.c: 917:     TRISCbits.TRISC2 = 0;
[e = . . _TRISCbits 0 2 -> -> 0 `i `uc ]
"920
[; ;MainBat.c: 920:     ANSELCbits.ANSELC6 = 0;
[e = . . _ANSELCbits 0 6 -> -> 0 `i `uc ]
"921
[; ;MainBat.c: 921:     ANSELCbits.ANSELC7 = 0;
[e = . . _ANSELCbits 0 7 -> -> 0 `i `uc ]
"923
[; ;MainBat.c: 923:     LATCbits.LATC6 = 1;
[e = . . _LATCbits 0 6 -> -> 1 `i `uc ]
"924
[; ;MainBat.c: 924:     TRISCbits.TRISC6 = 0;
[e = . . _TRISCbits 0 6 -> -> 0 `i `uc ]
"925
[; ;MainBat.c: 925:     TRISCbits.TRISC7 = 1;
[e = . . _TRISCbits 0 7 -> -> 1 `i `uc ]
"926
[; ;MainBat.c: 926: }
[e :UE 1657 ]
}
"928
[; ;MainBat.c: 928: void timer0_init()
[v _timer0_init `(v ~T0 @X0 1 ef ]
"929
[; ;MainBat.c: 929: {
{
[e :U _timer0_init ]
[f ]
"930
[; ;MainBat.c: 930:     T0CON0bits.T016BIT = 1;
[e = . . _T0CON0bits 0 1 -> -> 1 `i `uc ]
"932
[; ;MainBat.c: 932:     T0CON0bits.T0OUTPS0 = 0;
[e = . . _T0CON0bits 1 0 -> -> 0 `i `uc ]
"933
[; ;MainBat.c: 933:     T0CON0bits.T0OUTPS1 = 0;
[e = . . _T0CON0bits 1 1 -> -> 0 `i `uc ]
"934
[; ;MainBat.c: 934:     T0CON0bits.T0OUTPS2 = 0;
[e = . . _T0CON0bits 1 2 -> -> 0 `i `uc ]
"935
[; ;MainBat.c: 935:     T0CON0bits.T0OUTPS3 = 0;
[e = . . _T0CON0bits 1 3 -> -> 0 `i `uc ]
"937
[; ;MainBat.c: 937:     T0CON1bits.T0CS0 = 0;
[e = . . _T0CON1bits 1 5 -> -> 0 `i `uc ]
"938
[; ;MainBat.c: 938:     T0CON1bits.T0CS1 = 1;
[e = . . _T0CON1bits 1 6 -> -> 1 `i `uc ]
"939
[; ;MainBat.c: 939:     T0CON1bits.T0CS2 = 0;
[e = . . _T0CON1bits 1 7 -> -> 0 `i `uc ]
"940
[; ;MainBat.c: 940:     T0CON1bits.T0ASYNC = 0;
[e = . . _T0CON1bits 0 1 -> -> 0 `i `uc ]
"942
[; ;MainBat.c: 942:     T0CON1bits.T0CKPS0 = 0;
[e = . . _T0CON1bits 1 0 -> -> 0 `i `uc ]
"943
[; ;MainBat.c: 943:     T0CON1bits.T0CKPS1 = 0;
[e = . . _T0CON1bits 1 1 -> -> 0 `i `uc ]
"944
[; ;MainBat.c: 944:     T0CON1bits.T0CKPS2 = 0;
[e = . . _T0CON1bits 1 2 -> -> 0 `i `uc ]
"945
[; ;MainBat.c: 945:     T0CON1bits.T0CKPS3 = 0;
[e = . . _T0CON1bits 1 3 -> -> 0 `i `uc ]
"947
[; ;MainBat.c: 947:     T0CON0bits.T0EN = 1;
[e = . . _T0CON0bits 0 4 -> -> 1 `i `uc ]
"948
[; ;MainBat.c: 948:     PIE0bits.TMR0IE = 1;
[e = . . _PIE0bits 0 5 -> -> 1 `i `uc ]
"949
[; ;MainBat.c: 949:     PIR0bits.TMR0IF = 0;
[e = . . _PIR0bits 0 5 -> -> 0 `i `uc ]
"951
[; ;MainBat.c: 951:     INTCONbits.IPEN = 0;
[e = . . _INTCONbits 0 4 -> -> 0 `i `uc ]
"952
[; ;MainBat.c: 952:     INTCONbits.GIE = 1;
[e = . . _INTCONbits 1 2 -> -> 1 `i `uc ]
"953
[; ;MainBat.c: 953:     INTCONbits.PEIE = 1;
[e = . . _INTCONbits 1 1 -> -> 1 `i `uc ]
"954
[; ;MainBat.c: 954:     TMR0H = 0xD1;
[e = _TMR0H -> -> 209 `i `uc ]
"955
[; ;MainBat.c: 955:     TMR0L = 0x20;
[e = _TMR0L -> -> 32 `i `uc ]
"956
[; ;MainBat.c: 956: }
[e :UE 1658 ]
}
"958
[; ;MainBat.c: 958: void ADC_init()
[v _ADC_init `(v ~T0 @X0 1 ef ]
"959
[; ;MainBat.c: 959: {
{
[e :U _ADC_init ]
[f ]
"960
[; ;MainBat.c: 960:     TRISAbits.TRISA0 = 1;
[e = . . _TRISAbits 0 0 -> -> 1 `i `uc ]
"961
[; ;MainBat.c: 961:     TRISAbits.TRISA1 = 1;
[e = . . _TRISAbits 0 1 -> -> 1 `i `uc ]
"962
[; ;MainBat.c: 962:     TRISAbits.TRISA2 = 1;
[e = . . _TRISAbits 0 2 -> -> 1 `i `uc ]
"963
[; ;MainBat.c: 963:     TRISBbits.TRISB5 = 1;
[e = . . _TRISBbits 0 5 -> -> 1 `i `uc ]
"964
[; ;MainBat.c: 964:     TRISCbits.TRISC5 = 1;
[e = . . _TRISCbits 0 5 -> -> 1 `i `uc ]
"965
[; ;MainBat.c: 965:     TRISEbits.TRISE0 = 1;
[e = . . _TRISEbits 0 0 -> -> 1 `i `uc ]
"966
[; ;MainBat.c: 966:  TRISEbits.TRISE1 = 1;
[e = . . _TRISEbits 0 1 -> -> 1 `i `uc ]
"967
[; ;MainBat.c: 967:     TRISAbits.TRISA4 = 1;
[e = . . _TRISAbits 0 4 -> -> 1 `i `uc ]
"969
[; ;MainBat.c: 969:     ANSELAbits.ANSELA0 = 1;
[e = . . _ANSELAbits 0 0 -> -> 1 `i `uc ]
"970
[; ;MainBat.c: 970:     ANSELAbits.ANSELA1 = 1;
[e = . . _ANSELAbits 0 1 -> -> 1 `i `uc ]
"971
[; ;MainBat.c: 971:     ANSELAbits.ANSELA2 = 1;
[e = . . _ANSELAbits 0 2 -> -> 1 `i `uc ]
"972
[; ;MainBat.c: 972:     ANSELBbits.ANSELB5 = 1;
[e = . . _ANSELBbits 0 5 -> -> 1 `i `uc ]
"973
[; ;MainBat.c: 973:     ANSELCbits.ANSELC5 = 1;
[e = . . _ANSELCbits 0 5 -> -> 1 `i `uc ]
"974
[; ;MainBat.c: 974:     ANSELEbits.ANSELE0 = 1;
[e = . . _ANSELEbits 0 0 -> -> 1 `i `uc ]
"975
[; ;MainBat.c: 975:     ANSELEbits.ANSELE1 = 1;
[e = . . _ANSELEbits 0 1 -> -> 1 `i `uc ]
"976
[; ;MainBat.c: 976:     ANSELAbits.ANSELA4 = 1;
[e = . . _ANSELAbits 0 4 -> -> 1 `i `uc ]
"978
[; ;MainBat.c: 978:     PMD2bits.ADCMD = 0;
[e = . . _PMD2bits 0 4 -> -> 0 `i `uc ]
"982
[; ;MainBat.c: 982:     ADPCHbits.ADPCH0 = 0;
[e = . . _ADPCHbits 1 0 -> -> 0 `i `uc ]
"983
[; ;MainBat.c: 983:     ADPCHbits.ADPCH1 = 0;
[e = . . _ADPCHbits 1 1 -> -> 0 `i `uc ]
"984
[; ;MainBat.c: 984:     ADPCHbits.ADPCH2 = 0;
[e = . . _ADPCHbits 1 2 -> -> 0 `i `uc ]
"985
[; ;MainBat.c: 985:     ADPCHbits.ADPCH3 = 0;
[e = . . _ADPCHbits 1 3 -> -> 0 `i `uc ]
"986
[; ;MainBat.c: 986:     ADPCHbits.ADPCH4 = 0;
[e = . . _ADPCHbits 1 4 -> -> 0 `i `uc ]
"987
[; ;MainBat.c: 987:     ADPCHbits.ADPCH5 = 0;
[e = . . _ADPCHbits 1 5 -> -> 0 `i `uc ]
"989
[; ;MainBat.c: 989:     channel = 0;
[e = _channel -> -> 0 `i `uc ]
"991
[; ;MainBat.c: 991:     ADREFbits.ADPREF0 = 0;
[e = . . _ADREFbits 1 0 -> -> 0 `i `uc ]
"992
[; ;MainBat.c: 992:     ADREFbits.ADPREF1 = 0;
[e = . . _ADREFbits 1 1 -> -> 0 `i `uc ]
"993
[; ;MainBat.c: 993:     ADREFbits.ADNREF = 0;
[e = . . _ADREFbits 0 2 -> -> 0 `i `uc ]
"995
[; ;MainBat.c: 995:     ADCON0bits.ADCS = 0;
[e = . . _ADCON0bits 0 4 -> -> 0 `i `uc ]
"996
[; ;MainBat.c: 996:     ADCLK = 0x3F;
[e = _ADCLK -> -> 63 `i `uc ]
"997
[; ;MainBat.c: 997:     ADCON0bits.ADFM = 1;
[e = . . _ADCON0bits 0 2 -> -> 1 `i `uc ]
"998
[; ;MainBat.c: 998:     ADACQ = 0x00;
[e = _ADACQ -> -> 0 `i `uc ]
"1000
[; ;MainBat.c: 1000:     PIR1bits.ADIF =0;
[e = . . _PIR1bits 0 0 -> -> 0 `i `uc ]
"1001
[; ;MainBat.c: 1001:     PIE1bits.ADIE =1;
[e = . . _PIE1bits 0 0 -> -> 1 `i `uc ]
"1002
[; ;MainBat.c: 1002:     INTCONbits.PEIE =1;
[e = . . _INTCONbits 1 1 -> -> 1 `i `uc ]
"1003
[; ;MainBat.c: 1003:     INTCONbits.GIE =1;
[e = . . _INTCONbits 1 2 -> -> 1 `i `uc ]
"1004
[; ;MainBat.c: 1004:     Delay(500,'m');
[e ( _Delay (2 , -> -> 500 `i `ui -> -> 109 `ui `uc ]
"1005
[; ;MainBat.c: 1005:     ADCON0bits.ADON =1;
[e = . . _ADCON0bits 0 7 -> -> 1 `i `uc ]
"1006
[; ;MainBat.c: 1006:     ADCON0bits.ADGO =1;
[e = . . _ADCON0bits 0 0 -> -> 1 `i `uc ]
"1007
[; ;MainBat.c: 1007: }
[e :UE 1659 ]
}
"1009
[; ;MainBat.c: 1009: void system_init()
[v _system_init `(v ~T0 @X0 1 ef ]
"1010
[; ;MainBat.c: 1010: {
{
[e :U _system_init ]
[f ]
"1011
[; ;MainBat.c: 1011:     oscillator_init();
[e ( _oscillator_init ..  ]
"1012
[; ;MainBat.c: 1012:     timer0_init();
[e ( _timer0_init ..  ]
"1013
[; ;MainBat.c: 1013:     portpin_init();
[e ( _portpin_init ..  ]
"1014
[; ;MainBat.c: 1014:     ADC_init();
[e ( _ADC_init ..  ]
"1015
[; ;MainBat.c: 1015:     I2C_init();
[e ( _I2C_init ..  ]
"1016
[; ;MainBat.c: 1016: }
[e :UE 1660 ]
}
"1018
[; ;MainBat.c: 1018: void I2C_init(void)
[v _I2C_init `(v ~T0 @X0 1 ef ]
"1019
[; ;MainBat.c: 1019: {
{
[e :U _I2C_init ]
[f ]
"1020
[; ;MainBat.c: 1020:  TRISCbits.TRISC3 = 0;
[e = . . _TRISCbits 0 3 -> -> 0 `i `uc ]
"1021
[; ;MainBat.c: 1021:  TRISCbits.TRISC4 = 0;
[e = . . _TRISCbits 0 4 -> -> 0 `i `uc ]
"1022
[; ;MainBat.c: 1022: }
[e :UE 1661 ]
}
"1024
[; ;MainBat.c: 1024: void Delay100uSec(void)
[v _Delay100uSec `(v ~T0 @X0 1 ef ]
"1025
[; ;MainBat.c: 1025: {
{
[e :U _Delay100uSec ]
[f ]
"1026
[; ;MainBat.c: 1026:     unsigned int a;
[v _a `ui ~T0 @X0 1 a ]
"1027
[; ;MainBat.c: 1027:     for (a=0;a<8;a++);
{
[e = _a -> -> 0 `i `ui ]
[e $ < _a -> -> 8 `i `ui 1663  ]
[e $U 1664  ]
[e :U 1663 ]
[e ++ _a -> -> 1 `i `ui ]
[e $ < _a -> -> 8 `i `ui 1663  ]
[e :U 1664 ]
}
"1028
[; ;MainBat.c: 1028: }
[e :UE 1662 ]
}
"1031
[; ;MainBat.c: 1031: void Delay(unsigned int iCnt, unsigned char cUnit)
[v _Delay `(v ~T0 @X0 1 ef2`ui`uc ]
"1032
[; ;MainBat.c: 1032: {
{
[e :U _Delay ]
"1031
[; ;MainBat.c: 1031: void Delay(unsigned int iCnt, unsigned char cUnit)
[v _iCnt `ui ~T0 @X0 1 r1 ]
[v _cUnit `uc ~T0 @X0 1 r2 ]
"1032
[; ;MainBat.c: 1032: {
[f ]
"1033
[; ;MainBat.c: 1033:     unsigned int a,b,c;
[v _a `ui ~T0 @X0 1 a ]
[v _b `ui ~T0 @X0 1 a ]
[v _c `ui ~T0 @X0 1 a ]
"1035
[; ;MainBat.c: 1035:     if(cUnit == 's')
[e $ ! == -> _cUnit `ui -> 115 `ui 1667  ]
"1036
[; ;MainBat.c: 1036:     {
{
"1037
[; ;MainBat.c: 1037:         for (c = 0; c < iCnt; c++)
{
[e = _c -> -> 0 `i `ui ]
[e $U 1671  ]
[e :U 1668 ]
"1038
[; ;MainBat.c: 1038:             for (b = 0; b < 1000; b++)
{
[e = _b -> -> 0 `i `ui ]
[e $ < _b -> -> 1000 `i `ui 1672  ]
[e $U 1673  ]
[e :U 1672 ]
"1039
[; ;MainBat.c: 1039:                 for(a = 0; a < 10; a++)
{
[e = _a -> -> 0 `i `ui ]
[e $ < _a -> -> 10 `i `ui 1675  ]
[e $U 1676  ]
[e :U 1675 ]
"1040
[; ;MainBat.c: 1040:                 {
{
"1041
[; ;MainBat.c: 1041:                     Delay100uSec();
[e ( _Delay100uSec ..  ]
"1042
[; ;MainBat.c: 1042:                 }
}
[e ++ _a -> -> 1 `i `ui ]
[e $ < _a -> -> 10 `i `ui 1675  ]
[e :U 1676 ]
}
[e ++ _b -> -> 1 `i `ui ]
[e $ < _b -> -> 1000 `i `ui 1672  ]
[e :U 1673 ]
}
[e ++ _c -> -> 1 `i `ui ]
[e :U 1671 ]
[e $ < _c _iCnt 1668  ]
[e :U 1669 ]
}
"1043
[; ;MainBat.c: 1043:     }
}
[e $U 1678  ]
"1044
[; ;MainBat.c: 1044:     else if(cUnit == 'm')
[e :U 1667 ]
[e $ ! == -> _cUnit `ui -> 109 `ui 1679  ]
"1045
[; ;MainBat.c: 1045:     {
{
"1046
[; ;MainBat.c: 1046:         for (b = 0;b < iCnt; b++)
{
[e = _b -> -> 0 `i `ui ]
[e $U 1683  ]
[e :U 1680 ]
"1047
[; ;MainBat.c: 1047:             for(a = 0; a < 10; a++)
{
[e = _a -> -> 0 `i `ui ]
[e $ < _a -> -> 10 `i `ui 1684  ]
[e $U 1685  ]
[e :U 1684 ]
"1048
[; ;MainBat.c: 1048:             {
{
"1049
[; ;MainBat.c: 1049:                 Delay100uSec();
[e ( _Delay100uSec ..  ]
"1050
[; ;MainBat.c: 1050:             }
}
[e ++ _a -> -> 1 `i `ui ]
[e $ < _a -> -> 10 `i `ui 1684  ]
[e :U 1685 ]
}
[e ++ _b -> -> 1 `i `ui ]
[e :U 1683 ]
[e $ < _b _iCnt 1680  ]
[e :U 1681 ]
}
"1051
[; ;MainBat.c: 1051:     }
}
[e :U 1679 ]
[e :U 1678 ]
"1053
[; ;MainBat.c: 1053: }
[e :UE 1666 ]
}
"1057
[; ;MainBat.c: 1057: void Bluetooth_Init(void)
[v _Bluetooth_Init `(v ~T0 @X0 1 ef ]
"1058
[; ;MainBat.c: 1058: {
{
[e :U _Bluetooth_Init ]
[f ]
"1059
[; ;MainBat.c: 1059:     switch(ucInitCMD)
[e $U 1689  ]
"1060
[; ;MainBat.c: 1060:     {
{
"1061
[; ;MainBat.c: 1061:          case 0:if(ucCMDSEND==1)
[e :U 1690 ]
[e $ ! == -> _ucCMDSEND `i -> 1 `i 1691  ]
"1062
[; ;MainBat.c: 1062:                 {
{
"1063
[; ;MainBat.c: 1063:                     send_string_u1(AT);
[e ( _send_string_u1 (1 -> &U _AT `*uc ]
"1064
[; ;MainBat.c: 1064:                     ucInitCMD=1;ucCMDSEND=0;uiBCnt=0;
[e = _ucInitCMD -> -> 1 `i `uc ]
[e = _ucCMDSEND -> -> 0 `i `uc ]
[e = _uiBCnt -> -> 0 `i `ui ]
"1065
[; ;MainBat.c: 1065:                 }
}
[e :U 1691 ]
"1066
[; ;MainBat.c: 1066:                 break;
[e $U 1688  ]
"1067
[; ;MainBat.c: 1067:          case 1:if(ucCMDSEND==1)
[e :U 1692 ]
[e $ ! == -> _ucCMDSEND `i -> 1 `i 1693  ]
"1068
[; ;MainBat.c: 1068:                 {
{
"1069
[; ;MainBat.c: 1069:                     send_string_u1(BLENAME_R);
[e ( _send_string_u1 (1 -> &U _BLENAME_R `*uc ]
"1070
[; ;MainBat.c: 1070:                     ucInitCMD=2;ucCMDSEND=0;uiBCnt=0;
[e = _ucInitCMD -> -> 2 `i `uc ]
[e = _ucCMDSEND -> -> 0 `i `uc ]
[e = _uiBCnt -> -> 0 `i `ui ]
"1071
[; ;MainBat.c: 1071:                 }
}
[e :U 1693 ]
"1072
[; ;MainBat.c: 1072:                 break;
[e $U 1688  ]
"1073
[; ;MainBat.c: 1073:          case 2:if(ucCMDSEND==1)
[e :U 1694 ]
[e $ ! == -> _ucCMDSEND `i -> 1 `i 1695  ]
"1074
[; ;MainBat.c: 1074:                 {
{
"1075
[; ;MainBat.c: 1075:                     send_string_u1(BLENAME_S);
[e ( _send_string_u1 (1 -> &U _BLENAME_S `*uc ]
"1076
[; ;MainBat.c: 1076:                     ucInitCMD=3;ucCMDSEND=0;uiBCnt=0;
[e = _ucInitCMD -> -> 3 `i `uc ]
[e = _ucCMDSEND -> -> 0 `i `uc ]
[e = _uiBCnt -> -> 0 `i `ui ]
"1077
[; ;MainBat.c: 1077:                 }
}
[e :U 1695 ]
"1078
[; ;MainBat.c: 1078:                 break;
[e $U 1688  ]
"1079
[; ;MainBat.c: 1079:          case 3:if(ucCMDSEND==1)
[e :U 1696 ]
[e $ ! == -> _ucCMDSEND `i -> 1 `i 1697  ]
"1080
[; ;MainBat.c: 1080:                 {
{
"1081
[; ;MainBat.c: 1081:                     send_string_u1(BLEMODE_R);
[e ( _send_string_u1 (1 -> &U _BLEMODE_R `*uc ]
"1082
[; ;MainBat.c: 1082:                     ucInitCMD=4;ucCMDSEND=0;uiBCnt=0;
[e = _ucInitCMD -> -> 4 `i `uc ]
[e = _ucCMDSEND -> -> 0 `i `uc ]
[e = _uiBCnt -> -> 0 `i `ui ]
"1083
[; ;MainBat.c: 1083:                 }
}
[e :U 1697 ]
"1084
[; ;MainBat.c: 1084:                 break;
[e $U 1688  ]
"1085
[; ;MainBat.c: 1085:          case 4:if(ucCMDSEND==1)
[e :U 1698 ]
[e $ ! == -> _ucCMDSEND `i -> 1 `i 1699  ]
"1086
[; ;MainBat.c: 1086:                 {
{
"1087
[; ;MainBat.c: 1087:                     send_string_u1(BLEMODE_S);
[e ( _send_string_u1 (1 -> &U _BLEMODE_S `*uc ]
"1088
[; ;MainBat.c: 1088:                     ucInitCMD=5;ucCMDSEND=0;uiBCnt=0;
[e = _ucInitCMD -> -> 5 `i `uc ]
[e = _ucCMDSEND -> -> 0 `i `uc ]
[e = _uiBCnt -> -> 0 `i `ui ]
"1089
[; ;MainBat.c: 1089:                 }
}
[e :U 1699 ]
"1090
[; ;MainBat.c: 1090:                 break;
[e $U 1688  ]
"1091
[; ;MainBat.c: 1091:          case 5:if(ucCMDSEND==1)
[e :U 1700 ]
[e $ ! == -> _ucCMDSEND `i -> 1 `i 1701  ]
"1092
[; ;MainBat.c: 1092:                 {
{
"1093
[; ;MainBat.c: 1093:                     send_string_u1(TRANSENTER);
[e ( _send_string_u1 (1 -> &U _TRANSENTER `*uc ]
"1094
[; ;MainBat.c: 1094:                     ucInitCMD=6;ucCMDSEND=0;uiBCnt=0;
[e = _ucInitCMD -> -> 6 `i `uc ]
[e = _ucCMDSEND -> -> 0 `i `uc ]
[e = _uiBCnt -> -> 0 `i `ui ]
"1095
[; ;MainBat.c: 1095:                 }
}
[e :U 1701 ]
"1096
[; ;MainBat.c: 1096:                 break;
[e $U 1688  ]
"1097
[; ;MainBat.c: 1097:           case 6:if(ucCMDSEND==1)
[e :U 1702 ]
[e $ ! == -> _ucCMDSEND `i -> 1 `i 1703  ]
"1098
[; ;MainBat.c: 1098:                 {
{
"1099
[; ;MainBat.c: 1099:                     send_string_u1(CMDMODE);
[e ( _send_string_u1 (1 -> &U _CMDMODE `*uc ]
"1100
[; ;MainBat.c: 1100:                     ucInitCMD=0;ucBlutoothInit=0;ucCMDSEND=0;uiBCnt=0;
[e = _ucInitCMD -> -> 0 `i `uc ]
[e = _ucBlutoothInit -> -> 0 `i `uc ]
[e = _ucCMDSEND -> -> 0 `i `uc ]
[e = _uiBCnt -> -> 0 `i `ui ]
"1101
[; ;MainBat.c: 1101:                 }
}
[e :U 1703 ]
"1102
[; ;MainBat.c: 1102:                 break;
[e $U 1688  ]
"1103
[; ;MainBat.c: 1103:         default:
[e :U 1704 ]
"1104
[; ;MainBat.c: 1104:                 break;
[e $U 1688  ]
"1105
[; ;MainBat.c: 1105:     }
}
[e $U 1688  ]
[e :U 1689 ]
[e [\ -> _ucInitCMD `i , $ -> 0 `i 1690
 , $ -> 1 `i 1692
 , $ -> 2 `i 1694
 , $ -> 3 `i 1696
 , $ -> 4 `i 1698
 , $ -> 5 `i 1700
 , $ -> 6 `i 1702
 1704 ]
[e :U 1688 ]
"1106
[; ;MainBat.c: 1106: }
[e :UE 1687 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"1107
[; ;MainBat.c: 1107: void main (void)
[v _main `(v ~T0 @X0 1 ef ]
"1108
[; ;MainBat.c: 1108: {
{
[e :U _main ]
[f ]
"1109
[; ;MainBat.c: 1109:     system_init();
[e ( _system_init ..  ]
"1111
[; ;MainBat.c: 1111:     cPowerONfg = 1;
[e = _cPowerONfg -> -> 1 `i `uc ]
"1112
[; ;MainBat.c: 1112:     iPowerONcnt = 10000;
[e = _iPowerONcnt -> -> 10000 `i `ui ]
"1113
[; ;MainBat.c: 1113:     cModel_Select = 2;
[e = _cModel_Select -> -> 2 `i `uc ]
"1114
[; ;MainBat.c: 1114:     ModelSelection();
[e ( _ModelSelection ..  ]
"1116
[; ;MainBat.c: 1116:     if(123 == Read_EEPROM(0x00FF))
[e $ ! == -> -> 123 `i `ui ( _Read_EEPROM (1 -> -> 255 `i `ui 1706  ]
"1117
[; ;MainBat.c: 1117:     {
{
"1121
[; ;MainBat.c: 1121:         cModel_Select = Read_EEPROM(40);
[e = _cModel_Select -> ( _Read_EEPROM (1 -> -> 40 `i `ui `uc ]
"1122
[; ;MainBat.c: 1122:         sec = Read_EEPROM(30);
[e = _sec ( _Read_EEPROM (1 -> -> 30 `i `ui ]
"1123
[; ;MainBat.c: 1123:         min = Read_EEPROM(33);
[e = _min ( _Read_EEPROM (1 -> -> 33 `i `ui ]
"1124
[; ;MainBat.c: 1124:         hr = Read_EEPROM(36);
[e = _hr ( _Read_EEPROM (1 -> -> 36 `i `ui ]
"1126
[; ;MainBat.c: 1126:         iMAXFBCurrOffset = Read_EEPROM(46);
[e = _iMAXFBCurrOffset ( _Read_EEPROM (1 -> -> 46 `i `ui ]
"1128
[; ;MainBat.c: 1128:         if(iMAXFBCurrOffset <= 300 || iMAXFBCurrOffset >=650)
[e $ ! || <= _iMAXFBCurrOffset -> -> 300 `i `ui >= _iMAXFBCurrOffset -> -> 650 `i `ui 1707  ]
"1129
[; ;MainBat.c: 1129:         {
{
"1130
[; ;MainBat.c: 1130:             Write_EEPROM(556,46);
[e ( _Write_EEPROM (2 , -> -> 556 `i `ui -> -> 46 `i `ui ]
"1131
[; ;MainBat.c: 1131:             iMAXFBCurrOffset = Read_EEPROM(46);
[e = _iMAXFBCurrOffset ( _Read_EEPROM (1 -> -> 46 `i `ui ]
"1132
[; ;MainBat.c: 1132:             fSLOPE1 = ((float)iMAXFBCurrOffset/100);
[e = _fSLOPE1 / -> _iMAXFBCurrOffset `f -> -> 100 `i `f ]
"1133
[; ;MainBat.c: 1133:         }
}
[e $U 1708  ]
"1134
[; ;MainBat.c: 1134:         else
[e :U 1707 ]
"1135
[; ;MainBat.c: 1135:         {
{
"1136
[; ;MainBat.c: 1136:             fSLOPE1 = ((float)iMAXFBCurrOffset/100);
[e = _fSLOPE1 / -> _iMAXFBCurrOffset `f -> -> 100 `i `f ]
"1137
[; ;MainBat.c: 1137:         }
}
[e :U 1708 ]
"1139
[; ;MainBat.c: 1139:         iVRD_Time = iSetVRD_Time = Read_EEPROM(48);
[e = _iVRD_Time = _iSetVRD_Time ( _Read_EEPROM (1 -> -> 48 `i `ui ]
"1140
[; ;MainBat.c: 1140:         iMINFBCurrOffset = Read_EEPROM(50);
[e = _iMINFBCurrOffset ( _Read_EEPROM (1 -> -> 50 `i `ui ]
"1142
[; ;MainBat.c: 1142:     }
}
[e $U 1709  ]
"1143
[; ;MainBat.c: 1143:     else
[e :U 1706 ]
"1144
[; ;MainBat.c: 1144:     {
{
"1145
[; ;MainBat.c: 1145:         Write_EEPROM(cModel_Select,40);
[e ( _Write_EEPROM (2 , -> _cModel_Select `ui -> -> 40 `i `ui ]
"1149
[; ;MainBat.c: 1149:         Write_EEPROM(0,30);
[e ( _Write_EEPROM (2 , -> -> 0 `i `ui -> -> 30 `i `ui ]
"1150
[; ;MainBat.c: 1150:         Write_EEPROM(0,33);
[e ( _Write_EEPROM (2 , -> -> 0 `i `ui -> -> 33 `i `ui ]
"1151
[; ;MainBat.c: 1151:         Write_EEPROM(0,36);
[e ( _Write_EEPROM (2 , -> -> 0 `i `ui -> -> 36 `i `ui ]
"1152
[; ;MainBat.c: 1152:         Write_EEPROM(565,46);
[e ( _Write_EEPROM (2 , -> -> 565 `i `ui -> -> 46 `i `ui ]
"1153
[; ;MainBat.c: 1153:         iVRD_Time = 2;
[e = _iVRD_Time -> -> 2 `i `ui ]
"1154
[; ;MainBat.c: 1154:         Write_EEPROM(iVRD_Time,48);
[e ( _Write_EEPROM (2 , _iVRD_Time -> -> 48 `i `ui ]
"1156
[; ;MainBat.c: 1156:         Write_EEPROM(123,0x00FF);
[e ( _Write_EEPROM (2 , -> -> 123 `i `ui -> -> 255 `i `ui ]
"1157
[; ;MainBat.c: 1157:         cModel_Select = Read_EEPROM(40);
[e = _cModel_Select -> ( _Read_EEPROM (1 -> -> 40 `i `ui `uc ]
"1159
[; ;MainBat.c: 1159:         sec = Read_EEPROM(30);
[e = _sec ( _Read_EEPROM (1 -> -> 30 `i `ui ]
"1161
[; ;MainBat.c: 1161:         if((sec==0XFF)||(sec>60))
[e $ ! || == _sec -> -> 255 `i `ui > _sec -> -> 60 `i `ui 1710  ]
"1162
[; ;MainBat.c: 1162:         {
{
"1163
[; ;MainBat.c: 1163:            sec=0;
[e = _sec -> -> 0 `i `ui ]
"1164
[; ;MainBat.c: 1164:         }
}
[e :U 1710 ]
"1166
[; ;MainBat.c: 1166:         min = Read_EEPROM(33);
[e = _min ( _Read_EEPROM (1 -> -> 33 `i `ui ]
"1168
[; ;MainBat.c: 1168:         if((min==0XFF)||(min>60))
[e $ ! || == _min -> -> 255 `i `ui > _min -> -> 60 `i `ui 1711  ]
"1169
[; ;MainBat.c: 1169:         {
{
"1170
[; ;MainBat.c: 1170:            min=0;
[e = _min -> -> 0 `i `ui ]
"1171
[; ;MainBat.c: 1171:         }
}
[e :U 1711 ]
"1173
[; ;MainBat.c: 1173:         hr = Read_EEPROM(36);
[e = _hr ( _Read_EEPROM (1 -> -> 36 `i `ui ]
"1175
[; ;MainBat.c: 1175:         if((hr==0XFF)||(hr>99))
[e $ ! || == _hr -> -> 255 `i `ui > _hr -> -> 99 `i `ui 1712  ]
"1176
[; ;MainBat.c: 1176:         {
{
"1177
[; ;MainBat.c: 1177:            hr=0;
[e = _hr -> -> 0 `i `ui ]
"1178
[; ;MainBat.c: 1178:         }
}
[e :U 1712 ]
"1179
[; ;MainBat.c: 1179:         iMAXFBCurrOffset = Read_EEPROM(46);
[e = _iMAXFBCurrOffset ( _Read_EEPROM (1 -> -> 46 `i `ui ]
"1181
[; ;MainBat.c: 1181:         if(iMAXFBCurrOffset <= 300 || iMAXFBCurrOffset >=650)
[e $ ! || <= _iMAXFBCurrOffset -> -> 300 `i `ui >= _iMAXFBCurrOffset -> -> 650 `i `ui 1713  ]
"1182
[; ;MainBat.c: 1182:         {
{
"1183
[; ;MainBat.c: 1183:              Write_EEPROM(556,46);
[e ( _Write_EEPROM (2 , -> -> 556 `i `ui -> -> 46 `i `ui ]
"1185
[; ;MainBat.c: 1185:              iMAXFBCurrOffset = Read_EEPROM(46);
[e = _iMAXFBCurrOffset ( _Read_EEPROM (1 -> -> 46 `i `ui ]
"1186
[; ;MainBat.c: 1186:              fSLOPE1 = ((float)iMAXFBCurrOffset/100);
[e = _fSLOPE1 / -> _iMAXFBCurrOffset `f -> -> 100 `i `f ]
"1187
[; ;MainBat.c: 1187:         }
}
[e $U 1714  ]
"1188
[; ;MainBat.c: 1188:         else
[e :U 1713 ]
"1189
[; ;MainBat.c: 1189:         {
{
"1190
[; ;MainBat.c: 1190:             fSLOPE1 = ((float)iMAXFBCurrOffset/100);
[e = _fSLOPE1 / -> _iMAXFBCurrOffset `f -> -> 100 `i `f ]
"1191
[; ;MainBat.c: 1191:         }
}
[e :U 1714 ]
"1192
[; ;MainBat.c: 1192:         iSetVRD_Time = iVRD_Time = Read_EEPROM(48);
[e = _iSetVRD_Time = _iVRD_Time ( _Read_EEPROM (1 -> -> 48 `i `ui ]
"1193
[; ;MainBat.c: 1193:         iMINFBCurrOffset = Read_EEPROM(50);
[e = _iMINFBCurrOffset ( _Read_EEPROM (1 -> -> 50 `i `ui ]
"1195
[; ;MainBat.c: 1195:     }
}
[e :U 1709 ]
"1197
[; ;MainBat.c: 1197:     if(cModelSelectfg == 0)
[e $ ! == -> _cModelSelectfg `i -> 0 `i 1715  ]
"1198
[; ;MainBat.c: 1198:     {
{
"1199
[; ;MainBat.c: 1199:         iDispcurr[0] = '[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1200
[; ;MainBat.c: 1200:         iDispcurr[1] = 'A';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 65 `ui `uc ]
"1201
[; ;MainBat.c: 1201:         iDispcurr[2] = 'D';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 68 `ui `uc ]
"1202
[; ;MainBat.c: 1202:         iDispcurr[3] = 'R';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1203
[; ;MainBat.c: 1203:         iDispvolt[0] = '[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1204
[; ;MainBat.c: 1204:         iDispvolt[1] = '[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1205
[; ;MainBat.c: 1205:         iDispvolt[2] = '[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1206
[; ;MainBat.c: 1206:         iDispvolt[3] = '[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1207
[; ;MainBat.c: 1207:         Delay(5, 's');
[e ( _Delay (2 , -> -> 5 `i `ui -> -> 115 `ui `uc ]
"1208
[; ;MainBat.c: 1208:         TypeDP.TypeD.digitdp3 = 1;
[e = . . _TypeDP 0 2 -> -> 1 `i `uc ]
"1209
[; ;MainBat.c: 1209:         iDispcurr[0] = '[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1210
[; ;MainBat.c: 1210:         iDispcurr[1] = 'R';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1211
[; ;MainBat.c: 1211:         iDispcurr[2] = '1';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 49 `ui `uc ]
"1212
[; ;MainBat.c: 1212:         iDispcurr[3] = '0';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1213
[; ;MainBat.c: 1213:         iDispvolt[0] = '[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1214
[; ;MainBat.c: 1214:         iDispvolt[1] = '[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1215
[; ;MainBat.c: 1215:         iDispvolt[2] = '[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1216
[; ;MainBat.c: 1216:         iDispvolt[3] = '[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1217
[; ;MainBat.c: 1217:         Delay(5, 's');
[e ( _Delay (2 , -> -> 5 `i `ui -> -> 115 `ui `uc ]
"1218
[; ;MainBat.c: 1218:         TypeDP.TypeD.digitdp3 = 0;
[e = . . _TypeDP 0 2 -> -> 0 `i `uc ]
"1220
[; ;MainBat.c: 1220:         if(cModel_Select == 1)
[e $ ! == -> _cModel_Select `i -> 1 `i 1716  ]
"1221
[; ;MainBat.c: 1221:         {
{
"1222
[; ;MainBat.c: 1222:            iDispcurr[0] = '[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1223
[; ;MainBat.c: 1223:            iDispcurr[1] = '2';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 50 `ui `uc ]
"1224
[; ;MainBat.c: 1224:            iDispcurr[2] = '5';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 53 `ui `uc ]
"1225
[; ;MainBat.c: 1225:            iDispcurr[3] = '0';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1226
[; ;MainBat.c: 1226:            iDispvolt[0] = '[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1227
[; ;MainBat.c: 1227:            iDispvolt[1] = '[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1228
[; ;MainBat.c: 1228:            iDispvolt[2] = '[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1229
[; ;MainBat.c: 1229:            iDispvolt[3] = '[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1230
[; ;MainBat.c: 1230:            Delay(5, 's');
[e ( _Delay (2 , -> -> 5 `i `ui -> -> 115 `ui `uc ]
"1233
[; ;MainBat.c: 1233:         }
}
[e $U 1717  ]
"1234
[; ;MainBat.c: 1234:         else if(cModel_Select == 2)
[e :U 1716 ]
[e $ ! == -> _cModel_Select `i -> 2 `i 1718  ]
"1235
[; ;MainBat.c: 1235:         {
{
"1236
[; ;MainBat.c: 1236:         if( PORTCbits.RC1==1)
[e $ ! == -> . . _PORTCbits 0 1 `i -> 1 `i 1719  ]
"1237
[; ;MainBat.c: 1237:             {
{
"1238
[; ;MainBat.c: 1238:              iDispcurr[0] = '[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1239
[; ;MainBat.c: 1239:              iDispcurr[1] = '2';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 50 `ui `uc ]
"1240
[; ;MainBat.c: 1240:              iDispcurr[2] = '0';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1241
[; ;MainBat.c: 1241:              iDispcurr[3] = '0';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1242
[; ;MainBat.c: 1242:              iDispvolt[0] = '[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1243
[; ;MainBat.c: 1243:              iDispvolt[1] = '[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1244
[; ;MainBat.c: 1244:              iDispvolt[2] = '[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1245
[; ;MainBat.c: 1245:              iDispvolt[3] = '[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1246
[; ;MainBat.c: 1246:              Delay(5, 's');
[e ( _Delay (2 , -> -> 5 `i `ui -> -> 115 `ui `uc ]
"1247
[; ;MainBat.c: 1247:            }
}
[e $U 1720  ]
"1248
[; ;MainBat.c: 1248:         else if ( PORTCbits.RC1==0)
[e :U 1719 ]
[e $ ! == -> . . _PORTCbits 0 1 `i -> 0 `i 1721  ]
"1249
[; ;MainBat.c: 1249:           {
{
"1250
[; ;MainBat.c: 1250:            iDispcurr[0] = '[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1251
[; ;MainBat.c: 1251:            iDispcurr[1] = '4';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 52 `ui `uc ]
"1252
[; ;MainBat.c: 1252:            iDispcurr[2] = '0';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1253
[; ;MainBat.c: 1253:            iDispcurr[3] = '0';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1254
[; ;MainBat.c: 1254:            iDispvolt[0] = '[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1255
[; ;MainBat.c: 1255:            iDispvolt[1] = '[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1256
[; ;MainBat.c: 1256:            iDispvolt[2] = '[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1257
[; ;MainBat.c: 1257:            iDispvolt[3] = '[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1258
[; ;MainBat.c: 1258:            Delay(5, 's');
[e ( _Delay (2 , -> -> 5 `i `ui -> -> 115 `ui `uc ]
"1259
[; ;MainBat.c: 1259:            }
}
[e :U 1721 ]
[e :U 1720 ]
"1260
[; ;MainBat.c: 1260:         }
}
[e $U 1722  ]
"1263
[; ;MainBat.c: 1263:         else if(cModel_Select == 3)
[e :U 1718 ]
[e $ ! == -> _cModel_Select `i -> 3 `i 1723  ]
"1264
[; ;MainBat.c: 1264:         {
{
"1265
[; ;MainBat.c: 1265:            iDispcurr[0] = '[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1266
[; ;MainBat.c: 1266:            iDispcurr[1] = '6';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 54 `ui `uc ]
"1267
[; ;MainBat.c: 1267:            iDispcurr[2] = '0';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1268
[; ;MainBat.c: 1268:            iDispcurr[3] = '0';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1269
[; ;MainBat.c: 1269:            iDispvolt[0] = '[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1270
[; ;MainBat.c: 1270:            iDispvolt[1] = '[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1271
[; ;MainBat.c: 1271:            iDispvolt[2] = '[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1272
[; ;MainBat.c: 1272:            iDispvolt[3] = '[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1273
[; ;MainBat.c: 1273:            Delay(5, 's');
[e ( _Delay (2 , -> -> 5 `i `ui -> -> 115 `ui `uc ]
"1276
[; ;MainBat.c: 1276:         }
}
[e :U 1723 ]
[e :U 1722 ]
[e :U 1717 ]
"1277
[; ;MainBat.c: 1277:     }
}
[e :U 1715 ]
"1278
[; ;MainBat.c: 1278:     TypeDP.TypeD.digitdp7 = 1;
[e = . . _TypeDP 0 6 -> -> 1 `i `uc ]
"1280
[; ;MainBat.c: 1280:     Modelcalibration();
[e ( _Modelcalibration ..  ]
"1281
[; ;MainBat.c: 1281:     iPrevSetcurrent = 0;
[e = _iPrevSetcurrent -> -> 0 `i `ui ]
"1283
[; ;MainBat.c: 1283:     if(cModel_Select == 2)
[e $ ! == -> _cModel_Select `i -> 2 `i 1724  ]
"1284
[; ;MainBat.c: 1284:     {
{
"1285
[; ;MainBat.c: 1285:         if(setcurrent <= 200)
[e $ ! <= _setcurrent -> -> 200 `i `ui 1725  ]
"1286
[; ;MainBat.c: 1286:         {
{
"1287
[; ;MainBat.c: 1287:             iHotfg = 1;
[e = _iHotfg -> -> 1 `i `ui ]
"1288
[; ;MainBat.c: 1288:         }
}
[e :U 1725 ]
"1289
[; ;MainBat.c: 1289:     }
}
[e :U 1724 ]
"1290
[; ;MainBat.c: 1290:     if(cModel_Select == 3)
[e $ ! == -> _cModel_Select `i -> 3 `i 1726  ]
"1291
[; ;MainBat.c: 1291:     {
{
"1292
[; ;MainBat.c: 1292:         if(setcurrent <= 450)
[e $ ! <= _setcurrent -> -> 450 `i `ui 1727  ]
"1293
[; ;MainBat.c: 1293:         {
{
"1294
[; ;MainBat.c: 1294:             iHotfg = 1;
[e = _iHotfg -> -> 1 `i `ui ]
"1295
[; ;MainBat.c: 1295:         }
}
[e :U 1727 ]
"1296
[; ;MainBat.c: 1296:     }
}
[e :U 1726 ]
"1298
[; ;MainBat.c: 1298:     cModeLatchfg = 1;
[e = _cModeLatchfg -> -> 1 `i `uc ]
"1299
[; ;MainBat.c: 1299:     if(ivrdcalibrationfg==0 && icalibrationfg==0)
[e $ ! && == _ivrdcalibrationfg -> -> 0 `i `ui == _icalibrationfg -> -> 0 `i `ui 1728  ]
"1300
[; ;MainBat.c: 1300:     {
{
"1301
[; ;MainBat.c: 1301:         USART_initialize();ucBlutoothInit=1;
[e ( _USART_initialize ..  ]
[e = _ucBlutoothInit -> -> 1 `i `uc ]
"1302
[; ;MainBat.c: 1302:     }
}
[e $U 1729  ]
"1303
[; ;MainBat.c: 1303:     else
[e :U 1728 ]
"1304
[; ;MainBat.c: 1304:     {
{
"1305
[; ;MainBat.c: 1305:         ucBlutoothInit=0;ucBLE_CON_DIS=0;
[e = _ucBlutoothInit -> -> 0 `i `uc ]
[e = _ucBLE_CON_DIS -> -> 0 `i `uc ]
"1306
[; ;MainBat.c: 1306:     }
}
[e :U 1729 ]
"1307
[; ;MainBat.c: 1307:     USART2_initialize();
[e ( _USART2_initialize ..  ]
"1355
[; ;MainBat.c: 1355:     ucCMDSEND=0;uiBCnt=0;ucBLE_CON_DIS=0;
[e = _ucCMDSEND -> -> 0 `i `uc ]
[e = _uiBCnt -> -> 0 `i `ui ]
[e = _ucBLE_CON_DIS -> -> 0 `i `uc ]
"1356
[; ;MainBat.c: 1356:  while(1)
[e :U 1731 ]
"1357
[; ;MainBat.c: 1357:  {
{
"1358
[; ;MainBat.c: 1358:         if(ucBlutoothInit)
[e $ ! != -> _ucBlutoothInit `i -> 0 `i 1733  ]
"1359
[; ;MainBat.c: 1359:             Bluetooth_Init();
[e ( _Bluetooth_Init ..  ]
[e :U 1733 ]
"1369
[; ;MainBat.c: 1369:         if(ucBLE_CON_DIS==1)
[e $ ! == -> _ucBLE_CON_DIS `i -> 1 `i 1734  ]
"1370
[; ;MainBat.c: 1370:         {
{
"1371
[; ;MainBat.c: 1371:            send_string_u1("APP CONNECTED"); ucBLE_CON_DIS=4;
[e ( _send_string_u1 (1 :s 1C ]
[e = _ucBLE_CON_DIS -> -> 4 `i `uc ]
"1372
[; ;MainBat.c: 1372:         }
}
[e $U 1735  ]
"1373
[; ;MainBat.c: 1373:         else if(ucBLE_CON_DIS==2)
[e :U 1734 ]
[e $ ! == -> _ucBLE_CON_DIS `i -> 2 `i 1736  ]
"1374
[; ;MainBat.c: 1374:         {
{
"1375
[; ;MainBat.c: 1375:            send_string_u1("APP DISCONNECT");
[e ( _send_string_u1 (1 :s 2C ]
"1376
[; ;MainBat.c: 1376:            ucBLE_CON_DIS=0;
[e = _ucBLE_CON_DIS -> -> 0 `i `uc ]
"1377
[; ;MainBat.c: 1377:         }
}
[e :U 1736 ]
[e :U 1735 ]
"1379
[; ;MainBat.c: 1379:         if((ucDataSend==1)&&(ucBLE_CON_DIS==4))
[e $ ! && == -> _ucDataSend `i -> 1 `i == -> _ucBLE_CON_DIS `i -> 4 `i 1737  ]
"1380
[; ;MainBat.c: 1380:         {
{
"1382
[; ;MainBat.c: 1382:            TRANS1('@');
[e ( _TRANS1 (1 -> -> 64 `ui `uc ]
"1383
[; ;MainBat.c: 1383:            send_string_u1("M:");
[e ( _send_string_u1 (1 :s 3C ]
"1384
[; ;MainBat.c: 1384:            TRANS1(cMode);
[e ( _TRANS1 (1 _cMode ]
"1385
[; ;MainBat.c: 1385:            TRANS1(';');
[e ( _TRANS1 (1 -> -> 59 `ui `uc ]
"1386
[; ;MainBat.c: 1386:            send_string_u1("SC:");
[e ( _send_string_u1 (1 :s 4C ]
"1387
[; ;MainBat.c: 1387:            TRANSNUM(setcurrent);
[e ( _TRANSNUM (1 _setcurrent ]
"1388
[; ;MainBat.c: 1388:            TRANS1(';');
[e ( _TRANS1 (1 -> -> 59 `ui `uc ]
"1389
[; ;MainBat.c: 1389:            send_string_u1("AV:");
[e ( _send_string_u1 (1 :s 5C ]
"1390
[; ;MainBat.c: 1390:            TRANSNUM(iActualvolt1);
[e ( _TRANSNUM (1 _iActualvolt1 ]
"1391
[; ;MainBat.c: 1391:            TRANS1(';');
[e ( _TRANS1 (1 -> -> 59 `ui `uc ]
"1392
[; ;MainBat.c: 1392:            send_string_u1("AC:");
[e ( _send_string_u1 (1 :s 6C ]
"1393
[; ;MainBat.c: 1393:            TRANSNUM(iActualcurr);
[e ( _TRANSNUM (1 _iActualcurr ]
"1394
[; ;MainBat.c: 1394:            TRANS1(';');
[e ( _TRANS1 (1 -> -> 59 `ui `uc ]
"1395
[; ;MainBat.c: 1395:            send_string_u1("Hr:");
[e ( _send_string_u1 (1 :s 7C ]
"1396
[; ;MainBat.c: 1396:            TIME(hr);
[e ( _TIME (1 _hr ]
"1397
[; ;MainBat.c: 1397:            TRANS1(';');
[e ( _TRANS1 (1 -> -> 59 `ui `uc ]
"1398
[; ;MainBat.c: 1398:            send_string_u1("Min:");
[e ( _send_string_u1 (1 :s 8C ]
"1399
[; ;MainBat.c: 1399:            TIME(min);
[e ( _TIME (1 _min ]
"1400
[; ;MainBat.c: 1400:            TRANS1(';');
[e ( _TRANS1 (1 -> -> 59 `ui `uc ]
"1401
[; ;MainBat.c: 1401:            send_string_u1("Sec:");
[e ( _send_string_u1 (1 :s 9C ]
"1402
[; ;MainBat.c: 1402:            TIME(sec);
[e ( _TIME (1 _sec ]
"1403
[; ;MainBat.c: 1403:            TRANS1(';');
[e ( _TRANS1 (1 -> -> 59 `ui `uc ]
"1404
[; ;MainBat.c: 1404:            send_string_u1("VR:");
[e ( _send_string_u1 (1 :s 10C ]
"1405
[; ;MainBat.c: 1405:            TRANS1(cVRD_fg + '0');
[e ( _TRANS1 (1 -> + -> _cVRD_fg `ui -> 48 `ui `uc ]
"1406
[; ;MainBat.c: 1406:            TRANS1(';');
[e ( _TRANS1 (1 -> -> 59 `ui `uc ]
"1407
[; ;MainBat.c: 1407:            send_string_u1("MB:");
[e ( _send_string_u1 (1 :s 11C ]
"1408
[; ;MainBat.c: 1408:            TRANS1(ucB_M_SEL + '0');
[e ( _TRANS1 (1 -> + -> _ucB_M_SEL `ui -> 48 `ui `uc ]
"1409
[; ;MainBat.c: 1409:            TRANS1('#');
[e ( _TRANS1 (1 -> -> 35 `ui `uc ]
"1410
[; ;MainBat.c: 1410:            ucDataSend=0;
[e = _ucDataSend -> -> 0 `i `uc ]
"1412
[; ;MainBat.c: 1412:            if(ucRx2Flag==1)
[e $ ! == -> _ucRx2Flag `i -> 1 `i 1738  ]
"1413
[; ;MainBat.c: 1413:            {
{
"1414
[; ;MainBat.c: 1414:               ucRx2Flag=0;
[e = _ucRx2Flag -> -> 0 `i `uc ]
"1416
[; ;MainBat.c: 1416:               TRANS1('$');
[e ( _TRANS1 (1 -> -> 36 `ui `uc ]
"1417
[; ;MainBat.c: 1417:               uiBPer = (unsigned int)Temp[0];
[e = _uiBPer -> *U + &U _Temp * -> -> -> 0 `i `ui `ux -> -> # *U &U _Temp `ui `ux `ui ]
"1418
[; ;MainBat.c: 1418:               uiBTemp = (unsigned int)Temp[3];
[e = _uiBTemp -> *U + &U _Temp * -> -> -> 3 `i `ui `ux -> -> # *U &U _Temp `ui `ux `ui ]
"1419
[; ;MainBat.c: 1419:               uiBatV = ((uiBPer*0.012)+3)*200;
[e = _uiBatV -> * + * -> _uiBPer `d .0.012 -> -> 3 `i `d -> -> 200 `i `d `ui ]
"1420
[; ;MainBat.c: 1420:               send_string_u1("BV:");
[e ( _send_string_u1 (1 :s 12C ]
"1421
[; ;MainBat.c: 1421:               TRANSNUM2(uiBatV);
[e ( _TRANSNUM2 (1 _uiBatV ]
"1422
[; ;MainBat.c: 1422:               TRANS1(';');
[e ( _TRANS1 (1 -> -> 59 `ui `uc ]
"1423
[; ;MainBat.c: 1423:               send_string_u1("BP:");
[e ( _send_string_u1 (1 :s 13C ]
"1424
[; ;MainBat.c: 1424:               TRANSNUM2(uiBPer);
[e ( _TRANSNUM2 (1 _uiBPer ]
"1425
[; ;MainBat.c: 1425:               TRANS1(';');
[e ( _TRANS1 (1 -> -> 59 `ui `uc ]
"1426
[; ;MainBat.c: 1426:               send_string_u1("BT:");
[e ( _send_string_u1 (1 :s 14C ]
"1427
[; ;MainBat.c: 1427:               TRANSNUM2(uiBTemp);
[e ( _TRANSNUM2 (1 _uiBTemp ]
"1428
[; ;MainBat.c: 1428:               TRANS1('!');
[e ( _TRANS1 (1 -> -> 33 `ui `uc ]
"1429
[; ;MainBat.c: 1429:            }
}
[e :U 1738 ]
"1430
[; ;MainBat.c: 1430:         }
}
[e :U 1737 ]
"1432
[; ;MainBat.c: 1432:         if((cPrevmode != cMode) && (cModelSelectfg == 0))
[e $ ! && != -> _cPrevmode `i -> _cMode `i == -> _cModelSelectfg `i -> 0 `i 1739  ]
"1433
[; ;MainBat.c: 1433:         {
{
"1434
[; ;MainBat.c: 1434:             if(cMode == 'M')
[e $ ! == -> _cMode `ui -> 77 `ui 1740  ]
"1435
[; ;MainBat.c: 1435:             {
{
"1436
[; ;MainBat.c: 1436:                 TypeDP.TypeD.digitdp7 = 0;
[e = . . _TypeDP 0 6 -> -> 0 `i `uc ]
"1437
[; ;MainBat.c: 1437:                 TypeDP.TypeD.digitdp6 = 0;
[e = . . _TypeDP 0 5 -> -> 0 `i `uc ]
"1438
[; ;MainBat.c: 1438:                 iDispcurr[0] = '[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1439
[; ;MainBat.c: 1439:                 iDispcurr[1] = 'M';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 77 `ui `uc ]
"1440
[; ;MainBat.c: 1440:                 iDispcurr[2] = 'M';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 77 `ui `uc ]
"1441
[; ;MainBat.c: 1441:                 iDispcurr[3] = 'A';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 65 `ui `uc ]
"1442
[; ;MainBat.c: 1442:                 iDispvolt[0] = '[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1443
[; ;MainBat.c: 1443:                 iDispvolt[1] = '[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1444
[; ;MainBat.c: 1444:                 iDispvolt[2] = '[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1445
[; ;MainBat.c: 1445:                 iDispvolt[3] = '[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1446
[; ;MainBat.c: 1446:                 Delay(5, 's');
[e ( _Delay (2 , -> -> 5 `i `ui -> -> 115 `ui `uc ]
"1447
[; ;MainBat.c: 1447:                 TypeDP.TypeD.digitdp7 = 1;
[e = . . _TypeDP 0 6 -> -> 1 `i `uc ]
"1448
[; ;MainBat.c: 1448:             }
}
[e $U 1741  ]
"1449
[; ;MainBat.c: 1449:             else if(cMode == 'T')
[e :U 1740 ]
[e $ ! == -> _cMode `ui -> 84 `ui 1742  ]
"1450
[; ;MainBat.c: 1450:             {
{
"1451
[; ;MainBat.c: 1451:                 TypeDP.TypeD.digitdp7 = 0;
[e = . . _TypeDP 0 6 -> -> 0 `i `uc ]
"1452
[; ;MainBat.c: 1452:                 TypeDP.TypeD.digitdp6 = 0;
[e = . . _TypeDP 0 5 -> -> 0 `i `uc ]
"1453
[; ;MainBat.c: 1453:                 iDispcurr[0] = '[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1454
[; ;MainBat.c: 1454:                 iDispcurr[1] = 'T';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 84 `ui `uc ]
"1455
[; ;MainBat.c: 1455:                 iDispcurr[2] = 'I';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 73 `ui `uc ]
"1456
[; ;MainBat.c: 1456:                 iDispcurr[3] = 'G';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 71 `ui `uc ]
"1457
[; ;MainBat.c: 1457:                 iDispvolt[0] = '[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1458
[; ;MainBat.c: 1458:                 iDispvolt[1] = '[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1459
[; ;MainBat.c: 1459:                 iDispvolt[2] = '[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1460
[; ;MainBat.c: 1460:                 iDispvolt[3] = '[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1461
[; ;MainBat.c: 1461:                 Delay(5, 's');
[e ( _Delay (2 , -> -> 5 `i `ui -> -> 115 `ui `uc ]
"1462
[; ;MainBat.c: 1462:                 TypeDP.TypeD.digitdp7 = 1;
[e = . . _TypeDP 0 6 -> -> 1 `i `uc ]
"1463
[; ;MainBat.c: 1463:             }
}
[e :U 1742 ]
[e :U 1741 ]
"1464
[; ;MainBat.c: 1464:             cPrevmode = cMode;
[e = _cPrevmode _cMode ]
"1465
[; ;MainBat.c: 1465:             Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1466
[; ;MainBat.c: 1466:         }
}
[e :U 1739 ]
"1468
[; ;MainBat.c: 1468:         if((cRemoteEnDCurrUpdatefg == 1)||(cEnDCurrUpdatefg == 1))
[e $ ! || == -> _cRemoteEnDCurrUpdatefg `i -> 1 `i == -> _cEnDCurrUpdatefg `i -> 1 `i 1743  ]
"1470
[; ;MainBat.c: 1470:         {
{
"1471
[; ;MainBat.c: 1471:             if(iHotfg == 1)
[e $ ! == _iHotfg -> -> 1 `i `ui 1744  ]
"1472
[; ;MainBat.c: 1472:             {
{
"1473
[; ;MainBat.c: 1473:                 if(cModel_Select == 2)
[e $ ! == -> _cModel_Select `i -> 2 `i 1745  ]
"1474
[; ;MainBat.c: 1474:                 {
{
"1475
[; ;MainBat.c: 1475:                     if(setcurrent <= 200)
[e $ ! <= _setcurrent -> -> 200 `i `ui 1746  ]
"1476
[; ;MainBat.c: 1476:                     {
{
"1477
[; ;MainBat.c: 1477:                         iHotstartCurrent = setcurrent+((setcurrent*iHotstart)/100);
[e = _iHotstartCurrent + _setcurrent / * _setcurrent _iHotstart -> -> 100 `i `ui ]
"1478
[; ;MainBat.c: 1478:                         if(iHotstartCurrent >=270)
[e $ ! >= _iHotstartCurrent -> -> 270 `i `ui 1747  ]
"1479
[; ;MainBat.c: 1479:                         {
{
"1480
[; ;MainBat.c: 1480:                             iHotstartCurrent = 270;
[e = _iHotstartCurrent -> -> 270 `i `ui ]
"1481
[; ;MainBat.c: 1481:                         }
}
[e :U 1747 ]
"1482
[; ;MainBat.c: 1482:                         daccount=MMACCLookup(iHotstartCurrent);
[e = _daccount ( _MMACCLookup (1 _iHotstartCurrent ]
"1483
[; ;MainBat.c: 1483:                     }
}
[e $U 1748  ]
"1484
[; ;MainBat.c: 1484:                     else
[e :U 1746 ]
"1485
[; ;MainBat.c: 1485:                     {
{
"1486
[; ;MainBat.c: 1486:                         daccount = MMACCLookup(setcurrent);
[e = _daccount ( _MMACCLookup (1 _setcurrent ]
"1487
[; ;MainBat.c: 1487:                     }
}
[e :U 1748 ]
"1488
[; ;MainBat.c: 1488:                 }
}
[e :U 1745 ]
"1489
[; ;MainBat.c: 1489:                 if(cModel_Select == 3)
[e $ ! == -> _cModel_Select `i -> 3 `i 1749  ]
"1490
[; ;MainBat.c: 1490:                 {
{
"1491
[; ;MainBat.c: 1491:                     if((setcurrent <= 200) || ((setcurrent >= 300) && (setcurrent <= 450)))
[e $ ! || <= _setcurrent -> -> 200 `i `ui && >= _setcurrent -> -> 300 `i `ui <= _setcurrent -> -> 450 `i `ui 1750  ]
"1492
[; ;MainBat.c: 1492:                     {
{
"1493
[; ;MainBat.c: 1493:                         iHotstartCurrent = setcurrent+((setcurrent*iHotstart)/100);
[e = _iHotstartCurrent + _setcurrent / * _setcurrent _iHotstart -> -> 100 `i `ui ]
"1494
[; ;MainBat.c: 1494:                         if(iHotstartCurrent >=530)
[e $ ! >= _iHotstartCurrent -> -> 530 `i `ui 1751  ]
"1495
[; ;MainBat.c: 1495:                         {
{
"1496
[; ;MainBat.c: 1496:                             iHotstartCurrent = 530;
[e = _iHotstartCurrent -> -> 530 `i `ui ]
"1497
[; ;MainBat.c: 1497:                         }
}
[e :U 1751 ]
"1498
[; ;MainBat.c: 1498:                         daccount=MMACCLookup(iHotstartCurrent);
[e = _daccount ( _MMACCLookup (1 _iHotstartCurrent ]
"1499
[; ;MainBat.c: 1499:                     }
}
[e $U 1752  ]
"1500
[; ;MainBat.c: 1500:                     else
[e :U 1750 ]
"1501
[; ;MainBat.c: 1501:                     {
{
"1502
[; ;MainBat.c: 1502:                         daccount = MMACCLookup(setcurrent);
[e = _daccount ( _MMACCLookup (1 _setcurrent ]
"1503
[; ;MainBat.c: 1503:                     }
}
[e :U 1752 ]
"1504
[; ;MainBat.c: 1504:                 }
}
[e :U 1749 ]
"1505
[; ;MainBat.c: 1505:             }
}
[e $U 1753  ]
"1506
[; ;MainBat.c: 1506:             else if((iHotfg == 0) && (antistickfg == 0))
[e :U 1744 ]
[e $ ! && == _iHotfg -> -> 0 `i `ui == -> _antistickfg `i -> 0 `i 1754  ]
"1507
[; ;MainBat.c: 1507:             {
{
"1508
[; ;MainBat.c: 1508:                 daccount = MMACCLookup(setcurrent);
[e = _daccount ( _MMACCLookup (1 _setcurrent ]
"1509
[; ;MainBat.c: 1509:             }
}
[e :U 1754 ]
[e :U 1753 ]
"1510
[; ;MainBat.c: 1510:             dacoutfg = 1;
[e = _dacoutfg -> -> 1 `i `uc ]
"1511
[; ;MainBat.c: 1511:             cEnDCurrUpdatefg = 0;
[e = _cEnDCurrUpdatefg -> -> 0 `i `uc ]
"1512
[; ;MainBat.c: 1512:             cRemoteEnDCurrUpdatefg = 0;
[e = _cRemoteEnDCurrUpdatefg -> -> 0 `i `uc ]
"1513
[; ;MainBat.c: 1513:         }
}
[e :U 1743 ]
"1515
[; ;MainBat.c: 1515:         if(dacoutfg==1)
[e $ ! == -> _dacoutfg `i -> 1 `i 1755  ]
"1516
[; ;MainBat.c: 1516:         {
{
"1517
[; ;MainBat.c: 1517:             I2C_Write(daccount);
[e ( _I2C_Write (1 _daccount ]
"1518
[; ;MainBat.c: 1518:             dacoutfg=0;
[e = _dacoutfg -> -> 0 `i `uc ]
"1519
[; ;MainBat.c: 1519:         }
}
[e :U 1755 ]
"1521
[; ;MainBat.c: 1521:         if(memoryfg == 1)
[e $ ! == -> _memoryfg `i -> 1 `i 1756  ]
"1522
[; ;MainBat.c: 1522:         {
{
"1523
[; ;MainBat.c: 1523:             memoryfg = 0;
[e = _memoryfg -> -> 0 `i `uc ]
"1524
[; ;MainBat.c: 1524:         }
}
[e :U 1756 ]
"1526
[; ;MainBat.c: 1526:         if(c10Msecfg == 1)
[e $ ! == -> _c10Msecfg `i -> 1 `i 1757  ]
"1527
[; ;MainBat.c: 1527:         {
{
"1528
[; ;MainBat.c: 1528:             if((iActualvolt <= 100.0) && (weldonfg == 1) && (cMode=='M'))
[e $ ! && && <= -> _iActualvolt `d .100.0 == -> _weldonfg `i -> 1 `i == -> _cMode `ui -> 77 `ui 1758  ]
"1529
[; ;MainBat.c: 1529:             {
{
"1530
[; ;MainBat.c: 1530:                 cnt200ms++;
[e ++ _cnt200ms -> -> 1 `i `ui ]
"1531
[; ;MainBat.c: 1531:                 if(cnt200ms >= 300)
[e $ ! >= _cnt200ms -> -> 300 `i `ui 1759  ]
"1532
[; ;MainBat.c: 1532:                 {
{
"1533
[; ;MainBat.c: 1533:                     daccount = MMACCLookup(10);
[e = _daccount ( _MMACCLookup (1 -> -> 10 `i `ui ]
"1534
[; ;MainBat.c: 1534:                     dacoutfg = 1;
[e = _dacoutfg -> -> 1 `i `uc ]
"1535
[; ;MainBat.c: 1535:                     antistickfg = 1;
[e = _antistickfg -> -> 1 `i `uc ]
"1536
[; ;MainBat.c: 1536:                     cnt200ms = 0;
[e = _cnt200ms -> -> 0 `i `ui ]
"1537
[; ;MainBat.c: 1537:                 }
}
[e :U 1759 ]
"1538
[; ;MainBat.c: 1538:             }
}
[e $U 1760  ]
"1539
[; ;MainBat.c: 1539:             else
[e :U 1758 ]
"1540
[; ;MainBat.c: 1540:             {
{
"1541
[; ;MainBat.c: 1541:                 cnt200ms = 0;
[e = _cnt200ms -> -> 0 `i `ui ]
"1542
[; ;MainBat.c: 1542:             }
}
[e :U 1760 ]
"1543
[; ;MainBat.c: 1543:             if((iActualvolt > 100.0) && (antistickfg == 1))
[e $ ! && > -> _iActualvolt `d .100.0 == -> _antistickfg `i -> 1 `i 1761  ]
"1544
[; ;MainBat.c: 1544:             {
{
"1545
[; ;MainBat.c: 1545:                 cnt1sec++;
[e ++ _cnt1sec -> -> 1 `i `ui ]
"1546
[; ;MainBat.c: 1546:                 if(cnt1sec >= 150)
[e $ ! >= _cnt1sec -> -> 150 `i `ui 1762  ]
"1547
[; ;MainBat.c: 1547:                 {
{
"1548
[; ;MainBat.c: 1548:                     cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"1549
[; ;MainBat.c: 1549:                     antistickfg = 0;
[e = _antistickfg -> -> 0 `i `uc ]
"1550
[; ;MainBat.c: 1550:                     cnt1sec = 0;
[e = _cnt1sec -> -> 0 `i `ui ]
"1551
[; ;MainBat.c: 1551:                 }
}
[e :U 1762 ]
"1552
[; ;MainBat.c: 1552:             }
}
[e :U 1761 ]
"1554
[; ;MainBat.c: 1554:             if((iHotfg == 1) && (weldonfg == 1))
[e $ ! && == _iHotfg -> -> 1 `i `ui == -> _weldonfg `i -> 1 `i 1763  ]
"1555
[; ;MainBat.c: 1555:             {
{
"1556
[; ;MainBat.c: 1556:                 hotstartcount++;
[e ++ _hotstartcount -> -> 1 `i `ui ]
"1557
[; ;MainBat.c: 1557:                 if(hotstartcount >= 150)
[e $ ! >= _hotstartcount -> -> 150 `i `ui 1764  ]
"1558
[; ;MainBat.c: 1558:                 {
{
"1559
[; ;MainBat.c: 1559:                     cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"1560
[; ;MainBat.c: 1560:                     hotstartcount = 0;
[e = _hotstartcount -> -> 0 `i `ui ]
"1561
[; ;MainBat.c: 1561:                     iHotfg = 0;
[e = _iHotfg -> -> 0 `i `ui ]
"1562
[; ;MainBat.c: 1562:                 }
}
[e :U 1764 ]
"1563
[; ;MainBat.c: 1563:             }
}
[e :U 1763 ]
"1565
[; ;MainBat.c: 1565:             if((iActualcurr >= 9) && (weldonfg == 0) && ivrdcalibrationfg==0)
[e $ ! && && >= _iActualcurr -> -> 9 `i `ui == -> _weldonfg `i -> 0 `i == _ivrdcalibrationfg -> -> 0 `i `ui 1765  ]
"1566
[; ;MainBat.c: 1566:             {
{
"1567
[; ;MainBat.c: 1567:                 Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1568
[; ;MainBat.c: 1568:                 weldonfg = 1;
[e = _weldonfg -> -> 1 `i `uc ]
"1569
[; ;MainBat.c: 1569:                 ivrdcnt = 0;
[e = _ivrdcnt -> -> 0 `i `ui ]
"1570
[; ;MainBat.c: 1570:                 cVRD_fg = 0;
[e = _cVRD_fg -> -> 0 `i `uc ]
"1571
[; ;MainBat.c: 1571:             }
}
[e $U 1766  ]
"1572
[; ;MainBat.c: 1572:             else if((iActualcurr < 9) && (weldonfg == 1))
[e :U 1765 ]
[e $ ! && < _iActualcurr -> -> 9 `i `ui == -> _weldonfg `i -> 1 `i 1767  ]
"1573
[; ;MainBat.c: 1573:             {
{
"1574
[; ;MainBat.c: 1574:                 weldoncnt++;
[e ++ _weldoncnt -> -> 1 `i `ui ]
"1575
[; ;MainBat.c: 1575:                 if(weldoncnt >= 1)
[e $ ! >= _weldoncnt -> -> 1 `i `ui 1768  ]
"1576
[; ;MainBat.c: 1576:                 {
{
"1577
[; ;MainBat.c: 1577:                     if((weldonfg == 1)&&(memoryfg == 0))
[e $ ! && == -> _weldonfg `i -> 1 `i == -> _memoryfg `i -> 0 `i 1769  ]
"1578
[; ;MainBat.c: 1578:                     {
{
"1579
[; ;MainBat.c: 1579:                         memoryfg = 1;
[e = _memoryfg -> -> 1 `i `uc ]
"1580
[; ;MainBat.c: 1580:                     }
}
[e :U 1769 ]
"1581
[; ;MainBat.c: 1581:                     weldoncnt = 0;
[e = _weldoncnt -> -> 0 `i `ui ]
"1582
[; ;MainBat.c: 1582:                     weldonfg = 0;
[e = _weldonfg -> -> 0 `i `uc ]
"1583
[; ;MainBat.c: 1583:                     cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"1584
[; ;MainBat.c: 1584:                     Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1586
[; ;MainBat.c: 1586:                     if(cModel_Select == 2)
[e $ ! == -> _cModel_Select `i -> 2 `i 1770  ]
"1587
[; ;MainBat.c: 1587:                     {
{
"1588
[; ;MainBat.c: 1588:                         if((setcurrent <= 200) && (cMode=='M'))
[e $ ! && <= _setcurrent -> -> 200 `i `ui == -> _cMode `ui -> 77 `ui 1771  ]
"1589
[; ;MainBat.c: 1589:                         {
{
"1590
[; ;MainBat.c: 1590:                             iHotfg = 1;
[e = _iHotfg -> -> 1 `i `ui ]
"1591
[; ;MainBat.c: 1591:                         }
}
[e :U 1771 ]
"1592
[; ;MainBat.c: 1592:                     }
}
[e :U 1770 ]
"1593
[; ;MainBat.c: 1593:                     if(cModel_Select == 3)
[e $ ! == -> _cModel_Select `i -> 3 `i 1772  ]
"1594
[; ;MainBat.c: 1594:                     {
{
"1595
[; ;MainBat.c: 1595:                         if((setcurrent <= 450) && (cMode=='M'))
[e $ ! && <= _setcurrent -> -> 450 `i `ui == -> _cMode `ui -> 77 `ui 1773  ]
"1596
[; ;MainBat.c: 1596:                         {
{
"1597
[; ;MainBat.c: 1597:                             iHotfg = 1;
[e = _iHotfg -> -> 1 `i `ui ]
"1598
[; ;MainBat.c: 1598:                         }
}
[e :U 1773 ]
"1599
[; ;MainBat.c: 1599:                     }
}
[e :U 1772 ]
"1600
[; ;MainBat.c: 1600:                     hotstartcount = 0;
[e = _hotstartcount -> -> 0 `i `ui ]
"1601
[; ;MainBat.c: 1601:                     cArcForceOnfg = 0;
[e = _cArcForceOnfg -> -> 0 `i `uc ]
"1602
[; ;MainBat.c: 1602:                     iArcForceTimeCnt = 0;
[e = _iArcForceTimeCnt -> -> 0 `i `ui ]
"1603
[; ;MainBat.c: 1603:                     cMeasureARCOnTimefg = 1;
[e = _cMeasureARCOnTimefg -> -> 1 `i `uc ]
"1604
[; ;MainBat.c: 1604:                 }
}
[e :U 1768 ]
"1605
[; ;MainBat.c: 1605:             }
}
[e :U 1767 ]
[e :U 1766 ]
"1607
[; ;MainBat.c: 1607:             Read_RockerSwitch();
[e ( _Read_RockerSwitch ..  ]
"1608
[; ;MainBat.c: 1608:             if(cMode == 'M')
[e $ ! == -> _cMode `ui -> 77 `ui 1774  ]
"1609
[; ;MainBat.c: 1609:             {
{
"1610
[; ;MainBat.c: 1610:                 Read_VRD_Switch();
[e ( _Read_VRD_Switch ..  ]
"1611
[; ;MainBat.c: 1611:             }
}
[e :U 1774 ]
"1612
[; ;MainBat.c: 1612:         if (PORTCbits.RC1 ==1)
[e $ ! == -> . . _PORTCbits 0 1 `i -> 1 `i 1775  ]
"1613
[; ;MainBat.c: 1613:         {
{
"1614
[; ;MainBat.c: 1614:            ucB_M_SEL=1;
[e = _ucB_M_SEL -> -> 1 `i `uc ]
"1616
[; ;MainBat.c: 1616:              if(TH_ERR_fg == 1)
[e $ ! == -> _TH_ERR_fg `i -> 1 `i 1776  ]
"1617
[; ;MainBat.c: 1617:                 {
{
"1618
[; ;MainBat.c: 1618:                     if((cFlashCntr == 0) && (cFlashfg == 1))
[e $ ! && == _cFlashCntr -> -> 0 `i `ui == -> _cFlashfg `i -> 1 `i 1777  ]
"1619
[; ;MainBat.c: 1619:                     {
{
"1620
[; ;MainBat.c: 1620:                         TypeDP.TypeD.digitdp7 = 0;
[e = . . _TypeDP 0 6 -> -> 0 `i `uc ]
"1621
[; ;MainBat.c: 1621:                         iDispcurr[0]='[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1622
[; ;MainBat.c: 1622:                         iDispcurr[1]='E';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 69 `ui `uc ]
"1623
[; ;MainBat.c: 1623:                         iDispcurr[2]='R';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1624
[; ;MainBat.c: 1624:                         iDispcurr[3]='R';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1625
[; ;MainBat.c: 1625:                         iDispvolt[0]='[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1626
[; ;MainBat.c: 1626:                         iDispvolt[1]='[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1627
[; ;MainBat.c: 1627:                         iDispvolt[2]='[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1628
[; ;MainBat.c: 1628:                         iDispvolt[3]='[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1630
[; ;MainBat.c: 1630:                         Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1631
[; ;MainBat.c: 1631:                         cFlashfg = 0;
[e = _cFlashfg -> -> 0 `i `uc ]
"1632
[; ;MainBat.c: 1632:                         cFlashCntr = 1000;
[e = _cFlashCntr -> -> 1000 `i `ui ]
"1633
[; ;MainBat.c: 1633:                     }
}
[e $U 1778  ]
"1634
[; ;MainBat.c: 1634:                     else if((cFlashCntr == 0) && (cFlashfg == 0))
[e :U 1777 ]
[e $ ! && == _cFlashCntr -> -> 0 `i `ui == -> _cFlashfg `i -> 0 `i 1779  ]
"1635
[; ;MainBat.c: 1635:                     {
{
"1637
[; ;MainBat.c: 1637:                         iDispcurr[0]='[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1638
[; ;MainBat.c: 1638:                         iDispcurr[1]='0';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1639
[; ;MainBat.c: 1639:                         iDispcurr[2]='0';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1640
[; ;MainBat.c: 1640:                         iDispcurr[3]='3';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 51 `ui `uc ]
"1641
[; ;MainBat.c: 1641:                         iDispvolt[0]='[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1642
[; ;MainBat.c: 1642:                         iDispvolt[1]='[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1643
[; ;MainBat.c: 1643:                         iDispvolt[2]='[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1644
[; ;MainBat.c: 1644:                         iDispvolt[3]='[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1646
[; ;MainBat.c: 1646:                         Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1647
[; ;MainBat.c: 1647:                         cFlashfg = 1;
[e = _cFlashfg -> -> 1 `i `uc ]
"1648
[; ;MainBat.c: 1648:                         cFlashCntr = 1000;
[e = _cFlashCntr -> -> 1000 `i `ui ]
"1649
[; ;MainBat.c: 1649:                     }
}
[e :U 1779 ]
[e :U 1778 ]
"1650
[; ;MainBat.c: 1650:                 }
}
[e :U 1776 ]
"1651
[; ;MainBat.c: 1651:         }
}
[e $U 1780  ]
"1653
[; ;MainBat.c: 1653:         else
[e :U 1775 ]
"1654
[; ;MainBat.c: 1654:         {
{
"1655
[; ;MainBat.c: 1655:             ucB_M_SEL=0;
[e = _ucB_M_SEL -> -> 0 `i `uc ]
"1656
[; ;MainBat.c: 1656:            if(((UV_ERR_fg == 1) || (OV_ERR_fg == 1) || (TH_ERR_fg == 1) || (NO_CN9_CONNECTOR_ERR_fg == 1)) && (cModelSelectfg == 0) && ((cDispVRDcountfg == 0) || (cVRDCountSettingfg == 0)))
[e $ ! && && || || || == -> _UV_ERR_fg `i -> 1 `i == -> _OV_ERR_fg `i -> 1 `i == -> _TH_ERR_fg `i -> 1 `i == -> _NO_CN9_CONNECTOR_ERR_fg `i -> 1 `i == -> _cModelSelectfg `i -> 0 `i || == -> _cDispVRDcountfg `i -> 0 `i == -> _cVRDCountSettingfg `i -> 0 `i 1781  ]
"1657
[; ;MainBat.c: 1657:             {
{
"1658
[; ;MainBat.c: 1658:                 TypeDP.TypeD.digitdp7 = 0;
[e = . . _TypeDP 0 6 -> -> 0 `i `uc ]
"1659
[; ;MainBat.c: 1659:                 if(UV_ERR_fg == 1)
[e $ ! == -> _UV_ERR_fg `i -> 1 `i 1782  ]
"1660
[; ;MainBat.c: 1660:                 {
{
"1661
[; ;MainBat.c: 1661:                     if((cFlashCntr == 0) && (cFlashfg == 1))
[e $ ! && == _cFlashCntr -> -> 0 `i `ui == -> _cFlashfg `i -> 1 `i 1783  ]
"1662
[; ;MainBat.c: 1662:                     {
{
"1663
[; ;MainBat.c: 1663:                         TypeDP.TypeD.digitdp7 = 0;
[e = . . _TypeDP 0 6 -> -> 0 `i `uc ]
"1664
[; ;MainBat.c: 1664:                         iDispcurr[0]='[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1665
[; ;MainBat.c: 1665:                         iDispcurr[1]='E';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 69 `ui `uc ]
"1666
[; ;MainBat.c: 1666:                         iDispcurr[2]='R';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1667
[; ;MainBat.c: 1667:                         iDispcurr[3]='R';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1668
[; ;MainBat.c: 1668:                         iDispvolt[0]='[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1669
[; ;MainBat.c: 1669:                         iDispvolt[1]='[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1670
[; ;MainBat.c: 1670:                         iDispvolt[2]='[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1671
[; ;MainBat.c: 1671:                         iDispvolt[3]='[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1673
[; ;MainBat.c: 1673:                         Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1674
[; ;MainBat.c: 1674:                         cFlashfg = 0;
[e = _cFlashfg -> -> 0 `i `uc ]
"1675
[; ;MainBat.c: 1675:                         cFlashCntr = 1000;
[e = _cFlashCntr -> -> 1000 `i `ui ]
"1676
[; ;MainBat.c: 1676:                     }
}
[e $U 1784  ]
"1677
[; ;MainBat.c: 1677:                     else if((cFlashCntr == 0) && (cFlashfg == 0))
[e :U 1783 ]
[e $ ! && == _cFlashCntr -> -> 0 `i `ui == -> _cFlashfg `i -> 0 `i 1785  ]
"1678
[; ;MainBat.c: 1678:                     {
{
"1680
[; ;MainBat.c: 1680:                         iDispcurr[0]='[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1681
[; ;MainBat.c: 1681:                         iDispcurr[1]='0';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1682
[; ;MainBat.c: 1682:                         iDispcurr[2]='0';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1683
[; ;MainBat.c: 1683:                         iDispcurr[3]='1';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 49 `ui `uc ]
"1684
[; ;MainBat.c: 1684:                         iDispvolt[0]='[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1685
[; ;MainBat.c: 1685:                         iDispvolt[1]='[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1686
[; ;MainBat.c: 1686:                         iDispvolt[2]='[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1687
[; ;MainBat.c: 1687:                         iDispvolt[3]='[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1689
[; ;MainBat.c: 1689:                         Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1690
[; ;MainBat.c: 1690:                         cFlashfg = 1;
[e = _cFlashfg -> -> 1 `i `uc ]
"1691
[; ;MainBat.c: 1691:                         cFlashCntr = 1000;
[e = _cFlashCntr -> -> 1000 `i `ui ]
"1692
[; ;MainBat.c: 1692:                     }
}
[e :U 1785 ]
[e :U 1784 ]
"1693
[; ;MainBat.c: 1693:                 }
}
[e :U 1782 ]
"1694
[; ;MainBat.c: 1694:                 if(OV_ERR_fg == 1)
[e $ ! == -> _OV_ERR_fg `i -> 1 `i 1786  ]
"1695
[; ;MainBat.c: 1695:                 {
{
"1696
[; ;MainBat.c: 1696:                     if((cFlashCntr == 0) && (cFlashfg == 1))
[e $ ! && == _cFlashCntr -> -> 0 `i `ui == -> _cFlashfg `i -> 1 `i 1787  ]
"1697
[; ;MainBat.c: 1697:                     {
{
"1698
[; ;MainBat.c: 1698:                         TypeDP.TypeD.digitdp7 = 0;
[e = . . _TypeDP 0 6 -> -> 0 `i `uc ]
"1699
[; ;MainBat.c: 1699:                         iDispcurr[0]='[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1700
[; ;MainBat.c: 1700:                         iDispcurr[1]='E';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 69 `ui `uc ]
"1701
[; ;MainBat.c: 1701:                         iDispcurr[2]='R';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1702
[; ;MainBat.c: 1702:                         iDispcurr[3]='R';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1703
[; ;MainBat.c: 1703:                         iDispvolt[0]='[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1704
[; ;MainBat.c: 1704:                         iDispvolt[1]='[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1705
[; ;MainBat.c: 1705:                         iDispvolt[2]='[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1706
[; ;MainBat.c: 1706:                         iDispvolt[3]='[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1708
[; ;MainBat.c: 1708:                         Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1709
[; ;MainBat.c: 1709:                         cFlashfg = 0;
[e = _cFlashfg -> -> 0 `i `uc ]
"1710
[; ;MainBat.c: 1710:                         cFlashCntr = 1000;
[e = _cFlashCntr -> -> 1000 `i `ui ]
"1711
[; ;MainBat.c: 1711:                     }
}
[e $U 1788  ]
"1712
[; ;MainBat.c: 1712:                     else if((cFlashCntr == 0) && (cFlashfg == 0))
[e :U 1787 ]
[e $ ! && == _cFlashCntr -> -> 0 `i `ui == -> _cFlashfg `i -> 0 `i 1789  ]
"1713
[; ;MainBat.c: 1713:                     {
{
"1715
[; ;MainBat.c: 1715:                         iDispcurr[0]='[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1716
[; ;MainBat.c: 1716:                         iDispcurr[1]='0';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1717
[; ;MainBat.c: 1717:                         iDispcurr[2]='0';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1718
[; ;MainBat.c: 1718:                         iDispcurr[3]='2';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 50 `ui `uc ]
"1719
[; ;MainBat.c: 1719:                         iDispvolt[0]='[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1720
[; ;MainBat.c: 1720:                         iDispvolt[1]='[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1721
[; ;MainBat.c: 1721:                         iDispvolt[2]='[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1722
[; ;MainBat.c: 1722:                         iDispvolt[3]='[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1724
[; ;MainBat.c: 1724:                         Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1725
[; ;MainBat.c: 1725:                         cFlashfg = 1;
[e = _cFlashfg -> -> 1 `i `uc ]
"1726
[; ;MainBat.c: 1726:                         cFlashCntr = 1000;
[e = _cFlashCntr -> -> 1000 `i `ui ]
"1727
[; ;MainBat.c: 1727:                     }
}
[e :U 1789 ]
[e :U 1788 ]
"1728
[; ;MainBat.c: 1728:                 }
}
[e :U 1786 ]
"1729
[; ;MainBat.c: 1729:                 if(TH_ERR_fg == 1)
[e $ ! == -> _TH_ERR_fg `i -> 1 `i 1790  ]
"1730
[; ;MainBat.c: 1730:                 {
{
"1731
[; ;MainBat.c: 1731:                     if((cFlashCntr == 0) && (cFlashfg == 1))
[e $ ! && == _cFlashCntr -> -> 0 `i `ui == -> _cFlashfg `i -> 1 `i 1791  ]
"1732
[; ;MainBat.c: 1732:                     {
{
"1733
[; ;MainBat.c: 1733:                         TypeDP.TypeD.digitdp7 = 0;
[e = . . _TypeDP 0 6 -> -> 0 `i `uc ]
"1734
[; ;MainBat.c: 1734:                         iDispcurr[0]='[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1735
[; ;MainBat.c: 1735:                         iDispcurr[1]='E';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 69 `ui `uc ]
"1736
[; ;MainBat.c: 1736:                         iDispcurr[2]='R';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1737
[; ;MainBat.c: 1737:                         iDispcurr[3]='R';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1738
[; ;MainBat.c: 1738:                         iDispvolt[0]='[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1739
[; ;MainBat.c: 1739:                         iDispvolt[1]='[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1740
[; ;MainBat.c: 1740:                         iDispvolt[2]='[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1741
[; ;MainBat.c: 1741:                         iDispvolt[3]='[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1743
[; ;MainBat.c: 1743:                         Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1744
[; ;MainBat.c: 1744:                         cFlashfg = 0;
[e = _cFlashfg -> -> 0 `i `uc ]
"1745
[; ;MainBat.c: 1745:                         cFlashCntr = 1000;
[e = _cFlashCntr -> -> 1000 `i `ui ]
"1746
[; ;MainBat.c: 1746:                     }
}
[e $U 1792  ]
"1747
[; ;MainBat.c: 1747:                     else if((cFlashCntr == 0) && (cFlashfg == 0))
[e :U 1791 ]
[e $ ! && == _cFlashCntr -> -> 0 `i `ui == -> _cFlashfg `i -> 0 `i 1793  ]
"1748
[; ;MainBat.c: 1748:                     {
{
"1750
[; ;MainBat.c: 1750:                         iDispcurr[0]='[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1751
[; ;MainBat.c: 1751:                         iDispcurr[1]='0';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1752
[; ;MainBat.c: 1752:                         iDispcurr[2]='0';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1753
[; ;MainBat.c: 1753:                         iDispcurr[3]='3';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 51 `ui `uc ]
"1754
[; ;MainBat.c: 1754:                         iDispvolt[0]='[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1755
[; ;MainBat.c: 1755:                         iDispvolt[1]='[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1756
[; ;MainBat.c: 1756:                         iDispvolt[2]='[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1757
[; ;MainBat.c: 1757:                         iDispvolt[3]='[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1759
[; ;MainBat.c: 1759:                         Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1760
[; ;MainBat.c: 1760:                         cFlashfg = 1;
[e = _cFlashfg -> -> 1 `i `uc ]
"1761
[; ;MainBat.c: 1761:                         cFlashCntr = 1000;
[e = _cFlashCntr -> -> 1000 `i `ui ]
"1762
[; ;MainBat.c: 1762:                     }
}
[e :U 1793 ]
[e :U 1792 ]
"1763
[; ;MainBat.c: 1763:                 }
}
[e :U 1790 ]
"1764
[; ;MainBat.c: 1764:                 if(NO_CN9_CONNECTOR_ERR_fg == 1)
[e $ ! == -> _NO_CN9_CONNECTOR_ERR_fg `i -> 1 `i 1794  ]
"1765
[; ;MainBat.c: 1765:                 {
{
"1766
[; ;MainBat.c: 1766:                     if((cFlashCntr == 0) && (cFlashfg == 1))
[e $ ! && == _cFlashCntr -> -> 0 `i `ui == -> _cFlashfg `i -> 1 `i 1795  ]
"1767
[; ;MainBat.c: 1767:                     {
{
"1768
[; ;MainBat.c: 1768:                         TypeDP.TypeD.digitdp7 = 0;
[e = . . _TypeDP 0 6 -> -> 0 `i `uc ]
"1769
[; ;MainBat.c: 1769:                         iDispcurr[0]='[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1770
[; ;MainBat.c: 1770:                         iDispcurr[1]='E';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 69 `ui `uc ]
"1771
[; ;MainBat.c: 1771:                         iDispcurr[2]='R';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1772
[; ;MainBat.c: 1772:                         iDispcurr[3]='R';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1773
[; ;MainBat.c: 1773:                         iDispvolt[0]='[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1774
[; ;MainBat.c: 1774:                         iDispvolt[1]='[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1775
[; ;MainBat.c: 1775:                         iDispvolt[2]='[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1776
[; ;MainBat.c: 1776:                         iDispvolt[3]='[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1778
[; ;MainBat.c: 1778:                         Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1779
[; ;MainBat.c: 1779:                         cFlashfg = 0;
[e = _cFlashfg -> -> 0 `i `uc ]
"1780
[; ;MainBat.c: 1780:                         cFlashCntr = 1000;
[e = _cFlashCntr -> -> 1000 `i `ui ]
"1781
[; ;MainBat.c: 1781:                     }
}
[e $U 1796  ]
"1782
[; ;MainBat.c: 1782:                     else if((cFlashCntr == 0) && (cFlashfg == 0))
[e :U 1795 ]
[e $ ! && == _cFlashCntr -> -> 0 `i `ui == -> _cFlashfg `i -> 0 `i 1797  ]
"1783
[; ;MainBat.c: 1783:                     {
{
"1785
[; ;MainBat.c: 1785:                         iDispcurr[0]='[';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 91 `ui `uc ]
"1786
[; ;MainBat.c: 1786:                         iDispcurr[1]='0';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 48 `ui `uc ]
"1787
[; ;MainBat.c: 1787:                         iDispcurr[2]='1';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 49 `ui `uc ]
"1788
[; ;MainBat.c: 1788:                         iDispcurr[3]='1';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 49 `ui `uc ]
"1789
[; ;MainBat.c: 1789:                         iDispvolt[0]='[';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1790
[; ;MainBat.c: 1790:                         iDispvolt[1]='[';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1791
[; ;MainBat.c: 1791:                         iDispvolt[2]='[';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1792
[; ;MainBat.c: 1792:                         iDispvolt[3]='[';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 91 `ui `uc ]
"1794
[; ;MainBat.c: 1794:                         Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1795
[; ;MainBat.c: 1795:                         cFlashfg = 1;
[e = _cFlashfg -> -> 1 `i `uc ]
"1796
[; ;MainBat.c: 1796:                         cFlashCntr = 1000;
[e = _cFlashCntr -> -> 1000 `i `ui ]
"1797
[; ;MainBat.c: 1797:                     }
}
[e :U 1797 ]
[e :U 1796 ]
"1798
[; ;MainBat.c: 1798:                 }
}
[e :U 1794 ]
"1800
[; ;MainBat.c: 1800:                 Error_flag = 1;
[e = _Error_flag -> -> 1 `i `uc ]
"1801
[; ;MainBat.c: 1801:                 err_dispfg=1;
[e = _err_dispfg -> -> 1 `i `uc ]
"1802
[; ;MainBat.c: 1802:                 LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"1803
[; ;MainBat.c: 1803:                 daccount = 0;
[e = _daccount -> -> 0 `i `ui ]
"1804
[; ;MainBat.c: 1804:                 dacoutfg = 1;
[e = _dacoutfg -> -> 1 `i `uc ]
"1805
[; ;MainBat.c: 1805:             }
}
[e $U 1798  ]
"1806
[; ;MainBat.c: 1806:             else
[e :U 1781 ]
"1807
[; ;MainBat.c: 1807:             {
{
"1808
[; ;MainBat.c: 1808:                 Error_flag = 0;
[e = _Error_flag -> -> 0 `i `uc ]
"1809
[; ;MainBat.c: 1809:                 if(err_dispfg == 1)
[e $ ! == -> _err_dispfg `i -> 1 `i 1799  ]
"1810
[; ;MainBat.c: 1810:                 {
{
"1811
[; ;MainBat.c: 1811:                     err_dispfg = 0;
[e = _err_dispfg -> -> 0 `i `uc ]
"1812
[; ;MainBat.c: 1812:                     LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"1813
[; ;MainBat.c: 1813:                     if(cModel_Select == 2)
[e $ ! == -> _cModel_Select `i -> 2 `i 1800  ]
"1814
[; ;MainBat.c: 1814:                     {
{
"1815
[; ;MainBat.c: 1815:                         if((setcurrent <= 200) && (cMode=='M'))
[e $ ! && <= _setcurrent -> -> 200 `i `ui == -> _cMode `ui -> 77 `ui 1801  ]
"1816
[; ;MainBat.c: 1816:                         {
{
"1817
[; ;MainBat.c: 1817:                             iHotfg = 1;
[e = _iHotfg -> -> 1 `i `ui ]
"1818
[; ;MainBat.c: 1818:                         }
}
[e :U 1801 ]
"1819
[; ;MainBat.c: 1819:                     }
}
[e :U 1800 ]
"1820
[; ;MainBat.c: 1820:                     if(cModel_Select == 3)
[e $ ! == -> _cModel_Select `i -> 3 `i 1802  ]
"1821
[; ;MainBat.c: 1821:                     {
{
"1822
[; ;MainBat.c: 1822:                         if((setcurrent <= 450) && (cMode=='M'))
[e $ ! && <= _setcurrent -> -> 450 `i `ui == -> _cMode `ui -> 77 `ui 1803  ]
"1823
[; ;MainBat.c: 1823:                         {
{
"1824
[; ;MainBat.c: 1824:                             iHotfg = 1;
[e = _iHotfg -> -> 1 `i `ui ]
"1825
[; ;MainBat.c: 1825:                         }
}
[e :U 1803 ]
"1826
[; ;MainBat.c: 1826:                     }
}
[e :U 1802 ]
"1827
[; ;MainBat.c: 1827:                     cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"1829
[; ;MainBat.c: 1829:                     Display_updatefg = 1;
[e = _Display_updatefg -> -> 1 `i `uc ]
"1830
[; ;MainBat.c: 1830:                 }
}
[e :U 1799 ]
"1831
[; ;MainBat.c: 1831:             }
}
[e :U 1798 ]
"1832
[; ;MainBat.c: 1832:             c10Msecfg = 0;
[e = _c10Msecfg -> -> 0 `i `uc ]
"1833
[; ;MainBat.c: 1833:         }
}
[e :U 1780 ]
"1834
[; ;MainBat.c: 1834:     }
}
[e :U 1757 ]
"1835
[; ;MainBat.c: 1835:        if(ucB_M_SEL==0)
[e $ ! == -> _ucB_M_SEL `i -> 0 `i 1804  ]
"1836
[; ;MainBat.c: 1836:         {
{
"1837
[; ;MainBat.c: 1837:          LATAbits.LATA5=0;
[e = . . _LATAbits 0 5 -> -> 0 `i `uc ]
"1838
[; ;MainBat.c: 1838:         }
}
[e $U 1805  ]
"1839
[; ;MainBat.c: 1839:         else if((ucB_M_SEL==1)&&(uiBPer<=20))
[e :U 1804 ]
[e $ ! && == -> _ucB_M_SEL `i -> 1 `i <= _uiBPer -> -> 20 `i `ui 1806  ]
"1840
[; ;MainBat.c: 1840:         {
{
"1841
[; ;MainBat.c: 1841:             LATAbits.LATA5=1;
[e = . . _LATAbits 0 5 -> -> 1 `i `uc ]
"1842
[; ;MainBat.c: 1842:             Delay(1,'s');
[e ( _Delay (2 , -> -> 1 `i `ui -> -> 115 `ui `uc ]
"1843
[; ;MainBat.c: 1843:             LATAbits.LATA5=0;
[e = . . _LATAbits 0 5 -> -> 0 `i `uc ]
"1844
[; ;MainBat.c: 1844:            Delay(1,'s');
[e ( _Delay (2 , -> -> 1 `i `ui -> -> 115 `ui `uc ]
"1845
[; ;MainBat.c: 1845:         }
}
[e $U 1807  ]
"1846
[; ;MainBat.c: 1846:         else
[e :U 1806 ]
"1847
[; ;MainBat.c: 1847:         {
{
"1848
[; ;MainBat.c: 1848:            LATAbits.LATA5 = 1;
[e = . . _LATAbits 0 5 -> -> 1 `i `uc ]
"1849
[; ;MainBat.c: 1849:         }
}
[e :U 1807 ]
[e :U 1805 ]
"1850
[; ;MainBat.c: 1850:         if(cMeasureARCOnTimefg == 1)
[e $ ! == -> _cMeasureARCOnTimefg `i -> 1 `i 1808  ]
"1851
[; ;MainBat.c: 1851:         {
{
"1852
[; ;MainBat.c: 1852:             if(iPrevsec != sec)
[e $ ! != _iPrevsec _sec 1809  ]
"1853
[; ;MainBat.c: 1853:             {
{
"1854
[; ;MainBat.c: 1854:                 Write_EEPROM(sec,30);
[e ( _Write_EEPROM (2 , _sec -> -> 30 `i `ui ]
"1855
[; ;MainBat.c: 1855:                 iPrevsec = sec;
[e = _iPrevsec _sec ]
"1856
[; ;MainBat.c: 1856:             }
}
[e :U 1809 ]
"1857
[; ;MainBat.c: 1857:             if(iPrevmin != min)
[e $ ! != _iPrevmin _min 1810  ]
"1858
[; ;MainBat.c: 1858:             {
{
"1860
[; ;MainBat.c: 1860:                 Write_EEPROM(min,33);
[e ( _Write_EEPROM (2 , _min -> -> 33 `i `ui ]
"1861
[; ;MainBat.c: 1861:                 iPrevmin = min;
[e = _iPrevmin _min ]
"1862
[; ;MainBat.c: 1862:             }
}
[e :U 1810 ]
"1863
[; ;MainBat.c: 1863:             if(iPrevhr != hr)
[e $ ! != _iPrevhr _hr 1811  ]
"1864
[; ;MainBat.c: 1864:             {
{
"1865
[; ;MainBat.c: 1865:                 Write_EEPROM(hr,36);
[e ( _Write_EEPROM (2 , _hr -> -> 36 `i `ui ]
"1866
[; ;MainBat.c: 1866:                 iPrevhr = hr;
[e = _iPrevhr _hr ]
"1867
[; ;MainBat.c: 1867:             }
}
[e :U 1811 ]
"1868
[; ;MainBat.c: 1868:             cMeasureARCOnTimefg = 0;
[e = _cMeasureARCOnTimefg -> -> 0 `i `uc ]
"1869
[; ;MainBat.c: 1869:         }
}
[e :U 1808 ]
"1871
[; ;MainBat.c: 1871:         if(cResetDecide)
[e $ ! != -> _cResetDecide `i -> 0 `i 1812  ]
"1872
[; ;MainBat.c: 1872:         {
{
"1873
[; ;MainBat.c: 1873:             Write_EEPROM(0,30);
[e ( _Write_EEPROM (2 , -> -> 0 `i `ui -> -> 30 `i `ui ]
"1874
[; ;MainBat.c: 1874:             Write_EEPROM(0,33);
[e ( _Write_EEPROM (2 , -> -> 0 `i `ui -> -> 33 `i `ui ]
"1875
[; ;MainBat.c: 1875:             Write_EEPROM(0,36);
[e ( _Write_EEPROM (2 , -> -> 0 `i `ui -> -> 36 `i `ui ]
"1876
[; ;MainBat.c: 1876:             hr=0;
[e = _hr -> -> 0 `i `ui ]
"1877
[; ;MainBat.c: 1877:             min=0;
[e = _min -> -> 0 `i `ui ]
"1878
[; ;MainBat.c: 1878:             sec=0;
[e = _sec -> -> 0 `i `ui ]
"1879
[; ;MainBat.c: 1879:         }
}
[e :U 1812 ]
"1895
[; ;MainBat.c: 1895:         if(ArcOnMenuMode==2)
[e $ ! == -> _ArcOnMenuMode `i -> 2 `i 1813  ]
"1896
[; ;MainBat.c: 1896:         {
{
"1898
[; ;MainBat.c: 1898:             TypeDP.TypeD.digitdp7 = 0;
[e = . . _TypeDP 0 6 -> -> 0 `i `uc ]
"1899
[; ;MainBat.c: 1899:             TypeDP.TypeD.digitdp6 = 0;
[e = . . _TypeDP 0 5 -> -> 0 `i `uc ]
"1901
[; ;MainBat.c: 1901:             iDispcurr[0] = 'R';
[e = *U + &U _iDispcurr * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 82 `ui `uc ]
"1902
[; ;MainBat.c: 1902:             iDispcurr[1] = 'S';
[e = *U + &U _iDispcurr * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 83 `ui `uc ]
"1903
[; ;MainBat.c: 1903:             iDispcurr[2] = 'E';
[e = *U + &U _iDispcurr * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 69 `ui `uc ]
"1904
[; ;MainBat.c: 1904:             iDispcurr[3] = 'T';
[e = *U + &U _iDispcurr * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispcurr `ui `ux -> -> 84 `ui `uc ]
"1905
[; ;MainBat.c: 1905:             iDispvolt[0] = 'D';
[e = *U + &U _iDispvolt * -> -> -> 0 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 68 `ui `uc ]
"1906
[; ;MainBat.c: 1906:             iDispvolt[1] = 'O';
[e = *U + &U _iDispvolt * -> -> -> 1 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 79 `ui `uc ]
"1907
[; ;MainBat.c: 1907:             iDispvolt[2] = 'N';
[e = *U + &U _iDispvolt * -> -> -> 2 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 78 `ui `uc ]
"1908
[; ;MainBat.c: 1908:             iDispvolt[3] = 'E';
[e = *U + &U _iDispvolt * -> -> -> 3 `i `ui `ux -> -> # *U &U _iDispvolt `ui `ux -> -> 69 `ui `uc ]
"1910
[; ;MainBat.c: 1910:             cResetDecide = 1;
[e = _cResetDecide -> -> 1 `i `uc ]
"1911
[; ;MainBat.c: 1911:             Display_updatefg = cResetdonefg = 1;
[e = _Display_updatefg = _cResetdonefg -> -> 1 `i `uc ]
"1913
[; ;MainBat.c: 1913:         }
}
[e :U 1813 ]
"1914
[; ;MainBat.c: 1914:         if((dispvtgupdatefg == 1) && (iArcforce != 0) && (cMode=='M'))
[e $ ! && && == -> _dispvtgupdatefg `i -> 1 `i != _iArcforce -> -> 0 `i `ui == -> _cMode `ui -> 77 `ui 1814  ]
"1915
[; ;MainBat.c: 1915:         {
{
"1916
[; ;MainBat.c: 1916:             if(cModel_Select == 2)
[e $ ! == -> _cModel_Select `i -> 2 `i 1815  ]
"1917
[; ;MainBat.c: 1917:             {
{
"1918
[; ;MainBat.c: 1918:                 if((iActualvolt > 100.0) && (iActualvolt <= 300.0))
[e $ ! && > -> _iActualvolt `d .100.0 <= -> _iActualvolt `d .300.0 1816  ]
"1919
[; ;MainBat.c: 1919:                 {
{
"1920
[; ;MainBat.c: 1920:                     iArcforceCurrent = (int)setcurrent + ((((300.0 - iActualvolt)/300.0)*(125*iArcforce))/100);
[e = _iArcforceCurrent -> + -> -> _setcurrent `i `d / * / - .300.0 -> _iActualvolt `d .300.0 -> * -> -> 125 `i `ui _iArcforce `d -> -> 100 `i `d `ui ]
"1922
[; ;MainBat.c: 1922:                     if(iArcforceCurrent >=300.0)
[e $ ! >= -> _iArcforceCurrent `d .300.0 1817  ]
"1923
[; ;MainBat.c: 1923:                     {
{
"1924
[; ;MainBat.c: 1924:                         iArcforceCurrent = 300.0;
[e = _iArcforceCurrent -> .300.0 `ui ]
"1925
[; ;MainBat.c: 1925:                     }
}
[e :U 1817 ]
"1927
[; ;MainBat.c: 1927:                     if(setcurrent <= 200)
[e $ ! <= _setcurrent -> -> 200 `i `ui 1818  ]
"1928
[; ;MainBat.c: 1928:                     {
{
"1929
[; ;MainBat.c: 1929:                         daccount = MMACCLookup(iArcforceCurrent);
[e = _daccount ( _MMACCLookup (1 _iArcforceCurrent ]
"1930
[; ;MainBat.c: 1930:                         dacoutfg = 1;
[e = _dacoutfg -> -> 1 `i `uc ]
"1931
[; ;MainBat.c: 1931:                     }
}
[e :U 1818 ]
"1932
[; ;MainBat.c: 1932:                     iArcForceTimeCnt = 0;
[e = _iArcForceTimeCnt -> -> 0 `i `ui ]
"1933
[; ;MainBat.c: 1933:                 }
}
[e $U 1819  ]
"1934
[; ;MainBat.c: 1934:                 else if((iActualvolt > 300.0)&&(iHotfg == 0))
[e :U 1816 ]
[e $ ! && > -> _iActualvolt `d .300.0 == _iHotfg -> -> 0 `i `ui 1820  ]
"1935
[; ;MainBat.c: 1935:                 {
{
"1936
[; ;MainBat.c: 1936:                     iArcForceTimeCnt++;
[e ++ _iArcForceTimeCnt -> -> 1 `i `ui ]
"1937
[; ;MainBat.c: 1937:                     if(iArcForceTimeCnt >= 3)
[e $ ! >= _iArcForceTimeCnt -> -> 3 `i `ui 1821  ]
"1938
[; ;MainBat.c: 1938:                     {
{
"1939
[; ;MainBat.c: 1939:                         iArcForceTimeCnt = 0;
[e = _iArcForceTimeCnt -> -> 0 `i `ui ]
"1940
[; ;MainBat.c: 1940:                         cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"1941
[; ;MainBat.c: 1941:                     }
}
[e :U 1821 ]
"1942
[; ;MainBat.c: 1942:                 }
}
[e :U 1820 ]
[e :U 1819 ]
"1943
[; ;MainBat.c: 1943:                 dispvtgupdatefg = 0;
[e = _dispvtgupdatefg -> -> 0 `i `uc ]
"1944
[; ;MainBat.c: 1944:             }
}
[e :U 1815 ]
"1945
[; ;MainBat.c: 1945:             if(cModel_Select == 3)
[e $ ! == -> _cModel_Select `i -> 3 `i 1822  ]
"1946
[; ;MainBat.c: 1946:             {
{
"1947
[; ;MainBat.c: 1947:                 if(setcurrent <= 200)
[e $ ! <= _setcurrent -> -> 200 `i `ui 1823  ]
"1948
[; ;MainBat.c: 1948:                 {
{
"1949
[; ;MainBat.c: 1949:                     if((iActualvolt > 100.0) && (iActualvolt <= 300.0) )
[e $ ! && > -> _iActualvolt `d .100.0 <= -> _iActualvolt `d .300.0 1824  ]
"1950
[; ;MainBat.c: 1950:                     {
{
"1951
[; ;MainBat.c: 1951:                         iArcforceCurrent = (int)setcurrent + ((((300.0 - iActualvolt)/300.0)*(125*iArcforce))/100);
[e = _iArcforceCurrent -> + -> -> _setcurrent `i `d / * / - .300.0 -> _iActualvolt `d .300.0 -> * -> -> 125 `i `ui _iArcforce `d -> -> 100 `i `d `ui ]
"1952
[; ;MainBat.c: 1952:                         if(iArcforceCurrent >= 300.0)
[e $ ! >= -> _iArcforceCurrent `d .300.0 1825  ]
"1953
[; ;MainBat.c: 1953:                         {
{
"1954
[; ;MainBat.c: 1954:                             iArcforceCurrent = 300.0;
[e = _iArcforceCurrent -> .300.0 `ui ]
"1955
[; ;MainBat.c: 1955:                         }
}
[e :U 1825 ]
"1957
[; ;MainBat.c: 1957:                         if(setcurrent <= 200)
[e $ ! <= _setcurrent -> -> 200 `i `ui 1826  ]
"1958
[; ;MainBat.c: 1958:                         {
{
"1959
[; ;MainBat.c: 1959:                             daccount = MMACCLookup(iArcforceCurrent);
[e = _daccount ( _MMACCLookup (1 _iArcforceCurrent ]
"1960
[; ;MainBat.c: 1960:                             dacoutfg = 1;
[e = _dacoutfg -> -> 1 `i `uc ]
"1961
[; ;MainBat.c: 1961:                         }
}
[e :U 1826 ]
"1962
[; ;MainBat.c: 1962:                         iArcForceTimeCnt = 0;
[e = _iArcForceTimeCnt -> -> 0 `i `ui ]
"1963
[; ;MainBat.c: 1963:                     }
}
[e $U 1827  ]
"1964
[; ;MainBat.c: 1964:                     else if((iActualvolt > 300.0) && (iHotfg == 0))
[e :U 1824 ]
[e $ ! && > -> _iActualvolt `d .300.0 == _iHotfg -> -> 0 `i `ui 1828  ]
"1965
[; ;MainBat.c: 1965:                     {
{
"1966
[; ;MainBat.c: 1966:                         iArcForceTimeCnt++;
[e ++ _iArcForceTimeCnt -> -> 1 `i `ui ]
"1967
[; ;MainBat.c: 1967:                         if(iArcForceTimeCnt >= 3)
[e $ ! >= _iArcForceTimeCnt -> -> 3 `i `ui 1829  ]
"1968
[; ;MainBat.c: 1968:                         {
{
"1969
[; ;MainBat.c: 1969:                             iArcForceTimeCnt = 0;
[e = _iArcForceTimeCnt -> -> 0 `i `ui ]
"1970
[; ;MainBat.c: 1970:                             cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"1971
[; ;MainBat.c: 1971:                         }
}
[e :U 1829 ]
"1972
[; ;MainBat.c: 1972:                     }
}
[e :U 1828 ]
[e :U 1827 ]
"1973
[; ;MainBat.c: 1973:                     dispvtgupdatefg = 0;
[e = _dispvtgupdatefg -> -> 0 `i `uc ]
"1974
[; ;MainBat.c: 1974:                 }
}
[e $U 1830  ]
"1975
[; ;MainBat.c: 1975:                 else if((setcurrent >= 201) && (setcurrent <= 500))
[e :U 1823 ]
[e $ ! && >= _setcurrent -> -> 201 `i `ui <= _setcurrent -> -> 500 `i `ui 1831  ]
"1976
[; ;MainBat.c: 1976:                 {
{
"1977
[; ;MainBat.c: 1977:                     if((iActualvolt > 100.0) && (iActualvolt <= 350.0))
[e $ ! && > -> _iActualvolt `d .100.0 <= -> _iActualvolt `d .350.0 1832  ]
"1978
[; ;MainBat.c: 1978:                     {
{
"1979
[; ;MainBat.c: 1979:                         iArcforceCurrent = (int)setcurrent + ((((350.0 - iActualvolt)/350.0)*(125*iArcforce))/100);
[e = _iArcforceCurrent -> + -> -> _setcurrent `i `d / * / - .350.0 -> _iActualvolt `d .350.0 -> * -> -> 125 `i `ui _iArcforce `d -> -> 100 `i `d `ui ]
"1981
[; ;MainBat.c: 1981:                         if((setcurrent >= 201) && (setcurrent <= 500))
[e $ ! && >= _setcurrent -> -> 201 `i `ui <= _setcurrent -> -> 500 `i `ui 1833  ]
"1982
[; ;MainBat.c: 1982:                         {
{
"1983
[; ;MainBat.c: 1983:                             daccount = MMACCLookup(iArcforceCurrent);
[e = _daccount ( _MMACCLookup (1 _iArcforceCurrent ]
"1984
[; ;MainBat.c: 1984:                             dacoutfg = 1;
[e = _dacoutfg -> -> 1 `i `uc ]
"1985
[; ;MainBat.c: 1985:                         }
}
[e :U 1833 ]
"1986
[; ;MainBat.c: 1986:                         iArcForceTimeCnt = 0;
[e = _iArcForceTimeCnt -> -> 0 `i `ui ]
"1987
[; ;MainBat.c: 1987:                     }
}
[e $U 1834  ]
"1988
[; ;MainBat.c: 1988:                     else if((iActualvolt > 350.0) && (iHotfg == 0))
[e :U 1832 ]
[e $ ! && > -> _iActualvolt `d .350.0 == _iHotfg -> -> 0 `i `ui 1835  ]
"1989
[; ;MainBat.c: 1989:                     {
{
"1990
[; ;MainBat.c: 1990:                         iArcForceTimeCnt++;
[e ++ _iArcForceTimeCnt -> -> 1 `i `ui ]
"1991
[; ;MainBat.c: 1991:                         if(iArcForceTimeCnt >= 3)
[e $ ! >= _iArcForceTimeCnt -> -> 3 `i `ui 1836  ]
"1992
[; ;MainBat.c: 1992:                         {
{
"1993
[; ;MainBat.c: 1993:                             iArcForceTimeCnt = 0;
[e = _iArcForceTimeCnt -> -> 0 `i `ui ]
"1994
[; ;MainBat.c: 1994:                             cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"1995
[; ;MainBat.c: 1995:                         }
}
[e :U 1836 ]
"1996
[; ;MainBat.c: 1996:                     }
}
[e :U 1835 ]
[e :U 1834 ]
"1997
[; ;MainBat.c: 1997:                     dispvtgupdatefg = 0;
[e = _dispvtgupdatefg -> -> 0 `i `uc ]
"1998
[; ;MainBat.c: 1998:                 }
}
[e :U 1831 ]
[e :U 1830 ]
"1999
[; ;MainBat.c: 1999:             }
}
[e :U 1822 ]
"2000
[; ;MainBat.c: 2000:         }
}
[e :U 1814 ]
"2003
[; ;MainBat.c: 2003:         if(((cMode=='M') || (cMode=='T')) && (weldonfg == 0) && (Error_flag == 0) && (cModelSelectfg == 0) && (cVRDCountSettingfg == 0) && (cDispVRDcountfg == 0))
[e $ ! && && && && && || == -> _cMode `ui -> 77 `ui == -> _cMode `ui -> 84 `ui == -> _weldonfg `i -> 0 `i == -> _Error_flag `i -> 0 `i == -> _cModelSelectfg `i -> 0 `i == -> _cVRDCountSettingfg `i -> 0 `i == -> _cDispVRDcountfg `i -> 0 `i 1837  ]
"2004
[; ;MainBat.c: 2004:         {
{
"2005
[; ;MainBat.c: 2005:             TypeDP.TypeD.digitdp7 = 1;
[e = . . _TypeDP 0 6 -> -> 1 `i `uc ]
"2006
[; ;MainBat.c: 2006:             TypeDP.TypeD.digitdp6 = 0;
[e = . . _TypeDP 0 5 -> -> 0 `i `uc ]
"2007
[; ;MainBat.c: 2007:             if((psetcurrent!= setcurrent) || (Display_updatefg == 1))
[e $ ! || != -> _psetcurrent `ui _setcurrent == -> _Display_updatefg `i -> 1 `i 1838  ]
"2010
[; ;MainBat.c: 2010:             {
{
"2012
[; ;MainBat.c: 2012:                 hex_to_dec_curr(setcurrent);
[e ( _hex_to_dec_curr (1 _setcurrent ]
"2016
[; ;MainBat.c: 2016:             }
}
[e :U 1838 ]
"2017
[; ;MainBat.c: 2017:             if((dispvtgfg == 1) || (Display_updatefg == 1))
[e $ ! || == -> _dispvtgfg `i -> 1 `i == -> _Display_updatefg `i -> 1 `i 1839  ]
"2018
[; ;MainBat.c: 2018:             {
{
"2019
[; ;MainBat.c: 2019:                 hex_to_dec_volt(iActualvolt1);
[e ( _hex_to_dec_volt (1 _iActualvolt1 ]
"2024
[; ;MainBat.c: 2024:             }
}
[e :U 1839 ]
"2025
[; ;MainBat.c: 2025:             dispvtgfg = 0;
[e = _dispvtgfg -> -> 0 `i `uc ]
"2026
[; ;MainBat.c: 2026:             cDispSetcurrentfg = 0;
[e = _cDispSetcurrentfg -> -> 0 `i `uc ]
"2029
[; ;MainBat.c: 2029:             Display_updatefg = 0;
[e = _Display_updatefg -> -> 0 `i `uc ]
"2030
[; ;MainBat.c: 2030:         }
}
[e $U 1840  ]
"2031
[; ;MainBat.c: 2031:         else if((weldonfg == 1) && (Error_flag == 0) && (cModelSelectfg == 0) && (cDispVRDcountfg == 0) && (cVRDCountSettingfg == 0) && (ivrdcalibrationfg==0))
[e :U 1837 ]
[e $ ! && && && && && == -> _weldonfg `i -> 1 `i == -> _Error_flag `i -> 0 `i == -> _cModelSelectfg `i -> 0 `i == -> _cDispVRDcountfg `i -> 0 `i == -> _cVRDCountSettingfg `i -> 0 `i == _ivrdcalibrationfg -> -> 0 `i `ui 1841  ]
"2032
[; ;MainBat.c: 2032:         {
{
"2034
[; ;MainBat.c: 2034:             TypeDP.TypeD.digitdp6 = 0;
[e = . . _TypeDP 0 5 -> -> 0 `i `uc ]
"2035
[; ;MainBat.c: 2035:             if(((dispcurrfg == 1)) || (Display_updatefg == 1))
[e $ ! || == -> _dispcurrfg `i -> 1 `i == -> _Display_updatefg `i -> 1 `i 1842  ]
"2036
[; ;MainBat.c: 2036:             {
{
"2037
[; ;MainBat.c: 2037:                 hex_to_dec_curr(iActualcurr);
[e ( _hex_to_dec_curr (1 _iActualcurr ]
"2038
[; ;MainBat.c: 2038:             }
}
[e :U 1842 ]
"2040
[; ;MainBat.c: 2040:             if((dispvtgfg == 1) || (Display_updatefg == 1))
[e $ ! || == -> _dispvtgfg `i -> 1 `i == -> _Display_updatefg `i -> 1 `i 1843  ]
"2041
[; ;MainBat.c: 2041:             {
{
"2042
[; ;MainBat.c: 2042:                 hex_to_dec_volt(iActualvolt1);
[e ( _hex_to_dec_volt (1 _iActualvolt1 ]
"2043
[; ;MainBat.c: 2043:             }
}
[e :U 1843 ]
"2044
[; ;MainBat.c: 2044:             dispcurrfg = 0;
[e = _dispcurrfg -> -> 0 `i `uc ]
"2045
[; ;MainBat.c: 2045:             dispvtgfg = 0;
[e = _dispvtgfg -> -> 0 `i `uc ]
"2046
[; ;MainBat.c: 2046:             Display_updatefg = 0;
[e = _Display_updatefg -> -> 0 `i `uc ]
"2047
[; ;MainBat.c: 2047:         }
}
[e :U 1841 ]
[e :U 1840 ]
"2050
[; ;MainBat.c: 2050:           CheckPinShort();
[e ( _CheckPinShort ..  ]
"2089
[; ;MainBat.c: 2089:         if(cMode=='M')
[e $ ! == -> _cMode `ui -> 77 `ui 1844  ]
"2090
[; ;MainBat.c: 2090:         {
{
"2092
[; ;MainBat.c: 2092:             if(weldonfg == 1 && icalibrationfg==1)
[e $ ! && == -> _weldonfg `i -> 1 `i == _icalibrationfg -> -> 1 `i `ui 1845  ]
"2093
[; ;MainBat.c: 2093:             {
{
"2094
[; ;MainBat.c: 2094:                cCaliDetectfg = 1;
[e = _cCaliDetectfg -> -> 1 `i `uc ]
"2095
[; ;MainBat.c: 2095:                 if((cMaxFBCurrCalibrationfg == 1) && (cVRDCountSettingfg == 0))
[e $ ! && == -> _cMaxFBCurrCalibrationfg `i -> 1 `i == -> _cVRDCountSettingfg `i -> 0 `i 1846  ]
"2096
[; ;MainBat.c: 2096:                 {
{
"2097
[; ;MainBat.c: 2097:                     daccount = MMACCLookup(setcurrent);
[e = _daccount ( _MMACCLookup (1 _setcurrent ]
"2098
[; ;MainBat.c: 2098:                     dacoutfg = 1;
[e = _dacoutfg -> -> 1 `i `uc ]
"2100
[; ;MainBat.c: 2100:                 }
}
[e :U 1846 ]
"2101
[; ;MainBat.c: 2101:                 if(cMaxFBCurrCalibrationfg == 0)
[e $ ! == -> _cMaxFBCurrCalibrationfg `i -> 0 `i 1847  ]
"2102
[; ;MainBat.c: 2102:                 {
{
"2103
[; ;MainBat.c: 2103:                    iMAXFBCurrOffset = fSLOPE1*100;
[e = _iMAXFBCurrOffset -> * _fSLOPE1 -> -> 100 `i `f `ui ]
"2104
[; ;MainBat.c: 2104:                    Write_EEPROM(iMAXFBCurrOffset,46);
[e ( _Write_EEPROM (2 , _iMAXFBCurrOffset -> -> 46 `i `ui ]
"2106
[; ;MainBat.c: 2106:                    icalibrationfg=0;
[e = _icalibrationfg -> -> 0 `i `ui ]
"2107
[; ;MainBat.c: 2107:                 }
}
[e :U 1847 ]
"2108
[; ;MainBat.c: 2108:                 if(((dispcurrfg == 1)) || (Display_updatefg == 1))
[e $ ! || == -> _dispcurrfg `i -> 1 `i == -> _Display_updatefg `i -> 1 `i 1848  ]
"2109
[; ;MainBat.c: 2109:                 {
{
"2110
[; ;MainBat.c: 2110:                     hex_to_dec_curr(iActualcurr);
[e ( _hex_to_dec_curr (1 _iActualcurr ]
"2111
[; ;MainBat.c: 2111:                 }
}
[e :U 1848 ]
"2112
[; ;MainBat.c: 2112:                 if((dispvtgfg == 1) || (Display_updatefg == 1))
[e $ ! || == -> _dispvtgfg `i -> 1 `i == -> _Display_updatefg `i -> 1 `i 1849  ]
"2113
[; ;MainBat.c: 2113:                 {
{
"2114
[; ;MainBat.c: 2114:                     hex_to_dec_volt(iActualvolt1);
[e ( _hex_to_dec_volt (1 _iActualvolt1 ]
"2115
[; ;MainBat.c: 2115:                 }
}
[e :U 1849 ]
"2117
[; ;MainBat.c: 2117:                 dispcurrfg = 0;
[e = _dispcurrfg -> -> 0 `i `uc ]
"2118
[; ;MainBat.c: 2118:                 dispvtgfg = 0;
[e = _dispvtgfg -> -> 0 `i `uc ]
"2119
[; ;MainBat.c: 2119:                 Display_updatefg = 0;
[e = _Display_updatefg -> -> 0 `i `uc ]
"2120
[; ;MainBat.c: 2120:             }
}
[e :U 1845 ]
"2122
[; ;MainBat.c: 2122:             if((weldonfg == 0) && (Error_flag == 0) && (ivrdcalibrationfg == 1) && (icalibrationfg==0))
[e $ ! && && && == -> _weldonfg `i -> 0 `i == -> _Error_flag `i -> 0 `i == _ivrdcalibrationfg -> -> 1 `i `ui == _icalibrationfg -> -> 0 `i `ui 1850  ]
"2123
[; ;MainBat.c: 2123:             {
{
"2125
[; ;MainBat.c: 2125:                 if((cVRDCountSettingfg == 1) && (cMaxFBCurrCalibrationfg == 0))
[e $ ! && == -> _cVRDCountSettingfg `i -> 1 `i == -> _cMaxFBCurrCalibrationfg `i -> 0 `i 1851  ]
"2126
[; ;MainBat.c: 2126:                 {
{
"2127
[; ;MainBat.c: 2127:                     if((cDispVRDcountfg == 1) || (Display_updatefg == 1))
[e $ ! || == -> _cDispVRDcountfg `i -> 1 `i == -> _Display_updatefg `i -> 1 `i 1852  ]
"2128
[; ;MainBat.c: 2128:                     {
{
"2129
[; ;MainBat.c: 2129:                         TypeDP.TypeD.digitdp7 = 0;
[e = . . _TypeDP 0 6 -> -> 0 `i `uc ]
"2130
[; ;MainBat.c: 2130:                         TypeDP.TypeD.digitdp6 = 0;
[e = . . _TypeDP 0 5 -> -> 0 `i `uc ]
"2131
[; ;MainBat.c: 2131:                         hex_to_dec_curr(iVRDCount);
[e ( _hex_to_dec_curr (1 _iVRDCount ]
"2132
[; ;MainBat.c: 2132:                     }
}
[e :U 1852 ]
"2134
[; ;MainBat.c: 2134:                      iSetVRD_Time = iVRDCount*10;
[e = _iSetVRD_Time * _iVRDCount -> -> 10 `i `ui ]
"2135
[; ;MainBat.c: 2135:                      if(iSetVRD_Time == 0)
[e $ ! == _iSetVRD_Time -> -> 0 `i `ui 1853  ]
"2136
[; ;MainBat.c: 2136:                      {
{
"2137
[; ;MainBat.c: 2137:                          iSetVRD_Time = 2;
[e = _iSetVRD_Time -> -> 2 `i `ui ]
"2138
[; ;MainBat.c: 2138:                      }
}
[e :U 1853 ]
"2140
[; ;MainBat.c: 2140:                     cVRDCntSavefg = 1;
[e = _cVRDCntSavefg -> -> 1 `i `uc ]
"2141
[; ;MainBat.c: 2141:                     cDispVRDcountfg = 0;
[e = _cDispVRDcountfg -> -> 0 `i `uc ]
"2142
[; ;MainBat.c: 2142:                     Display_updatefg = 0;
[e = _Display_updatefg -> -> 0 `i `uc ]
"2143
[; ;MainBat.c: 2143:                     TypeDP.TypeD.digitdp7 = 1;
[e = . . _TypeDP 0 6 -> -> 1 `i `uc ]
"2146
[; ;MainBat.c: 2146:                     {
{
"2147
[; ;MainBat.c: 2147:                         Write_EEPROM(iSetVRD_Time,48);
[e ( _Write_EEPROM (2 , _iSetVRD_Time -> -> 48 `i `ui ]
"2148
[; ;MainBat.c: 2148:                         iVRD_Time = iSetVRD_Time;
[e = _iVRD_Time _iSetVRD_Time ]
"2149
[; ;MainBat.c: 2149:                         cVRDCntSavefg = 0;
[e = _cVRDCntSavefg -> -> 0 `i `uc ]
"2150
[; ;MainBat.c: 2150:                     }
}
"2151
[; ;MainBat.c: 2151:                 }
}
[e :U 1851 ]
"2152
[; ;MainBat.c: 2152:             }
}
[e :U 1850 ]
"2153
[; ;MainBat.c: 2153:         }
}
[e :U 1844 ]
"2154
[; ;MainBat.c: 2154:     }
}
[e :U 1730 ]
[e $U 1731  ]
[e :U 1732 ]
"2155
[; ;MainBat.c: 2155: }
[e :UE 1705 ]
}
"2157
[; ;MainBat.c: 2157: void Read_RockerSwitch(void)
[v _Read_RockerSwitch `(v ~T0 @X0 1 ef ]
"2158
[; ;MainBat.c: 2158: {
{
[e :U _Read_RockerSwitch ]
[f ]
"2159
[; ;MainBat.c: 2159:     if(PORTCbits.RC0 == 0)
[e $ ! == -> . . _PORTCbits 0 0 `i -> 0 `i 1855  ]
"2160
[; ;MainBat.c: 2160:     {
{
"2161
[; ;MainBat.c: 2161:         iModeSwitchcnt++;
[e ++ _iModeSwitchcnt -> -> 1 `i `ui ]
"2162
[; ;MainBat.c: 2162:         if(iModeSwitchcnt >= 1)
[e $ ! >= _iModeSwitchcnt -> -> 1 `i `ui 1856  ]
"2163
[; ;MainBat.c: 2163:         {
{
"2164
[; ;MainBat.c: 2164:             if(PORTCbits.RC0 == 0)
[e $ ! == -> . . _PORTCbits 0 0 `i -> 0 `i 1857  ]
"2165
[; ;MainBat.c: 2165:             {
{
"2166
[; ;MainBat.c: 2166:                 cMode = 'M';
[e = _cMode -> -> 77 `ui `uc ]
"2168
[; ;MainBat.c: 2168:                 if(cModeLatchfg == 0)
[e $ ! == -> _cModeLatchfg `i -> 0 `i 1858  ]
"2169
[; ;MainBat.c: 2169:                 {
{
"2170
[; ;MainBat.c: 2170:                     cModeLatchfg = 1;
[e = _cModeLatchfg -> -> 1 `i `uc ]
"2171
[; ;MainBat.c: 2171:                     cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"2175
[; ;MainBat.c: 2175:                     iVRD_Time = iSetVRD_Time = Read_EEPROM(48);
[e = _iVRD_Time = _iSetVRD_Time ( _Read_EEPROM (1 -> -> 48 `i `ui ]
"2176
[; ;MainBat.c: 2176:                     if(cModel_Select == 2)
[e $ ! == -> _cModel_Select `i -> 2 `i 1859  ]
"2177
[; ;MainBat.c: 2177:                     {
{
"2178
[; ;MainBat.c: 2178:                         if(setcurrent <= 200)
[e $ ! <= _setcurrent -> -> 200 `i `ui 1860  ]
"2179
[; ;MainBat.c: 2179:                         {
{
"2180
[; ;MainBat.c: 2180:                             iHotfg = 1;
[e = _iHotfg -> -> 1 `i `ui ]
"2181
[; ;MainBat.c: 2181:                         }
}
[e :U 1860 ]
"2182
[; ;MainBat.c: 2182:                     }
}
[e :U 1859 ]
"2183
[; ;MainBat.c: 2183:                     if(cModel_Select == 3)
[e $ ! == -> _cModel_Select `i -> 3 `i 1861  ]
"2184
[; ;MainBat.c: 2184:                     {
{
"2185
[; ;MainBat.c: 2185:                         if(setcurrent <= 450)
[e $ ! <= _setcurrent -> -> 450 `i `ui 1862  ]
"2186
[; ;MainBat.c: 2186:                         {
{
"2187
[; ;MainBat.c: 2187:                             iHotfg = 1;
[e = _iHotfg -> -> 1 `i `ui ]
"2188
[; ;MainBat.c: 2188:                         }
}
[e :U 1862 ]
"2189
[; ;MainBat.c: 2189:                     }
}
[e :U 1861 ]
"2190
[; ;MainBat.c: 2190:                 }
}
[e :U 1858 ]
"2191
[; ;MainBat.c: 2191:             }
}
[e :U 1857 ]
"2192
[; ;MainBat.c: 2192:             iModeSwitchcnt = 0;
[e = _iModeSwitchcnt -> -> 0 `i `ui ]
"2193
[; ;MainBat.c: 2193:         }
}
[e :U 1856 ]
"2194
[; ;MainBat.c: 2194:     }
}
[e $U 1863  ]
"2195
[; ;MainBat.c: 2195:     else if(PORTCbits.RC0 == 1)
[e :U 1855 ]
[e $ ! == -> . . _PORTCbits 0 0 `i -> 1 `i 1864  ]
"2196
[; ;MainBat.c: 2196:     {
{
"2197
[; ;MainBat.c: 2197:         iModeSwitchcnt++;
[e ++ _iModeSwitchcnt -> -> 1 `i `ui ]
"2198
[; ;MainBat.c: 2198:         if(iModeSwitchcnt >= 1)
[e $ ! >= _iModeSwitchcnt -> -> 1 `i `ui 1865  ]
"2199
[; ;MainBat.c: 2199:         {
{
"2200
[; ;MainBat.c: 2200:             if(PORTCbits.RC0 == 1)
[e $ ! == -> . . _PORTCbits 0 0 `i -> 1 `i 1866  ]
"2201
[; ;MainBat.c: 2201:             {
{
"2202
[; ;MainBat.c: 2202:                 cMode = 'T';
[e = _cMode -> -> 84 `ui `uc ]
"2204
[; ;MainBat.c: 2204:                 if(cModeLatchfg == 1)
[e $ ! == -> _cModeLatchfg `i -> 1 `i 1867  ]
"2205
[; ;MainBat.c: 2205:                 {
{
"2206
[; ;MainBat.c: 2206:                     iHotfg = 0;
[e = _iHotfg -> -> 0 `i `ui ]
"2207
[; ;MainBat.c: 2207:                     iHotstart = 0;
[e = _iHotstart -> -> 0 `i `ui ]
"2208
[; ;MainBat.c: 2208:                     iArcforce = 0;
[e = _iArcforce -> -> 0 `i `ui ]
"2209
[; ;MainBat.c: 2209:                     ivrdcnt = 0;
[e = _ivrdcnt -> -> 0 `i `ui ]
"2210
[; ;MainBat.c: 2210:                     cVRD_fg = 0;
[e = _cVRD_fg -> -> 0 `i `uc ]
"2211
[; ;MainBat.c: 2211:                     iVRD_Time = 0;
[e = _iVRD_Time -> -> 0 `i `ui ]
"2212
[; ;MainBat.c: 2212:                     cEnDCurrUpdatefg = 1;
[e = _cEnDCurrUpdatefg -> -> 1 `i `uc ]
"2213
[; ;MainBat.c: 2213:                     cModeLatchfg = 0;
[e = _cModeLatchfg -> -> 0 `i `uc ]
"2214
[; ;MainBat.c: 2214:                 }
}
[e :U 1867 ]
"2215
[; ;MainBat.c: 2215:             }
}
[e :U 1866 ]
"2216
[; ;MainBat.c: 2216:             iModeSwitchcnt = 0;
[e = _iModeSwitchcnt -> -> 0 `i `ui ]
"2217
[; ;MainBat.c: 2217:         }
}
[e :U 1865 ]
"2218
[; ;MainBat.c: 2218:     }
}
[e :U 1864 ]
[e :U 1863 ]
"2219
[; ;MainBat.c: 2219: }
[e :UE 1854 ]
}
"2221
[; ;MainBat.c: 2221: void Read_VRD_Switch(void)
[v _Read_VRD_Switch `(v ~T0 @X0 1 ef ]
"2222
[; ;MainBat.c: 2222: {
{
[e :U _Read_VRD_Switch ]
[f ]
"2224
[; ;MainBat.c: 2224:         if(PORTBbits.RB3 == 1)
[e $ ! == -> . . _PORTBbits 0 3 `i -> 1 `i 1869  ]
"2225
[; ;MainBat.c: 2225:         {
{
"2226
[; ;MainBat.c: 2226:             if(ivrdcalibrationfg == 1)
[e $ ! == _ivrdcalibrationfg -> -> 1 `i `ui 1870  ]
"2227
[; ;MainBat.c: 2227:             {
{
"2228
[; ;MainBat.c: 2228:                cVRD_fg=1;
[e = _cVRD_fg -> -> 1 `i `uc ]
"2229
[; ;MainBat.c: 2229:                iVRD_Time = 0;
[e = _iVRD_Time -> -> 0 `i `ui ]
"2230
[; ;MainBat.c: 2230:             }
}
[e $U 1871  ]
"2231
[; ;MainBat.c: 2231:             else
[e :U 1870 ]
"2232
[; ;MainBat.c: 2232:             {
{
"2233
[; ;MainBat.c: 2233:                 iVRDSwitchcnt++;
[e ++ _iVRDSwitchcnt -> -> 1 `i `ui ]
"2234
[; ;MainBat.c: 2234:                 if(iVRDSwitchcnt >= 1)
[e $ ! >= _iVRDSwitchcnt -> -> 1 `i `ui 1872  ]
"2235
[; ;MainBat.c: 2235:                 {
{
"2236
[; ;MainBat.c: 2236:                     if(PORTBbits.RB3 == 1)
[e $ ! == -> . . _PORTBbits 0 3 `i -> 1 `i 1873  ]
"2237
[; ;MainBat.c: 2237:                     {
{
"2239
[; ;MainBat.c: 2239:                         iVRD_Time = iSetVRD_Time = Read_EEPROM(48);
[e = _iVRD_Time = _iSetVRD_Time ( _Read_EEPROM (1 -> -> 48 `i `ui ]
"2240
[; ;MainBat.c: 2240:                     }
}
[e :U 1873 ]
"2241
[; ;MainBat.c: 2241:                     iVRDSwitchcnt = 0;
[e = _iVRDSwitchcnt -> -> 0 `i `ui ]
"2242
[; ;MainBat.c: 2242:                 }
}
[e :U 1872 ]
"2244
[; ;MainBat.c: 2244:             }
}
[e :U 1871 ]
"2245
[; ;MainBat.c: 2245:         }
}
[e $U 1874  ]
"2247
[; ;MainBat.c: 2247:     else if(PORTBbits.RB3 == 0)
[e :U 1869 ]
[e $ ! == -> . . _PORTBbits 0 3 `i -> 0 `i 1875  ]
"2248
[; ;MainBat.c: 2248:     {
{
"2249
[; ;MainBat.c: 2249:         iVRDSwitchcnt++;
[e ++ _iVRDSwitchcnt -> -> 1 `i `ui ]
"2250
[; ;MainBat.c: 2250:         if(iVRDSwitchcnt >= 1)
[e $ ! >= _iVRDSwitchcnt -> -> 1 `i `ui 1876  ]
"2251
[; ;MainBat.c: 2251:         {
{
"2252
[; ;MainBat.c: 2252:             if(PORTBbits.RB3 == 0)
[e $ ! == -> . . _PORTBbits 0 3 `i -> 0 `i 1877  ]
"2253
[; ;MainBat.c: 2253:             {
{
"2254
[; ;MainBat.c: 2254:                 iVRD_Time = 0;
[e = _iVRD_Time -> -> 0 `i `ui ]
"2255
[; ;MainBat.c: 2255:             }
}
[e :U 1877 ]
"2256
[; ;MainBat.c: 2256:             iVRDSwitchcnt = 0;
[e = _iVRDSwitchcnt -> -> 0 `i `ui ]
"2257
[; ;MainBat.c: 2257:         }
}
[e :U 1876 ]
"2258
[; ;MainBat.c: 2258:     }
}
[e :U 1875 ]
[e :U 1874 ]
"2259
[; ;MainBat.c: 2259: }
[e :UE 1868 ]
}
"2263
[; ;MainBat.c: 2263: unsigned int MMACCLookup(unsigned int iCurrent)
[v _MMACCLookup `(ui ~T0 @X0 1 ef1`ui ]
"2264
[; ;MainBat.c: 2264: {
{
[e :U _MMACCLookup ]
"2263
[; ;MainBat.c: 2263: unsigned int MMACCLookup(unsigned int iCurrent)
[v _iCurrent `ui ~T0 @X0 1 r1 ]
"2264
[; ;MainBat.c: 2264: {
[f ]
"2265
[; ;MainBat.c: 2265:     if(cModel_Select == 1)
[e $ ! == -> _cModel_Select `i -> 1 `i 1879  ]
"2266
[; ;MainBat.c: 2266:     {
{
"2267
[; ;MainBat.c: 2267:        iDacref = (iCurrent*fSLOPE1) + 365;
[e = _iDacref -> + * -> _iCurrent `f _fSLOPE1 -> -> 365 `i `f `ui ]
"2268
[; ;MainBat.c: 2268:     }
}
[e :U 1879 ]
"2269
[; ;MainBat.c: 2269:  if(cModel_Select == 2)
[e $ ! == -> _cModel_Select `i -> 2 `i 1880  ]
"2270
[; ;MainBat.c: 2270:     {
{
"2271
[; ;MainBat.c: 2271:         iDacref = (iCurrent*fSLOPE1) + 346.15;
[e = _iDacref -> + -> * -> _iCurrent `f _fSLOPE1 `d .346.15 `ui ]
"2272
[; ;MainBat.c: 2272:  }
}
[e :U 1880 ]
"2273
[; ;MainBat.c: 2273:     if(cModel_Select == 3)
[e $ ! == -> _cModel_Select `i -> 3 `i 1881  ]
"2274
[; ;MainBat.c: 2274:     {
{
"2276
[; ;MainBat.c: 2276:         iDacref = (iCurrent*fSLOPE1) + 365;
[e = _iDacref -> + * -> _iCurrent `f _fSLOPE1 -> -> 365 `i `f `ui ]
"2277
[; ;MainBat.c: 2277:     }
}
[e :U 1881 ]
"2278
[; ;MainBat.c: 2278:     return(iDacref);
[e ) _iDacref ]
[e $UE 1878  ]
"2279
[; ;MainBat.c: 2279: }
[e :UE 1878 ]
}
"2281
[; ;MainBat.c: 2281: void Write_EEPROM(unsigned int data,unsigned int adrs)
[v _Write_EEPROM `(v ~T0 @X0 1 ef2`ui`ui ]
"2282
[; ;MainBat.c: 2282: {
{
[e :U _Write_EEPROM ]
"2281
[; ;MainBat.c: 2281: void Write_EEPROM(unsigned int data,unsigned int adrs)
[v _data `ui ~T0 @X0 1 r1 ]
[v _adrs `ui ~T0 @X0 1 r2 ]
"2282
[; ;MainBat.c: 2282: {
[f ]
"2283
[; ;MainBat.c: 2283:     unsigned int iTempH,iTempl;
[v _iTempH `ui ~T0 @X0 1 a ]
[v _iTempl `ui ~T0 @X0 1 a ]
"2284
[; ;MainBat.c: 2284:     iTempl = data;
[e = _iTempl _data ]
"2285
[; ;MainBat.c: 2285:     iTempH = data >> 8;
[e = _iTempH >> _data -> 8 `i ]
"2286
[; ;MainBat.c: 2286:     Write_byte(iTempl,adrs);
[e ( _Write_byte (2 , _iTempl _adrs ]
"2287
[; ;MainBat.c: 2287:     Write_byte(iTempH,adrs+1);
[e ( _Write_byte (2 , _iTempH + _adrs -> -> 1 `i `ui ]
"2288
[; ;MainBat.c: 2288: }
[e :UE 1882 ]
}
"2290
[; ;MainBat.c: 2290: unsigned int Read_EEPROM(unsigned int adrs)
[v _Read_EEPROM `(ui ~T0 @X0 1 ef1`ui ]
"2291
[; ;MainBat.c: 2291: {
{
[e :U _Read_EEPROM ]
"2290
[; ;MainBat.c: 2290: unsigned int Read_EEPROM(unsigned int adrs)
[v _adrs `ui ~T0 @X0 1 r1 ]
"2291
[; ;MainBat.c: 2291: {
[f ]
"2292
[; ;MainBat.c: 2292:     unsigned int iTempH,iTempl,iTemp;
[v _iTempH `ui ~T0 @X0 1 a ]
[v _iTempl `ui ~T0 @X0 1 a ]
[v _iTemp `ui ~T0 @X0 1 a ]
"2293
[; ;MainBat.c: 2293:     iTempl = Read_byte(adrs);
[e = _iTempl -> ( _Read_byte (1 _adrs `ui ]
"2294
[; ;MainBat.c: 2294:     iTempH = Read_byte(adrs+1);
[e = _iTempH -> ( _Read_byte (1 + _adrs -> -> 1 `i `ui `ui ]
"2295
[; ;MainBat.c: 2295:     iTemp = (iTempH<<8)|(iTempl);
[e = _iTemp | << _iTempH -> 8 `i _iTempl ]
"2296
[; ;MainBat.c: 2296:     return (iTemp);
[e ) _iTemp ]
[e $UE 1883  ]
"2297
[; ;MainBat.c: 2297: }
[e :UE 1883 ]
}
"2299
[; ;MainBat.c: 2299: void Write_byte(unsigned int data,unsigned int adrs)
[v _Write_byte `(v ~T0 @X0 1 ef2`ui`ui ]
"2300
[; ;MainBat.c: 2300: {
{
[e :U _Write_byte ]
"2299
[; ;MainBat.c: 2299: void Write_byte(unsigned int data,unsigned int adrs)
[v _data `ui ~T0 @X0 1 r1 ]
[v _adrs `ui ~T0 @X0 1 r2 ]
"2300
[; ;MainBat.c: 2300: {
[f ]
"2301
[; ;MainBat.c: 2301:     unsigned int adrh,adrl;
[v _adrh `ui ~T0 @X0 1 a ]
[v _adrl `ui ~T0 @X0 1 a ]
"2303
[; ;MainBat.c: 2303:     adrl = adrs;
[e = _adrl _adrs ]
"2304
[; ;MainBat.c: 2304:     adrl = (adrl & 0xFF);
[e = _adrl & _adrl -> -> 255 `i `ui ]
"2305
[; ;MainBat.c: 2305:     adrh = (adrs >> 8);
[e = _adrh >> _adrs -> 8 `i ]
"2306
[; ;MainBat.c: 2306:     adrh = (adrh & 0x00FF);
[e = _adrh & _adrh -> -> 255 `i `ui ]
"2308
[; ;MainBat.c: 2308:     NVMCON1bits.NVMREG0 = 0;
[e = . . _NVMCON1bits 1 1 -> -> 0 `i `uc ]
"2309
[; ;MainBat.c: 2309:     NVMCON1bits.NVMREG1 = 0;
[e = . . _NVMCON1bits 1 2 -> -> 0 `i `uc ]
"2311
[; ;MainBat.c: 2311:     NVMADRH = adrh;
[e = _NVMADRH -> _adrh `uc ]
"2312
[; ;MainBat.c: 2312:     NVMADRL = adrl;
[e = _NVMADRL -> _adrl `uc ]
"2314
[; ;MainBat.c: 2314:     NVMDAT = data;
[e = _NVMDAT -> _data `uc ]
"2316
[; ;MainBat.c: 2316:     NVMCON1bits.WREN = 1;
[e = . . _NVMCON1bits 0 2 -> -> 1 `i `uc ]
"2318
[; ;MainBat.c: 2318:     INTCONbits.GIE = 0;
[e = . . _INTCONbits 1 2 -> -> 0 `i `uc ]
"2320
[; ;MainBat.c: 2320:     NVMCON2 = 0x55;
[e = _NVMCON2 -> -> 85 `i `uc ]
"2322
[; ;MainBat.c: 2322:     NVMCON2 = 0xAA;
[e = _NVMCON2 -> -> 170 `i `uc ]
"2324
[; ;MainBat.c: 2324:     NVMCON1bits.WR = 1;
[e = . . _NVMCON1bits 0 1 -> -> 1 `i `uc ]
"2325
[; ;MainBat.c: 2325:     INTCONbits.GIE = 1;
[e = . . _INTCONbits 1 2 -> -> 1 `i `uc ]
"2328
[; ;MainBat.c: 2328:     Delay(10 , 'm');
[e ( _Delay (2 , -> -> 10 `i `ui -> -> 109 `ui `uc ]
"2329
[; ;MainBat.c: 2329:     while(NVMCON1bits.WR == 1){}
[e $U 1885  ]
[e :U 1886 ]
{
}
[e :U 1885 ]
[e $ == -> . . _NVMCON1bits 0 1 `i -> 1 `i 1886  ]
[e :U 1887 ]
"2330
[; ;MainBat.c: 2330:     PIR7bits.NVMIF = 0;
[e = . . _PIR7bits 0 2 -> -> 0 `i `uc ]
"2331
[; ;MainBat.c: 2331:     NVMCON1bits.WREN = 0;
[e = . . _NVMCON1bits 0 2 -> -> 0 `i `uc ]
"2333
[; ;MainBat.c: 2333: }
[e :UE 1884 ]
}
"2335
[; ;MainBat.c: 2335: unsigned char Read_byte(unsigned int adrs)
[v _Read_byte `(uc ~T0 @X0 1 ef1`ui ]
"2336
[; ;MainBat.c: 2336: {
{
[e :U _Read_byte ]
"2335
[; ;MainBat.c: 2335: unsigned char Read_byte(unsigned int adrs)
[v _adrs `ui ~T0 @X0 1 r1 ]
"2336
[; ;MainBat.c: 2336: {
[f ]
"2337
[; ;MainBat.c: 2337:     unsigned int adrl,adrh,temp;
[v _adrl `ui ~T0 @X0 1 a ]
[v _adrh `ui ~T0 @X0 1 a ]
[v _temp `ui ~T0 @X0 1 a ]
"2338
[; ;MainBat.c: 2338:     unsigned char cHigh_Byte;
[v _cHigh_Byte `uc ~T0 @X0 1 a ]
"2340
[; ;MainBat.c: 2340:     adrh = adrs;
[e = _adrh _adrs ]
"2341
[; ;MainBat.c: 2341:     adrl = (adrh & 0x00FF);
[e = _adrl & _adrh -> -> 255 `i `ui ]
"2342
[; ;MainBat.c: 2342:     adrh = (adrs >> 8);
[e = _adrh >> _adrs -> 8 `i ]
"2343
[; ;MainBat.c: 2343:     adrh = (adrh & 0x00FF);
[e = _adrh & _adrh -> -> 255 `i `ui ]
"2345
[; ;MainBat.c: 2345:     NVMCON1bits.NVMREG0 = 0;
[e = . . _NVMCON1bits 1 1 -> -> 0 `i `uc ]
"2346
[; ;MainBat.c: 2346:     NVMCON1bits.NVMREG1 = 0;
[e = . . _NVMCON1bits 1 2 -> -> 0 `i `uc ]
"2348
[; ;MainBat.c: 2348:     NVMADRH = adrh;
[e = _NVMADRH -> _adrh `uc ]
"2349
[; ;MainBat.c: 2349:     NVMADRL = adrl;
[e = _NVMADRL -> _adrl `uc ]
"2351
[; ;MainBat.c: 2351:     NVMCON1bits.RD = 1;
[e = . . _NVMCON1bits 0 0 -> -> 1 `i `uc ]
"2353
[; ;MainBat.c: 2353:     while(NVMCON1bits.RD == 1){}
[e $U 1889  ]
[e :U 1890 ]
{
}
[e :U 1889 ]
[e $ == -> . . _NVMCON1bits 0 0 `i -> 1 `i 1890  ]
[e :U 1891 ]
"2355
[; ;MainBat.c: 2355:     temp = NVMDAT;
[e = _temp -> _NVMDAT `ui ]
"2357
[; ;MainBat.c: 2357:     return temp;
[e ) -> _temp `uc ]
[e $UE 1888  ]
"2358
[; ;MainBat.c: 2358: }
[e :UE 1888 ]
}
"2360
[; ;MainBat.c: 2360: void Trip_detect(unsigned int trip_vtg)
[v _Trip_detect `(v ~T0 @X0 1 ef1`ui ]
"2361
[; ;MainBat.c: 2361: {
{
[e :U _Trip_detect ]
"2360
[; ;MainBat.c: 2360: void Trip_detect(unsigned int trip_vtg)
[v _trip_vtg `ui ~T0 @X0 1 r1 ]
"2361
[; ;MainBat.c: 2361: {
[f ]
"2362
[; ;MainBat.c: 2362:     trip_vtg = iActualtripvolt;
[e = _trip_vtg _iActualtripvolt ]
"2364
[; ;MainBat.c: 2364:     if((trip_vtg > 2390) && (trip_vtg < 3300))
[e $ ! && > _trip_vtg -> -> 2390 `i `ui < _trip_vtg -> -> 3300 `i `ui 1893  ]
"2365
[; ;MainBat.c: 2365:  {
{
"2366
[; ;MainBat.c: 2366:         er1++;
[e ++ _er1 -> -> 1 `i `Vui ]
"2367
[; ;MainBat.c: 2367:         er3=0;
[e = _er3 -> -> 0 `i `ui ]
"2368
[; ;MainBat.c: 2368:         er4=0;
[e = _er4 -> -> 0 `i `ui ]
"2370
[; ;MainBat.c: 2370:   if(er1>2)
[e $ ! > _er1 -> -> 2 `i `ui 1894  ]
"2371
[; ;MainBat.c: 2371:   {
{
"2372
[; ;MainBat.c: 2372:             UV_ERR_fg=1;
[e = _UV_ERR_fg -> -> 1 `i `uc ]
"2373
[; ;MainBat.c: 2373:             TH_ERR_fg=0;
[e = _TH_ERR_fg -> -> 0 `i `uc ]
"2374
[; ;MainBat.c: 2374:             NO_CN9_CONNECTOR_ERR_fg=0;
[e = _NO_CN9_CONNECTOR_ERR_fg -> -> 0 `i `uc ]
"2375
[; ;MainBat.c: 2375:             cErrorFlashfg = 1;
[e = _cErrorFlashfg -> -> 1 `i `uc ]
"2376
[; ;MainBat.c: 2376:             er1=2;
[e = _er1 -> -> 2 `i `ui ]
"2377
[; ;MainBat.c: 2377:   }
}
[e :U 1894 ]
"2378
[; ;MainBat.c: 2378:  }
}
[e $U 1895  ]
"2379
[; ;MainBat.c: 2379:  else if((trip_vtg > 3700) && (trip_vtg < 4000))
[e :U 1893 ]
[e $ ! && > _trip_vtg -> -> 3700 `i `ui < _trip_vtg -> -> 4000 `i `ui 1896  ]
"2380
[; ;MainBat.c: 2380:  {
{
"2381
[; ;MainBat.c: 2381:         er1=0;
[e = _er1 -> -> 0 `i `ui ]
"2382
[; ;MainBat.c: 2382:         er3++;
[e ++ _er3 -> -> 1 `i `Vui ]
"2383
[; ;MainBat.c: 2383:         er4=0;
[e = _er4 -> -> 0 `i `ui ]
"2384
[; ;MainBat.c: 2384:   if(er3>2)
[e $ ! > _er3 -> -> 2 `i `ui 1897  ]
"2385
[; ;MainBat.c: 2385:   {
{
"2386
[; ;MainBat.c: 2386:             UV_ERR_fg=0;
[e = _UV_ERR_fg -> -> 0 `i `uc ]
"2387
[; ;MainBat.c: 2387:             TH_ERR_fg=1;
[e = _TH_ERR_fg -> -> 1 `i `uc ]
"2388
[; ;MainBat.c: 2388:             NO_CN9_CONNECTOR_ERR_fg=0;
[e = _NO_CN9_CONNECTOR_ERR_fg -> -> 0 `i `uc ]
"2389
[; ;MainBat.c: 2389:             cErrorFlashfg = 1;
[e = _cErrorFlashfg -> -> 1 `i `uc ]
"2390
[; ;MainBat.c: 2390:             er3=2;
[e = _er3 -> -> 2 `i `ui ]
"2391
[; ;MainBat.c: 2391:   }
}
[e :U 1897 ]
"2392
[; ;MainBat.c: 2392:  }
}
[e $U 1898  ]
"2393
[; ;MainBat.c: 2393:     else if(trip_vtg < 200)
[e :U 1896 ]
[e $ ! < _trip_vtg -> -> 200 `i `ui 1899  ]
"2394
[; ;MainBat.c: 2394:     {
{
"2395
[; ;MainBat.c: 2395:         if(count_3s>=50)
[e $ ! >= _count_3s -> -> 50 `i `ui 1900  ]
"2396
[; ;MainBat.c: 2396:         {
{
"2397
[; ;MainBat.c: 2397:             count_3s=0;
[e = _count_3s -> -> 0 `i `ui ]
"2399
[; ;MainBat.c: 2399:             er4++;
[e ++ _er4 -> -> 1 `i `Vui ]
"2400
[; ;MainBat.c: 2400:             er3=0;
[e = _er3 -> -> 0 `i `ui ]
"2401
[; ;MainBat.c: 2401:             er1=0;
[e = _er1 -> -> 0 `i `ui ]
"2402
[; ;MainBat.c: 2402:             if(er4>2)
[e $ ! > _er4 -> -> 2 `i `ui 1901  ]
"2403
[; ;MainBat.c: 2403:             {
{
"2404
[; ;MainBat.c: 2404:                 UV_ERR_fg=0;
[e = _UV_ERR_fg -> -> 0 `i `uc ]
"2405
[; ;MainBat.c: 2405:                 TH_ERR_fg=0;
[e = _TH_ERR_fg -> -> 0 `i `uc ]
"2406
[; ;MainBat.c: 2406:                 NO_CN9_CONNECTOR_ERR_fg =0;
[e = _NO_CN9_CONNECTOR_ERR_fg -> -> 0 `i `uc ]
"2408
[; ;MainBat.c: 2408:                cErrorFlashfg = 1;
[e = _cErrorFlashfg -> -> 1 `i `uc ]
"2409
[; ;MainBat.c: 2409:                er4=2;
[e = _er4 -> -> 2 `i `ui ]
"2410
[; ;MainBat.c: 2410:             }
}
[e :U 1901 ]
"2411
[; ;MainBat.c: 2411:         }
}
[e :U 1900 ]
"2413
[; ;MainBat.c: 2413:     }
}
[e $U 1902  ]
"2414
[; ;MainBat.c: 2414:  else
[e :U 1899 ]
"2415
[; ;MainBat.c: 2415:  {
{
"2416
[; ;MainBat.c: 2416:         UV_ERR_fg=0;
[e = _UV_ERR_fg -> -> 0 `i `uc ]
"2417
[; ;MainBat.c: 2417:         TH_ERR_fg=0;
[e = _TH_ERR_fg -> -> 0 `i `uc ]
"2418
[; ;MainBat.c: 2418:         NO_CN9_CONNECTOR_ERR_fg=0;
[e = _NO_CN9_CONNECTOR_ERR_fg -> -> 0 `i `uc ]
"2420
[; ;MainBat.c: 2420:         er1=0;
[e = _er1 -> -> 0 `i `ui ]
"2421
[; ;MainBat.c: 2421:         er3=0;
[e = _er3 -> -> 0 `i `ui ]
"2422
[; ;MainBat.c: 2422:         er4=0;
[e = _er4 -> -> 0 `i `ui ]
"2424
[; ;MainBat.c: 2424:  }
}
[e :U 1902 ]
[e :U 1898 ]
[e :U 1895 ]
"2425
[; ;MainBat.c: 2425: }
[e :UE 1892 ]
}
"2427
[; ;MainBat.c: 2427: void Trip_detect_OV(unsigned int trip_vtge)
[v _Trip_detect_OV `(v ~T0 @X0 1 ef1`ui ]
"2428
[; ;MainBat.c: 2428: {
{
[e :U _Trip_detect_OV ]
"2427
[; ;MainBat.c: 2427: void Trip_detect_OV(unsigned int trip_vtge)
[v _trip_vtge `ui ~T0 @X0 1 r1 ]
"2428
[; ;MainBat.c: 2428: {
[f ]
"2429
[; ;MainBat.c: 2429:     trip_vtge = iActualtripvolt1;
[e = _trip_vtge _iActualtripvolt1 ]
"2431
[; ;MainBat.c: 2431:     if((trip_vtge > 2300) && (trip_vtge < 4500))
[e $ ! && > _trip_vtge -> -> 2300 `i `ui < _trip_vtge -> -> 4500 `i `ui 1904  ]
"2432
[; ;MainBat.c: 2432:  {
{
"2433
[; ;MainBat.c: 2433:         er2++;
[e ++ _er2 -> -> 1 `i `Vui ]
"2434
[; ;MainBat.c: 2434:   if(er2>2)
[e $ ! > _er2 -> -> 2 `i `ui 1905  ]
"2435
[; ;MainBat.c: 2435:   {
{
"2436
[; ;MainBat.c: 2436:             OV_ERR_fg=1;
[e = _OV_ERR_fg -> -> 1 `i `uc ]
"2437
[; ;MainBat.c: 2437:             NO_CN9_CONNECTOR_ERR_fg=0;
[e = _NO_CN9_CONNECTOR_ERR_fg -> -> 0 `i `uc ]
"2439
[; ;MainBat.c: 2439:             cErrorFlashfg = 1;
[e = _cErrorFlashfg -> -> 1 `i `uc ]
"2440
[; ;MainBat.c: 2440:             er2=2;
[e = _er2 -> -> 2 `i `ui ]
"2441
[; ;MainBat.c: 2441:   }
}
[e :U 1905 ]
"2442
[; ;MainBat.c: 2442:  }
}
[e $U 1906  ]
"2443
[; ;MainBat.c: 2443:  else
[e :U 1904 ]
"2444
[; ;MainBat.c: 2444:  {
{
"2445
[; ;MainBat.c: 2445:         OV_ERR_fg=0;
[e = _OV_ERR_fg -> -> 0 `i `uc ]
"2447
[; ;MainBat.c: 2447:         er2=0;
[e = _er2 -> -> 0 `i `ui ]
"2448
[; ;MainBat.c: 2448:  }
}
[e :U 1906 ]
"2449
[; ;MainBat.c: 2449: }
[e :UE 1903 ]
}
"2451
[; ;MainBat.c: 2451: void CheckPinShort(void)
[v _CheckPinShort `(v ~T0 @X0 1 ef ]
"2452
[; ;MainBat.c: 2452: {
{
[e :U _CheckPinShort ]
[f ]
"2453
[; ;MainBat.c: 2453:     unsigned int x,y;
[v _x `ui ~T0 @X0 1 a ]
[v _y `ui ~T0 @X0 1 a ]
"2454
[; ;MainBat.c: 2454:     LATCbits.LATC6 = 1;
[e = . . _LATCbits 0 6 -> -> 1 `i `uc ]
"2455
[; ;MainBat.c: 2455:     for (x = 0; x < 30; x++)
{
[e = _x -> -> 0 `i `ui ]
[e $ < _x -> -> 30 `i `ui 1908  ]
[e $U 1909  ]
[e :U 1908 ]
"2456
[; ;MainBat.c: 2456:         for(y = 0; y < 50; y++);
{
[e = _y -> -> 0 `i `ui ]
[e $ < _y -> -> 50 `i `ui 1911  ]
[e $U 1912  ]
[e :U 1911 ]
[e ++ _y -> -> 1 `i `ui ]
[e $ < _y -> -> 50 `i `ui 1911  ]
[e :U 1912 ]
}
[e ++ _x -> -> 1 `i `ui ]
[e $ < _x -> -> 30 `i `ui 1908  ]
[e :U 1909 ]
}
"2457
[; ;MainBat.c: 2457:             if(PORTCbits.RC7 == 1)
[e $ ! == -> . . _PORTCbits 0 7 `i -> 1 `i 1914  ]
"2458
[; ;MainBat.c: 2458:             {
{
"2459
[; ;MainBat.c: 2459:                 LATCbits.LATC6 = 0;
[e = . . _LATCbits 0 6 -> -> 0 `i `uc ]
"2461
[; ;MainBat.c: 2461:                 for (x = 0; x < 30; x++)
{
[e = _x -> -> 0 `i `ui ]
[e $ < _x -> -> 30 `i `ui 1915  ]
[e $U 1916  ]
[e :U 1915 ]
"2462
[; ;MainBat.c: 2462:                     for(y = 0; y < 50; y++);
{
[e = _y -> -> 0 `i `ui ]
[e $ < _y -> -> 50 `i `ui 1918  ]
[e $U 1919  ]
[e :U 1918 ]
[e ++ _y -> -> 1 `i `ui ]
[e $ < _y -> -> 50 `i `ui 1918  ]
[e :U 1919 ]
}
[e ++ _x -> -> 1 `i `ui ]
[e $ < _x -> -> 30 `i `ui 1915  ]
[e :U 1916 ]
}
"2463
[; ;MainBat.c: 2463:                         if(PORTCbits.RC7 == 0)
[e $ ! == -> . . _PORTCbits 0 7 `i -> 0 `i 1921  ]
"2464
[; ;MainBat.c: 2464:                         {
{
"2465
[; ;MainBat.c: 2465:                             LATCbits.LATC6 = 1;
[e = . . _LATCbits 0 6 -> -> 1 `i `uc ]
"2467
[; ;MainBat.c: 2467:                             for (x = 0; x < 30; x++)
{
[e = _x -> -> 0 `i `ui ]
[e $ < _x -> -> 30 `i `ui 1922  ]
[e $U 1923  ]
[e :U 1922 ]
"2468
[; ;MainBat.c: 2468:                                 for(y = 0; y < 50; y++);
{
[e = _y -> -> 0 `i `ui ]
[e $ < _y -> -> 50 `i `ui 1925  ]
[e $U 1926  ]
[e :U 1925 ]
[e ++ _y -> -> 1 `i `ui ]
[e $ < _y -> -> 50 `i `ui 1925  ]
[e :U 1926 ]
}
[e ++ _x -> -> 1 `i `ui ]
[e $ < _x -> -> 30 `i `ui 1922  ]
[e :U 1923 ]
}
"2469
[; ;MainBat.c: 2469:                                     if(PORTCbits.RC7 == 1)
[e $ ! == -> . . _PORTCbits 0 7 `i -> 1 `i 1928  ]
"2470
[; ;MainBat.c: 2470:                                     {
{
"2482
[; ;MainBat.c: 2482:                                         if(cCaliDetectfg == 1)
[e $ ! == -> _cCaliDetectfg `i -> 1 `i 1929  ]
"2483
[; ;MainBat.c: 2483:                                         {
{
"2484
[; ;MainBat.c: 2484:                                             cMaxFBCurrCalibrationfg = 1;
[e = _cMaxFBCurrCalibrationfg -> -> 1 `i `uc ]
"2485
[; ;MainBat.c: 2485:                                             cMinFBCurrCalibrationfg = 1;
[e = _cMinFBCurrCalibrationfg -> -> 1 `i `uc ]
"2486
[; ;MainBat.c: 2486:                                             cVRDCountSettingfg = 0;
[e = _cVRDCountSettingfg -> -> 0 `i `uc ]
"2487
[; ;MainBat.c: 2487:                                             cVRDcntDispf=0;
[e = _cVRDcntDispf -> -> 0 `i `uc ]
"2488
[; ;MainBat.c: 2488:                                             cDispFBCurrCalifg=0;
[e = _cDispFBCurrCalifg -> -> 0 `i `ui ]
"2489
[; ;MainBat.c: 2489:                                         }
}
[e :U 1929 ]
"2490
[; ;MainBat.c: 2490:                                         if((weldonfg == 0) && (cPowerONfg == 0))
[e $ ! && == -> _weldonfg `i -> 0 `i == -> _cPowerONfg `i -> 0 `i 1930  ]
"2491
[; ;MainBat.c: 2491:                                         {
{
"2493
[; ;MainBat.c: 2493:                                             cVRDCountSettingfg = 1;
[e = _cVRDCountSettingfg -> -> 1 `i `uc ]
"2494
[; ;MainBat.c: 2494:                                             cVRDcntDispf=1;
[e = _cVRDcntDispf -> -> 1 `i `uc ]
"2495
[; ;MainBat.c: 2495:                                             cMaxFBCurrCalibrationfg = 0;
[e = _cMaxFBCurrCalibrationfg -> -> 0 `i `uc ]
"2496
[; ;MainBat.c: 2496:                                             cMinFBCurrCalibrationfg = 0;
[e = _cMinFBCurrCalibrationfg -> -> 0 `i `uc ]
"2497
[; ;MainBat.c: 2497:                                             cDispFBCurrCalifg=0;
[e = _cDispFBCurrCalifg -> -> 0 `i `ui ]
"2498
[; ;MainBat.c: 2498:                                         }
}
[e :U 1930 ]
"2499
[; ;MainBat.c: 2499:                                     }
}
[e $U 1931  ]
"2500
[; ;MainBat.c: 2500:                                     else
[e :U 1928 ]
"2501
[; ;MainBat.c: 2501:                                     {
{
"2502
[; ;MainBat.c: 2502:                                         cModelSelectfg = 0;
[e = _cModelSelectfg -> -> 0 `i `uc ]
"2503
[; ;MainBat.c: 2503:                                         cMaxFBCurrCalibrationfg = 0;
[e = _cMaxFBCurrCalibrationfg -> -> 0 `i `uc ]
"2504
[; ;MainBat.c: 2504:                                         cMinFBCurrCalibrationfg = 0;
[e = _cMinFBCurrCalibrationfg -> -> 0 `i `uc ]
"2505
[; ;MainBat.c: 2505:                                         cVRDCountSettingfg = 0;
[e = _cVRDCountSettingfg -> -> 0 `i `uc ]
"2506
[; ;MainBat.c: 2506:                                         cVRDcntDispf=0;
[e = _cVRDcntDispf -> -> 0 `i `uc ]
"2507
[; ;MainBat.c: 2507:                                         cDispVRDcountfg=0;
[e = _cDispVRDcountfg -> -> 0 `i `uc ]
"2508
[; ;MainBat.c: 2508:                                         cDispFBCurrCalifg=0;
[e = _cDispFBCurrCalifg -> -> 0 `i `ui ]
"2510
[; ;MainBat.c: 2510:                                         ivrdcalibrationfg=0;
[e = _ivrdcalibrationfg -> -> 0 `i `ui ]
"2511
[; ;MainBat.c: 2511:                                         ivrdledfg=0;
[e = _ivrdledfg -> -> 0 `i `ui ]
"2513
[; ;MainBat.c: 2513:                                     }
}
[e :U 1931 ]
"2514
[; ;MainBat.c: 2514:                         }
}
[e $U 1932  ]
"2515
[; ;MainBat.c: 2515:                         else
[e :U 1921 ]
"2516
[; ;MainBat.c: 2516:                         {
{
"2517
[; ;MainBat.c: 2517:                             cModelSelectfg = 0;
[e = _cModelSelectfg -> -> 0 `i `uc ]
"2518
[; ;MainBat.c: 2518:                             cMaxFBCurrCalibrationfg = 0;
[e = _cMaxFBCurrCalibrationfg -> -> 0 `i `uc ]
"2519
[; ;MainBat.c: 2519:                             cMinFBCurrCalibrationfg = 0;
[e = _cMinFBCurrCalibrationfg -> -> 0 `i `uc ]
"2520
[; ;MainBat.c: 2520:                             cVRDCountSettingfg = 0;
[e = _cVRDCountSettingfg -> -> 0 `i `uc ]
"2521
[; ;MainBat.c: 2521:                             cDispVRDcountfg=0;
[e = _cDispVRDcountfg -> -> 0 `i `uc ]
"2522
[; ;MainBat.c: 2522:                             cDispFBCurrCalifg=0;
[e = _cDispFBCurrCalifg -> -> 0 `i `ui ]
"2524
[; ;MainBat.c: 2524:                             ivrdcalibrationfg=0;
[e = _ivrdcalibrationfg -> -> 0 `i `ui ]
"2525
[; ;MainBat.c: 2525:                             ivrdledfg=0;
[e = _ivrdledfg -> -> 0 `i `ui ]
"2526
[; ;MainBat.c: 2526:                         }
}
[e :U 1932 ]
"2527
[; ;MainBat.c: 2527:             }
}
[e $U 1933  ]
"2528
[; ;MainBat.c: 2528:             else
[e :U 1914 ]
"2529
[; ;MainBat.c: 2529:             {
{
"2530
[; ;MainBat.c: 2530:                cModelSelectfg = 0;
[e = _cModelSelectfg -> -> 0 `i `uc ]
"2531
[; ;MainBat.c: 2531:                cMaxFBCurrCalibrationfg = 0;
[e = _cMaxFBCurrCalibrationfg -> -> 0 `i `uc ]
"2532
[; ;MainBat.c: 2532:                cMinFBCurrCalibrationfg = 0;
[e = _cMinFBCurrCalibrationfg -> -> 0 `i `uc ]
"2533
[; ;MainBat.c: 2533:                cVRDCountSettingfg = 0;
[e = _cVRDCountSettingfg -> -> 0 `i `uc ]
"2534
[; ;MainBat.c: 2534:                cDispVRDcountfg=0;
[e = _cDispVRDcountfg -> -> 0 `i `uc ]
"2535
[; ;MainBat.c: 2535:                cDispFBCurrCalifg=0;
[e = _cDispFBCurrCalifg -> -> 0 `i `ui ]
"2537
[; ;MainBat.c: 2537:                ivrdcalibrationfg=0;
[e = _ivrdcalibrationfg -> -> 0 `i `ui ]
"2538
[; ;MainBat.c: 2538:                ivrdledfg=0;
[e = _ivrdledfg -> -> 0 `i `ui ]
"2539
[; ;MainBat.c: 2539:             }
}
[e :U 1933 ]
"2541
[; ;MainBat.c: 2541: }
[e :UE 1907 ]
}
"2543
[; ;MainBat.c: 2543: void ModelSelection(void)
[v _ModelSelection `(v ~T0 @X0 1 ef ]
"2544
[; ;MainBat.c: 2544: {
{
[e :U _ModelSelection ]
[f ]
"2546
[; ;MainBat.c: 2546:     cModel_Select = 2;
[e = _cModel_Select -> -> 2 `i `uc ]
"2547
[; ;MainBat.c: 2547:     Display_updatefg = cModeSelectDonefg = 1;
[e = _Display_updatefg = _cModeSelectDonefg -> -> 1 `i `uc ]
"2548
[; ;MainBat.c: 2548:     if(cModeSelectDonefg == 1)
[e $ ! == -> _cModeSelectDonefg `i -> 1 `i 1935  ]
"2549
[; ;MainBat.c: 2549:     {
{
"2550
[; ;MainBat.c: 2550:       Write_EEPROM(cModel_Select,40);
[e ( _Write_EEPROM (2 , -> _cModel_Select `ui -> -> 40 `i `ui ]
"2551
[; ;MainBat.c: 2551:       cModeSelectDonefg = 0;
[e = _cModeSelectDonefg -> -> 0 `i `uc ]
"2552
[; ;MainBat.c: 2552:     }
}
[e :U 1935 ]
"2602
[; ;MainBat.c: 2602: }
[e :UE 1934 ]
}
"2603
[; ;MainBat.c: 2603: void Modelcalibration(void)
[v _Modelcalibration `(v ~T0 @X0 1 ef ]
"2604
[; ;MainBat.c: 2604: {
{
[e :U _Modelcalibration ]
[f ]
"2605
[; ;MainBat.c: 2605:    unsigned int x,y;
[v _x `ui ~T0 @X0 1 a ]
[v _y `ui ~T0 @X0 1 a ]
"2606
[; ;MainBat.c: 2606:     LATCbits.LATC6 = 1;
[e = . . _LATCbits 0 6 -> -> 1 `i `uc ]
"2607
[; ;MainBat.c: 2607:     for (x = 0; x < 300; x++)
{
[e = _x -> -> 0 `i `ui ]
[e $ < _x -> -> 300 `i `ui 1937  ]
[e $U 1938  ]
[e :U 1937 ]
"2608
[; ;MainBat.c: 2608:         for(y = 0; y < 500; y++);
{
[e = _y -> -> 0 `i `ui ]
[e $ < _y -> -> 500 `i `ui 1940  ]
[e $U 1941  ]
[e :U 1940 ]
[e ++ _y -> -> 1 `i `ui ]
[e $ < _y -> -> 500 `i `ui 1940  ]
[e :U 1941 ]
}
[e ++ _x -> -> 1 `i `ui ]
[e $ < _x -> -> 300 `i `ui 1937  ]
[e :U 1938 ]
}
"2609
[; ;MainBat.c: 2609:             if(PORTCbits.RC7 == 1)
[e $ ! == -> . . _PORTCbits 0 7 `i -> 1 `i 1943  ]
"2610
[; ;MainBat.c: 2610:             {
{
"2611
[; ;MainBat.c: 2611:                 LATCbits.LATC6 = 0;
[e = . . _LATCbits 0 6 -> -> 0 `i `uc ]
"2612
[; ;MainBat.c: 2612:                 for (x = 0; x < 1000; x++)
{
[e = _x -> -> 0 `i `ui ]
[e $ < _x -> -> 1000 `i `ui 1944  ]
[e $U 1945  ]
[e :U 1944 ]
"2613
[; ;MainBat.c: 2613:                     for(y = 0; y < 1000; y++);
{
[e = _y -> -> 0 `i `ui ]
[e $ < _y -> -> 1000 `i `ui 1947  ]
[e $U 1948  ]
[e :U 1947 ]
[e ++ _y -> -> 1 `i `ui ]
[e $ < _y -> -> 1000 `i `ui 1947  ]
[e :U 1948 ]
}
[e ++ _x -> -> 1 `i `ui ]
[e $ < _x -> -> 1000 `i `ui 1944  ]
[e :U 1945 ]
}
"2614
[; ;MainBat.c: 2614:                         if(PORTCbits.RC7 == 0)
[e $ ! == -> . . _PORTCbits 0 7 `i -> 0 `i 1950  ]
"2615
[; ;MainBat.c: 2615:                         {
{
"2616
[; ;MainBat.c: 2616:                             LATCbits.LATC6 = 1;
[e = . . _LATCbits 0 6 -> -> 1 `i `uc ]
"2617
[; ;MainBat.c: 2617:                             for (x = 0; x < 300; x++)
{
[e = _x -> -> 0 `i `ui ]
[e $ < _x -> -> 300 `i `ui 1951  ]
[e $U 1952  ]
[e :U 1951 ]
"2618
[; ;MainBat.c: 2618:                                 for(y = 0; y < 500; y++);
{
[e = _y -> -> 0 `i `ui ]
[e $ < _y -> -> 500 `i `ui 1954  ]
[e $U 1955  ]
[e :U 1954 ]
[e ++ _y -> -> 1 `i `ui ]
[e $ < _y -> -> 500 `i `ui 1954  ]
[e :U 1955 ]
}
[e ++ _x -> -> 1 `i `ui ]
[e $ < _x -> -> 300 `i `ui 1951  ]
[e :U 1952 ]
}
"2619
[; ;MainBat.c: 2619:                                     if(PORTCbits.RC7 == 1)
[e $ ! == -> . . _PORTCbits 0 7 `i -> 1 `i 1957  ]
"2620
[; ;MainBat.c: 2620:                                     {
{
"2621
[; ;MainBat.c: 2621:                                         if(PORTBbits.RB3 == 1 )
[e $ ! == -> . . _PORTBbits 0 3 `i -> 1 `i 1958  ]
"2622
[; ;MainBat.c: 2622:                                         {
{
"2623
[; ;MainBat.c: 2623:                                             ivrdcalibrationfg=1;
[e = _ivrdcalibrationfg -> -> 1 `i `ui ]
"2624
[; ;MainBat.c: 2624:                                             icalibrationfg=0;cMaxFBCurrCalibrationfg = 0;cCaliDetectfg = 0;
[e = _icalibrationfg -> -> 0 `i `ui ]
[e = _cMaxFBCurrCalibrationfg -> -> 0 `i `uc ]
[e = _cCaliDetectfg -> -> 0 `i `uc ]
"2625
[; ;MainBat.c: 2625:                                         }
}
[e $U 1959  ]
"2626
[; ;MainBat.c: 2626:                                         else
[e :U 1958 ]
"2627
[; ;MainBat.c: 2627:                                         {
{
"2628
[; ;MainBat.c: 2628:                                             ivrdcalibrationfg=0;
[e = _ivrdcalibrationfg -> -> 0 `i `ui ]
"2629
[; ;MainBat.c: 2629:                                             icalibrationfg=1;cMaxFBCurrCalibrationfg = 1;cCaliDetectfg = 1;
[e = _icalibrationfg -> -> 1 `i `ui ]
[e = _cMaxFBCurrCalibrationfg -> -> 1 `i `uc ]
[e = _cCaliDetectfg -> -> 1 `i `uc ]
"2630
[; ;MainBat.c: 2630:                                         }
}
[e :U 1959 ]
"2631
[; ;MainBat.c: 2631:                                     }
}
[e :U 1957 ]
"2632
[; ;MainBat.c: 2632:                         }
}
[e :U 1950 ]
"2633
[; ;MainBat.c: 2633:             }
}
[e :U 1943 ]
"2634
[; ;MainBat.c: 2634:            if(PORTCbits.RC7==0)
[e $ ! == -> . . _PORTCbits 0 7 `i -> 0 `i 1960  ]
"2635
[; ;MainBat.c: 2635:            {
{
"2636
[; ;MainBat.c: 2636:                icalibrationfg=0;
[e = _icalibrationfg -> -> 0 `i `ui ]
"2637
[; ;MainBat.c: 2637:                ivrdcalibrationfg=0;
[e = _ivrdcalibrationfg -> -> 0 `i `ui ]
"2638
[; ;MainBat.c: 2638:                PORTCbits.RC7=0;
[e = . . _PORTCbits 0 7 -> -> 0 `i `uc ]
"2639
[; ;MainBat.c: 2639:            }
}
[e :U 1960 ]
"2701
[; ;MainBat.c: 2701: }
[e :UE 1936 ]
}
"2703
[; ;MainBat.c: 2703: void USART_initialize(void)
[v _USART_initialize `(v ~T0 @X0 1 ef ]
"2704
[; ;MainBat.c: 2704: {
{
[e :U _USART_initialize ]
[f ]
"2706
[; ;MainBat.c: 2706:     PMD4bits.MSSP1MD = 1;
[e = . . _PMD4bits 0 2 -> -> 1 `i `uc ]
"2707
[; ;MainBat.c: 2707:     PMD4bits.MSSP2MD = 1;
[e = . . _PMD4bits 0 3 -> -> 1 `i `uc ]
"2708
[; ;MainBat.c: 2708:     PMD4bits.CWG1MD = 1;
[e = . . _PMD4bits 1 0 -> -> 1 `i `uc ]
"2709
[; ;MainBat.c: 2709:     PMD4bits.UART1MD = 0;
[e = . . _PMD4bits 0 4 -> -> 0 `i `uc ]
"2711
[; ;MainBat.c: 2711:     RC7PPS = 0x16;
[e = _RC7PPS -> -> 22 `i `uc ]
"2712
[; ;MainBat.c: 2712:     RC6PPS = 0x09;
[e = _RC6PPS -> -> 9 `i `uc ]
"2714
[; ;MainBat.c: 2714:     ANSELCbits.ANSELC6 = 0;
[e = . . _ANSELCbits 0 6 -> -> 0 `i `uc ]
"2715
[; ;MainBat.c: 2715:     ANSELCbits.ANSELC7 = 0;
[e = . . _ANSELCbits 0 7 -> -> 0 `i `uc ]
"2716
[; ;MainBat.c: 2716:     TRISCbits.TRISC6 = 0;
[e = . . _TRISCbits 0 6 -> -> 0 `i `uc ]
"2717
[; ;MainBat.c: 2717:     TRISCbits.TRISC7 = 1;
[e = . . _TRISCbits 0 7 -> -> 1 `i `uc ]
"2720
[; ;MainBat.c: 2720:     TXSTA1bits.SYNC = 0;
[e = . . _TXSTA1bits 0 4 -> -> 0 `i `uc ]
"2721
[; ;MainBat.c: 2721:     TXSTA1bits.TX9 = 0;
[e = . . _TXSTA1bits 0 6 -> -> 0 `i `uc ]
"2722
[; ;MainBat.c: 2722:     TXSTA1bits.TXEN = 1;
[e = . . _TXSTA1bits 0 5 -> -> 1 `i `uc ]
"2723
[; ;MainBat.c: 2723:     TXSTA1bits.BRGH = 0;
[e = . . _TXSTA1bits 0 2 -> -> 0 `i `uc ]
"2726
[; ;MainBat.c: 2726:     RCSTA1bits.SPEN = 1;
[e = . . _RCSTA1bits 0 7 -> -> 1 `i `uc ]
"2727
[; ;MainBat.c: 2727:     RCSTA1bits.RX9 = 0;
[e = . . _RCSTA1bits 0 6 -> -> 0 `i `uc ]
"2728
[; ;MainBat.c: 2728:     RCSTA1bits.CREN = 1;
[e = . . _RCSTA1bits 0 4 -> -> 1 `i `uc ]
"2731
[; ;MainBat.c: 2731:     BAUD1CONbits.BRG16 = 0;
[e = . . _BAUD1CONbits 0 3 -> -> 0 `i `uc ]
"2732
[; ;MainBat.c: 2732:     SP1BRGL = 77;
[e = _SP1BRGL -> -> 77 `i `uc ]
"2733
[; ;MainBat.c: 2733:     SP1BRGH = 0;
[e = _SP1BRGH -> -> 0 `i `uc ]
"2734
[; ;MainBat.c: 2734:     PIE3bits.RC1IE = 1;
[e = . . _PIE3bits 0 5 -> -> 1 `i `uc ]
"2735
[; ;MainBat.c: 2735:     PIE3bits.TX1IE = 0;
[e = . . _PIE3bits 0 4 -> -> 0 `i `uc ]
"2738
[; ;MainBat.c: 2738:     INTCONbits.GIE = 1;
[e = . . _INTCONbits 1 2 -> -> 1 `i `uc ]
"2739
[; ;MainBat.c: 2739:     INTCONbits.PEIE = 1;
[e = . . _INTCONbits 1 1 -> -> 1 `i `uc ]
"2740
[; ;MainBat.c: 2740: }
[e :UE 1961 ]
}
"2742
[; ;MainBat.c: 2742: void USART2_initialize(void)
[v _USART2_initialize `(v ~T0 @X0 1 ef ]
"2743
[; ;MainBat.c: 2743: {
{
[e :U _USART2_initialize ]
[f ]
"2745
[; ;MainBat.c: 2745:     PMD4bits.MSSP1MD = 1;
[e = . . _PMD4bits 0 2 -> -> 1 `i `uc ]
"2746
[; ;MainBat.c: 2746:     PMD4bits.MSSP2MD = 1;
[e = . . _PMD4bits 0 3 -> -> 1 `i `uc ]
"2747
[; ;MainBat.c: 2747:     PMD4bits.CWG1MD = 1;
[e = . . _PMD4bits 1 0 -> -> 1 `i `uc ]
"2748
[; ;MainBat.c: 2748:     PMD4bits.UART2MD = 0;
[e = . . _PMD4bits 0 5 -> -> 0 `i `uc ]
"2750
[; ;MainBat.c: 2750:     RB7PPS = 0x0E;
[e = _RB7PPS -> -> 14 `i `uc ]
"2751
[; ;MainBat.c: 2751:     RB6PPS = 0x0B;
[e = _RB6PPS -> -> 11 `i `uc ]
"2753
[; ;MainBat.c: 2753:     ANSELBbits.ANSELB6 = 0;
[e = . . _ANSELBbits 0 6 -> -> 0 `i `uc ]
"2754
[; ;MainBat.c: 2754:     ANSELBbits.ANSELB7 = 0;
[e = . . _ANSELBbits 0 7 -> -> 0 `i `uc ]
"2755
[; ;MainBat.c: 2755:     TRISBbits.TRISB6 = 0;
[e = . . _TRISBbits 0 6 -> -> 0 `i `uc ]
"2756
[; ;MainBat.c: 2756:     TRISBbits.TRISB7 = 1;
[e = . . _TRISBbits 0 7 -> -> 1 `i `uc ]
"2759
[; ;MainBat.c: 2759:     TXSTA2bits.SYNC = 0;
[e = . . _TXSTA2bits 0 4 -> -> 0 `i `uc ]
"2760
[; ;MainBat.c: 2760:     TXSTA2bits.TX9 = 0;
[e = . . _TXSTA2bits 0 6 -> -> 0 `i `uc ]
"2761
[; ;MainBat.c: 2761:     TXSTA2bits.TXEN = 1;
[e = . . _TXSTA2bits 0 5 -> -> 1 `i `uc ]
"2762
[; ;MainBat.c: 2762:     TXSTA2bits.BRGH = 0;
[e = . . _TXSTA2bits 0 2 -> -> 0 `i `uc ]
"2765
[; ;MainBat.c: 2765:     RCSTA2bits.SPEN = 1;
[e = . . _RCSTA2bits 0 7 -> -> 1 `i `uc ]
"2766
[; ;MainBat.c: 2766:     RCSTA2bits.RX9 = 0;
[e = . . _RCSTA2bits 0 6 -> -> 0 `i `uc ]
"2767
[; ;MainBat.c: 2767:     RCSTA2bits.CREN = 1;
[e = . . _RCSTA2bits 0 4 -> -> 1 `i `uc ]
"2770
[; ;MainBat.c: 2770:     BAUD2CONbits.BRG16 = 0;
[e = . . _BAUD2CONbits 0 3 -> -> 0 `i `uc ]
"2771
[; ;MainBat.c: 2771:     SP2BRGL = 77;
[e = _SP2BRGL -> -> 77 `i `uc ]
"2772
[; ;MainBat.c: 2772:     SP2BRGH = 0;
[e = _SP2BRGH -> -> 0 `i `uc ]
"2773
[; ;MainBat.c: 2773:     PIE3bits.RC2IE = 1;
[e = . . _PIE3bits 0 7 -> -> 1 `i `uc ]
"2774
[; ;MainBat.c: 2774:     PIE3bits.TX2IE = 0;
[e = . . _PIE3bits 0 6 -> -> 0 `i `uc ]
"2779
[; ;MainBat.c: 2779: }
[e :UE 1962 ]
}
"2781
[; ;MainBat.c: 2781: void TRANS1(unsigned char data)
[v _TRANS1 `(v ~T0 @X0 1 ef1`uc ]
"2782
[; ;MainBat.c: 2782: {
{
[e :U _TRANS1 ]
"2781
[; ;MainBat.c: 2781: void TRANS1(unsigned char data)
[v _data `uc ~T0 @X0 1 r1 ]
"2782
[; ;MainBat.c: 2782: {
[f ]
"2784
[; ;MainBat.c: 2784:     while(0 == PIR3bits.TX1IF)
[e $U 1964  ]
[e :U 1965 ]
"2785
[; ;MainBat.c: 2785:     {
{
"2787
[; ;MainBat.c: 2787:     }
}
[e :U 1964 ]
"2784
[; ;MainBat.c: 2784:     while(0 == PIR3bits.TX1IF)
[e $ == -> 0 `i -> . . _PIR3bits 0 4 `i 1965  ]
[e :U 1966 ]
"2788
[; ;MainBat.c: 2788:  TX1REG=data;
[e = _TX1REG _data ]
"2789
[; ;MainBat.c: 2789: }
[e :UE 1963 ]
}
"2790
[; ;MainBat.c: 2790: void send_string_u1(char *s)
[v _send_string_u1 `(v ~T0 @X0 1 ef1`*uc ]
"2791
[; ;MainBat.c: 2791: {
{
[e :U _send_string_u1 ]
"2790
[; ;MainBat.c: 2790: void send_string_u1(char *s)
[v _s `*uc ~T0 @X0 1 r1 ]
"2791
[; ;MainBat.c: 2791: {
[f ]
"2792
[; ;MainBat.c: 2792:  while(*s)
[e $U 1968  ]
[e :U 1969 ]
"2793
[; ;MainBat.c: 2793:  {
{
"2794
[; ;MainBat.c: 2794:     TRANS1(*s++);
[e ( _TRANS1 (1 -> *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x `uc ]
"2795
[; ;MainBat.c: 2795:  }
}
[e :U 1968 ]
"2792
[; ;MainBat.c: 2792:  while(*s)
[e $ != -> *U _s `i -> 0 `i 1969  ]
[e :U 1970 ]
"2796
[; ;MainBat.c: 2796: }
[e :UE 1967 ]
}
"2798
[; ;MainBat.c: 2798: void TRANS2(unsigned char data)
[v _TRANS2 `(v ~T0 @X0 1 ef1`uc ]
"2799
[; ;MainBat.c: 2799: {
{
[e :U _TRANS2 ]
"2798
[; ;MainBat.c: 2798: void TRANS2(unsigned char data)
[v _data `uc ~T0 @X0 1 r1 ]
"2799
[; ;MainBat.c: 2799: {
[f ]
"2801
[; ;MainBat.c: 2801:     while(0 == PIR3bits.TX2IF)
[e $U 1972  ]
[e :U 1973 ]
"2802
[; ;MainBat.c: 2802:     {
{
"2804
[; ;MainBat.c: 2804:     }
}
[e :U 1972 ]
"2801
[; ;MainBat.c: 2801:     while(0 == PIR3bits.TX2IF)
[e $ == -> 0 `i -> . . _PIR3bits 0 6 `i 1973  ]
[e :U 1974 ]
"2805
[; ;MainBat.c: 2805:  TX2REG=data;
[e = _TX2REG _data ]
"2806
[; ;MainBat.c: 2806: }
[e :UE 1971 ]
}
"2807
[; ;MainBat.c: 2807: void send_string_u2(char *s)
[v _send_string_u2 `(v ~T0 @X0 1 ef1`*uc ]
"2808
[; ;MainBat.c: 2808: {
{
[e :U _send_string_u2 ]
"2807
[; ;MainBat.c: 2807: void send_string_u2(char *s)
[v _s `*uc ~T0 @X0 1 r1 ]
"2808
[; ;MainBat.c: 2808: {
[f ]
"2809
[; ;MainBat.c: 2809:  while(*s)
[e $U 1976  ]
[e :U 1977 ]
"2810
[; ;MainBat.c: 2810:  {
{
"2811
[; ;MainBat.c: 2811:     TRANS2(*s++);
[e ( _TRANS2 (1 -> *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x `uc ]
"2812
[; ;MainBat.c: 2812:  }
}
[e :U 1976 ]
"2809
[; ;MainBat.c: 2809:  while(*s)
[e $ != -> *U _s `i -> 0 `i 1977  ]
[e :U 1978 ]
"2813
[; ;MainBat.c: 2813: }
[e :UE 1975 ]
}
"2815
[; ;MainBat.c: 2815: void TRANSNUM(unsigned int iTemp)
[v _TRANSNUM `(v ~T0 @X0 1 ef1`ui ]
"2816
[; ;MainBat.c: 2816: {
{
[e :U _TRANSNUM ]
"2815
[; ;MainBat.c: 2815: void TRANSNUM(unsigned int iTemp)
[v _iTemp `ui ~T0 @X0 1 r1 ]
"2816
[; ;MainBat.c: 2816: {
[f ]
"2818
[; ;MainBat.c: 2818:     SendBuff[2] = 0x30 + (iTemp % 10);
[e = *U + &U _SendBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _SendBuff `ui `ux + -> -> 48 `i `ui % _iTemp -> -> 10 `i `ui ]
"2819
[; ;MainBat.c: 2819:     iTemp = iTemp / 10;
[e = _iTemp / _iTemp -> -> 10 `i `ui ]
"2820
[; ;MainBat.c: 2820:     SendBuff[1] = 0x30 + (iTemp % 10);
[e = *U + &U _SendBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _SendBuff `ui `ux + -> -> 48 `i `ui % _iTemp -> -> 10 `i `ui ]
"2821
[; ;MainBat.c: 2821:     iTemp = iTemp / 10;
[e = _iTemp / _iTemp -> -> 10 `i `ui ]
"2822
[; ;MainBat.c: 2822:     SendBuff[0] = 0x30 + iTemp % 10;
[e = *U + &U _SendBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _SendBuff `ui `ux + -> -> 48 `i `ui % _iTemp -> -> 10 `i `ui ]
"2824
[; ;MainBat.c: 2824:     for(i=0;i<3;i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 3 `i 1980  ]
[e $U 1981  ]
[e :U 1980 ]
"2825
[; ;MainBat.c: 2825:     {
{
"2826
[; ;MainBat.c: 2826:         TRANS1(SendBuff[i]);
[e ( _TRANS1 (1 -> *U + &U _SendBuff * -> _i `ux -> -> # *U &U _SendBuff `ui `ux `uc ]
"2827
[; ;MainBat.c: 2827:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 3 `i 1980  ]
[e :U 1981 ]
}
"2828
[; ;MainBat.c: 2828: }
[e :UE 1979 ]
}
"2829
[; ;MainBat.c: 2829: void TRANSNUM2(unsigned int iTemp2)
[v _TRANSNUM2 `(v ~T0 @X0 1 ef1`ui ]
"2830
[; ;MainBat.c: 2830: {
{
[e :U _TRANSNUM2 ]
"2829
[; ;MainBat.c: 2829: void TRANSNUM2(unsigned int iTemp2)
[v _iTemp2 `ui ~T0 @X0 1 r1 ]
"2830
[; ;MainBat.c: 2830: {
[f ]
"2833
[; ;MainBat.c: 2833:     SendBuff2[2] = (iTemp2 % 10)+'0';
[e = *U + &U _SendBuff2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _SendBuff2 `ui `ux -> + % _iTemp2 -> -> 10 `i `ui -> 48 `ui `uc ]
"2834
[; ;MainBat.c: 2834:     iTemp2 = iTemp2 / 10;
[e = _iTemp2 / _iTemp2 -> -> 10 `i `ui ]
"2835
[; ;MainBat.c: 2835:     SendBuff2[1] = (iTemp2 % 10)+'0';
[e = *U + &U _SendBuff2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _SendBuff2 `ui `ux -> + % _iTemp2 -> -> 10 `i `ui -> 48 `ui `uc ]
"2836
[; ;MainBat.c: 2836:     iTemp2 = iTemp2 / 10;
[e = _iTemp2 / _iTemp2 -> -> 10 `i `ui ]
"2837
[; ;MainBat.c: 2837:     SendBuff2[0] = (iTemp2 % 10)+'0';
[e = *U + &U _SendBuff2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _SendBuff2 `ui `ux -> + % _iTemp2 -> -> 10 `i `ui -> 48 `ui `uc ]
"2839
[; ;MainBat.c: 2839:     for(i=0;i<3;i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 3 `i 1984  ]
[e $U 1985  ]
[e :U 1984 ]
"2840
[; ;MainBat.c: 2840:     {
{
"2841
[; ;MainBat.c: 2841:         TRANS1(SendBuff2[i]);
[e ( _TRANS1 (1 *U + &U _SendBuff2 * -> _i `ux -> -> # *U &U _SendBuff2 `ui `ux ]
"2842
[; ;MainBat.c: 2842:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 3 `i 1984  ]
[e :U 1985 ]
}
"2843
[; ;MainBat.c: 2843: }
[e :UE 1983 ]
}
"2844
[; ;MainBat.c: 2844: void TIME(unsigned int iTemp2)
[v _TIME `(v ~T0 @X0 1 ef1`ui ]
"2845
[; ;MainBat.c: 2845: {
{
[e :U _TIME ]
"2844
[; ;MainBat.c: 2844: void TIME(unsigned int iTemp2)
[v _iTemp2 `ui ~T0 @X0 1 r1 ]
"2845
[; ;MainBat.c: 2845: {
[f ]
"2846
[; ;MainBat.c: 2846:    TimeBuf[1] = (iTemp2 % 10)+'0';
[e = *U + &U _TimeBuf * -> -> -> 1 `i `ui `ux -> -> # *U &U _TimeBuf `ui `ux -> + % _iTemp2 -> -> 10 `i `ui -> 48 `ui `uc ]
"2847
[; ;MainBat.c: 2847:    iTemp2 = iTemp2 / 10;
[e = _iTemp2 / _iTemp2 -> -> 10 `i `ui ]
"2848
[; ;MainBat.c: 2848:    TimeBuf[0] = (iTemp2 % 10)+'0';
[e = *U + &U _TimeBuf * -> -> -> 0 `i `ui `ux -> -> # *U &U _TimeBuf `ui `ux -> + % _iTemp2 -> -> 10 `i `ui -> 48 `ui `uc ]
"2850
[; ;MainBat.c: 2850:     for(i=0;i<2;i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 1988  ]
[e $U 1989  ]
[e :U 1988 ]
"2851
[; ;MainBat.c: 2851:     {
{
"2852
[; ;MainBat.c: 2852:         TRANS1(TimeBuf[i]);
[e ( _TRANS1 (1 *U + &U _TimeBuf * -> _i `ux -> -> # *U &U _TimeBuf `ui `ux ]
"2853
[; ;MainBat.c: 2853:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 1988  ]
[e :U 1989 ]
}
"2854
[; ;MainBat.c: 2854: }
[e :UE 1987 ]
}
[a 2C 65 80 80 32 68 73 83 67 79 78 78 69 67 84 0 ]
[a 1C 65 80 80 32 67 79 78 78 69 67 84 69 68 0 ]
[a 7C 72 114 58 0 ]
[a 8C 77 105 110 58 0 ]
[a 9C 83 101 99 58 0 ]
[a 12C 66 86 58 0 ]
[a 5C 65 86 58 0 ]
[a 14C 66 84 58 0 ]
[a 10C 86 82 58 0 ]
[a 13C 66 80 58 0 ]
[a 3C 77 58 0 ]
[a 4C 83 67 58 0 ]
[a 6C 65 67 58 0 ]
[a 11C 77 66 58 0 ]
