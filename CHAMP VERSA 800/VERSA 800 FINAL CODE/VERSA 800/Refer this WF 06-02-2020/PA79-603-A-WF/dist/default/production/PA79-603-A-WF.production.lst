

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Feb 06 17:33:42 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	idataBANK4,global,class=CODE,delta=2
     9                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	text42,local,class=CODE,merge=1,delta=2
    70                           	psect	text43,local,class=CODE,merge=1,delta=2
    71                           	psect	swtext1,local,class=CONST,delta=2
    72                           	dabs	1,0x620,48
    73                           	dabs	1,0x5C6,42
    74                           	dabs	1,0x2396,0,_pidParams2
    75                           	dabs	1,0x7E,2
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011A                     	;# 
   138  011B                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011F                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0191                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0194                     	;# 
   154  0195                     	;# 
   155  0196                     	;# 
   156  0197                     	;# 
   157  0199                     	;# 
   158  0199                     	;# 
   159  0199                     	;# 
   160  019A                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019D                     	;# 
   172  019D                     	;# 
   173  019D                     	;# 
   174  019E                     	;# 
   175  019E                     	;# 
   176  019E                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020D                     	;# 
   184  020E                     	;# 
   185  0210                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0214                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  028C                     	;# 
   203  028D                     	;# 
   204  028E                     	;# 
   205  0291                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0298                     	;# 
   210  0298                     	;# 
   211  0299                     	;# 
   212  029A                     	;# 
   213  030C                     	;# 
   214  030D                     	;# 
   215  030E                     	;# 
   216  0311                     	;# 
   217  0311                     	;# 
   218  0312                     	;# 
   219  0313                     	;# 
   220  038C                     	;# 
   221  038D                     	;# 
   222  038E                     	;# 
   223  0390                     	;# 
   224  0391                     	;# 
   225  0392                     	;# 
   226  0393                     	;# 
   227  0394                     	;# 
   228  0395                     	;# 
   229  0396                     	;# 
   230  0397                     	;# 
   231  0398                     	;# 
   232  0399                     	;# 
   233  039D                     	;# 
   234  039E                     	;# 
   235  039F                     	;# 
   236  0511                     	;# 
   237  0513                     	;# 
   238  051A                     	;# 
   239  0811                     	;# 
   240  0812                     	;# 
   241  0813                     	;# 
   242  0814                     	;# 
   243  0815                     	;# 
   244  0816                     	;# 
   245  0817                     	;# 
   246  0818                     	;# 
   247  0819                     	;# 
   248  081A                     	;# 
   249  081B                     	;# 
   250  081C                     	;# 
   251  081D                     	;# 
   252  081E                     	;# 
   253  081F                     	;# 
   254  0820                     	;# 
   255  0821                     	;# 
   256  0821                     	;# 
   257  0822                     	;# 
   258  0823                     	;# 
   259  0823                     	;# 
   260  0824                     	;# 
   261  0825                     	;# 
   262  0825                     	;# 
   263  0826                     	;# 
   264  0827                     	;# 
   265  0827                     	;# 
   266  0828                     	;# 
   267  0829                     	;# 
   268  082A                     	;# 
   269  082B                     	;# 
   270  082C                     	;# 
   271  082D                     	;# 
   272  082E                     	;# 
   273  082F                     	;# 
   274  0831                     	;# 
   275  0832                     	;# 
   276  0833                     	;# 
   277  0834                     	;# 
   278  0835                     	;# 
   279  0836                     	;# 
   280  0837                     	;# 
   281  0838                     	;# 
   282  0839                     	;# 
   283  083A                     	;# 
   284  083B                     	;# 
   285  083C                     	;# 
   286  083D                     	;# 
   287  083E                     	;# 
   288  083F                     	;# 
   289  0840                     	;# 
   290  0841                     	;# 
   291  0841                     	;# 
   292  0842                     	;# 
   293  0843                     	;# 
   294  0843                     	;# 
   295  0844                     	;# 
   296  0845                     	;# 
   297  0845                     	;# 
   298  0846                     	;# 
   299  0847                     	;# 
   300  0847                     	;# 
   301  0848                     	;# 
   302  0849                     	;# 
   303  084A                     	;# 
   304  084B                     	;# 
   305  084C                     	;# 
   306  084D                     	;# 
   307  084E                     	;# 
   308  084F                     	;# 
   309  0851                     	;# 
   310  0852                     	;# 
   311  0853                     	;# 
   312  0854                     	;# 
   313  0855                     	;# 
   314  0856                     	;# 
   315  0857                     	;# 
   316  0858                     	;# 
   317  0859                     	;# 
   318  085A                     	;# 
   319  085B                     	;# 
   320  085C                     	;# 
   321  085D                     	;# 
   322  085E                     	;# 
   323  085F                     	;# 
   324  0860                     	;# 
   325  0861                     	;# 
   326  0861                     	;# 
   327  0862                     	;# 
   328  0863                     	;# 
   329  0863                     	;# 
   330  0864                     	;# 
   331  0865                     	;# 
   332  0865                     	;# 
   333  0866                     	;# 
   334  0867                     	;# 
   335  0867                     	;# 
   336  0868                     	;# 
   337  0869                     	;# 
   338  086A                     	;# 
   339  086B                     	;# 
   340  086C                     	;# 
   341  086D                     	;# 
   342  086E                     	;# 
   343  086F                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;_pidParams2
   355                           
   356                           	psect	idataBANK0
   357  07FE                     __pidataBANK0:	
   358                           
   359                           ;initializer for _dispupdatef
   360  07FE  3401               	retlw	1
   361                           
   362                           	psect	idataBANK1
   363  07FF                     __pidataBANK1:	
   364                           
   365                           ;initializer for _key
   366  07FF  3458               	retlw	88
   367                           
   368                           	psect	idataBANK2
   369  18D7                     __pidataBANK2:	
   370                           
   371                           ;initializer for _diswin1
   372  18D7  3430               	retlw	48
   373  18D8  3430               	retlw	48
   374  18D9  3430               	retlw	48
   375  18DA  3430               	retlw	48
   376  18DB  3430               	retlw	48
   377  18DC  3430               	retlw	48
   378  18DD  3430               	retlw	48
   379  18DE  3430               	retlw	48
   380                           
   381                           ;initializer for _TORCH
   382  18DF  3458               	retlw	88
   383                           
   384                           ;initializer for _prevTORCH
   385  18E0  34FF               	retlw	255
   386                           
   387                           ;initializer for _prevkey
   388  18E1  345A               	retlw	90
   389                           
   390                           ;initializer for _wfspeedchangef
   391  18E2  3401               	retlw	1
   392                           
   393                           	psect	idataBANK3
   394  18E3                     __pidataBANK3:	
   395                           
   396                           ;initializer for _Tsampling
   397  18E3  3400               	retlw	0
   398  18E4  3480               	retlw	128
   399  18E5  343F               	retlw	63
   400                           
   401                           ;initializer for _Actual_amp
   402  18E6  34FF               	retlw	255
   403  18E7  34FF               	retlw	255
   404                           
   405                           ;initializer for _Actual_vtg
   406  18E8  34FF               	retlw	255
   407  18E9  34FF               	retlw	255
   408                           
   409                           ;initializer for _maxfmspeed
   410  18EA  3420               	retlw	32
   411  18EB  3403               	retlw	3
   412                           
   413                           ;initializer for _minfmspeed
   414  18EC  3432               	retlw	50
   415  18ED  3400               	retlw	0
   416                           
   417                           ;initializer for _scalefactor2
   418  18EE  3447               	retlw	71
   419  18EF  3400               	retlw	0
   420                           
   421                           ;initializer for _displayonf
   422  18F0  3401               	retlw	1
   423                           
   424                           ;initializer for _togglepin
   425  18F1  3401               	retlw	1
   426                           
   427                           	psect	idataBANK4
   428  0804                     __pidataBANK4:	
   429                           
   430                           ;initializer for _mahesh_test
   431  0804  3432               	retlw	50
   432  0805  3400               	retlw	0
   433                           
   434                           ;initializer for _parclength
   435  0806  34FF               	retlw	255
   436  0807  34FF               	retlw	255
   437                           
   438                           	psect	stringtext
   439  1800                     __pstringtext:	
   440  1800                     _lookup_table:	
   441  1800  343F               	retlw	63
   442  1801  3400               	retlw	0
   443  1802  3406               	retlw	6
   444  1803  3400               	retlw	0
   445  1804  345B               	retlw	91
   446  1805  3400               	retlw	0
   447  1806  344F               	retlw	79
   448  1807  3400               	retlw	0
   449  1808  3466               	retlw	102
   450  1809  3400               	retlw	0
   451  180A  346D               	retlw	109
   452  180B  3400               	retlw	0
   453  180C  347D               	retlw	125
   454  180D  3400               	retlw	0
   455  180E  3407               	retlw	7
   456  180F  3400               	retlw	0
   457  1810  347F               	retlw	127
   458  1811  3400               	retlw	0
   459  1812  346F               	retlw	111
   460  1813  3400               	retlw	0
   461  1814  3480               	retlw	128
   462  1815  3400               	retlw	0
   463  1816  3477               	retlw	119
   464  1817  3400               	retlw	0
   465  1818  347C               	retlw	124
   466  1819  3400               	retlw	0
   467  181A  3439               	retlw	57
   468  181B  3400               	retlw	0
   469  181C  345E               	retlw	94
   470  181D  3400               	retlw	0
   471  181E  3479               	retlw	121
   472  181F  3400               	retlw	0
   473  1820  3471               	retlw	113
   474  1821  3400               	retlw	0
   475  1822  343D               	retlw	61
   476  1823  3400               	retlw	0
   477  1824  3476               	retlw	118
   478  1825  3400               	retlw	0
   479  1826  3406               	retlw	6
   480  1827  3400               	retlw	0
   481  1828  341E               	retlw	30
   482  1829  3400               	retlw	0
   483  182A  3470               	retlw	112
   484  182B  3400               	retlw	0
   485  182C  3438               	retlw	56
   486  182D  3400               	retlw	0
   487  182E  3455               	retlw	85
   488  182F  3400               	retlw	0
   489  1830  3454               	retlw	84
   490  1831  3400               	retlw	0
   491  1832  343F               	retlw	63
   492  1833  3400               	retlw	0
   493  1834  3473               	retlw	115
   494  1835  3400               	retlw	0
   495  1836  3467               	retlw	103
   496  1837  3400               	retlw	0
   497  1838  3450               	retlw	80
   498  1839  3400               	retlw	0
   499  183A  346D               	retlw	109
   500  183B  3400               	retlw	0
   501  183C  3478               	retlw	120
   502  183D  3400               	retlw	0
   503  183E  341C               	retlw	28
   504  183F  3400               	retlw	0
   505  1840  343E               	retlw	62
   506  1841  3400               	retlw	0
   507  1842  346A               	retlw	106
   508  1843  3400               	retlw	0
   509  1844  3468               	retlw	104
   510  1845  3400               	retlw	0
   511  1846  346E               	retlw	110
   512  1847  3400               	retlw	0
   513  1848  3489               	retlw	137
   514  1849  3400               	retlw	0
   515  184A  3400               	retlw	0
   516  184B  3400               	retlw	0
   517  184C  3440               	retlw	64
   518  184D  3400               	retlw	0
   519  184E  34FF               	retlw	255
   520  184F  3400               	retlw	0
   521  1850  3400               	retlw	0
   522  1851  3400               	retlw	0
   523  1852  3400               	retlw	0
   524  1853  3400               	retlw	0
   525  1854  3400               	retlw	0
   526  1855  3400               	retlw	0
   527  1856  3400               	retlw	0
   528  1857  3400               	retlw	0
   529  1858                     __end_of_lookup_table:	
   530  1858                     _Displayarr:	
   531  1858  343F               	retlw	63
   532  1859  3400               	retlw	0
   533  185A  3406               	retlw	6
   534  185B  3400               	retlw	0
   535  185C  345B               	retlw	91
   536  185D  3400               	retlw	0
   537  185E  344F               	retlw	79
   538  185F  3400               	retlw	0
   539  1860  3466               	retlw	102
   540  1861  3400               	retlw	0
   541  1862  346D               	retlw	109
   542  1863  3400               	retlw	0
   543  1864  347D               	retlw	125
   544  1865  3400               	retlw	0
   545  1866  3407               	retlw	7
   546  1867  3400               	retlw	0
   547  1868  347F               	retlw	127
   548  1869  3400               	retlw	0
   549  186A  346F               	retlw	111
   550  186B  3400               	retlw	0
   551  186C  34FF               	retlw	255
   552  186D  3400               	retlw	0
   553  186E                     __end_of_Displayarr:	
   554  000B                     _INTCONbits	set	11
   555  0011                     _PIR1	set	17
   556  0011                     _PIR1bits	set	17
   557  0012                     _PIR2bits	set	18
   558  000C                     _PORTA	set	12
   559  000C                     _PORTAbits	set	12
   560  000D                     _PORTB	set	13
   561  000E                     _PORTC	set	14
   562  000E                     _PORTCbits	set	14
   563  001B                     _PR2	set	27
   564  0018                     _T1CON	set	24
   565  001C                     _T2CONbits	set	28
   566  0015                     _TMR0	set	21
   567  0017                     _TMR1H	set	23
   568  0016                     _TMR1L	set	22
   569  0095                     _OPTION_REGbits	set	149
   570  0099                     _OSCCONbits	set	153
   571  0098                     _OSCTUNEbits	set	152
   572  0091                     _PIE1bits	set	145
   573  0092                     _PIE2bits	set	146
   574  008C                     _TRISA	set	140
   575  008C                     _TRISAbits	set	140
   576  008D                     _TRISB	set	141
   577  008E                     _TRISC	set	142
   578  008E                     _TRISCbits	set	142
   579  010C                     _LATAbits	set	268
   580  010D                     _LATB	set	269
   581  010D                     _LATBbits	set	269
   582  010E                     _LATCbits	set	270
   583  018C                     _ANSELA	set	396
   584  018D                     _ANSELB	set	397
   585  019F                     _BAUDCTLbits	set	415
   586  0199                     _RCREG	set	409
   587  019D                     _RCSTAbits	set	413
   588  019B                     _SPBRG	set	411
   589  019A                     _TXREG	set	410
   590  019E                     _TXSTA	set	414
   591  019E                     _TXSTAbits	set	414
   592  0293                     _CCP1CONbits	set	659
   593  029A                     _CCP2CONbits	set	666
   594  0291                     _CCPR1L	set	657
   595  0299                     _CCPR2H	set	665
   596  0298                     _CCPR2L	set	664
   597                           
   598                           ; #config settings
   599  0000                     
   600                           	psect	cinit
   601  04EE                     start_initialization:	
   602  04EE                     __initialization:		;BIGRAM
   603                           
   604                           ; Clear objects allocated to BIGRAM
   605  04EE  3096               	movlw	low (0+9110)
   606  04EF  0084               	movwf	4
   607  04F0  3023               	movlw	high (0+9110)
   608  04F1  0085               	movwf	5
   609  04F2  305A               	movlw	90
   610  04F3  00FE               	movwf	btemp
   611  04F4  3000               	movlw	0
   612  04F5  00FF               	movwf	btemp+1
   613  04F6  3198  20CB  3184   	fcall	clear_ram0
   614                           
   615                           ; Clear objects allocated to BANK0
   616  04F9  3054               	movlw	low __pbssBANK0
   617  04FA  0084               	movwf	4
   618  04FB  3000               	movlw	high __pbssBANK0
   619  04FC  0085               	movwf	5
   620  04FD  301B               	movlw	27
   621  04FE  00FE               	movwf	btemp
   622  04FF  3000               	movlw	0
   623  0500  00FF               	movwf	btemp+1
   624  0501  3198  20CB  3184   	fcall	clear_ram0
   625                           
   626                           ; Clear objects allocated to BANK2
   627  0504  3020               	movlw	low __pbssBANK2
   628  0505  0084               	movwf	4
   629  0506  3001               	movlw	high __pbssBANK2
   630  0507  0085               	movwf	5
   631  0508  3044               	movlw	68
   632  0509  00FE               	movwf	btemp
   633  050A  3000               	movlw	0
   634  050B  00FF               	movwf	btemp+1
   635  050C  3198  20CB  3184   	fcall	clear_ram0
   636                           
   637                           ; Clear objects allocated to BANK3
   638  050F  30A0               	movlw	low __pbssBANK3
   639  0510  0084               	movwf	4
   640  0511  3001               	movlw	high __pbssBANK3
   641  0512  0085               	movwf	5
   642  0513  3040               	movlw	64
   643  0514  00FE               	movwf	btemp
   644  0515  3000               	movlw	0
   645  0516  00FF               	movwf	btemp+1
   646  0517  3198  20CB  3184   	fcall	clear_ram0
   647                           
   648                           ; Clear objects allocated to BANK4
   649  051A  3020               	movlw	low __pbssBANK4
   650  051B  0084               	movwf	4
   651  051C  3002               	movlw	high __pbssBANK4
   652  051D  0085               	movwf	5
   653  051E  3040               	movlw	64
   654  051F  00FE               	movwf	btemp
   655  0520  3000               	movlw	0
   656  0521  00FF               	movwf	btemp+1
   657  0522  3198  20CB  3184   	fcall	clear_ram0
   658                           
   659                           ; Clear objects allocated to BANK5
   660  0525  30A0               	movlw	low __pbssBANK5
   661  0526  0084               	movwf	4
   662  0527  3002               	movlw	high __pbssBANK5
   663  0528  0085               	movwf	5
   664  0529  3018               	movlw	24
   665  052A  00FE               	movwf	btemp
   666  052B  3000               	movlw	0
   667  052C  00FF               	movwf	btemp+1
   668  052D  3198  20CB  3184   	fcall	clear_ram0
   669                           
   670                           ; Clear objects allocated to BANK6
   671  0530  3020               	movlw	low __pbssBANK6
   672  0531  0084               	movwf	4
   673  0532  3003               	movlw	high __pbssBANK6
   674  0533  0085               	movwf	5
   675  0534  3049               	movlw	73
   676  0535  00FE               	movwf	btemp
   677  0536  3000               	movlw	0
   678  0537  00FF               	movwf	btemp+1
   679  0538  3198  20CB  3184   	fcall	clear_ram0
   680                           
   681                           ; Initialize objects allocated to BANK0
   682  053B  3187  27FE  3184   	fcall	__pidataBANK0	;fetch initializer
   683  053E  00EF               	movwf	__pdataBANK0& (0+127)
   684                           
   685                           ; Initialize objects allocated to BANK1
   686  053F  0021               	movlb	1	; select bank1
   687  0540  3187  27FF  3184   	fcall	__pidataBANK1	;fetch initializer
   688  0543  00EF               	movwf	__pdataBANK1& (0+127)
   689                           
   690                           ; Initialize objects allocated to BANK2
   691  0544  30D7               	movlw	low __pidataBANK2
   692  0545  0084               	movwf	4
   693  0546  3098               	movlw	(high __pidataBANK2)| (0+128)
   694  0547  0085               	movwf	5
   695  0548  3064               	movlw	low __pdataBANK2
   696  0549  0086               	movwf	6
   697  054A  3001               	movlw	high __pdataBANK2
   698  054B  0087               	movwf	7
   699  054C  3000               	movlw	0
   700  054D  00FF               	movwf	btemp+1
   701  054E  300C               	movlw	12
   702  054F  3198  20BF  3184   	fcall	init_ram
   703                           
   704                           ; Initialize objects allocated to BANK3
   705  0552  30E3               	movlw	low __pidataBANK3
   706  0553  0084               	movwf	4
   707  0554  3098               	movlw	(high __pidataBANK3)| (0+128)
   708  0555  0085               	movwf	5
   709  0556  30E0               	movlw	low __pdataBANK3
   710  0557  0086               	movwf	6
   711  0558  3001               	movlw	high __pdataBANK3
   712  0559  0087               	movwf	7
   713  055A  3000               	movlw	0
   714  055B  00FF               	movwf	btemp+1
   715  055C  300F               	movlw	15
   716  055D  3198  20BF  3184   	fcall	init_ram
   717                           
   718                           ; Initialize objects allocated to BANK4
   719  0560  3004               	movlw	low __pidataBANK4
   720  0561  0084               	movwf	4
   721  0562  3088               	movlw	(high __pidataBANK4)| (0+128)
   722  0563  0085               	movwf	5
   723  0564  3060               	movlw	low __pdataBANK4
   724  0565  0086               	movwf	6
   725  0566  3002               	movlw	high __pdataBANK4
   726  0567  0087               	movwf	7
   727  0568  3000               	movlw	0
   728  0569  00FF               	movwf	btemp+1
   729  056A  3004               	movlw	4
   730  056B  3198  20BF         	fcall	init_ram
   731  056D                     end_of_initialization:	
   732                           ;End of C runtime variable initialization code
   733                           
   734  056D                     __end_of__initialization:	
   735  056D  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   736  056E  0020               	movlb	0
   737  056F  3189  2952         	ljmp	_main	;jump to C main() function
   738                           
   739                           	psect	bssBANK0
   740  0054                     __pbssBANK0:	
   741  0054                     _new1:	
   742  0054                     	ds	2
   743  0056                     _new2:	
   744  0056                     	ds	2
   745  0058                     _setvoltage:	
   746  0058                     	ds	2
   747  005A                     _setwirespeed:	
   748  005A                     	ds	2
   749  005C                     _digit:	
   750  005C                     	ds	1
   751  005D                     _encod1:	
   752  005D                     	ds	1
   753  005E                     _encod2:	
   754  005E                     	ds	1
   755  005F                     _i:	
   756  005F                     	ds	1
   757  0060                     _minuspara2:	
   758  0060                     	ds	1
   759  0061                     _onesecf:	
   760  0061                     	ds	1
   761  0062                     _portbstatus:	
   762  0062                     	ds	1
   763  0063                     _rxdata:	
   764  0063                     	ds	1
   765  0064                     _startptr1:	
   766  0064                     	ds	1
   767  0065                     _temp:	
   768  0065                     	ds	1
   769  0066                     _weldmode:	
   770  0066                     	ds	1
   771  0067                     _TypeU:	
   772  0067                     	ds	2
   773  0069                     _newsetwirespeed:	
   774  0069                     	ds	2
   775  006B                     _TypeDP:	
   776  006B                     	ds	1
   777  006C                     _inchcnt:	
   778  006C                     	ds	1
   779  006D                     _psstatusu:	
   780  006D                     	ds	1
   781  006E                     _wfstatusu:	
   782  006E                     	ds	1
   783                           
   784                           	psect	dataBANK0
   785  006F                     __pdataBANK0:	
   786  006F                     _dispupdatef:	
   787  006F                     	ds	1
   788                           
   789                           	psect	dataBANK1
   790  00EF                     __pdataBANK1:	
   791  00EF                     _key:	
   792  00EF                     	ds	1
   793                           
   794                           	psect	bssBANK2
   795  0120                     __pbssBANK2:	
   796  0120                     _Fltpfreq:	
   797  0120                     	ds	2
   798  0122                     _ijk:	
   799  0122                     	ds	2
   800  0124                     _lmn:	
   801  0124                     	ds	2
   802  0126                     _scaled_baseval2:	
   803  0126                     	ds	2
   804  0128                     _setcurrent:	
   805  0128                     	ds	2
   806  012A                     _statusptr1:	
   807  012A                     	ds	2
   808  012C                     _Count:	
   809  012C                     	ds	1
   810  012D                     _OneH:	
   811  012D                     	ds	1
   812  012E                     _OneL:	
   813  012E                     	ds	1
   814  012F                     _TwoH:	
   815  012F                     	ds	1
   816  0130                     _TwoL:	
   817  0130                     	ds	1
   818  0131                     _adaptivepidf:	
   819  0131                     	ds	1
   820  0132                     _arrptr:	
   821  0132                     	ds	1
   822  0133                     _cEditfg:	
   823  0133                     	ds	1
   824  0134                     _cWf2t4tmodefg:	
   825  0134                     	ds	1
   826  0135                     _chksum:	
   827  0135                     	ds	1
   828  0136                     _closeloopf:	
   829  0136                     	ds	1
   830  0137                     _comm_error_count:	
   831  0137                     	ds	1
   832  0138                     _count_1msec:	
   833  0138                     	ds	1
   834  0139                     _count_2ms:	
   835  0139                     	ds	1
   836  013A                     _crater_speed:	
   837  013A                     	ds	1
   838  013B                     _creep_speed:	
   839  013B                     	ds	1
   840  013C                     _cyclestrtf:	
   841  013C                     	ds	1
   842  013D                     _enccount:	
   843  013D                     	ds	1
   844  013E                     _error8:	
   845  013E                     	ds	1
   846  013F                     _firstpulse1:	
   847  013F                     	ds	1
   848  0140                     _firstpulse2:	
   849  0140                     	ds	1
   850  0141                     _gaschkfg:	
   851  0141                     	ds	1
   852  0142                     _kpressread:	
   853  0142                     	ds	1
   854  0143                     _mili1_100:	
   855  0143                     	ds	1
   856  0144                     _mili2_100:	
   857  0144                     	ds	1
   858  0145                     _minus111:	
   859  0145                     	ds	1
   860  0146                     _minus222:	
   861  0146                     	ds	1
   862  0147                     _minuscount1:	
   863  0147                     	ds	1
   864  0148                     _minuscount2:	
   865  0148                     	ds	1
   866  0149                     _minuspara1:	
   867  0149                     	ds	1
   868  014A                     _pcount:	
   869  014A                     	ds	1
   870  014B                     _plus111:	
   871  014B                     	ds	1
   872  014C                     _plus222:	
   873  014C                     	ds	1
   874  014D                     _pluscount1:	
   875  014D                     	ds	1
   876  014E                     _pluscount2:	
   877  014E                     	ds	1
   878  014F                     _pluspara1:	
   879  014F                     	ds	1
   880  0150                     _pluspara2:	
   881  0150                     	ds	1
   882  0151                     _pportb:	
   883  0151                     	ds	1
   884  0152                     _read_enc1f:	
   885  0152                     	ds	1
   886  0153                     _recchksum:	
   887  0153                     	ds	1
   888  0154                     _secondpulse1:	
   889  0154                     	ds	1
   890  0155                     _secondpulse2:	
   891  0155                     	ds	1
   892  0156                     _send_statusf:	
   893  0156                     	ds	1
   894  0157                     _tans:	
   895  0157                     	ds	1
   896  0158                     _torchstatus1:	
   897  0158                     	ds	1
   898  0159                     _torchstatus2:	
   899  0159                     	ds	1
   900  015A                     _transmitonf:	
   901  015A                     	ds	1
   902  015B                     _universal_error:	
   903  015B                     	ds	1
   904  015C                     _universal_error_latch:	
   905  015C                     	ds	1
   906  015D                     _avgpperiod:	
   907  015D                     	ds	2
   908  015F                     _erroru:	
   909  015F                     	ds	2
   910  0161                     _pfreq:	
   911  0161                     	ds	2
   912  0163                     _commandu:	
   913  0163                     	ds	1
   914                           
   915                           	psect	dataBANK2
   916  0164                     __pdataBANK2:	
   917  0164                     _diswin1:	
   918  0164                     	ds	8
   919  016C                     _TORCH:	
   920  016C                     	ds	1
   921  016D                     _prevTORCH:	
   922  016D                     	ds	1
   923  016E                     _prevkey:	
   924  016E                     	ds	1
   925  016F                     _wfspeedchangef:	
   926  016F                     	ds	1
   927                           
   928                           	psect	bssBANK3
   929  01A0                     __pbssBANK3:	
   930  01A0                     _error_new:	
   931  01A0                     	ds	3
   932  01A3                     _error_old:	
   933  01A3                     	ds	3
   934  01A6                     _integral_new:	
   935  01A6                     	ds	3
   936  01A9                     _integral_old:	
   937  01A9                     	ds	3
   938  01AC                     _Hi_setppwm:	
   939  01AC                     	ds	2
   940  01AE                     _Lo_setppwm:	
   941  01AE                     	ds	2
   942  01B0                     _One:	
   943  01B0                     	ds	2
   944  01B2                     _Total_Count:	
   945  01B2                     	ds	2
   946  01B4                     _Two:	
   947  01B4                     	ds	2
   948  01B6                     _count_1ms:	
   949  01B6                     	ds	2
   950  01B8                     _delinch:	
   951  01B8                     	ds	2
   952  01BA                     _delinch1:	
   953  01BA                     	ds	2
   954  01BC                     _igascntr:	
   955  01BC                     	ds	2
   956  01BE                     _old1:	
   957  01BE                     	ds	2
   958  01C0                     _old2:	
   959  01C0                     	ds	2
   960  01C2                     _pperiod:	
   961  01C2                     	ds	2
   962  01C4                     _prevsetcurrent:	
   963  01C4                     	ds	2
   964  01C6                     _prevsetvoltage:	
   965  01C6                     	ds	2
   966  01C8                     _prevsetwirespeed:	
   967  01C8                     	ds	2
   968  01CA                     _recpsstatus:	
   969  01CA                     	ds	2
   970  01CC                     _recstatus:	
   971  01CC                     	ds	2
   972  01CE                     _rel_wirespeed:	
   973  01CE                     	ds	2
   974  01D0                     _setpfreq:	
   975  01D0                     	ds	2
   976  01D2                     _Tx_ptr:	
   977  01D2                     	ds	1
   978  01D3                     _capintervalf:	
   979  01D3                     	ds	1
   980  01D4                     _closeloop1f:	
   981  01D4                     	ds	1
   982  01D5                     _count_pid:	
   983  01D5                     	ds	1
   984  01D6                     _error4:	
   985  01D6                     	ds	1
   986  01D7                     _error_code1:	
   987  01D7                     	ds	1
   988  01D8                     _error_code2:	
   989  01D8                     	ds	1
   990  01D9                     _fixintervalf:	
   991  01D9                     	ds	1
   992  01DA                     _inchkeyon:	
   993  01DA                     	ds	1
   994  01DB                     _softstartf:	
   995  01DB                     	ds	1
   996  01DC                     _torchonf:	
   997  01DC                     	ds	1
   998  01DD                     _txonf:	
   999  01DD                     	ds	1
  1000  01DE                     _updatedispf:	
  1001  01DE                     	ds	1
  1002  01DF                     _wfstatusbyte:	
  1003  01DF                     	ds	1
  1004                           
  1005                           	psect	dataBANK3
  1006  01E0                     __pdataBANK3:	
  1007  01E0                     _Tsampling:	
  1008  01E0                     	ds	3
  1009  01E3                     _Actual_amp:	
  1010  01E3                     	ds	2
  1011  01E5                     _Actual_vtg:	
  1012  01E5                     	ds	2
  1013  01E7                     _maxfmspeed:	
  1014  01E7                     	ds	2
  1015  01E9                     _minfmspeed:	
  1016  01E9                     	ds	2
  1017  01EB                     _scalefactor2:	
  1018  01EB                     	ds	2
  1019  01ED                     _displayonf:	
  1020  01ED                     	ds	1
  1021  01EE                     _togglepin:	
  1022  01EE                     	ds	1
  1023                           
  1024                           	psect	bssBANK4
  1025  0220                     __pbssBANK4:	
  1026  0220                     _Total_Period:	
  1027  0220                     	ds	4
  1028  0224                     _controller_out:	
  1029  0224                     	ds	3
  1030  0227                     _minoutmax:	
  1031  0227                     	ds	3
  1032  022A                     _count_transms:	
  1033  022A                     	ds	2
  1034  022C                     _creepspeed:	
  1035  022C                     	ds	2
  1036  022E                     _delay:	
  1037  022E                     	ds	2
  1038  0230                     _disp1term:	
  1039  0230                     	ds	2
  1040  0232                     _disp2term:	
  1041  0232                     	ds	2
  1042  0234                     _disp3term:	
  1043  0234                     	ds	2
  1044  0236                     _disp4term:	
  1045  0236                     	ds	2
  1046  0238                     _disparclength:	
  1047  0238                     	ds	2
  1048  023A                     _gapfreq:	
  1049  023A                     	ds	2
  1050  023C                     _iTest:	
  1051  023C                     	ds	2
  1052  023E                     _iii:	
  1053  023E                     	ds	2
  1054  0240                     _openloopcnt:	
  1055  0240                     	ds	2
  1056  0242                     _prevFltpfreq:	
  1057  0242                     	ds	2
  1058  0244                     _value1:	
  1059  0244                     	ds	2
  1060  0246                     _value2:	
  1061  0246                     	ds	2
  1062  0248                     _value3:	
  1063  0248                     	ds	2
  1064  024A                     _pstowfstru:	
  1065  024A                     	ds	22
  1066                           
  1067                           	psect	dataBANK4
  1068  0260                     __pdataBANK4:	
  1069  0260                     _mahesh_test:	
  1070  0260                     	ds	2
  1071  0262                     _parclength:	
  1072  0262                     	ds	2
  1073                           
  1074                           	psect	bssBANK5
  1075  02A0                     __pbssBANK5:	
  1076  02A0                     _rec_arr:	
  1077  02A0                     	ds	24
  1078                           
  1079                           	psect	bssBANK6
  1080  0320                     __pbssBANK6:	
  1081  0320                     _PID_sParams:	
  1082  0320                     	ds	73
  1083                           
  1084                           	psect	clrtext
  1085  18CB                     clear_ram0:	
  1086                           ;	Called with FSR0 containing the base address, and
  1087                           ;	btemp/btemp+1 has the size to clear
  1088                           
  1089  18CB  0064               	clrwdt	;clear the watchdog before getting into this loop
  1090  18CC                     clrloop0:	
  1091  18CC  0180               	clrf	0	;clear RAM location pointed to by FSR
  1092  18CD  3101               	addfsr 0,1
  1093  18CE  3001               	movlw	1
  1094  18CF  02FE               	subwf	126,f
  1095  18D0  3000               	movlw	0
  1096  18D1  3BFF               	subwfb	127,f
  1097  18D2  087F               	movf	127,w
  1098  18D3  047E               	iorwf	126,w
  1099  18D4  1903               	btfsc	3,2
  1100  18D5  3400               	retlw	0	;all done for this memory range, return
  1101  18D6  28CC               	goto	clrloop0	;have we reached the end yet?
  1102                           
  1103                           	psect	inittext
  1104  18BF                     init_ram:	
  1105  18BF  00FE               	movwf	126
  1106  18C0                     initloop:	
  1107  18C0  0012               	moviw fsr0++
  1108  18C1  001E               	movwi fsr1++
  1109  18C2  3001               	movlw	1
  1110  18C3  02FE               	subwf	126,f
  1111  18C4  3000               	movlw	0
  1112  18C5  3BFF               	subwfb	127,f
  1113  18C6  087F               	movf	127,w
  1114  18C7  047E               	iorwf	126,w
  1115  18C8  1903               	btfsc	3,2
  1116  18C9  3400               	retlw	0
  1117  18CA  28C0               	goto	initloop
  1118                           
  1119                           	psect	cstackBANK1
  1120  00A0                     __pcstackBANK1:	
  1121  00A0                     ??_enc1_port:	
  1122  00A0                     ??_enc2_port:	
  1123                           ; 0 bytes @ 0x0
  1124                           
  1125  00A0                     ??_system_init:	
  1126                           ; 0 bytes @ 0x0
  1127                           
  1128  00A0                     ??_portpin_init:	
  1129                           ; 0 bytes @ 0x0
  1130                           
  1131  00A0                     ??_Timer0_init:	
  1132                           ; 0 bytes @ 0x0
  1133                           
  1134  00A0                     ??_PWM_init:	
  1135                           ; 0 bytes @ 0x0
  1136                           
  1137  00A0                     ??_capture_init:	
  1138                           ; 0 bytes @ 0x0
  1139                           
  1140  00A0                     ??_uart_init:	
  1141                           ; 0 bytes @ 0x0
  1142                           
  1143  00A0                     ?_Delayms:	
  1144                           ; 0 bytes @ 0x0
  1145                           
  1146  00A0                     ??_Send_Byte:	
  1147                           ; 0 bytes @ 0x0
  1148                           
  1149  00A0                     ?___wmul:	
  1150                           ; 0 bytes @ 0x0
  1151                           
  1152  00A0                     ?___lwdiv:	
  1153                           ; 2 bytes @ 0x0
  1154                           
  1155  00A0                     ?___lwmod:	
  1156                           ; 2 bytes @ 0x0
  1157                           
  1158  00A0                     ?___ftpack:	
  1159                           ; 2 bytes @ 0x0
  1160                           
  1161  00A0                     ?___ftneg:	
  1162                           ; 3 bytes @ 0x0
  1163                           
  1164  00A0                     ?___aldiv:	
  1165                           ; 3 bytes @ 0x0
  1166                           
  1167  00A0                     Send_Byte@transbyte:	
  1168                           ; 4 bytes @ 0x0
  1169                           
  1170  00A0                     Delayms@delay:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  00A0                     ___wmul@multiplier:	
  1174                           ; 2 bytes @ 0x0
  1175                           
  1176  00A0                     ___lwdiv@divisor:	
  1177                           ; 2 bytes @ 0x0
  1178                           
  1179  00A0                     ___lwmod@divisor:	
  1180                           ; 2 bytes @ 0x0
  1181                           
  1182  00A0                     ___ftpack@arg:	
  1183                           ; 2 bytes @ 0x0
  1184                           
  1185  00A0                     ___ftneg@f1:	
  1186                           ; 3 bytes @ 0x0
  1187                           
  1188  00A0                     ___aldiv@divisor:	
  1189                           ; 3 bytes @ 0x0
  1190                           
  1191                           
  1192                           ; 4 bytes @ 0x0
  1193  00A0                     	ds	1
  1194  00A1                     ??_send_status:	
  1195  00A1                     ??_transmittops:	
  1196                           ; 0 bytes @ 0x1
  1197                           
  1198                           
  1199                           ; 0 bytes @ 0x1
  1200  00A1                     	ds	1
  1201  00A2                     ??_Delayms:	
  1202  00A2                     Delayms@xxx:	
  1203                           ; 0 bytes @ 0x2
  1204                           
  1205  00A2                     ___wmul@multiplicand:	
  1206                           ; 2 bytes @ 0x2
  1207                           
  1208  00A2                     ___lwdiv@dividend:	
  1209                           ; 2 bytes @ 0x2
  1210                           
  1211  00A2                     ___lwmod@dividend:	
  1212                           ; 2 bytes @ 0x2
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x2
  1216  00A2                     	ds	1
  1217  00A3                     ??___ftneg:	
  1218  00A3                     ___ftpack@exp:	
  1219                           ; 0 bytes @ 0x3
  1220                           
  1221  00A3                     enc2_port@portvalue:	
  1222                           ; 1 bytes @ 0x3
  1223                           
  1224                           
  1225                           ; 2 bytes @ 0x3
  1226  00A3                     	ds	1
  1227  00A4                     ??___wmul:	
  1228  00A4                     ??___lwdiv:	
  1229                           ; 0 bytes @ 0x4
  1230                           
  1231  00A4                     ??___lwmod:	
  1232                           ; 0 bytes @ 0x4
  1233                           
  1234  00A4                     ___ftpack@sign:	
  1235                           ; 0 bytes @ 0x4
  1236                           
  1237  00A4                     Delayms@yyy:	
  1238                           ; 1 bytes @ 0x4
  1239                           
  1240  00A4                     enc1_port@portvalue:	
  1241                           ; 2 bytes @ 0x4
  1242                           
  1243  00A4                     ___wmul@product:	
  1244                           ; 2 bytes @ 0x4
  1245                           
  1246  00A4                     ___aldiv@dividend:	
  1247                           ; 2 bytes @ 0x4
  1248                           
  1249                           
  1250                           ; 4 bytes @ 0x4
  1251  00A4                     	ds	1
  1252  00A5                     ??___ftpack:	
  1253  00A5                     ??_SCANENCODER2:	
  1254                           ; 0 bytes @ 0x5
  1255                           
  1256  00A5                     ___lwmod@counter:	
  1257                           ; 0 bytes @ 0x5
  1258                           
  1259  00A5                     ___lwdiv@quotient:	
  1260                           ; 1 bytes @ 0x5
  1261                           
  1262                           
  1263                           ; 2 bytes @ 0x5
  1264  00A5                     	ds	1
  1265  00A6                     ??_SCANENCODER1:	
  1266  00A6                     SCANENCODER2@result:	
  1267                           ; 0 bytes @ 0x6
  1268                           
  1269                           
  1270                           ; 1 bytes @ 0x6
  1271  00A6                     	ds	1
  1272  00A7                     SCANENCODER1@result:	
  1273  00A7                     ___lwdiv@counter:	
  1274                           ; 1 bytes @ 0x7
  1275                           
  1276                           
  1277                           ; 1 bytes @ 0x7
  1278  00A7                     	ds	1
  1279  00A8                     ?_disp_hex_window1:	
  1280  00A8                     ?_disp_hex_window2:	
  1281                           ; 0 bytes @ 0x8
  1282                           
  1283  00A8                     ??___aldiv:	
  1284                           ; 0 bytes @ 0x8
  1285                           
  1286  00A8                     ?___altoft:	
  1287                           ; 0 bytes @ 0x8
  1288                           
  1289  00A8                     ?___ftadd:	
  1290                           ; 3 bytes @ 0x8
  1291                           
  1292  00A8                     ?___lwtoft:	
  1293                           ; 3 bytes @ 0x8
  1294                           
  1295  00A8                     disp_hex_window1@hex_data:	
  1296                           ; 3 bytes @ 0x8
  1297                           
  1298  00A8                     disp_hex_window2@hex_data:	
  1299                           ; 2 bytes @ 0x8
  1300                           
  1301  00A8                     ___lwtoft@c:	
  1302                           ; 2 bytes @ 0x8
  1303                           
  1304  00A8                     ___ftadd@f1:	
  1305                           ; 2 bytes @ 0x8
  1306                           
  1307  00A8                     ___altoft@c:	
  1308                           ; 3 bytes @ 0x8
  1309                           
  1310                           
  1311                           ; 4 bytes @ 0x8
  1312  00A8                     	ds	1
  1313  00A9                     ___aldiv@counter:	
  1314                           
  1315                           ; 1 bytes @ 0x9
  1316  00A9                     	ds	1
  1317  00AA                     ??_disp_hex_window1:	
  1318  00AA                     ??_disp_hex_window2:	
  1319                           ; 0 bytes @ 0xA
  1320                           
  1321  00AA                     ___aldiv@sign:	
  1322                           ; 0 bytes @ 0xA
  1323                           
  1324                           
  1325                           ; 1 bytes @ 0xA
  1326  00AA                     	ds	1
  1327  00AB                     ??___lwtoft:	
  1328  00AB                     ___ftadd@f2:	
  1329                           ; 0 bytes @ 0xB
  1330                           
  1331  00AB                     ___aldiv@quotient:	
  1332                           ; 3 bytes @ 0xB
  1333                           
  1334                           
  1335                           ; 4 bytes @ 0xB
  1336  00AB                     	ds	1
  1337  00AC                     ??___altoft:	
  1338                           
  1339                           ; 0 bytes @ 0xC
  1340  00AC                     	ds	2
  1341  00AE                     ??___ftadd:	
  1342  00AE                     ___altoft@exp:	
  1343                           ; 0 bytes @ 0xE
  1344                           
  1345                           
  1346                           ; 1 bytes @ 0xE
  1347  00AE                     	ds	1
  1348  00AF                     ___altoft@sign:	
  1349                           
  1350                           ; 1 bytes @ 0xF
  1351  00AF                     	ds	1
  1352  00B0                     ?___ftge:	
  1353  00B0                     ___ftge@ff1:	
  1354                           ; 1 bit 
  1355                           
  1356                           
  1357                           ; 3 bytes @ 0x10
  1358  00B0                     	ds	2
  1359  00B2                     ___ftadd@sign:	
  1360                           
  1361                           ; 1 bytes @ 0x12
  1362  00B2                     	ds	1
  1363  00B3                     ___ftadd@exp2:	
  1364  00B3                     ___ftge@ff2:	
  1365                           ; 1 bytes @ 0x13
  1366                           
  1367                           
  1368                           ; 3 bytes @ 0x13
  1369  00B3                     	ds	1
  1370  00B4                     ___ftadd@exp1:	
  1371                           
  1372                           ; 1 bytes @ 0x14
  1373  00B4                     	ds	1
  1374  00B5                     ?___ftmul:	
  1375  00B5                     ___ftmul@f1:	
  1376                           ; 3 bytes @ 0x15
  1377                           
  1378                           
  1379                           ; 3 bytes @ 0x15
  1380  00B5                     	ds	1
  1381  00B6                     ??___ftge:	
  1382                           
  1383                           ; 0 bytes @ 0x16
  1384  00B6                     	ds	2
  1385  00B8                     ___ftmul@f2:	
  1386                           
  1387                           ; 3 bytes @ 0x18
  1388  00B8                     	ds	3
  1389  00BB                     ??___ftmul:	
  1390                           
  1391                           ; 0 bytes @ 0x1B
  1392  00BB                     	ds	4
  1393  00BF                     ___ftmul@exp:	
  1394                           
  1395                           ; 1 bytes @ 0x1F
  1396  00BF                     	ds	1
  1397  00C0                     ___ftmul@f3_as_product:	
  1398                           
  1399                           ; 3 bytes @ 0x20
  1400  00C0                     	ds	3
  1401  00C3                     ___ftmul@cntr:	
  1402                           
  1403                           ; 1 bytes @ 0x23
  1404  00C3                     	ds	1
  1405  00C4                     ___ftmul@sign:	
  1406                           
  1407                           ; 1 bytes @ 0x24
  1408  00C4                     	ds	1
  1409  00C5                     ?___ftdiv:	
  1410  00C5                     ?___fttol:	
  1411                           ; 3 bytes @ 0x25
  1412                           
  1413  00C5                     ___ftdiv@f2:	
  1414                           ; 4 bytes @ 0x25
  1415                           
  1416  00C5                     ___fttol@f1:	
  1417                           ; 3 bytes @ 0x25
  1418                           
  1419                           
  1420                           ; 3 bytes @ 0x25
  1421  00C5                     	ds	3
  1422  00C8                     ___ftdiv@f1:	
  1423                           
  1424                           ; 3 bytes @ 0x28
  1425  00C8                     	ds	1
  1426  00C9                     ??___fttol:	
  1427                           
  1428                           ; 0 bytes @ 0x29
  1429  00C9                     	ds	2
  1430  00CB                     ??___ftdiv:	
  1431                           
  1432                           ; 0 bytes @ 0x2B
  1433  00CB                     	ds	2
  1434  00CD                     ___fttol@sign1:	
  1435                           
  1436                           ; 1 bytes @ 0x2D
  1437  00CD                     	ds	1
  1438  00CE                     ___fttol@lval:	
  1439                           
  1440                           ; 4 bytes @ 0x2E
  1441  00CE                     	ds	1
  1442  00CF                     ___ftdiv@cntr:	
  1443                           
  1444                           ; 1 bytes @ 0x2F
  1445  00CF                     	ds	1
  1446  00D0                     ___ftdiv@f3:	
  1447                           
  1448                           ; 3 bytes @ 0x30
  1449  00D0                     	ds	2
  1450  00D2                     ___fttol@exp1:	
  1451                           
  1452                           ; 1 bytes @ 0x32
  1453  00D2                     	ds	1
  1454  00D3                     ?_Update_PWM:	
  1455  00D3                     ___ftdiv@exp:	
  1456                           ; 0 bytes @ 0x33
  1457                           
  1458  00D3                     Update_PWM@setwsduty:	
  1459                           ; 1 bytes @ 0x33
  1460                           
  1461                           
  1462                           ; 2 bytes @ 0x33
  1463  00D3                     	ds	1
  1464  00D4                     ___ftdiv@sign:	
  1465                           
  1466                           ; 1 bytes @ 0x34
  1467  00D4                     	ds	1
  1468  00D5                     ??_Update_PWM:	
  1469                           
  1470                           ; 0 bytes @ 0x35
  1471  00D5                     	ds	2
  1472  00D7                     Update_PWM@Temp1:	
  1473                           
  1474                           ; 2 bytes @ 0x37
  1475  00D7                     	ds	2
  1476  00D9                     Update_PWM@Dutycnt:	
  1477                           
  1478                           ; 2 bytes @ 0x39
  1479  00D9                     	ds	2
  1480  00DB                     ??_key_application:	
  1481  00DB                     ??_detect_display_error:	
  1482                           ; 0 bytes @ 0x3B
  1483                           
  1484  00DB                     ??_Adaptive_base_pid:	
  1485                           ; 0 bytes @ 0x3B
  1486                           
  1487                           
  1488                           ; 0 bytes @ 0x3B
  1489  00DB                     	ds	2
  1490  00DD                     key_application@keypress:	
  1491                           
  1492                           ; 1 bytes @ 0x3D
  1493  00DD                     	ds	7
  1494  00E4                     _Adaptive_base_pid$1776:	
  1495                           
  1496                           ; 3 bytes @ 0x44
  1497  00E4                     	ds	3
  1498  00E7                     _Adaptive_base_pid$1777:	
  1499                           
  1500                           ; 3 bytes @ 0x47
  1501  00E7                     	ds	3
  1502  00EA                     _Adaptive_base_pid$1778:	
  1503                           
  1504                           ; 3 bytes @ 0x4A
  1505  00EA                     	ds	3
  1506  00ED                     ??_main:	
  1507                           
  1508                           ; 0 bytes @ 0x4D
  1509  00ED                     	ds	2
  1510                           
  1511                           	psect	cstackCOMMON
  1512  0070                     __pcstackCOMMON:	
  1513  0070                     ?_system_init:	
  1514  0070                     ?_portpin_init:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_Timer0_init:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_PWM_init:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_capture_init:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_uart_init:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_send_status:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_transmittops:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_key_application:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_detect_display_error:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_Display:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ??_Display:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_Adaptive_base_pid:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_ISR_Function:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?_main:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0070                     ?_Send_Byte:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0070                     ?i1_Update_PWM:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0070                     ?_enc1_port:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0070                     ?_enc2_port:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_SCANENCODER1:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_SCANENCODER2:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?i1___ftpack:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?i1___aldiv:	
  1578                           ; 3 bytes @ 0x0
  1579                           
  1580  0070                     i1Update_PWM@setwsduty:	
  1581                           ; 4 bytes @ 0x0
  1582                           
  1583  0070                     i1___ftpack@arg:	
  1584                           ; 2 bytes @ 0x0
  1585                           
  1586  0070                     i1___aldiv@divisor:	
  1587                           ; 3 bytes @ 0x0
  1588                           
  1589                           
  1590                           ; 4 bytes @ 0x0
  1591  0070                     	ds	2
  1592  0072                     ??i1_Update_PWM:	
  1593                           
  1594                           ; 0 bytes @ 0x2
  1595  0072                     	ds	1
  1596  0073                     i1___ftpack@exp:	
  1597                           
  1598                           ; 1 bytes @ 0x3
  1599  0073                     	ds	1
  1600  0074                     i1___ftpack@sign:	
  1601  0074                     i1Update_PWM@Temp1:	
  1602                           ; 1 bytes @ 0x4
  1603                           
  1604  0074                     i1___aldiv@dividend:	
  1605                           ; 2 bytes @ 0x4
  1606                           
  1607                           
  1608                           ; 4 bytes @ 0x4
  1609  0074                     	ds	1
  1610  0075                     ??i1___ftpack:	
  1611                           
  1612                           ; 0 bytes @ 0x5
  1613  0075                     	ds	1
  1614  0076                     i1Update_PWM@Dutycnt:	
  1615                           
  1616                           ; 2 bytes @ 0x6
  1617  0076                     	ds	2
  1618  0078                     ??i1___aldiv:	
  1619  0078                     ?i1___lwtoft:	
  1620                           ; 0 bytes @ 0x8
  1621                           
  1622  0078                     i1___lwtoft@c:	
  1623                           ; 3 bytes @ 0x8
  1624                           
  1625                           
  1626                           ; 2 bytes @ 0x8
  1627  0078                     	ds	3
  1628  007B                     ??i1___lwtoft:	
  1629                           
  1630                           ; 0 bytes @ 0xB
  1631  007B                     	ds	1
  1632  007C                     _ISR_Function$1183:	
  1633                           
  1634                           ; 2 bytes @ 0xC
  1635  007C                     	ds	2
  1636                           
  1637                           	psect	cstackBANK0
  1638  0020                     __pcstackBANK0:	
  1639  0020                     ?i1___ftdiv:	
  1640  0020                     ?i1___ftmul:	
  1641                           ; 3 bytes @ 0x0
  1642                           
  1643  0020                     i1___aldiv@counter:	
  1644                           ; 3 bytes @ 0x0
  1645                           
  1646  0020                     i1___ftdiv@f2:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649  0020                     i1___ftmul@f1:	
  1650                           ; 3 bytes @ 0x0
  1651                           
  1652                           
  1653                           ; 3 bytes @ 0x0
  1654  0020                     	ds	1
  1655  0021                     i1___aldiv@sign:	
  1656                           
  1657                           ; 1 bytes @ 0x1
  1658  0021                     	ds	1
  1659  0022                     i1___aldiv@quotient:	
  1660                           
  1661                           ; 4 bytes @ 0x2
  1662  0022                     	ds	1
  1663  0023                     i1___ftdiv@f1:	
  1664  0023                     i1___ftmul@f2:	
  1665                           ; 3 bytes @ 0x3
  1666                           
  1667                           
  1668                           ; 3 bytes @ 0x3
  1669  0023                     	ds	3
  1670  0026                     ??i1___ftdiv:	
  1671  0026                     ??i1___ftmul:	
  1672                           ; 0 bytes @ 0x6
  1673                           
  1674                           
  1675                           ; 0 bytes @ 0x6
  1676  0026                     	ds	4
  1677  002A                     i1___ftdiv@cntr:	
  1678  002A                     i1___ftmul@exp:	
  1679                           ; 1 bytes @ 0xA
  1680                           
  1681                           
  1682                           ; 1 bytes @ 0xA
  1683  002A                     	ds	1
  1684  002B                     i1___ftdiv@f3:	
  1685  002B                     i1___ftmul@f3_as_product:	
  1686                           ; 3 bytes @ 0xB
  1687                           
  1688                           
  1689                           ; 3 bytes @ 0xB
  1690  002B                     	ds	3
  1691  002E                     i1___ftdiv@exp:	
  1692  002E                     i1___ftmul@cntr:	
  1693                           ; 1 bytes @ 0xE
  1694                           
  1695                           
  1696                           ; 1 bytes @ 0xE
  1697  002E                     	ds	1
  1698  002F                     i1___ftdiv@sign:	
  1699  002F                     i1___ftmul@sign:	
  1700                           ; 1 bytes @ 0xF
  1701                           
  1702                           
  1703                           ; 1 bytes @ 0xF
  1704  002F                     	ds	1
  1705  0030                     ?i1___ftadd:	
  1706  0030                     i1___ftadd@f1:	
  1707                           ; 3 bytes @ 0x10
  1708                           
  1709                           
  1710                           ; 3 bytes @ 0x10
  1711  0030                     	ds	3
  1712  0033                     i1___ftadd@f2:	
  1713                           
  1714                           ; 3 bytes @ 0x13
  1715  0033                     	ds	3
  1716  0036                     ??i1___ftadd:	
  1717                           
  1718                           ; 0 bytes @ 0x16
  1719  0036                     	ds	4
  1720  003A                     i1___ftadd@sign:	
  1721                           
  1722                           ; 1 bytes @ 0x1A
  1723  003A                     	ds	1
  1724  003B                     i1___ftadd@exp2:	
  1725                           
  1726                           ; 1 bytes @ 0x1B
  1727  003B                     	ds	1
  1728  003C                     i1___ftadd@exp1:	
  1729                           
  1730                           ; 1 bytes @ 0x1C
  1731  003C                     	ds	1
  1732  003D                     ?i1___fttol:	
  1733  003D                     i1___fttol@f1:	
  1734                           ; 4 bytes @ 0x1D
  1735                           
  1736                           
  1737                           ; 3 bytes @ 0x1D
  1738  003D                     	ds	4
  1739  0041                     ??i1___fttol:	
  1740                           
  1741                           ; 0 bytes @ 0x21
  1742  0041                     	ds	4
  1743  0045                     i1___fttol@sign1:	
  1744                           
  1745                           ; 1 bytes @ 0x25
  1746  0045                     	ds	1
  1747  0046                     i1___fttol@lval:	
  1748                           
  1749                           ; 4 bytes @ 0x26
  1750  0046                     	ds	4
  1751  004A                     i1___fttol@exp1:	
  1752                           
  1753                           ; 1 bytes @ 0x2A
  1754  004A                     	ds	1
  1755  004B                     ??_ISR_Function:	
  1756                           
  1757                           ; 0 bytes @ 0x2B
  1758  004B                     	ds	9
  1759                           
  1760                           	psect	maintext
  1761  0952                     __pmaintext:	
  1762 ;;
  1763 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1764 ;;
  1765 ;; *************** function _main *****************
  1766 ;; Defined at:
  1767 ;;		line 481 in file "main.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;		None               void
  1774 ;; Registers used:
  1775 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 17F/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1783 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1784 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1785 ;;Total ram usage:        2 bytes
  1786 ;; Hardware stack levels required when called:    6
  1787 ;; This function calls:
  1788 ;;		_Adaptive_base_pid
  1789 ;;		_Delayms
  1790 ;;		_PWM_init
  1791 ;;		_SCANENCODER1
  1792 ;;		_SCANENCODER2
  1793 ;;		_Timer0_init
  1794 ;;		_Update_PWM
  1795 ;;		___ftmul
  1796 ;;		___fttol
  1797 ;;		___lwtoft
  1798 ;;		___wmul
  1799 ;;		_capture_init
  1800 ;;		_detect_display_error
  1801 ;;		_disp_hex_window1
  1802 ;;		_disp_hex_window2
  1803 ;;		_key_application
  1804 ;;		_portpin_init
  1805 ;;		_send_status
  1806 ;;		_system_init
  1807 ;;		_transmittops
  1808 ;;		_uart_init
  1809 ;; This function is called by:
  1810 ;;		Startup code after reset
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function _main
  1816  0952                     _main:	
  1817                           
  1818                           ;main.c: 484: system_init();
  1819                           
  1820                           ;incstack = 0
  1821                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1822  0952  3198  20B5  3189   	fcall	_system_init
  1823  0955                     l631:	
  1824  0955  3013               	movlw	19
  1825  0956  0024               	movlb	4	; select bank4
  1826  0957  022F               	subwf	(_delay+1)^(0+512),w
  1827  0958  3088               	movlw	136
  1828  0959  1903               	skipnz
  1829  095A  022E               	subwf	_delay^(0+512),w
  1830  095B  1803               	btfsc	3,0
  1831  095C  2963               	goto	l5253
  1832  095D  3001               	movlw	1
  1833  095E  0024               	movlb	4	; select bank4
  1834  095F  07AE               	addwf	_delay^(0+512),f
  1835  0960  3000               	movlw	0
  1836  0961  3DAF               	addwfc	(_delay+1)^(0+512),f
  1837  0962  2955               	goto	l631
  1838  0963                     l5253:	
  1839                           
  1840                           ;main.c: 486: Delayms(1000);
  1841  0963  30E8               	movlw	232
  1842  0964  0021               	movlb	1	; select bank1
  1843  0965  00A0               	movwf	Delayms@delay^(0+128)
  1844  0966  3003               	movlw	3
  1845  0967  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1846  0968  3187  27D6  3189   	fcall	_Delayms
  1847                           
  1848                           ;main.c: 487: portpin_init();
  1849  096B  3199  2164  3189   	fcall	_portpin_init
  1850                           
  1851                           ;main.c: 488: Timer0_init();
  1852  096E  3198  20F2  3189   	fcall	_Timer0_init
  1853                           
  1854                           ;main.c: 489: PWM_init();
  1855  0971  3199  217A  3189   	fcall	_PWM_init
  1856                           
  1857                           ;main.c: 490: capture_init();
  1858  0974  3199  2103  3189   	fcall	_capture_init
  1859                           
  1860                           ;main.c: 491: uart_init();
  1861  0977  3199  2127  3189   	fcall	_uart_init
  1862                           
  1863                           ;main.c: 492: INTCONbits.GIE =1;
  1864  097A  178B               	bsf	11,7	;volatile
  1865                           
  1866                           ;main.c: 493: INTCONbits.PEIE =1;
  1867  097B  170B               	bsf	11,6	;volatile
  1868                           
  1869                           ;main.c: 496: PORTCbits.RC3=0;
  1870  097C  0020               	movlb	0	; select bank0
  1871  097D  118E               	bcf	14,3	;volatile
  1872                           
  1873                           ;main.c: 498: diswin1[0]=0x0B;
  1874  097E  300B               	movlw	11
  1875  097F  0021               	movlb	1	; select bank1
  1876  0980  00ED               	movwf	??_main^(0+128)
  1877  0981  086D               	movf	??_main^(0+128),w
  1878  0982  0022               	movlb	2	; select bank2
  1879  0983  00E4               	movwf	_diswin1^(0+256)
  1880                           
  1881                           ;main.c: 499: diswin1[1]=0x0E;
  1882  0984  300E               	movlw	14
  1883  0985  0021               	movlb	1	; select bank1
  1884  0986  00ED               	movwf	??_main^(0+128)
  1885  0987  086D               	movf	??_main^(0+128),w
  1886  0988  0022               	movlb	2	; select bank2
  1887  0989  00E5               	movwf	(_diswin1^(0+256)+1)
  1888                           
  1889                           ;main.c: 500: diswin1[2]=0x1C;
  1890  098A  301C               	movlw	28
  1891  098B  0021               	movlb	1	; select bank1
  1892  098C  00ED               	movwf	??_main^(0+128)
  1893  098D  086D               	movf	??_main^(0+128),w
  1894  098E  0022               	movlb	2	; select bank2
  1895  098F  00E6               	movwf	(_diswin1^(0+256)+2)
  1896                           
  1897                           ;main.c: 501: diswin1[3]=0x1C;
  1898  0990  301C               	movlw	28
  1899  0991  0021               	movlb	1	; select bank1
  1900  0992  00ED               	movwf	??_main^(0+128)
  1901  0993  086D               	movf	??_main^(0+128),w
  1902  0994  0022               	movlb	2	; select bank2
  1903  0995  00E7               	movwf	(_diswin1^(0+256)+3)
  1904                           
  1905                           ;main.c: 502: diswin1[4]='1'-0x30;
  1906  0996  01E8               	clrf	(_diswin1^(0+256)+4)
  1907  0997  0AE8               	incf	(_diswin1^(0+256)+4),f
  1908                           
  1909                           ;main.c: 503: diswin1[5]='0'-0x30;
  1910  0998  01E9               	clrf	(_diswin1^(0+256)+5)
  1911                           
  1912                           ;main.c: 504: TypeDP.TypeD.digitdp5=1;
  1913  0999  0020               	movlb	0	; select bank0
  1914  099A  166B               	bsf	_TypeDP,4
  1915                           
  1916                           ;main.c: 506: Delayms(2000);
  1917  099B  30D0               	movlw	208
  1918  099C  0021               	movlb	1	; select bank1
  1919  099D  00A0               	movwf	Delayms@delay^(0+128)
  1920  099E  3007               	movlw	7
  1921  099F  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1922  09A0  3187  27D6  3189   	fcall	_Delayms
  1923                           
  1924                           ;main.c: 508: LATCbits.LATC0=0;
  1925  09A3  0022               	movlb	2	; select bank2
  1926  09A4  100E               	bcf	14,0	;volatile
  1927                           
  1928                           ;main.c: 509: TypeDP.TypeD.digitdp5=0;
  1929  09A5  0020               	movlb	0	; select bank0
  1930  09A6  126B               	bcf	_TypeDP,4
  1931                           
  1932                           ;main.c: 510: TypeU.LEDGROUP[0] =0x00;
  1933  09A7  01E7               	clrf	_TypeU
  1934                           
  1935                           ;main.c: 511: TypeU.LEDGROUP[1] =0x00;
  1936  09A8  01E8               	clrf	_TypeU+1
  1937                           
  1938                           ;main.c: 512: TypeU.TypeS.wirespeed =1;
  1939  09A9  1467               	bsf	_TypeU,0
  1940                           
  1941                           ;main.c: 513: TypeU.TypeS.vtg =1;
  1942  09AA  14E8               	bsf	_TypeU+1,1
  1943                           
  1944                           ;main.c: 514: TypeU.TypeS.twot =1;
  1945  09AB  1667               	bsf	_TypeU,4
  1946                           
  1947                           ;main.c: 515: TypeDP.DPGROUP[0] =0x00;
  1948  09AC  01EB               	clrf	_TypeDP
  1949                           
  1950                           ;main.c: 516: TypeDP.TypeD.digitdp2 =1;
  1951  09AD  14EB               	bsf	_TypeDP,1
  1952                           
  1953                           ;main.c: 517: TypeDP.TypeD.digitdp5 =1;
  1954  09AE  166B               	bsf	_TypeDP,4
  1955                           
  1956                           ;main.c: 519: psstatusu.psstatusbyte[0]=0x00;
  1957  09AF  01ED               	clrf	_psstatusu
  1958                           
  1959                           ;main.c: 522: setcurrent=0;
  1960  09B0  0022               	movlb	2	; select bank2
  1961  09B1  01A8               	clrf	_setcurrent^(0+256)
  1962  09B2  01A9               	clrf	(_setcurrent+1)^(0+256)
  1963                           
  1964                           ;main.c: 523: setvoltage=0;
  1965  09B3  0020               	movlb	0	; select bank0
  1966  09B4  01D8               	clrf	_setvoltage
  1967  09B5  01D9               	clrf	_setvoltage+1
  1968                           
  1969                           ;main.c: 524: disp_hex_window1(setcurrent);
  1970  09B6  0022               	movlb	2	; select bank2
  1971  09B7  0829               	movf	(_setcurrent+1)^(0+256),w
  1972  09B8  0021               	movlb	1	; select bank1
  1973  09B9  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  1974  09BA  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  1975  09BB  0022               	movlb	2	; select bank2
  1976  09BC  0828               	movf	_setcurrent^(0+256),w
  1977  09BD  0021               	movlb	1	; select bank1
  1978  09BE  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  1979  09BF  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  1980  09C0  319C  2427  3189   	fcall	_disp_hex_window1
  1981                           
  1982                           ;main.c: 525: disp_hex_window2(setvoltage);
  1983  09C3  0020               	movlb	0	; select bank0
  1984  09C4  0859               	movf	_setvoltage+1,w
  1985  09C5  0021               	movlb	1	; select bank1
  1986  09C6  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  1987  09C7  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  1988  09C8  0020               	movlb	0	; select bank0
  1989  09C9  0858               	movf	_setvoltage,w
  1990  09CA  0021               	movlb	1	; select bank1
  1991  09CB  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  1992  09CC  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  1993  09CD  319C  248B  3189   	fcall	_disp_hex_window2
  1994                           
  1995                           ;main.c: 526: TXSTAbits.TXEN =1;
  1996  09D0  0023               	movlb	3	; select bank3
  1997  09D1  169E               	bsf	30,5	;volatile
  1998                           
  1999                           ;main.c: 527: RCSTAbits.CREN =1;
  2000  09D2  161D               	bsf	29,4	;volatile
  2001                           
  2002                           ;main.c: 528: PIE1bits.RCIE =1;
  2003  09D3  0021               	movlb	1	; select bank1
  2004  09D4  1691               	bsf	17,5	;volatile
  2005                           
  2006                           ;main.c: 529: INTCONbits.GIE =1;
  2007  09D5  178B               	bsf	11,7	;volatile
  2008                           
  2009                           ;main.c: 530: INTCONbits.PEIE =1;
  2010  09D6  170B               	bsf	11,6	;volatile
  2011                           
  2012                           ;main.c: 531: Delayms(5000);
  2013  09D7  3088               	movlw	136
  2014  09D8  00A0               	movwf	Delayms@delay^(0+128)
  2015  09D9  3013               	movlw	19
  2016  09DA  00A1               	movwf	(Delayms@delay^(0+128)+1)
  2017  09DB  3187  27D6  3189   	fcall	_Delayms
  2018                           
  2019                           ;main.c: 532: PIE1bits.TXIE =0;
  2020  09DE  0021               	movlb	1	; select bank1
  2021  09DF  1211               	bcf	17,4	;volatile
  2022  09E0                     l5309:	
  2023                           ;main.c: 533: while(1)
  2024                           
  2025                           
  2026                           ;main.c: 534: {
  2027                           ;main.c: 536: if(send_statusf==1 && onesecf==0)
  2028  09E0  0022               	movlb	2	; select bank2
  2029  09E1  0856               	movf	_send_statusf^(0+256),w
  2030  09E2  3A01               	xorlw	1
  2031  09E3  1D03               	skipz
  2032  09E4  29EE               	goto	l5317
  2033  09E5  0020               	movlb	0	; select bank0
  2034  09E6  08E1               	movf	_onesecf,f	;volatile
  2035  09E7  1D03               	skipz
  2036  09E8  29EE               	goto	l5317
  2037                           
  2038                           ;main.c: 537: {
  2039                           ;main.c: 538: send_statusf=0;
  2040  09E9  0022               	movlb	2	; select bank2
  2041  09EA  01D6               	clrf	_send_statusf^(0+256)
  2042                           
  2043                           ;main.c: 539: send_status();
  2044  09EB  3199  214F  3189   	fcall	_send_status
  2045  09EE                     l5317:	
  2046                           
  2047                           ;main.c: 540: }
  2048                           ;main.c: 541: if(onesecf==1 && transmitonf==1)
  2049  09EE  0020               	movlb	0	; select bank0
  2050  09EF  0861               	movf	_onesecf,w	;volatile
  2051  09F0  3A01               	xorlw	1
  2052  09F1  1D03               	skipz
  2053  09F2  2A01               	goto	l5329
  2054  09F3  0022               	movlb	2	; select bank2
  2055  09F4  085A               	movf	_transmitonf^(0+256),w
  2056  09F5  3A01               	xorlw	1
  2057  09F6  1D03               	skipz
  2058  09F7  2A01               	goto	l5329
  2059                           
  2060                           ;main.c: 542: {
  2061                           ;main.c: 543: onesecf=0;
  2062  09F8  0020               	movlb	0	; select bank0
  2063  09F9  01E1               	clrf	_onesecf	;volatile
  2064                           
  2065                           ;main.c: 544: transmittops();
  2066  09FA  3188  2008  3189   	fcall	_transmittops
  2067                           
  2068                           ;main.c: 545: txonf=0;
  2069  09FD  0023               	movlb	3	; select bank3
  2070  09FE  01DD               	clrf	_txonf^(0+384)	;volatile
  2071                           
  2072                           ;main.c: 546: cEditfg = 0;
  2073  09FF  0022               	movlb	2	; select bank2
  2074  0A00  01B3               	clrf	_cEditfg^(0+256)
  2075  0A01                     l5329:	
  2076                           
  2077                           ;main.c: 547: }
  2078                           ;main.c: 550: if(gaschkfg == 1)
  2079  0A01  0022               	movlb	2	; select bank2
  2080  0A02  0841               	movf	_gaschkfg^(0+256),w
  2081  0A03  3A01               	xorlw	1
  2082  0A04  1D03               	skipz
  2083  0A05  2A13               	goto	l5333
  2084                           
  2085                           ;main.c: 551: {
  2086                           ;main.c: 552: disp_hex_window2(igascntr);
  2087  0A06  0023               	movlb	3	; select bank3
  2088  0A07  083D               	movf	(_igascntr+1)^(0+384),w
  2089  0A08  0021               	movlb	1	; select bank1
  2090  0A09  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  2091  0A0A  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  2092  0A0B  0023               	movlb	3	; select bank3
  2093  0A0C  083C               	movf	_igascntr^(0+384),w
  2094  0A0D  0021               	movlb	1	; select bank1
  2095  0A0E  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  2096  0A0F  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  2097  0A10  319C  248B  3189   	fcall	_disp_hex_window2
  2098  0A13                     l5333:	
  2099                           
  2100                           ;main.c: 553: }
  2101                           ;main.c: 555: if(universal_error==0)
  2102  0A13  0022               	movlb	2	; select bank2
  2103  0A14  08DB               	movf	_universal_error^(0+256),f	;volatile
  2104  0A15  1D03               	skipz
  2105  0A16  2FE6               	goto	l5717
  2106                           
  2107                           ;main.c: 556: {
  2108                           ;main.c: 560: if(adaptivepidf==1)
  2109  0A17  0831               	movf	_adaptivepidf^(0+256),w
  2110  0A18  3A01               	xorlw	1
  2111  0A19  1D03               	skipz
  2112  0A1A  2A1F               	goto	l5341
  2113                           
  2114                           ;main.c: 561: {
  2115                           ;main.c: 562: adaptivepidf=0;
  2116  0A1B  01B1               	clrf	_adaptivepidf^(0+256)
  2117                           
  2118                           ;main.c: 563: Adaptive_base_pid();
  2119  0A1C  3194  248D  3189   	fcall	_Adaptive_base_pid
  2120  0A1F                     l5341:	
  2121                           
  2122                           ;main.c: 564: }
  2123                           ;main.c: 566: if(read_enc1f==1)
  2124  0A1F  0022               	movlb	2	; select bank2
  2125  0A20  0852               	movf	_read_enc1f^(0+256),w	;volatile
  2126  0A21  3A01               	xorlw	1
  2127  0A22  1D03               	skipz
  2128  0A23  2BBF               	goto	l5483
  2129                           
  2130                           ;main.c: 567: {
  2131                           ;main.c: 568: read_enc1f=0;
  2132  0A24  01D2               	clrf	_read_enc1f^(0+256)	;volatile
  2133                           
  2134                           ;main.c: 569: if(enccount==0)
  2135  0A25  08BD               	movf	_enccount^(0+256),f	;volatile
  2136  0A26  1D03               	skipz
  2137  0A27  2ACD               	goto	l5397
  2138                           
  2139                           ;main.c: 570: {
  2140                           ;main.c: 571: encod1=SCANENCODER1();
  2141  0A28  319D  256F  3189   	fcall	_SCANENCODER1
  2142  0A2B  0021               	movlb	1	; select bank1
  2143  0A2C  00ED               	movwf	??_main^(0+128)
  2144  0A2D  086D               	movf	??_main^(0+128),w
  2145  0A2E  0020               	movlb	0	; select bank0
  2146  0A2F  00DD               	movwf	_encod1
  2147                           
  2148                           ;main.c: 572: mili1_100++;
  2149  0A30  3001               	movlw	1
  2150  0A31  0021               	movlb	1	; select bank1
  2151  0A32  00ED               	movwf	??_main^(0+128)
  2152  0A33  086D               	movf	??_main^(0+128),w
  2153  0A34  0022               	movlb	2	; select bank2
  2154  0A35  07C3               	addwf	_mili1_100^(0+256),f
  2155                           
  2156                           ;main.c: 573: {
  2157                           ;main.c: 574: if(encod1=='+')
  2158  0A36  0020               	movlb	0	; select bank0
  2159  0A37  085D               	movf	_encod1,w
  2160  0A38  3A2B               	xorlw	43
  2161  0A39  1D03               	skipz
  2162  0A3A  2A4D               	goto	l5357
  2163                           
  2164                           ;main.c: 575: {
  2165                           ;main.c: 576: setwirespeed=setwirespeed+pluspara1;
  2166  0A3B  0022               	movlb	2	; select bank2
  2167  0A3C  084F               	movf	_pluspara1^(0+256),w
  2168  0A3D  0020               	movlb	0	; select bank0
  2169  0A3E  075A               	addwf	_setwirespeed,w
  2170  0A3F  00DA               	movwf	_setwirespeed
  2171  0A40  085B               	movf	_setwirespeed+1,w
  2172  0A41  1803               	skipnc
  2173  0A42  0A5B               	incf	_setwirespeed+1,w
  2174  0A43  00DB               	movwf	_setwirespeed+1
  2175                           
  2176                           ;main.c: 577: if(setwirespeed >= 220)
  2177  0A44  3000               	movlw	0
  2178  0A45  025B               	subwf	_setwirespeed+1,w
  2179  0A46  30DC               	movlw	220
  2180  0A47  1903               	skipnz
  2181  0A48  025A               	subwf	_setwirespeed,w
  2182  0A49  1C03               	skipc
  2183  0A4A  2A8A               	goto	l644
  2184                           
  2185                           ;main.c: 578: setwirespeed=220;
  2186  0A4B  30DC               	movlw	220
  2187  0A4C  2A87               	goto	L1
  2188  0A4D                     l5357:	
  2189                           ;main.c: 579: }
  2190                           
  2191                           
  2192                           ;main.c: 580: else if(encod1=='-')
  2193  0A4D  085D               	movf	_encod1,w
  2194  0A4E  3A2D               	xorlw	45
  2195  0A4F  1D03               	skipz
  2196  0A50  2A8A               	goto	l644
  2197                           
  2198                           ;main.c: 581: {
  2199                           ;main.c: 582: if(setwirespeed >= minuspara1)
  2200  0A51  0022               	movlb	2	; select bank2
  2201  0A52  0849               	movf	_minuspara1^(0+256),w
  2202  0A53  0021               	movlb	1	; select bank1
  2203  0A54  00ED               	movwf	??_main^(0+128)
  2204  0A55  01EE               	clrf	(??_main^(0+128)+1)
  2205  0A56  086E               	movf	(??_main+1)^(0+128),w
  2206  0A57  0020               	movlb	0	; select bank0
  2207  0A58  025B               	subwf	_setwirespeed+1,w
  2208  0A59  1D03               	skipz
  2209  0A5A  2A5F               	goto	u7575
  2210  0A5B  0021               	movlb	1	; select bank1
  2211  0A5C  086D               	movf	??_main^(0+128),w
  2212  0A5D  0020               	movlb	0	; select bank0
  2213  0A5E  025A               	subwf	_setwirespeed,w
  2214  0A5F                     u7575:	
  2215  0A5F  1C03               	skipc
  2216  0A60  2A77               	goto	l5363
  2217                           
  2218                           ;main.c: 583: setwirespeed=setwirespeed-minuspara1;
  2219  0A61  0022               	movlb	2	; select bank2
  2220  0A62  0849               	movf	_minuspara1^(0+256),w
  2221  0A63  0021               	movlb	1	; select bank1
  2222  0A64  00ED               	movwf	??_main^(0+128)
  2223  0A65  01EE               	clrf	(??_main^(0+128)+1)
  2224  0A66  09ED               	comf	??_main^(0+128),f
  2225  0A67  09EE               	comf	(??_main^(0+128)+1),f
  2226  0A68  0AED               	incf	??_main^(0+128),f
  2227  0A69  1903               	skipnz
  2228  0A6A  0AEE               	incf	(??_main^(0+128)+1),f
  2229  0A6B  0020               	movlb	0	; select bank0
  2230  0A6C  085A               	movf	_setwirespeed,w
  2231  0A6D  0021               	movlb	1	; select bank1
  2232  0A6E  076D               	addwf	??_main^(0+128),w
  2233  0A6F  0020               	movlb	0	; select bank0
  2234  0A70  00DA               	movwf	_setwirespeed
  2235  0A71  085B               	movf	_setwirespeed+1,w
  2236  0A72  0021               	movlb	1	; select bank1
  2237  0A73  3D6E               	addwfc	(??_main+1)^(0+128),w
  2238  0A74  0020               	movlb	0	; select bank0
  2239  0A75  00DB               	movwf	_setwirespeed+1
  2240  0A76  2A7F               	goto	l647
  2241  0A77                     l5363:	
  2242                           
  2243                           ;main.c: 585: setwirespeed=setwirespeed--;
  2244  0A77  085B               	movf	_setwirespeed+1,w
  2245  0A78  045A               	iorwf	_setwirespeed,w
  2246  0A79  1903               	skipnz
  2247  0A7A  2A7F               	goto	l647
  2248  0A7B  3001               	movlw	1
  2249  0A7C  02DA               	subwf	_setwirespeed,f
  2250  0A7D  3000               	movlw	0
  2251  0A7E  3BDB               	subwfb	_setwirespeed+1,f
  2252  0A7F                     l647:	
  2253                           
  2254                           ;main.c: 586: if(setwirespeed <= 1)
  2255  0A7F  3000               	movlw	0
  2256  0A80  025B               	subwf	_setwirespeed+1,w
  2257  0A81  3002               	movlw	2
  2258  0A82  1903               	skipnz
  2259  0A83  025A               	subwf	_setwirespeed,w
  2260  0A84  1803               	skipnc
  2261  0A85  2A8A               	goto	l644
  2262                           
  2263                           ;main.c: 587: setwirespeed=1;
  2264  0A86  3001               	movlw	1
  2265  0A87                     L1:	
  2266  0A87  00DA               	movwf	_setwirespeed
  2267  0A88  3000               	movlw	0
  2268  0A89  00DB               	movwf	_setwirespeed+1
  2269  0A8A                     l644:	
  2270                           
  2271                           ;main.c: 588: }
  2272                           ;main.c: 589: }
  2273                           ;main.c: 590: if(mili1_100<200)
  2274  0A8A  30C8               	movlw	200
  2275  0A8B  0022               	movlb	2	; select bank2
  2276  0A8C  0243               	subwf	_mili1_100^(0+256),w
  2277  0A8D  1803               	skipnc
  2278  0A8E  2AA7               	goto	l5377
  2279                           
  2280                           ;main.c: 591: {
  2281                           ;main.c: 592: if(encod1=='+')
  2282  0A8F  0020               	movlb	0	; select bank0
  2283  0A90  085D               	movf	_encod1,w
  2284  0A91  3A2B               	xorlw	43
  2285  0A92  1D03               	skipz
  2286  0A93  2A9B               	goto	l5373
  2287                           
  2288                           ;main.c: 593: pluscount1++;
  2289  0A94  3001               	movlw	1
  2290  0A95  0021               	movlb	1	; select bank1
  2291  0A96  00ED               	movwf	??_main^(0+128)
  2292  0A97  086D               	movf	??_main^(0+128),w
  2293  0A98  0022               	movlb	2	; select bank2
  2294  0A99  07CD               	addwf	_pluscount1^(0+256),f
  2295  0A9A  2AC6               	goto	l5395
  2296  0A9B                     l5373:	
  2297                           
  2298                           ;main.c: 594: else if(encod1=='-')
  2299  0A9B  0020               	movlb	0	; select bank0
  2300  0A9C  085D               	movf	_encod1,w
  2301  0A9D  3A2D               	xorlw	45
  2302  0A9E  1D03               	skipz
  2303  0A9F  2AC6               	goto	l5395
  2304                           
  2305                           ;main.c: 595: minuscount1++;
  2306  0AA0  3001               	movlw	1
  2307  0AA1  0021               	movlb	1	; select bank1
  2308  0AA2  00ED               	movwf	??_main^(0+128)
  2309  0AA3  086D               	movf	??_main^(0+128),w
  2310  0AA4  0022               	movlb	2	; select bank2
  2311  0AA5  07C7               	addwf	_minuscount1^(0+256),f
  2312                           
  2313                           ;main.c: 596: }
  2314  0AA6  2AC6               	goto	l5395
  2315  0AA7                     l5377:	
  2316                           
  2317                           ;main.c: 597: else if(mili1_100>=200)
  2318  0AA7  30C8               	movlw	200
  2319  0AA8  0243               	subwf	_mili1_100^(0+256),w
  2320  0AA9  1C03               	skipc
  2321  0AAA  2AC6               	goto	l5395
  2322                           
  2323                           ;main.c: 598: {
  2324                           ;main.c: 599: mili1_100=0;
  2325  0AAB  01C3               	clrf	_mili1_100^(0+256)
  2326                           
  2327                           ;main.c: 600: pluspara1=pluscount1>>1;
  2328  0AAC  364D               	lsrf	_pluscount1^(0+256),w
  2329  0AAD  0021               	movlb	1	; select bank1
  2330  0AAE  00ED               	movwf	??_main^(0+128)
  2331  0AAF  086D               	movf	??_main^(0+128),w
  2332  0AB0  0022               	movlb	2	; select bank2
  2333  0AB1  00CF               	movwf	_pluspara1^(0+256)
  2334                           
  2335                           ;main.c: 601: minuspara1=minuscount1>>1;
  2336  0AB2  3647               	lsrf	_minuscount1^(0+256),w
  2337  0AB3  0021               	movlb	1	; select bank1
  2338  0AB4  00ED               	movwf	??_main^(0+128)
  2339  0AB5  086D               	movf	??_main^(0+128),w
  2340  0AB6  0022               	movlb	2	; select bank2
  2341  0AB7  00C9               	movwf	_minuspara1^(0+256)
  2342                           
  2343                           ;main.c: 602: if(pluspara1<=1)
  2344  0AB8  3002               	movlw	2
  2345  0AB9  024F               	subwf	_pluspara1^(0+256),w
  2346  0ABA  1803               	skipnc
  2347  0ABB  2ABE               	goto	l5389
  2348                           
  2349                           ;main.c: 603: pluspara1=1;
  2350  0ABC  01CF               	clrf	_pluspara1^(0+256)
  2351  0ABD  0ACF               	incf	_pluspara1^(0+256),f
  2352  0ABE                     l5389:	
  2353                           
  2354                           ;main.c: 604: if(minuspara1<=1)
  2355  0ABE  3002               	movlw	2
  2356  0ABF  0249               	subwf	_minuspara1^(0+256),w
  2357  0AC0  1803               	skipnc
  2358  0AC1  2AC4               	goto	l5393
  2359                           
  2360                           ;main.c: 605: minuspara1=1;
  2361  0AC2  01C9               	clrf	_minuspara1^(0+256)
  2362  0AC3  0AC9               	incf	_minuspara1^(0+256),f
  2363  0AC4                     l5393:	
  2364                           
  2365                           ;main.c: 606: pluscount1=0;
  2366  0AC4  01CD               	clrf	_pluscount1^(0+256)
  2367                           
  2368                           ;main.c: 607: minuscount1=0;
  2369  0AC5  01C7               	clrf	_minuscount1^(0+256)
  2370  0AC6                     l5395:	
  2371                           
  2372                           ;main.c: 608: }
  2373                           ;main.c: 609: enccount++;
  2374  0AC6  3001               	movlw	1
  2375  0AC7  0021               	movlb	1	; select bank1
  2376  0AC8  00ED               	movwf	??_main^(0+128)
  2377  0AC9  086D               	movf	??_main^(0+128),w
  2378  0ACA  0022               	movlb	2	; select bank2
  2379  0ACB  07BD               	addwf	_enccount^(0+256),f	;volatile
  2380                           
  2381                           ;main.c: 610: }
  2382  0ACC  2BBF               	goto	l5483
  2383  0ACD                     l5397:	
  2384                           
  2385                           ;main.c: 611: else
  2386                           ;main.c: 612: {
  2387                           ;main.c: 613: mili2_100++;
  2388  0ACD  3001               	movlw	1
  2389  0ACE  0021               	movlb	1	; select bank1
  2390  0ACF  00ED               	movwf	??_main^(0+128)
  2391  0AD0  086D               	movf	??_main^(0+128),w
  2392  0AD1  0022               	movlb	2	; select bank2
  2393  0AD2  07C4               	addwf	_mili2_100^(0+256),f
  2394                           
  2395                           ;main.c: 614: encod2=SCANENCODER2();
  2396  0AD3  319C  24F1  3189   	fcall	_SCANENCODER2
  2397  0AD6  0021               	movlb	1	; select bank1
  2398  0AD7  00ED               	movwf	??_main^(0+128)
  2399  0AD8  086D               	movf	??_main^(0+128),w
  2400  0AD9  0020               	movlb	0	; select bank0
  2401  0ADA  00DE               	movwf	_encod2
  2402                           
  2403                           ;main.c: 615: if(TypeU.TypeS.vtg==1)
  2404  0ADB  1CE8               	btfss	_TypeU+1,1
  2405  0ADC  2B35               	goto	l659
  2406                           
  2407                           ;main.c: 616: {
  2408                           ;main.c: 617: if(encod2=='+')
  2409  0ADD  085E               	movf	_encod2,w
  2410  0ADE  3A2B               	xorlw	43
  2411  0ADF  1D03               	skipz
  2412  0AE0  2AF5               	goto	l5411
  2413                           
  2414                           ;main.c: 618: {
  2415                           ;main.c: 619: setvoltage=setvoltage+pluspara2;
  2416  0AE1  0022               	movlb	2	; select bank2
  2417  0AE2  0850               	movf	_pluspara2^(0+256),w
  2418  0AE3  0020               	movlb	0	; select bank0
  2419  0AE4  0758               	addwf	_setvoltage,w
  2420  0AE5  00D8               	movwf	_setvoltage
  2421  0AE6  0859               	movf	_setvoltage+1,w
  2422  0AE7  1803               	skipnc
  2423  0AE8  0A59               	incf	_setvoltage+1,w
  2424  0AE9  00D9               	movwf	_setvoltage+1
  2425                           
  2426                           ;main.c: 620: if(setvoltage>440)
  2427  0AEA  3001               	movlw	1
  2428  0AEB  0259               	subwf	_setvoltage+1,w
  2429  0AEC  30B9               	movlw	185
  2430  0AED  1903               	skipnz
  2431  0AEE  0258               	subwf	_setvoltage,w
  2432  0AEF  1C03               	skipc
  2433  0AF0  2B31               	goto	l5423
  2434                           
  2435                           ;main.c: 621: setvoltage=440;
  2436  0AF1  30B8               	movlw	184
  2437  0AF2  00D8               	movwf	_setvoltage
  2438  0AF3  3001               	movlw	1
  2439  0AF4  2B30               	goto	L5
  2440  0AF5                     l5411:	
  2441                           ;main.c: 623: }
  2442                           
  2443                           ;main.c: 622: cEditfg = 1;
  2444                           
  2445                           
  2446                           ;main.c: 624: else if(encod2=='-')
  2447  0AF5  0020               	movlb	0	; select bank0
  2448  0AF6  085E               	movf	_encod2,w
  2449  0AF7  3A2D               	xorlw	45
  2450  0AF8  1D03               	skipz
  2451  0AF9  2B7E               	goto	l5455
  2452                           
  2453                           ;main.c: 625: {
  2454                           ;main.c: 626: if(setvoltage>=minuspara2)
  2455  0AFA  0860               	movf	_minuspara2,w
  2456  0AFB  0021               	movlb	1	; select bank1
  2457  0AFC  00ED               	movwf	??_main^(0+128)
  2458  0AFD  01EE               	clrf	(??_main^(0+128)+1)
  2459  0AFE  086E               	movf	(??_main+1)^(0+128),w
  2460  0AFF  0020               	movlb	0	; select bank0
  2461  0B00  0259               	subwf	_setvoltage+1,w
  2462  0B01  1D03               	skipz
  2463  0B02  2B07               	goto	u7705
  2464  0B03  0021               	movlb	1	; select bank1
  2465  0B04  086D               	movf	??_main^(0+128),w
  2466  0B05  0020               	movlb	0	; select bank0
  2467  0B06  0258               	subwf	_setvoltage,w
  2468  0B07                     u7705:	
  2469  0B07  1C03               	skipc
  2470  0B08  2B1E               	goto	l5417
  2471                           
  2472                           ;main.c: 627: setvoltage=setvoltage-minuspara2;
  2473  0B09  0860               	movf	_minuspara2,w
  2474  0B0A  0021               	movlb	1	; select bank1
  2475  0B0B  00ED               	movwf	??_main^(0+128)
  2476  0B0C  01EE               	clrf	(??_main^(0+128)+1)
  2477  0B0D  09ED               	comf	??_main^(0+128),f
  2478  0B0E  09EE               	comf	(??_main^(0+128)+1),f
  2479  0B0F  0AED               	incf	??_main^(0+128),f
  2480  0B10  1903               	skipnz
  2481  0B11  0AEE               	incf	(??_main^(0+128)+1),f
  2482  0B12  0020               	movlb	0	; select bank0
  2483  0B13  0858               	movf	_setvoltage,w
  2484  0B14  0021               	movlb	1	; select bank1
  2485  0B15  076D               	addwf	??_main^(0+128),w
  2486  0B16  0020               	movlb	0	; select bank0
  2487  0B17  00D8               	movwf	_setvoltage
  2488  0B18  0859               	movf	_setvoltage+1,w
  2489  0B19  0021               	movlb	1	; select bank1
  2490  0B1A  3D6E               	addwfc	(??_main+1)^(0+128),w
  2491  0B1B  0020               	movlb	0	; select bank0
  2492  0B1C  00D9               	movwf	_setvoltage+1
  2493  0B1D  2B26               	goto	l665
  2494  0B1E                     l5417:	
  2495                           
  2496                           ;main.c: 629: setvoltage=setvoltage--;
  2497  0B1E  0859               	movf	_setvoltage+1,w
  2498  0B1F  0458               	iorwf	_setvoltage,w
  2499  0B20  1903               	skipnz
  2500  0B21  2B26               	goto	l665
  2501  0B22  3001               	movlw	1
  2502  0B23  02D8               	subwf	_setvoltage,f
  2503  0B24  3000               	movlw	0
  2504  0B25  3BD9               	subwfb	_setvoltage+1,f
  2505  0B26                     l665:	
  2506                           
  2507                           ;main.c: 631: if(setvoltage<=140)
  2508  0B26  3000               	movlw	0
  2509  0B27  0259               	subwf	_setvoltage+1,w
  2510  0B28  308D               	movlw	141
  2511  0B29  1903               	skipnz
  2512  0B2A  0258               	subwf	_setvoltage,w
  2513  0B2B  1803               	skipnc
  2514  0B2C  2B31               	goto	l5423
  2515                           
  2516                           ;main.c: 632: setvoltage=140;
  2517  0B2D  308C               	movlw	140
  2518  0B2E  00D8               	movwf	_setvoltage
  2519  0B2F  3000               	movlw	0
  2520  0B30                     L5:	
  2521  0B30  00D9               	movwf	_setvoltage+1
  2522  0B31                     l5423:	
  2523                           
  2524                           ;main.c: 633: cEditfg = 1;
  2525  0B31  0022               	movlb	2	; select bank2
  2526  0B32  01B3               	clrf	_cEditfg^(0+256)
  2527  0B33  0AB3               	incf	_cEditfg^(0+256),f
  2528                           
  2529                           ;main.c: 634: }
  2530                           ;main.c: 635: }
  2531  0B34  2B7E               	goto	l5455
  2532  0B35                     l659:	
  2533                           
  2534                           ;main.c: 636: else if(TypeU.TypeS.arclength==1)
  2535  0B35  1D67               	btfss	_TypeU,2
  2536  0B36  2B7E               	goto	l5455
  2537                           
  2538                           ;main.c: 637: {
  2539                           ;main.c: 638: if(encod2=='+')
  2540  0B37  085E               	movf	_encod2,w
  2541  0B38  3A2B               	xorlw	43
  2542  0B39  1D03               	skipz
  2543  0B3A  2B61               	goto	l5441
  2544                           
  2545                           ;main.c: 639: {
  2546                           ;main.c: 640: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength+pluspara2;
  2547  0B3B  0024               	movlb	4	; select bank4
  2548  0B3C  0851               	movf	(_pstowfstru^(0+512)+7),w
  2549  0B3D  0022               	movlb	2	; select bank2
  2550  0B3E  0750               	addwf	_pluspara2^(0+256),w
  2551  0B3F  0021               	movlb	1	; select bank1
  2552  0B40  00ED               	movwf	??_main^(0+128)
  2553  0B41  086D               	movf	??_main^(0+128),w
  2554  0B42  0024               	movlb	4	; select bank4
  2555  0B43  00D1               	movwf	(_pstowfstru^(0+512)+7)
  2556                           
  2557                           ;main.c: 642: if(weldmode=='P')
  2558  0B44  0020               	movlb	0	; select bank0
  2559  0B45  0866               	movf	_weldmode,w	;volatile
  2560  0B46  3A50               	xorlw	80
  2561  0B47  1D03               	skipz
  2562  0B48  2B50               	goto	l5435
  2563                           
  2564                           ;main.c: 643: {
  2565                           ;main.c: 644: if(pstowfstru.pstowfstrs.arclength>80)
  2566  0B49  3051               	movlw	81
  2567  0B4A  0024               	movlb	4	; select bank4
  2568  0B4B  0251               	subwf	(_pstowfstru^(0+512)+7),w
  2569  0B4C  1C03               	skipc
  2570  0B4D  2B7E               	goto	l5455
  2571                           
  2572                           ;main.c: 645: pstowfstru.pstowfstrs.arclength=80;
  2573  0B4E  3050               	movlw	80
  2574  0B4F  2B5B               	goto	L2
  2575  0B50                     l5435:	
  2576                           ;main.c: 646: }
  2577                           
  2578                           
  2579                           ;main.c: 647: else if(weldmode=='G')
  2580  0B50  0020               	movlb	0	; select bank0
  2581  0B51  0866               	movf	_weldmode,w	;volatile
  2582  0B52  3A47               	xorlw	71
  2583  0B53  1D03               	skipz
  2584  0B54  2B7E               	goto	l5455
  2585                           
  2586                           ;main.c: 648: {
  2587                           ;main.c: 649: if(pstowfstru.pstowfstrs.arclength>40)
  2588  0B55  3029               	movlw	41
  2589  0B56  0024               	movlb	4	; select bank4
  2590  0B57  0251               	subwf	(_pstowfstru^(0+512)+7),w
  2591  0B58  1C03               	skipc
  2592  0B59  2B7E               	goto	l5455
  2593                           
  2594                           ;main.c: 650: pstowfstru.pstowfstrs.arclength=40;
  2595  0B5A  3028               	movlw	40
  2596  0B5B                     L2:	
  2597  0B5B  0021               	movlb	1	; select bank1
  2598  0B5C  00ED               	movwf	??_main^(0+128)
  2599  0B5D  086D               	movf	??_main^(0+128),w
  2600  0B5E  0024               	movlb	4	; select bank4
  2601  0B5F  00D1               	movwf	(_pstowfstru^(0+512)+7)
  2602                           
  2603                           ;main.c: 651: }
  2604                           ;main.c: 655: }
  2605  0B60  2B7E               	goto	l5455
  2606  0B61                     l5441:	
  2607                           
  2608                           ;main.c: 656: else if(encod2=='-')
  2609  0B61  0020               	movlb	0	; select bank0
  2610  0B62  085E               	movf	_encod2,w
  2611  0B63  3A2D               	xorlw	45
  2612  0B64  1D03               	skipz
  2613  0B65  2B7E               	goto	l5455
  2614                           
  2615                           ;main.c: 657: {
  2616                           ;main.c: 658: if(pstowfstru.pstowfstrs.arclength>=minuspara2)
  2617  0B66  0860               	movf	_minuspara2,w
  2618  0B67  0024               	movlb	4	; select bank4
  2619  0B68  0251               	subwf	(_pstowfstru^(0+512)+7),w
  2620  0B69  1C03               	skipc
  2621  0B6A  2B76               	goto	l5447
  2622                           
  2623                           ;main.c: 659: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength-minuspara2
      +                          ;
  2624  0B6B  0020               	movlb	0	; select bank0
  2625  0B6C  0360               	decf	_minuspara2,w
  2626  0B6D  3AFF               	xorlw	255
  2627  0B6E  0024               	movlb	4	; select bank4
  2628  0B6F  0751               	addwf	(_pstowfstru^(0+512)+7),w
  2629  0B70  0021               	movlb	1	; select bank1
  2630  0B71  00ED               	movwf	??_main^(0+128)
  2631  0B72  086D               	movf	??_main^(0+128),w
  2632  0B73  0024               	movlb	4	; select bank4
  2633  0B74  00D1               	movwf	(_pstowfstru^(0+512)+7)
  2634  0B75  2B7B               	goto	l5451
  2635  0B76                     l5447:	
  2636                           
  2637                           ;main.c: 661: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength--;
  2638  0B76  0851               	movf	(_pstowfstru^(0+512)+7),w
  2639  0B77  1903               	btfsc	3,2
  2640  0B78  2B7B               	goto	l5451
  2641  0B79  3001               	movlw	1
  2642  0B7A  02D1               	subwf	(_pstowfstru^(0+512)+7),f
  2643  0B7B                     l5451:	
  2644                           
  2645                           ;main.c: 663: if(pstowfstru.pstowfstrs.arclength<=0)
  2646  0B7B  08D1               	movf	(_pstowfstru^(0+512)+7),f
  2647  0B7C  1903               	btfsc	3,2
  2648                           
  2649                           ;main.c: 664: pstowfstru.pstowfstrs.arclength=0;
  2650  0B7D  01D1               	clrf	(_pstowfstru^(0+512)+7)
  2651  0B7E                     l5455:	
  2652                           
  2653                           ;main.c: 665: }
  2654                           ;main.c: 666: }
  2655                           ;main.c: 667: if(mili2_100<200)
  2656  0B7E  30C8               	movlw	200
  2657  0B7F  0022               	movlb	2	; select bank2
  2658  0B80  0244               	subwf	_mili2_100^(0+256),w
  2659  0B81  1803               	skipnc
  2660  0B82  2B9B               	goto	l5465
  2661                           
  2662                           ;main.c: 668: {
  2663                           ;main.c: 669: if(encod2=='+')
  2664  0B83  0020               	movlb	0	; select bank0
  2665  0B84  085E               	movf	_encod2,w
  2666  0B85  3A2B               	xorlw	43
  2667  0B86  1D03               	skipz
  2668  0B87  2B8F               	goto	l5461
  2669                           
  2670                           ;main.c: 670: pluscount2++;
  2671  0B88  3001               	movlw	1
  2672  0B89  0021               	movlb	1	; select bank1
  2673  0B8A  00ED               	movwf	??_main^(0+128)
  2674  0B8B  086D               	movf	??_main^(0+128),w
  2675  0B8C  0022               	movlb	2	; select bank2
  2676  0B8D  07CE               	addwf	_pluscount2^(0+256),f
  2677  0B8E  2BBD               	goto	l686
  2678  0B8F                     l5461:	
  2679                           
  2680                           ;main.c: 671: else if(encod2=='-')
  2681  0B8F  0020               	movlb	0	; select bank0
  2682  0B90  085E               	movf	_encod2,w
  2683  0B91  3A2D               	xorlw	45
  2684  0B92  1D03               	skipz
  2685  0B93  2BBD               	goto	l686
  2686                           
  2687                           ;main.c: 672: minuscount2++;
  2688  0B94  3001               	movlw	1
  2689  0B95  0021               	movlb	1	; select bank1
  2690  0B96  00ED               	movwf	??_main^(0+128)
  2691  0B97  086D               	movf	??_main^(0+128),w
  2692  0B98  0022               	movlb	2	; select bank2
  2693  0B99  07C8               	addwf	_minuscount2^(0+256),f
  2694                           
  2695                           ;main.c: 673: }
  2696  0B9A  2BBD               	goto	l686
  2697  0B9B                     l5465:	
  2698                           
  2699                           ;main.c: 674: else if(mili2_100>=200)
  2700  0B9B  30C8               	movlw	200
  2701  0B9C  0244               	subwf	_mili2_100^(0+256),w
  2702  0B9D  1C03               	skipc
  2703  0B9E  2BBD               	goto	l686
  2704                           
  2705                           ;main.c: 675: {
  2706                           ;main.c: 676: mili2_100=0;
  2707  0B9F  01C4               	clrf	_mili2_100^(0+256)
  2708                           
  2709                           ;main.c: 677: pluspara2=pluscount2;
  2710  0BA0  084E               	movf	_pluscount2^(0+256),w
  2711  0BA1  0021               	movlb	1	; select bank1
  2712  0BA2  00ED               	movwf	??_main^(0+128)
  2713  0BA3  086D               	movf	??_main^(0+128),w
  2714  0BA4  0022               	movlb	2	; select bank2
  2715  0BA5  00D0               	movwf	_pluspara2^(0+256)
  2716                           
  2717                           ;main.c: 678: minuspara2=minuscount2;
  2718  0BA6  0848               	movf	_minuscount2^(0+256),w
  2719  0BA7  0021               	movlb	1	; select bank1
  2720  0BA8  00ED               	movwf	??_main^(0+128)
  2721  0BA9  086D               	movf	??_main^(0+128),w
  2722  0BAA  0020               	movlb	0	; select bank0
  2723  0BAB  00E0               	movwf	_minuspara2
  2724                           
  2725                           ;main.c: 679: if(pluspara2<=1)
  2726  0BAC  3002               	movlw	2
  2727  0BAD  0022               	movlb	2	; select bank2
  2728  0BAE  0250               	subwf	_pluspara2^(0+256),w
  2729  0BAF  1803               	skipnc
  2730  0BB0  2BB3               	goto	l5477
  2731                           
  2732                           ;main.c: 680: pluspara2=1;
  2733  0BB1  01D0               	clrf	_pluspara2^(0+256)
  2734  0BB2  0AD0               	incf	_pluspara2^(0+256),f
  2735  0BB3                     l5477:	
  2736                           
  2737                           ;main.c: 681: if(minuspara2<=1)
  2738  0BB3  3002               	movlw	2
  2739  0BB4  0020               	movlb	0	; select bank0
  2740  0BB5  0260               	subwf	_minuspara2,w
  2741  0BB6  1803               	skipnc
  2742  0BB7  2BBA               	goto	l5481
  2743                           
  2744                           ;main.c: 682: minuspara2=1;
  2745  0BB8  01E0               	clrf	_minuspara2
  2746  0BB9  0AE0               	incf	_minuspara2,f
  2747  0BBA                     l5481:	
  2748                           
  2749                           ;main.c: 683: pluscount2=0;
  2750  0BBA  0022               	movlb	2	; select bank2
  2751  0BBB  01CE               	clrf	_pluscount2^(0+256)
  2752                           
  2753                           ;main.c: 684: minuscount2=0;
  2754  0BBC  01C8               	clrf	_minuscount2^(0+256)
  2755  0BBD                     l686:	
  2756                           
  2757                           ;main.c: 685: }
  2758                           ;main.c: 686: enccount=0;
  2759  0BBD  0022               	movlb	2	; select bank2
  2760  0BBE  01BD               	clrf	_enccount^(0+256)	;volatile
  2761  0BBF                     l5483:	
  2762                           
  2763                           ;main.c: 687: }
  2764                           ;main.c: 688: }
  2765                           ;main.c: 692: if(prevkey!=key)
  2766  0BBF  086E               	movf	_prevkey^(0+256),w	;volatile
  2767  0BC0  0021               	movlb	1	; select bank1
  2768  0BC1  066F               	xorwf	_key^(0+128),w	;volatile
  2769  0BC2  1903               	skipnz
  2770  0BC3  2BDC               	goto	l5495
  2771                           
  2772                           ;main.c: 693: {
  2773                           ;main.c: 695: key_application(key);
  2774  0BC4  086F               	movf	_key^(0+128),w	;volatile
  2775  0BC5  3186  26B4  3189   	fcall	_key_application
  2776                           
  2777                           ;main.c: 696: if(key!=0)
  2778  0BC8  0021               	movlb	1	; select bank1
  2779  0BC9  086F               	movf	_key^(0+128),w	;volatile
  2780  0BCA  1903               	btfsc	3,2
  2781  0BCB  2BDC               	goto	l5495
  2782                           
  2783                           ;main.c: 697: {
  2784                           ;main.c: 698: count_1ms=0;
  2785  0BCC  0023               	movlb	3	; select bank3
  2786  0BCD  01B6               	clrf	_count_1ms^(0+384)	;volatile
  2787  0BCE  01B7               	clrf	(_count_1ms+1)^(0+384)	;volatile
  2788                           
  2789                           ;main.c: 699: onesecf=1;
  2790  0BCF  3001               	movlw	1
  2791  0BD0  0021               	movlb	1	; select bank1
  2792  0BD1  00ED               	movwf	??_main^(0+128)
  2793  0BD2  086D               	movf	??_main^(0+128),w
  2794  0BD3  0020               	movlb	0	; select bank0
  2795  0BD4  00E1               	movwf	_onesecf	;volatile
  2796                           
  2797                           ;main.c: 700: txonf=1;
  2798  0BD5  3001               	movlw	1
  2799  0BD6  0021               	movlb	1	; select bank1
  2800  0BD7  00ED               	movwf	??_main^(0+128)
  2801  0BD8  086D               	movf	??_main^(0+128),w
  2802  0BD9  0023               	movlb	3	; select bank3
  2803  0BDA  00DD               	movwf	_txonf^(0+384)	;volatile
  2804  0BDB  0021               	movlb	1	; select bank1
  2805  0BDC                     l5495:	
  2806                           
  2807                           ;main.c: 701: }
  2808                           ;main.c: 702: }
  2809                           ;main.c: 703: prevkey=key;
  2810  0BDC  0021               	movlb	1	; select bank1
  2811  0BDD  086F               	movf	_key^(0+128),w	;volatile
  2812  0BDE  00ED               	movwf	??_main^(0+128)
  2813  0BDF  086D               	movf	??_main^(0+128),w
  2814  0BE0  0022               	movlb	2	; select bank2
  2815  0BE1  00EE               	movwf	_prevkey^(0+256)	;volatile
  2816                           
  2817                           ;main.c: 707: if(psstatusu.psstatuss.weldoncyclestrt!=1)
  2818  0BE2  0020               	movlb	0	; select bank0
  2819  0BE3  196D               	btfsc	_psstatusu,2
  2820  0BE4  2D86               	goto	l692
  2821                           
  2822                           ;main.c: 708: {
  2823                           ;main.c: 709: if( (prevsetwirespeed!=setwirespeed) || (prevsetcurrent!=setcurrent) || di
      +                          spupdatef==1 )
  2824  0BE5  085B               	movf	_setwirespeed+1,w
  2825  0BE6  0023               	movlb	3	; select bank3
  2826  0BE7  0649               	xorwf	(_prevsetwirespeed+1)^(0+384),w
  2827  0BE8  1D03               	skipz
  2828  0BE9  2BEE               	goto	u7925
  2829  0BEA  0020               	movlb	0	; select bank0
  2830  0BEB  085A               	movf	_setwirespeed,w
  2831  0BEC  0023               	movlb	3	; select bank3
  2832  0BED  0648               	xorwf	_prevsetwirespeed^(0+384),w
  2833  0BEE                     u7925:	
  2834  0BEE  1D03               	skipz
  2835  0BEF  2C01               	goto	l5505
  2836  0BF0  0022               	movlb	2	; select bank2
  2837  0BF1  0829               	movf	(_setcurrent+1)^(0+256),w
  2838  0BF2  0023               	movlb	3	; select bank3
  2839  0BF3  0645               	xorwf	(_prevsetcurrent+1)^(0+384),w
  2840  0BF4  1D03               	skipz
  2841  0BF5  2BFA               	goto	u7935
  2842  0BF6  0022               	movlb	2	; select bank2
  2843  0BF7  0828               	movf	_setcurrent^(0+256),w
  2844  0BF8  0023               	movlb	3	; select bank3
  2845  0BF9  0644               	xorwf	_prevsetcurrent^(0+384),w
  2846  0BFA                     u7935:	
  2847  0BFA  1D03               	skipz
  2848  0BFB  2C01               	goto	l5505
  2849  0BFC  0020               	movlb	0	; select bank0
  2850  0BFD  086F               	movf	_dispupdatef,w	;volatile
  2851  0BFE  3A01               	xorlw	1
  2852  0BFF  1D03               	skipz
  2853  0C00  2C5D               	goto	l5529
  2854  0C01                     l5505:	
  2855                           
  2856                           ;main.c: 710: {
  2857                           ;main.c: 711: if(prevsetwirespeed!=setwirespeed)
  2858  0C01  0020               	movlb	0	; select bank0
  2859  0C02  085B               	movf	_setwirespeed+1,w
  2860  0C03  0023               	movlb	3	; select bank3
  2861  0C04  0649               	xorwf	(_prevsetwirespeed+1)^(0+384),w
  2862  0C05  1D03               	skipz
  2863  0C06  2C0B               	goto	u7955
  2864  0C07  0020               	movlb	0	; select bank0
  2865  0C08  085A               	movf	_setwirespeed,w
  2866  0C09  0023               	movlb	3	; select bank3
  2867  0C0A  0648               	xorwf	_prevsetwirespeed^(0+384),w
  2868  0C0B                     u7955:	
  2869  0C0B  1903               	skipnz
  2870  0C0C  2C10               	goto	l696
  2871                           
  2872                           ;main.c: 712: {
  2873                           ;main.c: 713: wfspeedchangef=1;
  2874  0C0D  0022               	movlb	2	; select bank2
  2875  0C0E  01EF               	clrf	_wfspeedchangef^(0+256)
  2876  0C0F  0AEF               	incf	_wfspeedchangef^(0+256),f
  2877  0C10                     l696:	
  2878                           
  2879                           ;main.c: 714: }
  2880                           ;main.c: 715: if(TypeU.TypeS.wirespeed==1)
  2881  0C10  0020               	movlb	0	; select bank0
  2882  0C11  1C67               	btfss	_TypeU,0
  2883  0C12  2C20               	goto	l697
  2884                           
  2885                           ;main.c: 716: {
  2886                           ;main.c: 717: TypeU.TypeS.wirespeed=1;
  2887  0C13  1467               	bsf	_TypeU,0
  2888                           
  2889                           ;main.c: 718: TypeU.TypeS.amp=0;
  2890  0C14  1068               	bcf	_TypeU+1,0
  2891                           
  2892                           ;main.c: 719: TypeU.TypeS.thickness=0;
  2893  0C15  10E7               	bcf	_TypeU,1
  2894                           
  2895                           ;main.c: 721: TypeDP.TypeD.digitdp1 =0;
  2896  0C16  106B               	bcf	_TypeDP,0
  2897                           
  2898                           ;main.c: 722: TypeDP.TypeD.digitdp2 =1;
  2899  0C17  14EB               	bsf	_TypeDP,1
  2900                           
  2901                           ;main.c: 723: TypeDP.TypeD.digitdp3 =0;
  2902  0C18  116B               	bcf	_TypeDP,2
  2903                           
  2904                           ;main.c: 724: disp_hex_window1(setwirespeed);
  2905  0C19  085B               	movf	_setwirespeed+1,w
  2906  0C1A  0021               	movlb	1	; select bank1
  2907  0C1B  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  2908  0C1C  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  2909  0C1D  0020               	movlb	0	; select bank0
  2910  0C1E  085A               	movf	_setwirespeed,w
  2911  0C1F  2C2F               	goto	L8
  2912  0C20                     l697:	
  2913                           ;main.c: 725: }
  2914                           
  2915                           
  2916                           ;main.c: 726: else if(TypeU.TypeS.amp==1)
  2917  0C20  1C68               	btfss	_TypeU+1,0
  2918  0C21  2C33               	goto	l699
  2919                           
  2920                           ;main.c: 727: {
  2921                           ;main.c: 728: TypeU.TypeS.wirespeed=0;
  2922  0C22  1067               	bcf	_TypeU,0
  2923                           
  2924                           ;main.c: 729: TypeU.TypeS.amp=1;
  2925  0C23  1468               	bsf	_TypeU+1,0
  2926                           
  2927                           ;main.c: 730: TypeU.TypeS.thickness=0;
  2928  0C24  10E7               	bcf	_TypeU,1
  2929                           
  2930                           ;main.c: 731: TypeDP.TypeD.digitdp1 =0;
  2931  0C25  106B               	bcf	_TypeDP,0
  2932                           
  2933                           ;main.c: 732: TypeDP.TypeD.digitdp2 =0;
  2934  0C26  10EB               	bcf	_TypeDP,1
  2935                           
  2936                           ;main.c: 733: TypeDP.TypeD.digitdp3 =0;
  2937  0C27  116B               	bcf	_TypeDP,2
  2938                           
  2939                           ;main.c: 734: disp_hex_window1(setcurrent);
  2940  0C28  0022               	movlb	2	; select bank2
  2941  0C29  0829               	movf	(_setcurrent+1)^(0+256),w
  2942  0C2A  0021               	movlb	1	; select bank1
  2943  0C2B  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  2944  0C2C  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  2945  0C2D  0022               	movlb	2	; select bank2
  2946  0C2E  0828               	movf	_setcurrent^(0+256),w
  2947  0C2F                     L8:	
  2948  0C2F  0021               	movlb	1	; select bank1
  2949  0C30  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  2950  0C31  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  2951  0C32  2C44               	goto	L6
  2952  0C33                     l699:	
  2953                           ;main.c: 735: }
  2954                           
  2955                           
  2956                           ;main.c: 736: else if(TypeU.TypeS.thickness==1)
  2957  0C33  1CE7               	btfss	_TypeU,1
  2958  0C34  2C47               	goto	l5521
  2959                           
  2960                           ;main.c: 737: {
  2961                           ;main.c: 738: TypeU.TypeS.wirespeed =0;
  2962  0C35  1067               	bcf	_TypeU,0
  2963                           
  2964                           ;main.c: 739: TypeU.TypeS.amp =0;
  2965  0C36  1068               	bcf	_TypeU+1,0
  2966                           
  2967                           ;main.c: 740: TypeU.TypeS.thickness =1;
  2968  0C37  14E7               	bsf	_TypeU,1
  2969                           
  2970                           ;main.c: 741: TypeDP.TypeD.digitdp1 =0;
  2971  0C38  106B               	bcf	_TypeDP,0
  2972                           
  2973                           ;main.c: 742: TypeDP.TypeD.digitdp2 =1;
  2974  0C39  14EB               	bsf	_TypeDP,1
  2975                           
  2976                           ;main.c: 743: TypeDP.TypeD.digitdp3 =0;
  2977  0C3A  116B               	bcf	_TypeDP,2
  2978                           
  2979                           ;main.c: 744: disp_hex_window1(pstowfstru.pstowfstrs.setthickness);
  2980  0C3B  0024               	movlb	4	; select bank4
  2981  0C3C  084E               	movf	(_pstowfstru^(0+512)+4),w
  2982  0C3D  0021               	movlb	1	; select bank1
  2983  0C3E  00ED               	movwf	??_main^(0+128)
  2984  0C3F  01EE               	clrf	(??_main^(0+128)+1)
  2985  0C40  086D               	movf	??_main^(0+128),w
  2986  0C41  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  2987  0C42  086E               	movf	(??_main+1)^(0+128),w
  2988  0C43  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  2989  0C44                     L6:	
  2990  0C44  319C  2427  3189   	fcall	_disp_hex_window1
  2991  0C47                     l5521:	
  2992                           
  2993                           ;main.c: 745: }
  2994                           ;main.c: 746: pstowfstru.pstowfstrs.setwspeed=setwirespeed;
  2995  0C47  0020               	movlb	0	; select bank0
  2996  0C48  085A               	movf	_setwirespeed,w
  2997  0C49  0021               	movlb	1	; select bank1
  2998  0C4A  00ED               	movwf	??_main^(0+128)
  2999  0C4B  086D               	movf	??_main^(0+128),w
  3000  0C4C  0024               	movlb	4	; select bank4
  3001  0C4D  00CB               	movwf	(_pstowfstru^(0+512)+1)
  3002                           
  3003                           ;main.c: 748: count_1ms=0;
  3004  0C4E  0023               	movlb	3	; select bank3
  3005  0C4F  01B6               	clrf	_count_1ms^(0+384)	;volatile
  3006  0C50  01B7               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3007                           
  3008                           ;main.c: 749: onesecf=1;
  3009  0C51  3001               	movlw	1
  3010  0C52  0021               	movlb	1	; select bank1
  3011  0C53  00ED               	movwf	??_main^(0+128)
  3012  0C54  086D               	movf	??_main^(0+128),w
  3013  0C55  0020               	movlb	0	; select bank0
  3014  0C56  00E1               	movwf	_onesecf	;volatile
  3015                           
  3016                           ;main.c: 750: txonf=1;
  3017  0C57  3001               	movlw	1
  3018  0C58  0021               	movlb	1	; select bank1
  3019  0C59  00ED               	movwf	??_main^(0+128)
  3020  0C5A  086D               	movf	??_main^(0+128),w
  3021  0C5B  0023               	movlb	3	; select bank3
  3022  0C5C  00DD               	movwf	_txonf^(0+384)	;volatile
  3023  0C5D                     l5529:	
  3024                           
  3025                           ;main.c: 751: }
  3026                           ;main.c: 752: prevsetwirespeed=setwirespeed;
  3027  0C5D  0020               	movlb	0	; select bank0
  3028  0C5E  085B               	movf	_setwirespeed+1,w
  3029  0C5F  0023               	movlb	3	; select bank3
  3030  0C60  01C9               	clrf	(_prevsetwirespeed+1)^(0+384)
  3031  0C61  07C9               	addwf	(_prevsetwirespeed+1)^(0+384),f
  3032  0C62  0020               	movlb	0	; select bank0
  3033  0C63  085A               	movf	_setwirespeed,w
  3034  0C64  0023               	movlb	3	; select bank3
  3035  0C65  01C8               	clrf	_prevsetwirespeed^(0+384)
  3036  0C66  07C8               	addwf	_prevsetwirespeed^(0+384),f
  3037                           
  3038                           ;main.c: 753: prevsetcurrent=setcurrent;
  3039  0C67  0022               	movlb	2	; select bank2
  3040  0C68  0829               	movf	(_setcurrent+1)^(0+256),w
  3041  0C69  0023               	movlb	3	; select bank3
  3042  0C6A  01C5               	clrf	(_prevsetcurrent+1)^(0+384)
  3043  0C6B  07C5               	addwf	(_prevsetcurrent+1)^(0+384),f
  3044  0C6C  0022               	movlb	2	; select bank2
  3045  0C6D  0828               	movf	_setcurrent^(0+256),w
  3046  0C6E  0023               	movlb	3	; select bank3
  3047  0C6F  01C4               	clrf	_prevsetcurrent^(0+384)
  3048  0C70  07C4               	addwf	_prevsetcurrent^(0+384),f
  3049                           
  3050                           ;main.c: 755: if(((prevsetvoltage!=setvoltage) || dispupdatef==1) && (TypeU.TypeS.vtg==1
      +                          ) )
  3051  0C71  0020               	movlb	0	; select bank0
  3052  0C72  0859               	movf	_setvoltage+1,w
  3053  0C73  0023               	movlb	3	; select bank3
  3054  0C74  0647               	xorwf	(_prevsetvoltage+1)^(0+384),w
  3055  0C75  1D03               	skipz
  3056  0C76  2C7B               	goto	u7995
  3057  0C77  0020               	movlb	0	; select bank0
  3058  0C78  0858               	movf	_setvoltage,w
  3059  0C79  0023               	movlb	3	; select bank3
  3060  0C7A  0646               	xorwf	_prevsetvoltage^(0+384),w
  3061  0C7B                     u7995:	
  3062  0C7B  1D03               	skipz
  3063  0C7C  2C82               	goto	l704
  3064  0C7D  0020               	movlb	0	; select bank0
  3065  0C7E  086F               	movf	_dispupdatef,w	;volatile
  3066  0C7F  3A01               	xorlw	1
  3067  0C80  1D03               	skipz
  3068  0C81  2CC3               	goto	l5555
  3069  0C82                     l704:	
  3070  0C82  0020               	movlb	0	; select bank0
  3071  0C83  1CE8               	btfss	_TypeU+1,1
  3072  0C84  2CC3               	goto	l5555
  3073                           
  3074                           ;main.c: 756: {
  3075                           ;main.c: 757: TypeDP.TypeD.digitdp4 =0;
  3076  0C85  11EB               	bcf	_TypeDP,3
  3077                           
  3078                           ;main.c: 758: TypeDP.TypeD.digitdp5 =1;
  3079  0C86  166B               	bsf	_TypeDP,4
  3080                           
  3081                           ;main.c: 759: TypeDP.TypeD.digitdp6 =0;
  3082  0C87  12EB               	bcf	_TypeDP,5
  3083                           
  3084                           ;main.c: 760: TypeU.TypeS.arclength =0;
  3085  0C88  1167               	bcf	_TypeU,2
  3086                           
  3087                           ;main.c: 761: TypeU.TypeS.vtg =1;
  3088  0C89  14E8               	bsf	_TypeU+1,1
  3089                           
  3090                           ;main.c: 762: TypeU.TypeS.sec =0;
  3091  0C8A  1168               	bcf	_TypeU+1,2
  3092                           
  3093                           ;main.c: 763: disp_hex_window2(setvoltage);
  3094  0C8B  0859               	movf	_setvoltage+1,w
  3095  0C8C  0021               	movlb	1	; select bank1
  3096  0C8D  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  3097  0C8E  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  3098  0C8F  0020               	movlb	0	; select bank0
  3099  0C90  0858               	movf	_setvoltage,w
  3100  0C91  0021               	movlb	1	; select bank1
  3101  0C92  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  3102  0C93  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  3103  0C94  319C  248B  3189   	fcall	_disp_hex_window2
  3104                           
  3105                           ;main.c: 764: pstowfstru.pstowfstrs.Lo_setvoltage=setvoltage;
  3106  0C97  0020               	movlb	0	; select bank0
  3107  0C98  0858               	movf	_setvoltage,w
  3108  0C99  0021               	movlb	1	; select bank1
  3109  0C9A  00ED               	movwf	??_main^(0+128)
  3110  0C9B  086D               	movf	??_main^(0+128),w
  3111  0C9C  0024               	movlb	4	; select bank4
  3112  0C9D  00D0               	movwf	(_pstowfstru^(0+512)+6)
  3113                           
  3114                           ;main.c: 765: pstowfstru.pstowfstrs.Hi_setvoltage=setvoltage >> 8;
  3115  0C9E  0020               	movlb	0	; select bank0
  3116  0C9F  0859               	movf	_setvoltage+1,w
  3117  0CA0  0021               	movlb	1	; select bank1
  3118  0CA1  00ED               	movwf	??_main^(0+128)
  3119  0CA2  086D               	movf	??_main^(0+128),w
  3120  0CA3  0024               	movlb	4	; select bank4
  3121  0CA4  00CF               	movwf	(_pstowfstru^(0+512)+5)
  3122                           
  3123                           ;main.c: 766: count_1ms=0;
  3124  0CA5  0023               	movlb	3	; select bank3
  3125  0CA6  01B6               	clrf	_count_1ms^(0+384)	;volatile
  3126  0CA7  01B7               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3127                           
  3128                           ;main.c: 767: onesecf=1;
  3129  0CA8  3001               	movlw	1
  3130  0CA9  0021               	movlb	1	; select bank1
  3131  0CAA  00ED               	movwf	??_main^(0+128)
  3132  0CAB  086D               	movf	??_main^(0+128),w
  3133  0CAC  0020               	movlb	0	; select bank0
  3134  0CAD  00E1               	movwf	_onesecf	;volatile
  3135                           
  3136                           ;main.c: 768: txonf=1;
  3137  0CAE  3001               	movlw	1
  3138  0CAF  0021               	movlb	1	; select bank1
  3139  0CB0  00ED               	movwf	??_main^(0+128)
  3140  0CB1  086D               	movf	??_main^(0+128),w
  3141  0CB2  0023               	movlb	3	; select bank3
  3142  0CB3  00DD               	movwf	_txonf^(0+384)	;volatile
  3143                           
  3144                           ;main.c: 769: prevsetvoltage=setvoltage;
  3145  0CB4  0020               	movlb	0	; select bank0
  3146  0CB5  0859               	movf	_setvoltage+1,w
  3147  0CB6  0023               	movlb	3	; select bank3
  3148  0CB7  01C7               	clrf	(_prevsetvoltage+1)^(0+384)
  3149  0CB8  07C7               	addwf	(_prevsetvoltage+1)^(0+384),f
  3150  0CB9  0020               	movlb	0	; select bank0
  3151  0CBA  0858               	movf	_setvoltage,w
  3152  0CBB  0023               	movlb	3	; select bank3
  3153  0CBC  01C6               	clrf	_prevsetvoltage^(0+384)
  3154  0CBD  07C6               	addwf	_prevsetvoltage^(0+384),f
  3155                           
  3156                           ;main.c: 770: parclength=100;
  3157  0CBE  3064               	movlw	100
  3158  0CBF  0024               	movlb	4	; select bank4
  3159  0CC0  00E2               	movwf	_parclength^(0+512)
  3160  0CC1  3000               	movlw	0
  3161  0CC2  00E3               	movwf	(_parclength^(0+512)+1)
  3162  0CC3                     l5555:	
  3163                           
  3164                           ;main.c: 771: }
  3165                           ;main.c: 775: if(((parclength!=pstowfstru.pstowfstrs.arclength) || dispupdatef==1) && (T
      +                          ypeU.TypeS.arclength==1))
  3166  0CC3  0024               	movlb	4	; select bank4
  3167  0CC4  0851               	movf	(_pstowfstru^(0+512)+7),w
  3168  0CC5  0021               	movlb	1	; select bank1
  3169  0CC6  00ED               	movwf	??_main^(0+128)
  3170  0CC7  01EE               	clrf	(??_main^(0+128)+1)
  3171  0CC8  0024               	movlb	4	; select bank4
  3172  0CC9  0863               	movf	(_parclength+1)^(0+512),w
  3173  0CCA  0021               	movlb	1	; select bank1
  3174  0CCB  066E               	xorwf	(??_main+1)^(0+128),w
  3175  0CCC  1D03               	skipz
  3176  0CCD  2CD2               	goto	u8025
  3177  0CCE  0024               	movlb	4	; select bank4
  3178  0CCF  0862               	movf	_parclength^(0+512),w
  3179  0CD0  0021               	movlb	1	; select bank1
  3180  0CD1  066D               	xorwf	??_main^(0+128),w
  3181  0CD2                     u8025:	
  3182  0CD2  1D03               	skipz
  3183  0CD3  2CD9               	goto	l707
  3184  0CD4  0020               	movlb	0	; select bank0
  3185  0CD5  086F               	movf	_dispupdatef,w	;volatile
  3186  0CD6  3A01               	xorlw	1
  3187  0CD7  1D03               	skipz
  3188  0CD8  2D53               	goto	l5603
  3189  0CD9                     l707:	
  3190  0CD9  0020               	movlb	0	; select bank0
  3191  0CDA  1D67               	btfss	_TypeU,2
  3192  0CDB  2D53               	goto	l5603
  3193                           
  3194                           ;main.c: 776: {
  3195                           ;main.c: 779: if(weldmode=='P')
  3196  0CDC  0866               	movf	_weldmode,w	;volatile
  3197  0CDD  3A50               	xorlw	80
  3198  0CDE  1D03               	skipz
  3199  0CDF  2CFF               	goto	l5567
  3200                           
  3201                           ;main.c: 780: {
  3202                           ;main.c: 781: if(pstowfstru.pstowfstrs.arclength>=40)
  3203  0CE0  3028               	movlw	40
  3204  0CE1  0024               	movlb	4	; select bank4
  3205  0CE2  0251               	subwf	(_pstowfstru^(0+512)+7),w
  3206  0CE3  1C03               	skipc
  3207  0CE4  2CED               	goto	l5565
  3208                           
  3209                           ;main.c: 782: disparclength=pstowfstru.pstowfstrs.arclength-40;
  3210  0CE5  0851               	movf	(_pstowfstru^(0+512)+7),w
  3211  0CE6  3ED8               	addlw	216
  3212  0CE7  00B8               	movwf	_disparclength^(0+512)
  3213  0CE8  30FF               	movlw	255
  3214  0CE9  1803               	skipnc
  3215  0CEA  3000               	movlw	0
  3216  0CEB  00B9               	movwf	(_disparclength^(0+512)+1)
  3217  0CEC  2CFF               	goto	l5567
  3218  0CED                     l5565:	
  3219                           
  3220                           ;main.c: 783: else
  3221                           ;main.c: 784: disparclength=40 - pstowfstru.pstowfstrs.arclength;
  3222  0CED  0851               	movf	(_pstowfstru^(0+512)+7),w
  3223  0CEE  0021               	movlb	1	; select bank1
  3224  0CEF  00ED               	movwf	??_main^(0+128)
  3225  0CF0  01EE               	clrf	(??_main^(0+128)+1)
  3226  0CF1  09ED               	comf	??_main^(0+128),f
  3227  0CF2  09EE               	comf	(??_main^(0+128)+1),f
  3228  0CF3  0AED               	incf	??_main^(0+128),f
  3229  0CF4  1903               	skipnz
  3230  0CF5  0AEE               	incf	(??_main^(0+128)+1),f
  3231  0CF6  086D               	movf	??_main^(0+128),w
  3232  0CF7  3E28               	addlw	40
  3233  0CF8  0024               	movlb	4	; select bank4
  3234  0CF9  00B8               	movwf	_disparclength^(0+512)
  3235  0CFA  3000               	movlw	0
  3236  0CFB  0021               	movlb	1	; select bank1
  3237  0CFC  3D6E               	addwfc	(??_main+1)^(0+128),w
  3238  0CFD  0024               	movlb	4	; select bank4
  3239  0CFE  00B9               	movwf	(_disparclength+1)^(0+512)
  3240  0CFF                     l5567:	
  3241                           
  3242                           ;main.c: 785: }
  3243                           ;main.c: 787: if(weldmode=='G')
  3244  0CFF  0020               	movlb	0	; select bank0
  3245  0D00  0866               	movf	_weldmode,w	;volatile
  3246  0D01  3A47               	xorlw	71
  3247  0D02  1D03               	skipz
  3248  0D03  2D10               	goto	l5571
  3249                           
  3250                           ;main.c: 788: {
  3251                           ;main.c: 789: disparclength=pstowfstru.pstowfstrs.arclength;
  3252  0D04  0024               	movlb	4	; select bank4
  3253  0D05  0851               	movf	(_pstowfstru^(0+512)+7),w
  3254  0D06  0021               	movlb	1	; select bank1
  3255  0D07  00ED               	movwf	??_main^(0+128)
  3256  0D08  01EE               	clrf	(??_main^(0+128)+1)
  3257  0D09  086D               	movf	??_main^(0+128),w
  3258  0D0A  0024               	movlb	4	; select bank4
  3259  0D0B  00B8               	movwf	_disparclength^(0+512)
  3260  0D0C  0021               	movlb	1	; select bank1
  3261  0D0D  086E               	movf	(??_main+1)^(0+128),w
  3262  0D0E  0024               	movlb	4	; select bank4
  3263  0D0F  00B9               	movwf	(_disparclength+1)^(0+512)
  3264  0D10                     l5571:	
  3265                           
  3266                           ;main.c: 790: }
  3267                           ;main.c: 792: TypeDP.TypeD.digitdp4 =0;
  3268  0D10  0020               	movlb	0	; select bank0
  3269  0D11  11EB               	bcf	_TypeDP,3
  3270                           
  3271                           ;main.c: 793: TypeDP.TypeD.digitdp5 =0;
  3272  0D12  126B               	bcf	_TypeDP,4
  3273                           
  3274                           ;main.c: 794: TypeDP.TypeD.digitdp6 =0;
  3275  0D13  12EB               	bcf	_TypeDP,5
  3276                           
  3277                           ;main.c: 795: TypeU.TypeS.arclength =1;
  3278  0D14  1567               	bsf	_TypeU,2
  3279                           
  3280                           ;main.c: 796: TypeU.TypeS.vtg =0;
  3281  0D15  10E8               	bcf	_TypeU+1,1
  3282                           
  3283                           ;main.c: 797: TypeU.TypeS.sec =0;
  3284  0D16  1168               	bcf	_TypeU+1,2
  3285                           
  3286                           ;main.c: 798: disp_hex_window2(disparclength);
  3287  0D17  0024               	movlb	4	; select bank4
  3288  0D18  0839               	movf	(_disparclength+1)^(0+512),w
  3289  0D19  0021               	movlb	1	; select bank1
  3290  0D1A  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  3291  0D1B  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  3292  0D1C  0024               	movlb	4	; select bank4
  3293  0D1D  0838               	movf	_disparclength^(0+512),w
  3294  0D1E  0021               	movlb	1	; select bank1
  3295  0D1F  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  3296  0D20  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  3297  0D21  319C  248B  3189   	fcall	_disp_hex_window2
  3298                           
  3299                           ;main.c: 801: if(weldmode=='P')
  3300  0D24  0020               	movlb	0	; select bank0
  3301  0D25  0866               	movf	_weldmode,w	;volatile
  3302  0D26  3A50               	xorlw	80
  3303  0D27  1D03               	skipz
  3304  0D28  2D30               	goto	l5593
  3305                           
  3306                           ;main.c: 802: {
  3307                           ;main.c: 803: if(pstowfstru.pstowfstrs.arclength>=40)
  3308  0D29  3028               	movlw	40
  3309  0D2A  0024               	movlb	4	; select bank4
  3310  0D2B  0251               	subwf	(_pstowfstru^(0+512)+7),w
  3311  0D2C  1803               	btfsc	3,0
  3312  0D2D  2D30               	goto	l5593
  3313                           
  3314                           ;main.c: 805: else
  3315                           ;main.c: 806: diswin1[3]=0x26;
  3316                           
  3317                           ;main.c: 804: diswin1[3]=0x25;
  3318  0D2E  3026               	movlw	38
  3319  0D2F  2D31               	goto	L4
  3320  0D30                     l5593:	
  3321                           ;main.c: 807: }
  3322                           
  3323                           
  3324                           ;main.c: 808: else
  3325                           ;main.c: 809: diswin1[3]=0x25;
  3326  0D30  3025               	movlw	37
  3327  0D31                     L4:	
  3328  0D31  0021               	movlb	1	; select bank1
  3329  0D32  00ED               	movwf	??_main^(0+128)
  3330  0D33  086D               	movf	??_main^(0+128),w
  3331  0D34  0022               	movlb	2	; select bank2
  3332  0D35  00E7               	movwf	(_diswin1^(0+256)+3)
  3333                           
  3334                           ;main.c: 812: count_1ms=0;
  3335  0D36  0023               	movlb	3	; select bank3
  3336  0D37  01B6               	clrf	_count_1ms^(0+384)	;volatile
  3337  0D38  01B7               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3338                           
  3339                           ;main.c: 813: onesecf=1;
  3340  0D39  3001               	movlw	1
  3341  0D3A  0021               	movlb	1	; select bank1
  3342  0D3B  00ED               	movwf	??_main^(0+128)
  3343  0D3C  086D               	movf	??_main^(0+128),w
  3344  0D3D  0020               	movlb	0	; select bank0
  3345  0D3E  00E1               	movwf	_onesecf	;volatile
  3346                           
  3347                           ;main.c: 814: txonf=1;
  3348  0D3F  3001               	movlw	1
  3349  0D40  0021               	movlb	1	; select bank1
  3350  0D41  00ED               	movwf	??_main^(0+128)
  3351  0D42  086D               	movf	??_main^(0+128),w
  3352  0D43  0023               	movlb	3	; select bank3
  3353  0D44  00DD               	movwf	_txonf^(0+384)	;volatile
  3354                           
  3355                           ;main.c: 815: prevsetvoltage=0;
  3356  0D45  01C6               	clrf	_prevsetvoltage^(0+384)
  3357  0D46  01C7               	clrf	(_prevsetvoltage+1)^(0+384)
  3358                           
  3359                           ;main.c: 816: parclength=pstowfstru.pstowfstrs.arclength;
  3360  0D47  0024               	movlb	4	; select bank4
  3361  0D48  0851               	movf	(_pstowfstru^(0+512)+7),w
  3362  0D49  0021               	movlb	1	; select bank1
  3363  0D4A  00ED               	movwf	??_main^(0+128)
  3364  0D4B  01EE               	clrf	(??_main^(0+128)+1)
  3365  0D4C  086D               	movf	??_main^(0+128),w
  3366  0D4D  0024               	movlb	4	; select bank4
  3367  0D4E  00E2               	movwf	_parclength^(0+512)
  3368  0D4F  0021               	movlb	1	; select bank1
  3369  0D50  086E               	movf	(??_main+1)^(0+128),w
  3370  0D51  0024               	movlb	4	; select bank4
  3371  0D52  00E3               	movwf	(_parclength+1)^(0+512)
  3372  0D53                     l5603:	
  3373                           
  3374                           ;main.c: 817: }
  3375                           ;main.c: 820: if((psstatusu.psstatuss.gasoncommand!=1)&&(gaschkfg == 0))
  3376  0D53  0020               	movlb	0	; select bank0
  3377  0D54  18ED               	btfsc	_psstatusu,1
  3378  0D55  2D5C               	goto	l716
  3379  0D56  0022               	movlb	2	; select bank2
  3380  0D57  08C1               	movf	_gaschkfg^(0+256),f
  3381  0D58  1D03               	skipz
  3382  0D59  2D5C               	goto	l716
  3383                           
  3384                           ;main.c: 821: PORTCbits.RC3 =0;
  3385  0D5A  0020               	movlb	0	; select bank0
  3386  0D5B  118E               	bcf	14,3	;volatile
  3387  0D5C                     l716:	
  3388                           
  3389                           ;main.c: 822: if(psstatusu.psstatuss.motoroncommand!=1)
  3390  0D5C  0020               	movlb	0	; select bank0
  3391  0D5D  19ED               	btfsc	_psstatusu,3
  3392  0D5E  2D79               	goto	l5611
  3393                           
  3394                           ;main.c: 823: Update_PWM(setwirespeed*0);
  3395  0D5F  085B               	movf	_setwirespeed+1,w
  3396  0D60  0021               	movlb	1	; select bank1
  3397  0D61  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3398  0D62  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3399  0D63  0020               	movlb	0	; select bank0
  3400  0D64  085A               	movf	_setwirespeed,w
  3401  0D65  0021               	movlb	1	; select bank1
  3402  0D66  01A0               	clrf	___wmul@multiplier^(0+128)
  3403  0D67  07A0               	addwf	___wmul@multiplier^(0+128),f
  3404  0D68  3000               	movlw	0
  3405  0D69  00A2               	movwf	___wmul@multiplicand^(0+128)
  3406  0D6A  3000               	movlw	0
  3407  0D6B  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  3408  0D6C  3199  2193  3189   	fcall	___wmul
  3409  0D6F  0021               	movlb	1	; select bank1
  3410  0D70  0821               	movf	(?___wmul+1)^(0+128),w
  3411  0D71  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3412  0D72  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3413  0D73  0820               	movf	?___wmul^(0+128),w
  3414  0D74  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3415  0D75  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3416  0D76  3199  21D3  3189   	fcall	_Update_PWM
  3417  0D79                     l5611:	
  3418                           
  3419                           ;main.c: 825: openloopcnt =0;
  3420  0D79  0024               	movlb	4	; select bank4
  3421  0D7A  01C0               	clrf	_openloopcnt^(0+512)
  3422  0D7B  01C1               	clrf	(_openloopcnt+1)^(0+512)
  3423                           
  3424                           ;main.c: 826: softstartf =0;
  3425  0D7C  0023               	movlb	3	; select bank3
  3426  0D7D  01DB               	clrf	_softstartf^(0+384)	;volatile
  3427                           
  3428                           ;main.c: 827: dispupdatef =0;
  3429  0D7E  0020               	movlb	0	; select bank0
  3430  0D7F  01EF               	clrf	_dispupdatef	;volatile
  3431                           
  3432                           ;main.c: 828: closeloopf=0;
  3433  0D80  0022               	movlb	2	; select bank2
  3434  0D81  01B6               	clrf	_closeloopf^(0+256)
  3435                           
  3436                           ;main.c: 829: cyclestrtf=0;
  3437  0D82  01BC               	clrf	_cyclestrtf^(0+256)
  3438                           
  3439                           ;main.c: 831: psstatusu.psstatuss.creepspeedon=1;
  3440  0D83  0020               	movlb	0	; select bank0
  3441  0D84  16ED               	bsf	_psstatusu,5
  3442                           
  3443                           ;main.c: 834: }
  3444  0D85  2FE6               	goto	l5717
  3445  0D86                     l692:	
  3446                           
  3447                           ;main.c: 836: else if(psstatusu.psstatuss.weldoncyclestrt==1)
  3448  0D86  1D6D               	btfss	_psstatusu,2
  3449  0D87  2FE6               	goto	l5717
  3450                           
  3451                           ;main.c: 837: {
  3452                           ;main.c: 838: if(psstatusu.psstatuss.gasoncommand==1)
  3453  0D88  1CED               	btfss	_psstatusu,1
  3454  0D89  2D8C               	goto	l720
  3455                           
  3456                           ;main.c: 839: {
  3457                           ;main.c: 840: PORTCbits.RC3 =1;
  3458  0D8A  158E               	bsf	14,3	;volatile
  3459                           
  3460                           ;main.c: 841: }
  3461  0D8B  2D8D               	goto	l721
  3462  0D8C                     l720:	
  3463                           
  3464                           ;main.c: 842: else
  3465                           ;main.c: 843: {
  3466                           ;main.c: 844: PORTCbits.RC3 =0;
  3467  0D8C  118E               	bcf	14,3	;volatile
  3468  0D8D                     l721:	
  3469                           
  3470                           ;main.c: 845: }
  3471                           ;main.c: 846: if(psstatusu.psstatuss.motoroncommand==1)
  3472  0D8D  1DED               	btfss	_psstatusu,3
  3473  0D8E  2F98               	goto	l722
  3474                           
  3475                           ;main.c: 847: {
  3476                           ;main.c: 848: if(psstatusu.psstatuss.creepspeedon==1)
  3477  0D8F  1EED               	btfss	_psstatusu,5
  3478  0D90  2E38               	goto	l723
  3479                           
  3480                           ;main.c: 849: {
  3481                           ;main.c: 850: cyclestrtf=0;
  3482  0D91  0022               	movlb	2	; select bank2
  3483  0D92  01BC               	clrf	_cyclestrtf^(0+256)
  3484                           
  3485                           ;main.c: 853: newsetwirespeed=setwirespeed*creep_speed*0.01;
  3486  0D93  0020               	movlb	0	; select bank0
  3487  0D94  085B               	movf	_setwirespeed+1,w
  3488  0D95  0021               	movlb	1	; select bank1
  3489  0D96  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  3490  0D97  07A3               	addwf	(___wmul@multiplicand+1)^(0+128),f
  3491  0D98  0020               	movlb	0	; select bank0
  3492  0D99  085A               	movf	_setwirespeed,w
  3493  0D9A  0021               	movlb	1	; select bank1
  3494  0D9B  01A2               	clrf	___wmul@multiplicand^(0+128)
  3495  0D9C  07A2               	addwf	___wmul@multiplicand^(0+128),f
  3496  0D9D  0022               	movlb	2	; select bank2
  3497  0D9E  083B               	movf	_creep_speed^(0+256),w	;volatile
  3498  0D9F  0021               	movlb	1	; select bank1
  3499  0DA0  00ED               	movwf	??_main^(0+128)
  3500  0DA1  01EE               	clrf	(??_main^(0+128)+1)
  3501  0DA2  086D               	movf	??_main^(0+128),w
  3502  0DA3  00A0               	movwf	___wmul@multiplier^(0+128)
  3503  0DA4  086E               	movf	(??_main+1)^(0+128),w
  3504  0DA5  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  3505  0DA6  3199  2193  3189   	fcall	___wmul
  3506  0DA9  0021               	movlb	1	; select bank1
  3507  0DAA  0821               	movf	(?___wmul+1)^(0+128),w
  3508  0DAB  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3509  0DAC  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3510  0DAD  0820               	movf	?___wmul^(0+128),w
  3511  0DAE  01A8               	clrf	___lwtoft@c^(0+128)
  3512  0DAF  07A8               	addwf	___lwtoft@c^(0+128),f
  3513  0DB0  3199  213A  3189   	fcall	___lwtoft
  3514  0DB3  0021               	movlb	1	; select bank1
  3515  0DB4  0828               	movf	?___lwtoft^(0+128),w
  3516  0DB5  00B8               	movwf	___ftmul@f2^(0+128)
  3517  0DB6  0829               	movf	(?___lwtoft+1)^(0+128),w
  3518  0DB7  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3519  0DB8  082A               	movf	(?___lwtoft+2)^(0+128),w
  3520  0DB9  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3521  0DBA  30D7               	movlw	215
  3522  0DBB  00B5               	movwf	___ftmul@f1^(0+128)
  3523  0DBC  3023               	movlw	35
  3524  0DBD  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3525  0DBE  303C               	movlw	60
  3526  0DBF  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3527  0DC0  3192  22E3  3189   	fcall	___ftmul
  3528  0DC3  0021               	movlb	1	; select bank1
  3529  0DC4  0835               	movf	?___ftmul^(0+128),w
  3530  0DC5  00C5               	movwf	___fttol@f1^(0+128)
  3531  0DC6  0836               	movf	(?___ftmul+1)^(0+128),w
  3532  0DC7  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3533  0DC8  0837               	movf	(?___ftmul+2)^(0+128),w
  3534  0DC9  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3535  0DCA  319F  2779  3189   	fcall	___fttol
  3536  0DCD  0021               	movlb	1	; select bank1
  3537  0DCE  0846               	movf	(?___fttol^(0+128)+1),w
  3538  0DCF  0020               	movlb	0	; select bank0
  3539  0DD0  01EA               	clrf	_newsetwirespeed+1
  3540  0DD1  07EA               	addwf	_newsetwirespeed+1,f
  3541  0DD2  0021               	movlb	1	; select bank1
  3542  0DD3  0845               	movf	?___fttol^(0+128),w
  3543  0DD4  0020               	movlb	0	; select bank0
  3544  0DD5  01E9               	clrf	_newsetwirespeed
  3545  0DD6  07E9               	addwf	_newsetwirespeed,f
  3546                           
  3547                           ;main.c: 855: if(newsetwirespeed<=20)
  3548  0DD7  3000               	movlw	0
  3549  0DD8  026A               	subwf	_newsetwirespeed+1,w
  3550  0DD9  3015               	movlw	21
  3551  0DDA  1903               	skipnz
  3552  0DDB  0269               	subwf	_newsetwirespeed,w
  3553  0DDC  1803               	skipnc
  3554  0DDD  2DE2               	goto	l724
  3555                           
  3556                           ;main.c: 856: newsetwirespeed=20;
  3557  0DDE  3014               	movlw	20
  3558  0DDF  00E9               	movwf	_newsetwirespeed
  3559  0DE0  3000               	movlw	0
  3560  0DE1  00EA               	movwf	_newsetwirespeed+1
  3561  0DE2                     l724:	
  3562                           
  3563                           ;main.c: 862: if(newsetwirespeed <= 60)
  3564  0DE2  3000               	movlw	0
  3565  0DE3  026A               	subwf	_newsetwirespeed+1,w
  3566  0DE4  303D               	movlw	61
  3567  0DE5  1903               	skipnz
  3568  0DE6  0269               	subwf	_newsetwirespeed,w
  3569  0DE7  1803               	skipnc
  3570  0DE8  2E02               	goto	l5639
  3571                           
  3572                           ;main.c: 863: {
  3573                           ;main.c: 864: Update_PWM(newsetwirespeed*3.6);
  3574  0DE9  086A               	movf	_newsetwirespeed+1,w
  3575  0DEA  0021               	movlb	1	; select bank1
  3576  0DEB  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3577  0DEC  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3578  0DED  0020               	movlb	0	; select bank0
  3579  0DEE  0869               	movf	_newsetwirespeed,w
  3580  0DEF  0021               	movlb	1	; select bank1
  3581  0DF0  01A8               	clrf	___lwtoft@c^(0+128)
  3582  0DF1  07A8               	addwf	___lwtoft@c^(0+128),f
  3583  0DF2  3199  213A  3189   	fcall	___lwtoft
  3584  0DF5  0021               	movlb	1	; select bank1
  3585  0DF6  0828               	movf	?___lwtoft^(0+128),w
  3586  0DF7  00B8               	movwf	___ftmul@f2^(0+128)
  3587  0DF8  0829               	movf	(?___lwtoft+1)^(0+128),w
  3588  0DF9  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3589  0DFA  082A               	movf	(?___lwtoft+2)^(0+128),w
  3590  0DFB  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3591  0DFC  3066               	movlw	102
  3592  0DFD  00B5               	movwf	___ftmul@f1^(0+128)
  3593  0DFE  3066               	movlw	102
  3594  0DFF  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3595  0E00  3040               	movlw	64
  3596  0E01  2E1B               	goto	L7
  3597  0E02                     l5639:	
  3598                           ;main.c: 865: }else
  3599                           
  3600                           
  3601                           ;main.c: 866: {
  3602                           ;main.c: 867: Update_PWM(newsetwirespeed*1.4);
  3603  0E02  0020               	movlb	0	; select bank0
  3604  0E03  086A               	movf	_newsetwirespeed+1,w
  3605  0E04  0021               	movlb	1	; select bank1
  3606  0E05  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3607  0E06  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3608  0E07  0020               	movlb	0	; select bank0
  3609  0E08  0869               	movf	_newsetwirespeed,w
  3610  0E09  0021               	movlb	1	; select bank1
  3611  0E0A  01A8               	clrf	___lwtoft@c^(0+128)
  3612  0E0B  07A8               	addwf	___lwtoft@c^(0+128),f
  3613  0E0C  3199  213A  3189   	fcall	___lwtoft
  3614  0E0F  0021               	movlb	1	; select bank1
  3615  0E10  0828               	movf	?___lwtoft^(0+128),w
  3616  0E11  00B8               	movwf	___ftmul@f2^(0+128)
  3617  0E12  0829               	movf	(?___lwtoft+1)^(0+128),w
  3618  0E13  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3619  0E14  082A               	movf	(?___lwtoft+2)^(0+128),w
  3620  0E15  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3621  0E16  3033               	movlw	51
  3622  0E17  00B5               	movwf	___ftmul@f1^(0+128)
  3623  0E18  30B3               	movlw	179
  3624  0E19  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3625  0E1A  303F               	movlw	63
  3626  0E1B                     L7:	
  3627  0E1B  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3628  0E1C  3192  22E3  3189   	fcall	___ftmul
  3629  0E1F  0021               	movlb	1	; select bank1
  3630  0E20  0835               	movf	?___ftmul^(0+128),w
  3631  0E21  00C5               	movwf	___fttol@f1^(0+128)
  3632  0E22  0836               	movf	(?___ftmul+1)^(0+128),w
  3633  0E23  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3634  0E24  0837               	movf	(?___ftmul+2)^(0+128),w
  3635  0E25  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3636  0E26  319F  2779  3189   	fcall	___fttol
  3637  0E29  0021               	movlb	1	; select bank1
  3638  0E2A  0846               	movf	(?___fttol^(0+128)+1),w
  3639  0E2B  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3640  0E2C  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3641  0E2D  0845               	movf	?___fttol^(0+128),w
  3642  0E2E  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3643  0E2F  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3644  0E30  3199  21D3  3189   	fcall	_Update_PWM
  3645                           
  3646                           ;main.c: 868: }
  3647                           ;main.c: 870: TRISAbits.TRISA5=0;
  3648  0E33  0021               	movlb	1	; select bank1
  3649  0E34  128C               	bcf	12,5	;volatile
  3650                           
  3651                           ;main.c: 871: PORTAbits.RA0=1;
  3652  0E35  0020               	movlb	0	; select bank0
  3653  0E36  140C               	bsf	12,0	;volatile
  3654                           
  3655                           ;main.c: 873: }
  3656  0E37  2EE3               	goto	l5677
  3657  0E38                     l723:	
  3658                           
  3659                           ;main.c: 874: else if(psstatusu.psstatuss.creepspeedon==0)
  3660  0E38  1AED               	btfsc	_psstatusu,5
  3661  0E39  2EE3               	goto	l5677
  3662                           
  3663                           ;main.c: 875: {
  3664                           ;main.c: 876: cyclestrtf=1;
  3665  0E3A  0022               	movlb	2	; select bank2
  3666  0E3B  01BC               	clrf	_cyclestrtf^(0+256)
  3667  0E3C  0ABC               	incf	_cyclestrtf^(0+256),f
  3668                           
  3669                           ;main.c: 877: newsetwirespeed=setwirespeed;
  3670  0E3D  0020               	movlb	0	; select bank0
  3671  0E3E  085B               	movf	_setwirespeed+1,w
  3672  0E3F  01EA               	clrf	_newsetwirespeed+1
  3673  0E40  07EA               	addwf	_newsetwirespeed+1,f
  3674  0E41  085A               	movf	_setwirespeed,w
  3675  0E42  01E9               	clrf	_newsetwirespeed
  3676  0E43  07E9               	addwf	_newsetwirespeed,f
  3677                           
  3678                           ;main.c: 878: if(closeloopf==0)
  3679  0E44  0022               	movlb	2	; select bank2
  3680  0E45  08B6               	movf	_closeloopf^(0+256),f
  3681  0E46  1D03               	skipz
  3682  0E47  2EDF               	goto	l5673
  3683                           
  3684                           ;main.c: 879: {
  3685                           ;main.c: 880: Update_PWM(newsetwirespeed*1.4);
  3686  0E48  0020               	movlb	0	; select bank0
  3687  0E49  086A               	movf	_newsetwirespeed+1,w
  3688  0E4A  0021               	movlb	1	; select bank1
  3689  0E4B  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3690  0E4C  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3691  0E4D  0020               	movlb	0	; select bank0
  3692  0E4E  0869               	movf	_newsetwirespeed,w
  3693  0E4F  0021               	movlb	1	; select bank1
  3694  0E50  01A8               	clrf	___lwtoft@c^(0+128)
  3695  0E51  07A8               	addwf	___lwtoft@c^(0+128),f
  3696  0E52  3199  213A  3189   	fcall	___lwtoft
  3697  0E55  0021               	movlb	1	; select bank1
  3698  0E56  0828               	movf	?___lwtoft^(0+128),w
  3699  0E57  00B8               	movwf	___ftmul@f2^(0+128)
  3700  0E58  0829               	movf	(?___lwtoft+1)^(0+128),w
  3701  0E59  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3702  0E5A  082A               	movf	(?___lwtoft+2)^(0+128),w
  3703  0E5B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3704  0E5C  3033               	movlw	51
  3705  0E5D  00B5               	movwf	___ftmul@f1^(0+128)
  3706  0E5E  30B3               	movlw	179
  3707  0E5F  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3708  0E60  303F               	movlw	63
  3709  0E61  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3710  0E62  3192  22E3  3189   	fcall	___ftmul
  3711  0E65  0021               	movlb	1	; select bank1
  3712  0E66  0835               	movf	?___ftmul^(0+128),w
  3713  0E67  00C5               	movwf	___fttol@f1^(0+128)
  3714  0E68  0836               	movf	(?___ftmul+1)^(0+128),w
  3715  0E69  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3716  0E6A  0837               	movf	(?___ftmul+2)^(0+128),w
  3717  0E6B  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3718  0E6C  319F  2779  3189   	fcall	___fttol
  3719  0E6F  0021               	movlb	1	; select bank1
  3720  0E70  0846               	movf	(?___fttol^(0+128)+1),w
  3721  0E71  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3722  0E72  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3723  0E73  0845               	movf	?___fttol^(0+128),w
  3724  0E74  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3725  0E75  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3726  0E76  3199  21D3  3189   	fcall	_Update_PWM
  3727                           
  3728                           ;main.c: 881: if(wfspeedchangef==1)
  3729  0E79  0022               	movlb	2	; select bank2
  3730  0E7A  086F               	movf	_wfspeedchangef^(0+256),w
  3731  0E7B  3A01               	xorlw	1
  3732  0E7C  1D03               	skipz
  3733  0E7D  2EDD               	goto	l5671
  3734                           
  3735                           ;main.c: 882: {
  3736                           ;main.c: 883: integral_old=newsetwirespeed*scalefactor2*1.4;
  3737  0E7E  3033               	movlw	51
  3738  0E7F  0021               	movlb	1	; select bank1
  3739  0E80  00B5               	movwf	___ftmul@f1^(0+128)
  3740  0E81  30B3               	movlw	179
  3741  0E82  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3742  0E83  303F               	movlw	63
  3743  0E84  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3744  0E85  0020               	movlb	0	; select bank0
  3745  0E86  086A               	movf	_newsetwirespeed+1,w
  3746  0E87  0021               	movlb	1	; select bank1
  3747  0E88  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3748  0E89  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3749  0E8A  0020               	movlb	0	; select bank0
  3750  0E8B  0869               	movf	_newsetwirespeed,w
  3751  0E8C  0021               	movlb	1	; select bank1
  3752  0E8D  01A0               	clrf	___wmul@multiplier^(0+128)
  3753  0E8E  07A0               	addwf	___wmul@multiplier^(0+128),f
  3754  0E8F  0023               	movlb	3	; select bank3
  3755  0E90  086C               	movf	(_scalefactor2+1)^(0+384),w
  3756  0E91  0021               	movlb	1	; select bank1
  3757  0E92  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  3758  0E93  07A3               	addwf	(___wmul@multiplicand+1)^(0+128),f
  3759  0E94  0023               	movlb	3	; select bank3
  3760  0E95  086B               	movf	_scalefactor2^(0+384),w
  3761  0E96  0021               	movlb	1	; select bank1
  3762  0E97  01A2               	clrf	___wmul@multiplicand^(0+128)
  3763  0E98  07A2               	addwf	___wmul@multiplicand^(0+128),f
  3764  0E99  3199  2193  3189   	fcall	___wmul
  3765  0E9C  0021               	movlb	1	; select bank1
  3766  0E9D  0821               	movf	(?___wmul+1)^(0+128),w
  3767  0E9E  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3768  0E9F  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3769  0EA0  0820               	movf	?___wmul^(0+128),w
  3770  0EA1  01A8               	clrf	___lwtoft@c^(0+128)
  3771  0EA2  07A8               	addwf	___lwtoft@c^(0+128),f
  3772  0EA3  3199  213A  3189   	fcall	___lwtoft
  3773  0EA6  0021               	movlb	1	; select bank1
  3774  0EA7  0828               	movf	?___lwtoft^(0+128),w
  3775  0EA8  00B8               	movwf	___ftmul@f2^(0+128)
  3776  0EA9  0829               	movf	(?___lwtoft+1)^(0+128),w
  3777  0EAA  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3778  0EAB  082A               	movf	(?___lwtoft+2)^(0+128),w
  3779  0EAC  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3780  0EAD  3192  22E3  3189   	fcall	___ftmul
  3781  0EB0  0021               	movlb	1	; select bank1
  3782  0EB1  0835               	movf	?___ftmul^(0+128),w
  3783  0EB2  0023               	movlb	3	; select bank3
  3784  0EB3  00A9               	movwf	_integral_old^(0+384)
  3785  0EB4  0021               	movlb	1	; select bank1
  3786  0EB5  0836               	movf	(?___ftmul+1)^(0+128),w
  3787  0EB6  0023               	movlb	3	; select bank3
  3788  0EB7  00AA               	movwf	(_integral_old+1)^(0+384)
  3789  0EB8  0021               	movlb	1	; select bank1
  3790  0EB9  0837               	movf	(?___ftmul+2)^(0+128),w
  3791  0EBA  0023               	movlb	3	; select bank3
  3792  0EBB  00AB               	movwf	(_integral_old+2)^(0+384)
  3793                           
  3794                           ;main.c: 885: wfspeedchangef=0;
  3795  0EBC  0022               	movlb	2	; select bank2
  3796  0EBD  01EF               	clrf	_wfspeedchangef^(0+256)
  3797                           
  3798                           ;main.c: 886: integral_new =0;
  3799  0EBE  3000               	movlw	0
  3800  0EBF  0023               	movlb	3	; select bank3
  3801  0EC0  00A6               	movwf	_integral_new^(0+384)
  3802  0EC1  3000               	movlw	0
  3803  0EC2  00A7               	movwf	(_integral_new+1)^(0+384)
  3804  0EC3  3000               	movlw	0
  3805  0EC4  00A8               	movwf	(_integral_new+2)^(0+384)
  3806                           
  3807                           ;main.c: 888: error_old =0;
  3808  0EC5  3000               	movlw	0
  3809  0EC6  00A3               	movwf	_error_old^(0+384)
  3810  0EC7  3000               	movlw	0
  3811  0EC8  00A4               	movwf	(_error_old+1)^(0+384)
  3812  0EC9  3000               	movlw	0
  3813  0ECA  00A5               	movwf	(_error_old+2)^(0+384)
  3814                           
  3815                           ;main.c: 889: error_new=0;
  3816  0ECB  3000               	movlw	0
  3817  0ECC  00A0               	movwf	_error_new^(0+384)
  3818  0ECD  3000               	movlw	0
  3819  0ECE  00A1               	movwf	(_error_new+1)^(0+384)
  3820  0ECF  3000               	movlw	0
  3821  0ED0  00A2               	movwf	(_error_new+2)^(0+384)
  3822                           
  3823                           ;main.c: 890: controller_out=0;
  3824  0ED1  3000               	movlw	0
  3825  0ED2  0024               	movlb	4	; select bank4
  3826  0ED3  00A4               	movwf	_controller_out^(0+512)
  3827  0ED4  3000               	movlw	0
  3828  0ED5  00A5               	movwf	(_controller_out+1)^(0+512)
  3829  0ED6  3000               	movlw	0
  3830  0ED7  00A6               	movwf	(_controller_out+2)^(0+512)
  3831                           
  3832                           ;main.c: 891: prevFltpfreq=0;
  3833  0ED8  01C2               	clrf	_prevFltpfreq^(0+512)
  3834  0ED9  01C3               	clrf	(_prevFltpfreq+1)^(0+512)
  3835                           
  3836                           ;main.c: 892: Fltpfreq=0;
  3837  0EDA  0022               	movlb	2	; select bank2
  3838  0EDB  01A0               	clrf	_Fltpfreq^(0+256)
  3839  0EDC  01A1               	clrf	(_Fltpfreq+1)^(0+256)
  3840  0EDD                     l5671:	
  3841                           
  3842                           ;main.c: 893: }
  3843                           ;main.c: 894: closeloopf=1;
  3844  0EDD  01B6               	clrf	_closeloopf^(0+256)
  3845  0EDE  0AB6               	incf	_closeloopf^(0+256),f
  3846  0EDF                     l5673:	
  3847                           
  3848                           ;main.c: 895: }
  3849                           ;main.c: 896: TRISAbits.TRISA5=0;
  3850  0EDF  0021               	movlb	1	; select bank1
  3851  0EE0  128C               	bcf	12,5	;volatile
  3852                           
  3853                           ;main.c: 897: PORTAbits.RA0=0;
  3854  0EE1  0020               	movlb	0	; select bank0
  3855  0EE2  100C               	bcf	12,0	;volatile
  3856  0EE3                     l5677:	
  3857                           
  3858                           ;main.c: 898: }
  3859                           ;main.c: 900: if(psstatusu.psstatuss.craterspeedon==1 && wfstatusu.wfstatuss.twotfourtmo
      +                          de1==1)
  3860  0EE3  1A6D               	btfsc	_psstatusu,4
  3861  0EE4  1C6E               	btfss	_wfstatusu,0
  3862  0EE5  2EF2               	goto	l731
  3863                           
  3864                           ;main.c: 901: newsetwirespeed=crater_speed;
  3865  0EE6  0022               	movlb	2	; select bank2
  3866  0EE7  083A               	movf	_crater_speed^(0+256),w	;volatile
  3867  0EE8  0021               	movlb	1	; select bank1
  3868  0EE9  00ED               	movwf	??_main^(0+128)
  3869  0EEA  01EE               	clrf	(??_main^(0+128)+1)
  3870  0EEB  086D               	movf	??_main^(0+128),w
  3871  0EEC  0020               	movlb	0	; select bank0
  3872  0EED  00E9               	movwf	_newsetwirespeed
  3873  0EEE  0021               	movlb	1	; select bank1
  3874  0EEF  086E               	movf	(??_main+1)^(0+128),w
  3875  0EF0  0020               	movlb	0	; select bank0
  3876  0EF1  00EA               	movwf	_newsetwirespeed+1
  3877  0EF2                     l731:	
  3878                           
  3879                           ;main.c: 903: if(newsetwirespeed > 10)
  3880  0EF2  3000               	movlw	0
  3881  0EF3  026A               	subwf	_newsetwirespeed+1,w
  3882  0EF4  300B               	movlw	11
  3883  0EF5  1903               	skipnz
  3884  0EF6  0269               	subwf	_newsetwirespeed,w
  3885  0EF7  1C03               	skipc
  3886  0EF8  2F29               	goto	l732
  3887                           
  3888                           ;main.c: 904: setpfreq=(3.6*newsetwirespeed);
  3889  0EF9  086A               	movf	_newsetwirespeed+1,w
  3890  0EFA  0021               	movlb	1	; select bank1
  3891  0EFB  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3892  0EFC  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3893  0EFD  0020               	movlb	0	; select bank0
  3894  0EFE  0869               	movf	_newsetwirespeed,w
  3895  0EFF  0021               	movlb	1	; select bank1
  3896  0F00  01A8               	clrf	___lwtoft@c^(0+128)
  3897  0F01  07A8               	addwf	___lwtoft@c^(0+128),f
  3898  0F02  3199  213A  3189   	fcall	___lwtoft
  3899  0F05  0021               	movlb	1	; select bank1
  3900  0F06  0828               	movf	?___lwtoft^(0+128),w
  3901  0F07  00B8               	movwf	___ftmul@f2^(0+128)
  3902  0F08  0829               	movf	(?___lwtoft+1)^(0+128),w
  3903  0F09  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3904  0F0A  082A               	movf	(?___lwtoft+2)^(0+128),w
  3905  0F0B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3906  0F0C  3066               	movlw	102
  3907  0F0D  00B5               	movwf	___ftmul@f1^(0+128)
  3908  0F0E  3066               	movlw	102
  3909  0F0F  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3910  0F10  3040               	movlw	64
  3911  0F11  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3912  0F12  3192  22E3  3189   	fcall	___ftmul
  3913  0F15  0021               	movlb	1	; select bank1
  3914  0F16  0835               	movf	?___ftmul^(0+128),w
  3915  0F17  00C5               	movwf	___fttol@f1^(0+128)
  3916  0F18  0836               	movf	(?___ftmul+1)^(0+128),w
  3917  0F19  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3918  0F1A  0837               	movf	(?___ftmul+2)^(0+128),w
  3919  0F1B  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3920  0F1C  319F  2779  3189   	fcall	___fttol
  3921  0F1F  0021               	movlb	1	; select bank1
  3922  0F20  0846               	movf	(?___fttol^(0+128)+1),w
  3923  0F21  0023               	movlb	3	; select bank3
  3924  0F22  01D1               	clrf	(_setpfreq+1)^(0+384)
  3925  0F23  07D1               	addwf	(_setpfreq+1)^(0+384),f
  3926  0F24  0021               	movlb	1	; select bank1
  3927  0F25  0845               	movf	?___fttol^(0+128),w
  3928  0F26  0023               	movlb	3	; select bank3
  3929  0F27  01D0               	clrf	_setpfreq^(0+384)
  3930  0F28  07D0               	addwf	_setpfreq^(0+384),f
  3931  0F29                     l732:	
  3932                           
  3933                           ;main.c: 907: Hi_setppwm=(newsetwirespeed+rel_wirespeed)*1.4;
  3934  0F29  0023               	movlb	3	; select bank3
  3935  0F2A  084E               	movf	_rel_wirespeed^(0+384),w
  3936  0F2B  0020               	movlb	0	; select bank0
  3937  0F2C  0769               	addwf	_newsetwirespeed,w
  3938  0F2D  0021               	movlb	1	; select bank1
  3939  0F2E  00A8               	movwf	___lwtoft@c^(0+128)
  3940  0F2F  0023               	movlb	3	; select bank3
  3941  0F30  084F               	movf	(_rel_wirespeed+1)^(0+384),w
  3942  0F31  0020               	movlb	0	; select bank0
  3943  0F32  3D6A               	addwfc	_newsetwirespeed+1,w
  3944  0F33  0021               	movlb	1	; select bank1
  3945  0F34  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  3946  0F35  3199  213A  3189   	fcall	___lwtoft
  3947  0F38  0021               	movlb	1	; select bank1
  3948  0F39  0828               	movf	?___lwtoft^(0+128),w
  3949  0F3A  00B8               	movwf	___ftmul@f2^(0+128)
  3950  0F3B  0829               	movf	(?___lwtoft+1)^(0+128),w
  3951  0F3C  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3952  0F3D  082A               	movf	(?___lwtoft+2)^(0+128),w
  3953  0F3E  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3954  0F3F  3033               	movlw	51
  3955  0F40  00B5               	movwf	___ftmul@f1^(0+128)
  3956  0F41  30B3               	movlw	179
  3957  0F42  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3958  0F43  303F               	movlw	63
  3959  0F44  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3960  0F45  3192  22E3  3189   	fcall	___ftmul
  3961  0F48  0021               	movlb	1	; select bank1
  3962  0F49  0835               	movf	?___ftmul^(0+128),w
  3963  0F4A  00C5               	movwf	___fttol@f1^(0+128)
  3964  0F4B  0836               	movf	(?___ftmul+1)^(0+128),w
  3965  0F4C  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3966  0F4D  0837               	movf	(?___ftmul+2)^(0+128),w
  3967  0F4E  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3968  0F4F  319F  2779  3189   	fcall	___fttol
  3969  0F52  0021               	movlb	1	; select bank1
  3970  0F53  0846               	movf	(?___fttol^(0+128)+1),w
  3971  0F54  0023               	movlb	3	; select bank3
  3972  0F55  01AD               	clrf	(_Hi_setppwm+1)^(0+384)
  3973  0F56  07AD               	addwf	(_Hi_setppwm+1)^(0+384),f
  3974  0F57  0021               	movlb	1	; select bank1
  3975  0F58  0845               	movf	?___fttol^(0+128),w
  3976  0F59  0023               	movlb	3	; select bank3
  3977  0F5A  01AC               	clrf	_Hi_setppwm^(0+384)
  3978  0F5B  07AC               	addwf	_Hi_setppwm^(0+384),f
  3979                           
  3980                           ;main.c: 908: Lo_setppwm=(newsetwirespeed-rel_wirespeed)*1.4;
  3981  0F5C  094E               	comf	_rel_wirespeed^(0+384),w
  3982  0F5D  0021               	movlb	1	; select bank1
  3983  0F5E  00ED               	movwf	??_main^(0+128)
  3984  0F5F  0023               	movlb	3	; select bank3
  3985  0F60  094F               	comf	(_rel_wirespeed+1)^(0+384),w
  3986  0F61  0021               	movlb	1	; select bank1
  3987  0F62  00EE               	movwf	(??_main^(0+128)+1)
  3988  0F63  0AED               	incf	??_main^(0+128),f
  3989  0F64  1903               	skipnz
  3990  0F65  0AEE               	incf	(??_main^(0+128)+1),f
  3991  0F66  0020               	movlb	0	; select bank0
  3992  0F67  0869               	movf	_newsetwirespeed,w
  3993  0F68  0021               	movlb	1	; select bank1
  3994  0F69  076D               	addwf	??_main^(0+128),w
  3995  0F6A  00A8               	movwf	___lwtoft@c^(0+128)
  3996  0F6B  0020               	movlb	0	; select bank0
  3997  0F6C  086A               	movf	_newsetwirespeed+1,w
  3998  0F6D  0021               	movlb	1	; select bank1
  3999  0F6E  3D6E               	addwfc	(??_main+1)^(0+128),w
  4000  0F6F  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  4001  0F70  3199  213A  3189   	fcall	___lwtoft
  4002  0F73  0021               	movlb	1	; select bank1
  4003  0F74  0828               	movf	?___lwtoft^(0+128),w
  4004  0F75  00B8               	movwf	___ftmul@f2^(0+128)
  4005  0F76  0829               	movf	(?___lwtoft+1)^(0+128),w
  4006  0F77  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4007  0F78  082A               	movf	(?___lwtoft+2)^(0+128),w
  4008  0F79  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4009  0F7A  3033               	movlw	51
  4010  0F7B  00B5               	movwf	___ftmul@f1^(0+128)
  4011  0F7C  30B3               	movlw	179
  4012  0F7D  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4013  0F7E  303F               	movlw	63
  4014  0F7F  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4015  0F80  3192  22E3  3189   	fcall	___ftmul
  4016  0F83  0021               	movlb	1	; select bank1
  4017  0F84  0835               	movf	?___ftmul^(0+128),w
  4018  0F85  00C5               	movwf	___fttol@f1^(0+128)
  4019  0F86  0836               	movf	(?___ftmul+1)^(0+128),w
  4020  0F87  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4021  0F88  0837               	movf	(?___ftmul+2)^(0+128),w
  4022  0F89  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4023  0F8A  319F  2779  3189   	fcall	___fttol
  4024  0F8D  0021               	movlb	1	; select bank1
  4025  0F8E  0846               	movf	(?___fttol^(0+128)+1),w
  4026  0F8F  0023               	movlb	3	; select bank3
  4027  0F90  01AF               	clrf	(_Lo_setppwm+1)^(0+384)
  4028  0F91  07AF               	addwf	(_Lo_setppwm+1)^(0+384),f
  4029  0F92  0021               	movlb	1	; select bank1
  4030  0F93  0845               	movf	?___fttol^(0+128),w
  4031  0F94  0023               	movlb	3	; select bank3
  4032  0F95  01AE               	clrf	_Lo_setppwm^(0+384)
  4033  0F96  07AE               	addwf	_Lo_setppwm^(0+384),f
  4034                           
  4035                           ;main.c: 909: }
  4036  0F97  2FBD               	goto	l5695
  4037  0F98                     l722:	
  4038                           
  4039                           ;main.c: 910: else if(psstatusu.psstatuss.motoroncommand!=1)
  4040  0F98  19ED               	btfsc	_psstatusu,3
  4041  0F99  2FBD               	goto	l5695
  4042                           
  4043                           ;main.c: 911: {
  4044                           ;main.c: 912: Update_PWM(setwirespeed*0);
  4045  0F9A  085B               	movf	_setwirespeed+1,w
  4046  0F9B  0021               	movlb	1	; select bank1
  4047  0F9C  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  4048  0F9D  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  4049  0F9E  0020               	movlb	0	; select bank0
  4050  0F9F  085A               	movf	_setwirespeed,w
  4051  0FA0  0021               	movlb	1	; select bank1
  4052  0FA1  01A0               	clrf	___wmul@multiplier^(0+128)
  4053  0FA2  07A0               	addwf	___wmul@multiplier^(0+128),f
  4054  0FA3  3000               	movlw	0
  4055  0FA4  00A2               	movwf	___wmul@multiplicand^(0+128)
  4056  0FA5  3000               	movlw	0
  4057  0FA6  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  4058  0FA7  3199  2193  3189   	fcall	___wmul
  4059  0FAA  0021               	movlb	1	; select bank1
  4060  0FAB  0821               	movf	(?___wmul+1)^(0+128),w
  4061  0FAC  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  4062  0FAD  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  4063  0FAE  0820               	movf	?___wmul^(0+128),w
  4064  0FAF  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  4065  0FB0  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  4066  0FB1  3199  21D3  3189   	fcall	_Update_PWM
  4067                           
  4068                           ;main.c: 913: openloopcnt =0;
  4069  0FB4  0024               	movlb	4	; select bank4
  4070  0FB5  01C0               	clrf	_openloopcnt^(0+512)
  4071  0FB6  01C1               	clrf	(_openloopcnt+1)^(0+512)
  4072                           
  4073                           ;main.c: 914: closeloopf =0;
  4074  0FB7  0022               	movlb	2	; select bank2
  4075  0FB8  01B6               	clrf	_closeloopf^(0+256)
  4076                           
  4077                           ;main.c: 915: closeloop1f =0;
  4078  0FB9  0023               	movlb	3	; select bank3
  4079  0FBA  01D4               	clrf	_closeloop1f^(0+384)
  4080                           
  4081                           ;main.c: 916: cyclestrtf=0;
  4082  0FBB  0022               	movlb	2	; select bank2
  4083  0FBC  01BC               	clrf	_cyclestrtf^(0+256)
  4084  0FBD                     l5695:	
  4085                           
  4086                           ;main.c: 918: }
  4087                           ;main.c: 919: TypeU.TypeS.wirespeed=0;
  4088  0FBD  0020               	movlb	0	; select bank0
  4089  0FBE  1067               	bcf	_TypeU,0
  4090                           
  4091                           ;main.c: 920: TypeU.TypeS.amp=1;
  4092  0FBF  1468               	bsf	_TypeU+1,0
  4093                           
  4094                           ;main.c: 921: TypeU.TypeS.thickness=0;
  4095  0FC0  10E7               	bcf	_TypeU,1
  4096                           
  4097                           ;main.c: 922: TypeU.TypeS.arclength =0;
  4098  0FC1  1167               	bcf	_TypeU,2
  4099                           
  4100                           ;main.c: 923: TypeU.TypeS.vtg =1;
  4101  0FC2  14E8               	bsf	_TypeU+1,1
  4102                           
  4103                           ;main.c: 924: TypeU.TypeS.sec =0;
  4104  0FC3  1168               	bcf	_TypeU+1,2
  4105                           
  4106                           ;main.c: 926: TypeDP.DPGROUP[0]=0x00;
  4107  0FC4  01EB               	clrf	_TypeDP
  4108                           
  4109                           ;main.c: 927: TypeDP.TypeD.digitdp5 =1;
  4110  0FC5  166B               	bsf	_TypeDP,4
  4111                           
  4112                           ;main.c: 928: disp_hex_window1(Actual_amp);
  4113  0FC6  0023               	movlb	3	; select bank3
  4114  0FC7  0864               	movf	(_Actual_amp+1)^(0+384),w
  4115  0FC8  0021               	movlb	1	; select bank1
  4116  0FC9  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  4117  0FCA  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  4118  0FCB  0023               	movlb	3	; select bank3
  4119  0FCC  0863               	movf	_Actual_amp^(0+384),w
  4120  0FCD  0021               	movlb	1	; select bank1
  4121  0FCE  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  4122  0FCF  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  4123  0FD0  319C  2427  3189   	fcall	_disp_hex_window1
  4124                           
  4125                           ;main.c: 929: disp_hex_window2(Actual_vtg);
  4126  0FD3  0023               	movlb	3	; select bank3
  4127  0FD4  0866               	movf	(_Actual_vtg+1)^(0+384),w
  4128  0FD5  0021               	movlb	1	; select bank1
  4129  0FD6  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  4130  0FD7  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  4131  0FD8  0023               	movlb	3	; select bank3
  4132  0FD9  0865               	movf	_Actual_vtg^(0+384),w
  4133  0FDA  0021               	movlb	1	; select bank1
  4134  0FDB  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  4135  0FDC  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  4136  0FDD  319C  248B  3189   	fcall	_disp_hex_window2
  4137                           
  4138                           ;main.c: 930: dispupdatef =1;
  4139  0FE0  3001               	movlw	1
  4140  0FE1  0021               	movlb	1	; select bank1
  4141  0FE2  00ED               	movwf	??_main^(0+128)
  4142  0FE3  086D               	movf	??_main^(0+128),w
  4143  0FE4  0020               	movlb	0	; select bank0
  4144  0FE5  00EF               	movwf	_dispupdatef	;volatile
  4145  0FE6                     l5717:	
  4146                           
  4147                           ;main.c: 932: }
  4148                           ;main.c: 933: }
  4149                           ;main.c: 935: if(universal_error_latch==1)
  4150  0FE6  0022               	movlb	2	; select bank2
  4151  0FE7  085C               	movf	_universal_error_latch^(0+256),w	;volatile
  4152  0FE8  3A01               	xorlw	1
  4153  0FE9  1D03               	skipz
  4154  0FEA  2FF3               	goto	l5723
  4155                           
  4156                           ;main.c: 936: {
  4157                           ;main.c: 937: dispupdatef=1;
  4158  0FEB  3001               	movlw	1
  4159  0FEC  0021               	movlb	1	; select bank1
  4160  0FED  00ED               	movwf	??_main^(0+128)
  4161  0FEE  086D               	movf	??_main^(0+128),w
  4162  0FEF  0020               	movlb	0	; select bank0
  4163  0FF0  00EF               	movwf	_dispupdatef	;volatile
  4164                           
  4165                           ;main.c: 938: universal_error_latch=0;
  4166  0FF1  0022               	movlb	2	; select bank2
  4167  0FF2  01DC               	clrf	_universal_error_latch^(0+256)	;volatile
  4168  0FF3                     l5723:	
  4169                           
  4170                           ;main.c: 939: }
  4171                           ;main.c: 940: if(( (weldmode=='P') || (weldmode=='G') ))
  4172  0FF3  0020               	movlb	0	; select bank0
  4173  0FF4  0866               	movf	_weldmode,w	;volatile
  4174  0FF5  3A50               	xorlw	80
  4175  0FF6  1903               	skipnz
  4176  0FF7  2FFC               	goto	l5727
  4177  0FF8  0866               	movf	_weldmode,w	;volatile
  4178  0FF9  3A47               	xorlw	71
  4179  0FFA  1D03               	skipz
  4180  0FFB  29E0               	goto	l5309
  4181  0FFC                     l5727:	
  4182                           
  4183                           ;main.c: 941: detect_display_error();
  4184  0FFC  3191  2185  3189   	fcall	_detect_display_error
  4185  0FFF  29E0               	goto	l5309
  4186  1000                     __end_of_main:	
  4187                           
  4188                           	psect	text1
  4189  1927                     __ptext1:	
  4190 ;; *************** function _uart_init *****************
  4191 ;; Defined at:
  4192 ;;		line 1179 in file "main.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;		None
  4197 ;; Return value:  Size  Location     Type
  4198 ;;		None               void
  4199 ;; Registers used:
  4200 ;;		wreg
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4210 ;;Total ram usage:        0 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; Hardware stack levels required when called:    3
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_main
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           
  4221                           ;psect for function _uart_init
  4222  1927                     _uart_init:	
  4223                           
  4224                           ;main.c: 1181: RCSTAbits.SPEN=1;
  4225                           
  4226                           ;incstack = 0
  4227                           ; Regs used in _uart_init: [wreg]
  4228  1927  0023               	movlb	3	; select bank3
  4229  1928  179D               	bsf	29,7	;volatile
  4230                           
  4231                           ;main.c: 1182: TRISCbits.TRISC6=0;
  4232  1929  0021               	movlb	1	; select bank1
  4233  192A  130E               	bcf	14,6	;volatile
  4234                           
  4235                           ;main.c: 1183: TRISCbits.TRISC7=1;
  4236  192B  178E               	bsf	14,7	;volatile
  4237                           
  4238                           ;main.c: 1184: TXSTAbits.BRGH=0;
  4239  192C  0023               	movlb	3	; select bank3
  4240  192D  111E               	bcf	30,2	;volatile
  4241                           
  4242                           ;main.c: 1185: BAUDCTLbits.BRG16=0;
  4243  192E  119F               	bcf	31,3	;volatile
  4244                           
  4245                           ;main.c: 1186: TXSTAbits.SYNC=0;
  4246  192F  121E               	bcf	30,4	;volatile
  4247                           
  4248                           ;main.c: 1187: SPBRG=51;
  4249  1930  3033               	movlw	51
  4250  1931  009B               	movwf	27	;volatile
  4251                           
  4252                           ;main.c: 1188: TXSTA=0x20;
  4253  1932  3020               	movlw	32
  4254  1933  009E               	movwf	30	;volatile
  4255                           
  4256                           ;main.c: 1189: TXSTAbits.TXEN=0;
  4257  1934  129E               	bcf	30,5	;volatile
  4258                           
  4259                           ;main.c: 1190: RCSTAbits.CREN=0;
  4260  1935  121D               	bcf	29,4	;volatile
  4261                           
  4262                           ;main.c: 1191: PIE1bits.RCIE=0;
  4263  1936  0021               	movlb	1	; select bank1
  4264  1937  1291               	bcf	17,5	;volatile
  4265                           
  4266                           ;main.c: 1192: PIE1bits.TXIE=0;
  4267  1938  1211               	bcf	17,4	;volatile
  4268  1939  0008               	return
  4269  193A                     __end_of_uart_init:	
  4270                           
  4271                           	psect	text2
  4272  0808                     __ptext2:	
  4273 ;; *************** function _transmittops *****************
  4274 ;; Defined at:
  4275 ;;		line 1221 in file "main.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;		None               void
  4282 ;; Registers used:
  4283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4292 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4293 ;;Total ram usage:        1 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:    4
  4296 ;; This function calls:
  4297 ;;		_Send_Byte
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _transmittops
  4305  0808                     _transmittops:	
  4306                           
  4307                           ;main.c: 1223: chksum=0;
  4308                           
  4309                           ;incstack = 0
  4310                           ; Regs used in _transmittops: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4311  0808  0022               	movlb	2	; select bank2
  4312  0809  01B5               	clrf	_chksum^(0+256)
  4313                           
  4314                           ;main.c: 1224: pstowfstru.pstowfstrs.psstatusbyte=0xBB;
  4315  080A  30BB               	movlw	187
  4316  080B  0021               	movlb	1	; select bank1
  4317  080C  00A1               	movwf	??_transmittops^(0+128)
  4318  080D  0821               	movf	??_transmittops^(0+128),w
  4319  080E  0024               	movlb	4	; select bank4
  4320  080F  00D6               	movwf	(_pstowfstru^(0+512)+12)
  4321                           
  4322                           ;main.c: 1226: if(cWf2t4tmodefg == 1)
  4323  0810  0022               	movlb	2	; select bank2
  4324  0811  0834               	movf	_cWf2t4tmodefg^(0+256),w
  4325  0812  3A01               	xorlw	1
  4326  0813  1D03               	skipz
  4327  0814  2818               	goto	l801
  4328                           
  4329                           ;main.c: 1227: {
  4330                           ;main.c: 1228: wfstatusu.wfstatuss.twotfourtmode1 = 1;
  4331  0815  0020               	movlb	0	; select bank0
  4332  0816  146E               	bsf	_wfstatusu,0
  4333                           
  4334                           ;main.c: 1229: }
  4335  0817  281A               	goto	l4471
  4336  0818                     l801:	
  4337                           
  4338                           ;main.c: 1230: else
  4339                           ;main.c: 1231: {
  4340                           ;main.c: 1232: wfstatusu.wfstatuss.twotfourtmode1 = 0;
  4341  0818  0020               	movlb	0	; select bank0
  4342  0819  106E               	bcf	_wfstatusu,0
  4343  081A                     l4471:	
  4344                           
  4345                           ;main.c: 1233: }
  4346                           ;main.c: 1235: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4347  081A  086E               	movf	_wfstatusu,w
  4348  081B  0021               	movlb	1	; select bank1
  4349  081C  00A1               	movwf	??_transmittops^(0+128)
  4350  081D  0821               	movf	??_transmittops^(0+128),w
  4351  081E  0024               	movlb	4	; select bank4
  4352  081F  00D7               	movwf	(_pstowfstru^(0+512)+13)
  4353                           
  4354                           ;main.c: 1244: Tx_ptr=0;
  4355  0820  0023               	movlb	3	; select bank3
  4356  0821  01D2               	clrf	_Tx_ptr^(0+384)
  4357                           
  4358                           ;main.c: 1245: Send_Byte('@');
  4359  0822  3040               	movlw	64
  4360  0823  3198  20AB  3188   	fcall	_Send_Byte
  4361                           
  4362                           ;main.c: 1246: for(lmn=0;lmn<=15;lmn++)
  4363  0826  0022               	movlb	2	; select bank2
  4364  0827  01A4               	clrf	_lmn^(0+256)
  4365  0828  01A5               	clrf	(_lmn+1)^(0+256)
  4366  0829  3000               	movlw	0
  4367  082A  0225               	subwf	(_lmn+1)^(0+256),w
  4368  082B  3010               	movlw	16
  4369  082C  1903               	skipnz
  4370  082D  0224               	subwf	_lmn^(0+256),w
  4371  082E  1803               	btfsc	3,0
  4372  082F  2851               	goto	l4491
  4373  0830                     l4483:	
  4374                           
  4375                           ;main.c: 1247: {
  4376                           ;main.c: 1248: chksum=chksum+pstowfstru.pstransarr[lmn];
  4377  0830  0824               	movf	_lmn^(0+256),w
  4378  0831  3E4A               	addlw	_pstowfstru& (0+255)
  4379  0832  0086               	movwf	6
  4380  0833  3002               	movlw	2	; select bank4/5
  4381  0834  0087               	movwf	7
  4382  0835  0801               	movf	1,w
  4383  0836  0735               	addwf	_chksum^(0+256),w
  4384  0837  0021               	movlb	1	; select bank1
  4385  0838  00A1               	movwf	??_transmittops^(0+128)
  4386  0839  0821               	movf	??_transmittops^(0+128),w
  4387  083A  0022               	movlb	2	; select bank2
  4388  083B  00B5               	movwf	_chksum^(0+256)
  4389                           
  4390                           ;main.c: 1249: Send_Byte(pstowfstru.pstransarr[lmn]);
  4391  083C  0824               	movf	_lmn^(0+256),w
  4392  083D  3E4A               	addlw	_pstowfstru& (0+255)
  4393  083E  0086               	movwf	6
  4394  083F  3002               	movlw	2	; select bank4/5
  4395  0840  0087               	movwf	7
  4396  0841  0801               	movf	1,w
  4397  0842  3198  20AB  3188   	fcall	_Send_Byte
  4398  0845  3001               	movlw	1
  4399  0846  0022               	movlb	2	; select bank2
  4400  0847  07A4               	addwf	_lmn^(0+256),f
  4401  0848  3000               	movlw	0
  4402  0849  3DA5               	addwfc	(_lmn+1)^(0+256),f
  4403  084A  3000               	movlw	0
  4404  084B  0225               	subwf	(_lmn+1)^(0+256),w
  4405  084C  3010               	movlw	16
  4406  084D  1903               	skipnz
  4407  084E  0224               	subwf	_lmn^(0+256),w
  4408  084F  1C03               	skipc
  4409  0850  2830               	goto	l4483
  4410  0851                     l4491:	
  4411                           
  4412                           ;main.c: 1250: }
  4413                           ;main.c: 1251: pstowfstru.pstowfstrs.setthickness = chksum;
  4414  0851  0835               	movf	_chksum^(0+256),w
  4415  0852  0021               	movlb	1	; select bank1
  4416  0853  00A1               	movwf	??_transmittops^(0+128)
  4417  0854  0821               	movf	??_transmittops^(0+128),w
  4418  0855  0024               	movlb	4	; select bank4
  4419  0856  00CE               	movwf	(_pstowfstru^(0+512)+4)
  4420                           
  4421                           ;main.c: 1252: Send_Byte(chksum);
  4422  0857  0022               	movlb	2	; select bank2
  4423  0858  0835               	movf	_chksum^(0+256),w
  4424  0859  3198  20AB         	fcall	_Send_Byte
  4425  085B  0008               	return
  4426  085C                     __end_of_transmittops:	
  4427                           
  4428                           	psect	text3
  4429  18B5                     __ptext3:	
  4430 ;; *************** function _system_init *****************
  4431 ;; Defined at:
  4432 ;;		line 1086 in file "main.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;		None
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;		None               void
  4439 ;; Registers used:
  4440 ;;		wreg, status,2, status,0
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4450 ;;Total ram usage:        0 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    3
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_main
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           
  4461                           ;psect for function _system_init
  4462  18B5                     _system_init:	
  4463                           
  4464                           ;main.c: 1090: OSCCONbits.IRCF=14;
  4465                           
  4466                           ;incstack = 0
  4467                           ; Regs used in _system_init: [wreg+status,2+status,0]
  4468  18B5  0021               	movlb	1	; select bank1
  4469  18B6  0819               	movf	25,w	;volatile
  4470  18B7  3987               	andlw	-121
  4471  18B8  3870               	iorlw	112
  4472  18B9  0099               	movwf	25	;volatile
  4473                           
  4474                           ;main.c: 1092: OSCCONbits.SCS=0;
  4475  18BA  30FC               	movlw	-4
  4476  18BB  0599               	andwf	25,f	;volatile
  4477                           
  4478                           ;main.c: 1093: OSCTUNEbits.TUN=0;
  4479  18BC  30C0               	movlw	-64
  4480  18BD  0598               	andwf	24,f	;volatile
  4481  18BE  0008               	return
  4482  18BF                     __end_of_system_init:	
  4483                           
  4484                           	psect	text4
  4485  194F                     __ptext4:	
  4486 ;; *************** function _send_status *****************
  4487 ;; Defined at:
  4488 ;;		line 1255 in file "main.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;		None               void
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0, pclath, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;Total ram usage:        1 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    4
  4509 ;; This function calls:
  4510 ;;		_Send_Byte
  4511 ;; This function is called by:
  4512 ;;		_main
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           
  4517                           ;psect for function _send_status
  4518  194F                     _send_status:	
  4519                           
  4520                           ;main.c: 1257: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4521                           
  4522                           ;incstack = 0
  4523                           ; Regs used in _send_status: [wreg+status,2+status,0+pclath+cstack]
  4524  194F  0020               	movlb	0	; select bank0
  4525  1950  086E               	movf	_wfstatusu,w
  4526  1951  0021               	movlb	1	; select bank1
  4527  1952  00A1               	movwf	??_send_status^(0+128)
  4528  1953  0821               	movf	??_send_status^(0+128),w
  4529  1954  0024               	movlb	4	; select bank4
  4530  1955  00D7               	movwf	(_pstowfstru^(0+512)+13)
  4531                           
  4532                           ;main.c: 1258: Send_Byte('#');
  4533  1956  3023               	movlw	35
  4534  1957  3198  20AB  3199   	fcall	_Send_Byte
  4535                           
  4536                           ;main.c: 1259: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4537  195A  0024               	movlb	4	; select bank4
  4538  195B  0857               	movf	(_pstowfstru^(0+512)+13),w
  4539  195C  3198  20AB  3199   	fcall	_Send_Byte
  4540                           
  4541                           ;main.c: 1260: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4542  195F  0024               	movlb	4	; select bank4
  4543  1960  0857               	movf	(_pstowfstru^(0+512)+13),w
  4544  1961  3198  20AB         	fcall	_Send_Byte
  4545  1963  0008               	return
  4546  1964                     __end_of_send_status:	
  4547                           
  4548                           	psect	text5
  4549  18AB                     __ptext5:	
  4550 ;; *************** function _Send_Byte *****************
  4551 ;; Defined at:
  4552 ;;		line 1212 in file "main.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  transbyte       1    wreg     unsigned char 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  transbyte       1    0[BANK1 ] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;		None               void
  4559 ;; Registers used:
  4560 ;;		wreg
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4567 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;Total ram usage:        1 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    3
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_transmittops
  4577 ;;		_send_status
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           
  4582                           ;psect for function _Send_Byte
  4583  18AB                     _Send_Byte:	
  4584                           
  4585                           ;incstack = 0
  4586                           ; Regs used in _Send_Byte: [wreg]
  4587                           ;Send_Byte@transbyte stored from wreg
  4588  18AB  0021               	movlb	1	; select bank1
  4589  18AC  00A0               	movwf	Send_Byte@transbyte^(0+128)
  4590  18AD                     l795:	
  4591                           ;main.c: 1214: while(TXSTAbits.TRMT != 1);
  4592                           
  4593  18AD  0023               	movlb	3	; select bank3
  4594  18AE  1C9E               	btfss	30,1	;volatile
  4595  18AF  28AD               	goto	l795
  4596                           
  4597                           ;main.c: 1215: TXREG=transbyte;
  4598  18B0  0021               	movlb	1	; select bank1
  4599  18B1  0820               	movf	Send_Byte@transbyte^(0+128),w
  4600  18B2  0023               	movlb	3	; select bank3
  4601  18B3  009A               	movwf	26	;volatile
  4602  18B4  0008               	return
  4603  18B5                     __end_of_Send_Byte:	
  4604                           
  4605                           	psect	text6
  4606  1964                     __ptext6:	
  4607 ;; *************** function _portpin_init *****************
  4608 ;; Defined at:
  4609 ;;		line 1096 in file "main.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;		None               void
  4616 ;; Registers used:
  4617 ;;		wreg, status,2
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:    3
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_main
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           
  4638                           ;psect for function _portpin_init
  4639  1964                     _portpin_init:	
  4640                           
  4641                           ;main.c: 1098: TRISA=0x1F;
  4642                           
  4643                           ;incstack = 0
  4644                           ; Regs used in _portpin_init: [wreg+status,2]
  4645  1964  301F               	movlw	31
  4646  1965  0021               	movlb	1	; select bank1
  4647  1966  008C               	movwf	12	;volatile
  4648                           
  4649                           ;main.c: 1099: TRISB=0x00;
  4650  1967  018D               	clrf	13	;volatile
  4651                           
  4652                           ;main.c: 1100: TRISC=0x00;
  4653  1968  018E               	clrf	14	;volatile
  4654                           
  4655                           ;main.c: 1101: ANSELA=0X00;
  4656  1969  0023               	movlb	3	; select bank3
  4657  196A  018C               	clrf	12	;volatile
  4658                           
  4659                           ;main.c: 1102: ANSELB=0X00;
  4660  196B  018D               	clrf	13	;volatile
  4661                           
  4662                           ;main.c: 1105: PORTA=0X00;
  4663  196C  0020               	movlb	0	; select bank0
  4664  196D  018C               	clrf	12	;volatile
  4665                           
  4666                           ;main.c: 1106: PORTC=0X00;
  4667  196E  018E               	clrf	14	;volatile
  4668                           
  4669                           ;main.c: 1107: TRISAbits.TRISA1 =1;
  4670  196F  0021               	movlb	1	; select bank1
  4671  1970  148C               	bsf	12,1	;volatile
  4672                           
  4673                           ;main.c: 1108: TRISAbits.TRISA2 =1;
  4674  1971  150C               	bsf	12,2	;volatile
  4675                           
  4676                           ;main.c: 1109: TRISAbits.TRISA3 =1;
  4677  1972  158C               	bsf	12,3	;volatile
  4678                           
  4679                           ;main.c: 1110: TRISAbits.TRISA4 =1;
  4680  1973  160C               	bsf	12,4	;volatile
  4681                           
  4682                           ;main.c: 1111: TRISCbits.TRISC1 =1;
  4683  1974  148E               	bsf	14,1	;volatile
  4684                           
  4685                           ;main.c: 1112: TRISCbits.TRISC3=0;
  4686  1975  118E               	bcf	14,3	;volatile
  4687                           
  4688                           ;main.c: 1113: TRISAbits.TRISA5=0;
  4689  1976  128C               	bcf	12,5	;volatile
  4690                           
  4691                           ;main.c: 1114: TRISCbits.TRISC5=1;
  4692  1977  168E               	bsf	14,5	;volatile
  4693                           
  4694                           ;main.c: 1115: TRISAbits.TRISA0=0;
  4695  1978  100C               	bcf	12,0	;volatile
  4696  1979  0008               	return
  4697  197A                     __end_of_portpin_init:	
  4698                           
  4699                           	psect	text7
  4700  06B4                     __ptext7:	
  4701 ;; *************** function _key_application *****************
  4702 ;; Defined at:
  4703 ;;		line 945 in file "main.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  keypress        1    wreg     unsigned char 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  keypress        1   61[BANK1 ] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;		None               void
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0, pclath, cstack
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4719 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;Total ram usage:        3 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:    5
  4724 ;; This function calls:
  4725 ;;		_Update_PWM
  4726 ;;		___wmul
  4727 ;;		_disp_hex_window2
  4728 ;; This function is called by:
  4729 ;;		_main
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           
  4734                           ;psect for function _key_application
  4735  06B4                     _key_application:	
  4736                           
  4737                           ;incstack = 0
  4738                           ; Regs used in _key_application: [wreg+status,2+status,0+pclath+cstack]
  4739                           ;key_application@keypress stored from wreg
  4740  06B4  0021               	movlb	1	; select bank1
  4741  06B5  00DD               	movwf	key_application@keypress^(0+128)
  4742                           
  4743                           ;main.c: 947: if(keypress==1)
  4744  06B6  085D               	movf	key_application@keypress^(0+128),w
  4745  06B7  3A01               	xorlw	1
  4746  06B8  1D03               	skipz
  4747  06B9  2EFE               	goto	l4511
  4748                           
  4749                           ;main.c: 948: {
  4750                           ;main.c: 965: if(gaschkfg == 0)
  4751  06BA  0022               	movlb	2	; select bank2
  4752  06BB  08C1               	movf	_gaschkfg^(0+256),f
  4753  06BC  1D03               	skipz
  4754  06BD  2EF4               	goto	l4507
  4755                           
  4756                           ;main.c: 966: {
  4757                           ;main.c: 967: igascntr=15;
  4758  06BE  300F               	movlw	15
  4759  06BF  0023               	movlb	3	; select bank3
  4760  06C0  00BC               	movwf	_igascntr^(0+384)
  4761  06C1  3000               	movlw	0
  4762  06C2  00BD               	movwf	(_igascntr^(0+384)+1)
  4763                           
  4764                           ;main.c: 968: gaschkfg=1;
  4765  06C3  0022               	movlb	2	; select bank2
  4766  06C4  01C1               	clrf	_gaschkfg^(0+256)
  4767  06C5  0AC1               	incf	_gaschkfg^(0+256),f
  4768                           
  4769                           ;main.c: 969: TypeU.TypeS.gason =1;
  4770  06C6  0020               	movlb	0	; select bank0
  4771  06C7  15E7               	bsf	_TypeU,3
  4772                           
  4773                           ;main.c: 970: PORTCbits.RC3 =1;
  4774  06C8  158E               	bsf	14,3	;volatile
  4775                           
  4776                           ;main.c: 971: diswin1[0]= 0x11;
  4777  06C9  3011               	movlw	17
  4778  06CA  0021               	movlb	1	; select bank1
  4779  06CB  00DB               	movwf	??_key_application^(0+128)
  4780  06CC  085B               	movf	??_key_application^(0+128),w
  4781  06CD  0022               	movlb	2	; select bank2
  4782  06CE  00E4               	movwf	_diswin1^(0+256)
  4783                           
  4784                           ;main.c: 972: diswin1[1]= 0x0B;
  4785  06CF  300B               	movlw	11
  4786  06D0  0021               	movlb	1	; select bank1
  4787  06D1  00DB               	movwf	??_key_application^(0+128)
  4788  06D2  085B               	movf	??_key_application^(0+128),w
  4789  06D3  0022               	movlb	2	; select bank2
  4790  06D4  00E5               	movwf	(_diswin1^(0+256)+1)
  4791                           
  4792                           ;main.c: 973: diswin1[2]= 0x1D;
  4793  06D5  301D               	movlw	29
  4794  06D6  0021               	movlb	1	; select bank1
  4795  06D7  00DB               	movwf	??_key_application^(0+128)
  4796  06D8  085B               	movf	??_key_application^(0+128),w
  4797  06D9  0022               	movlb	2	; select bank2
  4798  06DA  00E6               	movwf	(_diswin1^(0+256)+2)
  4799                           
  4800                           ;main.c: 975: diswin1[3]= 0x19;
  4801  06DB  3019               	movlw	25
  4802  06DC  0021               	movlb	1	; select bank1
  4803  06DD  00DB               	movwf	??_key_application^(0+128)
  4804  06DE  085B               	movf	??_key_application^(0+128),w
  4805  06DF  0022               	movlb	2	; select bank2
  4806  06E0  00E7               	movwf	(_diswin1^(0+256)+3)
  4807                           
  4808                           ;main.c: 976: diswin1[4]= 0x18;
  4809  06E1  3018               	movlw	24
  4810  06E2  0021               	movlb	1	; select bank1
  4811  06E3  00DB               	movwf	??_key_application^(0+128)
  4812  06E4  085B               	movf	??_key_application^(0+128),w
  4813  06E5  0022               	movlb	2	; select bank2
  4814  06E6  00E8               	movwf	(_diswin1^(0+256)+4)
  4815                           
  4816                           ;main.c: 977: diswin1[5]= 0x25;
  4817  06E7  3025               	movlw	37
  4818  06E8  0021               	movlb	1	; select bank1
  4819  06E9  00DB               	movwf	??_key_application^(0+128)
  4820  06EA  085B               	movf	??_key_application^(0+128),w
  4821  06EB  0022               	movlb	2	; select bank2
  4822  06EC  00E9               	movwf	(_diswin1^(0+256)+5)
  4823                           
  4824                           ;main.c: 978: dispupdatef =1;
  4825  06ED  3001               	movlw	1
  4826  06EE  0021               	movlb	1	; select bank1
  4827  06EF  00DB               	movwf	??_key_application^(0+128)
  4828  06F0  085B               	movf	??_key_application^(0+128),w
  4829  06F1  0020               	movlb	0	; select bank0
  4830  06F2  00EF               	movwf	_dispupdatef	;volatile
  4831                           
  4832                           ;main.c: 979: }
  4833  06F3  2EF7               	goto	l4509
  4834  06F4                     l4507:	
  4835                           
  4836                           ;main.c: 980: else
  4837                           ;main.c: 981: {
  4838                           ;main.c: 982: igascntr = 0;
  4839  06F4  0023               	movlb	3	; select bank3
  4840  06F5  01BC               	clrf	_igascntr^(0+384)
  4841  06F6  01BD               	clrf	(_igascntr+1)^(0+384)
  4842  06F7                     l4509:	
  4843                           
  4844                           ;main.c: 983: }
  4845                           ;main.c: 985: dispupdatef =1;
  4846  06F7  3001               	movlw	1
  4847  06F8  0021               	movlb	1	; select bank1
  4848  06F9  00DB               	movwf	??_key_application^(0+128)
  4849  06FA  085B               	movf	??_key_application^(0+128),w
  4850  06FB  0020               	movlb	0	; select bank0
  4851  06FC  00EF               	movwf	_dispupdatef	;volatile
  4852                           
  4853                           ;main.c: 987: }
  4854  06FD  0008               	return
  4855  06FE                     l4511:	
  4856                           
  4857                           ;main.c: 988: else if(keypress==2)
  4858  06FE  0021               	movlb	1	; select bank1
  4859  06FF  085D               	movf	key_application@keypress^(0+128),w
  4860  0700  3A02               	xorlw	2
  4861  0701  1D03               	skipz
  4862  0702  2F90               	goto	l4549
  4863                           
  4864                           ;main.c: 989: {
  4865                           ;main.c: 990: inchcnt=10;
  4866  0703  300A               	movlw	10
  4867  0704  00DB               	movwf	??_key_application^(0+128)
  4868  0705  085B               	movf	??_key_application^(0+128),w
  4869  0706  0020               	movlb	0	; select bank0
  4870  0707  00EC               	movwf	_inchcnt
  4871  0708                     l4539:	
  4872                           ;main.c: 991: while(key==2)
  4873                           
  4874  0708  0021               	movlb	1	; select bank1
  4875  0709  086F               	movf	_key^(0+128),w	;volatile
  4876  070A  3A02               	xorlw	2
  4877  070B  1D03               	btfss	3,2
  4878  070C  2F6C               	goto	l4541
  4879                           
  4880                           ;main.c: 992: {
  4881                           ;main.c: 993: TypeU.TypeS.inch =1;
  4882  070D  0020               	movlb	0	; select bank0
  4883  070E  15E8               	bsf	_TypeU+1,3
  4884                           
  4885                           ;main.c: 996: diswin1[0] =0x13;
  4886  070F  3013               	movlw	19
  4887  0710  0021               	movlb	1	; select bank1
  4888  0711  00DB               	movwf	??_key_application^(0+128)
  4889  0712  085B               	movf	??_key_application^(0+128),w
  4890  0713  0022               	movlb	2	; select bank2
  4891  0714  00E4               	movwf	_diswin1^(0+256)
  4892                           
  4893                           ;main.c: 997: diswin1[1] =0x18;
  4894  0715  3018               	movlw	24
  4895  0716  0021               	movlb	1	; select bank1
  4896  0717  00DB               	movwf	??_key_application^(0+128)
  4897  0718  085B               	movf	??_key_application^(0+128),w
  4898  0719  0022               	movlb	2	; select bank2
  4899  071A  00E5               	movwf	(_diswin1^(0+256)+1)
  4900                           
  4901                           ;main.c: 998: diswin1[2] =0x0D;
  4902  071B  300D               	movlw	13
  4903  071C  0021               	movlb	1	; select bank1
  4904  071D  00DB               	movwf	??_key_application^(0+128)
  4905  071E  085B               	movf	??_key_application^(0+128),w
  4906  071F  0022               	movlb	2	; select bank2
  4907  0720  00E6               	movwf	(_diswin1^(0+256)+2)
  4908                           
  4909                           ;main.c: 999: Update_PWM(inchcnt*4);
  4910  0721  0020               	movlb	0	; select bank0
  4911  0722  086C               	movf	_inchcnt,w
  4912  0723  0021               	movlb	1	; select bank1
  4913  0724  00DB               	movwf	??_key_application^(0+128)
  4914  0725  01DC               	clrf	(??_key_application^(0+128)+1)
  4915  0726  35DB               	lslf	??_key_application^(0+128),f
  4916  0727  0DDC               	rlf	(??_key_application^(0+128)+1),f
  4917  0728  35DB               	lslf	??_key_application^(0+128),f
  4918  0729  0DDC               	rlf	(??_key_application^(0+128)+1),f
  4919  072A  085B               	movf	??_key_application^(0+128),w
  4920  072B  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  4921  072C  085C               	movf	(??_key_application+1)^(0+128),w
  4922  072D  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  4923  072E  3199  21D3  3186   	fcall	_Update_PWM
  4924                           
  4925                           ;main.c: 1000: disp_hex_window2(inchcnt);
  4926  0731  0020               	movlb	0	; select bank0
  4927  0732  086C               	movf	_inchcnt,w
  4928  0733  0021               	movlb	1	; select bank1
  4929  0734  00DB               	movwf	??_key_application^(0+128)
  4930  0735  01DC               	clrf	(??_key_application^(0+128)+1)
  4931  0736  085B               	movf	??_key_application^(0+128),w
  4932  0737  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  4933  0738  085C               	movf	(??_key_application+1)^(0+128),w
  4934  0739  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  4935  073A  319C  248B  3186   	fcall	_disp_hex_window2
  4936                           
  4937                           ;main.c: 1001: if(inchcnt<100)
  4938  073D  3064               	movlw	100
  4939  073E  0020               	movlb	0	; select bank0
  4940  073F  026C               	subwf	_inchcnt,w
  4941  0740  1803               	skipnc
  4942  0741  2F08               	goto	l4539
  4943                           
  4944                           ;main.c: 1002: {
  4945                           ;main.c: 1003: inchcnt=inchcnt+10;
  4946  0742  086C               	movf	_inchcnt,w
  4947  0743  3E0A               	addlw	10
  4948  0744  0021               	movlb	1	; select bank1
  4949  0745  00DB               	movwf	??_key_application^(0+128)
  4950  0746  085B               	movf	??_key_application^(0+128),w
  4951  0747  0020               	movlb	0	; select bank0
  4952  0748  00EC               	movwf	_inchcnt
  4953                           
  4954                           ;main.c: 1004: for(delinch1=0;delinch1<5;delinch1++)
  4955  0749  0023               	movlb	3	; select bank3
  4956  074A  01BA               	clrf	_delinch1^(0+384)
  4957  074B  01BB               	clrf	(_delinch1+1)^(0+384)
  4958  074C                     L9:	
  4959  074C  3000               	movlw	0
  4960  074D  023B               	subwf	(_delinch1+1)^(0+384),w
  4961  074E  3005               	movlw	5
  4962  074F  1903               	skipnz
  4963  0750  023A               	subwf	_delinch1^(0+384),w
  4964  0751  1803               	btfsc	3,0
  4965  0752  2F08               	goto	l4539
  4966                           
  4967                           ;main.c: 1005: for(delinch=0;delinch<50000;delinch++);
  4968  0753  01B8               	clrf	_delinch^(0+384)
  4969  0754  01B9               	clrf	(_delinch+1)^(0+384)
  4970  0755  30C3               	movlw	195
  4971  0756  0239               	subwf	(_delinch+1)^(0+384),w
  4972  0757  3050               	movlw	80
  4973  0758  1903               	skipnz
  4974  0759  0238               	subwf	_delinch^(0+384),w
  4975  075A  1803               	btfsc	3,0
  4976  075B  2F67               	goto	l4537
  4977  075C                     l4535:	
  4978  075C  3001               	movlw	1
  4979  075D  07B8               	addwf	_delinch^(0+384),f
  4980  075E  3000               	movlw	0
  4981  075F  3DB9               	addwfc	(_delinch+1)^(0+384),f
  4982  0760  30C3               	movlw	195
  4983  0761  0239               	subwf	(_delinch+1)^(0+384),w
  4984  0762  3050               	movlw	80
  4985  0763  1903               	skipnz
  4986  0764  0238               	subwf	_delinch^(0+384),w
  4987  0765  1C03               	skipc
  4988  0766  2F5C               	goto	l4535
  4989  0767                     l4537:	
  4990  0767  3001               	movlw	1
  4991  0768  07BA               	addwf	_delinch1^(0+384),f
  4992  0769  3000               	movlw	0
  4993  076A  3DBB               	addwfc	(_delinch1+1)^(0+384),f
  4994  076B  2F4C               	goto	L9
  4995  076C                     l4541:	
  4996                           
  4997                           ;main.c: 1006: }
  4998                           ;main.c: 1007: }
  4999                           ;main.c: 1008: Update_PWM(inchcnt*0);
  5000  076C  0020               	movlb	0	; select bank0
  5001  076D  086C               	movf	_inchcnt,w
  5002  076E  0021               	movlb	1	; select bank1
  5003  076F  00DB               	movwf	??_key_application^(0+128)
  5004  0770  01DC               	clrf	(??_key_application^(0+128)+1)
  5005  0771  085B               	movf	??_key_application^(0+128),w
  5006  0772  00A0               	movwf	___wmul@multiplier^(0+128)
  5007  0773  085C               	movf	(??_key_application+1)^(0+128),w
  5008  0774  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  5009  0775  3000               	movlw	0
  5010  0776  00A2               	movwf	___wmul@multiplicand^(0+128)
  5011  0777  3000               	movlw	0
  5012  0778  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  5013  0779  3199  2193  3186   	fcall	___wmul
  5014  077C  0021               	movlb	1	; select bank1
  5015  077D  0821               	movf	(?___wmul+1)^(0+128),w
  5016  077E  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  5017  077F  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  5018  0780  0820               	movf	?___wmul^(0+128),w
  5019  0781  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  5020  0782  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  5021  0783  3199  21D3         	fcall	_Update_PWM
  5022                           
  5023                           ;main.c: 1009: TypeU.TypeS.inch =0;
  5024  0785  0020               	movlb	0	; select bank0
  5025  0786  11E8               	bcf	_TypeU+1,3
  5026                           
  5027                           ;main.c: 1011: inchkeyon =0;
  5028  0787  0023               	movlb	3	; select bank3
  5029  0788  01DA               	clrf	_inchkeyon^(0+384)
  5030                           
  5031                           ;main.c: 1012: dispupdatef =1;
  5032  0789  3001               	movlw	1
  5033  078A  0021               	movlb	1	; select bank1
  5034  078B  00DB               	movwf	??_key_application^(0+128)
  5035  078C  085B               	movf	??_key_application^(0+128),w
  5036  078D  0020               	movlb	0	; select bank0
  5037  078E  00EF               	movwf	_dispupdatef	;volatile
  5038                           
  5039                           ;main.c: 1013: }
  5040  078F  0008               	return
  5041  0790                     l4549:	
  5042                           
  5043                           ;main.c: 1014: else if(keypress==3)
  5044  0790  0021               	movlb	1	; select bank1
  5045  0791  085D               	movf	key_application@keypress^(0+128),w
  5046  0792  3A03               	xorlw	3
  5047  0793  1D03               	skipz
  5048  0794  2FAA               	goto	l4561
  5049                           
  5050                           ;main.c: 1015: {
  5051                           ;main.c: 1019: if(TypeU.TypeS.twot==1)
  5052  0795  0020               	movlb	0	; select bank0
  5053  0796  1E67               	btfss	_TypeU,4
  5054  0797  2F9F               	goto	l759
  5055                           
  5056                           ;main.c: 1020: {
  5057                           ;main.c: 1021: TypeU.TypeS.twot=0;
  5058  0798  1267               	bcf	_TypeU,4
  5059                           
  5060                           ;main.c: 1022: TypeU.TypeS.fourt=1;
  5061  0799  16E7               	bsf	_TypeU,5
  5062                           
  5063                           ;main.c: 1023: wfstatusu.wfstatuss.twotfourtmode1=1;
  5064  079A  146E               	bsf	_wfstatusu,0
  5065                           
  5066                           ;main.c: 1024: cWf2t4tmodefg = 1;
  5067  079B  0022               	movlb	2	; select bank2
  5068  079C  01B4               	clrf	_cWf2t4tmodefg^(0+256)
  5069  079D  0AB4               	incf	_cWf2t4tmodefg^(0+256),f
  5070                           
  5071                           ;main.c: 1025: }
  5072  079E  2FA6               	goto	l4559
  5073  079F                     l759:	
  5074                           
  5075                           ;main.c: 1026: else if(TypeU.TypeS.fourt==1)
  5076  079F  1EE7               	btfss	_TypeU,5
  5077  07A0  2FA6               	goto	l4559
  5078                           
  5079                           ;main.c: 1027: {
  5080                           ;main.c: 1028: TypeU.TypeS.fourt=0;
  5081  07A1  12E7               	bcf	_TypeU,5
  5082                           
  5083                           ;main.c: 1029: TypeU.TypeS.twot =1;
  5084  07A2  1667               	bsf	_TypeU,4
  5085                           
  5086                           ;main.c: 1030: wfstatusu.wfstatuss.twotfourtmode1=0;
  5087  07A3  106E               	bcf	_wfstatusu,0
  5088                           
  5089                           ;main.c: 1031: cWf2t4tmodefg = 0;
  5090  07A4  0022               	movlb	2	; select bank2
  5091  07A5  01B4               	clrf	_cWf2t4tmodefg^(0+256)
  5092  07A6                     l4559:	
  5093                           
  5094                           ;main.c: 1032: }
  5095                           ;main.c: 1033: cEditfg = 1;
  5096  07A6  0022               	movlb	2	; select bank2
  5097  07A7  01B3               	clrf	_cEditfg^(0+256)
  5098  07A8  0AB3               	incf	_cEditfg^(0+256),f
  5099                           
  5100                           ;main.c: 1034: }
  5101  07A9  0008               	return
  5102  07AA                     l4561:	
  5103                           
  5104                           ;main.c: 1035: else if(keypress==4)
  5105  07AA  0021               	movlb	1	; select bank1
  5106  07AB  085D               	movf	key_application@keypress^(0+128),w
  5107  07AC  3A04               	xorlw	4
  5108  07AD  1D03               	skipz
  5109  07AE  2FCC               	goto	l4589
  5110                           
  5111                           ;main.c: 1036: {
  5112                           ;main.c: 1038: if(TypeU.TypeS.wirespeed==1)
  5113  07AF  0020               	movlb	0	; select bank0
  5114  07B0  1C67               	btfss	_TypeU,0
  5115  07B1  2FB7               	goto	l764
  5116                           
  5117                           ;main.c: 1039: {
  5118                           ;main.c: 1042: TypeU.TypeS.wirespeed=0;
  5119  07B2  1067               	bcf	_TypeU,0
  5120                           
  5121                           ;main.c: 1043: TypeU.TypeS.amp=1;
  5122  07B3  1468               	bsf	_TypeU+1,0
  5123                           
  5124                           ;main.c: 1044: TypeU.TypeS.thickness=0;
  5125  07B4  10E7               	bcf	_TypeU,1
  5126                           
  5127                           ;main.c: 1045: TypeDP.DPGROUP[0]=0x00;
  5128  07B5  01EB               	clrf	_TypeDP
  5129  07B6  2FC4               	goto	l4585
  5130  07B7                     l764:	
  5131                           ;main.c: 1048: }
  5132                           
  5133                           ;main.c: 1046: TypeDP.TypeD.digitdp5 =1;
  5134                           
  5135                           
  5136                           ;main.c: 1049: else if(TypeU.TypeS.amp==1)
  5137  07B7  1C68               	btfss	_TypeU+1,0
  5138  07B8  2FBD               	goto	l766
  5139                           
  5140                           ;main.c: 1050: {
  5141                           ;main.c: 1053: TypeU.TypeS.wirespeed=0;
  5142  07B9  1067               	bcf	_TypeU,0
  5143                           
  5144                           ;main.c: 1054: TypeU.TypeS.amp=0;
  5145  07BA  1068               	bcf	_TypeU+1,0
  5146                           
  5147                           ;main.c: 1055: TypeU.TypeS.thickness=1;
  5148  07BB  14E7               	bsf	_TypeU,1
  5149  07BC  2FC2               	goto	L10
  5150  07BD                     l766:	
  5151                           ;main.c: 1060: }
  5152                           
  5153                           ;main.c: 1058: TypeDP.TypeD.digitdp5 =1;
  5154                           
  5155                           ;main.c: 1057: TypeDP.TypeD.digitdp2 =1;
  5156                           
  5157                           ;main.c: 1056: TypeDP.DPGROUP[0]=0x00;
  5158                           
  5159                           
  5160                           ;main.c: 1061: else if(TypeU.TypeS.thickness==1)
  5161  07BD  1CE7               	btfss	_TypeU,1
  5162  07BE  2FC5               	goto	l4587
  5163                           
  5164                           ;main.c: 1062: {
  5165                           ;main.c: 1065: TypeU.TypeS.wirespeed=1;
  5166  07BF  1467               	bsf	_TypeU,0
  5167                           
  5168                           ;main.c: 1066: TypeU.TypeS.amp=0;
  5169  07C0  1068               	bcf	_TypeU+1,0
  5170                           
  5171                           ;main.c: 1067: TypeU.TypeS.thickness=0;
  5172  07C1  10E7               	bcf	_TypeU,1
  5173  07C2                     L10:	
  5174                           
  5175                           ;main.c: 1068: TypeDP.DPGROUP[0]=0x00;
  5176  07C2  01EB               	clrf	_TypeDP
  5177                           
  5178                           ;main.c: 1069: TypeDP.TypeD.digitdp2 =1;
  5179  07C3  14EB               	bsf	_TypeDP,1
  5180  07C4                     l4585:	
  5181                           
  5182                           ;main.c: 1070: TypeDP.TypeD.digitdp5 =1;
  5183  07C4  166B               	bsf	_TypeDP,4
  5184  07C5                     l4587:	
  5185                           
  5186                           ;main.c: 1072: }
  5187                           ;main.c: 1074: dispupdatef =1;
  5188  07C5  3001               	movlw	1
  5189  07C6  0021               	movlb	1	; select bank1
  5190  07C7  00DB               	movwf	??_key_application^(0+128)
  5191  07C8  085B               	movf	??_key_application^(0+128),w
  5192  07C9  0020               	movlb	0	; select bank0
  5193  07CA  00EF               	movwf	_dispupdatef	;volatile
  5194                           
  5195                           ;main.c: 1075: }
  5196  07CB  0008               	return
  5197  07CC                     l4589:	
  5198                           
  5199                           ;main.c: 1076: else if(keypress==0)
  5200  07CC  0021               	movlb	1	; select bank1
  5201  07CD  08DD               	movf	key_application@keypress^(0+128),f
  5202  07CE  1D03               	skipz
  5203  07CF  0008               	return
  5204                           
  5205                           ;main.c: 1077: {
  5206                           ;main.c: 1078: TypeU.TypeS.gason =0;
  5207  07D0  0020               	movlb	0	; select bank0
  5208  07D1  11E7               	bcf	_TypeU,3
  5209                           
  5210                           ;main.c: 1079: TypeU.TypeS.inch =0;
  5211  07D2  11E8               	bcf	_TypeU+1,3
  5212                           
  5213                           ;main.c: 1083: inchkeyon =0;
  5214  07D3  0023               	movlb	3	; select bank3
  5215  07D4  01DA               	clrf	_inchkeyon^(0+384)
  5216  07D5  0008               	return
  5217  07D6                     __end_of_key_application:	
  5218                           
  5219                           	psect	text8
  5220  1C8B                     __ptext8:	
  5221 ;; *************** function _disp_hex_window2 *****************
  5222 ;; Defined at:
  5223 ;;		line 164 in file "DISPLAY.C"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  hex_data        2    8[BANK1 ] unsigned int 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;		None               void
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0, pclath, cstack
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5237 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5239 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5240 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5241 ;;Total ram usage:        3 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    4
  5244 ;; This function calls:
  5245 ;;		___lwdiv
  5246 ;;		___lwmod
  5247 ;; This function is called by:
  5248 ;;		_main
  5249 ;;		_key_application
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           
  5254                           ;psect for function _disp_hex_window2
  5255  1C8B                     _disp_hex_window2:	
  5256                           
  5257                           ;DISPLAY.C: 166: diswin1[5]= hex_data % 10;
  5258                           
  5259                           ;incstack = 0
  5260                           ; Regs used in _disp_hex_window2: [wreg+status,2+status,0+pclath+cstack]
  5261  1C8B  300A               	movlw	10
  5262  1C8C  0021               	movlb	1	; select bank1
  5263  1C8D  00A0               	movwf	___lwmod@divisor^(0+128)
  5264  1C8E  3000               	movlw	0
  5265  1C8F  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5266  1C90  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5267  1C91  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5268  1C92  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5269  1C93  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5270  1C94  01A2               	clrf	___lwmod@dividend^(0+128)
  5271  1C95  07A2               	addwf	___lwmod@dividend^(0+128),f
  5272  1C96  3190  2004  319C   	fcall	___lwmod
  5273  1C99  0021               	movlb	1	; select bank1
  5274  1C9A  0820               	movf	?___lwmod^(0+128),w
  5275  1C9B  00AA               	movwf	??_disp_hex_window2^(0+128)
  5276  1C9C  082A               	movf	??_disp_hex_window2^(0+128),w
  5277  1C9D  0022               	movlb	2	; select bank2
  5278  1C9E  00E9               	movwf	(_diswin1^(0+256)+5)
  5279                           
  5280                           ;DISPLAY.C: 167: hex_data /= 10;
  5281  1C9F  300A               	movlw	10
  5282  1CA0  0021               	movlb	1	; select bank1
  5283  1CA1  00A0               	movwf	___lwdiv@divisor^(0+128)
  5284  1CA2  3000               	movlw	0
  5285  1CA3  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5286  1CA4  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5287  1CA5  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  5288  1CA6  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5289  1CA7  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5290  1CA8  01A2               	clrf	___lwdiv@dividend^(0+128)
  5291  1CA9  07A2               	addwf	___lwdiv@dividend^(0+128),f
  5292  1CAA  3199  21FA  319C   	fcall	___lwdiv
  5293  1CAD  0021               	movlb	1	; select bank1
  5294  1CAE  0821               	movf	(?___lwdiv+1)^(0+128),w
  5295  1CAF  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  5296  1CB0  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  5297  1CB1  0820               	movf	?___lwdiv^(0+128),w
  5298  1CB2  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  5299  1CB3  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  5300                           
  5301                           ;DISPLAY.C: 168: diswin1[4]= hex_data % 10;
  5302  1CB4  300A               	movlw	10
  5303  1CB5  00A0               	movwf	___lwmod@divisor^(0+128)
  5304  1CB6  3000               	movlw	0
  5305  1CB7  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5306  1CB8  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5307  1CB9  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5308  1CBA  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5309  1CBB  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5310  1CBC  01A2               	clrf	___lwmod@dividend^(0+128)
  5311  1CBD  07A2               	addwf	___lwmod@dividend^(0+128),f
  5312  1CBE  3190  2004  319C   	fcall	___lwmod
  5313  1CC1  0021               	movlb	1	; select bank1
  5314  1CC2  0820               	movf	?___lwmod^(0+128),w
  5315  1CC3  00AA               	movwf	??_disp_hex_window2^(0+128)
  5316  1CC4  082A               	movf	??_disp_hex_window2^(0+128),w
  5317  1CC5  0022               	movlb	2	; select bank2
  5318  1CC6  00E8               	movwf	(_diswin1^(0+256)+4)
  5319                           
  5320                           ;DISPLAY.C: 169: hex_data /= 10;
  5321  1CC7  300A               	movlw	10
  5322  1CC8  0021               	movlb	1	; select bank1
  5323  1CC9  00A0               	movwf	___lwdiv@divisor^(0+128)
  5324  1CCA  3000               	movlw	0
  5325  1CCB  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5326  1CCC  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5327  1CCD  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  5328  1CCE  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5329  1CCF  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5330  1CD0  01A2               	clrf	___lwdiv@dividend^(0+128)
  5331  1CD1  07A2               	addwf	___lwdiv@dividend^(0+128),f
  5332  1CD2  3199  21FA  319C   	fcall	___lwdiv
  5333  1CD5  0021               	movlb	1	; select bank1
  5334  1CD6  0821               	movf	(?___lwdiv+1)^(0+128),w
  5335  1CD7  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  5336  1CD8  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  5337  1CD9  0820               	movf	?___lwdiv^(0+128),w
  5338  1CDA  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  5339  1CDB  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  5340                           
  5341                           ;DISPLAY.C: 170: diswin1[3]= hex_data % 10;
  5342  1CDC  300A               	movlw	10
  5343  1CDD  00A0               	movwf	___lwmod@divisor^(0+128)
  5344  1CDE  3000               	movlw	0
  5345  1CDF  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5346  1CE0  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5347  1CE1  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5348  1CE2  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5349  1CE3  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5350  1CE4  01A2               	clrf	___lwmod@dividend^(0+128)
  5351  1CE5  07A2               	addwf	___lwmod@dividend^(0+128),f
  5352  1CE6  3190  2004         	fcall	___lwmod
  5353  1CE8  0021               	movlb	1	; select bank1
  5354  1CE9  0820               	movf	?___lwmod^(0+128),w
  5355  1CEA  00AA               	movwf	??_disp_hex_window2^(0+128)
  5356  1CEB  082A               	movf	??_disp_hex_window2^(0+128),w
  5357  1CEC  0022               	movlb	2	; select bank2
  5358  1CED  00E7               	movwf	(_diswin1^(0+256)+3)
  5359                           
  5360                           ;DISPLAY.C: 171: diswin1[6]=0x00;
  5361  1CEE  01EA               	clrf	(_diswin1^(0+256)+6)
  5362                           
  5363                           ;DISPLAY.C: 172: diswin1[7]=0x00;
  5364  1CEF  01EB               	clrf	(_diswin1^(0+256)+7)
  5365  1CF0  0008               	return
  5366  1CF1                     __end_of_disp_hex_window2:	
  5367                           
  5368                           	psect	text9
  5369  1C27                     __ptext9:	
  5370 ;; *************** function _disp_hex_window1 *****************
  5371 ;; Defined at:
  5372 ;;		line 152 in file "DISPLAY.C"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;  hex_data        2    8[BANK1 ] unsigned int 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;		None
  5377 ;; Return value:  Size  Location     Type
  5378 ;;		None               void
  5379 ;; Registers used:
  5380 ;;		wreg, status,2, status,0, pclath, cstack
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5386 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5389 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5390 ;;Total ram usage:        3 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:    4
  5393 ;; This function calls:
  5394 ;;		___lwdiv
  5395 ;;		___lwmod
  5396 ;; This function is called by:
  5397 ;;		_main
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           
  5402                           ;psect for function _disp_hex_window1
  5403  1C27                     _disp_hex_window1:	
  5404                           
  5405                           ;DISPLAY.C: 155: diswin1[2]= hex_data % 10;
  5406                           
  5407                           ;incstack = 0
  5408                           ; Regs used in _disp_hex_window1: [wreg+status,2+status,0+pclath+cstack]
  5409  1C27  300A               	movlw	10
  5410  1C28  0021               	movlb	1	; select bank1
  5411  1C29  00A0               	movwf	___lwmod@divisor^(0+128)
  5412  1C2A  3000               	movlw	0
  5413  1C2B  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5414  1C2C  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5415  1C2D  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5416  1C2E  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5417  1C2F  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5418  1C30  01A2               	clrf	___lwmod@dividend^(0+128)
  5419  1C31  07A2               	addwf	___lwmod@dividend^(0+128),f
  5420  1C32  3190  2004  319C   	fcall	___lwmod
  5421  1C35  0021               	movlb	1	; select bank1
  5422  1C36  0820               	movf	?___lwmod^(0+128),w
  5423  1C37  00AA               	movwf	??_disp_hex_window1^(0+128)
  5424  1C38  082A               	movf	??_disp_hex_window1^(0+128),w
  5425  1C39  0022               	movlb	2	; select bank2
  5426  1C3A  00E6               	movwf	(_diswin1^(0+256)+2)
  5427                           
  5428                           ;DISPLAY.C: 156: hex_data /= 10;
  5429  1C3B  300A               	movlw	10
  5430  1C3C  0021               	movlb	1	; select bank1
  5431  1C3D  00A0               	movwf	___lwdiv@divisor^(0+128)
  5432  1C3E  3000               	movlw	0
  5433  1C3F  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5434  1C40  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5435  1C41  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  5436  1C42  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5437  1C43  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5438  1C44  01A2               	clrf	___lwdiv@dividend^(0+128)
  5439  1C45  07A2               	addwf	___lwdiv@dividend^(0+128),f
  5440  1C46  3199  21FA  319C   	fcall	___lwdiv
  5441  1C49  0021               	movlb	1	; select bank1
  5442  1C4A  0821               	movf	(?___lwdiv+1)^(0+128),w
  5443  1C4B  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  5444  1C4C  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  5445  1C4D  0820               	movf	?___lwdiv^(0+128),w
  5446  1C4E  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  5447  1C4F  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  5448                           
  5449                           ;DISPLAY.C: 157: diswin1[1]= hex_data % 10;
  5450  1C50  300A               	movlw	10
  5451  1C51  00A0               	movwf	___lwmod@divisor^(0+128)
  5452  1C52  3000               	movlw	0
  5453  1C53  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5454  1C54  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5455  1C55  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5456  1C56  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5457  1C57  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5458  1C58  01A2               	clrf	___lwmod@dividend^(0+128)
  5459  1C59  07A2               	addwf	___lwmod@dividend^(0+128),f
  5460  1C5A  3190  2004  319C   	fcall	___lwmod
  5461  1C5D  0021               	movlb	1	; select bank1
  5462  1C5E  0820               	movf	?___lwmod^(0+128),w
  5463  1C5F  00AA               	movwf	??_disp_hex_window1^(0+128)
  5464  1C60  082A               	movf	??_disp_hex_window1^(0+128),w
  5465  1C61  0022               	movlb	2	; select bank2
  5466  1C62  00E5               	movwf	(_diswin1^(0+256)+1)
  5467                           
  5468                           ;DISPLAY.C: 158: hex_data /= 10;
  5469  1C63  300A               	movlw	10
  5470  1C64  0021               	movlb	1	; select bank1
  5471  1C65  00A0               	movwf	___lwdiv@divisor^(0+128)
  5472  1C66  3000               	movlw	0
  5473  1C67  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5474  1C68  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5475  1C69  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  5476  1C6A  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5477  1C6B  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5478  1C6C  01A2               	clrf	___lwdiv@dividend^(0+128)
  5479  1C6D  07A2               	addwf	___lwdiv@dividend^(0+128),f
  5480  1C6E  3199  21FA  319C   	fcall	___lwdiv
  5481  1C71  0021               	movlb	1	; select bank1
  5482  1C72  0821               	movf	(?___lwdiv+1)^(0+128),w
  5483  1C73  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  5484  1C74  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  5485  1C75  0820               	movf	?___lwdiv^(0+128),w
  5486  1C76  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  5487  1C77  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  5488                           
  5489                           ;DISPLAY.C: 159: diswin1[0]= hex_data % 10;
  5490  1C78  300A               	movlw	10
  5491  1C79  00A0               	movwf	___lwmod@divisor^(0+128)
  5492  1C7A  3000               	movlw	0
  5493  1C7B  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5494  1C7C  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5495  1C7D  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5496  1C7E  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5497  1C7F  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5498  1C80  01A2               	clrf	___lwmod@dividend^(0+128)
  5499  1C81  07A2               	addwf	___lwmod@dividend^(0+128),f
  5500  1C82  3190  2004         	fcall	___lwmod
  5501  1C84  0021               	movlb	1	; select bank1
  5502  1C85  0820               	movf	?___lwmod^(0+128),w
  5503  1C86  00AA               	movwf	??_disp_hex_window1^(0+128)
  5504  1C87  082A               	movf	??_disp_hex_window1^(0+128),w
  5505  1C88  0022               	movlb	2	; select bank2
  5506  1C89  00E4               	movwf	_diswin1^(0+256)
  5507  1C8A  0008               	return
  5508  1C8B                     __end_of_disp_hex_window1:	
  5509                           
  5510                           	psect	text10
  5511  1004                     __ptext10:	
  5512 ;; *************** function ___lwmod *****************
  5513 ;; Defined at:
  5514 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwmod.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;  divisor         2    0[BANK1 ] unsigned int 
  5517 ;;  dividend        2    2[BANK1 ] unsigned int 
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;  counter         1    5[BANK1 ] unsigned char 
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  2    0[BANK1 ] unsigned int 
  5522 ;; Registers used:
  5523 ;;		wreg, status,2, status,0
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5529 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5530 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5531 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5532 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5533 ;;Total ram usage:        6 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; Hardware stack levels required when called:    3
  5536 ;; This function calls:
  5537 ;;		Nothing
  5538 ;; This function is called by:
  5539 ;;		_disp_hex_window1
  5540 ;;		_disp_hex_window2
  5541 ;;		_disp_hex_window11
  5542 ;;		_disp_hex_window22
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           
  5547                           ;psect for function ___lwmod
  5548  1004                     ___lwmod:	
  5549                           
  5550                           ;incstack = 0
  5551                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5552  1004  0021               	movlb	1	; select bank1
  5553  1005  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5554  1006  0420               	iorwf	___lwmod@divisor^(0+128),w
  5555  1007  1903               	skipnz
  5556  1008  282C               	goto	l3603
  5557  1009  01A5               	clrf	___lwmod@counter^(0+128)
  5558  100A  0AA5               	incf	___lwmod@counter^(0+128),f
  5559  100B                     l3593:	
  5560  100B  1BA1               	btfsc	(___lwmod@divisor+1)^(0+128),7
  5561  100C  2817               	goto	l3595
  5562  100D  3001               	movlw	1
  5563  100E                     u4345:	
  5564  100E  35A0               	lslf	___lwmod@divisor^(0+128),f
  5565  100F  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  5566  1010  0B89               	decfsz	9,f
  5567  1011  280E               	goto	u4345
  5568  1012  3001               	movlw	1
  5569  1013  00A4               	movwf	??___lwmod^(0+128)
  5570  1014  0824               	movf	??___lwmod^(0+128),w
  5571  1015  07A5               	addwf	___lwmod@counter^(0+128),f
  5572  1016  280B               	goto	l3593
  5573  1017                     l3595:	
  5574  1017  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5575  1018  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  5576  1019  1D03               	skipz
  5577  101A  281D               	goto	u4365
  5578  101B  0820               	movf	___lwmod@divisor^(0+128),w
  5579  101C  0222               	subwf	___lwmod@dividend^(0+128),w
  5580  101D                     u4365:	
  5581  101D  1C03               	skipc
  5582  101E  2823               	goto	l3599
  5583  101F  0820               	movf	___lwmod@divisor^(0+128),w
  5584  1020  02A2               	subwf	___lwmod@dividend^(0+128),f
  5585  1021  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5586  1022  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
  5587  1023                     l3599:	
  5588  1023  3001               	movlw	1
  5589  1024                     u4375:	
  5590  1024  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
  5591  1025  0CA0               	rrf	___lwmod@divisor^(0+128),f
  5592  1026  0B89               	decfsz	9,f
  5593  1027  2824               	goto	u4375
  5594  1028  3001               	movlw	1
  5595  1029  02A5               	subwf	___lwmod@counter^(0+128),f
  5596  102A  1D03               	btfss	3,2
  5597  102B  2817               	goto	l3595
  5598  102C                     l3603:	
  5599  102C  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  5600  102D  01A1               	clrf	(?___lwmod+1)^(0+128)
  5601  102E  07A1               	addwf	(?___lwmod+1)^(0+128),f
  5602  102F  0822               	movf	___lwmod@dividend^(0+128),w
  5603  1030  01A0               	clrf	?___lwmod^(0+128)
  5604  1031  07A0               	addwf	?___lwmod^(0+128),f
  5605  1032  0008               	return
  5606  1033                     __end_of___lwmod:	
  5607                           
  5608                           	psect	text11
  5609  19FA                     __ptext11:	
  5610 ;; *************** function ___lwdiv *****************
  5611 ;; Defined at:
  5612 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  divisor         2    0[BANK1 ] unsigned int 
  5615 ;;  dividend        2    2[BANK1 ] unsigned int 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  quotient        2    5[BANK1 ] unsigned int 
  5618 ;;  counter         1    7[BANK1 ] unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  2    0[BANK1 ] unsigned int 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5628 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;Total ram usage:        8 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    3
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_disp_hex_window1
  5639 ;;		_disp_hex_window2
  5640 ;;		_disp_hex_window11
  5641 ;;		_disp_hex_window22
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function ___lwdiv
  5647  19FA                     ___lwdiv:	
  5648                           
  5649                           ;incstack = 0
  5650                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5651  19FA  0021               	movlb	1	; select bank1
  5652  19FB  01A5               	clrf	___lwdiv@quotient^(0+128)
  5653  19FC  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  5654  19FD  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  5655  19FE  0420               	iorwf	___lwdiv@divisor^(0+128),w
  5656  19FF  1903               	skipnz
  5657  1A00  2A2A               	goto	l3581
  5658  1A01  01A7               	clrf	___lwdiv@counter^(0+128)
  5659  1A02  0AA7               	incf	___lwdiv@counter^(0+128),f
  5660  1A03                     l3569:	
  5661  1A03  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  5662  1A04  2A0F               	goto	l3571
  5663  1A05  3001               	movlw	1
  5664  1A06                     u4275:	
  5665  1A06  35A0               	lslf	___lwdiv@divisor^(0+128),f
  5666  1A07  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  5667  1A08  0B89               	decfsz	9,f
  5668  1A09  2A06               	goto	u4275
  5669  1A0A  3001               	movlw	1
  5670  1A0B  00A4               	movwf	??___lwdiv^(0+128)
  5671  1A0C  0824               	movf	??___lwdiv^(0+128),w
  5672  1A0D  07A7               	addwf	___lwdiv@counter^(0+128),f
  5673  1A0E  2A03               	goto	l3569
  5674  1A0F                     l3571:	
  5675  1A0F  3001               	movlw	1
  5676  1A10                     u4295:	
  5677  1A10  35A5               	lslf	___lwdiv@quotient^(0+128),f
  5678  1A11  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  5679  1A12  0B89               	decfsz	9,f
  5680  1A13  2A10               	goto	u4295
  5681  1A14  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  5682  1A15  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  5683  1A16  1D03               	skipz
  5684  1A17  2A1A               	goto	u4305
  5685  1A18  0820               	movf	___lwdiv@divisor^(0+128),w
  5686  1A19  0222               	subwf	___lwdiv@dividend^(0+128),w
  5687  1A1A                     u4305:	
  5688  1A1A  1C03               	skipc
  5689  1A1B  2A21               	goto	l3577
  5690  1A1C  0820               	movf	___lwdiv@divisor^(0+128),w
  5691  1A1D  02A2               	subwf	___lwdiv@dividend^(0+128),f
  5692  1A1E  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  5693  1A1F  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  5694  1A20  1425               	bsf	___lwdiv@quotient^(0+128),0
  5695  1A21                     l3577:	
  5696  1A21  3001               	movlw	1
  5697  1A22                     u4315:	
  5698  1A22  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  5699  1A23  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  5700  1A24  0B89               	decfsz	9,f
  5701  1A25  2A22               	goto	u4315
  5702  1A26  3001               	movlw	1
  5703  1A27  02A7               	subwf	___lwdiv@counter^(0+128),f
  5704  1A28  1D03               	btfss	3,2
  5705  1A29  2A0F               	goto	l3571
  5706  1A2A                     l3581:	
  5707  1A2A  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  5708  1A2B  01A1               	clrf	(?___lwdiv+1)^(0+128)
  5709  1A2C  07A1               	addwf	(?___lwdiv+1)^(0+128),f
  5710  1A2D  0825               	movf	___lwdiv@quotient^(0+128),w
  5711  1A2E  01A0               	clrf	?___lwdiv^(0+128)
  5712  1A2F  07A0               	addwf	?___lwdiv^(0+128),f
  5713  1A30  0008               	return
  5714  1A31                     __end_of___lwdiv:	
  5715                           
  5716                           	psect	text12
  5717  1185                     __ptext12:	
  5718 ;; *************** function _detect_display_error *****************
  5719 ;; Defined at:
  5720 ;;		line 1264 in file "main.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;		None               void
  5727 ;; Registers used:
  5728 ;;		wreg, status,2, status,0, pclath, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;Total ram usage:        1 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    4
  5741 ;; This function calls:
  5742 ;;		_Update_PWM
  5743 ;; This function is called by:
  5744 ;;		_main
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           
  5749                           ;psect for function _detect_display_error
  5750  1185                     _detect_display_error:	
  5751                           
  5752                           ;main.c: 1267: pstowfstru.pstowfstrs.error_code1=erroru.errorstatusbyte[0];
  5753                           
  5754                           ;incstack = 0
  5755                           ; Regs used in _detect_display_error: [wreg+status,2+status,0+pclath+cstack]
  5756  1185  0022               	movlb	2	; select bank2
  5757  1186  085F               	movf	_erroru^(0+256),w
  5758  1187  0021               	movlb	1	; select bank1
  5759  1188  00DB               	movwf	??_detect_display_error^(0+128)
  5760  1189  085B               	movf	??_detect_display_error^(0+128),w
  5761  118A  0024               	movlb	4	; select bank4
  5762  118B  00DA               	movwf	(_pstowfstru^(0+512)+16)
  5763                           
  5764                           ;main.c: 1268: pstowfstru.pstowfstrs.error_code2=erroru.errorstatusbyte[1];
  5765  118C  0022               	movlb	2	; select bank2
  5766  118D  0860               	movf	(_erroru^(0+256)+1),w
  5767  118E  0021               	movlb	1	; select bank1
  5768  118F  00DB               	movwf	??_detect_display_error^(0+128)
  5769  1190  085B               	movf	??_detect_display_error^(0+128),w
  5770  1191  0024               	movlb	4	; select bank4
  5771  1192  00DB               	movwf	(_pstowfstru^(0+512)+17)
  5772                           
  5773                           ;main.c: 1270: if(erroru.errors.uv_er1==1)
  5774  1193  0022               	movlb	2	; select bank2
  5775  1194  1C5F               	btfss	_erroru^(0+256),0
  5776  1195  299F               	goto	l811
  5777                           
  5778                           ;main.c: 1271: {
  5779                           ;main.c: 1272: universal_error=1;
  5780  1196  3001               	movlw	1
  5781  1197  0021               	movlb	1	; select bank1
  5782  1198  00DB               	movwf	??_detect_display_error^(0+128)
  5783  1199  085B               	movf	??_detect_display_error^(0+128),w
  5784  119A  0022               	movlb	2	; select bank2
  5785  119B  00DB               	movwf	_universal_error^(0+256)	;volatile
  5786                           
  5787                           ;main.c: 1273: diswin1[5]=1;
  5788  119C  01E9               	clrf	(_diswin1^(0+256)+5)
  5789  119D  0AE9               	incf	(_diswin1^(0+256)+5),f
  5790                           
  5791                           ;main.c: 1274: }
  5792  119E  2A03               	goto	l4631
  5793  119F                     l811:	
  5794                           
  5795                           ;main.c: 1275: else if(erroru.errors.ov_er2==1)
  5796  119F  1CDF               	btfss	_erroru^(0+256),1
  5797  11A0  29A9               	goto	l813
  5798                           
  5799                           ;main.c: 1276: {
  5800                           ;main.c: 1277: universal_error=1;
  5801  11A1  3001               	movlw	1
  5802  11A2  0021               	movlb	1	; select bank1
  5803  11A3  00DB               	movwf	??_detect_display_error^(0+128)
  5804  11A4  085B               	movf	??_detect_display_error^(0+128),w
  5805  11A5  0022               	movlb	2	; select bank2
  5806  11A6  00DB               	movwf	_universal_error^(0+256)	;volatile
  5807                           
  5808                           ;main.c: 1278: diswin1[5]=2;
  5809  11A7  3002               	movlw	2
  5810  11A8  29F0               	goto	L16
  5811  11A9                     l813:	
  5812                           ;main.c: 1279: }
  5813                           
  5814                           
  5815                           ;main.c: 1280: else if(erroru.errors.th_er3==1)
  5816  11A9  1D5F               	btfss	_erroru^(0+256),2
  5817  11AA  29B3               	goto	l815
  5818                           
  5819                           ;main.c: 1281: {
  5820                           ;main.c: 1282: universal_error=1;
  5821  11AB  3001               	movlw	1
  5822  11AC  0021               	movlb	1	; select bank1
  5823  11AD  00DB               	movwf	??_detect_display_error^(0+128)
  5824  11AE  085B               	movf	??_detect_display_error^(0+128),w
  5825  11AF  0022               	movlb	2	; select bank2
  5826  11B0  00DB               	movwf	_universal_error^(0+256)	;volatile
  5827                           
  5828                           ;main.c: 1283: diswin1[5]=3;
  5829  11B1  3003               	movlw	3
  5830  11B2  29F0               	goto	L16
  5831  11B3                     l815:	
  5832                           ;main.c: 1284: }
  5833                           
  5834                           
  5835                           ;main.c: 1285: else if(erroru.errors.no_curr_er4==1)
  5836  11B3  1DDF               	btfss	_erroru^(0+256),3
  5837  11B4  29BD               	goto	l817
  5838                           
  5839                           ;main.c: 1286: {
  5840                           ;main.c: 1287: universal_error=1;
  5841  11B5  3001               	movlw	1
  5842  11B6  0021               	movlb	1	; select bank1
  5843  11B7  00DB               	movwf	??_detect_display_error^(0+128)
  5844  11B8  085B               	movf	??_detect_display_error^(0+128),w
  5845  11B9  0022               	movlb	2	; select bank2
  5846  11BA  00DB               	movwf	_universal_error^(0+256)	;volatile
  5847                           
  5848                           ;main.c: 1288: diswin1[5]=4;
  5849  11BB  3004               	movlw	4
  5850  11BC  29F0               	goto	L16
  5851  11BD                     l817:	
  5852                           ;main.c: 1289: }
  5853                           
  5854                           
  5855                           ;main.c: 1290: else if(erroru.errors.motor_over_ld_er5==1)
  5856  11BD  1E5F               	btfss	_erroru^(0+256),4
  5857  11BE  29C7               	goto	l819
  5858                           
  5859                           ;main.c: 1291: {
  5860                           ;main.c: 1292: universal_error=1;
  5861  11BF  3001               	movlw	1
  5862  11C0  0021               	movlb	1	; select bank1
  5863  11C1  00DB               	movwf	??_detect_display_error^(0+128)
  5864  11C2  085B               	movf	??_detect_display_error^(0+128),w
  5865  11C3  0022               	movlb	2	; select bank2
  5866  11C4  00DB               	movwf	_universal_error^(0+256)	;volatile
  5867                           
  5868                           ;main.c: 1293: diswin1[5]=5;
  5869  11C5  3005               	movlw	5
  5870  11C6  29F0               	goto	L16
  5871  11C7                     l819:	
  5872                           ;main.c: 1294: }
  5873                           
  5874                           
  5875                           ;main.c: 1295: else if(erroru.errors.wirefdr_er6==1)
  5876  11C7  1EDF               	btfss	_erroru^(0+256),5
  5877  11C8  29D1               	goto	l821
  5878                           
  5879                           ;main.c: 1296: {
  5880                           ;main.c: 1297: universal_error=1;
  5881  11C9  3001               	movlw	1
  5882  11CA  0021               	movlb	1	; select bank1
  5883  11CB  00DB               	movwf	??_detect_display_error^(0+128)
  5884  11CC  085B               	movf	??_detect_display_error^(0+128),w
  5885  11CD  0022               	movlb	2	; select bank2
  5886  11CE  00DB               	movwf	_universal_error^(0+256)	;volatile
  5887                           
  5888                           ;main.c: 1298: diswin1[5]=6;
  5889  11CF  3006               	movlw	6
  5890  11D0  29F0               	goto	L16
  5891  11D1                     l821:	
  5892                           ;main.c: 1299: }
  5893                           
  5894                           
  5895                           ;main.c: 1300: else if(erroru.errors.water_press_er7==1 && ( (weldmode=='P') || (weldmod
      +                          e=='G') ) )
  5896  11D1  1F5F               	btfss	_erroru^(0+256),6
  5897  11D2  29E4               	goto	l4619
  5898  11D3  0020               	movlb	0	; select bank0
  5899  11D4  0866               	movf	_weldmode,w	;volatile
  5900  11D5  3A50               	xorlw	80
  5901  11D6  1903               	skipnz
  5902  11D7  29DC               	goto	l4617
  5903  11D8  0866               	movf	_weldmode,w	;volatile
  5904  11D9  3A47               	xorlw	71
  5905  11DA  1D03               	skipz
  5906  11DB  29E4               	goto	l4619
  5907  11DC                     l4617:	
  5908                           
  5909                           ;main.c: 1301: {
  5910                           ;main.c: 1302: universal_error=1;
  5911  11DC  3001               	movlw	1
  5912  11DD  0021               	movlb	1	; select bank1
  5913  11DE  00DB               	movwf	??_detect_display_error^(0+128)
  5914  11DF  085B               	movf	??_detect_display_error^(0+128),w
  5915  11E0  0022               	movlb	2	; select bank2
  5916  11E1  00DB               	movwf	_universal_error^(0+256)	;volatile
  5917                           
  5918                           ;main.c: 1303: diswin1[5]=7;
  5919  11E2  3007               	movlw	7
  5920  11E3  29F0               	goto	L16
  5921  11E4                     l4619:	
  5922                           ;main.c: 1304: }
  5923                           
  5924                           
  5925                           ;main.c: 1305: else if(error8==1)
  5926  11E4  0022               	movlb	2	; select bank2
  5927  11E5  083E               	movf	_error8^(0+256),w	;volatile
  5928  11E6  3A01               	xorlw	1
  5929  11E7  1D03               	skipz
  5930  11E8  29F6               	goto	l827
  5931                           
  5932                           ;main.c: 1306: {
  5933                           ;main.c: 1307: universal_error=1;
  5934  11E9  3001               	movlw	1
  5935  11EA  0021               	movlb	1	; select bank1
  5936  11EB  00DB               	movwf	??_detect_display_error^(0+128)
  5937  11EC  085B               	movf	??_detect_display_error^(0+128),w
  5938  11ED  0022               	movlb	2	; select bank2
  5939  11EE  00DB               	movwf	_universal_error^(0+256)	;volatile
  5940                           
  5941                           ;main.c: 1308: diswin1[5]=8;
  5942  11EF  3008               	movlw	8
  5943  11F0                     L16:	
  5944  11F0  0021               	movlb	1	; select bank1
  5945  11F1  00DB               	movwf	??_detect_display_error^(0+128)
  5946  11F2  085B               	movf	??_detect_display_error^(0+128),w
  5947  11F3  0022               	movlb	2	; select bank2
  5948  11F4  00E9               	movwf	(_diswin1^(0+256)+5)
  5949                           
  5950                           ;main.c: 1309: }
  5951  11F5  2A03               	goto	l4631
  5952  11F6                     l827:	
  5953                           
  5954                           ;main.c: 1310: else if(erroru.errors.motor_fb_err==1)
  5955  11F6  1D60               	btfss	(_erroru^(0+256)+1),2
  5956  11F7  2A02               	goto	l4629
  5957                           
  5958                           ;main.c: 1311: {
  5959                           ;main.c: 1312: universal_error=1;
  5960  11F8  3001               	movlw	1
  5961  11F9  0021               	movlb	1	; select bank1
  5962  11FA  00DB               	movwf	??_detect_display_error^(0+128)
  5963  11FB  085B               	movf	??_detect_display_error^(0+128),w
  5964  11FC  0022               	movlb	2	; select bank2
  5965  11FD  00DB               	movwf	_universal_error^(0+256)	;volatile
  5966                           
  5967                           ;main.c: 1313: diswin1[4]=1;
  5968  11FE  01E8               	clrf	(_diswin1^(0+256)+4)
  5969  11FF  0AE8               	incf	(_diswin1^(0+256)+4),f
  5970                           
  5971                           ;main.c: 1314: diswin1[5]=0;
  5972  1200  01E9               	clrf	(_diswin1^(0+256)+5)
  5973                           
  5974                           ;main.c: 1315: }
  5975  1201  2A03               	goto	l4631
  5976  1202                     l4629:	
  5977                           
  5978                           ;main.c: 1316: else
  5979                           ;main.c: 1317: universal_error=0;
  5980  1202  01DB               	clrf	_universal_error^(0+256)	;volatile
  5981  1203                     l4631:	
  5982                           
  5983                           ;main.c: 1319: if(universal_error==1)
  5984  1203  085B               	movf	_universal_error^(0+256),w	;volatile
  5985  1204  3A01               	xorlw	1
  5986  1205  1D03               	skipz
  5987  1206  0008               	return
  5988                           
  5989                           ;main.c: 1320: {
  5990                           ;main.c: 1321: universal_error_latch=1;
  5991  1207  3001               	movlw	1
  5992  1208  0021               	movlb	1	; select bank1
  5993  1209  00DB               	movwf	??_detect_display_error^(0+128)
  5994  120A  085B               	movf	??_detect_display_error^(0+128),w
  5995  120B  0022               	movlb	2	; select bank2
  5996  120C  00DC               	movwf	_universal_error_latch^(0+256)	;volatile
  5997                           
  5998                           ;main.c: 1322: diswin1[0]=0x0F;
  5999  120D  300F               	movlw	15
  6000  120E  0021               	movlb	1	; select bank1
  6001  120F  00DB               	movwf	??_detect_display_error^(0+128)
  6002  1210  085B               	movf	??_detect_display_error^(0+128),w
  6003  1211  0022               	movlb	2	; select bank2
  6004  1212  00E4               	movwf	_diswin1^(0+256)
  6005                           
  6006                           ;main.c: 1323: diswin1[1]=0x1C;
  6007  1213  301C               	movlw	28
  6008  1214  0021               	movlb	1	; select bank1
  6009  1215  00DB               	movwf	??_detect_display_error^(0+128)
  6010  1216  085B               	movf	??_detect_display_error^(0+128),w
  6011  1217  0022               	movlb	2	; select bank2
  6012  1218  00E5               	movwf	(_diswin1^(0+256)+1)
  6013                           
  6014                           ;main.c: 1324: diswin1[2]=0x1C;
  6015  1219  301C               	movlw	28
  6016  121A  0021               	movlb	1	; select bank1
  6017  121B  00DB               	movwf	??_detect_display_error^(0+128)
  6018  121C  085B               	movf	??_detect_display_error^(0+128),w
  6019  121D  0022               	movlb	2	; select bank2
  6020  121E  00E6               	movwf	(_diswin1^(0+256)+2)
  6021                           
  6022                           ;main.c: 1326: diswin1[3]=0;
  6023  121F  01E7               	clrf	(_diswin1^(0+256)+3)
  6024                           
  6025                           ;main.c: 1327: diswin1[4]=0;
  6026  1220  01E8               	clrf	(_diswin1^(0+256)+4)
  6027                           
  6028                           ;main.c: 1329: PORTCbits.RC3 =0;
  6029  1221  0020               	movlb	0	; select bank0
  6030  1222  118E               	bcf	14,3	;volatile
  6031                           
  6032                           ;main.c: 1330: Update_PWM(0);
  6033  1223  3000               	movlw	0
  6034  1224  0021               	movlb	1	; select bank1
  6035  1225  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  6036  1226  3000               	movlw	0
  6037  1227  00D4               	movwf	(Update_PWM@setwsduty^(0+128)+1)
  6038  1228  3199  21D3         	fcall	_Update_PWM
  6039                           
  6040                           ;main.c: 1331: TypeDP.DPGROUP[0]=0;
  6041  122A  0020               	movlb	0	; select bank0
  6042  122B  01EB               	clrf	_TypeDP
  6043                           
  6044                           ;main.c: 1332: erroru.errors.comm_er8=1;
  6045  122C  0022               	movlb	2	; select bank2
  6046  122D  17DF               	bsf	_erroru^(0+256),7
  6047  122E  0008               	return
  6048  122F                     __end_of_detect_display_error:	
  6049                           
  6050                           	psect	text13
  6051  1903                     __ptext13:	
  6052 ;; *************** function _capture_init *****************
  6053 ;; Defined at:
  6054 ;;		line 1160 in file "main.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;		None
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;		None
  6059 ;; Return value:  Size  Location     Type
  6060 ;;		None               void
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6072 ;;Total ram usage:        0 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    3
  6075 ;; This function calls:
  6076 ;;		Nothing
  6077 ;; This function is called by:
  6078 ;;		_main
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           
  6083                           ;psect for function _capture_init
  6084  1903                     _capture_init:	
  6085                           
  6086                           ;main.c: 1162: TRISCbits.TRISC1 =1;
  6087                           
  6088                           ;incstack = 0
  6089                           ; Regs used in _capture_init: [wreg+status,2+status,0]
  6090  1903  0021               	movlb	1	; select bank1
  6091  1904  148E               	bsf	14,1	;volatile
  6092                           
  6093                           ;main.c: 1164: PIE2bits.CCP2IE = 1;
  6094  1905  1412               	bsf	18,0	;volatile
  6095                           
  6096                           ;main.c: 1165: CCP2CONbits.CCP2M=0x05;
  6097  1906  0025               	movlb	5	; select bank5
  6098  1907  081A               	movf	26,w	;volatile
  6099  1908  39F0               	andlw	-16
  6100  1909  3805               	iorlw	5
  6101  190A  009A               	movwf	26	;volatile
  6102                           
  6103                           ;main.c: 1166: TMR1H = 0x00;
  6104  190B  0020               	movlb	0	; select bank0
  6105  190C  0197               	clrf	23	;volatile
  6106                           
  6107                           ;main.c: 1167: TMR1L = 0x00;
  6108  190D  0196               	clrf	22	;volatile
  6109                           
  6110                           ;main.c: 1168: PIR1 = 0x00;
  6111  190E  0191               	clrf	17	;volatile
  6112                           
  6113                           ;main.c: 1170: T1CON = 0x21;
  6114  190F  3021               	movlw	33
  6115  1910  0098               	movwf	24	;volatile
  6116                           
  6117                           ;main.c: 1171: INTCONbits.GIE = 1;
  6118  1911  178B               	bsf	11,7	;volatile
  6119                           
  6120                           ;main.c: 1172: INTCONbits.PEIE = 1;
  6121  1912  170B               	bsf	11,6	;volatile
  6122  1913  0008               	return
  6123  1914                     __end_of_capture_init:	
  6124                           
  6125                           	psect	text14
  6126  193A                     __ptext14:	
  6127 ;; *************** function ___lwtoft *****************
  6128 ;; Defined at:
  6129 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  c               2    8[BANK1 ] unsigned int 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  3    8[BANK1 ] float 
  6136 ;; Registers used:
  6137 ;;		wreg, status,2, status,0, pclath, cstack
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6143 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6147 ;;Total ram usage:        4 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:    4
  6150 ;; This function calls:
  6151 ;;		___ftpack
  6152 ;; This function is called by:
  6153 ;;		_main
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           
  6158                           ;psect for function ___lwtoft
  6159  193A                     ___lwtoft:	
  6160                           
  6161                           ;incstack = 0
  6162                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6163  193A  0021               	movlb	1	; select bank1
  6164  193B  0828               	movf	___lwtoft@c^(0+128),w
  6165  193C  00A0               	movwf	___ftpack@arg^(0+128)
  6166  193D  0829               	movf	(___lwtoft@c+1)^(0+128),w
  6167  193E  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  6168  193F  01A2               	clrf	(___ftpack@arg+2)^(0+128)
  6169  1940  308E               	movlw	142
  6170  1941  00AB               	movwf	??___lwtoft^(0+128)
  6171  1942  082B               	movf	??___lwtoft^(0+128),w
  6172  1943  00A3               	movwf	___ftpack@exp^(0+128)
  6173  1944  01A4               	clrf	___ftpack@sign^(0+128)
  6174  1945  319B  23C6         	fcall	___ftpack
  6175  1947  0021               	movlb	1	; select bank1
  6176  1948  0820               	movf	?___ftpack^(0+128),w
  6177  1949  00A8               	movwf	?___lwtoft^(0+128)
  6178  194A  0821               	movf	(?___ftpack+1)^(0+128),w
  6179  194B  00A9               	movwf	(?___lwtoft+1)^(0+128)
  6180  194C  0822               	movf	(?___ftpack+2)^(0+128),w
  6181  194D  00AA               	movwf	(?___lwtoft+2)^(0+128)
  6182  194E  0008               	return
  6183  194F                     __end_of___lwtoft:	
  6184                           
  6185                           	psect	text15
  6186  18F2                     __ptext15:	
  6187 ;; *************** function _Timer0_init *****************
  6188 ;; Defined at:
  6189 ;;		line 1119 in file "main.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;		None
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;		None
  6194 ;; Return value:  Size  Location     Type
  6195 ;;		None               void
  6196 ;; Registers used:
  6197 ;;		wreg, status,2, status,0
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;Total ram usage:        0 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    3
  6210 ;; This function calls:
  6211 ;;		Nothing
  6212 ;; This function is called by:
  6213 ;;		_main
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           
  6218                           ;psect for function _Timer0_init
  6219  18F2                     _Timer0_init:	
  6220                           
  6221                           ;main.c: 1121: TMR0=0;
  6222                           
  6223                           ;incstack = 0
  6224                           ; Regs used in _Timer0_init: [wreg+status,2+status,0]
  6225  18F2  0020               	movlb	0	; select bank0
  6226  18F3  0195               	clrf	21	;volatile
  6227                           
  6228                           ;main.c: 1122: OPTION_REGbits.PSA=0;
  6229  18F4  0021               	movlb	1	; select bank1
  6230  18F5  1195               	bcf	21,3	;volatile
  6231                           
  6232                           ;main.c: 1123: OPTION_REGbits.T0CS=0;
  6233  18F6  1295               	bcf	21,5	;volatile
  6234                           
  6235                           ;main.c: 1124: OPTION_REGbits.PS=5;
  6236  18F7  0815               	movf	21,w	;volatile
  6237  18F8  39F8               	andlw	-8
  6238  18F9  3805               	iorlw	5
  6239  18FA  0095               	movwf	21	;volatile
  6240                           
  6241                           ;main.c: 1125: INTCONbits.GIE=0;
  6242  18FB  138B               	bcf	11,7	;volatile
  6243                           
  6244                           ;main.c: 1126: INTCONbits.PEIE=0;
  6245  18FC  130B               	bcf	11,6	;volatile
  6246                           
  6247                           ;main.c: 1127: INTCONbits.T0IF=0;
  6248  18FD  110B               	bcf	11,2	;volatile
  6249                           
  6250                           ;main.c: 1133: TMR0=0x85;
  6251  18FE  3085               	movlw	133
  6252  18FF  0020               	movlb	0	; select bank0
  6253  1900  0095               	movwf	21	;volatile
  6254                           
  6255                           ;main.c: 1134: INTCONbits.T0IE=1;
  6256  1901  168B               	bsf	11,5	;volatile
  6257  1902  0008               	return
  6258  1903                     __end_of_Timer0_init:	
  6259                           
  6260                           	psect	text16
  6261  1CF1                     __ptext16:	
  6262 ;; *************** function _SCANENCODER2 *****************
  6263 ;; Defined at:
  6264 ;;		line 94 in file "ENCODER.C"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;		None
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  result          1    6[BANK1 ] unsigned char 
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  1    wreg      unsigned char 
  6271 ;; Registers used:
  6272 ;;		wreg, status,2, status,0, pclath, cstack
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6280 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6281 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;Total ram usage:        2 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; Hardware stack levels required when called:    4
  6285 ;; This function calls:
  6286 ;;		_enc2_port
  6287 ;; This function is called by:
  6288 ;;		_main
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           
  6293                           ;psect for function _SCANENCODER2
  6294  1CF1                     _SCANENCODER2:	
  6295                           
  6296                           ;ENCODER.C: 96: unsigned char result=0;
  6297                           
  6298                           ;incstack = 0
  6299                           ; Regs used in _SCANENCODER2: [wreg+status,2+status,0+pclath+cstack]
  6300  1CF1  0021               	movlb	1	; select bank1
  6301  1CF2  01A6               	clrf	SCANENCODER2@result^(0+128)
  6302                           
  6303                           ;ENCODER.C: 97: if(enc2_port() == 1)
  6304  1CF3  319A  22AA  319C   	fcall	_enc2_port
  6305  1CF6  3A01               	xorlw	1
  6306  1CF7  1D03               	skipz
  6307  1CF8  2D6C               	goto	l4295
  6308                           
  6309                           ;ENCODER.C: 98: {
  6310                           ;ENCODER.C: 99: if(firstpulse2==0 && secondpulse2==0)
  6311  1CF9  0022               	movlb	2	; select bank2
  6312  1CFA  08C0               	movf	_firstpulse2^(0+256),f
  6313  1CFB  1D03               	skipz
  6314  1CFC  2D1E               	goto	l4257
  6315  1CFD  08D5               	movf	_secondpulse2^(0+256),f
  6316  1CFE  1D03               	skipz
  6317  1CFF  2D1E               	goto	l4257
  6318                           
  6319                           ;ENCODER.C: 100: {
  6320                           ;ENCODER.C: 101: if(new2==0x02)
  6321  1D00  3002               	movlw	2
  6322  1D01  0020               	movlb	0	; select bank0
  6323  1D02  0656               	xorwf	_new2,w
  6324  1D03  0457               	iorwf	_new2+1,w
  6325  1D04  1D03               	skipz
  6326  1D05  2D11               	goto	l4247
  6327                           
  6328                           ;ENCODER.C: 102: {
  6329                           ;ENCODER.C: 103: firstpulse2=1;
  6330  1D06  0022               	movlb	2	; select bank2
  6331  1D07  01C0               	clrf	_firstpulse2^(0+256)
  6332  1D08  0AC0               	incf	_firstpulse2^(0+256),f
  6333                           
  6334                           ;ENCODER.C: 104: secondpulse2=0;
  6335  1D09  01D5               	clrf	_secondpulse2^(0+256)
  6336                           
  6337                           ;ENCODER.C: 105: plus222=1;
  6338  1D0A  01CC               	clrf	_plus222^(0+256)
  6339  1D0B  0ACC               	incf	_plus222^(0+256),f
  6340                           
  6341                           ;ENCODER.C: 106: result='$';
  6342  1D0C  3024               	movlw	36
  6343  1D0D  0021               	movlb	1	; select bank1
  6344  1D0E  00A5               	movwf	??_SCANENCODER2^(0+128)
  6345  1D0F  0825               	movf	??_SCANENCODER2^(0+128),w
  6346  1D10  00A6               	movwf	SCANENCODER2@result^(0+128)
  6347  1D11                     l4247:	
  6348                           
  6349                           ;ENCODER.C: 107: }
  6350                           ;ENCODER.C: 108: if(new2==0x01)
  6351  1D11  3001               	movlw	1
  6352  1D12  0020               	movlb	0	; select bank0
  6353  1D13  0656               	xorwf	_new2,w
  6354  1D14  0457               	iorwf	_new2+1,w
  6355  1D15  1D03               	skipz
  6356  1D16  2D6C               	goto	l4295
  6357                           
  6358                           ;ENCODER.C: 109: {
  6359                           ;ENCODER.C: 110: firstpulse2=1;
  6360  1D17  0022               	movlb	2	; select bank2
  6361  1D18  01C0               	clrf	_firstpulse2^(0+256)
  6362  1D19  0AC0               	incf	_firstpulse2^(0+256),f
  6363                           
  6364                           ;ENCODER.C: 111: secondpulse2=0;
  6365  1D1A  01D5               	clrf	_secondpulse2^(0+256)
  6366                           
  6367                           ;ENCODER.C: 112: minus222=1;
  6368  1D1B  01C6               	clrf	_minus222^(0+256)
  6369  1D1C  0AC6               	incf	_minus222^(0+256),f
  6370  1D1D  2D67               	goto	l4293
  6371  1D1E                     l4257:	
  6372                           ;ENCODER.C: 114: }
  6373                           ;ENCODER.C: 115: }
  6374                           
  6375                           ;ENCODER.C: 113: result='$';
  6376                           
  6377                           
  6378                           ;ENCODER.C: 116: else if(firstpulse2==1 && secondpulse2==0)
  6379  1D1E  0022               	movlb	2	; select bank2
  6380  1D1F  0840               	movf	_firstpulse2^(0+256),w
  6381  1D20  3A01               	xorlw	1
  6382  1D21  1D03               	skipz
  6383  1D22  2D32               	goto	l4267
  6384  1D23  08D5               	movf	_secondpulse2^(0+256),f
  6385  1D24  1D03               	skipz
  6386  1D25  2D32               	goto	l4267
  6387                           
  6388                           ;ENCODER.C: 117: {
  6389                           ;ENCODER.C: 118: if(new2==0x03)
  6390  1D26  3003               	movlw	3
  6391  1D27  0020               	movlb	0	; select bank0
  6392  1D28  0656               	xorwf	_new2,w
  6393  1D29  0457               	iorwf	_new2+1,w
  6394  1D2A  1D03               	skipz
  6395  1D2B  2D6C               	goto	l4295
  6396                           
  6397                           ;ENCODER.C: 119: {
  6398                           ;ENCODER.C: 120: firstpulse2=1;
  6399  1D2C  0022               	movlb	2	; select bank2
  6400  1D2D  01C0               	clrf	_firstpulse2^(0+256)
  6401  1D2E  0AC0               	incf	_firstpulse2^(0+256),f
  6402                           
  6403                           ;ENCODER.C: 121: secondpulse2=1;
  6404  1D2F  01D5               	clrf	_secondpulse2^(0+256)
  6405  1D30  0AD5               	incf	_secondpulse2^(0+256),f
  6406  1D31  2D67               	goto	l4293
  6407  1D32                     l4267:	
  6408                           ;ENCODER.C: 123: }
  6409                           ;ENCODER.C: 124: }
  6410                           
  6411                           ;ENCODER.C: 122: result='$';
  6412                           
  6413                           
  6414                           ;ENCODER.C: 125: else if(firstpulse2==1 && secondpulse2==1)
  6415  1D32  0022               	movlb	2	; select bank2
  6416  1D33  0840               	movf	_firstpulse2^(0+256),w
  6417  1D34  3A01               	xorlw	1
  6418  1D35  1D03               	skipz
  6419  1D36  2D63               	goto	l4291
  6420  1D37  0855               	movf	_secondpulse2^(0+256),w
  6421  1D38  3A01               	xorlw	1
  6422  1D39  1D03               	skipz
  6423  1D3A  2D63               	goto	l4291
  6424                           
  6425                           ;ENCODER.C: 126: {
  6426                           ;ENCODER.C: 127: if(new2==0x01 && plus222==1)
  6427  1D3B  3001               	movlw	1
  6428  1D3C  0020               	movlb	0	; select bank0
  6429  1D3D  0656               	xorwf	_new2,w
  6430  1D3E  0457               	iorwf	_new2+1,w
  6431  1D3F  1D03               	skipz
  6432  1D40  2D4D               	goto	l4279
  6433  1D41  0022               	movlb	2	; select bank2
  6434  1D42  084C               	movf	_plus222^(0+256),w
  6435  1D43  3A01               	xorlw	1
  6436  1D44  1D03               	skipz
  6437  1D45  2D4D               	goto	l4279
  6438                           
  6439                           ;ENCODER.C: 128: {
  6440                           ;ENCODER.C: 129: firstpulse2=0;
  6441  1D46  01C0               	clrf	_firstpulse2^(0+256)
  6442                           
  6443                           ;ENCODER.C: 130: plus222=0;
  6444  1D47  01CC               	clrf	_plus222^(0+256)
  6445                           
  6446                           ;ENCODER.C: 131: result='+';
  6447  1D48  302B               	movlw	43
  6448  1D49  0021               	movlb	1	; select bank1
  6449  1D4A  00A5               	movwf	??_SCANENCODER2^(0+128)
  6450  1D4B  0825               	movf	??_SCANENCODER2^(0+128),w
  6451  1D4C  00A6               	movwf	SCANENCODER2@result^(0+128)
  6452  1D4D                     l4279:	
  6453                           
  6454                           ;ENCODER.C: 132: }
  6455                           ;ENCODER.C: 133: if(new2==0x02 && minus222==1)
  6456  1D4D  3002               	movlw	2
  6457  1D4E  0020               	movlb	0	; select bank0
  6458  1D4F  0656               	xorwf	_new2,w
  6459  1D50  0457               	iorwf	_new2+1,w
  6460  1D51  1D03               	skipz
  6461  1D52  2D5F               	goto	l4287
  6462  1D53  0022               	movlb	2	; select bank2
  6463  1D54  0846               	movf	_minus222^(0+256),w
  6464  1D55  3A01               	xorlw	1
  6465  1D56  1D03               	skipz
  6466  1D57  2D5F               	goto	l4287
  6467                           
  6468                           ;ENCODER.C: 134: {
  6469                           ;ENCODER.C: 135: firstpulse2=0;
  6470  1D58  01C0               	clrf	_firstpulse2^(0+256)
  6471                           
  6472                           ;ENCODER.C: 136: minus222=0;
  6473  1D59  01C6               	clrf	_minus222^(0+256)
  6474                           
  6475                           ;ENCODER.C: 137: result='-';
  6476  1D5A  302D               	movlw	45
  6477  1D5B  0021               	movlb	1	; select bank1
  6478  1D5C  00A5               	movwf	??_SCANENCODER2^(0+128)
  6479  1D5D  0825               	movf	??_SCANENCODER2^(0+128),w
  6480  1D5E  00A6               	movwf	SCANENCODER2@result^(0+128)
  6481  1D5F                     l4287:	
  6482                           
  6483                           ;ENCODER.C: 138: }
  6484                           ;ENCODER.C: 139: firstpulse2=0;
  6485  1D5F  0022               	movlb	2	; select bank2
  6486  1D60  01C0               	clrf	_firstpulse2^(0+256)
  6487                           
  6488                           ;ENCODER.C: 140: secondpulse2=0;
  6489  1D61  01D5               	clrf	_secondpulse2^(0+256)
  6490                           
  6491                           ;ENCODER.C: 141: }
  6492  1D62  2D6C               	goto	l4295
  6493  1D63                     l4291:	
  6494                           
  6495                           ;ENCODER.C: 142: else
  6496                           ;ENCODER.C: 143: {
  6497                           ;ENCODER.C: 144: plus222=0;
  6498  1D63  01CC               	clrf	_plus222^(0+256)
  6499                           
  6500                           ;ENCODER.C: 145: minus222=0;
  6501  1D64  01C6               	clrf	_minus222^(0+256)
  6502                           
  6503                           ;ENCODER.C: 146: firstpulse2=0;
  6504  1D65  01C0               	clrf	_firstpulse2^(0+256)
  6505                           
  6506                           ;ENCODER.C: 147: secondpulse2=0;
  6507  1D66  01D5               	clrf	_secondpulse2^(0+256)
  6508  1D67                     l4293:	
  6509                           
  6510                           ;ENCODER.C: 148: result='$';
  6511  1D67  3024               	movlw	36
  6512  1D68  0021               	movlb	1	; select bank1
  6513  1D69  00A5               	movwf	??_SCANENCODER2^(0+128)
  6514  1D6A  0825               	movf	??_SCANENCODER2^(0+128),w
  6515  1D6B  00A6               	movwf	SCANENCODER2@result^(0+128)
  6516  1D6C                     l4295:	
  6517                           
  6518                           ;ENCODER.C: 149: }
  6519                           ;ENCODER.C: 150: }
  6520                           ;ENCODER.C: 151: return(result);
  6521  1D6C  0021               	movlb	1	; select bank1
  6522  1D6D  0826               	movf	SCANENCODER2@result^(0+128),w
  6523  1D6E  0008               	return
  6524  1D6F                     __end_of_SCANENCODER2:	
  6525                           
  6526                           	psect	text17
  6527  1AAA                     __ptext17:	
  6528 ;; *************** function _enc2_port *****************
  6529 ;; Defined at:
  6530 ;;		line 154 in file "ENCODER.C"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;  portvalue       2    3[BANK1 ] unsigned int 
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      unsigned char 
  6537 ;; Registers used:
  6538 ;;		wreg, status,2, status,0
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6546 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6547 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6548 ;;Total ram usage:        5 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    3
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_SCANENCODER2
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           
  6559                           ;psect for function _enc2_port
  6560  1AAA                     _enc2_port:	
  6561                           
  6562                           ;ENCODER.C: 156: unsigned int portvalue=0x0000;
  6563                           
  6564                           ;incstack = 0
  6565                           ; Regs used in _enc2_port: [wreg+status,2+status,0]
  6566  1AAA  0021               	movlb	1	; select bank1
  6567  1AAB  01A3               	clrf	enc2_port@portvalue^(0+128)
  6568  1AAC  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6569                           
  6570                           ;ENCODER.C: 157: portvalue=0x0000;
  6571  1AAD  01A3               	clrf	enc2_port@portvalue^(0+128)
  6572  1AAE  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6573                           
  6574                           ;ENCODER.C: 158: portvalue=PORTAbits.RA2;
  6575  1AAF  0020               	movlb	0	; select bank0
  6576  1AB0  0C0C               	rrf	12,w	;volatile
  6577  1AB1  0C89               	rrf	9,f
  6578  1AB2  3901               	andlw	1
  6579  1AB3  0021               	movlb	1	; select bank1
  6580  1AB4  00A0               	movwf	??_enc2_port^(0+128)
  6581  1AB5  01A1               	clrf	(??_enc2_port^(0+128)+1)
  6582  1AB6  0820               	movf	??_enc2_port^(0+128),w
  6583  1AB7  00A3               	movwf	enc2_port@portvalue^(0+128)
  6584  1AB8  0821               	movf	(??_enc2_port+1)^(0+128),w
  6585  1AB9  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6586                           
  6587                           ;ENCODER.C: 159: portvalue=portvalue<<1;
  6588  1ABA  3523               	lslf	enc2_port@portvalue^(0+128),w
  6589  1ABB  00A3               	movwf	enc2_port@portvalue^(0+128)
  6590  1ABC  0D24               	rlf	(enc2_port@portvalue+1)^(0+128),w
  6591  1ABD  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6592                           
  6593                           ;ENCODER.C: 160: portvalue=portvalue|PORTAbits.RA1;
  6594  1ABE  0020               	movlb	0	; select bank0
  6595  1ABF  0C0C               	rrf	12,w	;volatile
  6596  1AC0  3901               	andlw	1
  6597  1AC1  0021               	movlb	1	; select bank1
  6598  1AC2  00A0               	movwf	??_enc2_port^(0+128)
  6599  1AC3  0823               	movf	enc2_port@portvalue^(0+128),w
  6600  1AC4  0420               	iorwf	??_enc2_port^(0+128),w
  6601  1AC5  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6602  1AC6  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6603  1AC7  00A2               	movwf	(??_enc2_port+2)^(0+128)
  6604  1AC8  0821               	movf	(??_enc2_port+1)^(0+128),w
  6605  1AC9  00A3               	movwf	enc2_port@portvalue^(0+128)
  6606  1ACA  0822               	movf	(??_enc2_port+2)^(0+128),w
  6607  1ACB  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6608                           
  6609                           ;ENCODER.C: 161: portvalue=(portvalue & 0X0003);
  6610  1ACC  3003               	movlw	3
  6611  1ACD  0523               	andwf	enc2_port@portvalue^(0+128),w
  6612  1ACE  00A3               	movwf	enc2_port@portvalue^(0+128)
  6613  1ACF  3000               	movlw	0
  6614  1AD0  0524               	andwf	(enc2_port@portvalue+1)^(0+128),w
  6615  1AD1  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6616                           
  6617                           ;ENCODER.C: 162: new2=portvalue;
  6618  1AD2  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6619  1AD3  0020               	movlb	0	; select bank0
  6620  1AD4  01D7               	clrf	_new2+1
  6621  1AD5  07D7               	addwf	_new2+1,f
  6622  1AD6  0021               	movlb	1	; select bank1
  6623  1AD7  0823               	movf	enc2_port@portvalue^(0+128),w
  6624  1AD8  0020               	movlb	0	; select bank0
  6625  1AD9  01D6               	clrf	_new2
  6626  1ADA  07D6               	addwf	_new2,f
  6627                           
  6628                           ;ENCODER.C: 163: temp=new2;
  6629  1ADB  0856               	movf	_new2,w
  6630  1ADC  0021               	movlb	1	; select bank1
  6631  1ADD  00A0               	movwf	??_enc2_port^(0+128)
  6632  1ADE  0820               	movf	??_enc2_port^(0+128),w
  6633  1ADF  0020               	movlb	0	; select bank0
  6634  1AE0  00E5               	movwf	_temp
  6635                           
  6636                           ;ENCODER.C: 164: if((temp ^ old2) !=0)
  6637  1AE1  0023               	movlb	3	; select bank3
  6638  1AE2  0840               	movf	_old2^(0+384),w
  6639  1AE3  0020               	movlb	0	; select bank0
  6640  1AE4  0665               	xorwf	_temp,w
  6641  1AE5  0021               	movlb	1	; select bank1
  6642  1AE6  00A0               	movwf	??_enc2_port^(0+128)
  6643  1AE7  0023               	movlb	3	; select bank3
  6644  1AE8  0841               	movf	(_old2+1)^(0+384),w
  6645  1AE9  0021               	movlb	1	; select bank1
  6646  1AEA  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6647  1AEB  0821               	movf	(??_enc2_port+1)^(0+128),w
  6648  1AEC  0420               	iorwf	??_enc2_port^(0+128),w
  6649  1AED  1903               	skipnz
  6650  1AEE  2AFB               	goto	l3667
  6651                           
  6652                           ;ENCODER.C: 165: {
  6653                           ;ENCODER.C: 166: old2=new2;
  6654  1AEF  0020               	movlb	0	; select bank0
  6655  1AF0  0857               	movf	_new2+1,w
  6656  1AF1  0023               	movlb	3	; select bank3
  6657  1AF2  01C1               	clrf	(_old2+1)^(0+384)
  6658  1AF3  07C1               	addwf	(_old2+1)^(0+384),f
  6659  1AF4  0020               	movlb	0	; select bank0
  6660  1AF5  0856               	movf	_new2,w
  6661  1AF6  0023               	movlb	3	; select bank3
  6662  1AF7  01C0               	clrf	_old2^(0+384)
  6663  1AF8  07C0               	addwf	_old2^(0+384),f
  6664                           
  6665                           ;ENCODER.C: 167: return 1;
  6666  1AF9  3001               	movlw	1
  6667                           
  6668                           ;ENCODER.C: 168: }
  6669  1AFA  0008               	return
  6670  1AFB                     l3667:	
  6671                           
  6672                           ;ENCODER.C: 169: else
  6673                           ;ENCODER.C: 170: {
  6674                           ;ENCODER.C: 171: old2=new2;
  6675  1AFB  0020               	movlb	0	; select bank0
  6676  1AFC  0857               	movf	_new2+1,w
  6677  1AFD  0023               	movlb	3	; select bank3
  6678  1AFE  01C1               	clrf	(_old2+1)^(0+384)
  6679  1AFF  07C1               	addwf	(_old2+1)^(0+384),f
  6680  1B00  0020               	movlb	0	; select bank0
  6681  1B01  0856               	movf	_new2,w
  6682  1B02  0023               	movlb	3	; select bank3
  6683  1B03  01C0               	clrf	_old2^(0+384)
  6684  1B04  07C0               	addwf	_old2^(0+384),f
  6685                           
  6686                           ;ENCODER.C: 172: return 0;
  6687  1B05  3000               	movlw	0
  6688  1B06  0008               	return
  6689  1B07                     __end_of_enc2_port:	
  6690                           
  6691                           	psect	text18
  6692  1D6F                     __ptext18:	
  6693 ;; *************** function _SCANENCODER1 *****************
  6694 ;; Defined at:
  6695 ;;		line 12 in file "ENCODER.C"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;		None
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  result          1    7[BANK1 ] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      unsigned char 
  6702 ;; Registers used:
  6703 ;;		wreg, status,2, status,0, pclath, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;Total ram usage:        2 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:    4
  6716 ;; This function calls:
  6717 ;;		_enc1_port
  6718 ;; This function is called by:
  6719 ;;		_main
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           
  6724                           ;psect for function _SCANENCODER1
  6725  1D6F                     _SCANENCODER1:	
  6726                           
  6727                           ;ENCODER.C: 14: unsigned char result=0;
  6728                           
  6729                           ;incstack = 0
  6730                           ; Regs used in _SCANENCODER1: [wreg+status,2+status,0+pclath+cstack]
  6731  1D6F  0021               	movlb	1	; select bank1
  6732  1D70  01A7               	clrf	SCANENCODER1@result^(0+128)
  6733                           
  6734                           ;ENCODER.C: 15: if(enc1_port() == 1)
  6735  1D71  319B  2307  319D   	fcall	_enc1_port
  6736  1D74  3A01               	xorlw	1
  6737  1D75  1D03               	skipz
  6738  1D76  2DEB               	goto	l4225
  6739                           
  6740                           ;ENCODER.C: 16: {
  6741                           ;ENCODER.C: 17: if(firstpulse1==0 && secondpulse1==0)
  6742  1D77  0022               	movlb	2	; select bank2
  6743  1D78  08BF               	movf	_firstpulse1^(0+256),f
  6744  1D79  1D03               	skipz
  6745  1D7A  2D9C               	goto	l4185
  6746  1D7B  08D4               	movf	_secondpulse1^(0+256),f
  6747  1D7C  1D03               	skipz
  6748  1D7D  2D9C               	goto	l4185
  6749                           
  6750                           ;ENCODER.C: 18: {
  6751                           ;ENCODER.C: 19: if(new1==0x02)
  6752  1D7E  3002               	movlw	2
  6753  1D7F  0020               	movlb	0	; select bank0
  6754  1D80  0654               	xorwf	_new1,w
  6755  1D81  0455               	iorwf	_new1+1,w
  6756  1D82  1D03               	skipz
  6757  1D83  2D8F               	goto	l4175
  6758                           
  6759                           ;ENCODER.C: 20: {
  6760                           ;ENCODER.C: 21: firstpulse1=1;
  6761  1D84  0022               	movlb	2	; select bank2
  6762  1D85  01BF               	clrf	_firstpulse1^(0+256)
  6763  1D86  0ABF               	incf	_firstpulse1^(0+256),f
  6764                           
  6765                           ;ENCODER.C: 22: secondpulse1=0;
  6766  1D87  01D4               	clrf	_secondpulse1^(0+256)
  6767                           
  6768                           ;ENCODER.C: 23: plus111=1;
  6769  1D88  01CB               	clrf	_plus111^(0+256)
  6770  1D89  0ACB               	incf	_plus111^(0+256),f
  6771                           
  6772                           ;ENCODER.C: 24: result='$';
  6773  1D8A  3024               	movlw	36
  6774  1D8B  0021               	movlb	1	; select bank1
  6775  1D8C  00A6               	movwf	??_SCANENCODER1^(0+128)
  6776  1D8D  0826               	movf	??_SCANENCODER1^(0+128),w
  6777  1D8E  00A7               	movwf	SCANENCODER1@result^(0+128)
  6778  1D8F                     l4175:	
  6779                           
  6780                           ;ENCODER.C: 25: }
  6781                           ;ENCODER.C: 26: if(new1==0x01)
  6782  1D8F  3001               	movlw	1
  6783  1D90  0020               	movlb	0	; select bank0
  6784  1D91  0654               	xorwf	_new1,w
  6785  1D92  0455               	iorwf	_new1+1,w
  6786  1D93  1D03               	skipz
  6787  1D94  2DEB               	goto	l4225
  6788                           
  6789                           ;ENCODER.C: 27: {
  6790                           ;ENCODER.C: 28: firstpulse1=1;
  6791  1D95  0022               	movlb	2	; select bank2
  6792  1D96  01BF               	clrf	_firstpulse1^(0+256)
  6793  1D97  0ABF               	incf	_firstpulse1^(0+256),f
  6794                           
  6795                           ;ENCODER.C: 29: secondpulse1=0;
  6796  1D98  01D4               	clrf	_secondpulse1^(0+256)
  6797                           
  6798                           ;ENCODER.C: 30: minus111=1;
  6799  1D99  01C5               	clrf	_minus111^(0+256)
  6800  1D9A  0AC5               	incf	_minus111^(0+256),f
  6801  1D9B  2DE6               	goto	l4223
  6802  1D9C                     l4185:	
  6803                           ;ENCODER.C: 32: }
  6804                           ;ENCODER.C: 33: }
  6805                           
  6806                           ;ENCODER.C: 31: result='$';
  6807                           
  6808                           
  6809                           ;ENCODER.C: 34: else if(firstpulse1==1 && secondpulse1==0)
  6810  1D9C  0022               	movlb	2	; select bank2
  6811  1D9D  083F               	movf	_firstpulse1^(0+256),w
  6812  1D9E  3A01               	xorlw	1
  6813  1D9F  1D03               	skipz
  6814  1DA0  2DB0               	goto	l4195
  6815  1DA1  08D4               	movf	_secondpulse1^(0+256),f
  6816  1DA2  1D03               	skipz
  6817  1DA3  2DB0               	goto	l4195
  6818                           
  6819                           ;ENCODER.C: 35: {
  6820                           ;ENCODER.C: 36: if(new1==0x03)
  6821  1DA4  3003               	movlw	3
  6822  1DA5  0020               	movlb	0	; select bank0
  6823  1DA6  0654               	xorwf	_new1,w
  6824  1DA7  0455               	iorwf	_new1+1,w
  6825  1DA8  1D03               	skipz
  6826  1DA9  2DEB               	goto	l4225
  6827                           
  6828                           ;ENCODER.C: 37: {
  6829                           ;ENCODER.C: 38: firstpulse1=1;
  6830  1DAA  0022               	movlb	2	; select bank2
  6831  1DAB  01BF               	clrf	_firstpulse1^(0+256)
  6832  1DAC  0ABF               	incf	_firstpulse1^(0+256),f
  6833                           
  6834                           ;ENCODER.C: 39: secondpulse1=1;
  6835  1DAD  01D4               	clrf	_secondpulse1^(0+256)
  6836  1DAE  0AD4               	incf	_secondpulse1^(0+256),f
  6837  1DAF  2DE6               	goto	l4223
  6838  1DB0                     l4195:	
  6839                           ;ENCODER.C: 41: }
  6840                           ;ENCODER.C: 42: }
  6841                           
  6842                           ;ENCODER.C: 40: result='$';
  6843                           
  6844                           
  6845                           ;ENCODER.C: 43: else if(firstpulse1==1 && secondpulse1==1)
  6846  1DB0  0022               	movlb	2	; select bank2
  6847  1DB1  083F               	movf	_firstpulse1^(0+256),w
  6848  1DB2  3A01               	xorlw	1
  6849  1DB3  1D03               	skipz
  6850  1DB4  2DE2               	goto	l4221
  6851  1DB5  0854               	movf	_secondpulse1^(0+256),w
  6852  1DB6  3A01               	xorlw	1
  6853  1DB7  1D03               	skipz
  6854  1DB8  2DE2               	goto	l4221
  6855                           
  6856                           ;ENCODER.C: 44: {
  6857                           ;ENCODER.C: 45: if(new1==0x01 && plus111==1)
  6858  1DB9  3001               	movlw	1
  6859  1DBA  0020               	movlb	0	; select bank0
  6860  1DBB  0654               	xorwf	_new1,w
  6861  1DBC  0455               	iorwf	_new1+1,w
  6862  1DBD  1D03               	skipz
  6863  1DBE  2DCC               	goto	l4209
  6864  1DBF  0022               	movlb	2	; select bank2
  6865  1DC0  084B               	movf	_plus111^(0+256),w
  6866  1DC1  3A01               	xorlw	1
  6867  1DC2  1D03               	skipz
  6868  1DC3  2DCC               	goto	l4209
  6869                           
  6870                           ;ENCODER.C: 46: {
  6871                           ;ENCODER.C: 47: firstpulse1=1;
  6872  1DC4  01BF               	clrf	_firstpulse1^(0+256)
  6873  1DC5  0ABF               	incf	_firstpulse1^(0+256),f
  6874                           
  6875                           ;ENCODER.C: 48: plus111=0;
  6876  1DC6  01CB               	clrf	_plus111^(0+256)
  6877                           
  6878                           ;ENCODER.C: 49: result='+';
  6879  1DC7  302B               	movlw	43
  6880  1DC8  0021               	movlb	1	; select bank1
  6881  1DC9  00A6               	movwf	??_SCANENCODER1^(0+128)
  6882  1DCA  0826               	movf	??_SCANENCODER1^(0+128),w
  6883  1DCB  00A7               	movwf	SCANENCODER1@result^(0+128)
  6884  1DCC                     l4209:	
  6885                           
  6886                           ;ENCODER.C: 50: }
  6887                           ;ENCODER.C: 51: if(new1==0x02 && minus111==1)
  6888  1DCC  3002               	movlw	2
  6889  1DCD  0020               	movlb	0	; select bank0
  6890  1DCE  0654               	xorwf	_new1,w
  6891  1DCF  0455               	iorwf	_new1+1,w
  6892  1DD0  1D03               	skipz
  6893  1DD1  2DDE               	goto	l4217
  6894  1DD2  0022               	movlb	2	; select bank2
  6895  1DD3  0845               	movf	_minus111^(0+256),w
  6896  1DD4  3A01               	xorlw	1
  6897  1DD5  1D03               	skipz
  6898  1DD6  2DDE               	goto	l4217
  6899                           
  6900                           ;ENCODER.C: 52: {
  6901                           ;ENCODER.C: 53: firstpulse1=0;
  6902  1DD7  01BF               	clrf	_firstpulse1^(0+256)
  6903                           
  6904                           ;ENCODER.C: 54: minus111=0;
  6905  1DD8  01C5               	clrf	_minus111^(0+256)
  6906                           
  6907                           ;ENCODER.C: 55: result='-';
  6908  1DD9  302D               	movlw	45
  6909  1DDA  0021               	movlb	1	; select bank1
  6910  1DDB  00A6               	movwf	??_SCANENCODER1^(0+128)
  6911  1DDC  0826               	movf	??_SCANENCODER1^(0+128),w
  6912  1DDD  00A7               	movwf	SCANENCODER1@result^(0+128)
  6913  1DDE                     l4217:	
  6914                           
  6915                           ;ENCODER.C: 56: }
  6916                           ;ENCODER.C: 57: firstpulse1=0;
  6917  1DDE  0022               	movlb	2	; select bank2
  6918  1DDF  01BF               	clrf	_firstpulse1^(0+256)
  6919                           
  6920                           ;ENCODER.C: 58: secondpulse1=0;
  6921  1DE0  01D4               	clrf	_secondpulse1^(0+256)
  6922                           
  6923                           ;ENCODER.C: 59: }
  6924  1DE1  2DEB               	goto	l4225
  6925  1DE2                     l4221:	
  6926                           
  6927                           ;ENCODER.C: 60: else
  6928                           ;ENCODER.C: 61: {
  6929                           ;ENCODER.C: 62: plus111=0;
  6930  1DE2  01CB               	clrf	_plus111^(0+256)
  6931                           
  6932                           ;ENCODER.C: 63: minus111=0;
  6933  1DE3  01C5               	clrf	_minus111^(0+256)
  6934                           
  6935                           ;ENCODER.C: 64: firstpulse1=0;
  6936  1DE4  01BF               	clrf	_firstpulse1^(0+256)
  6937                           
  6938                           ;ENCODER.C: 65: secondpulse1=0;
  6939  1DE5  01D4               	clrf	_secondpulse1^(0+256)
  6940  1DE6                     l4223:	
  6941                           
  6942                           ;ENCODER.C: 66: result='$';
  6943  1DE6  3024               	movlw	36
  6944  1DE7  0021               	movlb	1	; select bank1
  6945  1DE8  00A6               	movwf	??_SCANENCODER1^(0+128)
  6946  1DE9  0826               	movf	??_SCANENCODER1^(0+128),w
  6947  1DEA  00A7               	movwf	SCANENCODER1@result^(0+128)
  6948  1DEB                     l4225:	
  6949                           
  6950                           ;ENCODER.C: 67: }
  6951                           ;ENCODER.C: 68: }
  6952                           ;ENCODER.C: 69: return(result);
  6953  1DEB  0021               	movlb	1	; select bank1
  6954  1DEC  0827               	movf	SCANENCODER1@result^(0+128),w
  6955  1DED  0008               	return
  6956  1DEE                     __end_of_SCANENCODER1:	
  6957                           
  6958                           	psect	text19
  6959  1B07                     __ptext19:	
  6960 ;; *************** function _enc1_port *****************
  6961 ;; Defined at:
  6962 ;;		line 72 in file "ENCODER.C"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;		None
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  portvalue       2    4[BANK1 ] unsigned int 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      unsigned char 
  6969 ;; Registers used:
  6970 ;;		wreg, status,2, status,0
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6977 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6979 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6980 ;;Total ram usage:        6 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; Hardware stack levels required when called:    3
  6983 ;; This function calls:
  6984 ;;		Nothing
  6985 ;; This function is called by:
  6986 ;;		_SCANENCODER1
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           
  6991                           ;psect for function _enc1_port
  6992  1B07                     _enc1_port:	
  6993                           
  6994                           ;ENCODER.C: 74: unsigned int portvalue=0x0000;
  6995                           
  6996                           ;incstack = 0
  6997                           ; Regs used in _enc1_port: [wreg+status,2+status,0]
  6998  1B07  0021               	movlb	1	; select bank1
  6999  1B08  01A4               	clrf	enc1_port@portvalue^(0+128)
  7000  1B09  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  7001                           
  7002                           ;ENCODER.C: 75: portvalue=0x0000;
  7003  1B0A  01A4               	clrf	enc1_port@portvalue^(0+128)
  7004  1B0B  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  7005                           
  7006                           ;ENCODER.C: 76: portvalue=PORTAbits.RA4;
  7007  1B0C  0020               	movlb	0	; select bank0
  7008  1B0D  0E0C               	swapf	12,w	;volatile
  7009  1B0E  3901               	andlw	1
  7010  1B0F  0021               	movlb	1	; select bank1
  7011  1B10  00A0               	movwf	??_enc1_port^(0+128)
  7012  1B11  01A1               	clrf	(??_enc1_port^(0+128)+1)
  7013  1B12  0820               	movf	??_enc1_port^(0+128),w
  7014  1B13  00A4               	movwf	enc1_port@portvalue^(0+128)
  7015  1B14  0821               	movf	(??_enc1_port+1)^(0+128),w
  7016  1B15  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7017                           
  7018                           ;ENCODER.C: 77: portvalue=portvalue<<1;
  7019  1B16  3524               	lslf	enc1_port@portvalue^(0+128),w
  7020  1B17  00A4               	movwf	enc1_port@portvalue^(0+128)
  7021  1B18  0D25               	rlf	(enc1_port@portvalue+1)^(0+128),w
  7022  1B19  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7023                           
  7024                           ;ENCODER.C: 78: portvalue=portvalue|PORTAbits.RA3;
  7025  1B1A  0020               	movlb	0	; select bank0
  7026  1B1B  0C0C               	rrf	12,w	;volatile
  7027  1B1C  0021               	movlb	1	; select bank1
  7028  1B1D  00A0               	movwf	??_enc1_port^(0+128)
  7029  1B1E  0CA0               	rrf	??_enc1_port^(0+128),f
  7030  1B1F  0C20               	rrf	??_enc1_port^(0+128),w
  7031  1B20  3901               	andlw	1
  7032  1B21  00A1               	movwf	(??_enc1_port+1)^(0+128)
  7033  1B22  0824               	movf	enc1_port@portvalue^(0+128),w
  7034  1B23  0421               	iorwf	(??_enc1_port+1)^(0+128),w
  7035  1B24  00A2               	movwf	(??_enc1_port+2)^(0+128)
  7036  1B25  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  7037  1B26  00A3               	movwf	(??_enc1_port+3)^(0+128)
  7038  1B27  0822               	movf	(??_enc1_port+2)^(0+128),w
  7039  1B28  00A4               	movwf	enc1_port@portvalue^(0+128)
  7040  1B29  0823               	movf	(??_enc1_port+3)^(0+128),w
  7041  1B2A  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7042                           
  7043                           ;ENCODER.C: 79: portvalue=(portvalue & 0X0003);
  7044  1B2B  3003               	movlw	3
  7045  1B2C  0524               	andwf	enc1_port@portvalue^(0+128),w
  7046  1B2D  00A4               	movwf	enc1_port@portvalue^(0+128)
  7047  1B2E  3000               	movlw	0
  7048  1B2F  0525               	andwf	(enc1_port@portvalue+1)^(0+128),w
  7049  1B30  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7050                           
  7051                           ;ENCODER.C: 80: new1=portvalue;
  7052  1B31  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  7053  1B32  0020               	movlb	0	; select bank0
  7054  1B33  01D5               	clrf	_new1+1
  7055  1B34  07D5               	addwf	_new1+1,f
  7056  1B35  0021               	movlb	1	; select bank1
  7057  1B36  0824               	movf	enc1_port@portvalue^(0+128),w
  7058  1B37  0020               	movlb	0	; select bank0
  7059  1B38  01D4               	clrf	_new1
  7060  1B39  07D4               	addwf	_new1,f
  7061                           
  7062                           ;ENCODER.C: 81: temp=new1;
  7063  1B3A  0854               	movf	_new1,w
  7064  1B3B  0021               	movlb	1	; select bank1
  7065  1B3C  00A0               	movwf	??_enc1_port^(0+128)
  7066  1B3D  0820               	movf	??_enc1_port^(0+128),w
  7067  1B3E  0020               	movlb	0	; select bank0
  7068  1B3F  00E5               	movwf	_temp
  7069                           
  7070                           ;ENCODER.C: 82: if((temp ^ old1) !=0)
  7071  1B40  0023               	movlb	3	; select bank3
  7072  1B41  083E               	movf	_old1^(0+384),w
  7073  1B42  0020               	movlb	0	; select bank0
  7074  1B43  0665               	xorwf	_temp,w
  7075  1B44  0021               	movlb	1	; select bank1
  7076  1B45  00A0               	movwf	??_enc1_port^(0+128)
  7077  1B46  0023               	movlb	3	; select bank3
  7078  1B47  083F               	movf	(_old1+1)^(0+384),w
  7079  1B48  0021               	movlb	1	; select bank1
  7080  1B49  00A1               	movwf	(??_enc1_port+1)^(0+128)
  7081  1B4A  0821               	movf	(??_enc1_port+1)^(0+128),w
  7082  1B4B  0420               	iorwf	??_enc1_port^(0+128),w
  7083  1B4C  1903               	skipnz
  7084  1B4D  2B5A               	goto	l3637
  7085                           
  7086                           ;ENCODER.C: 83: {
  7087                           ;ENCODER.C: 84: old1=new1;
  7088  1B4E  0020               	movlb	0	; select bank0
  7089  1B4F  0855               	movf	_new1+1,w
  7090  1B50  0023               	movlb	3	; select bank3
  7091  1B51  01BF               	clrf	(_old1+1)^(0+384)
  7092  1B52  07BF               	addwf	(_old1+1)^(0+384),f
  7093  1B53  0020               	movlb	0	; select bank0
  7094  1B54  0854               	movf	_new1,w
  7095  1B55  0023               	movlb	3	; select bank3
  7096  1B56  01BE               	clrf	_old1^(0+384)
  7097  1B57  07BE               	addwf	_old1^(0+384),f
  7098                           
  7099                           ;ENCODER.C: 85: return 1;
  7100  1B58  3001               	movlw	1
  7101                           
  7102                           ;ENCODER.C: 86: }
  7103  1B59  0008               	return
  7104  1B5A                     l3637:	
  7105                           
  7106                           ;ENCODER.C: 87: else
  7107                           ;ENCODER.C: 88: {
  7108                           ;ENCODER.C: 89: old1=new1;
  7109  1B5A  0020               	movlb	0	; select bank0
  7110  1B5B  0855               	movf	_new1+1,w
  7111  1B5C  0023               	movlb	3	; select bank3
  7112  1B5D  01BF               	clrf	(_old1+1)^(0+384)
  7113  1B5E  07BF               	addwf	(_old1+1)^(0+384),f
  7114  1B5F  0020               	movlb	0	; select bank0
  7115  1B60  0854               	movf	_new1,w
  7116  1B61  0023               	movlb	3	; select bank3
  7117  1B62  01BE               	clrf	_old1^(0+384)
  7118  1B63  07BE               	addwf	_old1^(0+384),f
  7119                           
  7120                           ;ENCODER.C: 90: return 0;
  7121  1B64  3000               	movlw	0
  7122  1B65  0008               	return
  7123  1B66                     __end_of_enc1_port:	
  7124                           
  7125                           	psect	text20
  7126  197A                     __ptext20:	
  7127 ;; *************** function _PWM_init *****************
  7128 ;; Defined at:
  7129 ;;		line 1137 in file "main.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;		None
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;		None
  7134 ;; Return value:  Size  Location     Type
  7135 ;;		None               void
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, status,0
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7147 ;;Total ram usage:        0 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; Hardware stack levels required when called:    3
  7150 ;; This function calls:
  7151 ;;		Nothing
  7152 ;; This function is called by:
  7153 ;;		_main
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           
  7158                           ;psect for function _PWM_init
  7159  197A                     _PWM_init:	
  7160                           
  7161                           ;main.c: 1140: CCP1CONbits.CCP1M=13;
  7162                           
  7163                           ;incstack = 0
  7164                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
  7165  197A  0025               	movlb	5	; select bank5
  7166  197B  0813               	movf	19,w	;volatile
  7167  197C  39F0               	andlw	-16
  7168  197D  380D               	iorlw	13
  7169  197E  0093               	movwf	19	;volatile
  7170                           
  7171                           ;main.c: 1141: CCP1CONbits.DC1B=0;
  7172  197F  30CF               	movlw	-49
  7173  1980  0593               	andwf	19,f	;volatile
  7174                           
  7175                           ;main.c: 1142: CCPR1L=0;
  7176  1981  0191               	clrf	17	;volatile
  7177                           
  7178                           ;main.c: 1143: TRISCbits.TRISC2=0;
  7179  1982  0021               	movlb	1	; select bank1
  7180  1983  110E               	bcf	14,2	;volatile
  7181                           
  7182                           ;main.c: 1144: PR2=0xC7;
  7183  1984  30C7               	movlw	199
  7184  1985  0020               	movlb	0	; select bank0
  7185  1986  009B               	movwf	27	;volatile
  7186                           
  7187                           ;main.c: 1145: T2CONbits.T2CKPS=1;
  7188  1987  081C               	movf	28,w	;volatile
  7189  1988  39FC               	andlw	-4
  7190  1989  3801               	iorlw	1
  7191  198A  009C               	movwf	28	;volatile
  7192                           
  7193                           ;main.c: 1146: T2CONbits.T2OUTPS=0;
  7194  198B  3087               	movlw	-121
  7195  198C  059C               	andwf	28,f	;volatile
  7196                           
  7197                           ;main.c: 1147: PIR1bits.TMR2IF=0;
  7198  198D  1091               	bcf	17,1	;volatile
  7199                           
  7200                           ;main.c: 1148: PIE1bits.TMR2IE=1;
  7201  198E  0021               	movlb	1	; select bank1
  7202  198F  1491               	bsf	17,1	;volatile
  7203                           
  7204                           ;main.c: 1149: T2CONbits.TMR2ON=1;
  7205  1990  0020               	movlb	0	; select bank0
  7206  1991  151C               	bsf	28,2	;volatile
  7207  1992  0008               	return
  7208  1993                     __end_of_PWM_init:	
  7209                           
  7210                           	psect	text21
  7211  07D6                     __ptext21:	
  7212 ;; *************** function _Delayms *****************
  7213 ;; Defined at:
  7214 ;;		line 201 in file "DISPLAY.C"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  delay           2    0[BANK1 ] unsigned int 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  yyy             2    4[BANK1 ] unsigned int 
  7219 ;;  xxx             2    2[BANK1 ] unsigned int 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;		None               void
  7222 ;; Registers used:
  7223 ;;		wreg, status,2
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7229 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7230 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;Total ram usage:        6 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    3
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_main
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           
  7244                           ;psect for function _Delayms
  7245  07D6                     _Delayms:	
  7246                           
  7247                           ;DISPLAY.C: 204: unsigned int yyy=0,xxx=0;
  7248                           
  7249                           ;incstack = 0
  7250                           ; Regs used in _Delayms: [wreg+status,2]
  7251  07D6  0021               	movlb	1	; select bank1
  7252  07D7  01A4               	clrf	Delayms@yyy^(0+128)
  7253  07D8  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  7254  07D9  01A2               	clrf	Delayms@xxx^(0+128)
  7255  07DA  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  7256                           
  7257                           ;DISPLAY.C: 205: for(xxx=0;xxx<delay;xxx++)
  7258  07DB  01A2               	clrf	Delayms@xxx^(0+128)
  7259  07DC  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  7260  07DD                     l489:	
  7261  07DD  0821               	movf	(Delayms@delay+1)^(0+128),w
  7262  07DE  0223               	subwf	(Delayms@xxx+1)^(0+128),w
  7263  07DF  1D03               	skipz
  7264  07E0  2FE3               	goto	u5495
  7265  07E1  0820               	movf	Delayms@delay^(0+128),w
  7266  07E2  0222               	subwf	Delayms@xxx^(0+128),w
  7267  07E3                     u5495:	
  7268  07E3  1803               	btfsc	3,0
  7269  07E4  0008               	return
  7270                           
  7271                           ;DISPLAY.C: 206: {
  7272                           ;DISPLAY.C: 207: for(yyy=0;yyy<138;yyy++);
  7273  07E5  01A4               	clrf	Delayms@yyy^(0+128)
  7274  07E6  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  7275  07E7  3000               	movlw	0
  7276  07E8  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  7277  07E9  308A               	movlw	138
  7278  07EA  1903               	skipnz
  7279  07EB  0224               	subwf	Delayms@yyy^(0+128),w
  7280  07EC  1803               	btfsc	3,0
  7281  07ED  2FF9               	goto	l4155
  7282  07EE                     l4153:	
  7283  07EE  3001               	movlw	1
  7284  07EF  07A4               	addwf	Delayms@yyy^(0+128),f
  7285  07F0  3000               	movlw	0
  7286  07F1  3DA5               	addwfc	(Delayms@yyy+1)^(0+128),f
  7287  07F2  3000               	movlw	0
  7288  07F3  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  7289  07F4  308A               	movlw	138
  7290  07F5  1903               	skipnz
  7291  07F6  0224               	subwf	Delayms@yyy^(0+128),w
  7292  07F7  1C03               	skipc
  7293  07F8  2FEE               	goto	l4153
  7294  07F9                     l4155:	
  7295  07F9  3001               	movlw	1
  7296  07FA  07A2               	addwf	Delayms@xxx^(0+128),f
  7297  07FB  3000               	movlw	0
  7298  07FC  3DA3               	addwfc	(Delayms@xxx+1)^(0+128),f
  7299  07FD  2FDD               	goto	l489
  7300  07FE                     __end_of_Delayms:	
  7301                           
  7302                           	psect	text22
  7303  148D                     __ptext22:	
  7304 ;; *************** function _Adaptive_base_pid *****************
  7305 ;; Defined at:
  7306 ;;		line 34 in file "MOTORCONTROL.C"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;		None
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;		None
  7311 ;; Return value:  Size  Location     Type
  7312 ;;		None               void
  7313 ;; Registers used:
  7314 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7321 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  7322 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  7323 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  7324 ;;Total ram usage:       18 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    5
  7327 ;; This function calls:
  7328 ;;		_Update_PWM
  7329 ;;		___aldiv
  7330 ;;		___altoft
  7331 ;;		___ftadd
  7332 ;;		___ftdiv
  7333 ;;		___ftge
  7334 ;;		___ftmul
  7335 ;;		___ftneg
  7336 ;;		___fttol
  7337 ;;		___wmul
  7338 ;; This function is called by:
  7339 ;;		_main
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343                           
  7344                           ;psect for function _Adaptive_base_pid
  7345  148D                     _Adaptive_base_pid:	
  7346                           
  7347                           ;MOTORCONTROL.C: 37: pidParams2.Kp2=2.0;
  7348                           
  7349                           ;incstack = 0
  7350                           ; Regs used in _Adaptive_base_pid: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7351  148D  3096               	movlw	150
  7352  148E  0086               	movwf	6
  7353  148F  3023               	movlw	35
  7354  1490  0087               	movwf	7
  7355  1491  3000               	movlw	0
  7356  1492  3FC0               	movwi [0]fsr1
  7357  1493  3000               	movlw	0
  7358  1494  3FC1               	movwi [1]fsr1
  7359  1495  3040               	movlw	64
  7360  1496  3FC2               	movwi [2]fsr1
  7361                           
  7362                           ;MOTORCONTROL.C: 38: pidParams2.Ki2=0.5;
  7363  1497  3096               	movlw	150
  7364  1498  0086               	movwf	6
  7365  1499  3023               	movlw	35
  7366  149A  0087               	movwf	7
  7367  149B  3143               	addfsr 1,3
  7368  149C  3000               	movlw	0
  7369  149D  3FC0               	movwi [0]fsr1
  7370  149E  3000               	movlw	0
  7371  149F  3FC1               	movwi [1]fsr1
  7372  14A0  303F               	movlw	63
  7373  14A1  3FC2               	movwi [2]fsr1
  7374                           
  7375                           ;MOTORCONTROL.C: 39: pidParams2.Kd2=0;
  7376  14A2  3096               	movlw	150
  7377  14A3  0086               	movwf	6
  7378  14A4  3023               	movlw	35
  7379  14A5  0087               	movwf	7
  7380  14A6  3146               	addfsr 1,6
  7381  14A7  3000               	movlw	0
  7382  14A8  3FC0               	movwi [0]fsr1
  7383  14A9  3000               	movlw	0
  7384  14AA  3FC1               	movwi [1]fsr1
  7385  14AB  3000               	movlw	0
  7386  14AC  3FC2               	movwi [2]fsr1
  7387                           
  7388                           ;MOTORCONTROL.C: 41: pidParams2.ReferenceSetpoint2=setpfreq;
  7389  14AD  0023               	movlb	3	; select bank3
  7390  14AE  0850               	movf	_setpfreq^(0+384),w
  7391  14AF  0021               	movlb	1	; select bank1
  7392  14B0  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7393  14B1  0023               	movlb	3	; select bank3
  7394  14B2  0851               	movf	(_setpfreq+1)^(0+384),w
  7395  14B3  0021               	movlb	1	; select bank1
  7396  14B4  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7397  14B5  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7398  14B6  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7399  14B7  30C4               	movlw	196
  7400  14B8  0086               	movwf	6
  7401  14B9  3023               	movlw	35
  7402  14BA  0087               	movwf	7
  7403  14BB  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7404  14BC  3FC0               	movwi [0]fsr1
  7405  14BD  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7406  14BE  3FC1               	movwi [1]fsr1
  7407  14BF  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7408  14C0  3FC2               	movwi [2]fsr1
  7409  14C1  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7410  14C2  3FC3               	movwi [3]fsr1
  7411                           
  7412                           ;MOTORCONTROL.C: 42: pidParams2.feedback2=Fltpfreq;
  7413  14C3  0022               	movlb	2	; select bank2
  7414  14C4  0820               	movf	_Fltpfreq^(0+256),w
  7415  14C5  0021               	movlb	1	; select bank1
  7416  14C6  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7417  14C7  0022               	movlb	2	; select bank2
  7418  14C8  0821               	movf	(_Fltpfreq+1)^(0+256),w
  7419  14C9  0021               	movlb	1	; select bank1
  7420  14CA  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7421  14CB  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7422  14CC  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7423  14CD  30C8               	movlw	200
  7424  14CE  0086               	movwf	6
  7425  14CF  3023               	movlw	35
  7426  14D0  0087               	movwf	7
  7427  14D1  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7428  14D2  3FC0               	movwi [0]fsr1
  7429  14D3  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7430  14D4  3FC1               	movwi [1]fsr1
  7431  14D5  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7432  14D6  3FC2               	movwi [2]fsr1
  7433  14D7  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7434  14D8  3FC3               	movwi [3]fsr1
  7435                           
  7436                           ;MOTORCONTROL.C: 43: disp1term=pidParams2.ReferenceSetpoint2;
  7437  14D9  30C4               	movlw	196
  7438  14DA  0086               	movwf	6
  7439  14DB  3023               	movlw	35
  7440  14DC  0087               	movwf	7
  7441  14DD  3F40               	moviw [0]fsr1
  7442  14DE  0024               	movlb	4	; select bank4
  7443  14DF  00B0               	movwf	_disp1term^(0+512)
  7444  14E0  3F41               	moviw [1]fsr1
  7445  14E1  00B1               	movwf	(_disp1term+1)^(0+512)
  7446                           
  7447                           ;MOTORCONTROL.C: 44: disp2term=pidParams2.feedback2;
  7448  14E2  30C8               	movlw	200
  7449  14E3  0086               	movwf	6
  7450  14E4  3023               	movlw	35
  7451  14E5  0087               	movwf	7
  7452  14E6  3F40               	moviw [0]fsr1
  7453  14E7  00B2               	movwf	_disp2term^(0+512)
  7454  14E8  3F41               	moviw [1]fsr1
  7455  14E9  00B3               	movwf	(_disp2term+1)^(0+512)
  7456                           
  7457                           ;MOTORCONTROL.C: 46: pidParams2.error2 = pidParams2.ReferenceSetpoint2 - pidParams2.feed
      +                          back2;
  7458  14EA  30C4               	movlw	196
  7459  14EB  0086               	movwf	6
  7460  14EC  3023               	movlw	35
  7461  14ED  0087               	movwf	7
  7462  14EE  3F40               	moviw [0]fsr1
  7463  14EF  0021               	movlb	1	; select bank1
  7464  14F0  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7465  14F1  3F41               	moviw [1]fsr1
  7466  14F2  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7467  14F3  3F42               	moviw [2]fsr1
  7468  14F4  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7469  14F5  3F43               	moviw [3]fsr1
  7470  14F6  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7471  14F7  30C8               	movlw	200
  7472  14F8  0086               	movwf	6
  7473  14F9  3023               	movlw	35
  7474  14FA  0087               	movwf	7
  7475  14FB  3F40               	moviw [0]fsr1
  7476  14FC  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  7477  14FD  3F41               	moviw [1]fsr1
  7478  14FE  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  7479  14FF  3F42               	moviw [2]fsr1
  7480  1500  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  7481  1501  3F43               	moviw [3]fsr1
  7482  1502  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  7483  1503  09DF               	comf	(??_Adaptive_base_pid+4)^(0+128),f
  7484  1504  09E0               	comf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7485  1505  09E1               	comf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7486  1506  09E2               	comf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7487  1507  0ADF               	incf	(??_Adaptive_base_pid+4)^(0+128),f
  7488  1508  1903               	skipnz
  7489  1509  0AE0               	incf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7490  150A  1903               	skipnz
  7491  150B  0AE1               	incf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7492  150C  1903               	skipnz
  7493  150D  0AE2               	incf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7494  150E  085F               	movf	(??_Adaptive_base_pid+4)^(0+128),w
  7495  150F  07DB               	addwf	??_Adaptive_base_pid^(0+128),f
  7496  1510  0860               	movf	(??_Adaptive_base_pid+5)^(0+128),w
  7497  1511  3DDC               	addwfc	(??_Adaptive_base_pid^(0+128)+1),f
  7498  1512  0861               	movf	(??_Adaptive_base_pid+6)^(0+128),w
  7499  1513  3DDD               	addwfc	(??_Adaptive_base_pid^(0+128)+2),f
  7500  1514  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  7501  1515  3DDE               	addwfc	(??_Adaptive_base_pid^(0+128)+3),f
  7502  1516  3096               	movlw	150
  7503  1517  0086               	movwf	6
  7504  1518  3023               	movlw	35
  7505  1519  0087               	movwf	7
  7506  151A  314C               	addfsr 1,12
  7507  151B  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7508  151C  3FC0               	movwi [0]fsr1
  7509  151D  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7510  151E  3FC1               	movwi [1]fsr1
  7511  151F  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7512  1520  3FC2               	movwi [2]fsr1
  7513  1521  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7514  1522  3FC3               	movwi [3]fsr1
  7515                           
  7516                           ;MOTORCONTROL.C: 47: pidParams2.feedback2=0;
  7517  1523  30C8               	movlw	200
  7518  1524  0086               	movwf	6
  7519  1525  3023               	movlw	35
  7520  1526  0087               	movwf	7
  7521  1527  3000               	movlw	0
  7522  1528  3FC0               	movwi [0]fsr1
  7523  1529  3FC1               	movwi [1]fsr1
  7524  152A  3FC2               	movwi [2]fsr1
  7525  152B  3FC3               	movwi [3]fsr1
  7526                           
  7527                           ;MOTORCONTROL.C: 48: pidParams2.outmax2=53000;
  7528  152C  30C0               	movlw	192
  7529  152D  0086               	movwf	6
  7530  152E  3023               	movlw	35
  7531  152F  0087               	movwf	7
  7532  1530  3008               	movlw	8
  7533  1531  3FC0               	movwi [0]fsr1
  7534  1532  30CF               	movlw	207
  7535  1533  3FC1               	movwi [1]fsr1
  7536  1534  3000               	movlw	0
  7537  1535  3FC2               	movwi [2]fsr1
  7538  1536  3000               	movlw	0
  7539  1537  3FC3               	movwi [3]fsr1
  7540                           
  7541                           ;MOTORCONTROL.C: 50: scalefactor2=66.0;
  7542  1538  3042               	movlw	66
  7543  1539  0023               	movlb	3	; select bank3
  7544  153A  00EB               	movwf	_scalefactor2^(0+384)
  7545  153B  3000               	movlw	0
  7546  153C  00EC               	movwf	(_scalefactor2^(0+384)+1)
  7547                           
  7548                           ;MOTORCONTROL.C: 53: {
  7549                           ;MOTORCONTROL.C: 54: error_new =pidParams2.error2;
  7550  153D  3096               	movlw	150
  7551  153E  0086               	movwf	6
  7552  153F  3023               	movlw	35
  7553  1540  0087               	movwf	7
  7554  1541  314C               	addfsr 1,12
  7555  1542  3F40               	moviw [0]fsr1
  7556  1543  0021               	movlb	1	; select bank1
  7557  1544  00A8               	movwf	___altoft@c^(0+128)
  7558  1545  3F41               	moviw [1]fsr1
  7559  1546  00A9               	movwf	(___altoft@c+1)^(0+128)
  7560  1547  3F42               	moviw [2]fsr1
  7561  1548  00AA               	movwf	(___altoft@c+2)^(0+128)
  7562  1549  3F43               	moviw [3]fsr1
  7563  154A  00AB               	movwf	(___altoft@c+3)^(0+128)
  7564  154B  319A  226D  3194   	fcall	___altoft
  7565  154E  0021               	movlb	1	; select bank1
  7566  154F  0828               	movf	?___altoft^(0+128),w
  7567  1550  0023               	movlb	3	; select bank3
  7568  1551  00A0               	movwf	_error_new^(0+384)
  7569  1552  0021               	movlb	1	; select bank1
  7570  1553  0829               	movf	(?___altoft+1)^(0+128),w
  7571  1554  0023               	movlb	3	; select bank3
  7572  1555  00A1               	movwf	(_error_new+1)^(0+384)
  7573  1556  0021               	movlb	1	; select bank1
  7574  1557  082A               	movf	(?___altoft+2)^(0+128),w
  7575  1558  0023               	movlb	3	; select bank3
  7576  1559  00A2               	movwf	(_error_new+2)^(0+384)
  7577                           
  7578                           ;MOTORCONTROL.C: 55: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7579  155A  3096               	movlw	150
  7580  155B  0086               	movwf	6
  7581  155C  3023               	movlw	35
  7582  155D  0087               	movwf	7
  7583  155E  3143               	addfsr 1,3
  7584  155F  3F40               	moviw [0]fsr1
  7585  1560  0021               	movlb	1	; select bank1
  7586  1561  00B5               	movwf	___ftmul@f1^(0+128)
  7587  1562  3F41               	moviw [1]fsr1
  7588  1563  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7589  1564  3F42               	moviw [2]fsr1
  7590  1565  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7591  1566  0023               	movlb	3	; select bank3
  7592  1567  0823               	movf	_error_old^(0+384),w
  7593  1568  0021               	movlb	1	; select bank1
  7594  1569  00A8               	movwf	___ftadd@f1^(0+128)
  7595  156A  0023               	movlb	3	; select bank3
  7596  156B  0824               	movf	(_error_old+1)^(0+384),w
  7597  156C  0021               	movlb	1	; select bank1
  7598  156D  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7599  156E  0023               	movlb	3	; select bank3
  7600  156F  0825               	movf	(_error_old+2)^(0+384),w
  7601  1570  0021               	movlb	1	; select bank1
  7602  1571  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7603  1572  0023               	movlb	3	; select bank3
  7604  1573  0820               	movf	_error_new^(0+384),w
  7605  1574  0021               	movlb	1	; select bank1
  7606  1575  00AB               	movwf	___ftadd@f2^(0+128)
  7607  1576  0023               	movlb	3	; select bank3
  7608  1577  0821               	movf	(_error_new+1)^(0+384),w
  7609  1578  0021               	movlb	1	; select bank1
  7610  1579  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7611  157A  0023               	movlb	3	; select bank3
  7612  157B  0822               	movf	(_error_new+2)^(0+384),w
  7613  157C  0021               	movlb	1	; select bank1
  7614  157D  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7615  157E  3188  205C  3194   	fcall	___ftadd
  7616  1581  0021               	movlb	1	; select bank1
  7617  1582  0828               	movf	?___ftadd^(0+128),w
  7618  1583  00B8               	movwf	___ftmul@f2^(0+128)
  7619  1584  0829               	movf	(?___ftadd+1)^(0+128),w
  7620  1585  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7621  1586  082A               	movf	(?___ftadd+2)^(0+128),w
  7622  1587  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7623  1588  3192  22E3  3194   	fcall	___ftmul
  7624  158B  0021               	movlb	1	; select bank1
  7625  158C  0835               	movf	?___ftmul^(0+128),w
  7626  158D  00E4               	movwf	_Adaptive_base_pid$1776^(0+128)
  7627  158E  0836               	movf	(?___ftmul+1)^(0+128),w
  7628  158F  00E5               	movwf	(_Adaptive_base_pid$1776+1)^(0+128)
  7629  1590  0837               	movf	(?___ftmul+2)^(0+128),w
  7630  1591  00E6               	movwf	(_Adaptive_base_pid$1776+2)^(0+128)
  7631                           
  7632                           ;MOTORCONTROL.C: 55: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7633  1592  0023               	movlb	3	; select bank3
  7634  1593  0829               	movf	_integral_old^(0+384),w
  7635  1594  0021               	movlb	1	; select bank1
  7636  1595  00A8               	movwf	___ftadd@f1^(0+128)
  7637  1596  0023               	movlb	3	; select bank3
  7638  1597  082A               	movf	(_integral_old+1)^(0+384),w
  7639  1598  0021               	movlb	1	; select bank1
  7640  1599  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7641  159A  0023               	movlb	3	; select bank3
  7642  159B  082B               	movf	(_integral_old+2)^(0+384),w
  7643  159C  0021               	movlb	1	; select bank1
  7644  159D  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7645  159E  3000               	movlw	0
  7646  159F  00C5               	movwf	___ftdiv@f2^(0+128)
  7647  15A0  3000               	movlw	0
  7648  15A1  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  7649  15A2  3040               	movlw	64
  7650  15A3  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  7651  15A4  0023               	movlb	3	; select bank3
  7652  15A5  0860               	movf	_Tsampling^(0+384),w
  7653  15A6  0021               	movlb	1	; select bank1
  7654  15A7  00B5               	movwf	___ftmul@f1^(0+128)
  7655  15A8  0023               	movlb	3	; select bank3
  7656  15A9  0861               	movf	(_Tsampling+1)^(0+384),w
  7657  15AA  0021               	movlb	1	; select bank1
  7658  15AB  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7659  15AC  0023               	movlb	3	; select bank3
  7660  15AD  0862               	movf	(_Tsampling+2)^(0+384),w
  7661  15AE  0021               	movlb	1	; select bank1
  7662  15AF  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7663  15B0  0864               	movf	_Adaptive_base_pid$1776^(0+128),w
  7664  15B1  00B8               	movwf	___ftmul@f2^(0+128)
  7665  15B2  0865               	movf	(_Adaptive_base_pid$1776+1)^(0+128),w
  7666  15B3  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7667  15B4  0866               	movf	(_Adaptive_base_pid$1776+2)^(0+128),w
  7668  15B5  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7669  15B6  3192  22E3  3194   	fcall	___ftmul
  7670  15B9  0021               	movlb	1	; select bank1
  7671  15BA  0835               	movf	?___ftmul^(0+128),w
  7672  15BB  00C8               	movwf	___ftdiv@f1^(0+128)
  7673  15BC  0836               	movf	(?___ftmul+1)^(0+128),w
  7674  15BD  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  7675  15BE  0837               	movf	(?___ftmul+2)^(0+128),w
  7676  15BF  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  7677  15C0  3190  20DC  3194   	fcall	___ftdiv
  7678  15C3  0021               	movlb	1	; select bank1
  7679  15C4  0845               	movf	?___ftdiv^(0+128),w
  7680  15C5  00AB               	movwf	___ftadd@f2^(0+128)
  7681  15C6  0846               	movf	(?___ftdiv+1)^(0+128),w
  7682  15C7  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7683  15C8  0847               	movf	(?___ftdiv+2)^(0+128),w
  7684  15C9  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7685  15CA  3188  205C  3194   	fcall	___ftadd
  7686  15CD  0021               	movlb	1	; select bank1
  7687  15CE  0828               	movf	?___ftadd^(0+128),w
  7688  15CF  0023               	movlb	3	; select bank3
  7689  15D0  00A6               	movwf	_integral_new^(0+384)
  7690  15D1  0021               	movlb	1	; select bank1
  7691  15D2  0829               	movf	(?___ftadd+1)^(0+128),w
  7692  15D3  0023               	movlb	3	; select bank3
  7693  15D4  00A7               	movwf	(_integral_new+1)^(0+384)
  7694  15D5  0021               	movlb	1	; select bank1
  7695  15D6  082A               	movf	(?___ftadd+2)^(0+128),w
  7696  15D7  0023               	movlb	3	; select bank3
  7697  15D8  00A8               	movwf	(_integral_new+2)^(0+384)
  7698                           
  7699                           ;MOTORCONTROL.C: 57: if((integral_new > pidParams2.outmax2) || (integral_new < minoutmax
      +                          ))
  7700  15D9  30C0               	movlw	192
  7701  15DA  0086               	movwf	6
  7702  15DB  3023               	movlw	35
  7703  15DC  0087               	movwf	7
  7704  15DD  3F40               	moviw [0]fsr1
  7705  15DE  0021               	movlb	1	; select bank1
  7706  15DF  00A8               	movwf	___altoft@c^(0+128)
  7707  15E0  3F41               	moviw [1]fsr1
  7708  15E1  00A9               	movwf	(___altoft@c+1)^(0+128)
  7709  15E2  3F42               	moviw [2]fsr1
  7710  15E3  00AA               	movwf	(___altoft@c+2)^(0+128)
  7711  15E4  3F43               	moviw [3]fsr1
  7712  15E5  00AB               	movwf	(___altoft@c+3)^(0+128)
  7713  15E6  319A  226D  3194   	fcall	___altoft
  7714  15E9  0021               	movlb	1	; select bank1
  7715  15EA  0828               	movf	?___altoft^(0+128),w
  7716  15EB  00B0               	movwf	___ftge@ff1^(0+128)
  7717  15EC  0829               	movf	(?___altoft+1)^(0+128),w
  7718  15ED  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  7719  15EE  082A               	movf	(?___altoft+2)^(0+128),w
  7720  15EF  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  7721  15F0  0023               	movlb	3	; select bank3
  7722  15F1  0826               	movf	_integral_new^(0+384),w
  7723  15F2  0021               	movlb	1	; select bank1
  7724  15F3  00B3               	movwf	___ftge@ff2^(0+128)
  7725  15F4  0023               	movlb	3	; select bank3
  7726  15F5  0827               	movf	(_integral_new+1)^(0+384),w
  7727  15F6  0021               	movlb	1	; select bank1
  7728  15F7  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  7729  15F8  0023               	movlb	3	; select bank3
  7730  15F9  0828               	movf	(_integral_new+2)^(0+384),w
  7731  15FA  0021               	movlb	1	; select bank1
  7732  15FB  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  7733  15FC  319A  2231  3194   	fcall	___ftge
  7734  15FF  1C03               	btfss	3,0
  7735  1600  2E1E               	goto	l4313
  7736  1601  0023               	movlb	3	; select bank3
  7737  1602  0826               	movf	_integral_new^(0+384),w
  7738  1603  0021               	movlb	1	; select bank1
  7739  1604  00B0               	movwf	___ftge@ff1^(0+128)
  7740  1605  0023               	movlb	3	; select bank3
  7741  1606  0827               	movf	(_integral_new+1)^(0+384),w
  7742  1607  0021               	movlb	1	; select bank1
  7743  1608  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  7744  1609  0023               	movlb	3	; select bank3
  7745  160A  0828               	movf	(_integral_new+2)^(0+384),w
  7746  160B  0021               	movlb	1	; select bank1
  7747  160C  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  7748  160D  0024               	movlb	4	; select bank4
  7749  160E  0827               	movf	_minoutmax^(0+512),w
  7750  160F  0021               	movlb	1	; select bank1
  7751  1610  00B3               	movwf	___ftge@ff2^(0+128)
  7752  1611  0024               	movlb	4	; select bank4
  7753  1612  0828               	movf	(_minoutmax+1)^(0+512),w
  7754  1613  0021               	movlb	1	; select bank1
  7755  1614  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  7756  1615  0024               	movlb	4	; select bank4
  7757  1616  0829               	movf	(_minoutmax+2)^(0+512),w
  7758  1617  0021               	movlb	1	; select bank1
  7759  1618  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  7760  1619  319A  2231  3194   	fcall	___ftge
  7761  161C  1803               	btfsc	3,0
  7762  161D  2E25               	goto	l4315
  7763  161E                     l4313:	
  7764                           
  7765                           ;MOTORCONTROL.C: 58: integral_new = integral_old;
  7766  161E  0023               	movlb	3	; select bank3
  7767  161F  0829               	movf	_integral_old^(0+384),w
  7768  1620  00A6               	movwf	_integral_new^(0+384)
  7769  1621  082A               	movf	(_integral_old+1)^(0+384),w
  7770  1622  00A7               	movwf	(_integral_new+1)^(0+384)
  7771  1623  082B               	movf	(_integral_old+2)^(0+384),w
  7772  1624  00A8               	movwf	(_integral_new+2)^(0+384)
  7773  1625                     l4315:	
  7774                           
  7775                           ;MOTORCONTROL.C: 60: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7776  1625  0023               	movlb	3	; select bank3
  7777  1626  0860               	movf	_Tsampling^(0+384),w
  7778  1627  0021               	movlb	1	; select bank1
  7779  1628  00C5               	movwf	___ftdiv@f2^(0+128)
  7780  1629  0023               	movlb	3	; select bank3
  7781  162A  0861               	movf	(_Tsampling+1)^(0+384),w
  7782  162B  0021               	movlb	1	; select bank1
  7783  162C  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  7784  162D  0023               	movlb	3	; select bank3
  7785  162E  0862               	movf	(_Tsampling+2)^(0+384),w
  7786  162F  0021               	movlb	1	; select bank1
  7787  1630  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  7788  1631  3096               	movlw	150
  7789  1632  0086               	movwf	6
  7790  1633  3023               	movlw	35
  7791  1634  0087               	movwf	7
  7792  1635  3146               	addfsr 1,6
  7793  1636  3F40               	moviw [0]fsr1
  7794  1637  00B5               	movwf	___ftmul@f1^(0+128)
  7795  1638  3F41               	moviw [1]fsr1
  7796  1639  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7797  163A  3F42               	moviw [2]fsr1
  7798  163B  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7799  163C  0023               	movlb	3	; select bank3
  7800  163D  0820               	movf	_error_new^(0+384),w
  7801  163E  0021               	movlb	1	; select bank1
  7802  163F  00A8               	movwf	___ftadd@f1^(0+128)
  7803  1640  0023               	movlb	3	; select bank3
  7804  1641  0821               	movf	(_error_new+1)^(0+384),w
  7805  1642  0021               	movlb	1	; select bank1
  7806  1643  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7807  1644  0023               	movlb	3	; select bank3
  7808  1645  0822               	movf	(_error_new+2)^(0+384),w
  7809  1646  0021               	movlb	1	; select bank1
  7810  1647  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7811  1648  0023               	movlb	3	; select bank3
  7812  1649  0823               	movf	_error_old^(0+384),w
  7813  164A  0021               	movlb	1	; select bank1
  7814  164B  00A0               	movwf	___ftneg@f1^(0+128)
  7815  164C  0023               	movlb	3	; select bank3
  7816  164D  0824               	movf	(_error_old+1)^(0+384),w
  7817  164E  0021               	movlb	1	; select bank1
  7818  164F  00A1               	movwf	(___ftneg@f1+1)^(0+128)
  7819  1650  0023               	movlb	3	; select bank3
  7820  1651  0825               	movf	(_error_old+2)^(0+384),w
  7821  1652  0021               	movlb	1	; select bank1
  7822  1653  00A2               	movwf	(___ftneg@f1+2)^(0+128)
  7823  1654  3198  20A2  3194   	fcall	___ftneg
  7824  1657  0021               	movlb	1	; select bank1
  7825  1658  0820               	movf	?___ftneg^(0+128),w
  7826  1659  00AB               	movwf	___ftadd@f2^(0+128)
  7827  165A  0821               	movf	(?___ftneg+1)^(0+128),w
  7828  165B  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7829  165C  0822               	movf	(?___ftneg+2)^(0+128),w
  7830  165D  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7831  165E  3188  205C  3194   	fcall	___ftadd
  7832  1661  0021               	movlb	1	; select bank1
  7833  1662  0828               	movf	?___ftadd^(0+128),w
  7834  1663  00B8               	movwf	___ftmul@f2^(0+128)
  7835  1664  0829               	movf	(?___ftadd+1)^(0+128),w
  7836  1665  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7837  1666  082A               	movf	(?___ftadd+2)^(0+128),w
  7838  1667  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7839  1668  3192  22E3  3194   	fcall	___ftmul
  7840  166B  0021               	movlb	1	; select bank1
  7841  166C  0835               	movf	?___ftmul^(0+128),w
  7842  166D  00C8               	movwf	___ftdiv@f1^(0+128)
  7843  166E  0836               	movf	(?___ftmul+1)^(0+128),w
  7844  166F  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  7845  1670  0837               	movf	(?___ftmul+2)^(0+128),w
  7846  1671  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  7847  1672  3190  20DC  3194   	fcall	___ftdiv
  7848  1675  0021               	movlb	1	; select bank1
  7849  1676  0845               	movf	?___ftdiv^(0+128),w
  7850  1677  00E7               	movwf	_Adaptive_base_pid$1777^(0+128)
  7851  1678  0846               	movf	(?___ftdiv+1)^(0+128),w
  7852  1679  00E8               	movwf	(_Adaptive_base_pid$1777+1)^(0+128)
  7853  167A  0847               	movf	(?___ftdiv+2)^(0+128),w
  7854  167B  00E9               	movwf	(_Adaptive_base_pid$1777+2)^(0+128)
  7855                           
  7856                           ;MOTORCONTROL.C: 60: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7857  167C  0867               	movf	_Adaptive_base_pid$1777^(0+128),w
  7858  167D  00A8               	movwf	___ftadd@f1^(0+128)
  7859  167E  0868               	movf	(_Adaptive_base_pid$1777+1)^(0+128),w
  7860  167F  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7861  1680  0869               	movf	(_Adaptive_base_pid$1777+2)^(0+128),w
  7862  1681  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7863  1682  0023               	movlb	3	; select bank3
  7864  1683  0820               	movf	_error_new^(0+384),w
  7865  1684  0021               	movlb	1	; select bank1
  7866  1685  00B5               	movwf	___ftmul@f1^(0+128)
  7867  1686  0023               	movlb	3	; select bank3
  7868  1687  0821               	movf	(_error_new+1)^(0+384),w
  7869  1688  0021               	movlb	1	; select bank1
  7870  1689  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7871  168A  0023               	movlb	3	; select bank3
  7872  168B  0822               	movf	(_error_new+2)^(0+384),w
  7873  168C  0021               	movlb	1	; select bank1
  7874  168D  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7875  168E  3096               	movlw	150
  7876  168F  0086               	movwf	6
  7877  1690  3023               	movlw	35
  7878  1691  0087               	movwf	7
  7879  1692  3F40               	moviw [0]fsr1
  7880  1693  00B8               	movwf	___ftmul@f2^(0+128)
  7881  1694  3F41               	moviw [1]fsr1
  7882  1695  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7883  1696  3F42               	moviw [2]fsr1
  7884  1697  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7885  1698  3192  22E3  3194   	fcall	___ftmul
  7886  169B  0021               	movlb	1	; select bank1
  7887  169C  0835               	movf	?___ftmul^(0+128),w
  7888  169D  00AB               	movwf	___ftadd@f2^(0+128)
  7889  169E  0836               	movf	(?___ftmul+1)^(0+128),w
  7890  169F  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7891  16A0  0837               	movf	(?___ftmul+2)^(0+128),w
  7892  16A1  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7893  16A2  3188  205C  3194   	fcall	___ftadd
  7894  16A5  0021               	movlb	1	; select bank1
  7895  16A6  0828               	movf	?___ftadd^(0+128),w
  7896  16A7  00EA               	movwf	_Adaptive_base_pid$1778^(0+128)
  7897  16A8  0829               	movf	(?___ftadd+1)^(0+128),w
  7898  16A9  00EB               	movwf	(_Adaptive_base_pid$1778+1)^(0+128)
  7899  16AA  082A               	movf	(?___ftadd+2)^(0+128),w
  7900  16AB  00EC               	movwf	(_Adaptive_base_pid$1778+2)^(0+128)
  7901                           
  7902                           ;MOTORCONTROL.C: 60: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7903  16AC  0023               	movlb	3	; select bank3
  7904  16AD  0826               	movf	_integral_new^(0+384),w
  7905  16AE  0021               	movlb	1	; select bank1
  7906  16AF  00A8               	movwf	___ftadd@f1^(0+128)
  7907  16B0  0023               	movlb	3	; select bank3
  7908  16B1  0827               	movf	(_integral_new+1)^(0+384),w
  7909  16B2  0021               	movlb	1	; select bank1
  7910  16B3  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7911  16B4  0023               	movlb	3	; select bank3
  7912  16B5  0828               	movf	(_integral_new+2)^(0+384),w
  7913  16B6  0021               	movlb	1	; select bank1
  7914  16B7  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7915  16B8  086A               	movf	_Adaptive_base_pid$1778^(0+128),w
  7916  16B9  00AB               	movwf	___ftadd@f2^(0+128)
  7917  16BA  086B               	movf	(_Adaptive_base_pid$1778+1)^(0+128),w
  7918  16BB  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7919  16BC  086C               	movf	(_Adaptive_base_pid$1778+2)^(0+128),w
  7920  16BD  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7921  16BE  3188  205C  3194   	fcall	___ftadd
  7922  16C1  0021               	movlb	1	; select bank1
  7923  16C2  0828               	movf	?___ftadd^(0+128),w
  7924  16C3  0024               	movlb	4	; select bank4
  7925  16C4  00A4               	movwf	_controller_out^(0+512)
  7926  16C5  0021               	movlb	1	; select bank1
  7927  16C6  0829               	movf	(?___ftadd+1)^(0+128),w
  7928  16C7  0024               	movlb	4	; select bank4
  7929  16C8  00A5               	movwf	(_controller_out+1)^(0+512)
  7930  16C9  0021               	movlb	1	; select bank1
  7931  16CA  082A               	movf	(?___ftadd+2)^(0+128),w
  7932  16CB  0024               	movlb	4	; select bank4
  7933  16CC  00A6               	movwf	(_controller_out+2)^(0+512)
  7934                           
  7935                           ;MOTORCONTROL.C: 61: integral_old = integral_new;
  7936  16CD  0023               	movlb	3	; select bank3
  7937  16CE  0826               	movf	_integral_new^(0+384),w
  7938  16CF  00A9               	movwf	_integral_old^(0+384)
  7939  16D0  0827               	movf	(_integral_new+1)^(0+384),w
  7940  16D1  00AA               	movwf	(_integral_old+1)^(0+384)
  7941  16D2  0828               	movf	(_integral_new+2)^(0+384),w
  7942  16D3  00AB               	movwf	(_integral_old+2)^(0+384)
  7943                           
  7944                           ;MOTORCONTROL.C: 62: error_old = error_new;
  7945  16D4  0820               	movf	_error_new^(0+384),w
  7946  16D5  00A3               	movwf	_error_old^(0+384)
  7947  16D6  0821               	movf	(_error_new+1)^(0+384),w
  7948  16D7  00A4               	movwf	(_error_old+1)^(0+384)
  7949  16D8  0822               	movf	(_error_new+2)^(0+384),w
  7950  16D9  00A5               	movwf	(_error_old+2)^(0+384)
  7951                           
  7952                           ;MOTORCONTROL.C: 63: pidParams2.pidoutput2=controller_out;
  7953  16DA  0024               	movlb	4	; select bank4
  7954  16DB  0824               	movf	_controller_out^(0+512),w
  7955  16DC  0021               	movlb	1	; select bank1
  7956  16DD  00C5               	movwf	___fttol@f1^(0+128)
  7957  16DE  0024               	movlb	4	; select bank4
  7958  16DF  0825               	movf	(_controller_out+1)^(0+512),w
  7959  16E0  0021               	movlb	1	; select bank1
  7960  16E1  00C6               	movwf	(___fttol@f1+1)^(0+128)
  7961  16E2  0024               	movlb	4	; select bank4
  7962  16E3  0826               	movf	(_controller_out+2)^(0+512),w
  7963  16E4  0021               	movlb	1	; select bank1
  7964  16E5  00C7               	movwf	(___fttol@f1+2)^(0+128)
  7965  16E6  319F  2779  3194   	fcall	___fttol
  7966  16E9  30E0               	movlw	224
  7967  16EA  0086               	movwf	6
  7968  16EB  3023               	movlw	35
  7969  16EC  0087               	movwf	7
  7970  16ED  0021               	movlb	1	; select bank1
  7971  16EE  0845               	movf	?___fttol^(0+128),w
  7972  16EF  3FC0               	movwi [0]fsr1
  7973  16F0  0846               	movf	(?___fttol+1)^(0+128),w
  7974  16F1  3FC1               	movwi [1]fsr1
  7975  16F2  0847               	movf	(?___fttol+2)^(0+128),w
  7976  16F3  3FC2               	movwi [2]fsr1
  7977  16F4  0848               	movf	(?___fttol+3)^(0+128),w
  7978  16F5  3FC3               	movwi [3]fsr1
  7979                           
  7980                           ;MOTORCONTROL.C: 66: if(pidParams2.pidoutput2<=0)
  7981  16F6  30E0               	movlw	224
  7982  16F7  0086               	movwf	6
  7983  16F8  3023               	movlw	35
  7984  16F9  0087               	movwf	7
  7985  16FA  3F40               	moviw [0]fsr1
  7986  16FB  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7987  16FC  3F41               	moviw [1]fsr1
  7988  16FD  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7989  16FE  3F42               	moviw [2]fsr1
  7990  16FF  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7991  1700  3F43               	moviw [3]fsr1
  7992  1701  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7993  1702  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7994  1703  3A80               	xorlw	128
  7995  1704  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  7996  1705  3000               	movlw	0
  7997  1706  3A80               	xorlw	128
  7998  1707  025F               	subwf	(??_Adaptive_base_pid+4)^(0+128),w
  7999  1708  1D03               	skipz
  8000  1709  2F14               	goto	u5803
  8001  170A  3000               	movlw	0
  8002  170B  025D               	subwf	(??_Adaptive_base_pid+2)^(0+128),w
  8003  170C  1D03               	skipz
  8004  170D  2F14               	goto	u5803
  8005  170E  3000               	movlw	0
  8006  170F  025C               	subwf	(??_Adaptive_base_pid+1)^(0+128),w
  8007  1710  1D03               	skipz
  8008  1711  2F14               	goto	u5803
  8009  1712  3001               	movlw	1
  8010  1713  025B               	subwf	??_Adaptive_base_pid^(0+128),w
  8011  1714                     u5803:	
  8012  1714  1803               	skipnc
  8013  1715  2F20               	goto	l4331
  8014                           
  8015                           ;MOTORCONTROL.C: 67: pidParams2.pidoutput2=0;
  8016  1716  30E0               	movlw	224
  8017  1717  0086               	movwf	6
  8018  1718  3023               	movlw	35
  8019  1719  0087               	movwf	7
  8020  171A  3000               	movlw	0
  8021  171B  3FC0               	movwi [0]fsr1
  8022  171C  3FC1               	movwi [1]fsr1
  8023  171D  3FC2               	movwi [2]fsr1
  8024  171E  3FC3               	movwi [3]fsr1
  8025  171F  2F64               	goto	l546
  8026  1720                     l4331:	
  8027                           
  8028                           ;MOTORCONTROL.C: 68: else if(pidParams2.pidoutput2>pidParams2.outmax2)
  8029  1720  30E0               	movlw	224
  8030  1721  0086               	movwf	6
  8031  1722  3023               	movlw	35
  8032  1723  0087               	movwf	7
  8033  1724  3F40               	moviw [0]fsr1
  8034  1725  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8035  1726  3F41               	moviw [1]fsr1
  8036  1727  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8037  1728  3F42               	moviw [2]fsr1
  8038  1729  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8039  172A  3F43               	moviw [3]fsr1
  8040  172B  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8041  172C  30C0               	movlw	192
  8042  172D  0086               	movwf	6
  8043  172E  3023               	movlw	35
  8044  172F  0087               	movwf	7
  8045  1730  3F40               	moviw [0]fsr1
  8046  1731  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  8047  1732  3F41               	moviw [1]fsr1
  8048  1733  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  8049  1734  3F42               	moviw [2]fsr1
  8050  1735  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  8051  1736  3F43               	moviw [3]fsr1
  8052  1737  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  8053  1738  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  8054  1739  3A80               	xorlw	128
  8055  173A  00E3               	movwf	(??_Adaptive_base_pid+8)^(0+128)
  8056  173B  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8057  173C  3A80               	xorlw	128
  8058  173D  0263               	subwf	(??_Adaptive_base_pid+8)^(0+128),w
  8059  173E  1D03               	skipz
  8060  173F  2F4A               	goto	u5813
  8061  1740  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8062  1741  0261               	subwf	(??_Adaptive_base_pid+6)^(0+128),w
  8063  1742  1D03               	skipz
  8064  1743  2F4A               	goto	u5813
  8065  1744  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8066  1745  0260               	subwf	(??_Adaptive_base_pid+5)^(0+128),w
  8067  1746  1D03               	skipz
  8068  1747  2F4A               	goto	u5813
  8069  1748  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8070  1749  025F               	subwf	(??_Adaptive_base_pid+4)^(0+128),w
  8071  174A                     u5813:	
  8072  174A  1803               	skipnc
  8073  174B  2F64               	goto	l546
  8074                           
  8075                           ;MOTORCONTROL.C: 69: pidParams2.pidoutput2=pidParams2.outmax2;
  8076  174C  30C0               	movlw	192
  8077  174D  0086               	movwf	6
  8078  174E  3023               	movlw	35
  8079  174F  0087               	movwf	7
  8080  1750  3F40               	moviw [0]fsr1
  8081  1751  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8082  1752  3F41               	moviw [1]fsr1
  8083  1753  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8084  1754  3F42               	moviw [2]fsr1
  8085  1755  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8086  1756  3F43               	moviw [3]fsr1
  8087  1757  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8088  1758  30E0               	movlw	224
  8089  1759  0086               	movwf	6
  8090  175A  3023               	movlw	35
  8091  175B  0087               	movwf	7
  8092  175C  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8093  175D  3FC0               	movwi [0]fsr1
  8094  175E  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8095  175F  3FC1               	movwi [1]fsr1
  8096  1760  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8097  1761  3FC2               	movwi [2]fsr1
  8098  1762  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8099  1763  3FC3               	movwi [3]fsr1
  8100  1764                     l546:	
  8101                           
  8102                           ;MOTORCONTROL.C: 73: disp4term=pidParams2.pidoutput2;
  8103  1764  30E0               	movlw	224
  8104  1765  0086               	movwf	6
  8105  1766  3023               	movlw	35
  8106  1767  0087               	movwf	7
  8107  1768  3F40               	moviw [0]fsr1
  8108  1769  0024               	movlb	4	; select bank4
  8109  176A  00B6               	movwf	_disp4term^(0+512)
  8110  176B  3F41               	moviw [1]fsr1
  8111  176C  00B7               	movwf	(_disp4term+1)^(0+512)
  8112                           
  8113                           ;MOTORCONTROL.C: 74: scaled_baseval2=(pidParams2.pidoutput2/scalefactor2);
  8114  176D  0023               	movlb	3	; select bank3
  8115  176E  086B               	movf	_scalefactor2^(0+384),w
  8116  176F  0021               	movlb	1	; select bank1
  8117  1770  00A0               	movwf	___aldiv@divisor^(0+128)
  8118  1771  0023               	movlb	3	; select bank3
  8119  1772  086C               	movf	(_scalefactor2+1)^(0+384),w
  8120  1773  0021               	movlb	1	; select bank1
  8121  1774  00A1               	movwf	(___aldiv@divisor^(0+128)+1)
  8122  1775  01A2               	clrf	(___aldiv@divisor^(0+128)+2)
  8123  1776  01A3               	clrf	(___aldiv@divisor^(0+128)+3)
  8124  1777  30E0               	movlw	224
  8125  1778  0086               	movwf	6
  8126  1779  3023               	movlw	35
  8127  177A  0087               	movwf	7
  8128  177B  3F40               	moviw [0]fsr1
  8129  177C  00A4               	movwf	___aldiv@dividend^(0+128)
  8130  177D  3F41               	moviw [1]fsr1
  8131  177E  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  8132  177F  3F42               	moviw [2]fsr1
  8133  1780  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  8134  1781  3F43               	moviw [3]fsr1
  8135  1782  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  8136  1783  319E  2670  3194   	fcall	___aldiv
  8137  1786  0021               	movlb	1	; select bank1
  8138  1787  0821               	movf	(?___aldiv^(0+128)+1),w
  8139  1788  0022               	movlb	2	; select bank2
  8140  1789  01A7               	clrf	(_scaled_baseval2+1)^(0+256)
  8141  178A  07A7               	addwf	(_scaled_baseval2+1)^(0+256),f
  8142  178B  0021               	movlb	1	; select bank1
  8143  178C  0820               	movf	?___aldiv^(0+128),w
  8144  178D  0022               	movlb	2	; select bank2
  8145  178E  01A6               	clrf	_scaled_baseval2^(0+256)
  8146  178F  07A6               	addwf	_scaled_baseval2^(0+256),f
  8147                           
  8148                           ;MOTORCONTROL.C: 76: if(scaled_baseval2>maxfmspeed)
  8149  1790  0827               	movf	(_scaled_baseval2+1)^(0+256),w
  8150  1791  0023               	movlb	3	; select bank3
  8151  1792  0268               	subwf	(_maxfmspeed+1)^(0+384),w
  8152  1793  1D03               	skipz
  8153  1794  2F99               	goto	u5825
  8154  1795  0022               	movlb	2	; select bank2
  8155  1796  0826               	movf	_scaled_baseval2^(0+256),w
  8156  1797  0023               	movlb	3	; select bank3
  8157  1798  0267               	subwf	_maxfmspeed^(0+384),w
  8158  1799                     u5825:	
  8159  1799  1803               	skipnc
  8160  179A  2FA2               	goto	l4341
  8161                           
  8162                           ;MOTORCONTROL.C: 77: {
  8163                           ;MOTORCONTROL.C: 78: scaled_baseval2=maxfmspeed;
  8164  179B  0868               	movf	(_maxfmspeed+1)^(0+384),w
  8165  179C  0022               	movlb	2	; select bank2
  8166  179D  01A7               	clrf	(_scaled_baseval2+1)^(0+256)
  8167  179E  07A7               	addwf	(_scaled_baseval2+1)^(0+256),f
  8168  179F  0023               	movlb	3	; select bank3
  8169  17A0  0867               	movf	_maxfmspeed^(0+384),w
  8170  17A1  2FB5               	goto	L17
  8171  17A2                     l4341:	
  8172                           ;MOTORCONTROL.C: 79: }
  8173                           
  8174                           
  8175                           ;MOTORCONTROL.C: 80: else if(scaled_baseval2<minfmspeed)
  8176  17A2  0023               	movlb	3	; select bank3
  8177  17A3  086A               	movf	(_minfmspeed+1)^(0+384),w
  8178  17A4  0022               	movlb	2	; select bank2
  8179  17A5  0227               	subwf	(_scaled_baseval2+1)^(0+256),w
  8180  17A6  1D03               	skipz
  8181  17A7  2FAC               	goto	u5835
  8182  17A8  0023               	movlb	3	; select bank3
  8183  17A9  0869               	movf	_minfmspeed^(0+384),w
  8184  17AA  0022               	movlb	2	; select bank2
  8185  17AB  0226               	subwf	_scaled_baseval2^(0+256),w
  8186  17AC                     u5835:	
  8187  17AC  1803               	skipnc
  8188  17AD  2FB8               	goto	l4345
  8189                           
  8190                           ;MOTORCONTROL.C: 81: {
  8191                           ;MOTORCONTROL.C: 82: scaled_baseval2=minfmspeed;
  8192  17AE  0023               	movlb	3	; select bank3
  8193  17AF  086A               	movf	(_minfmspeed+1)^(0+384),w
  8194  17B0  0022               	movlb	2	; select bank2
  8195  17B1  01A7               	clrf	(_scaled_baseval2+1)^(0+256)
  8196  17B2  07A7               	addwf	(_scaled_baseval2+1)^(0+256),f
  8197  17B3  0023               	movlb	3	; select bank3
  8198  17B4  0869               	movf	_minfmspeed^(0+384),w
  8199  17B5                     L17:	
  8200  17B5  0022               	movlb	2	; select bank2
  8201  17B6  01A6               	clrf	_scaled_baseval2^(0+256)
  8202  17B7  07A6               	addwf	_scaled_baseval2^(0+256),f
  8203  17B8                     l4345:	
  8204                           
  8205                           ;MOTORCONTROL.C: 83: }
  8206                           ;MOTORCONTROL.C: 84: if(cyclestrtf==1 && closeloopf==1)
  8207  17B8  083C               	movf	_cyclestrtf^(0+256),w
  8208  17B9  3A01               	xorlw	1
  8209  17BA  1D03               	skipz
  8210  17BB  2FC8               	goto	l4351
  8211  17BC  0836               	movf	_closeloopf^(0+256),w
  8212  17BD  3A01               	xorlw	1
  8213  17BE  1D03               	skipz
  8214  17BF  2FC8               	goto	l4351
  8215                           
  8216                           ;MOTORCONTROL.C: 85: {
  8217                           ;MOTORCONTROL.C: 86: Update_PWM(scaled_baseval2);
  8218  17C0  0827               	movf	(_scaled_baseval2+1)^(0+256),w
  8219  17C1  0021               	movlb	1	; select bank1
  8220  17C2  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  8221  17C3  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  8222  17C4  0022               	movlb	2	; select bank2
  8223  17C5  0826               	movf	_scaled_baseval2^(0+256),w
  8224  17C6  0021               	movlb	1	; select bank1
  8225  17C7  2FE1               	goto	L18
  8226  17C8                     l4351:	
  8227                           ;MOTORCONTROL.C: 88: }
  8228                           
  8229                           
  8230                           ;MOTORCONTROL.C: 89: else if(cyclestrtf==0)
  8231  17C8  0022               	movlb	2	; select bank2
  8232  17C9  08BC               	movf	_cyclestrtf^(0+256),f
  8233  17CA  1D03               	skipz
  8234  17CB  2FE5               	goto	l4355
  8235                           
  8236                           ;MOTORCONTROL.C: 90: {
  8237                           ;MOTORCONTROL.C: 91: Update_PWM(scaled_baseval2*0);
  8238  17CC  0827               	movf	(_scaled_baseval2+1)^(0+256),w
  8239  17CD  0021               	movlb	1	; select bank1
  8240  17CE  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  8241  17CF  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  8242  17D0  0022               	movlb	2	; select bank2
  8243  17D1  0826               	movf	_scaled_baseval2^(0+256),w
  8244  17D2  0021               	movlb	1	; select bank1
  8245  17D3  01A0               	clrf	___wmul@multiplier^(0+128)
  8246  17D4  07A0               	addwf	___wmul@multiplier^(0+128),f
  8247  17D5  3000               	movlw	0
  8248  17D6  00A2               	movwf	___wmul@multiplicand^(0+128)
  8249  17D7  3000               	movlw	0
  8250  17D8  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  8251  17D9  3199  2193  3194   	fcall	___wmul
  8252  17DC  0021               	movlb	1	; select bank1
  8253  17DD  0821               	movf	(?___wmul+1)^(0+128),w
  8254  17DE  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  8255  17DF  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  8256  17E0  0820               	movf	?___wmul^(0+128),w
  8257  17E1                     L18:	
  8258  17E1  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  8259  17E2  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  8260  17E3  3199  21D3         	fcall	_Update_PWM
  8261  17E5                     l4355:	
  8262                           
  8263                           ;MOTORCONTROL.C: 92: }
  8264                           ;MOTORCONTROL.C: 93: }
  8265                           ;MOTORCONTROL.C: 94: pidParams2.previous_error2 = pidParams2.error2;
  8266  17E5  3096               	movlw	150
  8267  17E6  0086               	movwf	6
  8268  17E7  3023               	movlw	35
  8269  17E8  0087               	movwf	7
  8270  17E9  314C               	addfsr 1,12
  8271  17EA  3F40               	moviw [0]fsr1
  8272  17EB  0021               	movlb	1	; select bank1
  8273  17EC  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8274  17ED  3F41               	moviw [1]fsr1
  8275  17EE  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8276  17EF  3F42               	moviw [2]fsr1
  8277  17F0  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8278  17F1  3F43               	moviw [3]fsr1
  8279  17F2  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8280  17F3  30D4               	movlw	212
  8281  17F4  0086               	movwf	6
  8282  17F5  3023               	movlw	35
  8283  17F6  0087               	movwf	7
  8284  17F7  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8285  17F8  3FC0               	movwi [0]fsr1
  8286  17F9  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8287  17FA  3FC1               	movwi [1]fsr1
  8288  17FB  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8289  17FC  3FC2               	movwi [2]fsr1
  8290  17FD  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8291  17FE  3FC3               	movwi [3]fsr1
  8292  17FF  0008               	return
  8293  1800                     __end_of_Adaptive_base_pid:	
  8294                           
  8295                           	psect	text23
  8296  1993                     __ptext23:	
  8297 ;; *************** function ___wmul *****************
  8298 ;; Defined at:
  8299 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;  multiplier      2    0[BANK1 ] unsigned int 
  8302 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  8303 ;; Auto vars:     Size  Location     Type
  8304 ;;  product         2    4[BANK1 ] unsigned int 
  8305 ;; Return value:  Size  Location     Type
  8306 ;;                  2    0[BANK1 ] unsigned int 
  8307 ;; Registers used:
  8308 ;;		wreg, status,2, status,0
  8309 ;; Tracked objects:
  8310 ;;		On entry : 0/0
  8311 ;;		On exit  : 0/0
  8312 ;;		Unchanged: 0/0
  8313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8314 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8315 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;Total ram usage:        6 bytes
  8319 ;; Hardware stack levels used:    1
  8320 ;; Hardware stack levels required when called:    3
  8321 ;; This function calls:
  8322 ;;		Nothing
  8323 ;; This function is called by:
  8324 ;;		_Adaptive_base_pid
  8325 ;;		_main
  8326 ;;		_key_application
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330                           
  8331                           ;psect for function ___wmul
  8332  1993                     ___wmul:	
  8333                           
  8334                           ;incstack = 0
  8335                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8336  1993  0021               	movlb	1	; select bank1
  8337  1994  01A4               	clrf	___wmul@product^(0+128)
  8338  1995  01A5               	clrf	(___wmul@product+1)^(0+128)
  8339  1996                     l3689:	
  8340  1996  1C20               	btfss	___wmul@multiplier^(0+128),0
  8341  1997  299C               	goto	l916
  8342  1998  0822               	movf	___wmul@multiplicand^(0+128),w
  8343  1999  07A4               	addwf	___wmul@product^(0+128),f
  8344  199A  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  8345  199B  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  8346  199C                     l916:	
  8347  199C  3001               	movlw	1
  8348  199D                     u4435:	
  8349  199D  35A2               	lslf	___wmul@multiplicand^(0+128),f
  8350  199E  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  8351  199F  0B89               	decfsz	9,f
  8352  19A0  299D               	goto	u4435
  8353  19A1  3001               	movlw	1
  8354  19A2                     u4445:	
  8355  19A2  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  8356  19A3  0CA0               	rrf	___wmul@multiplier^(0+128),f
  8357  19A4  0B89               	decfsz	9,f
  8358  19A5  29A2               	goto	u4445
  8359  19A6  0821               	movf	(___wmul@multiplier+1)^(0+128),w
  8360  19A7  0420               	iorwf	___wmul@multiplier^(0+128),w
  8361  19A8  1D03               	skipz
  8362  19A9  2996               	goto	l3689
  8363  19AA  0825               	movf	(___wmul@product+1)^(0+128),w
  8364  19AB  01A1               	clrf	(?___wmul+1)^(0+128)
  8365  19AC  07A1               	addwf	(?___wmul+1)^(0+128),f
  8366  19AD  0824               	movf	___wmul@product^(0+128),w
  8367  19AE  01A0               	clrf	?___wmul^(0+128)
  8368  19AF  07A0               	addwf	?___wmul^(0+128),f
  8369  19B0  0008               	return
  8370  19B1                     __end_of___wmul:	
  8371                           
  8372                           	psect	text24
  8373  1F79                     __ptext24:	
  8374 ;; *************** function ___fttol *****************
  8375 ;; Defined at:
  8376 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;  f1              3   37[BANK1 ] float 
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;  lval            4   46[BANK1 ] unsigned long 
  8381 ;;  exp1            1   50[BANK1 ] unsigned char 
  8382 ;;  sign1           1   45[BANK1 ] unsigned char 
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  4   37[BANK1 ] long 
  8385 ;; Registers used:
  8386 ;;		wreg, status,2, status,0
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8392 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8393 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8394 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;Total ram usage:       14 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    3
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_Adaptive_base_pid
  8403 ;;		_main
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           
  8408                           ;psect for function ___fttol
  8409  1F79                     ___fttol:	
  8410                           
  8411                           ;incstack = 0
  8412                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8413  1F79  0021               	movlb	1	; select bank1
  8414  1F7A  0845               	movf	___fttol@f1^(0+128),w
  8415  1F7B  00C9               	movwf	??___fttol^(0+128)
  8416  1F7C  0846               	movf	(___fttol@f1+1)^(0+128),w
  8417  1F7D  00CA               	movwf	(??___fttol^(0+128)+1)
  8418  1F7E  0847               	movf	(___fttol@f1+2)^(0+128),w
  8419  1F7F  00CB               	movwf	(??___fttol^(0+128)+2)
  8420  1F80  1003               	clrc
  8421  1F81  0D4A               	rlf	(??___fttol^(0+128)+1),w
  8422  1F82  0D4B               	rlf	(??___fttol^(0+128)+2),w
  8423  1F83  00CC               	movwf	(??___fttol+3)^(0+128)
  8424  1F84  084C               	movf	(??___fttol+3)^(0+128),w
  8425  1F85  00D2               	movwf	___fttol@exp1^(0+128)
  8426  1F86  08D2               	movf	___fttol@exp1^(0+128),f
  8427  1F87  1D03               	skipz
  8428  1F88  2F92               	goto	l3953
  8429  1F89  3000               	movlw	0
  8430  1F8A  00C8               	movwf	(?___fttol+3)^(0+128)
  8431  1F8B  3000               	movlw	0
  8432  1F8C  00C7               	movwf	(?___fttol+2)^(0+128)
  8433  1F8D  3000               	movlw	0
  8434  1F8E  00C6               	movwf	(?___fttol+1)^(0+128)
  8435  1F8F  3000               	movlw	0
  8436  1F90  00C5               	movwf	?___fttol^(0+128)
  8437  1F91  0008               	return
  8438  1F92                     l3953:	
  8439  1F92  0845               	movf	___fttol@f1^(0+128),w
  8440  1F93  00C9               	movwf	??___fttol^(0+128)
  8441  1F94  0846               	movf	(___fttol@f1+1)^(0+128),w
  8442  1F95  00CA               	movwf	(??___fttol^(0+128)+1)
  8443  1F96  0847               	movf	(___fttol@f1+2)^(0+128),w
  8444  1F97  00CB               	movwf	(??___fttol^(0+128)+2)
  8445  1F98  3017               	movlw	23
  8446  1F99                     u5075:	
  8447  1F99  36CB               	lsrf	(??___fttol^(0+128)+2),f
  8448  1F9A  0CCA               	rrf	(??___fttol^(0+128)+1),f
  8449  1F9B  0CC9               	rrf	??___fttol^(0+128),f
  8450  1F9C  0B89               	decfsz	9,f
  8451  1F9D  2F99               	goto	u5075
  8452  1F9E  0849               	movf	??___fttol^(0+128),w
  8453  1F9F  00CC               	movwf	(??___fttol+3)^(0+128)
  8454  1FA0  084C               	movf	(??___fttol+3)^(0+128),w
  8455  1FA1  00CD               	movwf	___fttol@sign1^(0+128)
  8456  1FA2  17C6               	bsf	(___fttol@f1^(0+128)+1),7
  8457  1FA3  30FF               	movlw	255
  8458  1FA4  05C5               	andwf	___fttol@f1^(0+128),f
  8459  1FA5  30FF               	movlw	255
  8460  1FA6  05C6               	andwf	(___fttol@f1+1)^(0+128),f
  8461  1FA7  3000               	movlw	0
  8462  1FA8  05C7               	andwf	(___fttol@f1+2)^(0+128),f
  8463  1FA9  0845               	movf	___fttol@f1^(0+128),w
  8464  1FAA  00CE               	movwf	___fttol@lval^(0+128)
  8465  1FAB  0846               	movf	(___fttol@f1+1)^(0+128),w
  8466  1FAC  00CF               	movwf	(___fttol@lval^(0+128)+1)
  8467  1FAD  0847               	movf	(___fttol@f1+2)^(0+128),w
  8468  1FAE  00D0               	movwf	(___fttol@lval^(0+128)+2)
  8469  1FAF  01D1               	clrf	(___fttol@lval^(0+128)+3)
  8470  1FB0  308E               	movlw	142
  8471  1FB1  02D2               	subwf	___fttol@exp1^(0+128),f
  8472  1FB2  1FD2               	btfss	___fttol@exp1^(0+128),7
  8473  1FB3  2FD0               	goto	l3973
  8474  1FB4  0852               	movf	___fttol@exp1^(0+128),w
  8475  1FB5  3A80               	xorlw	128
  8476  1FB6  3E8F               	addlw	143
  8477  1FB7  1803               	skipnc
  8478  1FB8  2FC2               	goto	l3971
  8479  1FB9  3000               	movlw	0
  8480  1FBA  00C8               	movwf	(?___fttol+3)^(0+128)
  8481  1FBB  3000               	movlw	0
  8482  1FBC  00C7               	movwf	(?___fttol+2)^(0+128)
  8483  1FBD  3000               	movlw	0
  8484  1FBE  00C6               	movwf	(?___fttol+1)^(0+128)
  8485  1FBF  3000               	movlw	0
  8486  1FC0  00C5               	movwf	?___fttol^(0+128)
  8487  1FC1  0008               	return
  8488  1FC2                     l3971:	
  8489  1FC2  3001               	movlw	1
  8490  1FC3                     u5105:	
  8491  1FC3  36D1               	lsrf	(___fttol@lval+3)^(0+128),f
  8492  1FC4  0CD0               	rrf	(___fttol@lval+2)^(0+128),f
  8493  1FC5  0CCF               	rrf	(___fttol@lval+1)^(0+128),f
  8494  1FC6  0CCE               	rrf	___fttol@lval^(0+128),f
  8495  1FC7  0B89               	decfsz	9,f
  8496  1FC8  2FC3               	goto	u5105
  8497  1FC9  3001               	movlw	1
  8498  1FCA  00C9               	movwf	??___fttol^(0+128)
  8499  1FCB  0849               	movf	??___fttol^(0+128),w
  8500  1FCC  07D2               	addwf	___fttol@exp1^(0+128),f
  8501  1FCD  1903               	btfsc	3,2
  8502  1FCE  2FE9               	goto	l3983
  8503  1FCF  2FC2               	goto	l3971
  8504  1FD0                     l3973:	
  8505  1FD0  3018               	movlw	24
  8506  1FD1  0252               	subwf	___fttol@exp1^(0+128),w
  8507  1FD2  1C03               	skipc
  8508  1FD3  2FE6               	goto	l3981
  8509  1FD4  3000               	movlw	0
  8510  1FD5  00C8               	movwf	(?___fttol+3)^(0+128)
  8511  1FD6  3000               	movlw	0
  8512  1FD7  00C7               	movwf	(?___fttol+2)^(0+128)
  8513  1FD8  3000               	movlw	0
  8514  1FD9  00C6               	movwf	(?___fttol+1)^(0+128)
  8515  1FDA  3000               	movlw	0
  8516  1FDB  00C5               	movwf	?___fttol^(0+128)
  8517  1FDC  0008               	return
  8518  1FDD                     l3979:	
  8519  1FDD  3001               	movlw	1
  8520  1FDE                     u5135:	
  8521  1FDE  35CE               	lslf	___fttol@lval^(0+128),f
  8522  1FDF  0DCF               	rlf	(___fttol@lval+1)^(0+128),f
  8523  1FE0  0DD0               	rlf	(___fttol@lval+2)^(0+128),f
  8524  1FE1  0DD1               	rlf	(___fttol@lval+3)^(0+128),f
  8525  1FE2  0B89               	decfsz	9,f
  8526  1FE3  2FDE               	goto	u5135
  8527  1FE4  3001               	movlw	1
  8528  1FE5  02D2               	subwf	___fttol@exp1^(0+128),f
  8529  1FE6                     l3981:	
  8530  1FE6  08D2               	movf	___fttol@exp1^(0+128),f
  8531  1FE7  1D03               	skipz
  8532  1FE8  2FDD               	goto	l3979
  8533  1FE9                     l3983:	
  8534  1FE9  084D               	movf	___fttol@sign1^(0+128),w
  8535  1FEA  1903               	btfsc	3,2
  8536  1FEB  2FF7               	goto	l3987
  8537  1FEC  09CE               	comf	___fttol@lval^(0+128),f
  8538  1FED  09CF               	comf	(___fttol@lval+1)^(0+128),f
  8539  1FEE  09D0               	comf	(___fttol@lval+2)^(0+128),f
  8540  1FEF  09D1               	comf	(___fttol@lval+3)^(0+128),f
  8541  1FF0  0ACE               	incf	___fttol@lval^(0+128),f
  8542  1FF1  1903               	skipnz
  8543  1FF2  0ACF               	incf	(___fttol@lval+1)^(0+128),f
  8544  1FF3  1903               	skipnz
  8545  1FF4  0AD0               	incf	(___fttol@lval+2)^(0+128),f
  8546  1FF5  1903               	skipnz
  8547  1FF6  0AD1               	incf	(___fttol@lval+3)^(0+128),f
  8548  1FF7                     l3987:	
  8549  1FF7  0851               	movf	(___fttol@lval+3)^(0+128),w
  8550  1FF8  00C8               	movwf	(?___fttol+3)^(0+128)
  8551  1FF9  0850               	movf	(___fttol@lval+2)^(0+128),w
  8552  1FFA  00C7               	movwf	(?___fttol+2)^(0+128)
  8553  1FFB  084F               	movf	(___fttol@lval+1)^(0+128),w
  8554  1FFC  00C6               	movwf	(?___fttol+1)^(0+128)
  8555  1FFD  084E               	movf	___fttol@lval^(0+128),w
  8556  1FFE  00C5               	movwf	?___fttol^(0+128)
  8557  1FFF  0008               	return
  8558  2000                     __end_of___fttol:	
  8559                           
  8560                           	psect	text25
  8561  18A2                     __ptext25:	
  8562 ;; *************** function ___ftneg *****************
  8563 ;; Defined at:
  8564 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  f1              3    0[BANK1 ] float 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  3    0[BANK1 ] float 
  8571 ;; Registers used:
  8572 ;;		wreg
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8578 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;Total ram usage:        3 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    3
  8585 ;; This function calls:
  8586 ;;		Nothing
  8587 ;; This function is called by:
  8588 ;;		_Adaptive_base_pid
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           
  8593                           ;psect for function ___ftneg
  8594  18A2                     ___ftneg:	
  8595                           
  8596                           ;incstack = 0
  8597                           ; Regs used in ___ftneg: [wreg]
  8598  18A2  0021               	movlb	1	; select bank1
  8599  18A3  0822               	movf	(___ftneg@f1+2)^(0+128),w
  8600  18A4  0421               	iorwf	(___ftneg@f1+1)^(0+128),w
  8601  18A5  0420               	iorwf	___ftneg@f1^(0+128),w
  8602  18A6  1903               	skipnz
  8603  18A7  0008               	return
  8604  18A8  3080               	movlw	128
  8605  18A9  06A2               	xorwf	(___ftneg@f1+2)^(0+128),f
  8606  18AA  0008               	return
  8607  18AB                     __end_of___ftneg:	
  8608                           
  8609                           	psect	text26
  8610  12E3                     __ptext26:	
  8611 ;; *************** function ___ftmul *****************
  8612 ;; Defined at:
  8613 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;  f1              3   21[BANK1 ] float 
  8616 ;;  f2              3   24[BANK1 ] float 
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;  f3_as_produc    3   32[BANK1 ] unsigned um
  8619 ;;  sign            1   36[BANK1 ] unsigned char 
  8620 ;;  cntr            1   35[BANK1 ] unsigned char 
  8621 ;;  exp             1   31[BANK1 ] unsigned char 
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  3   21[BANK1 ] float 
  8624 ;; Registers used:
  8625 ;;		wreg, status,2, status,0, pclath, cstack
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8631 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;Total ram usage:       16 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; Hardware stack levels required when called:    4
  8638 ;; This function calls:
  8639 ;;		___ftpack
  8640 ;; This function is called by:
  8641 ;;		_Adaptive_base_pid
  8642 ;;		_main
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           
  8647                           ;psect for function ___ftmul
  8648  12E3                     ___ftmul:	
  8649                           
  8650                           ;incstack = 0
  8651                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8652  12E3  0021               	movlb	1	; select bank1
  8653  12E4  0835               	movf	___ftmul@f1^(0+128),w
  8654  12E5  00BB               	movwf	??___ftmul^(0+128)
  8655  12E6  0836               	movf	(___ftmul@f1+1)^(0+128),w
  8656  12E7  00BC               	movwf	(??___ftmul^(0+128)+1)
  8657  12E8  0837               	movf	(___ftmul@f1+2)^(0+128),w
  8658  12E9  00BD               	movwf	(??___ftmul^(0+128)+2)
  8659  12EA  1003               	clrc
  8660  12EB  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  8661  12EC  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  8662  12ED  00BE               	movwf	(??___ftmul+3)^(0+128)
  8663  12EE  083E               	movf	(??___ftmul+3)^(0+128),w
  8664  12EF  00BF               	movwf	___ftmul@exp^(0+128)
  8665  12F0  08BF               	movf	___ftmul@exp^(0+128),f
  8666  12F1  1D03               	skipz
  8667  12F2  2AFA               	goto	l3895
  8668  12F3  3000               	movlw	0
  8669  12F4  00B5               	movwf	?___ftmul^(0+128)
  8670  12F5  3000               	movlw	0
  8671  12F6  00B6               	movwf	(?___ftmul+1)^(0+128)
  8672  12F7  3000               	movlw	0
  8673  12F8  00B7               	movwf	(?___ftmul+2)^(0+128)
  8674  12F9  0008               	return
  8675  12FA                     l3895:	
  8676  12FA  0838               	movf	___ftmul@f2^(0+128),w
  8677  12FB  00BB               	movwf	??___ftmul^(0+128)
  8678  12FC  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8679  12FD  00BC               	movwf	(??___ftmul^(0+128)+1)
  8680  12FE  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8681  12FF  00BD               	movwf	(??___ftmul^(0+128)+2)
  8682  1300  1003               	clrc
  8683  1301  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  8684  1302  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  8685  1303  00BE               	movwf	(??___ftmul+3)^(0+128)
  8686  1304  083E               	movf	(??___ftmul+3)^(0+128),w
  8687  1305  00C4               	movwf	___ftmul@sign^(0+128)
  8688  1306  08C4               	movf	___ftmul@sign^(0+128),f
  8689  1307  1D03               	skipz
  8690  1308  2B10               	goto	l3901
  8691  1309  3000               	movlw	0
  8692  130A  00B5               	movwf	?___ftmul^(0+128)
  8693  130B  3000               	movlw	0
  8694  130C  00B6               	movwf	(?___ftmul+1)^(0+128)
  8695  130D  3000               	movlw	0
  8696  130E  00B7               	movwf	(?___ftmul+2)^(0+128)
  8697  130F  0008               	return
  8698  1310                     l3901:	
  8699  1310  0844               	movf	___ftmul@sign^(0+128),w
  8700  1311  3E7B               	addlw	123
  8701  1312  00BB               	movwf	??___ftmul^(0+128)
  8702  1313  083B               	movf	??___ftmul^(0+128),w
  8703  1314  07BF               	addwf	___ftmul@exp^(0+128),f
  8704  1315  0835               	movf	___ftmul@f1^(0+128),w
  8705  1316  00BB               	movwf	??___ftmul^(0+128)
  8706  1317  0836               	movf	(___ftmul@f1+1)^(0+128),w
  8707  1318  00BC               	movwf	(??___ftmul^(0+128)+1)
  8708  1319  0837               	movf	(___ftmul@f1+2)^(0+128),w
  8709  131A  00BD               	movwf	(??___ftmul^(0+128)+2)
  8710  131B  3010               	movlw	16
  8711  131C                     u4955:	
  8712  131C  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  8713  131D  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  8714  131E  0CBB               	rrf	??___ftmul^(0+128),f
  8715  131F  0B89               	decfsz	9,f
  8716  1320  2B1C               	goto	u4955
  8717  1321  083B               	movf	??___ftmul^(0+128),w
  8718  1322  00BE               	movwf	(??___ftmul+3)^(0+128)
  8719  1323  083E               	movf	(??___ftmul+3)^(0+128),w
  8720  1324  00C4               	movwf	___ftmul@sign^(0+128)
  8721  1325  0838               	movf	___ftmul@f2^(0+128),w
  8722  1326  00BB               	movwf	??___ftmul^(0+128)
  8723  1327  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8724  1328  00BC               	movwf	(??___ftmul^(0+128)+1)
  8725  1329  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8726  132A  00BD               	movwf	(??___ftmul^(0+128)+2)
  8727  132B  3010               	movlw	16
  8728  132C                     u4965:	
  8729  132C  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  8730  132D  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  8731  132E  0CBB               	rrf	??___ftmul^(0+128),f
  8732  132F  0B89               	decfsz	9,f
  8733  1330  2B2C               	goto	u4965
  8734  1331  083B               	movf	??___ftmul^(0+128),w
  8735  1332  00BE               	movwf	(??___ftmul+3)^(0+128)
  8736  1333  083E               	movf	(??___ftmul+3)^(0+128),w
  8737  1334  06C4               	xorwf	___ftmul@sign^(0+128),f
  8738  1335  3080               	movlw	128
  8739  1336  00BB               	movwf	??___ftmul^(0+128)
  8740  1337  083B               	movf	??___ftmul^(0+128),w
  8741  1338  05C4               	andwf	___ftmul@sign^(0+128),f
  8742  1339  17B6               	bsf	(___ftmul@f1^(0+128)+1),7
  8743  133A  17B9               	bsf	(___ftmul@f2^(0+128)+1),7
  8744  133B  30FF               	movlw	255
  8745  133C  05B8               	andwf	___ftmul@f2^(0+128),f
  8746  133D  30FF               	movlw	255
  8747  133E  05B9               	andwf	(___ftmul@f2+1)^(0+128),f
  8748  133F  3000               	movlw	0
  8749  1340  05BA               	andwf	(___ftmul@f2+2)^(0+128),f
  8750  1341  3000               	movlw	0
  8751  1342  00C0               	movwf	___ftmul@f3_as_product^(0+128)
  8752  1343  3000               	movlw	0
  8753  1344  00C1               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  8754  1345  3000               	movlw	0
  8755  1346  00C2               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  8756  1347  3007               	movlw	7
  8757  1348  00BB               	movwf	??___ftmul^(0+128)
  8758  1349  083B               	movf	??___ftmul^(0+128),w
  8759  134A  00C3               	movwf	___ftmul@cntr^(0+128)
  8760  134B                     l3913:	
  8761  134B  1C35               	btfss	___ftmul@f1^(0+128),0
  8762  134C  2B53               	goto	l3917
  8763  134D  0838               	movf	___ftmul@f2^(0+128),w
  8764  134E  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  8765  134F  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8766  1350  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8767  1351  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8768  1352  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8769  1353                     l3917:	
  8770  1353  3001               	movlw	1
  8771  1354                     u4985:	
  8772  1354  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  8773  1355  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  8774  1356  0CB5               	rrf	___ftmul@f1^(0+128),f
  8775  1357  0B89               	decfsz	9,f
  8776  1358  2B54               	goto	u4985
  8777  1359  3001               	movlw	1
  8778  135A                     u4995:	
  8779  135A  35B8               	lslf	___ftmul@f2^(0+128),f
  8780  135B  0DB9               	rlf	(___ftmul@f2+1)^(0+128),f
  8781  135C  0DBA               	rlf	(___ftmul@f2+2)^(0+128),f
  8782  135D  0B89               	decfsz	9,f
  8783  135E  2B5A               	goto	u4995
  8784  135F  3001               	movlw	1
  8785  1360  02C3               	subwf	___ftmul@cntr^(0+128),f
  8786  1361  1D03               	btfss	3,2
  8787  1362  2B4B               	goto	l3913
  8788  1363  3009               	movlw	9
  8789  1364  00BB               	movwf	??___ftmul^(0+128)
  8790  1365  083B               	movf	??___ftmul^(0+128),w
  8791  1366  00C3               	movwf	___ftmul@cntr^(0+128)
  8792  1367                     l3925:	
  8793  1367  1C35               	btfss	___ftmul@f1^(0+128),0
  8794  1368  2B6F               	goto	l3929
  8795  1369  0838               	movf	___ftmul@f2^(0+128),w
  8796  136A  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  8797  136B  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8798  136C  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8799  136D  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8800  136E  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8801  136F                     l3929:	
  8802  136F  3001               	movlw	1
  8803  1370                     u5025:	
  8804  1370  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  8805  1371  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  8806  1372  0CB5               	rrf	___ftmul@f1^(0+128),f
  8807  1373  0B89               	decfsz	9,f
  8808  1374  2B70               	goto	u5025
  8809  1375  3001               	movlw	1
  8810  1376                     u5035:	
  8811  1376  36C2               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  8812  1377  0CC1               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  8813  1378  0CC0               	rrf	___ftmul@f3_as_product^(0+128),f
  8814  1379  0B89               	decfsz	9,f
  8815  137A  2B76               	goto	u5035
  8816  137B  3001               	movlw	1
  8817  137C  02C3               	subwf	___ftmul@cntr^(0+128),f
  8818  137D  1D03               	btfss	3,2
  8819  137E  2B67               	goto	l3925
  8820  137F  0840               	movf	___ftmul@f3_as_product^(0+128),w
  8821  1380  00A0               	movwf	___ftpack@arg^(0+128)
  8822  1381  0841               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  8823  1382  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  8824  1383  0842               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  8825  1384  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  8826  1385  083F               	movf	___ftmul@exp^(0+128),w
  8827  1386  00BB               	movwf	??___ftmul^(0+128)
  8828  1387  083B               	movf	??___ftmul^(0+128),w
  8829  1388  00A3               	movwf	___ftpack@exp^(0+128)
  8830  1389  0844               	movf	___ftmul@sign^(0+128),w
  8831  138A  00BC               	movwf	(??___ftmul+1)^(0+128)
  8832  138B  083C               	movf	(??___ftmul+1)^(0+128),w
  8833  138C  00A4               	movwf	___ftpack@sign^(0+128)
  8834  138D  319B  23C6         	fcall	___ftpack
  8835  138F  0021               	movlb	1	; select bank1
  8836  1390  0820               	movf	?___ftpack^(0+128),w
  8837  1391  00B5               	movwf	?___ftmul^(0+128)
  8838  1392  0821               	movf	(?___ftpack+1)^(0+128),w
  8839  1393  00B6               	movwf	(?___ftmul+1)^(0+128)
  8840  1394  0822               	movf	(?___ftpack+2)^(0+128),w
  8841  1395  00B7               	movwf	(?___ftmul+2)^(0+128)
  8842  1396  0008               	return
  8843  1397                     __end_of___ftmul:	
  8844                           
  8845                           	psect	text27
  8846  1A31                     __ptext27:	
  8847 ;; *************** function ___ftge *****************
  8848 ;; Defined at:
  8849 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftge.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;  ff1             3   16[BANK1 ] float 
  8852 ;;  ff2             3   19[BANK1 ] float 
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;		None
  8855 ;; Return value:  Size  Location     Type
  8856 ;;		None               void
  8857 ;; Registers used:
  8858 ;;		wreg, status,2, status,0
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8864 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8866 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8867 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;Total ram usage:        9 bytes
  8869 ;; Hardware stack levels used:    1
  8870 ;; Hardware stack levels required when called:    3
  8871 ;; This function calls:
  8872 ;;		Nothing
  8873 ;; This function is called by:
  8874 ;;		_Adaptive_base_pid
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           
  8879                           ;psect for function ___ftge
  8880  1A31                     ___ftge:	
  8881                           
  8882                           ;incstack = 0
  8883                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8884  1A31  0021               	movlb	1	; select bank1
  8885  1A32  1FB2               	btfss	(___ftge@ff1+2)^(0+128),7
  8886  1A33  2A48               	goto	l3873
  8887  1A34  0930               	comf	___ftge@ff1^(0+128),w
  8888  1A35  00B6               	movwf	??___ftge^(0+128)
  8889  1A36  0931               	comf	(___ftge@ff1+1)^(0+128),w
  8890  1A37  00B7               	movwf	(??___ftge^(0+128)+1)
  8891  1A38  0932               	comf	(___ftge@ff1+2)^(0+128),w
  8892  1A39  00B8               	movwf	(??___ftge^(0+128)+2)
  8893  1A3A  0AB6               	incf	??___ftge^(0+128),f
  8894  1A3B  1903               	skipnz
  8895  1A3C  0AB7               	incf	(??___ftge^(0+128)+1),f
  8896  1A3D  1903               	skipnz
  8897  1A3E  0AB8               	incf	(??___ftge^(0+128)+2),f
  8898  1A3F  3000               	movlw	0
  8899  1A40  0736               	addwf	??___ftge^(0+128),w
  8900  1A41  00B0               	movwf	___ftge@ff1^(0+128)
  8901  1A42  3000               	movlw	0
  8902  1A43  3D37               	addwfc	(??___ftge+1)^(0+128),w
  8903  1A44  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  8904  1A45  3080               	movlw	128
  8905  1A46  3D38               	addwfc	(??___ftge+2)^(0+128),w
  8906  1A47  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  8907  1A48                     l3873:	
  8908  1A48  1FB5               	btfss	(___ftge@ff2+2)^(0+128),7
  8909  1A49  2A5E               	goto	l3877
  8910  1A4A  0933               	comf	___ftge@ff2^(0+128),w
  8911  1A4B  00B6               	movwf	??___ftge^(0+128)
  8912  1A4C  0934               	comf	(___ftge@ff2+1)^(0+128),w
  8913  1A4D  00B7               	movwf	(??___ftge^(0+128)+1)
  8914  1A4E  0935               	comf	(___ftge@ff2+2)^(0+128),w
  8915  1A4F  00B8               	movwf	(??___ftge^(0+128)+2)
  8916  1A50  0AB6               	incf	??___ftge^(0+128),f
  8917  1A51  1903               	skipnz
  8918  1A52  0AB7               	incf	(??___ftge^(0+128)+1),f
  8919  1A53  1903               	skipnz
  8920  1A54  0AB8               	incf	(??___ftge^(0+128)+2),f
  8921  1A55  3000               	movlw	0
  8922  1A56  0736               	addwf	??___ftge^(0+128),w
  8923  1A57  00B3               	movwf	___ftge@ff2^(0+128)
  8924  1A58  3000               	movlw	0
  8925  1A59  3D37               	addwfc	(??___ftge+1)^(0+128),w
  8926  1A5A  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  8927  1A5B  3080               	movlw	128
  8928  1A5C  3D38               	addwfc	(??___ftge+2)^(0+128),w
  8929  1A5D  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  8930  1A5E                     l3877:	
  8931  1A5E  3080               	movlw	128
  8932  1A5F  06B2               	xorwf	(___ftge@ff1+2)^(0+128),f
  8933  1A60  3080               	movlw	128
  8934  1A61  06B5               	xorwf	(___ftge@ff2+2)^(0+128),f
  8935  1A62  0835               	movf	(___ftge@ff2+2)^(0+128),w
  8936  1A63  0232               	subwf	(___ftge@ff1+2)^(0+128),w
  8937  1A64  1D03               	skipz
  8938  1A65  0008               	return
  8939  1A66  0834               	movf	(___ftge@ff2+1)^(0+128),w
  8940  1A67  0231               	subwf	(___ftge@ff1+1)^(0+128),w
  8941  1A68  1D03               	skipz
  8942  1A69  0008               	return
  8943  1A6A  0833               	movf	___ftge@ff2^(0+128),w
  8944  1A6B  0230               	subwf	___ftge@ff1^(0+128),w
  8945  1A6C  0008               	return
  8946  1A6D                     __end_of___ftge:	
  8947                           
  8948                           	psect	text28
  8949  10DC                     __ptext28:	
  8950 ;; *************** function ___ftdiv *****************
  8951 ;; Defined at:
  8952 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;  f2              3   37[BANK1 ] float 
  8955 ;;  f1              3   40[BANK1 ] float 
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;  f3              3   48[BANK1 ] float 
  8958 ;;  sign            1   52[BANK1 ] unsigned char 
  8959 ;;  exp             1   51[BANK1 ] unsigned char 
  8960 ;;  cntr            1   47[BANK1 ] unsigned char 
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  3   37[BANK1 ] float 
  8963 ;; Registers used:
  8964 ;;		wreg, status,2, status,0, pclath, cstack
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8970 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8974 ;;Total ram usage:       16 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; Hardware stack levels required when called:    4
  8977 ;; This function calls:
  8978 ;;		___ftpack
  8979 ;; This function is called by:
  8980 ;;		_Adaptive_base_pid
  8981 ;; This function uses a non-reentrant model
  8982 ;;
  8983                           
  8984                           
  8985                           ;psect for function ___ftdiv
  8986  10DC                     ___ftdiv:	
  8987                           
  8988                           ;incstack = 0
  8989                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8990  10DC  0021               	movlb	1	; select bank1
  8991  10DD  0848               	movf	___ftdiv@f1^(0+128),w
  8992  10DE  00CB               	movwf	??___ftdiv^(0+128)
  8993  10DF  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  8994  10E0  00CC               	movwf	(??___ftdiv^(0+128)+1)
  8995  10E1  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  8996  10E2  00CD               	movwf	(??___ftdiv^(0+128)+2)
  8997  10E3  1003               	clrc
  8998  10E4  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  8999  10E5  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  9000  10E6  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9001  10E7  084E               	movf	(??___ftdiv+3)^(0+128),w
  9002  10E8  00D3               	movwf	___ftdiv@exp^(0+128)
  9003  10E9  08D3               	movf	___ftdiv@exp^(0+128),f
  9004  10EA  1D03               	skipz
  9005  10EB  28F3               	goto	l3833
  9006  10EC  3000               	movlw	0
  9007  10ED  00C5               	movwf	?___ftdiv^(0+128)
  9008  10EE  3000               	movlw	0
  9009  10EF  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9010  10F0  3000               	movlw	0
  9011  10F1  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9012  10F2  0008               	return
  9013  10F3                     l3833:	
  9014  10F3  0845               	movf	___ftdiv@f2^(0+128),w
  9015  10F4  00CB               	movwf	??___ftdiv^(0+128)
  9016  10F5  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9017  10F6  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9018  10F7  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9019  10F8  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9020  10F9  1003               	clrc
  9021  10FA  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  9022  10FB  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  9023  10FC  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9024  10FD  084E               	movf	(??___ftdiv+3)^(0+128),w
  9025  10FE  00D4               	movwf	___ftdiv@sign^(0+128)
  9026  10FF  08D4               	movf	___ftdiv@sign^(0+128),f
  9027  1100  1D03               	skipz
  9028  1101  2909               	goto	l3839
  9029  1102  3000               	movlw	0
  9030  1103  00C5               	movwf	?___ftdiv^(0+128)
  9031  1104  3000               	movlw	0
  9032  1105  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9033  1106  3000               	movlw	0
  9034  1107  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9035  1108  0008               	return
  9036  1109                     l3839:	
  9037  1109  3000               	movlw	0
  9038  110A  00D0               	movwf	___ftdiv@f3^(0+128)
  9039  110B  3000               	movlw	0
  9040  110C  00D1               	movwf	(___ftdiv@f3+1)^(0+128)
  9041  110D  3000               	movlw	0
  9042  110E  00D2               	movwf	(___ftdiv@f3+2)^(0+128)
  9043  110F  3089               	movlw	137
  9044  1110  0754               	addwf	___ftdiv@sign^(0+128),w
  9045  1111  00CB               	movwf	??___ftdiv^(0+128)
  9046  1112  084B               	movf	??___ftdiv^(0+128),w
  9047  1113  02D3               	subwf	___ftdiv@exp^(0+128),f
  9048  1114  0848               	movf	___ftdiv@f1^(0+128),w
  9049  1115  00CB               	movwf	??___ftdiv^(0+128)
  9050  1116  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  9051  1117  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9052  1118  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  9053  1119  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9054  111A  3010               	movlw	16
  9055  111B                     u4845:	
  9056  111B  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  9057  111C  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  9058  111D  0CCB               	rrf	??___ftdiv^(0+128),f
  9059  111E  0B89               	decfsz	9,f
  9060  111F  291B               	goto	u4845
  9061  1120  084B               	movf	??___ftdiv^(0+128),w
  9062  1121  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9063  1122  084E               	movf	(??___ftdiv+3)^(0+128),w
  9064  1123  00D4               	movwf	___ftdiv@sign^(0+128)
  9065  1124  0845               	movf	___ftdiv@f2^(0+128),w
  9066  1125  00CB               	movwf	??___ftdiv^(0+128)
  9067  1126  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9068  1127  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9069  1128  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9070  1129  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9071  112A  3010               	movlw	16
  9072  112B                     u4855:	
  9073  112B  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  9074  112C  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  9075  112D  0CCB               	rrf	??___ftdiv^(0+128),f
  9076  112E  0B89               	decfsz	9,f
  9077  112F  292B               	goto	u4855
  9078  1130  084B               	movf	??___ftdiv^(0+128),w
  9079  1131  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9080  1132  084E               	movf	(??___ftdiv+3)^(0+128),w
  9081  1133  06D4               	xorwf	___ftdiv@sign^(0+128),f
  9082  1134  3080               	movlw	128
  9083  1135  00CB               	movwf	??___ftdiv^(0+128)
  9084  1136  084B               	movf	??___ftdiv^(0+128),w
  9085  1137  05D4               	andwf	___ftdiv@sign^(0+128),f
  9086  1138  17C9               	bsf	(___ftdiv@f1^(0+128)+1),7
  9087  1139  30FF               	movlw	255
  9088  113A  05C8               	andwf	___ftdiv@f1^(0+128),f
  9089  113B  30FF               	movlw	255
  9090  113C  05C9               	andwf	(___ftdiv@f1+1)^(0+128),f
  9091  113D  3000               	movlw	0
  9092  113E  05CA               	andwf	(___ftdiv@f1+2)^(0+128),f
  9093  113F  17C6               	bsf	(___ftdiv@f2^(0+128)+1),7
  9094  1140  30FF               	movlw	255
  9095  1141  05C5               	andwf	___ftdiv@f2^(0+128),f
  9096  1142  30FF               	movlw	255
  9097  1143  05C6               	andwf	(___ftdiv@f2+1)^(0+128),f
  9098  1144  3000               	movlw	0
  9099  1145  05C7               	andwf	(___ftdiv@f2+2)^(0+128),f
  9100  1146  3018               	movlw	24
  9101  1147  00CB               	movwf	??___ftdiv^(0+128)
  9102  1148  084B               	movf	??___ftdiv^(0+128),w
  9103  1149  00CF               	movwf	___ftdiv@cntr^(0+128)
  9104  114A                     l3853:	
  9105  114A  3001               	movlw	1
  9106  114B                     u4865:	
  9107  114B  35D0               	lslf	___ftdiv@f3^(0+128),f
  9108  114C  0DD1               	rlf	(___ftdiv@f3+1)^(0+128),f
  9109  114D  0DD2               	rlf	(___ftdiv@f3+2)^(0+128),f
  9110  114E  0B89               	decfsz	9,f
  9111  114F  294B               	goto	u4865
  9112  1150  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9113  1151  024A               	subwf	(___ftdiv@f1+2)^(0+128),w
  9114  1152  1D03               	skipz
  9115  1153  295A               	goto	u4875
  9116  1154  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9117  1155  0249               	subwf	(___ftdiv@f1+1)^(0+128),w
  9118  1156  1D03               	skipz
  9119  1157  295A               	goto	u4875
  9120  1158  0845               	movf	___ftdiv@f2^(0+128),w
  9121  1159  0248               	subwf	___ftdiv@f1^(0+128),w
  9122  115A                     u4875:	
  9123  115A  1C03               	skipc
  9124  115B  2963               	goto	l3861
  9125  115C  0845               	movf	___ftdiv@f2^(0+128),w
  9126  115D  02C8               	subwf	___ftdiv@f1^(0+128),f
  9127  115E  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9128  115F  3BC9               	subwfb	(___ftdiv@f1+1)^(0+128),f
  9129  1160  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9130  1161  3BCA               	subwfb	(___ftdiv@f1+2)^(0+128),f
  9131  1162  1450               	bsf	___ftdiv@f3^(0+128),0
  9132  1163                     l3861:	
  9133  1163  3001               	movlw	1
  9134  1164                     u4885:	
  9135  1164  35C8               	lslf	___ftdiv@f1^(0+128),f
  9136  1165  0DC9               	rlf	(___ftdiv@f1+1)^(0+128),f
  9137  1166  0DCA               	rlf	(___ftdiv@f1+2)^(0+128),f
  9138  1167  0B89               	decfsz	9,f
  9139  1168  2964               	goto	u4885
  9140  1169  3001               	movlw	1
  9141  116A  02CF               	subwf	___ftdiv@cntr^(0+128),f
  9142  116B  1D03               	btfss	3,2
  9143  116C  294A               	goto	l3853
  9144  116D  0850               	movf	___ftdiv@f3^(0+128),w
  9145  116E  00A0               	movwf	___ftpack@arg^(0+128)
  9146  116F  0851               	movf	(___ftdiv@f3+1)^(0+128),w
  9147  1170  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9148  1171  0852               	movf	(___ftdiv@f3+2)^(0+128),w
  9149  1172  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9150  1173  0853               	movf	___ftdiv@exp^(0+128),w
  9151  1174  00CB               	movwf	??___ftdiv^(0+128)
  9152  1175  084B               	movf	??___ftdiv^(0+128),w
  9153  1176  00A3               	movwf	___ftpack@exp^(0+128)
  9154  1177  0854               	movf	___ftdiv@sign^(0+128),w
  9155  1178  00CC               	movwf	(??___ftdiv+1)^(0+128)
  9156  1179  084C               	movf	(??___ftdiv+1)^(0+128),w
  9157  117A  00A4               	movwf	___ftpack@sign^(0+128)
  9158  117B  319B  23C6         	fcall	___ftpack
  9159  117D  0021               	movlb	1	; select bank1
  9160  117E  0820               	movf	?___ftpack^(0+128),w
  9161  117F  00C5               	movwf	?___ftdiv^(0+128)
  9162  1180  0821               	movf	(?___ftpack+1)^(0+128),w
  9163  1181  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9164  1182  0822               	movf	(?___ftpack+2)^(0+128),w
  9165  1183  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9166  1184  0008               	return
  9167  1185                     __end_of___ftdiv:	
  9168                           
  9169                           	psect	text29
  9170  085C                     __ptext29:	
  9171 ;; *************** function ___ftadd *****************
  9172 ;; Defined at:
  9173 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  f1              3    8[BANK1 ] float 
  9176 ;;  f2              3   11[BANK1 ] float 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;  exp1            1   20[BANK1 ] unsigned char 
  9179 ;;  exp2            1   19[BANK1 ] unsigned char 
  9180 ;;  sign            1   18[BANK1 ] unsigned char 
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  3    8[BANK1 ] float 
  9183 ;; Registers used:
  9184 ;;		wreg, status,2, status,0, pclath, cstack
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9190 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;Total ram usage:       13 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; Hardware stack levels required when called:    4
  9197 ;; This function calls:
  9198 ;;		___ftpack
  9199 ;; This function is called by:
  9200 ;;		_Adaptive_base_pid
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           
  9205                           ;psect for function ___ftadd
  9206  085C                     ___ftadd:	
  9207                           
  9208                           ;incstack = 0
  9209                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9210  085C  0021               	movlb	1	; select bank1
  9211  085D  0828               	movf	___ftadd@f1^(0+128),w
  9212  085E  00AE               	movwf	??___ftadd^(0+128)
  9213  085F  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9214  0860  00AF               	movwf	(??___ftadd^(0+128)+1)
  9215  0861  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9216  0862  00B0               	movwf	(??___ftadd^(0+128)+2)
  9217  0863  1003               	clrc
  9218  0864  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  9219  0865  0D30               	rlf	(??___ftadd^(0+128)+2),w
  9220  0866  00B1               	movwf	(??___ftadd+3)^(0+128)
  9221  0867  0831               	movf	(??___ftadd+3)^(0+128),w
  9222  0868  00B4               	movwf	___ftadd@exp1^(0+128)
  9223  0869  082B               	movf	___ftadd@f2^(0+128),w
  9224  086A  00AE               	movwf	??___ftadd^(0+128)
  9225  086B  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9226  086C  00AF               	movwf	(??___ftadd^(0+128)+1)
  9227  086D  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9228  086E  00B0               	movwf	(??___ftadd^(0+128)+2)
  9229  086F  1003               	clrc
  9230  0870  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  9231  0871  0D30               	rlf	(??___ftadd^(0+128)+2),w
  9232  0872  00B1               	movwf	(??___ftadd+3)^(0+128)
  9233  0873  0831               	movf	(??___ftadd+3)^(0+128),w
  9234  0874  00B3               	movwf	___ftadd@exp2^(0+128)
  9235  0875  0834               	movf	___ftadd@exp1^(0+128),w
  9236  0876  1903               	btfsc	3,2
  9237  0877  2884               	goto	l3763
  9238  0878  0833               	movf	___ftadd@exp2^(0+128),w
  9239  0879  0234               	subwf	___ftadd@exp1^(0+128),w
  9240  087A  1803               	skipnc
  9241  087B  288B               	goto	l3767
  9242  087C  0334               	decf	___ftadd@exp1^(0+128),w
  9243  087D  3AFF               	xorlw	255
  9244  087E  0733               	addwf	___ftadd@exp2^(0+128),w
  9245  087F  00AE               	movwf	??___ftadd^(0+128)
  9246  0880  3019               	movlw	25
  9247  0881  022E               	subwf	??___ftadd^(0+128),w
  9248  0882  1C03               	skipc
  9249  0883  288B               	goto	l3767
  9250  0884                     l3763:	
  9251  0884  082B               	movf	___ftadd@f2^(0+128),w
  9252  0885  00A8               	movwf	?___ftadd^(0+128)
  9253  0886  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9254  0887  00A9               	movwf	(?___ftadd+1)^(0+128)
  9255  0888  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9256  0889  00AA               	movwf	(?___ftadd+2)^(0+128)
  9257  088A  0008               	return
  9258  088B                     l3767:	
  9259  088B  0833               	movf	___ftadd@exp2^(0+128),w
  9260  088C  1903               	btfsc	3,2
  9261  088D  0008               	return
  9262  088E  0834               	movf	___ftadd@exp1^(0+128),w
  9263  088F  0233               	subwf	___ftadd@exp2^(0+128),w
  9264  0890  1803               	skipnc
  9265  0891  289A               	goto	l3773
  9266  0892  0333               	decf	___ftadd@exp2^(0+128),w
  9267  0893  3AFF               	xorlw	255
  9268  0894  0734               	addwf	___ftadd@exp1^(0+128),w
  9269  0895  00AE               	movwf	??___ftadd^(0+128)
  9270  0896  3019               	movlw	25
  9271  0897  022E               	subwf	??___ftadd^(0+128),w
  9272  0898  1803               	btfsc	3,0
  9273  0899  0008               	return
  9274  089A                     l3773:	
  9275  089A  3006               	movlw	6
  9276  089B  00AE               	movwf	??___ftadd^(0+128)
  9277  089C  082E               	movf	??___ftadd^(0+128),w
  9278  089D  00B2               	movwf	___ftadd@sign^(0+128)
  9279  089E  1BAA               	btfsc	(___ftadd@f1+2)^(0+128),7
  9280  089F  17B2               	bsf	___ftadd@sign^(0+128),7
  9281  08A0  1BAD               	btfsc	(___ftadd@f2+2)^(0+128),7
  9282  08A1  1732               	bsf	___ftadd@sign^(0+128),6
  9283  08A2  17A9               	bsf	(___ftadd@f1^(0+128)+1),7
  9284  08A3  30FF               	movlw	255
  9285  08A4  05A8               	andwf	___ftadd@f1^(0+128),f
  9286  08A5  30FF               	movlw	255
  9287  08A6  05A9               	andwf	(___ftadd@f1+1)^(0+128),f
  9288  08A7  3000               	movlw	0
  9289  08A8  05AA               	andwf	(___ftadd@f1+2)^(0+128),f
  9290  08A9  17AC               	bsf	(___ftadd@f2^(0+128)+1),7
  9291  08AA  30FF               	movlw	255
  9292  08AB  05AB               	andwf	___ftadd@f2^(0+128),f
  9293  08AC  30FF               	movlw	255
  9294  08AD  05AC               	andwf	(___ftadd@f2+1)^(0+128),f
  9295  08AE  3000               	movlw	0
  9296  08AF  05AD               	andwf	(___ftadd@f2+2)^(0+128),f
  9297  08B0  0833               	movf	___ftadd@exp2^(0+128),w
  9298  08B1  0234               	subwf	___ftadd@exp1^(0+128),w
  9299  08B2  1803               	skipnc
  9300  08B3  28D6               	goto	l3795
  9301  08B4                     l3785:	
  9302  08B4  3001               	movlw	1
  9303  08B5                     u4685:	
  9304  08B5  35AB               	lslf	___ftadd@f2^(0+128),f
  9305  08B6  0DAC               	rlf	(___ftadd@f2+1)^(0+128),f
  9306  08B7  0DAD               	rlf	(___ftadd@f2+2)^(0+128),f
  9307  08B8  0B89               	decfsz	9,f
  9308  08B9  28B5               	goto	u4685
  9309  08BA  3001               	movlw	1
  9310  08BB  02B3               	subwf	___ftadd@exp2^(0+128),f
  9311  08BC  0833               	movf	___ftadd@exp2^(0+128),w
  9312  08BD  0634               	xorwf	___ftadd@exp1^(0+128),w
  9313  08BE  1903               	skipnz
  9314  08BF  28D1               	goto	l3793
  9315  08C0  3001               	movlw	1
  9316  08C1  02B2               	subwf	___ftadd@sign^(0+128),f
  9317  08C2  0832               	movf	___ftadd@sign^(0+128),w
  9318  08C3  3907               	andlw	7
  9319  08C4  1903               	btfsc	3,2
  9320  08C5  28D1               	goto	l3793
  9321  08C6  28B4               	goto	l3785
  9322  08C7                     l3791:	
  9323  08C7  3001               	movlw	1
  9324  08C8                     u4715:	
  9325  08C8  36AA               	lsrf	(___ftadd@f1+2)^(0+128),f
  9326  08C9  0CA9               	rrf	(___ftadd@f1+1)^(0+128),f
  9327  08CA  0CA8               	rrf	___ftadd@f1^(0+128),f
  9328  08CB  0B89               	decfsz	9,f
  9329  08CC  28C8               	goto	u4715
  9330  08CD  3001               	movlw	1
  9331  08CE  00AE               	movwf	??___ftadd^(0+128)
  9332  08CF  082E               	movf	??___ftadd^(0+128),w
  9333  08D0  07B4               	addwf	___ftadd@exp1^(0+128),f
  9334  08D1                     l3793:	
  9335  08D1  0834               	movf	___ftadd@exp1^(0+128),w
  9336  08D2  0633               	xorwf	___ftadd@exp2^(0+128),w
  9337  08D3  1903               	btfsc	3,2
  9338  08D4  28FB               	goto	l1106
  9339  08D5  28C7               	goto	l3791
  9340  08D6                     l3795:	
  9341  08D6  0834               	movf	___ftadd@exp1^(0+128),w
  9342  08D7  0233               	subwf	___ftadd@exp2^(0+128),w
  9343  08D8  1803               	skipnc
  9344  08D9  28FB               	goto	l1106
  9345  08DA                     l3797:	
  9346  08DA  3001               	movlw	1
  9347  08DB                     u4745:	
  9348  08DB  35A8               	lslf	___ftadd@f1^(0+128),f
  9349  08DC  0DA9               	rlf	(___ftadd@f1+1)^(0+128),f
  9350  08DD  0DAA               	rlf	(___ftadd@f1+2)^(0+128),f
  9351  08DE  0B89               	decfsz	9,f
  9352  08DF  28DB               	goto	u4745
  9353  08E0  3001               	movlw	1
  9354  08E1  02B4               	subwf	___ftadd@exp1^(0+128),f
  9355  08E2  0833               	movf	___ftadd@exp2^(0+128),w
  9356  08E3  0634               	xorwf	___ftadd@exp1^(0+128),w
  9357  08E4  1903               	skipnz
  9358  08E5  28F7               	goto	l3805
  9359  08E6  3001               	movlw	1
  9360  08E7  02B2               	subwf	___ftadd@sign^(0+128),f
  9361  08E8  0832               	movf	___ftadd@sign^(0+128),w
  9362  08E9  3907               	andlw	7
  9363  08EA  1903               	btfsc	3,2
  9364  08EB  28F7               	goto	l3805
  9365  08EC  28DA               	goto	l3797
  9366  08ED                     l3803:	
  9367  08ED  3001               	movlw	1
  9368  08EE                     u4775:	
  9369  08EE  36AD               	lsrf	(___ftadd@f2+2)^(0+128),f
  9370  08EF  0CAC               	rrf	(___ftadd@f2+1)^(0+128),f
  9371  08F0  0CAB               	rrf	___ftadd@f2^(0+128),f
  9372  08F1  0B89               	decfsz	9,f
  9373  08F2  28EE               	goto	u4775
  9374  08F3  3001               	movlw	1
  9375  08F4  00AE               	movwf	??___ftadd^(0+128)
  9376  08F5  082E               	movf	??___ftadd^(0+128),w
  9377  08F6  07B3               	addwf	___ftadd@exp2^(0+128),f
  9378  08F7                     l3805:	
  9379  08F7  0834               	movf	___ftadd@exp1^(0+128),w
  9380  08F8  0633               	xorwf	___ftadd@exp2^(0+128),w
  9381  08F9  1D03               	skipz
  9382  08FA  28ED               	goto	l3803
  9383  08FB                     l1106:	
  9384  08FB  1FB2               	btfss	___ftadd@sign^(0+128),7
  9385  08FC  290D               	goto	l3809
  9386  08FD  30FF               	movlw	255
  9387  08FE  06A8               	xorwf	___ftadd@f1^(0+128),f
  9388  08FF  30FF               	movlw	255
  9389  0900  06A9               	xorwf	(___ftadd@f1+1)^(0+128),f
  9390  0901  30FF               	movlw	255
  9391  0902  06AA               	xorwf	(___ftadd@f1+2)^(0+128),f
  9392  0903  3001               	movlw	1
  9393  0904  07A8               	addwf	___ftadd@f1^(0+128),f
  9394  0905  3000               	movlw	0
  9395  0906  1803               	skipnc
  9396  0907  3001               	movlw	1
  9397  0908  07A9               	addwf	(___ftadd@f1+1)^(0+128),f
  9398  0909  3000               	movlw	0
  9399  090A  1803               	skipnc
  9400  090B  3001               	movlw	1
  9401  090C  07AA               	addwf	(___ftadd@f1+2)^(0+128),f
  9402  090D                     l3809:	
  9403  090D  1F32               	btfss	___ftadd@sign^(0+128),6
  9404  090E  291F               	goto	l3813
  9405  090F  30FF               	movlw	255
  9406  0910  06AB               	xorwf	___ftadd@f2^(0+128),f
  9407  0911  30FF               	movlw	255
  9408  0912  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9409  0913  30FF               	movlw	255
  9410  0914  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9411  0915  3001               	movlw	1
  9412  0916  07AB               	addwf	___ftadd@f2^(0+128),f
  9413  0917  3000               	movlw	0
  9414  0918  1803               	skipnc
  9415  0919  3001               	movlw	1
  9416  091A  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9417  091B  3000               	movlw	0
  9418  091C  1803               	skipnc
  9419  091D  3001               	movlw	1
  9420  091E  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9421  091F                     l3813:	
  9422  091F  01B2               	clrf	___ftadd@sign^(0+128)
  9423  0920  0828               	movf	___ftadd@f1^(0+128),w
  9424  0921  07AB               	addwf	___ftadd@f2^(0+128),f
  9425  0922  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9426  0923  3DAC               	addwfc	(___ftadd@f2+1)^(0+128),f
  9427  0924  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9428  0925  3DAD               	addwfc	(___ftadd@f2+2)^(0+128),f
  9429  0926  1FAD               	btfss	(___ftadd@f2+2)^(0+128),7
  9430  0927  293A               	goto	l3823
  9431  0928  30FF               	movlw	255
  9432  0929  06AB               	xorwf	___ftadd@f2^(0+128),f
  9433  092A  30FF               	movlw	255
  9434  092B  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9435  092C  30FF               	movlw	255
  9436  092D  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9437  092E  3001               	movlw	1
  9438  092F  07AB               	addwf	___ftadd@f2^(0+128),f
  9439  0930  3000               	movlw	0
  9440  0931  1803               	skipnc
  9441  0932  3001               	movlw	1
  9442  0933  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9443  0934  3000               	movlw	0
  9444  0935  1803               	skipnc
  9445  0936  3001               	movlw	1
  9446  0937  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9447  0938  01B2               	clrf	___ftadd@sign^(0+128)
  9448  0939  0AB2               	incf	___ftadd@sign^(0+128),f
  9449  093A                     l3823:	
  9450  093A  082B               	movf	___ftadd@f2^(0+128),w
  9451  093B  00A0               	movwf	___ftpack@arg^(0+128)
  9452  093C  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9453  093D  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9454  093E  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9455  093F  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9456  0940  0834               	movf	___ftadd@exp1^(0+128),w
  9457  0941  00AE               	movwf	??___ftadd^(0+128)
  9458  0942  082E               	movf	??___ftadd^(0+128),w
  9459  0943  00A3               	movwf	___ftpack@exp^(0+128)
  9460  0944  0832               	movf	___ftadd@sign^(0+128),w
  9461  0945  00AF               	movwf	(??___ftadd+1)^(0+128)
  9462  0946  082F               	movf	(??___ftadd+1)^(0+128),w
  9463  0947  00A4               	movwf	___ftpack@sign^(0+128)
  9464  0948  319B  23C6         	fcall	___ftpack
  9465  094A  0021               	movlb	1	; select bank1
  9466  094B  0820               	movf	?___ftpack^(0+128),w
  9467  094C  00A8               	movwf	?___ftadd^(0+128)
  9468  094D  0821               	movf	(?___ftpack+1)^(0+128),w
  9469  094E  00A9               	movwf	(?___ftadd+1)^(0+128)
  9470  094F  0822               	movf	(?___ftpack+2)^(0+128),w
  9471  0950  00AA               	movwf	(?___ftadd+2)^(0+128)
  9472  0951  0008               	return
  9473  0952                     __end_of___ftadd:	
  9474                           
  9475                           	psect	text30
  9476  1A6D                     __ptext30:	
  9477 ;; *************** function ___altoft *****************
  9478 ;; Defined at:
  9479 ;;		line 42 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\altoft.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;  c               4    8[BANK1 ] long 
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;  sign            1   15[BANK1 ] unsigned char 
  9484 ;;  exp             1   14[BANK1 ] unsigned char 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  3    8[BANK1 ] float 
  9487 ;; Registers used:
  9488 ;;		wreg, status,2, status,0, pclath, cstack
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9494 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9495 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9497 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9498 ;;Total ram usage:        8 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:    4
  9501 ;; This function calls:
  9502 ;;		___ftpack
  9503 ;; This function is called by:
  9504 ;;		_Adaptive_base_pid
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           
  9509                           ;psect for function ___altoft
  9510  1A6D                     ___altoft:	
  9511                           
  9512                           ;incstack = 0
  9513                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  9514  1A6D  0021               	movlb	1	; select bank1
  9515  1A6E  01AF               	clrf	___altoft@sign^(0+128)
  9516  1A6F  308E               	movlw	142
  9517  1A70  00AC               	movwf	??___altoft^(0+128)
  9518  1A71  082C               	movf	??___altoft^(0+128),w
  9519  1A72  00AE               	movwf	___altoft@exp^(0+128)
  9520  1A73  1FAB               	btfss	(___altoft@c+3)^(0+128),7
  9521  1A74  2A82               	goto	l3749
  9522  1A75  09A8               	comf	___altoft@c^(0+128),f
  9523  1A76  09A9               	comf	(___altoft@c+1)^(0+128),f
  9524  1A77  09AA               	comf	(___altoft@c+2)^(0+128),f
  9525  1A78  09AB               	comf	(___altoft@c+3)^(0+128),f
  9526  1A79  0AA8               	incf	___altoft@c^(0+128),f
  9527  1A7A  1903               	skipnz
  9528  1A7B  0AA9               	incf	(___altoft@c+1)^(0+128),f
  9529  1A7C  1903               	skipnz
  9530  1A7D  0AAA               	incf	(___altoft@c+2)^(0+128),f
  9531  1A7E  1903               	skipnz
  9532  1A7F  0AAB               	incf	(___altoft@c+3)^(0+128),f
  9533  1A80  01AF               	clrf	___altoft@sign^(0+128)
  9534  1A81  0AAF               	incf	___altoft@sign^(0+128),f
  9535  1A82                     l3749:	
  9536  1A82  30FF               	movlw	255
  9537  1A83  052B               	andwf	(___altoft@c+3)^(0+128),w
  9538  1A84  1903               	btfsc	3,2
  9539  1A85  2A92               	goto	l3751
  9540  1A86  3001               	movlw	1
  9541  1A87                     u4575:	
  9542  1A87  36AB               	lsrf	(___altoft@c+3)^(0+128),f
  9543  1A88  0CAA               	rrf	(___altoft@c+2)^(0+128),f
  9544  1A89  0CA9               	rrf	(___altoft@c+1)^(0+128),f
  9545  1A8A  0CA8               	rrf	___altoft@c^(0+128),f
  9546  1A8B  0B89               	decfsz	9,f
  9547  1A8C  2A87               	goto	u4575
  9548  1A8D  3001               	movlw	1
  9549  1A8E  00AC               	movwf	??___altoft^(0+128)
  9550  1A8F  082C               	movf	??___altoft^(0+128),w
  9551  1A90  07AE               	addwf	___altoft@exp^(0+128),f
  9552  1A91  2A82               	goto	l3749
  9553  1A92                     l3751:	
  9554  1A92  0828               	movf	___altoft@c^(0+128),w
  9555  1A93  00A0               	movwf	___ftpack@arg^(0+128)
  9556  1A94  0829               	movf	(___altoft@c+1)^(0+128),w
  9557  1A95  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9558  1A96  082A               	movf	(___altoft@c+2)^(0+128),w
  9559  1A97  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9560  1A98  082E               	movf	___altoft@exp^(0+128),w
  9561  1A99  00AC               	movwf	??___altoft^(0+128)
  9562  1A9A  082C               	movf	??___altoft^(0+128),w
  9563  1A9B  00A3               	movwf	___ftpack@exp^(0+128)
  9564  1A9C  082F               	movf	___altoft@sign^(0+128),w
  9565  1A9D  00AD               	movwf	(??___altoft+1)^(0+128)
  9566  1A9E  082D               	movf	(??___altoft+1)^(0+128),w
  9567  1A9F  00A4               	movwf	___ftpack@sign^(0+128)
  9568  1AA0  319B  23C6         	fcall	___ftpack
  9569  1AA2  0021               	movlb	1	; select bank1
  9570  1AA3  0820               	movf	?___ftpack^(0+128),w
  9571  1AA4  00A8               	movwf	?___altoft^(0+128)
  9572  1AA5  0821               	movf	(?___ftpack+1)^(0+128),w
  9573  1AA6  00A9               	movwf	(?___altoft+1)^(0+128)
  9574  1AA7  0822               	movf	(?___ftpack+2)^(0+128),w
  9575  1AA8  00AA               	movwf	(?___altoft+2)^(0+128)
  9576  1AA9  0008               	return
  9577  1AAA                     __end_of___altoft:	
  9578                           
  9579                           	psect	text31
  9580  1BC6                     __ptext31:	
  9581 ;; *************** function ___ftpack *****************
  9582 ;; Defined at:
  9583 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;  arg             3    0[BANK1 ] unsigned um
  9586 ;;  exp             1    3[BANK1 ] unsigned char 
  9587 ;;  sign            1    4[BANK1 ] unsigned char 
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;		None
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  3    0[BANK1 ] float 
  9592 ;; Registers used:
  9593 ;;		wreg, status,2, status,0
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9599 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9603 ;;Total ram usage:        8 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    3
  9606 ;; This function calls:
  9607 ;;		Nothing
  9608 ;; This function is called by:
  9609 ;;		___altoft
  9610 ;;		___ftadd
  9611 ;;		___ftdiv
  9612 ;;		___ftmul
  9613 ;;		___lwtoft
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           
  9618                           ;psect for function ___ftpack
  9619  1BC6                     ___ftpack:	
  9620                           
  9621                           ;incstack = 0
  9622                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9623  1BC6  0021               	movlb	1	; select bank1
  9624  1BC7  0823               	movf	___ftpack@exp^(0+128),w
  9625  1BC8  1903               	btfsc	3,2
  9626  1BC9  2BCF               	goto	l3533
  9627  1BCA  0822               	movf	(___ftpack@arg+2)^(0+128),w
  9628  1BCB  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  9629  1BCC  0420               	iorwf	___ftpack@arg^(0+128),w
  9630  1BCD  1D03               	skipz
  9631  1BCE  2BE0               	goto	l3539
  9632  1BCF                     l3533:	
  9633  1BCF  3000               	movlw	0
  9634  1BD0  00A0               	movwf	?___ftpack^(0+128)
  9635  1BD1  3000               	movlw	0
  9636  1BD2  00A1               	movwf	(?___ftpack+1)^(0+128)
  9637  1BD3  3000               	movlw	0
  9638  1BD4  00A2               	movwf	(?___ftpack+2)^(0+128)
  9639  1BD5  0008               	return
  9640  1BD6                     l3537:	
  9641  1BD6  3001               	movlw	1
  9642  1BD7  00A5               	movwf	??___ftpack^(0+128)
  9643  1BD8  0825               	movf	??___ftpack^(0+128),w
  9644  1BD9  07A3               	addwf	___ftpack@exp^(0+128),f
  9645  1BDA  3001               	movlw	1
  9646  1BDB                     u4175:	
  9647  1BDB  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  9648  1BDC  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  9649  1BDD  0CA0               	rrf	___ftpack@arg^(0+128),f
  9650  1BDE  0B89               	decfsz	9,f
  9651  1BDF  2BDB               	goto	u4175
  9652  1BE0                     l3539:	
  9653  1BE0  30FE               	movlw	254
  9654  1BE1  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  9655  1BE2  1903               	btfsc	3,2
  9656  1BE3  2BF9               	goto	l1077
  9657  1BE4  2BD6               	goto	l3537
  9658  1BE5                     l3541:	
  9659  1BE5  3001               	movlw	1
  9660  1BE6  00A5               	movwf	??___ftpack^(0+128)
  9661  1BE7  0825               	movf	??___ftpack^(0+128),w
  9662  1BE8  07A3               	addwf	___ftpack@exp^(0+128),f
  9663  1BE9  3001               	movlw	1
  9664  1BEA  07A0               	addwf	___ftpack@arg^(0+128),f
  9665  1BEB  3000               	movlw	0
  9666  1BEC  1803               	skipnc
  9667  1BED  3001               	movlw	1
  9668  1BEE  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  9669  1BEF  3000               	movlw	0
  9670  1BF0  1803               	skipnc
  9671  1BF1  3001               	movlw	1
  9672  1BF2  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  9673  1BF3  3001               	movlw	1
  9674  1BF4                     u4195:	
  9675  1BF4  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  9676  1BF5  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  9677  1BF6  0CA0               	rrf	___ftpack@arg^(0+128),f
  9678  1BF7  0B89               	decfsz	9,f
  9679  1BF8  2BF4               	goto	u4195
  9680  1BF9                     l1077:	
  9681  1BF9  30FF               	movlw	255
  9682  1BFA  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  9683  1BFB  1903               	btfsc	3,2
  9684  1BFC  2C06               	goto	l3549
  9685  1BFD  2BE5               	goto	l3541
  9686  1BFE                     l3547:	
  9687  1BFE  3001               	movlw	1
  9688  1BFF  02A3               	subwf	___ftpack@exp^(0+128),f
  9689  1C00  3001               	movlw	1
  9690  1C01                     u4215:	
  9691  1C01  35A0               	lslf	___ftpack@arg^(0+128),f
  9692  1C02  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  9693  1C03  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  9694  1C04  0B89               	decfsz	9,f
  9695  1C05  2C01               	goto	u4215
  9696  1C06                     l3549:	
  9697  1C06  1FA1               	btfss	(___ftpack@arg+1)^(0+128),7
  9698  1C07  2BFE               	goto	l3547
  9699  1C08  1823               	btfsc	___ftpack@exp^(0+128),0
  9700  1C09  2C10               	goto	l1083
  9701  1C0A  30FF               	movlw	255
  9702  1C0B  05A0               	andwf	___ftpack@arg^(0+128),f
  9703  1C0C  307F               	movlw	127
  9704  1C0D  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  9705  1C0E  30FF               	movlw	255
  9706  1C0F  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  9707  1C10                     l1083:	
  9708  1C10  1003               	clrc
  9709  1C11  0CA3               	rrf	___ftpack@exp^(0+128),f
  9710  1C12  0823               	movf	___ftpack@exp^(0+128),w
  9711  1C13  00A5               	movwf	??___ftpack^(0+128)
  9712  1C14  01A6               	clrf	(??___ftpack^(0+128)+1)
  9713  1C15  01A7               	clrf	(??___ftpack^(0+128)+2)
  9714  1C16  3010               	movlw	16
  9715  1C17                     u4245:	
  9716  1C17  35A5               	lslf	??___ftpack^(0+128),f
  9717  1C18  0DA6               	rlf	(??___ftpack^(0+128)+1),f
  9718  1C19  0DA7               	rlf	(??___ftpack^(0+128)+2),f
  9719  1C1A  0B89               	decfsz	9,f
  9720  1C1B  2C17               	goto	u4245
  9721  1C1C  0825               	movf	??___ftpack^(0+128),w
  9722  1C1D  04A0               	iorwf	___ftpack@arg^(0+128),f
  9723  1C1E  0826               	movf	(??___ftpack+1)^(0+128),w
  9724  1C1F  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  9725  1C20  0827               	movf	(??___ftpack+2)^(0+128),w
  9726  1C21  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  9727  1C22  0824               	movf	___ftpack@sign^(0+128),w
  9728  1C23  1903               	btfsc	3,2
  9729  1C24  0008               	return
  9730  1C25  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  9731  1C26  0008               	return
  9732  1C27                     __end_of___ftpack:	
  9733                           
  9734                           	psect	text32
  9735  1E70                     __ptext32:	
  9736 ;; *************** function ___aldiv *****************
  9737 ;; Defined at:
  9738 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\aldiv.c"
  9739 ;; Parameters:    Size  Location     Type
  9740 ;;  divisor         4    0[BANK1 ] long 
  9741 ;;  dividend        4    4[BANK1 ] long 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;  quotient        4   11[BANK1 ] long 
  9744 ;;  sign            1   10[BANK1 ] unsigned char 
  9745 ;;  counter         1    9[BANK1 ] unsigned char 
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  4    0[BANK1 ] long 
  9748 ;; Registers used:
  9749 ;;		wreg, status,2, status,0
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9755 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;Total ram usage:       15 bytes
  9760 ;; Hardware stack levels used:    1
  9761 ;; Hardware stack levels required when called:    3
  9762 ;; This function calls:
  9763 ;;		Nothing
  9764 ;; This function is called by:
  9765 ;;		_Adaptive_base_pid
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           
  9770                           ;psect for function ___aldiv
  9771  1E70                     ___aldiv:	
  9772                           
  9773                           ;incstack = 0
  9774                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9775  1E70  0021               	movlb	1	; select bank1
  9776  1E71  01AA               	clrf	___aldiv@sign^(0+128)
  9777  1E72  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
  9778  1E73  2E81               	goto	l971
  9779  1E74  09A0               	comf	___aldiv@divisor^(0+128),f
  9780  1E75  09A1               	comf	(___aldiv@divisor+1)^(0+128),f
  9781  1E76  09A2               	comf	(___aldiv@divisor+2)^(0+128),f
  9782  1E77  09A3               	comf	(___aldiv@divisor+3)^(0+128),f
  9783  1E78  0AA0               	incf	___aldiv@divisor^(0+128),f
  9784  1E79  1903               	skipnz
  9785  1E7A  0AA1               	incf	(___aldiv@divisor+1)^(0+128),f
  9786  1E7B  1903               	skipnz
  9787  1E7C  0AA2               	incf	(___aldiv@divisor+2)^(0+128),f
  9788  1E7D  1903               	skipnz
  9789  1E7E  0AA3               	incf	(___aldiv@divisor+3)^(0+128),f
  9790  1E7F  01AA               	clrf	___aldiv@sign^(0+128)
  9791  1E80  0AAA               	incf	___aldiv@sign^(0+128),f
  9792  1E81                     l971:	
  9793  1E81  1FA7               	btfss	(___aldiv@dividend+3)^(0+128),7
  9794  1E82  2E92               	goto	l3709
  9795  1E83  09A4               	comf	___aldiv@dividend^(0+128),f
  9796  1E84  09A5               	comf	(___aldiv@dividend+1)^(0+128),f
  9797  1E85  09A6               	comf	(___aldiv@dividend+2)^(0+128),f
  9798  1E86  09A7               	comf	(___aldiv@dividend+3)^(0+128),f
  9799  1E87  0AA4               	incf	___aldiv@dividend^(0+128),f
  9800  1E88  1903               	skipnz
  9801  1E89  0AA5               	incf	(___aldiv@dividend+1)^(0+128),f
  9802  1E8A  1903               	skipnz
  9803  1E8B  0AA6               	incf	(___aldiv@dividend+2)^(0+128),f
  9804  1E8C  1903               	skipnz
  9805  1E8D  0AA7               	incf	(___aldiv@dividend+3)^(0+128),f
  9806  1E8E  3001               	movlw	1
  9807  1E8F  00A8               	movwf	??___aldiv^(0+128)
  9808  1E90  0828               	movf	??___aldiv^(0+128),w
  9809  1E91  06AA               	xorwf	___aldiv@sign^(0+128),f
  9810  1E92                     l3709:	
  9811  1E92  3000               	movlw	0
  9812  1E93  00AE               	movwf	(___aldiv@quotient+3)^(0+128)
  9813  1E94  3000               	movlw	0
  9814  1E95  00AD               	movwf	(___aldiv@quotient+2)^(0+128)
  9815  1E96  3000               	movlw	0
  9816  1E97  00AC               	movwf	(___aldiv@quotient+1)^(0+128)
  9817  1E98  3000               	movlw	0
  9818  1E99  00AB               	movwf	___aldiv@quotient^(0+128)
  9819  1E9A  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  9820  1E9B  0422               	iorwf	(___aldiv@divisor+2)^(0+128),w
  9821  1E9C  0421               	iorwf	(___aldiv@divisor+1)^(0+128),w
  9822  1E9D  0420               	iorwf	___aldiv@divisor^(0+128),w
  9823  1E9E  1903               	skipnz
  9824  1E9F  2EDB               	goto	l3731
  9825  1EA0  01A9               	clrf	___aldiv@counter^(0+128)
  9826  1EA1  0AA9               	incf	___aldiv@counter^(0+128),f
  9827  1EA2                     l3717:	
  9828  1EA2  1BA3               	btfsc	(___aldiv@divisor+3)^(0+128),7
  9829  1EA3  2EB0               	goto	l3719
  9830  1EA4  3001               	movlw	1
  9831  1EA5                     u4495:	
  9832  1EA5  35A0               	lslf	___aldiv@divisor^(0+128),f
  9833  1EA6  0DA1               	rlf	(___aldiv@divisor+1)^(0+128),f
  9834  1EA7  0DA2               	rlf	(___aldiv@divisor+2)^(0+128),f
  9835  1EA8  0DA3               	rlf	(___aldiv@divisor+3)^(0+128),f
  9836  1EA9  0B89               	decfsz	9,f
  9837  1EAA  2EA5               	goto	u4495
  9838  1EAB  3001               	movlw	1
  9839  1EAC  00A8               	movwf	??___aldiv^(0+128)
  9840  1EAD  0828               	movf	??___aldiv^(0+128),w
  9841  1EAE  07A9               	addwf	___aldiv@counter^(0+128),f
  9842  1EAF  2EA2               	goto	l3717
  9843  1EB0                     l3719:	
  9844  1EB0  3001               	movlw	1
  9845  1EB1                     u4515:	
  9846  1EB1  35AB               	lslf	___aldiv@quotient^(0+128),f
  9847  1EB2  0DAC               	rlf	(___aldiv@quotient+1)^(0+128),f
  9848  1EB3  0DAD               	rlf	(___aldiv@quotient+2)^(0+128),f
  9849  1EB4  0DAE               	rlf	(___aldiv@quotient+3)^(0+128),f
  9850  1EB5  0B89               	decfsz	9,f
  9851  1EB6  2EB1               	goto	u4515
  9852  1EB7  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  9853  1EB8  0227               	subwf	(___aldiv@dividend+3)^(0+128),w
  9854  1EB9  1D03               	skipz
  9855  1EBA  2EC5               	goto	u4525
  9856  1EBB  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  9857  1EBC  0226               	subwf	(___aldiv@dividend+2)^(0+128),w
  9858  1EBD  1D03               	skipz
  9859  1EBE  2EC5               	goto	u4525
  9860  1EBF  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  9861  1EC0  0225               	subwf	(___aldiv@dividend+1)^(0+128),w
  9862  1EC1  1D03               	skipz
  9863  1EC2  2EC5               	goto	u4525
  9864  1EC3  0820               	movf	___aldiv@divisor^(0+128),w
  9865  1EC4  0224               	subwf	___aldiv@dividend^(0+128),w
  9866  1EC5                     u4525:	
  9867  1EC5  1C03               	skipc
  9868  1EC6  2ED0               	goto	l3727
  9869  1EC7  0820               	movf	___aldiv@divisor^(0+128),w
  9870  1EC8  02A4               	subwf	___aldiv@dividend^(0+128),f
  9871  1EC9  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  9872  1ECA  3BA5               	subwfb	(___aldiv@dividend+1)^(0+128),f
  9873  1ECB  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  9874  1ECC  3BA6               	subwfb	(___aldiv@dividend+2)^(0+128),f
  9875  1ECD  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  9876  1ECE  3BA7               	subwfb	(___aldiv@dividend+3)^(0+128),f
  9877  1ECF  142B               	bsf	___aldiv@quotient^(0+128),0
  9878  1ED0                     l3727:	
  9879  1ED0  3001               	movlw	1
  9880  1ED1                     u4535:	
  9881  1ED1  36A3               	lsrf	(___aldiv@divisor+3)^(0+128),f
  9882  1ED2  0CA2               	rrf	(___aldiv@divisor+2)^(0+128),f
  9883  1ED3  0CA1               	rrf	(___aldiv@divisor+1)^(0+128),f
  9884  1ED4  0CA0               	rrf	___aldiv@divisor^(0+128),f
  9885  1ED5  0B89               	decfsz	9,f
  9886  1ED6  2ED1               	goto	u4535
  9887  1ED7  3001               	movlw	1
  9888  1ED8  02A9               	subwf	___aldiv@counter^(0+128),f
  9889  1ED9  1D03               	btfss	3,2
  9890  1EDA  2EB0               	goto	l3719
  9891  1EDB                     l3731:	
  9892  1EDB  082A               	movf	___aldiv@sign^(0+128),w
  9893  1EDC  1903               	btfsc	3,2
  9894  1EDD  2EE9               	goto	l3735
  9895  1EDE  09AB               	comf	___aldiv@quotient^(0+128),f
  9896  1EDF  09AC               	comf	(___aldiv@quotient+1)^(0+128),f
  9897  1EE0  09AD               	comf	(___aldiv@quotient+2)^(0+128),f
  9898  1EE1  09AE               	comf	(___aldiv@quotient+3)^(0+128),f
  9899  1EE2  0AAB               	incf	___aldiv@quotient^(0+128),f
  9900  1EE3  1903               	skipnz
  9901  1EE4  0AAC               	incf	(___aldiv@quotient+1)^(0+128),f
  9902  1EE5  1903               	skipnz
  9903  1EE6  0AAD               	incf	(___aldiv@quotient+2)^(0+128),f
  9904  1EE7  1903               	skipnz
  9905  1EE8  0AAE               	incf	(___aldiv@quotient+3)^(0+128),f
  9906  1EE9                     l3735:	
  9907  1EE9  082E               	movf	(___aldiv@quotient+3)^(0+128),w
  9908  1EEA  00A3               	movwf	(?___aldiv+3)^(0+128)
  9909  1EEB  082D               	movf	(___aldiv@quotient+2)^(0+128),w
  9910  1EEC  00A2               	movwf	(?___aldiv+2)^(0+128)
  9911  1EED  082C               	movf	(___aldiv@quotient+1)^(0+128),w
  9912  1EEE  00A1               	movwf	(?___aldiv+1)^(0+128)
  9913  1EEF  082B               	movf	___aldiv@quotient^(0+128),w
  9914  1EF0  00A0               	movwf	?___aldiv^(0+128)
  9915  1EF1  0008               	return
  9916  1EF2                     __end_of___aldiv:	
  9917                           
  9918                           	psect	text33
  9919  19D3                     __ptext33:	
  9920 ;; *************** function _Update_PWM *****************
  9921 ;; Defined at:
  9922 ;;		line 1151 in file "main.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  setwsduty       2   51[BANK1 ] unsigned int 
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;  Dutycnt         2   57[BANK1 ] unsigned int 
  9927 ;;  Temp1           2   55[BANK1 ] unsigned int 
  9928 ;; Return value:  Size  Location     Type
  9929 ;;		None               void
  9930 ;; Registers used:
  9931 ;;		wreg, status,2, status,0
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9937 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9938 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9939 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;Total ram usage:        8 bytes
  9942 ;; Hardware stack levels used:    1
  9943 ;; Hardware stack levels required when called:    3
  9944 ;; This function calls:
  9945 ;;		Nothing
  9946 ;; This function is called by:
  9947 ;;		_Adaptive_base_pid
  9948 ;;		_main
  9949 ;;		_key_application
  9950 ;;		_detect_display_error
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           
  9955                           ;psect for function _Update_PWM
  9956  19D3                     _Update_PWM:	
  9957                           
  9958                           ;main.c: 1153: unsigned int Temp1=0x00, Dutycnt=0;
  9959                           
  9960                           ;incstack = 0
  9961                           ; Regs used in _Update_PWM: [wreg+status,2+status,0]
  9962  19D3  0021               	movlb	1	; select bank1
  9963  19D4  01D7               	clrf	Update_PWM@Temp1^(0+128)
  9964  19D5  01D8               	clrf	(Update_PWM@Temp1+1)^(0+128)
  9965  19D6  01D9               	clrf	Update_PWM@Dutycnt^(0+128)
  9966  19D7  01DA               	clrf	(Update_PWM@Dutycnt+1)^(0+128)
  9967                           
  9968                           ;main.c: 1154: Dutycnt=setwsduty;
  9969  19D8  0854               	movf	(Update_PWM@setwsduty+1)^(0+128),w
  9970  19D9  01DA               	clrf	(Update_PWM@Dutycnt+1)^(0+128)
  9971  19DA  07DA               	addwf	(Update_PWM@Dutycnt+1)^(0+128),f
  9972  19DB  0853               	movf	Update_PWM@setwsduty^(0+128),w
  9973  19DC  01D9               	clrf	Update_PWM@Dutycnt^(0+128)
  9974  19DD  07D9               	addwf	Update_PWM@Dutycnt^(0+128),f
  9975                           
  9976                           ;main.c: 1155: CCP1CONbits.DC1B=Dutycnt;
  9977  19DE  0859               	movf	Update_PWM@Dutycnt^(0+128),w
  9978  19DF  00D5               	movwf	??_Update_PWM^(0+128)
  9979  19E0  0ED5               	swapf	??_Update_PWM^(0+128),f
  9980  19E1  0025               	movlb	5	; select bank5
  9981  19E2  0813               	movf	19,w	;volatile
  9982  19E3  0021               	movlb	1	; select bank1
  9983  19E4  0655               	xorwf	??_Update_PWM^(0+128),w
  9984  19E5  39CF               	andlw	-49
  9985  19E6  0655               	xorwf	??_Update_PWM^(0+128),w
  9986  19E7  0025               	movlb	5	; select bank5
  9987  19E8  0093               	movwf	19	;volatile
  9988                           
  9989                           ;main.c: 1156: Temp1=Dutycnt >> 2;
  9990  19E9  0021               	movlb	1	; select bank1
  9991  19EA  085A               	movf	(Update_PWM@Dutycnt+1)^(0+128),w
  9992  19EB  00D6               	movwf	(??_Update_PWM^(0+128)+1)
  9993  19EC  0859               	movf	Update_PWM@Dutycnt^(0+128),w
  9994  19ED  00D5               	movwf	??_Update_PWM^(0+128)
  9995  19EE  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
  9996  19EF  0CD5               	rrf	??_Update_PWM^(0+128),f
  9997  19F0  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
  9998  19F1  0CD5               	rrf	??_Update_PWM^(0+128),f
  9999  19F2  0855               	movf	??_Update_PWM^(0+128),w
 10000  19F3  00D7               	movwf	Update_PWM@Temp1^(0+128)
 10001  19F4  0856               	movf	(??_Update_PWM+1)^(0+128),w
 10002  19F5  00D8               	movwf	(Update_PWM@Temp1+1)^(0+128)
 10003                           
 10004                           ;main.c: 1157: CCPR1L=Temp1;
 10005  19F6  0857               	movf	Update_PWM@Temp1^(0+128),w
 10006  19F7  0025               	movlb	5	; select bank5
 10007  19F8  0091               	movwf	17	;volatile
 10008  19F9  0008               	return
 10009  19FA                     __end_of_Update_PWM:	
 10010                           
 10011                           	psect	intentry
 10012  0004                     __pintentry:	
 10013 ;; *************** function _ISR_Function *****************
 10014 ;; Defined at:
 10015 ;;		line 41 in file "main.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;		None
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;		None
 10020 ;; Return value:  Size  Location     Type
 10021 ;;		None               void
 10022 ;; Registers used:
 10023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10031 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10032 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10033 ;;Total ram usage:       11 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:    2
 10036 ;; This function calls:
 10037 ;;		_Display
 10038 ;;		i1_Update_PWM
 10039 ;;		i1___aldiv
 10040 ;;		i1___ftadd
 10041 ;;		i1___ftdiv
 10042 ;;		i1___ftmul
 10043 ;;		i1___fttol
 10044 ;;		i1___lwtoft
 10045 ;; This function is called by:
 10046 ;;		Interrupt level 1
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050  0004                     _ISR_Function:	
 10051                           
 10052                           ;incstack = 0
 10053                           ; Regs used in _ISR_Function: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10054  0004  147E               	bsf	126,0	;set compiler interrupt flag
 10055  0005  3180               	pagesel	$
 10056  0006  0020               	movlb	0	; select bank0
 10057  0007  087F               	movf	127,w
 10058  0008  00D3               	movwf	??_ISR_Function+8
 10059                           
 10060                           ;main.c: 43: if(INTCONbits.TMR0IF==1)
 10061  0009  1D0B               	btfss	11,2	;volatile
 10062  000A  28EF               	goto	i1l5025
 10063                           
 10064                           ;main.c: 44: {
 10065                           ;main.c: 45: INTCONbits.TMR0IF=0;
 10066  000B  110B               	bcf	11,2	;volatile
 10067                           
 10068                           ;main.c: 46: TMR0=0x00;
 10069  000C  0195               	clrf	21	;volatile
 10070                           
 10071                           ;main.c: 47: updatedispf=0;
 10072  000D  0023               	movlb	3	; select bank3
 10073  000E  01DE               	clrf	_updatedispf^(0+384)	;volatile
 10074                           
 10075                           ;main.c: 48: Display();
 10076  000F  3185  2571  3180   	fcall	_Display
 10077                           
 10078                           ;main.c: 49: count_1ms++;
 10079  0012  3001               	movlw	1
 10080  0013  0023               	movlb	3	; select bank3
 10081  0014  07B6               	addwf	_count_1ms^(0+384),f	;volatile
 10082  0015  3000               	movlw	0
 10083  0016  3DB7               	addwfc	(_count_1ms+1)^(0+384),f	;volatile
 10084                           
 10085                           ;main.c: 50: count_2ms++;
 10086  0017  3001               	movlw	1
 10087  0018  0020               	movlb	0	; select bank0
 10088  0019  00CB               	movwf	??_ISR_Function
 10089  001A  084B               	movf	??_ISR_Function,w
 10090  001B  0022               	movlb	2	; select bank2
 10091  001C  07B9               	addwf	_count_2ms^(0+256),f	;volatile
 10092                           
 10093                           ;main.c: 51: count_1msec++;
 10094  001D  3001               	movlw	1
 10095  001E  0020               	movlb	0	; select bank0
 10096  001F  00CB               	movwf	??_ISR_Function
 10097  0020  084B               	movf	??_ISR_Function,w
 10098  0021  0022               	movlb	2	; select bank2
 10099  0022  07B8               	addwf	_count_1msec^(0+256),f
 10100                           
 10101                           ;main.c: 52: count_pid++;
 10102  0023  3001               	movlw	1
 10103  0024  0020               	movlb	0	; select bank0
 10104  0025  00CB               	movwf	??_ISR_Function
 10105  0026  084B               	movf	??_ISR_Function,w
 10106  0027  0023               	movlb	3	; select bank3
 10107  0028  07D5               	addwf	_count_pid^(0+384),f	;volatile
 10108                           
 10109                           ;main.c: 53: count_transms++;
 10110  0029  3001               	movlw	1
 10111  002A  0024               	movlb	4	; select bank4
 10112  002B  07AA               	addwf	_count_transms^(0+512),f	;volatile
 10113  002C  3000               	movlw	0
 10114  002D  3DAB               	addwfc	(_count_transms+1)^(0+512),f	;volatile
 10115                           
 10116                           ;main.c: 57: if(RCSTAbits.FERR==1 || RCSTAbits.OERR==1)
 10117  002E  0023               	movlb	3	; select bank3
 10118  002F  191D               	btfsc	29,2	;volatile
 10119  0030  2833               	goto	i1l560
 10120  0031  1C9D               	btfss	29,1	;volatile
 10121  0032  2837               	goto	i1l4943
 10122  0033                     i1l560:	
 10123                           
 10124                           ;main.c: 58: {
 10125                           ;main.c: 59: RCSTAbits.SPEN=0;
 10126  0033  139D               	bcf	29,7	;volatile
 10127                           
 10128                           ;main.c: 60: RCSTAbits.CREN=0;
 10129  0034  121D               	bcf	29,4	;volatile
 10130                           
 10131                           ;main.c: 61: RCSTAbits.SPEN=1;
 10132  0035  179D               	bsf	29,7	;volatile
 10133                           
 10134                           ;main.c: 62: RCSTAbits.CREN=1;
 10135  0036  161D               	bsf	29,4	;volatile
 10136  0037                     i1l4943:	
 10137                           
 10138                           ;main.c: 63: }
 10139                           ;main.c: 64: if(count_1ms>=500)
 10140  0037  3001               	movlw	1
 10141  0038  0237               	subwf	(_count_1ms+1)^(0+384),w	;volatile
 10142  0039  30F4               	movlw	244
 10143  003A  1903               	skipnz
 10144  003B  0236               	subwf	_count_1ms^(0+384),w	;volatile
 10145  003C  1C03               	skipc
 10146  003D  2897               	goto	i1l4991
 10147                           
 10148                           ;main.c: 65: {
 10149                           ;main.c: 66: count_1ms=0;
 10150  003E  01B6               	clrf	_count_1ms^(0+384)	;volatile
 10151  003F  01B7               	clrf	(_count_1ms+1)^(0+384)	;volatile
 10152                           
 10153                           ;main.c: 67: comm_error_count++;
 10154  0040  3001               	movlw	1
 10155  0041  0020               	movlb	0	; select bank0
 10156  0042  00CB               	movwf	??_ISR_Function
 10157  0043  084B               	movf	??_ISR_Function,w
 10158  0044  0022               	movlb	2	; select bank2
 10159  0045  07B7               	addwf	_comm_error_count^(0+256),f	;volatile
 10160                           
 10161                           ;main.c: 69: if(gaschkfg == 1)
 10162  0046  0841               	movf	_gaschkfg^(0+256),w
 10163  0047  3A01               	xorlw	1
 10164  0048  1D03               	skipz
 10165  0049  2877               	goto	i1l4979
 10166                           
 10167                           ;main.c: 70: {
 10168                           ;main.c: 71: if(igascntr != 0)
 10169  004A  0023               	movlb	3	; select bank3
 10170  004B  083D               	movf	(_igascntr+1)^(0+384),w
 10171  004C  043C               	iorwf	_igascntr^(0+384),w
 10172  004D  1903               	skipnz
 10173  004E  2854               	goto	i1l4955
 10174                           
 10175                           ;main.c: 72: {
 10176                           ;main.c: 73: igascntr--;
 10177  004F  3001               	movlw	1
 10178  0050  02BC               	subwf	_igascntr^(0+384),f
 10179  0051  3000               	movlw	0
 10180  0052  3BBD               	subwfb	(_igascntr+1)^(0+384),f
 10181                           
 10182                           ;main.c: 74: }else
 10183  0053  2865               	goto	i1l4973
 10184  0054                     i1l4955:	
 10185                           
 10186                           ;main.c: 75: {
 10187                           ;main.c: 76: igascntr = 0;
 10188  0054  01BC               	clrf	_igascntr^(0+384)
 10189  0055  01BD               	clrf	(_igascntr+1)^(0+384)
 10190                           
 10191                           ;main.c: 77: gaschkfg = 0;
 10192  0056  0022               	movlb	2	; select bank2
 10193  0057  01C1               	clrf	_gaschkfg^(0+256)
 10194                           
 10195                           ;main.c: 78: TypeU.TypeS.gason =0;
 10196  0058  0020               	movlb	0	; select bank0
 10197  0059  11E7               	bcf	_TypeU,3
 10198                           
 10199                           ;main.c: 79: PORTCbits.RC3 =0;
 10200  005A  118E               	bcf	14,3	;volatile
 10201                           
 10202                           ;main.c: 80: TypeU.TypeS.wirespeed=1;
 10203  005B  1467               	bsf	_TypeU,0
 10204                           
 10205                           ;main.c: 81: TypeU.TypeS.amp=0;
 10206  005C  1068               	bcf	_TypeU+1,0
 10207                           
 10208                           ;main.c: 82: TypeU.TypeS.thickness=0;
 10209  005D  10E7               	bcf	_TypeU,1
 10210                           
 10211                           ;main.c: 83: TypeDP.DPGROUP[0]=0x00;
 10212  005E  01EB               	clrf	_TypeDP
 10213                           
 10214                           ;main.c: 84: TypeDP.TypeD.digitdp2 =1;
 10215  005F  14EB               	bsf	_TypeDP,1
 10216                           
 10217                           ;main.c: 85: TypeDP.TypeD.digitdp5 =1;
 10218  0060  166B               	bsf	_TypeDP,4
 10219                           
 10220                           ;main.c: 86: dispupdatef =1;
 10221  0061  3001               	movlw	1
 10222  0062  00CB               	movwf	??_ISR_Function
 10223  0063  084B               	movf	??_ISR_Function,w
 10224  0064  00EF               	movwf	_dispupdatef	;volatile
 10225  0065                     i1l4973:	
 10226                           
 10227                           ;main.c: 87: }
 10228                           ;main.c: 88: diswin1[0]= 0x11;
 10229  0065  3011               	movlw	17
 10230  0066  0020               	movlb	0	; select bank0
 10231  0067  00CB               	movwf	??_ISR_Function
 10232  0068  084B               	movf	??_ISR_Function,w
 10233  0069  0022               	movlb	2	; select bank2
 10234  006A  00E4               	movwf	_diswin1^(0+256)
 10235                           
 10236                           ;main.c: 89: diswin1[1]= 0x0B;
 10237  006B  300B               	movlw	11
 10238  006C  0020               	movlb	0	; select bank0
 10239  006D  00CB               	movwf	??_ISR_Function
 10240  006E  084B               	movf	??_ISR_Function,w
 10241  006F  0022               	movlb	2	; select bank2
 10242  0070  00E5               	movwf	(_diswin1^(0+256)+1)
 10243                           
 10244                           ;main.c: 90: diswin1[2]= 0x1D;
 10245  0071  301D               	movlw	29
 10246  0072  0020               	movlb	0	; select bank0
 10247  0073  00CB               	movwf	??_ISR_Function
 10248  0074  084B               	movf	??_ISR_Function,w
 10249  0075  0022               	movlb	2	; select bank2
 10250  0076  00E6               	movwf	(_diswin1^(0+256)+2)
 10251  0077                     i1l4979:	
 10252                           
 10253                           ;main.c: 91: }
 10254                           ;main.c: 93: if(weldmode=='P' || weldmode=='G')
 10255  0077  0020               	movlb	0	; select bank0
 10256  0078  0866               	movf	_weldmode,w	;volatile
 10257  0079  3A50               	xorlw	80
 10258  007A  1903               	skipnz
 10259  007B  2880               	goto	i1l4983
 10260  007C  0866               	movf	_weldmode,w	;volatile
 10261  007D  3A47               	xorlw	71
 10262  007E  1D03               	skipz
 10263  007F  2894               	goto	i1l4989
 10264  0080                     i1l4983:	
 10265                           
 10266                           ;main.c: 94: {
 10267                           ;main.c: 95: if(comm_error_count>3)
 10268  0080  3004               	movlw	4
 10269  0081  0022               	movlb	2	; select bank2
 10270  0082  0237               	subwf	_comm_error_count^(0+256),w	;volatile
 10271  0083  1C03               	skipc
 10272  0084  2892               	goto	i1l4987
 10273                           
 10274                           ;main.c: 96: {
 10275                           ;main.c: 97: error8=1;
 10276  0085  3001               	movlw	1
 10277  0086  0020               	movlb	0	; select bank0
 10278  0087  00CB               	movwf	??_ISR_Function
 10279  0088  084B               	movf	??_ISR_Function,w
 10280  0089  0022               	movlb	2	; select bank2
 10281  008A  00BE               	movwf	_error8^(0+256)	;volatile
 10282                           
 10283                           ;main.c: 98: comm_error_count=4;
 10284  008B  3004               	movlw	4
 10285  008C  0020               	movlb	0	; select bank0
 10286  008D  00CB               	movwf	??_ISR_Function
 10287  008E  084B               	movf	??_ISR_Function,w
 10288  008F  0022               	movlb	2	; select bank2
 10289  0090  00B7               	movwf	_comm_error_count^(0+256)	;volatile
 10290                           
 10291                           ;main.c: 99: }
 10292  0091  2897               	goto	i1l4991
 10293  0092                     i1l4987:	
 10294                           
 10295                           ;main.c: 100: else
 10296                           ;main.c: 101: error8=0;
 10297  0092  01BE               	clrf	_error8^(0+256)	;volatile
 10298                           
 10299                           ;main.c: 102: }
 10300  0093  2897               	goto	i1l4991
 10301  0094                     i1l4989:	
 10302                           
 10303                           ;main.c: 103: else
 10304                           ;main.c: 104: {
 10305                           ;main.c: 105: error8=0;
 10306  0094  0022               	movlb	2	; select bank2
 10307  0095  01BE               	clrf	_error8^(0+256)	;volatile
 10308                           
 10309                           ;main.c: 106: comm_error_count=0;
 10310  0096  01B7               	clrf	_comm_error_count^(0+256)	;volatile
 10311  0097                     i1l4991:	
 10312                           
 10313                           ;main.c: 107: }
 10314                           ;main.c: 123: }
 10315                           ;main.c: 124: if(count_2ms >=1)
 10316  0097  0022               	movlb	2	; select bank2
 10317  0098  0839               	movf	_count_2ms^(0+256),w	;volatile
 10318  0099  1903               	btfsc	3,2
 10319  009A  28A2               	goto	i1l4997
 10320                           
 10321                           ;main.c: 125: {
 10322                           ;main.c: 126: count_2ms=0;
 10323  009B  01B9               	clrf	_count_2ms^(0+256)	;volatile
 10324                           
 10325                           ;main.c: 127: read_enc1f=1;
 10326  009C  3001               	movlw	1
 10327  009D  0020               	movlb	0	; select bank0
 10328  009E  00CB               	movwf	??_ISR_Function
 10329  009F  084B               	movf	??_ISR_Function,w
 10330  00A0  0022               	movlb	2	; select bank2
 10331  00A1  00D2               	movwf	_read_enc1f^(0+256)	;volatile
 10332  00A2                     i1l4997:	
 10333                           
 10334                           ;main.c: 128: }
 10335                           ;main.c: 130: if(count_1msec >= 10)
 10336  00A2  300A               	movlw	10
 10337  00A3  0238               	subwf	_count_1msec^(0+256),w
 10338  00A4  1C03               	skipc
 10339  00A5  28EF               	goto	i1l5025
 10340                           
 10341                           ;main.c: 131: {
 10342                           ;main.c: 132: count_1msec=0;
 10343  00A6  01B8               	clrf	_count_1msec^(0+256)
 10344                           
 10345                           ;main.c: 133: if(kpressread==0)
 10346  00A7  08C2               	movf	_kpressread^(0+256),f
 10347  00A8  1D03               	skipz
 10348  00A9  28B3               	goto	i1l5007
 10349                           
 10350                           ;main.c: 134: {
 10351                           ;main.c: 135: torchstatus1=PORTCbits.RC5;
 10352  00AA  3000               	movlw	0
 10353  00AB  0020               	movlb	0	; select bank0
 10354  00AC  1A8E               	btfsc	14,5	;volatile
 10355  00AD  3001               	movlw	1
 10356  00AE  0022               	movlb	2	; select bank2
 10357  00AF  00D8               	movwf	_torchstatus1^(0+256)
 10358                           
 10359                           ;main.c: 136: kpressread=1;
 10360  00B0  01C2               	clrf	_kpressread^(0+256)
 10361  00B1  0AC2               	incf	_kpressread^(0+256),f
 10362                           
 10363                           ;main.c: 137: }
 10364  00B2  28EF               	goto	i1l5025
 10365  00B3                     i1l5007:	
 10366                           
 10367                           ;main.c: 138: else
 10368                           ;main.c: 139: {
 10369                           ;main.c: 140: kpressread=0;
 10370  00B3  01C2               	clrf	_kpressread^(0+256)
 10371                           
 10372                           ;main.c: 141: torchstatus2=PORTCbits.RC5;
 10373  00B4  3000               	movlw	0
 10374  00B5  0020               	movlb	0	; select bank0
 10375  00B6  1A8E               	btfsc	14,5	;volatile
 10376  00B7  3001               	movlw	1
 10377  00B8  0022               	movlb	2	; select bank2
 10378  00B9  00D9               	movwf	_torchstatus2^(0+256)
 10379                           
 10380                           ;main.c: 142: tans =(torchstatus1 == torchstatus2 ? 1:0);
 10381  00BA  0858               	movf	_torchstatus1^(0+256),w
 10382  00BB  0659               	xorwf	_torchstatus2^(0+256),w
 10383  00BC  3000               	movlw	0
 10384  00BD  1903               	skipnz
 10385  00BE  3001               	movlw	1
 10386  00BF  0020               	movlb	0	; select bank0
 10387  00C0  00CB               	movwf	??_ISR_Function
 10388  00C1  084B               	movf	??_ISR_Function,w
 10389  00C2  0022               	movlb	2	; select bank2
 10390  00C3  00D7               	movwf	_tans^(0+256)
 10391                           
 10392                           ;main.c: 143: if(tans==1)
 10393  00C4  0857               	movf	_tans^(0+256),w
 10394  00C5  3A01               	xorlw	1
 10395  00C6  1D03               	skipz
 10396  00C7  28E0               	goto	i1l5019
 10397                           
 10398                           ;main.c: 144: {
 10399                           ;main.c: 145: TORCH=(torchstatus2 == 0 ? 'P':'X');
 10400  00C8  0859               	movf	_torchstatus2^(0+256),w
 10401  00C9  1903               	btfsc	3,2
 10402  00CA  28CD               	goto	i1l5015
 10403  00CB  3058               	movlw	88
 10404  00CC  28CE               	goto	L20
 10405  00CD                     i1l5015:	
 10406  00CD  3050               	movlw	80
 10407  00CE                     L20:	
 10408  00CE  00FC               	movwf	_ISR_Function$1183
 10409  00CF  3000               	movlw	0
 10410  00D0  00FD               	movwf	_ISR_Function$1183+1
 10411  00D1  087C               	movf	_ISR_Function$1183,w
 10412  00D2  0020               	movlb	0	; select bank0
 10413  00D3  00CB               	movwf	??_ISR_Function
 10414  00D4  084B               	movf	??_ISR_Function,w
 10415  00D5  0022               	movlb	2	; select bank2
 10416  00D6  00EC               	movwf	_TORCH^(0+256)
 10417                           
 10418                           ;main.c: 146: if(TORCH=='P')
 10419  00D7  086C               	movf	_TORCH^(0+256),w
 10420  00D8  3A50               	xorlw	80
 10421  00D9  1D03               	skipz
 10422  00DA  28DE               	goto	i1l580
 10423                           
 10424                           ;main.c: 147: {
 10425                           ;main.c: 148: wfstatusu.wfstatuss.torchonstatus=1;
 10426  00DB  0020               	movlb	0	; select bank0
 10427  00DC  14EE               	bsf	_wfstatusu,1
 10428                           
 10429                           ;main.c: 149: }
 10430  00DD  28E0               	goto	i1l5019
 10431  00DE                     i1l580:	
 10432                           
 10433                           ;main.c: 150: else
 10434                           ;main.c: 151: {
 10435                           ;main.c: 152: wfstatusu.wfstatuss.torchonstatus=0;
 10436  00DE  0020               	movlb	0	; select bank0
 10437  00DF  10EE               	bcf	_wfstatusu,1
 10438  00E0                     i1l5019:	
 10439                           
 10440                           ;main.c: 153: }
 10441                           ;main.c: 154: }
 10442                           ;main.c: 155: if(prevTORCH != TORCH)
 10443  00E0  0022               	movlb	2	; select bank2
 10444  00E1  086D               	movf	_prevTORCH^(0+256),w
 10445  00E2  066C               	xorwf	_TORCH^(0+256),w
 10446  00E3  1903               	skipnz
 10447  00E4  28E8               	goto	i1l5023
 10448                           
 10449                           ;main.c: 156: {
 10450                           ;main.c: 157: count_1ms=0;
 10451  00E5  0023               	movlb	3	; select bank3
 10452  00E6  01B6               	clrf	_count_1ms^(0+384)	;volatile
 10453  00E7  01B7               	clrf	(_count_1ms+1)^(0+384)	;volatile
 10454  00E8                     i1l5023:	
 10455                           
 10456                           ;main.c: 160: }
 10457                           ;main.c: 161: prevTORCH = TORCH;
 10458  00E8  0022               	movlb	2	; select bank2
 10459  00E9  086C               	movf	_TORCH^(0+256),w
 10460  00EA  0020               	movlb	0	; select bank0
 10461  00EB  00CB               	movwf	??_ISR_Function
 10462  00EC  084B               	movf	??_ISR_Function,w
 10463  00ED  0022               	movlb	2	; select bank2
 10464  00EE  00ED               	movwf	_prevTORCH^(0+256)
 10465  00EF                     i1l5025:	
 10466                           
 10467                           ;main.c: 162: }
 10468                           ;main.c: 163: }
 10469                           ;main.c: 164: }
 10470                           ;main.c: 166: if(PIE1bits.TMR2IE & PIR1bits.TMR2IF)
 10471  00EF  0020               	movlb	0	; select bank0
 10472  00F0  0C11               	rrf	17,w	;volatile
 10473  00F1  3901               	andlw	1
 10474  00F2  00CB               	movwf	??_ISR_Function
 10475  00F3  0021               	movlb	1	; select bank1
 10476  00F4  0C11               	rrf	17,w	;volatile
 10477  00F5  3901               	andlw	1
 10478  00F6  0020               	movlb	0	; select bank0
 10479  00F7  054B               	andwf	??_ISR_Function,w
 10480  00F8  1903               	btfsc	3,2
 10481  00F9  28FC               	goto	i1l5029
 10482                           
 10483                           ;main.c: 167: {
 10484                           ;main.c: 168: PIR1bits.TMR2IF=0;
 10485  00FA  1091               	bcf	17,1	;volatile
 10486                           
 10487                           ;main.c: 169: return;
 10488  00FB  2CE7               	goto	i1l584
 10489  00FC                     i1l5029:	
 10490                           
 10491                           ;main.c: 170: }
 10492                           ;main.c: 171: if(PIE1bits.TXIE & PIR1bits.TXIF)
 10493  00FC  0E11               	swapf	17,w	;volatile
 10494  00FD  3901               	andlw	1
 10495  00FE  00CB               	movwf	??_ISR_Function
 10496  00FF  0021               	movlb	1	; select bank1
 10497  0100  0E11               	swapf	17,w	;volatile
 10498  0101  3901               	andlw	1
 10499  0102  0020               	movlb	0	; select bank0
 10500  0103  054B               	andwf	??_ISR_Function,w
 10501  0104  1903               	btfsc	3,2
 10502  0105  2908               	goto	i1l5033
 10503                           
 10504                           ;main.c: 172: {
 10505                           ;main.c: 173: PIR1bits.TXIF=0;
 10506  0106  1211               	bcf	17,4	;volatile
 10507                           
 10508                           ;main.c: 174: return;
 10509  0107  2CE7               	goto	i1l584
 10510  0108                     i1l5033:	
 10511                           
 10512                           ;main.c: 175: }
 10513                           ;main.c: 177: if(PIE2bits.CCP2IE & PIR2bits.CCP2IF)
 10514  0108  0812               	movf	18,w	;volatile
 10515  0109  3901               	andlw	1
 10516  010A  00CB               	movwf	??_ISR_Function
 10517  010B  0021               	movlb	1	; select bank1
 10518  010C  0812               	movf	18,w	;volatile
 10519  010D  3901               	andlw	1
 10520  010E  0020               	movlb	0	; select bank0
 10521  010F  054B               	andwf	??_ISR_Function,w
 10522  0110  1903               	btfsc	3,2
 10523  0111  2AD3               	goto	i1l5115
 10524                           
 10525                           ;main.c: 178: {
 10526                           ;main.c: 179: PIR2bits.CCP2IF =0;
 10527  0112  1012               	bcf	18,0	;volatile
 10528                           
 10529                           ;main.c: 180: if(Count == 0)
 10530  0113  0022               	movlb	2	; select bank2
 10531  0114  08AC               	movf	_Count^(0+256),f	;volatile
 10532  0115  1D03               	skipz
 10533  0116  292C               	goto	i1l5041
 10534                           
 10535                           ;main.c: 181: {
 10536                           ;main.c: 182: OneH = CCPR2H;
 10537  0117  0025               	movlb	5	; select bank5
 10538  0118  0819               	movf	25,w	;volatile
 10539  0119  0020               	movlb	0	; select bank0
 10540  011A  00CB               	movwf	??_ISR_Function
 10541  011B  084B               	movf	??_ISR_Function,w
 10542  011C  0022               	movlb	2	; select bank2
 10543  011D  00AD               	movwf	_OneH^(0+256)	;volatile
 10544                           
 10545                           ;main.c: 183: OneL = CCPR2L;
 10546  011E  0025               	movlb	5	; select bank5
 10547  011F  0818               	movf	24,w	;volatile
 10548  0120  0020               	movlb	0	; select bank0
 10549  0121  00CB               	movwf	??_ISR_Function
 10550  0122  084B               	movf	??_ISR_Function,w
 10551  0123  0022               	movlb	2	; select bank2
 10552  0124  00AE               	movwf	_OneL^(0+256)	;volatile
 10553                           
 10554                           ;main.c: 184: Count = 1;
 10555  0125  3001               	movlw	1
 10556  0126  0020               	movlb	0	; select bank0
 10557  0127  00CB               	movwf	??_ISR_Function
 10558  0128  084B               	movf	??_ISR_Function,w
 10559  0129  0022               	movlb	2	; select bank2
 10560  012A  00AC               	movwf	_Count^(0+256)	;volatile
 10561                           
 10562                           ;main.c: 185: }
 10563  012B  2AD3               	goto	i1l5115
 10564  012C                     i1l5041:	
 10565                           
 10566                           ;main.c: 186: else
 10567                           ;main.c: 187: {
 10568                           ;main.c: 188: TwoH = CCPR2H;
 10569  012C  0025               	movlb	5	; select bank5
 10570  012D  0819               	movf	25,w	;volatile
 10571  012E  0020               	movlb	0	; select bank0
 10572  012F  00CB               	movwf	??_ISR_Function
 10573  0130  084B               	movf	??_ISR_Function,w
 10574  0131  0022               	movlb	2	; select bank2
 10575  0132  00AF               	movwf	_TwoH^(0+256)	;volatile
 10576                           
 10577                           ;main.c: 189: TwoL = CCPR2L;
 10578  0133  0025               	movlb	5	; select bank5
 10579  0134  0818               	movf	24,w	;volatile
 10580  0135  0020               	movlb	0	; select bank0
 10581  0136  00CB               	movwf	??_ISR_Function
 10582  0137  084B               	movf	??_ISR_Function,w
 10583  0138  0022               	movlb	2	; select bank2
 10584  0139  00B0               	movwf	_TwoL^(0+256)	;volatile
 10585                           
 10586                           ;main.c: 190: TMR1H = 0x00;
 10587  013A  0020               	movlb	0	; select bank0
 10588  013B  0197               	clrf	23	;volatile
 10589                           
 10590                           ;main.c: 191: TMR1L = 0x00;
 10591  013C  0196               	clrf	22	;volatile
 10592                           
 10593                           ;main.c: 192: Count = 0;
 10594  013D  0022               	movlb	2	; select bank2
 10595  013E  01AC               	clrf	_Count^(0+256)	;volatile
 10596                           
 10597                           ;main.c: 193: Two = TwoH;
 10598  013F  082F               	movf	_TwoH^(0+256),w	;volatile
 10599  0140  0020               	movlb	0	; select bank0
 10600  0141  00CB               	movwf	??_ISR_Function
 10601  0142  01CC               	clrf	??_ISR_Function+1
 10602  0143  084B               	movf	??_ISR_Function,w
 10603  0144  0023               	movlb	3	; select bank3
 10604  0145  00B4               	movwf	_Two^(0+384)	;volatile
 10605  0146  0020               	movlb	0	; select bank0
 10606  0147  084C               	movf	??_ISR_Function+1,w
 10607  0148  0023               	movlb	3	; select bank3
 10608  0149  00B5               	movwf	(_Two+1)^(0+384)	;volatile
 10609                           
 10610                           ;main.c: 194: Two <<= 8;
 10611  014A  3008               	movlw	8
 10612  014B                     u702_25:	
 10613  014B  35B4               	lslf	_Two^(0+384),f	;volatile
 10614  014C  0DB5               	rlf	(_Two+1)^(0+384),f	;volatile
 10615  014D  0B89               	decfsz	9,f
 10616  014E  294B               	goto	u702_25
 10617                           
 10618                           ;main.c: 195: Two |= TwoL;
 10619  014F  0022               	movlb	2	; select bank2
 10620  0150  0830               	movf	_TwoL^(0+256),w	;volatile
 10621  0151  0020               	movlb	0	; select bank0
 10622  0152  00CB               	movwf	??_ISR_Function
 10623  0153  01CC               	clrf	??_ISR_Function+1
 10624  0154  084B               	movf	??_ISR_Function,w
 10625  0155  0023               	movlb	3	; select bank3
 10626  0156  04B4               	iorwf	_Two^(0+384),f	;volatile
 10627  0157  0020               	movlb	0	; select bank0
 10628  0158  084C               	movf	??_ISR_Function+1,w
 10629  0159  0023               	movlb	3	; select bank3
 10630  015A  04B5               	iorwf	(_Two+1)^(0+384),f	;volatile
 10631                           
 10632                           ;main.c: 196: One = OneH;
 10633  015B  0022               	movlb	2	; select bank2
 10634  015C  082D               	movf	_OneH^(0+256),w	;volatile
 10635  015D  0020               	movlb	0	; select bank0
 10636  015E  00CB               	movwf	??_ISR_Function
 10637  015F  01CC               	clrf	??_ISR_Function+1
 10638  0160  084B               	movf	??_ISR_Function,w
 10639  0161  0023               	movlb	3	; select bank3
 10640  0162  00B0               	movwf	_One^(0+384)	;volatile
 10641  0163  0020               	movlb	0	; select bank0
 10642  0164  084C               	movf	??_ISR_Function+1,w
 10643  0165  0023               	movlb	3	; select bank3
 10644  0166  00B1               	movwf	(_One+1)^(0+384)	;volatile
 10645                           
 10646                           ;main.c: 197: One <<= 8;
 10647  0167  3008               	movlw	8
 10648  0168                     u703_25:	
 10649  0168  35B0               	lslf	_One^(0+384),f	;volatile
 10650  0169  0DB1               	rlf	(_One+1)^(0+384),f	;volatile
 10651  016A  0B89               	decfsz	9,f
 10652  016B  2968               	goto	u703_25
 10653                           
 10654                           ;main.c: 198: One |= OneL;
 10655  016C  0022               	movlb	2	; select bank2
 10656  016D  082E               	movf	_OneL^(0+256),w	;volatile
 10657  016E  0020               	movlb	0	; select bank0
 10658  016F  00CB               	movwf	??_ISR_Function
 10659  0170  01CC               	clrf	??_ISR_Function+1
 10660  0171  084B               	movf	??_ISR_Function,w
 10661  0172  0023               	movlb	3	; select bank3
 10662  0173  04B0               	iorwf	_One^(0+384),f	;volatile
 10663  0174  0020               	movlb	0	; select bank0
 10664  0175  084C               	movf	??_ISR_Function+1,w
 10665  0176  0023               	movlb	3	; select bank3
 10666  0177  04B1               	iorwf	(_One+1)^(0+384),f	;volatile
 10667                           
 10668                           ;main.c: 199: Total_Count = Two - One;
 10669  0178  0930               	comf	_One^(0+384),w	;volatile
 10670  0179  0020               	movlb	0	; select bank0
 10671  017A  00CB               	movwf	??_ISR_Function
 10672  017B  0023               	movlb	3	; select bank3
 10673  017C  0931               	comf	(_One+1)^(0+384),w	;volatile
 10674  017D  0020               	movlb	0	; select bank0
 10675  017E  00CC               	movwf	??_ISR_Function+1
 10676  017F  0ACB               	incf	??_ISR_Function,f
 10677  0180  1903               	skipnz
 10678  0181  0ACC               	incf	??_ISR_Function+1,f
 10679  0182  0023               	movlb	3	; select bank3
 10680  0183  0834               	movf	_Two^(0+384),w	;volatile
 10681  0184  0020               	movlb	0	; select bank0
 10682  0185  074B               	addwf	??_ISR_Function,w
 10683  0186  0023               	movlb	3	; select bank3
 10684  0187  00B2               	movwf	_Total_Count^(0+384)	;volatile
 10685  0188  0835               	movf	(_Two+1)^(0+384),w	;volatile
 10686  0189  0020               	movlb	0	; select bank0
 10687  018A  3D4C               	addwfc	??_ISR_Function+1,w
 10688  018B  0023               	movlb	3	; select bank3
 10689  018C  00B3               	movwf	(_Total_Count+1)^(0+384)	;volatile
 10690                           
 10691                           ;main.c: 201: pperiod=Total_Count;
 10692  018D  0833               	movf	(_Total_Count+1)^(0+384),w	;volatile
 10693  018E  01C3               	clrf	(_pperiod+1)^(0+384)	;volatile
 10694  018F  07C3               	addwf	(_pperiod+1)^(0+384),f	;volatile
 10695  0190  0832               	movf	_Total_Count^(0+384),w	;volatile
 10696  0191  01C2               	clrf	_pperiod^(0+384)	;volatile
 10697  0192  07C2               	addwf	_pperiod^(0+384),f	;volatile
 10698                           
 10699                           ;main.c: 202: Total_Period=Total_Period+pperiod;
 10700  0193  0024               	movlb	4	; select bank4
 10701  0194  0820               	movf	_Total_Period^(0+512),w
 10702  0195  0020               	movlb	0	; select bank0
 10703  0196  00CB               	movwf	??_ISR_Function
 10704  0197  0024               	movlb	4	; select bank4
 10705  0198  0821               	movf	(_Total_Period+1)^(0+512),w
 10706  0199  0020               	movlb	0	; select bank0
 10707  019A  00CC               	movwf	??_ISR_Function+1
 10708  019B  0024               	movlb	4	; select bank4
 10709  019C  0822               	movf	(_Total_Period+2)^(0+512),w
 10710  019D  0020               	movlb	0	; select bank0
 10711  019E  00CD               	movwf	??_ISR_Function+2
 10712  019F  0024               	movlb	4	; select bank4
 10713  01A0  0823               	movf	(_Total_Period+3)^(0+512),w
 10714  01A1  0020               	movlb	0	; select bank0
 10715  01A2  00CE               	movwf	??_ISR_Function+3
 10716  01A3  0023               	movlb	3	; select bank3
 10717  01A4  0842               	movf	_pperiod^(0+384),w	;volatile
 10718  01A5  0020               	movlb	0	; select bank0
 10719  01A6  00CF               	movwf	??_ISR_Function+4
 10720  01A7  0023               	movlb	3	; select bank3
 10721  01A8  0843               	movf	(_pperiod+1)^(0+384),w	;volatile
 10722  01A9  0020               	movlb	0	; select bank0
 10723  01AA  00D0               	movwf	??_ISR_Function+5
 10724  01AB  01D1               	clrf	??_ISR_Function+6
 10725  01AC  01D2               	clrf	??_ISR_Function+7
 10726  01AD  084F               	movf	??_ISR_Function+4,w
 10727  01AE  07CB               	addwf	??_ISR_Function,f
 10728  01AF  0850               	movf	??_ISR_Function+5,w
 10729  01B0  3DCC               	addwfc	??_ISR_Function+1,f
 10730  01B1  0851               	movf	??_ISR_Function+6,w
 10731  01B2  3DCD               	addwfc	??_ISR_Function+2,f
 10732  01B3  0852               	movf	??_ISR_Function+7,w
 10733  01B4  3DCE               	addwfc	??_ISR_Function+3,f
 10734  01B5  084E               	movf	??_ISR_Function+3,w
 10735  01B6  0024               	movlb	4	; select bank4
 10736  01B7  00A3               	movwf	(_Total_Period+3)^(0+512)
 10737  01B8  0020               	movlb	0	; select bank0
 10738  01B9  084D               	movf	??_ISR_Function+2,w
 10739  01BA  0024               	movlb	4	; select bank4
 10740  01BB  00A2               	movwf	(_Total_Period+2)^(0+512)
 10741  01BC  0020               	movlb	0	; select bank0
 10742  01BD  084C               	movf	??_ISR_Function+1,w
 10743  01BE  0024               	movlb	4	; select bank4
 10744  01BF  00A1               	movwf	(_Total_Period+1)^(0+512)
 10745  01C0  0020               	movlb	0	; select bank0
 10746  01C1  084B               	movf	??_ISR_Function,w
 10747  01C2  0024               	movlb	4	; select bank4
 10748  01C3  00A0               	movwf	_Total_Period^(0+512)
 10749                           
 10750                           ;main.c: 203: pcount++;
 10751  01C4  3001               	movlw	1
 10752  01C5  0020               	movlb	0	; select bank0
 10753  01C6  00CB               	movwf	??_ISR_Function
 10754  01C7  084B               	movf	??_ISR_Function,w
 10755  01C8  0022               	movlb	2	; select bank2
 10756  01C9  07CA               	addwf	_pcount^(0+256),f
 10757                           
 10758                           ;main.c: 204: if(pcount>=8)
 10759  01CA  3008               	movlw	8
 10760  01CB  024A               	subwf	_pcount^(0+256),w
 10761  01CC  1C03               	skipc
 10762  01CD  2AD3               	goto	i1l5115
 10763                           
 10764                           ;main.c: 205: {
 10765                           ;main.c: 206: pcount=0;
 10766  01CE  01CA               	clrf	_pcount^(0+256)
 10767                           
 10768                           ;main.c: 207: avgpperiod=Total_Period>>4;
 10769  01CF  0024               	movlb	4	; select bank4
 10770  01D0  0820               	movf	_Total_Period^(0+512),w
 10771  01D1  0020               	movlb	0	; select bank0
 10772  01D2  00CB               	movwf	??_ISR_Function
 10773  01D3  0024               	movlb	4	; select bank4
 10774  01D4  0821               	movf	(_Total_Period+1)^(0+512),w
 10775  01D5  0020               	movlb	0	; select bank0
 10776  01D6  00CC               	movwf	??_ISR_Function+1
 10777  01D7  0024               	movlb	4	; select bank4
 10778  01D8  0822               	movf	(_Total_Period+2)^(0+512),w
 10779  01D9  0020               	movlb	0	; select bank0
 10780  01DA  00CD               	movwf	??_ISR_Function+2
 10781  01DB  0024               	movlb	4	; select bank4
 10782  01DC  0823               	movf	(_Total_Period+3)^(0+512),w
 10783  01DD  0020               	movlb	0	; select bank0
 10784  01DE  00CE               	movwf	??_ISR_Function+3
 10785  01DF  3004               	movlw	4
 10786  01E0                     u705_25:	
 10787  01E0  36CE               	lsrf	??_ISR_Function+3,f
 10788  01E1  0CCD               	rrf	??_ISR_Function+2,f
 10789  01E2  0CCC               	rrf	??_ISR_Function+1,f
 10790  01E3  0CCB               	rrf	??_ISR_Function,f
 10791  01E4  0B89               	decfsz	9,f
 10792  01E5  29E0               	goto	u705_25
 10793  01E6  084C               	movf	??_ISR_Function+1,w
 10794  01E7  0022               	movlb	2	; select bank2
 10795  01E8  01DE               	clrf	(_avgpperiod+1)^(0+256)	;volatile
 10796  01E9  07DE               	addwf	(_avgpperiod+1)^(0+256),f	;volatile
 10797  01EA  0020               	movlb	0	; select bank0
 10798  01EB  084B               	movf	??_ISR_Function,w
 10799  01EC  0022               	movlb	2	; select bank2
 10800  01ED  01DD               	clrf	_avgpperiod^(0+256)	;volatile
 10801  01EE  07DD               	addwf	_avgpperiod^(0+256),f	;volatile
 10802                           
 10803                           ;main.c: 208: pfreq=1000000/avgpperiod;
 10804  01EF  085D               	movf	_avgpperiod^(0+256),w	;volatile
 10805  01F0  00F0               	movwf	i1___aldiv@divisor
 10806  01F1  085E               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 10807  01F2  00F1               	movwf	i1___aldiv@divisor+1
 10808  01F3  01F2               	clrf	i1___aldiv@divisor+2
 10809  01F4  01F3               	clrf	i1___aldiv@divisor+3
 10810  01F5  3000               	movlw	0
 10811  01F6  00F7               	movwf	i1___aldiv@dividend+3
 10812  01F7  300F               	movlw	15
 10813  01F8  00F6               	movwf	i1___aldiv@dividend+2
 10814  01F9  3042               	movlw	66
 10815  01FA  00F5               	movwf	i1___aldiv@dividend+1
 10816  01FB  3040               	movlw	64
 10817  01FC  00F4               	movwf	i1___aldiv@dividend
 10818  01FD  319D  25EE  3180   	fcall	i1___aldiv
 10819  0200  0871               	movf	?i1___aldiv+1,w
 10820  0201  0022               	movlb	2	; select bank2
 10821  0202  01E2               	clrf	(_pfreq+1)^(0+256)	;volatile
 10822  0203  07E2               	addwf	(_pfreq+1)^(0+256),f	;volatile
 10823  0204  0870               	movf	?i1___aldiv,w
 10824  0205  01E1               	clrf	_pfreq^(0+256)	;volatile
 10825  0206  07E1               	addwf	_pfreq^(0+256),f	;volatile
 10826                           
 10827                           ;main.c: 209: Total_Period=0;
 10828  0207  3000               	movlw	0
 10829  0208  0024               	movlb	4	; select bank4
 10830  0209  00A3               	movwf	(_Total_Period+3)^(0+512)
 10831  020A  3000               	movlw	0
 10832  020B  00A2               	movwf	(_Total_Period+2)^(0+512)
 10833  020C  3000               	movlw	0
 10834  020D  00A1               	movwf	(_Total_Period+1)^(0+512)
 10835  020E  3000               	movlw	0
 10836  020F  00A0               	movwf	_Total_Period^(0+512)
 10837                           
 10838                           ;main.c: 211: Tsampling =avgpperiod/1000.0;
 10839  0210  3000               	movlw	0
 10840  0211  0020               	movlb	0	; select bank0
 10841  0212  00A0               	movwf	i1___ftdiv@f2
 10842  0213  307A               	movlw	122
 10843  0214  00A1               	movwf	i1___ftdiv@f2+1
 10844  0215  3044               	movlw	68
 10845  0216  00A2               	movwf	i1___ftdiv@f2+2
 10846  0217  0022               	movlb	2	; select bank2
 10847  0218  085E               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 10848  0219  01F9               	clrf	i1___lwtoft@c+1
 10849  021A  07F9               	addwf	i1___lwtoft@c+1,f
 10850  021B  085D               	movf	_avgpperiod^(0+256),w	;volatile
 10851  021C  01F8               	clrf	i1___lwtoft@c
 10852  021D  07F8               	addwf	i1___lwtoft@c,f
 10853  021E  3199  2114  3180   	fcall	i1___lwtoft
 10854  0221  0878               	movf	?i1___lwtoft,w
 10855  0222  0020               	movlb	0	; select bank0
 10856  0223  00A3               	movwf	i1___ftdiv@f1
 10857  0224  0879               	movf	?i1___lwtoft+1,w
 10858  0225  00A4               	movwf	i1___ftdiv@f1+1
 10859  0226  087A               	movf	?i1___lwtoft+2,w
 10860  0227  00A5               	movwf	i1___ftdiv@f1+2
 10861  0228  3190  2033  3180   	fcall	i1___ftdiv
 10862  022B  0020               	movlb	0	; select bank0
 10863  022C  0820               	movf	?i1___ftdiv,w
 10864  022D  0023               	movlb	3	; select bank3
 10865  022E  00E0               	movwf	_Tsampling^(0+384)
 10866  022F  0020               	movlb	0	; select bank0
 10867  0230  0821               	movf	?i1___ftdiv+1,w
 10868  0231  0023               	movlb	3	; select bank3
 10869  0232  00E1               	movwf	(_Tsampling+1)^(0+384)
 10870  0233  0020               	movlb	0	; select bank0
 10871  0234  0822               	movf	?i1___ftdiv+2,w
 10872  0235  0023               	movlb	3	; select bank3
 10873  0236  00E2               	movwf	(_Tsampling+2)^(0+384)
 10874                           
 10875                           ;main.c: 213: if(pfreq>=999)
 10876  0237  3003               	movlw	3
 10877  0238  0022               	movlb	2	; select bank2
 10878  0239  0262               	subwf	(_pfreq+1)^(0+256),w	;volatile
 10879  023A  30E7               	movlw	231
 10880  023B  1903               	skipnz
 10881  023C  0261               	subwf	_pfreq^(0+256),w	;volatile
 10882  023D  1C03               	skipc
 10883  023E  2A44               	goto	i1l5085
 10884                           
 10885                           ;main.c: 214: pfreq=999;
 10886  023F  30E7               	movlw	231
 10887  0240  00E1               	movwf	_pfreq^(0+256)	;volatile
 10888  0241  3003               	movlw	3
 10889  0242  00E2               	movwf	(_pfreq^(0+256)+1)	;volatile
 10890  0243  2A4A               	goto	i1l5089
 10891  0244                     i1l5085:	
 10892                           
 10893                           ;main.c: 215: else if(pfreq<=0)
 10894  0244  0862               	movf	(_pfreq+1)^(0+256),w	;volatile
 10895  0245  0461               	iorwf	_pfreq^(0+256),w	;volatile
 10896  0246  1D03               	skipz
 10897  0247  2A4A               	goto	i1l5089
 10898                           
 10899                           ;main.c: 216: pfreq=0;
 10900  0248  01E1               	clrf	_pfreq^(0+256)	;volatile
 10901  0249  01E2               	clrf	(_pfreq+1)^(0+256)	;volatile
 10902  024A                     i1l5089:	
 10903                           
 10904                           ;main.c: 218: Fltpfreq=(0.2*pfreq)+(0.8)*prevFltpfreq;
 10905  024A  0862               	movf	(_pfreq+1)^(0+256),w	;volatile
 10906  024B  01F9               	clrf	i1___lwtoft@c+1
 10907  024C  07F9               	addwf	i1___lwtoft@c+1,f
 10908  024D  0861               	movf	_pfreq^(0+256),w	;volatile
 10909  024E  01F8               	clrf	i1___lwtoft@c
 10910  024F  07F8               	addwf	i1___lwtoft@c,f
 10911  0250  3199  2114  3180   	fcall	i1___lwtoft
 10912  0253  0878               	movf	?i1___lwtoft,w
 10913  0254  0020               	movlb	0	; select bank0
 10914  0255  00A3               	movwf	i1___ftmul@f2
 10915  0256  0879               	movf	?i1___lwtoft+1,w
 10916  0257  00A4               	movwf	i1___ftmul@f2+1
 10917  0258  087A               	movf	?i1___lwtoft+2,w
 10918  0259  00A5               	movwf	i1___ftmul@f2+2
 10919  025A  30CD               	movlw	205
 10920  025B  00A0               	movwf	i1___ftmul@f1
 10921  025C  304C               	movlw	76
 10922  025D  00A1               	movwf	i1___ftmul@f1+1
 10923  025E  303E               	movlw	62
 10924  025F  00A2               	movwf	i1___ftmul@f1+2
 10925  0260  3192  222F  3180   	fcall	i1___ftmul
 10926  0263  0020               	movlb	0	; select bank0
 10927  0264  0820               	movf	?i1___ftmul,w
 10928  0265  00B3               	movwf	i1___ftadd@f2
 10929  0266  0821               	movf	?i1___ftmul+1,w
 10930  0267  00B4               	movwf	i1___ftadd@f2+1
 10931  0268  0822               	movf	?i1___ftmul+2,w
 10932  0269  00B5               	movwf	i1___ftadd@f2+2
 10933  026A  0024               	movlb	4	; select bank4
 10934  026B  0843               	movf	(_prevFltpfreq+1)^(0+512),w
 10935  026C  01F9               	clrf	i1___lwtoft@c+1
 10936  026D  07F9               	addwf	i1___lwtoft@c+1,f
 10937  026E  0842               	movf	_prevFltpfreq^(0+512),w
 10938  026F  01F8               	clrf	i1___lwtoft@c
 10939  0270  07F8               	addwf	i1___lwtoft@c,f
 10940  0271  3199  2114  3180   	fcall	i1___lwtoft
 10941  0274  0878               	movf	?i1___lwtoft,w
 10942  0275  0020               	movlb	0	; select bank0
 10943  0276  00A3               	movwf	i1___ftmul@f2
 10944  0277  0879               	movf	?i1___lwtoft+1,w
 10945  0278  00A4               	movwf	i1___ftmul@f2+1
 10946  0279  087A               	movf	?i1___lwtoft+2,w
 10947  027A  00A5               	movwf	i1___ftmul@f2+2
 10948  027B  30CD               	movlw	205
 10949  027C  00A0               	movwf	i1___ftmul@f1
 10950  027D  304C               	movlw	76
 10951  027E  00A1               	movwf	i1___ftmul@f1+1
 10952  027F  303F               	movlw	63
 10953  0280  00A2               	movwf	i1___ftmul@f1+2
 10954  0281  3192  222F  3180   	fcall	i1___ftmul
 10955  0284  0020               	movlb	0	; select bank0
 10956  0285  0820               	movf	?i1___ftmul,w
 10957  0286  00B0               	movwf	i1___ftadd@f1
 10958  0287  0821               	movf	?i1___ftmul+1,w
 10959  0288  00B1               	movwf	i1___ftadd@f1+1
 10960  0289  0822               	movf	?i1___ftmul+2,w
 10961  028A  00B2               	movwf	i1___ftadd@f1+2
 10962  028B  3193  2397  3180   	fcall	i1___ftadd
 10963  028E  0020               	movlb	0	; select bank0
 10964  028F  0830               	movf	?i1___ftadd,w
 10965  0290  00BD               	movwf	i1___fttol@f1
 10966  0291  0831               	movf	?i1___ftadd+1,w
 10967  0292  00BE               	movwf	i1___fttol@f1+1
 10968  0293  0832               	movf	?i1___ftadd+2,w
 10969  0294  00BF               	movwf	i1___fttol@f1+2
 10970  0295  319E  26F2  3180   	fcall	i1___fttol
 10971  0298  0020               	movlb	0	; select bank0
 10972  0299  083E               	movf	?i1___fttol+1,w
 10973  029A  0022               	movlb	2	; select bank2
 10974  029B  01A1               	clrf	(_Fltpfreq+1)^(0+256)
 10975  029C  07A1               	addwf	(_Fltpfreq+1)^(0+256),f
 10976  029D  0020               	movlb	0	; select bank0
 10977  029E  083D               	movf	?i1___fttol,w
 10978  029F  0022               	movlb	2	; select bank2
 10979  02A0  01A0               	clrf	_Fltpfreq^(0+256)
 10980  02A1  07A0               	addwf	_Fltpfreq^(0+256),f
 10981                           
 10982                           ;main.c: 220: if(Fltpfreq>=999)
 10983  02A2  3003               	movlw	3
 10984  02A3  0221               	subwf	(_Fltpfreq+1)^(0+256),w
 10985  02A4  30E7               	movlw	231
 10986  02A5  1903               	skipnz
 10987  02A6  0220               	subwf	_Fltpfreq^(0+256),w
 10988  02A7  1C03               	skipc
 10989  02A8  2AAE               	goto	i1l5095
 10990                           
 10991                           ;main.c: 221: Fltpfreq=999;
 10992  02A9  30E7               	movlw	231
 10993  02AA  00A0               	movwf	_Fltpfreq^(0+256)
 10994  02AB  3003               	movlw	3
 10995  02AC  00A1               	movwf	(_Fltpfreq^(0+256)+1)
 10996  02AD  2AB4               	goto	i1l5099
 10997  02AE                     i1l5095:	
 10998                           
 10999                           ;main.c: 222: else if(Fltpfreq<=0)
 11000  02AE  0821               	movf	(_Fltpfreq+1)^(0+256),w
 11001  02AF  0420               	iorwf	_Fltpfreq^(0+256),w
 11002  02B0  1D03               	skipz
 11003  02B1  2AB4               	goto	i1l5099
 11004                           
 11005                           ;main.c: 223: Fltpfreq=0;
 11006  02B2  01A0               	clrf	_Fltpfreq^(0+256)
 11007  02B3  01A1               	clrf	(_Fltpfreq+1)^(0+256)
 11008  02B4                     i1l5099:	
 11009                           
 11010                           ;main.c: 225: prevFltpfreq=Fltpfreq;
 11011  02B4  0821               	movf	(_Fltpfreq+1)^(0+256),w
 11012  02B5  0024               	movlb	4	; select bank4
 11013  02B6  01C3               	clrf	(_prevFltpfreq+1)^(0+512)
 11014  02B7  07C3               	addwf	(_prevFltpfreq+1)^(0+512),f
 11015  02B8  0022               	movlb	2	; select bank2
 11016  02B9  0820               	movf	_Fltpfreq^(0+256),w
 11017  02BA  0024               	movlb	4	; select bank4
 11018  02BB  01C2               	clrf	_prevFltpfreq^(0+512)
 11019  02BC  07C2               	addwf	_prevFltpfreq^(0+512),f
 11020                           
 11021                           ;main.c: 226: capintervalf=1;
 11022  02BD  3001               	movlw	1
 11023  02BE  0020               	movlb	0	; select bank0
 11024  02BF  00CB               	movwf	??_ISR_Function
 11025  02C0  084B               	movf	??_ISR_Function,w
 11026  02C1  0023               	movlb	3	; select bank3
 11027  02C2  00D3               	movwf	_capintervalf^(0+384)	;volatile
 11028                           
 11029                           ;main.c: 227: fixintervalf=0;
 11030  02C3  01D9               	clrf	_fixintervalf^(0+384)	;volatile
 11031                           
 11032                           ;main.c: 228: count_pid=0;
 11033  02C4  01D5               	clrf	_count_pid^(0+384)	;volatile
 11034                           
 11035                           ;main.c: 231: if(cyclestrtf==1 && psstatusu.psstatuss.twinpulseon==0)
 11036  02C5  0022               	movlb	2	; select bank2
 11037  02C6  083C               	movf	_cyclestrtf^(0+256),w
 11038  02C7  3A01               	xorlw	1
 11039  02C8  1D03               	skipz
 11040  02C9  2AD1               	goto	i1l5113
 11041  02CA  0020               	movlb	0	; select bank0
 11042  02CB  1B6D               	btfsc	_psstatusu,6
 11043  02CC  2AD1               	goto	i1l5113
 11044                           
 11045                           ;main.c: 232: adaptivepidf=1;
 11046  02CD  0022               	movlb	2	; select bank2
 11047  02CE  01B1               	clrf	_adaptivepidf^(0+256)
 11048  02CF  0AB1               	incf	_adaptivepidf^(0+256),f
 11049  02D0  2AD3               	goto	i1l5115
 11050  02D1                     i1l5113:	
 11051                           
 11052                           ;main.c: 233: else
 11053                           ;main.c: 234: adaptivepidf=0;
 11054  02D1  0022               	movlb	2	; select bank2
 11055  02D2  01B1               	clrf	_adaptivepidf^(0+256)
 11056  02D3                     i1l5115:	
 11057                           
 11058                           ;main.c: 236: }
 11059                           ;main.c: 237: }
 11060                           ;main.c: 238: }
 11061                           ;main.c: 240: if(PIE1bits.RCIE & PIR1bits.RCIF)
 11062  02D3  0020               	movlb	0	; select bank0
 11063  02D4  0E11               	swapf	17,w	;volatile
 11064  02D5  0C89               	rrf	9,f
 11065  02D6  3901               	andlw	1
 11066  02D7  00CB               	movwf	??_ISR_Function
 11067  02D8  0021               	movlb	1	; select bank1
 11068  02D9  0E11               	swapf	17,w	;volatile
 11069  02DA  0C89               	rrf	9,f
 11070  02DB  3901               	andlw	1
 11071  02DC  0020               	movlb	0	; select bank0
 11072  02DD  054B               	andwf	??_ISR_Function,w
 11073  02DE  1903               	btfsc	3,2
 11074  02DF  2CE7               	goto	i1l584
 11075                           
 11076                           ;main.c: 241: {
 11077                           ;main.c: 242: PIR1bits.RCIF=0;
 11078  02E0  1291               	bcf	17,5	;volatile
 11079                           
 11080                           ;main.c: 243: rxdata= RCREG;
 11081  02E1  0023               	movlb	3	; select bank3
 11082  02E2  0819               	movf	25,w	;volatile
 11083  02E3  0020               	movlb	0	; select bank0
 11084  02E4  00CB               	movwf	??_ISR_Function
 11085  02E5  084B               	movf	??_ISR_Function,w
 11086  02E6  00E3               	movwf	_rxdata	;volatile
 11087                           
 11088                           ;main.c: 245: if(RCSTAbits.FERR)
 11089  02E7  0023               	movlb	3	; select bank3
 11090  02E8  1D1D               	btfss	29,2	;volatile
 11091  02E9  2AEC               	goto	i1l599
 11092                           
 11093                           ;main.c: 246: {
 11094                           ;main.c: 247: RCSTAbits.SPEN=0;
 11095  02EA  139D               	bcf	29,7	;volatile
 11096                           
 11097                           ;main.c: 248: RCSTAbits.SPEN=1;
 11098  02EB  179D               	bsf	29,7	;volatile
 11099  02EC                     i1l599:	
 11100                           
 11101                           ;main.c: 249: }
 11102                           ;main.c: 250: if(RCSTAbits.OERR)
 11103  02EC  1C9D               	btfss	29,1	;volatile
 11104  02ED  2AF2               	goto	i1l5127
 11105                           
 11106                           ;main.c: 251: {
 11107                           ;main.c: 252: RCSTAbits.CREN=0;
 11108  02EE  121D               	bcf	29,4	;volatile
 11109                           
 11110                           ;main.c: 253: RCSTAbits.CREN=1;
 11111  02EF  161D               	bsf	29,4	;volatile
 11112                           
 11113                           ;main.c: 254: RCSTAbits.SPEN=0;
 11114  02F0  139D               	bcf	29,7	;volatile
 11115                           
 11116                           ;main.c: 255: RCSTAbits.SPEN=1;
 11117  02F1  179D               	bsf	29,7	;volatile
 11118  02F2                     i1l5127:	
 11119                           
 11120                           ;main.c: 256: }
 11121                           ;main.c: 258: {
 11122                           ;main.c: 259: if(rxdata=='@' && startptr1==0 && statusptr1==0 )
 11123  02F2  0020               	movlb	0	; select bank0
 11124  02F3  0863               	movf	_rxdata,w	;volatile
 11125  02F4  3A40               	xorlw	64
 11126  02F5  1D03               	skipz
 11127  02F6  2B07               	goto	i1l5137
 11128  02F7  08E4               	movf	_startptr1,f
 11129  02F8  1D03               	skipz
 11130  02F9  2B07               	goto	i1l5137
 11131  02FA  0022               	movlb	2	; select bank2
 11132  02FB  082B               	movf	(_statusptr1+1)^(0+256),w
 11133  02FC  042A               	iorwf	_statusptr1^(0+256),w
 11134  02FD  1D03               	skipz
 11135  02FE  2B07               	goto	i1l5137
 11136                           
 11137                           ;main.c: 260: {
 11138                           ;main.c: 262: startptr1 =1;
 11139  02FF  0020               	movlb	0	; select bank0
 11140  0300  01E4               	clrf	_startptr1
 11141  0301  0AE4               	incf	_startptr1,f
 11142                           
 11143                           ;main.c: 263: arrptr =0;
 11144  0302  0022               	movlb	2	; select bank2
 11145  0303  01B2               	clrf	_arrptr^(0+256)
 11146                           
 11147                           ;main.c: 264: statusptr1 =0;
 11148  0304  01AA               	clrf	_statusptr1^(0+256)
 11149  0305  01AB               	clrf	(_statusptr1+1)^(0+256)
 11150  0306  2CE6               	goto	L22
 11151  0307                     i1l5137:	
 11152                           ;main.c: 266: }
 11153                           
 11154                           ;main.c: 265: recchksum =0;
 11155                           
 11156                           
 11157                           ;main.c: 267: else if(rxdata=='#' && startptr1==0 && statusptr1==0)
 11158  0307  0020               	movlb	0	; select bank0
 11159  0308  0863               	movf	_rxdata,w	;volatile
 11160  0309  3A23               	xorlw	35
 11161  030A  1D03               	skipz
 11162  030B  2B1C               	goto	i1l5151
 11163  030C  08E4               	movf	_startptr1,f
 11164  030D  1D03               	skipz
 11165  030E  2B1C               	goto	i1l5151
 11166  030F  0022               	movlb	2	; select bank2
 11167  0310  082B               	movf	(_statusptr1+1)^(0+256),w
 11168  0311  042A               	iorwf	_statusptr1^(0+256),w
 11169  0312  1D03               	skipz
 11170  0313  2B1C               	goto	i1l5151
 11171                           
 11172                           ;main.c: 268: {
 11173                           ;main.c: 270: startptr1 =0;
 11174  0314  0020               	movlb	0	; select bank0
 11175  0315  01E4               	clrf	_startptr1
 11176                           
 11177                           ;main.c: 271: statusptr1 =1;
 11178  0316  3001               	movlw	1
 11179  0317  0022               	movlb	2	; select bank2
 11180  0318  00AA               	movwf	_statusptr1^(0+256)
 11181  0319  3000               	movlw	0
 11182  031A  00AB               	movwf	(_statusptr1^(0+256)+1)
 11183  031B  2CE5               	goto	L24
 11184  031C                     i1l5151:	
 11185                           ;main.c: 274: }
 11186                           
 11187                           ;main.c: 273: recchksum =0;
 11188                           
 11189                           ;main.c: 272: arrptr =0;
 11190                           
 11191                           
 11192                           ;main.c: 275: else if(startptr1==0 && statusptr1==1)
 11193  031C  0020               	movlb	0	; select bank0
 11194  031D  08E4               	movf	_startptr1,f
 11195  031E  1D03               	skipz
 11196  031F  2B92               	goto	i1l5195
 11197  0320  3001               	movlw	1
 11198  0321  0022               	movlb	2	; select bank2
 11199  0322  062A               	xorwf	_statusptr1^(0+256),w
 11200  0323  042B               	iorwf	(_statusptr1+1)^(0+256),w
 11201  0324  1D03               	skipz
 11202  0325  2B92               	goto	i1l5195
 11203                           
 11204                           ;main.c: 276: {
 11205                           ;main.c: 277: if(recstatus==0)
 11206  0326  0023               	movlb	3	; select bank3
 11207  0327  084D               	movf	(_recstatus+1)^(0+384),w
 11208  0328  044C               	iorwf	_recstatus^(0+384),w
 11209  0329  1D03               	skipz
 11210  032A  2B3B               	goto	i1l5159
 11211                           
 11212                           ;main.c: 278: {
 11213                           ;main.c: 279: recpsstatus=rxdata;
 11214  032B  0020               	movlb	0	; select bank0
 11215  032C  0863               	movf	_rxdata,w	;volatile
 11216  032D  00CB               	movwf	??_ISR_Function
 11217  032E  01CC               	clrf	??_ISR_Function+1
 11218  032F  084B               	movf	??_ISR_Function,w
 11219  0330  0023               	movlb	3	; select bank3
 11220  0331  00CA               	movwf	_recpsstatus^(0+384)
 11221  0332  0020               	movlb	0	; select bank0
 11222  0333  084C               	movf	??_ISR_Function+1,w
 11223  0334  0023               	movlb	3	; select bank3
 11224  0335  00CB               	movwf	(_recpsstatus+1)^(0+384)
 11225                           
 11226                           ;main.c: 280: recstatus=1;
 11227  0336  3001               	movlw	1
 11228  0337  00CC               	movwf	_recstatus^(0+384)
 11229  0338  3000               	movlw	0
 11230  0339  00CD               	movwf	(_recstatus^(0+384)+1)
 11231                           
 11232                           ;main.c: 281: }
 11233  033A  2CE7               	goto	i1l584
 11234  033B                     i1l5159:	
 11235                           
 11236                           ;main.c: 282: else if(recstatus==1)
 11237  033B  3001               	movlw	1
 11238  033C  064C               	xorwf	_recstatus^(0+384),w
 11239  033D  044D               	iorwf	(_recstatus+1)^(0+384),w
 11240  033E  1D03               	skipz
 11241  033F  2CE7               	goto	i1l584
 11242                           
 11243                           ;main.c: 283: {
 11244                           ;main.c: 284: if(rxdata==recpsstatus)
 11245  0340  0020               	movlb	0	; select bank0
 11246  0341  0863               	movf	_rxdata,w	;volatile
 11247  0342  00CB               	movwf	??_ISR_Function
 11248  0343  01CC               	clrf	??_ISR_Function+1
 11249  0344  0023               	movlb	3	; select bank3
 11250  0345  084B               	movf	(_recpsstatus+1)^(0+384),w
 11251  0346  0020               	movlb	0	; select bank0
 11252  0347  064C               	xorwf	??_ISR_Function+1,w
 11253  0348  1D03               	skipz
 11254  0349  2B4E               	goto	u725_25
 11255  034A  0023               	movlb	3	; select bank3
 11256  034B  084A               	movf	_recpsstatus^(0+384),w
 11257  034C  0020               	movlb	0	; select bank0
 11258  034D  064B               	xorwf	??_ISR_Function,w
 11259  034E                     u725_25:	
 11260  034E  1D03               	skipz
 11261  034F  2CDD               	goto	i1l5247
 11262                           
 11263                           ;main.c: 285: {
 11264                           ;main.c: 287: comm_error_count=0;
 11265  0350  0022               	movlb	2	; select bank2
 11266  0351  01B7               	clrf	_comm_error_count^(0+256)	;volatile
 11267                           
 11268                           ;main.c: 288: psstatusu.psstatusbyte[0]=recpsstatus;
 11269  0352  0023               	movlb	3	; select bank3
 11270  0353  084A               	movf	_recpsstatus^(0+384),w
 11271  0354  0020               	movlb	0	; select bank0
 11272  0355  00CB               	movwf	??_ISR_Function
 11273  0356  084B               	movf	??_ISR_Function,w
 11274  0357  00ED               	movwf	_psstatusu
 11275                           
 11276                           ;main.c: 289: pstowfstru.pstowfstrs.psstatusbyte=recpsstatus;
 11277  0358  0023               	movlb	3	; select bank3
 11278  0359  084A               	movf	_recpsstatus^(0+384),w
 11279  035A  0020               	movlb	0	; select bank0
 11280  035B  00CB               	movwf	??_ISR_Function
 11281  035C  084B               	movf	??_ISR_Function,w
 11282  035D  0024               	movlb	4	; select bank4
 11283  035E  00D6               	movwf	(_pstowfstru^(0+512)+12)
 11284                           
 11285                           ;main.c: 291: if(psstatusu.psstatuss.motoroncommand==1 && psstatusu.psstatuss.twinpulseo
      +                          n==1 )
 11286  035F  0020               	movlb	0	; select bank0
 11287  0360  19ED               	btfsc	_psstatusu,3
 11288  0361  1F6D               	btfss	_psstatusu,6
 11289  0362  2B85               	goto	i1l5181
 11290                           
 11291                           ;main.c: 292: {
 11292                           ;main.c: 293: if(psstatusu.psstatuss.Hi_speedon==1)
 11293  0363  1FED               	btfss	_psstatusu,7
 11294  0364  2B73               	goto	i1l611
 11295                           
 11296                           ;main.c: 294: {
 11297                           ;main.c: 295: TRISAbits.TRISA0=0;
 11298  0365  0021               	movlb	1	; select bank1
 11299  0366  100C               	bcf	12,0	;volatile
 11300                           
 11301                           ;main.c: 296: PORTAbits.RA0=1;
 11302  0367  0020               	movlb	0	; select bank0
 11303  0368  140C               	bsf	12,0	;volatile
 11304                           
 11305                           ;main.c: 297: TRISAbits.TRISA5=0;
 11306  0369  0021               	movlb	1	; select bank1
 11307  036A  128C               	bcf	12,5	;volatile
 11308                           
 11309                           ;main.c: 298: PORTAbits.RA5= 1;
 11310  036B  0020               	movlb	0	; select bank0
 11311  036C  168C               	bsf	12,5	;volatile
 11312                           
 11313                           ;main.c: 299: Update_PWM(Hi_setppwm);
 11314  036D  0023               	movlb	3	; select bank3
 11315  036E  082D               	movf	(_Hi_setppwm+1)^(0+384),w
 11316  036F  01F1               	clrf	i1Update_PWM@setwsduty+1
 11317  0370  07F1               	addwf	i1Update_PWM@setwsduty+1,f
 11318  0371  082C               	movf	_Hi_setppwm^(0+384),w
 11319  0372  2B80               	goto	L23
 11320  0373                     i1l611:	
 11321                           ;main.c: 300: }
 11322                           
 11323                           
 11324                           ;main.c: 301: else
 11325                           ;main.c: 302: {
 11326                           ;main.c: 303: TRISAbits.TRISA0=0;
 11327  0373  0021               	movlb	1	; select bank1
 11328  0374  100C               	bcf	12,0	;volatile
 11329                           
 11330                           ;main.c: 304: PORTAbits.RA0=0;
 11331  0375  0020               	movlb	0	; select bank0
 11332  0376  100C               	bcf	12,0	;volatile
 11333                           
 11334                           ;main.c: 305: TRISAbits.TRISA5=0;
 11335  0377  0021               	movlb	1	; select bank1
 11336  0378  128C               	bcf	12,5	;volatile
 11337                           
 11338                           ;main.c: 306: PORTAbits.RA5= 0;
 11339  0379  0020               	movlb	0	; select bank0
 11340  037A  128C               	bcf	12,5	;volatile
 11341                           
 11342                           ;main.c: 307: Update_PWM(Lo_setppwm);
 11343  037B  0023               	movlb	3	; select bank3
 11344  037C  082F               	movf	(_Lo_setppwm+1)^(0+384),w
 11345  037D  01F1               	clrf	i1Update_PWM@setwsduty+1
 11346  037E  07F1               	addwf	i1Update_PWM@setwsduty+1,f
 11347  037F  082E               	movf	_Lo_setppwm^(0+384),w
 11348  0380                     L23:	
 11349  0380  01F0               	clrf	i1Update_PWM@setwsduty
 11350  0381  07F0               	addwf	i1Update_PWM@setwsduty,f
 11351  0382  3199  21B1  3180   	fcall	i1_Update_PWM
 11352  0385                     i1l5181:	
 11353                           
 11354                           ;main.c: 308: }
 11355                           ;main.c: 309: }
 11356                           ;main.c: 321: recstatus=0;
 11357  0385  0023               	movlb	3	; select bank3
 11358  0386  01CC               	clrf	_recstatus^(0+384)
 11359  0387  01CD               	clrf	(_recstatus+1)^(0+384)
 11360                           
 11361                           ;main.c: 322: startptr1=0;
 11362  0388  0020               	movlb	0	; select bank0
 11363  0389  01E4               	clrf	_startptr1
 11364                           
 11365                           ;main.c: 323: statusptr1=0;
 11366  038A  0022               	movlb	2	; select bank2
 11367  038B  01AA               	clrf	_statusptr1^(0+256)
 11368  038C  01AB               	clrf	(_statusptr1+1)^(0+256)
 11369                           
 11370                           ;main.c: 324: arrptr=0;
 11371  038D  01B2               	clrf	_arrptr^(0+256)
 11372                           
 11373                           ;main.c: 325: recchksum=0;
 11374  038E  01D3               	clrf	_recchksum^(0+256)
 11375                           
 11376                           ;main.c: 326: send_statusf=1;
 11377  038F  01D6               	clrf	_send_statusf^(0+256)
 11378  0390  0AD6               	incf	_send_statusf^(0+256),f
 11379                           
 11380                           ;main.c: 328: }
 11381  0391  2CE7               	goto	i1l584
 11382  0392                     i1l5195:	
 11383                           ;main.c: 336: }
 11384                           ;main.c: 337: }
 11385                           ;main.c: 338: }
 11386                           
 11387                           ;main.c: 335: recchksum=0;
 11388                           
 11389                           ;main.c: 334: arrptr=0;
 11390                           
 11391                           ;main.c: 333: statusptr1=0;
 11392                           
 11393                           ;main.c: 332: startptr1=0;
 11394                           
 11395                           ;main.c: 329: else
 11396                           ;main.c: 330: {
 11397                           ;main.c: 331: recstatus=0;
 11398                           
 11399                           
 11400                           ;main.c: 339: else if(startptr1==1 && statusptr1==0)
 11401  0392  0020               	movlb	0	; select bank0
 11402  0393  0864               	movf	_startptr1,w
 11403  0394  3A01               	xorlw	1
 11404  0395  1D03               	skipz
 11405  0396  2CE7               	goto	i1l584
 11406  0397  0022               	movlb	2	; select bank2
 11407  0398  082B               	movf	(_statusptr1+1)^(0+256),w
 11408  0399  042A               	iorwf	_statusptr1^(0+256),w
 11409  039A  1D03               	skipz
 11410  039B  2CE7               	goto	i1l584
 11411                           
 11412                           ;main.c: 340: {
 11413                           ;main.c: 341: if(arrptr<=21)
 11414  039C  3016               	movlw	22
 11415  039D  0232               	subwf	_arrptr^(0+256),w
 11416  039E  1803               	skipnc
 11417  039F  2BBB               	goto	i1l5207
 11418                           
 11419                           ;main.c: 342: {
 11420                           ;main.c: 343: rec_arr[arrptr]=rxdata;
 11421  03A0  0020               	movlb	0	; select bank0
 11422  03A1  0863               	movf	_rxdata,w	;volatile
 11423  03A2  00CB               	movwf	??_ISR_Function
 11424  03A3  0022               	movlb	2	; select bank2
 11425  03A4  0832               	movf	_arrptr^(0+256),w
 11426  03A5  3EA0               	addlw	_rec_arr& (0+255)
 11427  03A6  0086               	movwf	6
 11428  03A7  3002               	movlw	2	; select bank5/6
 11429  03A8  0087               	movwf	7
 11430  03A9  0020               	movlb	0	; select bank0
 11431  03AA  084B               	movf	??_ISR_Function,w
 11432  03AB  0081               	movwf	1
 11433                           
 11434                           ;main.c: 344: recchksum=recchksum+rxdata;
 11435  03AC  0022               	movlb	2	; select bank2
 11436  03AD  0853               	movf	_recchksum^(0+256),w
 11437  03AE  0020               	movlb	0	; select bank0
 11438  03AF  0763               	addwf	_rxdata,w	;volatile
 11439  03B0  00CB               	movwf	??_ISR_Function
 11440  03B1  084B               	movf	??_ISR_Function,w
 11441  03B2  0022               	movlb	2	; select bank2
 11442  03B3  00D3               	movwf	_recchksum^(0+256)
 11443                           
 11444                           ;main.c: 345: arrptr++;
 11445  03B4  3001               	movlw	1
 11446  03B5  0020               	movlb	0	; select bank0
 11447  03B6  00CB               	movwf	??_ISR_Function
 11448  03B7  084B               	movf	??_ISR_Function,w
 11449  03B8  0022               	movlb	2	; select bank2
 11450  03B9  07B2               	addwf	_arrptr^(0+256),f
 11451                           
 11452                           ;main.c: 346: }
 11453  03BA  2CE7               	goto	i1l584
 11454  03BB                     i1l5207:	
 11455                           
 11456                           ;main.c: 347: else if(recchksum==rxdata)
 11457  03BB  0853               	movf	_recchksum^(0+256),w
 11458  03BC  0020               	movlb	0	; select bank0
 11459  03BD  0663               	xorwf	_rxdata,w	;volatile
 11460  03BE  1D03               	skipz
 11461  03BF  2CDD               	goto	i1l5247
 11462                           
 11463                           ;main.c: 349: {
 11464                           ;main.c: 363: comm_error_count=0;
 11465  03C0  0022               	movlb	2	; select bank2
 11466  03C1  01B7               	clrf	_comm_error_count^(0+256)	;volatile
 11467                           
 11468                           ;main.c: 364: for(ijk=0;ijk<=21;ijk++)
 11469  03C2  01A2               	clrf	_ijk^(0+256)
 11470  03C3  01A3               	clrf	(_ijk+1)^(0+256)
 11471  03C4  3000               	movlw	0
 11472  03C5  0223               	subwf	(_ijk+1)^(0+256),w
 11473  03C6  3016               	movlw	22
 11474  03C7  1903               	skipnz
 11475  03C8  0222               	subwf	_ijk^(0+256),w
 11476  03C9  1803               	btfsc	3,0
 11477  03CA  2BE8               	goto	i1l5221
 11478  03CB                     i1l5215:	
 11479                           
 11480                           ;main.c: 365: {
 11481                           ;main.c: 366: pstowfstru.pstransarr[ijk]=rec_arr[ijk];
 11482  03CB  0822               	movf	_ijk^(0+256),w
 11483  03CC  3EA0               	addlw	_rec_arr& (0+255)
 11484  03CD  0086               	movwf	6
 11485  03CE  3002               	movlw	2	; select bank5/6
 11486  03CF  0087               	movwf	7
 11487  03D0  0801               	movf	1,w
 11488  03D1  0020               	movlb	0	; select bank0
 11489  03D2  00CB               	movwf	??_ISR_Function
 11490  03D3  0022               	movlb	2	; select bank2
 11491  03D4  0822               	movf	_ijk^(0+256),w
 11492  03D5  3E4A               	addlw	_pstowfstru& (0+255)
 11493  03D6  0086               	movwf	6
 11494  03D7  3002               	movlw	2	; select bank4/5
 11495  03D8  0087               	movwf	7
 11496  03D9  0020               	movlb	0	; select bank0
 11497  03DA  084B               	movf	??_ISR_Function,w
 11498  03DB  0081               	movwf	1
 11499  03DC  3001               	movlw	1
 11500  03DD  0022               	movlb	2	; select bank2
 11501  03DE  07A2               	addwf	_ijk^(0+256),f
 11502  03DF  3000               	movlw	0
 11503  03E0  3DA3               	addwfc	(_ijk+1)^(0+256),f
 11504  03E1  3000               	movlw	0
 11505  03E2  0223               	subwf	(_ijk+1)^(0+256),w
 11506  03E3  3016               	movlw	22
 11507  03E4  1903               	skipnz
 11508  03E5  0222               	subwf	_ijk^(0+256),w
 11509  03E6  1C03               	skipc
 11510  03E7  2BCB               	goto	i1l5215
 11511  03E8                     i1l5221:	
 11512                           
 11513                           ;main.c: 367: }
 11514                           ;main.c: 368: weldmode=pstowfstru.pstowfstrs.weldmode;
 11515  03E8  0024               	movlb	4	; select bank4
 11516  03E9  084A               	movf	_pstowfstru^(0+512),w
 11517  03EA  0020               	movlb	0	; select bank0
 11518  03EB  00CB               	movwf	??_ISR_Function
 11519  03EC  084B               	movf	??_ISR_Function,w
 11520  03ED  00E6               	movwf	_weldmode	;volatile
 11521                           
 11522                           ;main.c: 369: setwirespeed=pstowfstru.pstowfstrs.setwspeed;
 11523  03EE  0024               	movlb	4	; select bank4
 11524  03EF  084B               	movf	(_pstowfstru^(0+512)+1),w
 11525  03F0  0020               	movlb	0	; select bank0
 11526  03F1  00CB               	movwf	??_ISR_Function
 11527  03F2  01CC               	clrf	??_ISR_Function+1
 11528  03F3  084B               	movf	??_ISR_Function,w
 11529  03F4  00DA               	movwf	_setwirespeed
 11530  03F5  084C               	movf	??_ISR_Function+1,w
 11531  03F6  00DB               	movwf	_setwirespeed+1
 11532                           
 11533                           ;main.c: 370: wfstatusu.wfstatusbyte[0]=pstowfstru.pstowfstrs.wfstatusbyte;
 11534  03F7  0024               	movlb	4	; select bank4
 11535  03F8  0857               	movf	(_pstowfstru^(0+512)+13),w
 11536  03F9  0020               	movlb	0	; select bank0
 11537  03FA  00CB               	movwf	??_ISR_Function
 11538  03FB  084B               	movf	??_ISR_Function,w
 11539  03FC  00EE               	movwf	_wfstatusu
 11540                           
 11541                           ;main.c: 371: if(wfstatusu.wfstatuss.twotfourtmode1==1)
 11542  03FD  1C6E               	btfss	_wfstatusu,0
 11543  03FE  2C02               	goto	i1l621
 11544                           
 11545                           ;main.c: 372: {
 11546                           ;main.c: 373: TypeU.TypeS.twot=0;
 11547  03FF  1267               	bcf	_TypeU,4
 11548                           
 11549                           ;main.c: 374: TypeU.TypeS.fourt=1;
 11550  0400  16E7               	bsf	_TypeU,5
 11551                           
 11552                           ;main.c: 375: }
 11553  0401  2C04               	goto	i1l5227
 11554  0402                     i1l621:	
 11555                           
 11556                           ;main.c: 376: else
 11557                           ;main.c: 377: {
 11558                           ;main.c: 378: TypeU.TypeS.twot=1;
 11559  0402  1667               	bsf	_TypeU,4
 11560                           
 11561                           ;main.c: 379: TypeU.TypeS.fourt=0;
 11562  0403  12E7               	bcf	_TypeU,5
 11563  0404                     i1l5227:	
 11564                           
 11565                           ;main.c: 380: }
 11566                           ;main.c: 381: if(cEditfg == 0)
 11567  0404  0022               	movlb	2	; select bank2
 11568  0405  08B3               	movf	_cEditfg^(0+256),f
 11569  0406  1D03               	skipz
 11570  0407  2C1F               	goto	i1l623
 11571                           
 11572                           ;main.c: 382: {
 11573                           ;main.c: 383: setvoltage=pstowfstru.pstowfstrs.Hi_setvoltage;
 11574  0408  0024               	movlb	4	; select bank4
 11575  0409  084F               	movf	(_pstowfstru^(0+512)+5),w
 11576  040A  0020               	movlb	0	; select bank0
 11577  040B  00CB               	movwf	??_ISR_Function
 11578  040C  01CC               	clrf	??_ISR_Function+1
 11579  040D  084B               	movf	??_ISR_Function,w
 11580  040E  00D8               	movwf	_setvoltage
 11581  040F  084C               	movf	??_ISR_Function+1,w
 11582  0410  00D9               	movwf	_setvoltage+1
 11583                           
 11584                           ;main.c: 384: setvoltage<<=8;
 11585  0411  3008               	movlw	8
 11586  0412                     u737_25:	
 11587  0412  35D8               	lslf	_setvoltage,f
 11588  0413  0DD9               	rlf	_setvoltage+1,f
 11589  0414  0B89               	decfsz	9,f
 11590  0415  2C12               	goto	u737_25
 11591                           
 11592                           ;main.c: 385: setvoltage|=pstowfstru.pstowfstrs.Lo_setvoltage;
 11593  0416  0024               	movlb	4	; select bank4
 11594  0417  0850               	movf	(_pstowfstru^(0+512)+6),w
 11595  0418  0020               	movlb	0	; select bank0
 11596  0419  00CB               	movwf	??_ISR_Function
 11597  041A  01CC               	clrf	??_ISR_Function+1
 11598  041B  084B               	movf	??_ISR_Function,w
 11599  041C  04D8               	iorwf	_setvoltage,f
 11600  041D  084C               	movf	??_ISR_Function+1,w
 11601  041E  04D9               	iorwf	_setvoltage+1,f
 11602  041F                     i1l623:	
 11603                           
 11604                           ;main.c: 386: }
 11605                           ;main.c: 388: setcurrent=pstowfstru.pstowfstrs.Hi_setcurrent;
 11606  041F  0024               	movlb	4	; select bank4
 11607  0420  084C               	movf	(_pstowfstru^(0+512)+2),w
 11608  0421  0020               	movlb	0	; select bank0
 11609  0422  00CB               	movwf	??_ISR_Function
 11610  0423  01CC               	clrf	??_ISR_Function+1
 11611  0424  084B               	movf	??_ISR_Function,w
 11612  0425  0022               	movlb	2	; select bank2
 11613  0426  00A8               	movwf	_setcurrent^(0+256)
 11614  0427  0020               	movlb	0	; select bank0
 11615  0428  084C               	movf	??_ISR_Function+1,w
 11616  0429  0022               	movlb	2	; select bank2
 11617  042A  00A9               	movwf	(_setcurrent+1)^(0+256)
 11618                           
 11619                           ;main.c: 389: setcurrent<<=8;
 11620  042B  3008               	movlw	8
 11621  042C                     u738_25:	
 11622  042C  35A8               	lslf	_setcurrent^(0+256),f
 11623  042D  0DA9               	rlf	(_setcurrent+1)^(0+256),f
 11624  042E  0B89               	decfsz	9,f
 11625  042F  2C2C               	goto	u738_25
 11626                           
 11627                           ;main.c: 390: setcurrent|=pstowfstru.pstowfstrs.Lo_setcurrent;
 11628  0430  0024               	movlb	4	; select bank4
 11629  0431  084D               	movf	(_pstowfstru^(0+512)+3),w
 11630  0432  0020               	movlb	0	; select bank0
 11631  0433  00CB               	movwf	??_ISR_Function
 11632  0434  01CC               	clrf	??_ISR_Function+1
 11633  0435  084B               	movf	??_ISR_Function,w
 11634  0436  0022               	movlb	2	; select bank2
 11635  0437  04A8               	iorwf	_setcurrent^(0+256),f
 11636  0438  0020               	movlb	0	; select bank0
 11637  0439  084C               	movf	??_ISR_Function+1,w
 11638  043A  0022               	movlb	2	; select bank2
 11639  043B  04A9               	iorwf	(_setcurrent+1)^(0+256),f
 11640                           
 11641                           ;main.c: 393: Actual_amp=pstowfstru.pstowfstrs.Hi_actualcurrent;
 11642  043C  0024               	movlb	4	; select bank4
 11643  043D  0852               	movf	(_pstowfstru^(0+512)+8),w
 11644  043E  0020               	movlb	0	; select bank0
 11645  043F  00CB               	movwf	??_ISR_Function
 11646  0440  01CC               	clrf	??_ISR_Function+1
 11647  0441  084B               	movf	??_ISR_Function,w
 11648  0442  0023               	movlb	3	; select bank3
 11649  0443  00E3               	movwf	_Actual_amp^(0+384)
 11650  0444  0020               	movlb	0	; select bank0
 11651  0445  084C               	movf	??_ISR_Function+1,w
 11652  0446  0023               	movlb	3	; select bank3
 11653  0447  00E4               	movwf	(_Actual_amp+1)^(0+384)
 11654                           
 11655                           ;main.c: 394: Actual_amp<<=8;
 11656  0448  3008               	movlw	8
 11657  0449                     u739_25:	
 11658  0449  35E3               	lslf	_Actual_amp^(0+384),f
 11659  044A  0DE4               	rlf	(_Actual_amp+1)^(0+384),f
 11660  044B  0B89               	decfsz	9,f
 11661  044C  2C49               	goto	u739_25
 11662                           
 11663                           ;main.c: 395: Actual_amp|=pstowfstru.pstowfstrs.Lo_actualcurrent;
 11664  044D  0024               	movlb	4	; select bank4
 11665  044E  0853               	movf	(_pstowfstru^(0+512)+9),w
 11666  044F  0020               	movlb	0	; select bank0
 11667  0450  00CB               	movwf	??_ISR_Function
 11668  0451  01CC               	clrf	??_ISR_Function+1
 11669  0452  084B               	movf	??_ISR_Function,w
 11670  0453  0023               	movlb	3	; select bank3
 11671  0454  04E3               	iorwf	_Actual_amp^(0+384),f
 11672  0455  0020               	movlb	0	; select bank0
 11673  0456  084C               	movf	??_ISR_Function+1,w
 11674  0457  0023               	movlb	3	; select bank3
 11675  0458  04E4               	iorwf	(_Actual_amp+1)^(0+384),f
 11676                           
 11677                           ;main.c: 402: Actual_vtg=pstowfstru.pstowfstrs.Hi_actualvoltage;
 11678  0459  0024               	movlb	4	; select bank4
 11679  045A  0854               	movf	(_pstowfstru^(0+512)+10),w
 11680  045B  0020               	movlb	0	; select bank0
 11681  045C  00CB               	movwf	??_ISR_Function
 11682  045D  01CC               	clrf	??_ISR_Function+1
 11683  045E  084B               	movf	??_ISR_Function,w
 11684  045F  0023               	movlb	3	; select bank3
 11685  0460  00E5               	movwf	_Actual_vtg^(0+384)
 11686  0461  0020               	movlb	0	; select bank0
 11687  0462  084C               	movf	??_ISR_Function+1,w
 11688  0463  0023               	movlb	3	; select bank3
 11689  0464  00E6               	movwf	(_Actual_vtg+1)^(0+384)
 11690                           
 11691                           ;main.c: 403: Actual_vtg<<=8;
 11692  0465  3008               	movlw	8
 11693  0466                     u740_25:	
 11694  0466  35E5               	lslf	_Actual_vtg^(0+384),f
 11695  0467  0DE6               	rlf	(_Actual_vtg+1)^(0+384),f
 11696  0468  0B89               	decfsz	9,f
 11697  0469  2C66               	goto	u740_25
 11698                           
 11699                           ;main.c: 404: Actual_vtg|=pstowfstru.pstowfstrs.Lo_actualvoltage;
 11700  046A  0024               	movlb	4	; select bank4
 11701  046B  0855               	movf	(_pstowfstru^(0+512)+11),w
 11702  046C  0020               	movlb	0	; select bank0
 11703  046D  00CB               	movwf	??_ISR_Function
 11704  046E  01CC               	clrf	??_ISR_Function+1
 11705  046F  084B               	movf	??_ISR_Function,w
 11706  0470  0023               	movlb	3	; select bank3
 11707  0471  04E5               	iorwf	_Actual_vtg^(0+384),f
 11708  0472  0020               	movlb	0	; select bank0
 11709  0473  084C               	movf	??_ISR_Function+1,w
 11710  0474  0023               	movlb	3	; select bank3
 11711  0475  04E6               	iorwf	(_Actual_vtg+1)^(0+384),f
 11712                           
 11713                           ;main.c: 406: rel_wirespeed=pstowfstru.pstowfstrs.rel_wirespeed;
 11714  0476  0024               	movlb	4	; select bank4
 11715  0477  0858               	movf	(_pstowfstru^(0+512)+14),w
 11716  0478  0020               	movlb	0	; select bank0
 11717  0479  00CB               	movwf	??_ISR_Function
 11718  047A  01CC               	clrf	??_ISR_Function+1
 11719  047B  084B               	movf	??_ISR_Function,w
 11720  047C  0023               	movlb	3	; select bank3
 11721  047D  00CE               	movwf	_rel_wirespeed^(0+384)
 11722  047E  0020               	movlb	0	; select bank0
 11723  047F  084C               	movf	??_ISR_Function+1,w
 11724  0480  0023               	movlb	3	; select bank3
 11725  0481  00CF               	movwf	(_rel_wirespeed+1)^(0+384)
 11726                           
 11727                           ;main.c: 408: crater_speed=pstowfstru.pstowfstrs.crater_speed;
 11728  0482  0024               	movlb	4	; select bank4
 11729  0483  085C               	movf	(_pstowfstru^(0+512)+18),w
 11730  0484  0020               	movlb	0	; select bank0
 11731  0485  00CB               	movwf	??_ISR_Function
 11732  0486  084B               	movf	??_ISR_Function,w
 11733  0487  0022               	movlb	2	; select bank2
 11734  0488  00BA               	movwf	_crater_speed^(0+256)	;volatile
 11735                           
 11736                           ;main.c: 410: if(cEditfg == 0)
 11737  0489  08B3               	movf	_cEditfg^(0+256),f
 11738  048A  1D03               	skipz
 11739  048B  2C92               	goto	i1l624
 11740                           
 11741                           ;main.c: 411: {
 11742                           ;main.c: 412: psstatusu.psstatusbyte[0]=pstowfstru.pstowfstrs.psstatusbyte;
 11743  048C  0024               	movlb	4	; select bank4
 11744  048D  0856               	movf	(_pstowfstru^(0+512)+12),w
 11745  048E  0020               	movlb	0	; select bank0
 11746  048F  00CB               	movwf	??_ISR_Function
 11747  0490  084B               	movf	??_ISR_Function,w
 11748  0491  00ED               	movwf	_psstatusu
 11749  0492                     i1l624:	
 11750                           
 11751                           ;main.c: 413: }
 11752                           ;main.c: 414: error_code1=pstowfstru.pstowfstrs.error_code1;
 11753  0492  0024               	movlb	4	; select bank4
 11754  0493  085A               	movf	(_pstowfstru^(0+512)+16),w
 11755  0494  0020               	movlb	0	; select bank0
 11756  0495  00CB               	movwf	??_ISR_Function
 11757  0496  084B               	movf	??_ISR_Function,w
 11758  0497  0023               	movlb	3	; select bank3
 11759  0498  00D7               	movwf	_error_code1^(0+384)	;volatile
 11760                           
 11761                           ;main.c: 415: error_code2=pstowfstru.pstowfstrs.error_code2;
 11762  0499  0024               	movlb	4	; select bank4
 11763  049A  085B               	movf	(_pstowfstru^(0+512)+17),w
 11764  049B  0020               	movlb	0	; select bank0
 11765  049C  00CB               	movwf	??_ISR_Function
 11766  049D  084B               	movf	??_ISR_Function,w
 11767  049E  0023               	movlb	3	; select bank3
 11768  049F  00D8               	movwf	_error_code2^(0+384)	;volatile
 11769                           
 11770                           ;main.c: 417: commandu.commandbyte[0]=pstowfstru.pstowfstrs.command_to_wf;
 11771  04A0  0024               	movlb	4	; select bank4
 11772  04A1  085E               	movf	(_pstowfstru^(0+512)+20),w
 11773  04A2  0020               	movlb	0	; select bank0
 11774  04A3  00CB               	movwf	??_ISR_Function
 11775  04A4  084B               	movf	??_ISR_Function,w
 11776  04A5  0022               	movlb	2	; select bank2
 11777  04A6  00E3               	movwf	_commandu^(0+256)
 11778                           
 11779                           ;main.c: 418: erroru.errorstatusbyte[0]=pstowfstru.pstowfstrs.error_code1;;
 11780  04A7  0024               	movlb	4	; select bank4
 11781  04A8  085A               	movf	(_pstowfstru^(0+512)+16),w
 11782  04A9  0020               	movlb	0	; select bank0
 11783  04AA  00CB               	movwf	??_ISR_Function
 11784  04AB  084B               	movf	??_ISR_Function,w
 11785  04AC  0022               	movlb	2	; select bank2
 11786  04AD  00DF               	movwf	_erroru^(0+256)
 11787                           
 11788                           ;main.c: 419: erroru.errorstatusbyte[1]=pstowfstru.pstowfstrs.error_code2;
 11789  04AE  0024               	movlb	4	; select bank4
 11790  04AF  085B               	movf	(_pstowfstru^(0+512)+17),w
 11791  04B0  0020               	movlb	0	; select bank0
 11792  04B1  00CB               	movwf	??_ISR_Function
 11793  04B2  084B               	movf	??_ISR_Function,w
 11794  04B3  0022               	movlb	2	; select bank2
 11795  04B4  00E0               	movwf	(_erroru^(0+256)+1)
 11796                           
 11797                           ;main.c: 421: creep_speed=pstowfstru.pstowfstrs.creep_speed;
 11798  04B5  0024               	movlb	4	; select bank4
 11799  04B6  085D               	movf	(_pstowfstru^(0+512)+19),w
 11800  04B7  0020               	movlb	0	; select bank0
 11801  04B8  00CB               	movwf	??_ISR_Function
 11802  04B9  084B               	movf	??_ISR_Function,w
 11803  04BA  0022               	movlb	2	; select bank2
 11804  04BB  00BB               	movwf	_creep_speed^(0+256)	;volatile
 11805                           
 11806                           ;main.c: 423: if(commandu.commands.volt_or_arc==1)
 11807  04BC  1C63               	btfss	_commandu^(0+256),0
 11808  04BD  2CC1               	goto	i1l625
 11809                           
 11810                           ;main.c: 425: {
 11811                           ;main.c: 426: TypeU.TypeS.arclength=0;
 11812  04BE  0020               	movlb	0	; select bank0
 11813  04BF  1167               	bcf	_TypeU,2
 11814                           
 11815                           ;main.c: 427: TypeU.TypeS.vtg =1;
 11816  04C0  14E8               	bsf	_TypeU+1,1
 11817  04C1                     i1l625:	
 11818                           
 11819                           ;main.c: 428: }
 11820                           ;main.c: 437: if(wfstatusu.wfstatuss.twotfourtmode1 == 1)
 11821  04C1  0020               	movlb	0	; select bank0
 11822  04C2  1C6E               	btfss	_wfstatusu,0
 11823  04C3  2CC8               	goto	i1l5241
 11824                           
 11825                           ;main.c: 438: {
 11826                           ;main.c: 439: cWf2t4tmodefg = 1;
 11827  04C4  0022               	movlb	2	; select bank2
 11828  04C5  01B4               	clrf	_cWf2t4tmodefg^(0+256)
 11829  04C6  0AB4               	incf	_cWf2t4tmodefg^(0+256),f
 11830                           
 11831                           ;main.c: 440: }
 11832  04C7  2CCA               	goto	i1l627
 11833  04C8                     i1l5241:	
 11834                           
 11835                           ;main.c: 441: else
 11836                           ;main.c: 442: {
 11837                           ;main.c: 443: cWf2t4tmodefg = 0;
 11838  04C8  0022               	movlb	2	; select bank2
 11839  04C9  01B4               	clrf	_cWf2t4tmodefg^(0+256)
 11840  04CA                     i1l627:	
 11841                           
 11842                           ;main.c: 444: }
 11843                           ;main.c: 449: startptr1=0;
 11844  04CA  0020               	movlb	0	; select bank0
 11845  04CB  01E4               	clrf	_startptr1
 11846                           
 11847                           ;main.c: 450: arrptr=0;
 11848  04CC  0022               	movlb	2	; select bank2
 11849  04CD  01B2               	clrf	_arrptr^(0+256)
 11850                           
 11851                           ;main.c: 451: recchksum=0;
 11852  04CE  01D3               	clrf	_recchksum^(0+256)
 11853                           
 11854                           ;main.c: 452: recstatus=0;
 11855  04CF  0023               	movlb	3	; select bank3
 11856  04D0  01CC               	clrf	_recstatus^(0+384)
 11857  04D1  01CD               	clrf	(_recstatus+1)^(0+384)
 11858                           
 11859                           ;main.c: 453: statusptr1=0;
 11860  04D2  0022               	movlb	2	; select bank2
 11861  04D3  01AA               	clrf	_statusptr1^(0+256)
 11862  04D4  01AB               	clrf	(_statusptr1+1)^(0+256)
 11863                           
 11864                           ;main.c: 454: transmitonf=1;
 11865  04D5  01DA               	clrf	_transmitonf^(0+256)
 11866  04D6  0ADA               	incf	_transmitonf^(0+256),f
 11867                           
 11868                           ;main.c: 455: onesecf=1;
 11869  04D7  3001               	movlw	1
 11870  04D8  0020               	movlb	0	; select bank0
 11871  04D9  00CB               	movwf	??_ISR_Function
 11872  04DA  084B               	movf	??_ISR_Function,w
 11873  04DB  00E1               	movwf	_onesecf	;volatile
 11874                           
 11875                           ;main.c: 457: }
 11876  04DC  2CE7               	goto	i1l584
 11877  04DD                     i1l5247:	
 11878                           
 11879                           ;main.c: 458: else
 11880                           ;main.c: 459: {
 11881                           ;main.c: 460: recstatus=0;
 11882  04DD  0023               	movlb	3	; select bank3
 11883  04DE  01CC               	clrf	_recstatus^(0+384)
 11884  04DF  01CD               	clrf	(_recstatus+1)^(0+384)
 11885                           
 11886                           ;main.c: 461: startptr1=0;
 11887  04E0  0020               	movlb	0	; select bank0
 11888  04E1  01E4               	clrf	_startptr1
 11889                           
 11890                           ;main.c: 462: statusptr1=0;
 11891  04E2  0022               	movlb	2	; select bank2
 11892  04E3  01AA               	clrf	_statusptr1^(0+256)
 11893  04E4  01AB               	clrf	(_statusptr1+1)^(0+256)
 11894  04E5                     L24:	
 11895                           
 11896                           ;main.c: 463: arrptr=0;
 11897  04E5  01B2               	clrf	_arrptr^(0+256)
 11898  04E6                     L22:	
 11899                           
 11900                           ;main.c: 464: recchksum=0;
 11901  04E6  01D3               	clrf	_recchksum^(0+256)
 11902  04E7                     i1l584:	
 11903  04E7  0020               	movlb	0	; select bank0
 11904  04E8  0853               	movf	??_ISR_Function+8,w
 11905  04E9  00FF               	movwf	127
 11906  04EA  107E               	bcf	126,0	;clear compiler interrupt flag
 11907  04EB  0009               	retfie
 11908  04EC                     __end_of_ISR_Function:	
 11909                           
 11910                           	psect	text35
 11911  1914                     __ptext35:	
 11912 ;; *************** function i1___lwtoft *****************
 11913 ;; Defined at:
 11914 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 11915 ;; Parameters:    Size  Location     Type
 11916 ;;  c               2    8[COMMON] unsigned int 
 11917 ;; Auto vars:     Size  Location     Type
 11918 ;;		None
 11919 ;; Return value:  Size  Location     Type
 11920 ;;                  3    8[COMMON] float 
 11921 ;; Registers used:
 11922 ;;		wreg, status,2, status,0, pclath, cstack
 11923 ;; Tracked objects:
 11924 ;;		On entry : 0/0
 11925 ;;		On exit  : 0/0
 11926 ;;		Unchanged: 0/0
 11927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11928 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11931 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11932 ;;Total ram usage:        4 bytes
 11933 ;; Hardware stack levels used:    1
 11934 ;; Hardware stack levels required when called:    1
 11935 ;; This function calls:
 11936 ;;		i1___ftpack
 11937 ;; This function is called by:
 11938 ;;		_ISR_Function
 11939 ;; This function uses a non-reentrant model
 11940 ;;
 11941                           
 11942                           
 11943                           ;psect for function i1___lwtoft
 11944  1914                     i1___lwtoft:	
 11945                           
 11946                           ;incstack = 0
 11947                           ; Regs used in i1___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 11948  1914  0878               	movf	i1___lwtoft@c,w
 11949  1915  00F0               	movwf	i1___ftpack@arg
 11950  1916  0879               	movf	i1___lwtoft@c+1,w
 11951  1917  00F1               	movwf	i1___ftpack@arg+1
 11952  1918  01F2               	clrf	i1___ftpack@arg+2
 11953  1919  308E               	movlw	142
 11954  191A  00FB               	movwf	??i1___lwtoft
 11955  191B  087B               	movf	??i1___lwtoft,w
 11956  191C  00F3               	movwf	i1___ftpack@exp
 11957  191D  01F4               	clrf	i1___ftpack@sign
 11958  191E  319B  2366         	fcall	i1___ftpack
 11959  1920  0870               	movf	?i1___ftpack,w
 11960  1921  00F8               	movwf	?i1___lwtoft
 11961  1922  0871               	movf	?i1___ftpack+1,w
 11962  1923  00F9               	movwf	?i1___lwtoft+1
 11963  1924  0872               	movf	?i1___ftpack+2,w
 11964  1925  00FA               	movwf	?i1___lwtoft+2
 11965  1926  0008               	return
 11966  1927                     __end_ofi1___lwtoft:	
 11967                           
 11968                           	psect	text36
 11969  1EF2                     __ptext36:	
 11970 ;; *************** function i1___fttol *****************
 11971 ;; Defined at:
 11972 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
 11973 ;; Parameters:    Size  Location     Type
 11974 ;;  f1              3   29[BANK0 ] float 
 11975 ;; Auto vars:     Size  Location     Type
 11976 ;;  __fttol         4   38[BANK0 ] unsigned long 
 11977 ;;  __fttol         1   42[BANK0 ] unsigned char 
 11978 ;;  __fttol         1   37[BANK0 ] unsigned char 
 11979 ;; Return value:  Size  Location     Type
 11980 ;;                  4   29[BANK0 ] long 
 11981 ;; Registers used:
 11982 ;;		wreg, status,2, status,0
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11988 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11989 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;Total ram usage:       14 bytes
 11993 ;; Hardware stack levels used:    1
 11994 ;; This function calls:
 11995 ;;		Nothing
 11996 ;; This function is called by:
 11997 ;;		_ISR_Function
 11998 ;; This function uses a non-reentrant model
 11999 ;;
 12000                           
 12001                           
 12002                           ;psect for function i1___fttol
 12003  1EF2                     i1___fttol:	
 12004                           
 12005                           ;incstack = 0
 12006                           ; Regs used in i1___fttol: [wreg+status,2+status,0]
 12007  1EF2  0020               	movlb	0	; select bank0
 12008  1EF3  083D               	movf	i1___fttol@f1,w
 12009  1EF4  00C1               	movwf	??i1___fttol
 12010  1EF5  083E               	movf	i1___fttol@f1+1,w
 12011  1EF6  00C2               	movwf	??i1___fttol+1
 12012  1EF7  083F               	movf	i1___fttol@f1+2,w
 12013  1EF8  00C3               	movwf	??i1___fttol+2
 12014  1EF9  1003               	clrc
 12015  1EFA  0D42               	rlf	??i1___fttol+1,w
 12016  1EFB  0D43               	rlf	??i1___fttol+2,w
 12017  1EFC  00C4               	movwf	??i1___fttol+3
 12018  1EFD  0844               	movf	??i1___fttol+3,w
 12019  1EFE  00CA               	movwf	i1___fttol@exp1
 12020  1EFF  08CA               	movf	i1___fttol@exp1,f
 12021  1F00  1D03               	skipz
 12022  1F01  2F0B               	goto	i1l4871
 12023  1F02  3000               	movlw	0
 12024  1F03  00C0               	movwf	?i1___fttol+3
 12025  1F04  3000               	movlw	0
 12026  1F05  00BF               	movwf	?i1___fttol+2
 12027  1F06  3000               	movlw	0
 12028  1F07  00BE               	movwf	?i1___fttol+1
 12029  1F08  3000               	movlw	0
 12030  1F09  00BD               	movwf	?i1___fttol
 12031  1F0A  0008               	return
 12032  1F0B                     i1l4871:	
 12033  1F0B  083D               	movf	i1___fttol@f1,w
 12034  1F0C  00C1               	movwf	??i1___fttol
 12035  1F0D  083E               	movf	i1___fttol@f1+1,w
 12036  1F0E  00C2               	movwf	??i1___fttol+1
 12037  1F0F  083F               	movf	i1___fttol@f1+2,w
 12038  1F10  00C3               	movwf	??i1___fttol+2
 12039  1F11  3017               	movlw	23
 12040  1F12                     u673_25:	
 12041  1F12  36C3               	lsrf	??i1___fttol+2,f
 12042  1F13  0CC2               	rrf	??i1___fttol+1,f
 12043  1F14  0CC1               	rrf	??i1___fttol,f
 12044  1F15  0B89               	decfsz	9,f
 12045  1F16  2F12               	goto	u673_25
 12046  1F17  0841               	movf	??i1___fttol,w
 12047  1F18  00C4               	movwf	??i1___fttol+3
 12048  1F19  0844               	movf	??i1___fttol+3,w
 12049  1F1A  00C5               	movwf	i1___fttol@sign1
 12050  1F1B  17BE               	bsf	i1___fttol@f1+1,7
 12051  1F1C  30FF               	movlw	255
 12052  1F1D  05BD               	andwf	i1___fttol@f1,f
 12053  1F1E  30FF               	movlw	255
 12054  1F1F  05BE               	andwf	i1___fttol@f1+1,f
 12055  1F20  3000               	movlw	0
 12056  1F21  05BF               	andwf	i1___fttol@f1+2,f
 12057  1F22  083D               	movf	i1___fttol@f1,w
 12058  1F23  00C6               	movwf	i1___fttol@lval
 12059  1F24  083E               	movf	i1___fttol@f1+1,w
 12060  1F25  00C7               	movwf	i1___fttol@lval+1
 12061  1F26  083F               	movf	i1___fttol@f1+2,w
 12062  1F27  00C8               	movwf	i1___fttol@lval+2
 12063  1F28  01C9               	clrf	i1___fttol@lval+3
 12064  1F29  308E               	movlw	142
 12065  1F2A  02CA               	subwf	i1___fttol@exp1,f
 12066  1F2B  1FCA               	btfss	i1___fttol@exp1,7
 12067  1F2C  2F49               	goto	i1l4891
 12068  1F2D  084A               	movf	i1___fttol@exp1,w
 12069  1F2E  3A80               	xorlw	128
 12070  1F2F  3E8F               	addlw	143
 12071  1F30  1803               	skipnc
 12072  1F31  2F3B               	goto	i1l4889
 12073  1F32  3000               	movlw	0
 12074  1F33  00C0               	movwf	?i1___fttol+3
 12075  1F34  3000               	movlw	0
 12076  1F35  00BF               	movwf	?i1___fttol+2
 12077  1F36  3000               	movlw	0
 12078  1F37  00BE               	movwf	?i1___fttol+1
 12079  1F38  3000               	movlw	0
 12080  1F39  00BD               	movwf	?i1___fttol
 12081  1F3A  0008               	return
 12082  1F3B                     i1l4889:	
 12083  1F3B  3001               	movlw	1
 12084  1F3C                     u676_25:	
 12085  1F3C  36C9               	lsrf	i1___fttol@lval+3,f
 12086  1F3D  0CC8               	rrf	i1___fttol@lval+2,f
 12087  1F3E  0CC7               	rrf	i1___fttol@lval+1,f
 12088  1F3F  0CC6               	rrf	i1___fttol@lval,f
 12089  1F40  0B89               	decfsz	9,f
 12090  1F41  2F3C               	goto	u676_25
 12091  1F42  3001               	movlw	1
 12092  1F43  00C1               	movwf	??i1___fttol
 12093  1F44  0841               	movf	??i1___fttol,w
 12094  1F45  07CA               	addwf	i1___fttol@exp1,f
 12095  1F46  1903               	btfsc	3,2
 12096  1F47  2F62               	goto	i1l4901
 12097  1F48  2F3B               	goto	i1l4889
 12098  1F49                     i1l4891:	
 12099  1F49  3018               	movlw	24
 12100  1F4A  024A               	subwf	i1___fttol@exp1,w
 12101  1F4B  1C03               	skipc
 12102  1F4C  2F5F               	goto	i1l4899
 12103  1F4D  3000               	movlw	0
 12104  1F4E  00C0               	movwf	?i1___fttol+3
 12105  1F4F  3000               	movlw	0
 12106  1F50  00BF               	movwf	?i1___fttol+2
 12107  1F51  3000               	movlw	0
 12108  1F52  00BE               	movwf	?i1___fttol+1
 12109  1F53  3000               	movlw	0
 12110  1F54  00BD               	movwf	?i1___fttol
 12111  1F55  0008               	return
 12112  1F56                     i1l4897:	
 12113  1F56  3001               	movlw	1
 12114  1F57                     u679_25:	
 12115  1F57  35C6               	lslf	i1___fttol@lval,f
 12116  1F58  0DC7               	rlf	i1___fttol@lval+1,f
 12117  1F59  0DC8               	rlf	i1___fttol@lval+2,f
 12118  1F5A  0DC9               	rlf	i1___fttol@lval+3,f
 12119  1F5B  0B89               	decfsz	9,f
 12120  1F5C  2F57               	goto	u679_25
 12121  1F5D  3001               	movlw	1
 12122  1F5E  02CA               	subwf	i1___fttol@exp1,f
 12123  1F5F                     i1l4899:	
 12124  1F5F  08CA               	movf	i1___fttol@exp1,f
 12125  1F60  1D03               	skipz
 12126  1F61  2F56               	goto	i1l4897
 12127  1F62                     i1l4901:	
 12128  1F62  0845               	movf	i1___fttol@sign1,w
 12129  1F63  1903               	btfsc	3,2
 12130  1F64  2F70               	goto	i1l4905
 12131  1F65  09C6               	comf	i1___fttol@lval,f
 12132  1F66  09C7               	comf	i1___fttol@lval+1,f
 12133  1F67  09C8               	comf	i1___fttol@lval+2,f
 12134  1F68  09C9               	comf	i1___fttol@lval+3,f
 12135  1F69  0AC6               	incf	i1___fttol@lval,f
 12136  1F6A  1903               	skipnz
 12137  1F6B  0AC7               	incf	i1___fttol@lval+1,f
 12138  1F6C  1903               	skipnz
 12139  1F6D  0AC8               	incf	i1___fttol@lval+2,f
 12140  1F6E  1903               	skipnz
 12141  1F6F  0AC9               	incf	i1___fttol@lval+3,f
 12142  1F70                     i1l4905:	
 12143  1F70  0849               	movf	i1___fttol@lval+3,w
 12144  1F71  00C0               	movwf	?i1___fttol+3
 12145  1F72  0848               	movf	i1___fttol@lval+2,w
 12146  1F73  00BF               	movwf	?i1___fttol+2
 12147  1F74  0847               	movf	i1___fttol@lval+1,w
 12148  1F75  00BE               	movwf	?i1___fttol+1
 12149  1F76  0846               	movf	i1___fttol@lval,w
 12150  1F77  00BD               	movwf	?i1___fttol
 12151  1F78  0008               	return
 12152  1F79                     __end_ofi1___fttol:	
 12153                           
 12154                           	psect	text37
 12155  122F                     __ptext37:	
 12156 ;; *************** function i1___ftmul *****************
 12157 ;; Defined at:
 12158 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
 12159 ;; Parameters:    Size  Location     Type
 12160 ;;  f1              3    0[BANK0 ] float 
 12161 ;;  f2              3    3[BANK0 ] float 
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;  __ftmul         3   11[BANK0 ] unsigned um
 12164 ;;  __ftmul         1   15[BANK0 ] unsigned char 
 12165 ;;  __ftmul         1   14[BANK0 ] unsigned char 
 12166 ;;  __ftmul         1   10[BANK0 ] unsigned char 
 12167 ;; Return value:  Size  Location     Type
 12168 ;;                  3    0[BANK0 ] float 
 12169 ;; Registers used:
 12170 ;;		wreg, status,2, status,0, pclath, cstack
 12171 ;; Tracked objects:
 12172 ;;		On entry : 0/0
 12173 ;;		On exit  : 0/0
 12174 ;;		Unchanged: 0/0
 12175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12176 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12180 ;;Total ram usage:       16 bytes
 12181 ;; Hardware stack levels used:    1
 12182 ;; Hardware stack levels required when called:    1
 12183 ;; This function calls:
 12184 ;;		i1___ftpack
 12185 ;; This function is called by:
 12186 ;;		_ISR_Function
 12187 ;; This function uses a non-reentrant model
 12188 ;;
 12189                           
 12190                           
 12191                           ;psect for function i1___ftmul
 12192  122F                     i1___ftmul:	
 12193                           
 12194                           ;incstack = 0
 12195                           ; Regs used in i1___ftmul: [wreg+status,2+status,0+pclath+cstack]
 12196  122F  0020               	movlb	0	; select bank0
 12197  1230  0820               	movf	i1___ftmul@f1,w
 12198  1231  00A6               	movwf	??i1___ftmul
 12199  1232  0821               	movf	i1___ftmul@f1+1,w
 12200  1233  00A7               	movwf	??i1___ftmul+1
 12201  1234  0822               	movf	i1___ftmul@f1+2,w
 12202  1235  00A8               	movwf	??i1___ftmul+2
 12203  1236  1003               	clrc
 12204  1237  0D27               	rlf	??i1___ftmul+1,w
 12205  1238  0D28               	rlf	??i1___ftmul+2,w
 12206  1239  00A9               	movwf	??i1___ftmul+3
 12207  123A  0829               	movf	??i1___ftmul+3,w
 12208  123B  00AA               	movwf	i1___ftmul@exp
 12209  123C  08AA               	movf	i1___ftmul@exp,f
 12210  123D  1D03               	skipz
 12211  123E  2A46               	goto	i1l4821
 12212  123F  3000               	movlw	0
 12213  1240  00A0               	movwf	?i1___ftmul
 12214  1241  3000               	movlw	0
 12215  1242  00A1               	movwf	?i1___ftmul+1
 12216  1243  3000               	movlw	0
 12217  1244  00A2               	movwf	?i1___ftmul+2
 12218  1245  0008               	return
 12219  1246                     i1l4821:	
 12220  1246  0823               	movf	i1___ftmul@f2,w
 12221  1247  00A6               	movwf	??i1___ftmul
 12222  1248  0824               	movf	i1___ftmul@f2+1,w
 12223  1249  00A7               	movwf	??i1___ftmul+1
 12224  124A  0825               	movf	i1___ftmul@f2+2,w
 12225  124B  00A8               	movwf	??i1___ftmul+2
 12226  124C  1003               	clrc
 12227  124D  0D27               	rlf	??i1___ftmul+1,w
 12228  124E  0D28               	rlf	??i1___ftmul+2,w
 12229  124F  00A9               	movwf	??i1___ftmul+3
 12230  1250  0829               	movf	??i1___ftmul+3,w
 12231  1251  00AF               	movwf	i1___ftmul@sign
 12232  1252  08AF               	movf	i1___ftmul@sign,f
 12233  1253  1D03               	skipz
 12234  1254  2A5C               	goto	i1l4827
 12235  1255  3000               	movlw	0
 12236  1256  00A0               	movwf	?i1___ftmul
 12237  1257  3000               	movlw	0
 12238  1258  00A1               	movwf	?i1___ftmul+1
 12239  1259  3000               	movlw	0
 12240  125A  00A2               	movwf	?i1___ftmul+2
 12241  125B  0008               	return
 12242  125C                     i1l4827:	
 12243  125C  082F               	movf	i1___ftmul@sign,w
 12244  125D  3E7B               	addlw	123
 12245  125E  00A6               	movwf	??i1___ftmul
 12246  125F  0826               	movf	??i1___ftmul,w
 12247  1260  07AA               	addwf	i1___ftmul@exp,f
 12248  1261  0820               	movf	i1___ftmul@f1,w
 12249  1262  00A6               	movwf	??i1___ftmul
 12250  1263  0821               	movf	i1___ftmul@f1+1,w
 12251  1264  00A7               	movwf	??i1___ftmul+1
 12252  1265  0822               	movf	i1___ftmul@f1+2,w
 12253  1266  00A8               	movwf	??i1___ftmul+2
 12254  1267  3010               	movlw	16
 12255  1268                     u662_25:	
 12256  1268  36A8               	lsrf	??i1___ftmul+2,f
 12257  1269  0CA7               	rrf	??i1___ftmul+1,f
 12258  126A  0CA6               	rrf	??i1___ftmul,f
 12259  126B  0B89               	decfsz	9,f
 12260  126C  2A68               	goto	u662_25
 12261  126D  0826               	movf	??i1___ftmul,w
 12262  126E  00A9               	movwf	??i1___ftmul+3
 12263  126F  0829               	movf	??i1___ftmul+3,w
 12264  1270  00AF               	movwf	i1___ftmul@sign
 12265  1271  0823               	movf	i1___ftmul@f2,w
 12266  1272  00A6               	movwf	??i1___ftmul
 12267  1273  0824               	movf	i1___ftmul@f2+1,w
 12268  1274  00A7               	movwf	??i1___ftmul+1
 12269  1275  0825               	movf	i1___ftmul@f2+2,w
 12270  1276  00A8               	movwf	??i1___ftmul+2
 12271  1277  3010               	movlw	16
 12272  1278                     u663_25:	
 12273  1278  36A8               	lsrf	??i1___ftmul+2,f
 12274  1279  0CA7               	rrf	??i1___ftmul+1,f
 12275  127A  0CA6               	rrf	??i1___ftmul,f
 12276  127B  0B89               	decfsz	9,f
 12277  127C  2A78               	goto	u663_25
 12278  127D  0826               	movf	??i1___ftmul,w
 12279  127E  00A9               	movwf	??i1___ftmul+3
 12280  127F  0829               	movf	??i1___ftmul+3,w
 12281  1280  06AF               	xorwf	i1___ftmul@sign,f
 12282  1281  3080               	movlw	128
 12283  1282  00A6               	movwf	??i1___ftmul
 12284  1283  0826               	movf	??i1___ftmul,w
 12285  1284  05AF               	andwf	i1___ftmul@sign,f
 12286  1285  17A1               	bsf	i1___ftmul@f1+1,7
 12287  1286  17A4               	bsf	i1___ftmul@f2+1,7
 12288  1287  30FF               	movlw	255
 12289  1288  05A3               	andwf	i1___ftmul@f2,f
 12290  1289  30FF               	movlw	255
 12291  128A  05A4               	andwf	i1___ftmul@f2+1,f
 12292  128B  3000               	movlw	0
 12293  128C  05A5               	andwf	i1___ftmul@f2+2,f
 12294  128D  3000               	movlw	0
 12295  128E  00AB               	movwf	i1___ftmul@f3_as_product
 12296  128F  3000               	movlw	0
 12297  1290  00AC               	movwf	i1___ftmul@f3_as_product+1
 12298  1291  3000               	movlw	0
 12299  1292  00AD               	movwf	i1___ftmul@f3_as_product+2
 12300  1293  3007               	movlw	7
 12301  1294  00A6               	movwf	??i1___ftmul
 12302  1295  0826               	movf	??i1___ftmul,w
 12303  1296  00AE               	movwf	i1___ftmul@cntr
 12304  1297                     i1l4839:	
 12305  1297  1C20               	btfss	i1___ftmul@f1,0
 12306  1298  2A9F               	goto	i1l4843
 12307  1299  0823               	movf	i1___ftmul@f2,w
 12308  129A  07AB               	addwf	i1___ftmul@f3_as_product,f
 12309  129B  0824               	movf	i1___ftmul@f2+1,w
 12310  129C  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12311  129D  0825               	movf	i1___ftmul@f2+2,w
 12312  129E  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12313  129F                     i1l4843:	
 12314  129F  3001               	movlw	1
 12315  12A0                     u665_25:	
 12316  12A0  36A2               	lsrf	i1___ftmul@f1+2,f
 12317  12A1  0CA1               	rrf	i1___ftmul@f1+1,f
 12318  12A2  0CA0               	rrf	i1___ftmul@f1,f
 12319  12A3  0B89               	decfsz	9,f
 12320  12A4  2AA0               	goto	u665_25
 12321  12A5  3001               	movlw	1
 12322  12A6                     u666_25:	
 12323  12A6  35A3               	lslf	i1___ftmul@f2,f
 12324  12A7  0DA4               	rlf	i1___ftmul@f2+1,f
 12325  12A8  0DA5               	rlf	i1___ftmul@f2+2,f
 12326  12A9  0B89               	decfsz	9,f
 12327  12AA  2AA6               	goto	u666_25
 12328  12AB  3001               	movlw	1
 12329  12AC  02AE               	subwf	i1___ftmul@cntr,f
 12330  12AD  1D03               	btfss	3,2
 12331  12AE  2A97               	goto	i1l4839
 12332  12AF  3009               	movlw	9
 12333  12B0  00A6               	movwf	??i1___ftmul
 12334  12B1  0826               	movf	??i1___ftmul,w
 12335  12B2  00AE               	movwf	i1___ftmul@cntr
 12336  12B3                     i1l4851:	
 12337  12B3  1C20               	btfss	i1___ftmul@f1,0
 12338  12B4  2ABB               	goto	i1l4855
 12339  12B5  0823               	movf	i1___ftmul@f2,w
 12340  12B6  07AB               	addwf	i1___ftmul@f3_as_product,f
 12341  12B7  0824               	movf	i1___ftmul@f2+1,w
 12342  12B8  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12343  12B9  0825               	movf	i1___ftmul@f2+2,w
 12344  12BA  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12345  12BB                     i1l4855:	
 12346  12BB  3001               	movlw	1
 12347  12BC                     u669_25:	
 12348  12BC  36A2               	lsrf	i1___ftmul@f1+2,f
 12349  12BD  0CA1               	rrf	i1___ftmul@f1+1,f
 12350  12BE  0CA0               	rrf	i1___ftmul@f1,f
 12351  12BF  0B89               	decfsz	9,f
 12352  12C0  2ABC               	goto	u669_25
 12353  12C1  3001               	movlw	1
 12354  12C2                     u670_25:	
 12355  12C2  36AD               	lsrf	i1___ftmul@f3_as_product+2,f
 12356  12C3  0CAC               	rrf	i1___ftmul@f3_as_product+1,f
 12357  12C4  0CAB               	rrf	i1___ftmul@f3_as_product,f
 12358  12C5  0B89               	decfsz	9,f
 12359  12C6  2AC2               	goto	u670_25
 12360  12C7  3001               	movlw	1
 12361  12C8  02AE               	subwf	i1___ftmul@cntr,f
 12362  12C9  1D03               	btfss	3,2
 12363  12CA  2AB3               	goto	i1l4851
 12364  12CB  082B               	movf	i1___ftmul@f3_as_product,w
 12365  12CC  00F0               	movwf	i1___ftpack@arg
 12366  12CD  082C               	movf	i1___ftmul@f3_as_product+1,w
 12367  12CE  00F1               	movwf	i1___ftpack@arg+1
 12368  12CF  082D               	movf	i1___ftmul@f3_as_product+2,w
 12369  12D0  00F2               	movwf	i1___ftpack@arg+2
 12370  12D1  082A               	movf	i1___ftmul@exp,w
 12371  12D2  00A6               	movwf	??i1___ftmul
 12372  12D3  0826               	movf	??i1___ftmul,w
 12373  12D4  00F3               	movwf	i1___ftpack@exp
 12374  12D5  082F               	movf	i1___ftmul@sign,w
 12375  12D6  00A7               	movwf	??i1___ftmul+1
 12376  12D7  0827               	movf	??i1___ftmul+1,w
 12377  12D8  00F4               	movwf	i1___ftpack@sign
 12378  12D9  319B  2366         	fcall	i1___ftpack
 12379  12DB  0870               	movf	?i1___ftpack,w
 12380  12DC  0020               	movlb	0	; select bank0
 12381  12DD  00A0               	movwf	?i1___ftmul
 12382  12DE  0871               	movf	?i1___ftpack+1,w
 12383  12DF  00A1               	movwf	?i1___ftmul+1
 12384  12E0  0872               	movf	?i1___ftpack+2,w
 12385  12E1  00A2               	movwf	?i1___ftmul+2
 12386  12E2  0008               	return
 12387  12E3                     __end_ofi1___ftmul:	
 12388                           
 12389                           	psect	text38
 12390  1033                     __ptext38:	
 12391 ;; *************** function i1___ftdiv *****************
 12392 ;; Defined at:
 12393 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
 12394 ;; Parameters:    Size  Location     Type
 12395 ;;  f2              3    0[BANK0 ] float 
 12396 ;;  f1              3    3[BANK0 ] float 
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;  __ftdiv         3   11[BANK0 ] float 
 12399 ;;  __ftdiv         1   15[BANK0 ] unsigned char 
 12400 ;;  __ftdiv         1   14[BANK0 ] unsigned char 
 12401 ;;  __ftdiv         1   10[BANK0 ] unsigned char 
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  3    0[BANK0 ] float 
 12404 ;; Registers used:
 12405 ;;		wreg, status,2, status,0, pclath, cstack
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12411 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12415 ;;Total ram usage:       16 bytes
 12416 ;; Hardware stack levels used:    1
 12417 ;; Hardware stack levels required when called:    1
 12418 ;; This function calls:
 12419 ;;		i1___ftpack
 12420 ;; This function is called by:
 12421 ;;		_ISR_Function
 12422 ;; This function uses a non-reentrant model
 12423 ;;
 12424                           
 12425                           
 12426                           ;psect for function i1___ftdiv
 12427  1033                     i1___ftdiv:	
 12428                           
 12429                           ;incstack = 0
 12430                           ; Regs used in i1___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 12431  1033  0020               	movlb	0	; select bank0
 12432  1034  0823               	movf	i1___ftdiv@f1,w
 12433  1035  00A6               	movwf	??i1___ftdiv
 12434  1036  0824               	movf	i1___ftdiv@f1+1,w
 12435  1037  00A7               	movwf	??i1___ftdiv+1
 12436  1038  0825               	movf	i1___ftdiv@f1+2,w
 12437  1039  00A8               	movwf	??i1___ftdiv+2
 12438  103A  1003               	clrc
 12439  103B  0D27               	rlf	??i1___ftdiv+1,w
 12440  103C  0D28               	rlf	??i1___ftdiv+2,w
 12441  103D  00A9               	movwf	??i1___ftdiv+3
 12442  103E  0829               	movf	??i1___ftdiv+3,w
 12443  103F  00AE               	movwf	i1___ftdiv@exp
 12444  1040  08AE               	movf	i1___ftdiv@exp,f
 12445  1041  1D03               	skipz
 12446  1042  284A               	goto	i1l4779
 12447  1043  3000               	movlw	0
 12448  1044  00A0               	movwf	?i1___ftdiv
 12449  1045  3000               	movlw	0
 12450  1046  00A1               	movwf	?i1___ftdiv+1
 12451  1047  3000               	movlw	0
 12452  1048  00A2               	movwf	?i1___ftdiv+2
 12453  1049  0008               	return
 12454  104A                     i1l4779:	
 12455  104A  0820               	movf	i1___ftdiv@f2,w
 12456  104B  00A6               	movwf	??i1___ftdiv
 12457  104C  0821               	movf	i1___ftdiv@f2+1,w
 12458  104D  00A7               	movwf	??i1___ftdiv+1
 12459  104E  0822               	movf	i1___ftdiv@f2+2,w
 12460  104F  00A8               	movwf	??i1___ftdiv+2
 12461  1050  1003               	clrc
 12462  1051  0D27               	rlf	??i1___ftdiv+1,w
 12463  1052  0D28               	rlf	??i1___ftdiv+2,w
 12464  1053  00A9               	movwf	??i1___ftdiv+3
 12465  1054  0829               	movf	??i1___ftdiv+3,w
 12466  1055  00AF               	movwf	i1___ftdiv@sign
 12467  1056  08AF               	movf	i1___ftdiv@sign,f
 12468  1057  1D03               	skipz
 12469  1058  2860               	goto	i1l4785
 12470  1059  3000               	movlw	0
 12471  105A  00A0               	movwf	?i1___ftdiv
 12472  105B  3000               	movlw	0
 12473  105C  00A1               	movwf	?i1___ftdiv+1
 12474  105D  3000               	movlw	0
 12475  105E  00A2               	movwf	?i1___ftdiv+2
 12476  105F  0008               	return
 12477  1060                     i1l4785:	
 12478  1060  3000               	movlw	0
 12479  1061  00AB               	movwf	i1___ftdiv@f3
 12480  1062  3000               	movlw	0
 12481  1063  00AC               	movwf	i1___ftdiv@f3+1
 12482  1064  3000               	movlw	0
 12483  1065  00AD               	movwf	i1___ftdiv@f3+2
 12484  1066  3089               	movlw	137
 12485  1067  072F               	addwf	i1___ftdiv@sign,w
 12486  1068  00A6               	movwf	??i1___ftdiv
 12487  1069  0826               	movf	??i1___ftdiv,w
 12488  106A  02AE               	subwf	i1___ftdiv@exp,f
 12489  106B  0823               	movf	i1___ftdiv@f1,w
 12490  106C  00A6               	movwf	??i1___ftdiv
 12491  106D  0824               	movf	i1___ftdiv@f1+1,w
 12492  106E  00A7               	movwf	??i1___ftdiv+1
 12493  106F  0825               	movf	i1___ftdiv@f1+2,w
 12494  1070  00A8               	movwf	??i1___ftdiv+2
 12495  1071  3010               	movlw	16
 12496  1072                     u654_25:	
 12497  1072  36A8               	lsrf	??i1___ftdiv+2,f
 12498  1073  0CA7               	rrf	??i1___ftdiv+1,f
 12499  1074  0CA6               	rrf	??i1___ftdiv,f
 12500  1075  0B89               	decfsz	9,f
 12501  1076  2872               	goto	u654_25
 12502  1077  0826               	movf	??i1___ftdiv,w
 12503  1078  00A9               	movwf	??i1___ftdiv+3
 12504  1079  0829               	movf	??i1___ftdiv+3,w
 12505  107A  00AF               	movwf	i1___ftdiv@sign
 12506  107B  0820               	movf	i1___ftdiv@f2,w
 12507  107C  00A6               	movwf	??i1___ftdiv
 12508  107D  0821               	movf	i1___ftdiv@f2+1,w
 12509  107E  00A7               	movwf	??i1___ftdiv+1
 12510  107F  0822               	movf	i1___ftdiv@f2+2,w
 12511  1080  00A8               	movwf	??i1___ftdiv+2
 12512  1081  3010               	movlw	16
 12513  1082                     u655_25:	
 12514  1082  36A8               	lsrf	??i1___ftdiv+2,f
 12515  1083  0CA7               	rrf	??i1___ftdiv+1,f
 12516  1084  0CA6               	rrf	??i1___ftdiv,f
 12517  1085  0B89               	decfsz	9,f
 12518  1086  2882               	goto	u655_25
 12519  1087  0826               	movf	??i1___ftdiv,w
 12520  1088  00A9               	movwf	??i1___ftdiv+3
 12521  1089  0829               	movf	??i1___ftdiv+3,w
 12522  108A  06AF               	xorwf	i1___ftdiv@sign,f
 12523  108B  3080               	movlw	128
 12524  108C  00A6               	movwf	??i1___ftdiv
 12525  108D  0826               	movf	??i1___ftdiv,w
 12526  108E  05AF               	andwf	i1___ftdiv@sign,f
 12527  108F  17A4               	bsf	i1___ftdiv@f1+1,7
 12528  1090  30FF               	movlw	255
 12529  1091  05A3               	andwf	i1___ftdiv@f1,f
 12530  1092  30FF               	movlw	255
 12531  1093  05A4               	andwf	i1___ftdiv@f1+1,f
 12532  1094  3000               	movlw	0
 12533  1095  05A5               	andwf	i1___ftdiv@f1+2,f
 12534  1096  17A1               	bsf	i1___ftdiv@f2+1,7
 12535  1097  30FF               	movlw	255
 12536  1098  05A0               	andwf	i1___ftdiv@f2,f
 12537  1099  30FF               	movlw	255
 12538  109A  05A1               	andwf	i1___ftdiv@f2+1,f
 12539  109B  3000               	movlw	0
 12540  109C  05A2               	andwf	i1___ftdiv@f2+2,f
 12541  109D  3018               	movlw	24
 12542  109E  00A6               	movwf	??i1___ftdiv
 12543  109F  0826               	movf	??i1___ftdiv,w
 12544  10A0  00AA               	movwf	i1___ftdiv@cntr
 12545  10A1                     i1l4799:	
 12546  10A1  3001               	movlw	1
 12547  10A2                     u656_25:	
 12548  10A2  35AB               	lslf	i1___ftdiv@f3,f
 12549  10A3  0DAC               	rlf	i1___ftdiv@f3+1,f
 12550  10A4  0DAD               	rlf	i1___ftdiv@f3+2,f
 12551  10A5  0B89               	decfsz	9,f
 12552  10A6  28A2               	goto	u656_25
 12553  10A7  0822               	movf	i1___ftdiv@f2+2,w
 12554  10A8  0225               	subwf	i1___ftdiv@f1+2,w
 12555  10A9  1D03               	skipz
 12556  10AA  28B1               	goto	u657_25
 12557  10AB  0821               	movf	i1___ftdiv@f2+1,w
 12558  10AC  0224               	subwf	i1___ftdiv@f1+1,w
 12559  10AD  1D03               	skipz
 12560  10AE  28B1               	goto	u657_25
 12561  10AF  0820               	movf	i1___ftdiv@f2,w
 12562  10B0  0223               	subwf	i1___ftdiv@f1,w
 12563  10B1                     u657_25:	
 12564  10B1  1C03               	skipc
 12565  10B2  28BA               	goto	i1l4807
 12566  10B3  0820               	movf	i1___ftdiv@f2,w
 12567  10B4  02A3               	subwf	i1___ftdiv@f1,f
 12568  10B5  0821               	movf	i1___ftdiv@f2+1,w
 12569  10B6  3BA4               	subwfb	i1___ftdiv@f1+1,f
 12570  10B7  0822               	movf	i1___ftdiv@f2+2,w
 12571  10B8  3BA5               	subwfb	i1___ftdiv@f1+2,f
 12572  10B9  142B               	bsf	i1___ftdiv@f3,0
 12573  10BA                     i1l4807:	
 12574  10BA  3001               	movlw	1
 12575  10BB                     u658_25:	
 12576  10BB  35A3               	lslf	i1___ftdiv@f1,f
 12577  10BC  0DA4               	rlf	i1___ftdiv@f1+1,f
 12578  10BD  0DA5               	rlf	i1___ftdiv@f1+2,f
 12579  10BE  0B89               	decfsz	9,f
 12580  10BF  28BB               	goto	u658_25
 12581  10C0  3001               	movlw	1
 12582  10C1  02AA               	subwf	i1___ftdiv@cntr,f
 12583  10C2  1D03               	btfss	3,2
 12584  10C3  28A1               	goto	i1l4799
 12585  10C4  082B               	movf	i1___ftdiv@f3,w
 12586  10C5  00F0               	movwf	i1___ftpack@arg
 12587  10C6  082C               	movf	i1___ftdiv@f3+1,w
 12588  10C7  00F1               	movwf	i1___ftpack@arg+1
 12589  10C8  082D               	movf	i1___ftdiv@f3+2,w
 12590  10C9  00F2               	movwf	i1___ftpack@arg+2
 12591  10CA  082E               	movf	i1___ftdiv@exp,w
 12592  10CB  00A6               	movwf	??i1___ftdiv
 12593  10CC  0826               	movf	??i1___ftdiv,w
 12594  10CD  00F3               	movwf	i1___ftpack@exp
 12595  10CE  082F               	movf	i1___ftdiv@sign,w
 12596  10CF  00A7               	movwf	??i1___ftdiv+1
 12597  10D0  0827               	movf	??i1___ftdiv+1,w
 12598  10D1  00F4               	movwf	i1___ftpack@sign
 12599  10D2  319B  2366         	fcall	i1___ftpack
 12600  10D4  0870               	movf	?i1___ftpack,w
 12601  10D5  0020               	movlb	0	; select bank0
 12602  10D6  00A0               	movwf	?i1___ftdiv
 12603  10D7  0871               	movf	?i1___ftpack+1,w
 12604  10D8  00A1               	movwf	?i1___ftdiv+1
 12605  10D9  0872               	movf	?i1___ftpack+2,w
 12606  10DA  00A2               	movwf	?i1___ftdiv+2
 12607  10DB  0008               	return
 12608  10DC                     __end_ofi1___ftdiv:	
 12609                           
 12610                           	psect	text39
 12611  1397                     __ptext39:	
 12612 ;; *************** function i1___ftadd *****************
 12613 ;; Defined at:
 12614 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;  f1              3   16[BANK0 ] float 
 12617 ;;  f2              3   19[BANK0 ] float 
 12618 ;; Auto vars:     Size  Location     Type
 12619 ;;  __ftadd         1   28[BANK0 ] unsigned char 
 12620 ;;  __ftadd         1   27[BANK0 ] unsigned char 
 12621 ;;  __ftadd         1   26[BANK0 ] unsigned char 
 12622 ;; Return value:  Size  Location     Type
 12623 ;;                  3   16[BANK0 ] float 
 12624 ;; Registers used:
 12625 ;;		wreg, status,2, status,0, pclath, cstack
 12626 ;; Tracked objects:
 12627 ;;		On entry : 0/0
 12628 ;;		On exit  : 0/0
 12629 ;;		Unchanged: 0/0
 12630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12631 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12632 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12633 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12635 ;;Total ram usage:       13 bytes
 12636 ;; Hardware stack levels used:    1
 12637 ;; Hardware stack levels required when called:    1
 12638 ;; This function calls:
 12639 ;;		i1___ftpack
 12640 ;; This function is called by:
 12641 ;;		_ISR_Function
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           
 12645                           
 12646                           ;psect for function i1___ftadd
 12647  1397                     i1___ftadd:	
 12648                           
 12649                           ;incstack = 0
 12650                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
 12651  1397  0020               	movlb	0	; select bank0
 12652  1398  0830               	movf	i1___ftadd@f1,w
 12653  1399  00B6               	movwf	??i1___ftadd
 12654  139A  0831               	movf	i1___ftadd@f1+1,w
 12655  139B  00B7               	movwf	??i1___ftadd+1
 12656  139C  0832               	movf	i1___ftadd@f1+2,w
 12657  139D  00B8               	movwf	??i1___ftadd+2
 12658  139E  1003               	clrc
 12659  139F  0D37               	rlf	??i1___ftadd+1,w
 12660  13A0  0D38               	rlf	??i1___ftadd+2,w
 12661  13A1  00B9               	movwf	??i1___ftadd+3
 12662  13A2  0839               	movf	??i1___ftadd+3,w
 12663  13A3  00BC               	movwf	i1___ftadd@exp1
 12664  13A4  0833               	movf	i1___ftadd@f2,w
 12665  13A5  00B6               	movwf	??i1___ftadd
 12666  13A6  0834               	movf	i1___ftadd@f2+1,w
 12667  13A7  00B7               	movwf	??i1___ftadd+1
 12668  13A8  0835               	movf	i1___ftadd@f2+2,w
 12669  13A9  00B8               	movwf	??i1___ftadd+2
 12670  13AA  1003               	clrc
 12671  13AB  0D37               	rlf	??i1___ftadd+1,w
 12672  13AC  0D38               	rlf	??i1___ftadd+2,w
 12673  13AD  00B9               	movwf	??i1___ftadd+3
 12674  13AE  0839               	movf	??i1___ftadd+3,w
 12675  13AF  00BB               	movwf	i1___ftadd@exp2
 12676  13B0  083C               	movf	i1___ftadd@exp1,w
 12677  13B1  1903               	btfsc	3,2
 12678  13B2  2BBF               	goto	i1l4709
 12679  13B3  083B               	movf	i1___ftadd@exp2,w
 12680  13B4  023C               	subwf	i1___ftadd@exp1,w
 12681  13B5  1803               	skipnc
 12682  13B6  2BC6               	goto	i1l4713
 12683  13B7  033C               	decf	i1___ftadd@exp1,w
 12684  13B8  3AFF               	xorlw	255
 12685  13B9  073B               	addwf	i1___ftadd@exp2,w
 12686  13BA  00B6               	movwf	??i1___ftadd
 12687  13BB  3019               	movlw	25
 12688  13BC  0236               	subwf	??i1___ftadd,w
 12689  13BD  1C03               	skipc
 12690  13BE  2BC6               	goto	i1l4713
 12691  13BF                     i1l4709:	
 12692  13BF  0833               	movf	i1___ftadd@f2,w
 12693  13C0  00B0               	movwf	?i1___ftadd
 12694  13C1  0834               	movf	i1___ftadd@f2+1,w
 12695  13C2  00B1               	movwf	?i1___ftadd+1
 12696  13C3  0835               	movf	i1___ftadd@f2+2,w
 12697  13C4  00B2               	movwf	?i1___ftadd+2
 12698  13C5  0008               	return
 12699  13C6                     i1l4713:	
 12700  13C6  083B               	movf	i1___ftadd@exp2,w
 12701  13C7  1903               	btfsc	3,2
 12702  13C8  0008               	return
 12703  13C9  083C               	movf	i1___ftadd@exp1,w
 12704  13CA  023B               	subwf	i1___ftadd@exp2,w
 12705  13CB  1803               	skipnc
 12706  13CC  2BD5               	goto	i1l4719
 12707  13CD  033B               	decf	i1___ftadd@exp2,w
 12708  13CE  3AFF               	xorlw	255
 12709  13CF  073C               	addwf	i1___ftadd@exp1,w
 12710  13D0  00B6               	movwf	??i1___ftadd
 12711  13D1  3019               	movlw	25
 12712  13D2  0236               	subwf	??i1___ftadd,w
 12713  13D3  1803               	btfsc	3,0
 12714  13D4  0008               	return
 12715  13D5                     i1l4719:	
 12716  13D5  3006               	movlw	6
 12717  13D6  00B6               	movwf	??i1___ftadd
 12718  13D7  0836               	movf	??i1___ftadd,w
 12719  13D8  00BA               	movwf	i1___ftadd@sign
 12720  13D9  1BB2               	btfsc	i1___ftadd@f1+2,7
 12721  13DA  17BA               	bsf	i1___ftadd@sign,7
 12722  13DB  1BB5               	btfsc	i1___ftadd@f2+2,7
 12723  13DC  173A               	bsf	i1___ftadd@sign,6
 12724  13DD  17B1               	bsf	i1___ftadd@f1+1,7
 12725  13DE  30FF               	movlw	255
 12726  13DF  05B0               	andwf	i1___ftadd@f1,f
 12727  13E0  30FF               	movlw	255
 12728  13E1  05B1               	andwf	i1___ftadd@f1+1,f
 12729  13E2  3000               	movlw	0
 12730  13E3  05B2               	andwf	i1___ftadd@f1+2,f
 12731  13E4  17B4               	bsf	i1___ftadd@f2+1,7
 12732  13E5  30FF               	movlw	255
 12733  13E6  05B3               	andwf	i1___ftadd@f2,f
 12734  13E7  30FF               	movlw	255
 12735  13E8  05B4               	andwf	i1___ftadd@f2+1,f
 12736  13E9  3000               	movlw	0
 12737  13EA  05B5               	andwf	i1___ftadd@f2+2,f
 12738  13EB  083B               	movf	i1___ftadd@exp2,w
 12739  13EC  023C               	subwf	i1___ftadd@exp1,w
 12740  13ED  1803               	skipnc
 12741  13EE  2C11               	goto	i1l4741
 12742  13EF                     i1l4731:	
 12743  13EF  3001               	movlw	1
 12744  13F0                     u638_25:	
 12745  13F0  35B3               	lslf	i1___ftadd@f2,f
 12746  13F1  0DB4               	rlf	i1___ftadd@f2+1,f
 12747  13F2  0DB5               	rlf	i1___ftadd@f2+2,f
 12748  13F3  0B89               	decfsz	9,f
 12749  13F4  2BF0               	goto	u638_25
 12750  13F5  3001               	movlw	1
 12751  13F6  02BB               	subwf	i1___ftadd@exp2,f
 12752  13F7  083B               	movf	i1___ftadd@exp2,w
 12753  13F8  063C               	xorwf	i1___ftadd@exp1,w
 12754  13F9  1903               	skipnz
 12755  13FA  2C0C               	goto	i1l4739
 12756  13FB  3001               	movlw	1
 12757  13FC  02BA               	subwf	i1___ftadd@sign,f
 12758  13FD  083A               	movf	i1___ftadd@sign,w
 12759  13FE  3907               	andlw	7
 12760  13FF  1903               	btfsc	3,2
 12761  1400  2C0C               	goto	i1l4739
 12762  1401  2BEF               	goto	i1l4731
 12763  1402                     i1l4737:	
 12764  1402  3001               	movlw	1
 12765  1403                     u641_25:	
 12766  1403  36B2               	lsrf	i1___ftadd@f1+2,f
 12767  1404  0CB1               	rrf	i1___ftadd@f1+1,f
 12768  1405  0CB0               	rrf	i1___ftadd@f1,f
 12769  1406  0B89               	decfsz	9,f
 12770  1407  2C03               	goto	u641_25
 12771  1408  3001               	movlw	1
 12772  1409  00B6               	movwf	??i1___ftadd
 12773  140A  0836               	movf	??i1___ftadd,w
 12774  140B  07BC               	addwf	i1___ftadd@exp1,f
 12775  140C                     i1l4739:	
 12776  140C  083C               	movf	i1___ftadd@exp1,w
 12777  140D  063B               	xorwf	i1___ftadd@exp2,w
 12778  140E  1903               	btfsc	3,2
 12779  140F  2C36               	goto	i1l1106
 12780  1410  2C02               	goto	i1l4737
 12781  1411                     i1l4741:	
 12782  1411  083C               	movf	i1___ftadd@exp1,w
 12783  1412  023B               	subwf	i1___ftadd@exp2,w
 12784  1413  1803               	skipnc
 12785  1414  2C36               	goto	i1l1106
 12786  1415                     i1l4743:	
 12787  1415  3001               	movlw	1
 12788  1416                     u644_25:	
 12789  1416  35B0               	lslf	i1___ftadd@f1,f
 12790  1417  0DB1               	rlf	i1___ftadd@f1+1,f
 12791  1418  0DB2               	rlf	i1___ftadd@f1+2,f
 12792  1419  0B89               	decfsz	9,f
 12793  141A  2C16               	goto	u644_25
 12794  141B  3001               	movlw	1
 12795  141C  02BC               	subwf	i1___ftadd@exp1,f
 12796  141D  083B               	movf	i1___ftadd@exp2,w
 12797  141E  063C               	xorwf	i1___ftadd@exp1,w
 12798  141F  1903               	skipnz
 12799  1420  2C32               	goto	i1l4751
 12800  1421  3001               	movlw	1
 12801  1422  02BA               	subwf	i1___ftadd@sign,f
 12802  1423  083A               	movf	i1___ftadd@sign,w
 12803  1424  3907               	andlw	7
 12804  1425  1903               	btfsc	3,2
 12805  1426  2C32               	goto	i1l4751
 12806  1427  2C15               	goto	i1l4743
 12807  1428                     i1l4749:	
 12808  1428  3001               	movlw	1
 12809  1429                     u647_25:	
 12810  1429  36B5               	lsrf	i1___ftadd@f2+2,f
 12811  142A  0CB4               	rrf	i1___ftadd@f2+1,f
 12812  142B  0CB3               	rrf	i1___ftadd@f2,f
 12813  142C  0B89               	decfsz	9,f
 12814  142D  2C29               	goto	u647_25
 12815  142E  3001               	movlw	1
 12816  142F  00B6               	movwf	??i1___ftadd
 12817  1430  0836               	movf	??i1___ftadd,w
 12818  1431  07BB               	addwf	i1___ftadd@exp2,f
 12819  1432                     i1l4751:	
 12820  1432  083C               	movf	i1___ftadd@exp1,w
 12821  1433  063B               	xorwf	i1___ftadd@exp2,w
 12822  1434  1D03               	skipz
 12823  1435  2C28               	goto	i1l4749
 12824  1436                     i1l1106:	
 12825  1436  1FBA               	btfss	i1___ftadd@sign,7
 12826  1437  2C48               	goto	i1l4755
 12827  1438  30FF               	movlw	255
 12828  1439  06B0               	xorwf	i1___ftadd@f1,f
 12829  143A  30FF               	movlw	255
 12830  143B  06B1               	xorwf	i1___ftadd@f1+1,f
 12831  143C  30FF               	movlw	255
 12832  143D  06B2               	xorwf	i1___ftadd@f1+2,f
 12833  143E  3001               	movlw	1
 12834  143F  07B0               	addwf	i1___ftadd@f1,f
 12835  1440  3000               	movlw	0
 12836  1441  1803               	skipnc
 12837  1442  3001               	movlw	1
 12838  1443  07B1               	addwf	i1___ftadd@f1+1,f
 12839  1444  3000               	movlw	0
 12840  1445  1803               	skipnc
 12841  1446  3001               	movlw	1
 12842  1447  07B2               	addwf	i1___ftadd@f1+2,f
 12843  1448                     i1l4755:	
 12844  1448  1F3A               	btfss	i1___ftadd@sign,6
 12845  1449  2C5A               	goto	i1l4759
 12846  144A  30FF               	movlw	255
 12847  144B  06B3               	xorwf	i1___ftadd@f2,f
 12848  144C  30FF               	movlw	255
 12849  144D  06B4               	xorwf	i1___ftadd@f2+1,f
 12850  144E  30FF               	movlw	255
 12851  144F  06B5               	xorwf	i1___ftadd@f2+2,f
 12852  1450  3001               	movlw	1
 12853  1451  07B3               	addwf	i1___ftadd@f2,f
 12854  1452  3000               	movlw	0
 12855  1453  1803               	skipnc
 12856  1454  3001               	movlw	1
 12857  1455  07B4               	addwf	i1___ftadd@f2+1,f
 12858  1456  3000               	movlw	0
 12859  1457  1803               	skipnc
 12860  1458  3001               	movlw	1
 12861  1459  07B5               	addwf	i1___ftadd@f2+2,f
 12862  145A                     i1l4759:	
 12863  145A  01BA               	clrf	i1___ftadd@sign
 12864  145B  0830               	movf	i1___ftadd@f1,w
 12865  145C  07B3               	addwf	i1___ftadd@f2,f
 12866  145D  0831               	movf	i1___ftadd@f1+1,w
 12867  145E  3DB4               	addwfc	i1___ftadd@f2+1,f
 12868  145F  0832               	movf	i1___ftadd@f1+2,w
 12869  1460  3DB5               	addwfc	i1___ftadd@f2+2,f
 12870  1461  1FB5               	btfss	i1___ftadd@f2+2,7
 12871  1462  2C75               	goto	i1l4769
 12872  1463  30FF               	movlw	255
 12873  1464  06B3               	xorwf	i1___ftadd@f2,f
 12874  1465  30FF               	movlw	255
 12875  1466  06B4               	xorwf	i1___ftadd@f2+1,f
 12876  1467  30FF               	movlw	255
 12877  1468  06B5               	xorwf	i1___ftadd@f2+2,f
 12878  1469  3001               	movlw	1
 12879  146A  07B3               	addwf	i1___ftadd@f2,f
 12880  146B  3000               	movlw	0
 12881  146C  1803               	skipnc
 12882  146D  3001               	movlw	1
 12883  146E  07B4               	addwf	i1___ftadd@f2+1,f
 12884  146F  3000               	movlw	0
 12885  1470  1803               	skipnc
 12886  1471  3001               	movlw	1
 12887  1472  07B5               	addwf	i1___ftadd@f2+2,f
 12888  1473  01BA               	clrf	i1___ftadd@sign
 12889  1474  0ABA               	incf	i1___ftadd@sign,f
 12890  1475                     i1l4769:	
 12891  1475  0833               	movf	i1___ftadd@f2,w
 12892  1476  00F0               	movwf	i1___ftpack@arg
 12893  1477  0834               	movf	i1___ftadd@f2+1,w
 12894  1478  00F1               	movwf	i1___ftpack@arg+1
 12895  1479  0835               	movf	i1___ftadd@f2+2,w
 12896  147A  00F2               	movwf	i1___ftpack@arg+2
 12897  147B  083C               	movf	i1___ftadd@exp1,w
 12898  147C  00B6               	movwf	??i1___ftadd
 12899  147D  0836               	movf	??i1___ftadd,w
 12900  147E  00F3               	movwf	i1___ftpack@exp
 12901  147F  083A               	movf	i1___ftadd@sign,w
 12902  1480  00B7               	movwf	??i1___ftadd+1
 12903  1481  0837               	movf	??i1___ftadd+1,w
 12904  1482  00F4               	movwf	i1___ftpack@sign
 12905  1483  319B  2366         	fcall	i1___ftpack
 12906  1485  0870               	movf	?i1___ftpack,w
 12907  1486  0020               	movlb	0	; select bank0
 12908  1487  00B0               	movwf	?i1___ftadd
 12909  1488  0871               	movf	?i1___ftpack+1,w
 12910  1489  00B1               	movwf	?i1___ftadd+1
 12911  148A  0872               	movf	?i1___ftpack+2,w
 12912  148B  00B2               	movwf	?i1___ftadd+2
 12913  148C  0008               	return
 12914  148D                     __end_ofi1___ftadd:	
 12915                           
 12916                           	psect	text40
 12917  1B66                     __ptext40:	
 12918 ;; *************** function i1___ftpack *****************
 12919 ;; Defined at:
 12920 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
 12921 ;; Parameters:    Size  Location     Type
 12922 ;;  arg             3    0[COMMON] unsigned um
 12923 ;;  exp             1    3[COMMON] unsigned char 
 12924 ;;  sign            1    4[COMMON] unsigned char 
 12925 ;; Auto vars:     Size  Location     Type
 12926 ;;		None
 12927 ;; Return value:  Size  Location     Type
 12928 ;;                  3    0[COMMON] float 
 12929 ;; Registers used:
 12930 ;;		wreg, status,2, status,0
 12931 ;; Tracked objects:
 12932 ;;		On entry : 0/0
 12933 ;;		On exit  : 0/0
 12934 ;;		Unchanged: 0/0
 12935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12936 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12938 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12939 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12940 ;;Total ram usage:        8 bytes
 12941 ;; Hardware stack levels used:    1
 12942 ;; This function calls:
 12943 ;;		Nothing
 12944 ;; This function is called by:
 12945 ;;		i1___ftadd
 12946 ;;		i1___ftdiv
 12947 ;;		i1___ftmul
 12948 ;;		i1___lwtoft
 12949 ;; This function uses a non-reentrant model
 12950 ;;
 12951                           
 12952                           
 12953                           ;psect for function i1___ftpack
 12954  1B66                     i1___ftpack:	
 12955                           
 12956                           ;incstack = 0
 12957                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
 12958  1B66  0873               	movf	i1___ftpack@exp,w
 12959  1B67  1903               	btfsc	3,2
 12960  1B68  2B6E               	goto	i1l3995
 12961  1B69  0872               	movf	i1___ftpack@arg+2,w
 12962  1B6A  0471               	iorwf	i1___ftpack@arg+1,w
 12963  1B6B  0470               	iorwf	i1___ftpack@arg,w
 12964  1B6C  1D03               	skipz
 12965  1B6D  2B7F               	goto	i1l4001
 12966  1B6E                     i1l3995:	
 12967  1B6E  3000               	movlw	0
 12968  1B6F  00F0               	movwf	?i1___ftpack
 12969  1B70  3000               	movlw	0
 12970  1B71  00F1               	movwf	?i1___ftpack+1
 12971  1B72  3000               	movlw	0
 12972  1B73  00F2               	movwf	?i1___ftpack+2
 12973  1B74  0008               	return
 12974  1B75                     i1l3999:	
 12975  1B75  3001               	movlw	1
 12976  1B76  00F5               	movwf	??i1___ftpack
 12977  1B77  0875               	movf	??i1___ftpack,w
 12978  1B78  07F3               	addwf	i1___ftpack@exp,f
 12979  1B79  3001               	movlw	1
 12980  1B7A                     u518_25:	
 12981  1B7A  36F2               	lsrf	i1___ftpack@arg+2,f
 12982  1B7B  0CF1               	rrf	i1___ftpack@arg+1,f
 12983  1B7C  0CF0               	rrf	i1___ftpack@arg,f
 12984  1B7D  0B89               	decfsz	9,f
 12985  1B7E  2B7A               	goto	u518_25
 12986  1B7F                     i1l4001:	
 12987  1B7F  30FE               	movlw	254
 12988  1B80  0572               	andwf	i1___ftpack@arg+2,w
 12989  1B81  1903               	btfsc	3,2
 12990  1B82  2B98               	goto	i1l1077
 12991  1B83  2B75               	goto	i1l3999
 12992  1B84                     i1l4003:	
 12993  1B84  3001               	movlw	1
 12994  1B85  00F5               	movwf	??i1___ftpack
 12995  1B86  0875               	movf	??i1___ftpack,w
 12996  1B87  07F3               	addwf	i1___ftpack@exp,f
 12997  1B88  3001               	movlw	1
 12998  1B89  07F0               	addwf	i1___ftpack@arg,f
 12999  1B8A  3000               	movlw	0
 13000  1B8B  1803               	skipnc
 13001  1B8C  3001               	movlw	1
 13002  1B8D  07F1               	addwf	i1___ftpack@arg+1,f
 13003  1B8E  3000               	movlw	0
 13004  1B8F  1803               	skipnc
 13005  1B90  3001               	movlw	1
 13006  1B91  07F2               	addwf	i1___ftpack@arg+2,f
 13007  1B92  3001               	movlw	1
 13008  1B93                     u520_25:	
 13009  1B93  36F2               	lsrf	i1___ftpack@arg+2,f
 13010  1B94  0CF1               	rrf	i1___ftpack@arg+1,f
 13011  1B95  0CF0               	rrf	i1___ftpack@arg,f
 13012  1B96  0B89               	decfsz	9,f
 13013  1B97  2B93               	goto	u520_25
 13014  1B98                     i1l1077:	
 13015  1B98  30FF               	movlw	255
 13016  1B99  0572               	andwf	i1___ftpack@arg+2,w
 13017  1B9A  1903               	btfsc	3,2
 13018  1B9B  2BA5               	goto	i1l4011
 13019  1B9C  2B84               	goto	i1l4003
 13020  1B9D                     i1l4009:	
 13021  1B9D  3001               	movlw	1
 13022  1B9E  02F3               	subwf	i1___ftpack@exp,f
 13023  1B9F  3001               	movlw	1
 13024  1BA0                     u522_25:	
 13025  1BA0  35F0               	lslf	i1___ftpack@arg,f
 13026  1BA1  0DF1               	rlf	i1___ftpack@arg+1,f
 13027  1BA2  0DF2               	rlf	i1___ftpack@arg+2,f
 13028  1BA3  0B89               	decfsz	9,f
 13029  1BA4  2BA0               	goto	u522_25
 13030  1BA5                     i1l4011:	
 13031  1BA5  1FF1               	btfss	i1___ftpack@arg+1,7
 13032  1BA6  2B9D               	goto	i1l4009
 13033  1BA7  1873               	btfsc	i1___ftpack@exp,0
 13034  1BA8  2BAF               	goto	i1l1083
 13035  1BA9  30FF               	movlw	255
 13036  1BAA  05F0               	andwf	i1___ftpack@arg,f
 13037  1BAB  307F               	movlw	127
 13038  1BAC  05F1               	andwf	i1___ftpack@arg+1,f
 13039  1BAD  30FF               	movlw	255
 13040  1BAE  05F2               	andwf	i1___ftpack@arg+2,f
 13041  1BAF                     i1l1083:	
 13042  1BAF  1003               	clrc
 13043  1BB0  0CF3               	rrf	i1___ftpack@exp,f
 13044  1BB1  0873               	movf	i1___ftpack@exp,w
 13045  1BB2  00F5               	movwf	??i1___ftpack
 13046  1BB3  01F6               	clrf	??i1___ftpack+1
 13047  1BB4  01F7               	clrf	??i1___ftpack+2
 13048  1BB5  3010               	movlw	16
 13049  1BB6                     u525_25:	
 13050  1BB6  35F5               	lslf	??i1___ftpack,f
 13051  1BB7  0DF6               	rlf	??i1___ftpack+1,f
 13052  1BB8  0DF7               	rlf	??i1___ftpack+2,f
 13053  1BB9  0B89               	decfsz	9,f
 13054  1BBA  2BB6               	goto	u525_25
 13055  1BBB  0875               	movf	??i1___ftpack,w
 13056  1BBC  04F0               	iorwf	i1___ftpack@arg,f
 13057  1BBD  0876               	movf	??i1___ftpack+1,w
 13058  1BBE  04F1               	iorwf	i1___ftpack@arg+1,f
 13059  1BBF  0877               	movf	??i1___ftpack+2,w
 13060  1BC0  04F2               	iorwf	i1___ftpack@arg+2,f
 13061  1BC1  0874               	movf	i1___ftpack@sign,w
 13062  1BC2  1903               	btfsc	3,2
 13063  1BC3  0008               	return
 13064  1BC4  17F2               	bsf	i1___ftpack@arg+2,7
 13065  1BC5  0008               	return
 13066  1BC6                     __end_ofi1___ftpack:	
 13067                           
 13068                           	psect	text41
 13069  1DEE                     __ptext41:	
 13070 ;; *************** function i1___aldiv *****************
 13071 ;; Defined at:
 13072 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\aldiv.c"
 13073 ;; Parameters:    Size  Location     Type
 13074 ;;  divisor         4    0[COMMON] long 
 13075 ;;  dividend        4    4[COMMON] long 
 13076 ;; Auto vars:     Size  Location     Type
 13077 ;;  __aldiv         4    2[BANK0 ] long 
 13078 ;;  __aldiv         1    1[BANK0 ] unsigned char 
 13079 ;;  __aldiv         1    0[BANK0 ] unsigned char 
 13080 ;; Return value:  Size  Location     Type
 13081 ;;                  4    0[COMMON] long 
 13082 ;; Registers used:
 13083 ;;		wreg, status,2, status,0
 13084 ;; Tracked objects:
 13085 ;;		On entry : 0/0
 13086 ;;		On exit  : 0/0
 13087 ;;		Unchanged: 0/0
 13088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13089 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13090 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13093 ;;Total ram usage:       15 bytes
 13094 ;; Hardware stack levels used:    1
 13095 ;; This function calls:
 13096 ;;		Nothing
 13097 ;; This function is called by:
 13098 ;;		_ISR_Function
 13099 ;; This function uses a non-reentrant model
 13100 ;;
 13101                           
 13102                           
 13103                           ;psect for function i1___aldiv
 13104  1DEE                     i1___aldiv:	
 13105                           
 13106                           ;incstack = 0
 13107                           ; Regs used in i1___aldiv: [wreg+status,2+status,0]
 13108  1DEE  0020               	movlb	0	; select bank0
 13109  1DEF  01A1               	clrf	i1___aldiv@sign
 13110  1DF0  1FF3               	btfss	i1___aldiv@divisor+3,7
 13111  1DF1  2DFF               	goto	i1l971
 13112  1DF2  09F0               	comf	i1___aldiv@divisor,f
 13113  1DF3  09F1               	comf	i1___aldiv@divisor+1,f
 13114  1DF4  09F2               	comf	i1___aldiv@divisor+2,f
 13115  1DF5  09F3               	comf	i1___aldiv@divisor+3,f
 13116  1DF6  0AF0               	incf	i1___aldiv@divisor,f
 13117  1DF7  1903               	skipnz
 13118  1DF8  0AF1               	incf	i1___aldiv@divisor+1,f
 13119  1DF9  1903               	skipnz
 13120  1DFA  0AF2               	incf	i1___aldiv@divisor+2,f
 13121  1DFB  1903               	skipnz
 13122  1DFC  0AF3               	incf	i1___aldiv@divisor+3,f
 13123  1DFD  01A1               	clrf	i1___aldiv@sign
 13124  1DFE  0AA1               	incf	i1___aldiv@sign,f
 13125  1DFF                     i1l971:	
 13126  1DFF  1FF7               	btfss	i1___aldiv@dividend+3,7
 13127  1E00  2E10               	goto	i1l4671
 13128  1E01  09F4               	comf	i1___aldiv@dividend,f
 13129  1E02  09F5               	comf	i1___aldiv@dividend+1,f
 13130  1E03  09F6               	comf	i1___aldiv@dividend+2,f
 13131  1E04  09F7               	comf	i1___aldiv@dividend+3,f
 13132  1E05  0AF4               	incf	i1___aldiv@dividend,f
 13133  1E06  1903               	skipnz
 13134  1E07  0AF5               	incf	i1___aldiv@dividend+1,f
 13135  1E08  1903               	skipnz
 13136  1E09  0AF6               	incf	i1___aldiv@dividend+2,f
 13137  1E0A  1903               	skipnz
 13138  1E0B  0AF7               	incf	i1___aldiv@dividend+3,f
 13139  1E0C  3001               	movlw	1
 13140  1E0D  00F8               	movwf	??i1___aldiv
 13141  1E0E  0878               	movf	??i1___aldiv,w
 13142  1E0F  06A1               	xorwf	i1___aldiv@sign,f
 13143  1E10                     i1l4671:	
 13144  1E10  3000               	movlw	0
 13145  1E11  00A5               	movwf	i1___aldiv@quotient+3
 13146  1E12  3000               	movlw	0
 13147  1E13  00A4               	movwf	i1___aldiv@quotient+2
 13148  1E14  3000               	movlw	0
 13149  1E15  00A3               	movwf	i1___aldiv@quotient+1
 13150  1E16  3000               	movlw	0
 13151  1E17  00A2               	movwf	i1___aldiv@quotient
 13152  1E18  0873               	movf	i1___aldiv@divisor+3,w
 13153  1E19  0472               	iorwf	i1___aldiv@divisor+2,w
 13154  1E1A  0471               	iorwf	i1___aldiv@divisor+1,w
 13155  1E1B  0470               	iorwf	i1___aldiv@divisor,w
 13156  1E1C  1903               	skipnz
 13157  1E1D  2E59               	goto	i1l4693
 13158  1E1E  01A0               	clrf	i1___aldiv@counter
 13159  1E1F  0AA0               	incf	i1___aldiv@counter,f
 13160  1E20                     i1l4679:	
 13161  1E20  1BF3               	btfsc	i1___aldiv@divisor+3,7
 13162  1E21  2E2E               	goto	i1l4681
 13163  1E22  3001               	movlw	1
 13164  1E23                     u622_25:	
 13165  1E23  35F0               	lslf	i1___aldiv@divisor,f
 13166  1E24  0DF1               	rlf	i1___aldiv@divisor+1,f
 13167  1E25  0DF2               	rlf	i1___aldiv@divisor+2,f
 13168  1E26  0DF3               	rlf	i1___aldiv@divisor+3,f
 13169  1E27  0B89               	decfsz	9,f
 13170  1E28  2E23               	goto	u622_25
 13171  1E29  3001               	movlw	1
 13172  1E2A  00F8               	movwf	??i1___aldiv
 13173  1E2B  0878               	movf	??i1___aldiv,w
 13174  1E2C  07A0               	addwf	i1___aldiv@counter,f
 13175  1E2D  2E20               	goto	i1l4679
 13176  1E2E                     i1l4681:	
 13177  1E2E  3001               	movlw	1
 13178  1E2F                     u624_25:	
 13179  1E2F  35A2               	lslf	i1___aldiv@quotient,f
 13180  1E30  0DA3               	rlf	i1___aldiv@quotient+1,f
 13181  1E31  0DA4               	rlf	i1___aldiv@quotient+2,f
 13182  1E32  0DA5               	rlf	i1___aldiv@quotient+3,f
 13183  1E33  0B89               	decfsz	9,f
 13184  1E34  2E2F               	goto	u624_25
 13185  1E35  0873               	movf	i1___aldiv@divisor+3,w
 13186  1E36  0277               	subwf	i1___aldiv@dividend+3,w
 13187  1E37  1D03               	skipz
 13188  1E38  2E43               	goto	u625_25
 13189  1E39  0872               	movf	i1___aldiv@divisor+2,w
 13190  1E3A  0276               	subwf	i1___aldiv@dividend+2,w
 13191  1E3B  1D03               	skipz
 13192  1E3C  2E43               	goto	u625_25
 13193  1E3D  0871               	movf	i1___aldiv@divisor+1,w
 13194  1E3E  0275               	subwf	i1___aldiv@dividend+1,w
 13195  1E3F  1D03               	skipz
 13196  1E40  2E43               	goto	u625_25
 13197  1E41  0870               	movf	i1___aldiv@divisor,w
 13198  1E42  0274               	subwf	i1___aldiv@dividend,w
 13199  1E43                     u625_25:	
 13200  1E43  1C03               	skipc
 13201  1E44  2E4E               	goto	i1l4689
 13202  1E45  0870               	movf	i1___aldiv@divisor,w
 13203  1E46  02F4               	subwf	i1___aldiv@dividend,f
 13204  1E47  0871               	movf	i1___aldiv@divisor+1,w
 13205  1E48  3BF5               	subwfb	i1___aldiv@dividend+1,f
 13206  1E49  0872               	movf	i1___aldiv@divisor+2,w
 13207  1E4A  3BF6               	subwfb	i1___aldiv@dividend+2,f
 13208  1E4B  0873               	movf	i1___aldiv@divisor+3,w
 13209  1E4C  3BF7               	subwfb	i1___aldiv@dividend+3,f
 13210  1E4D  1422               	bsf	i1___aldiv@quotient,0
 13211  1E4E                     i1l4689:	
 13212  1E4E  3001               	movlw	1
 13213  1E4F                     u626_25:	
 13214  1E4F  36F3               	lsrf	i1___aldiv@divisor+3,f
 13215  1E50  0CF2               	rrf	i1___aldiv@divisor+2,f
 13216  1E51  0CF1               	rrf	i1___aldiv@divisor+1,f
 13217  1E52  0CF0               	rrf	i1___aldiv@divisor,f
 13218  1E53  0B89               	decfsz	9,f
 13219  1E54  2E4F               	goto	u626_25
 13220  1E55  3001               	movlw	1
 13221  1E56  02A0               	subwf	i1___aldiv@counter,f
 13222  1E57  1D03               	btfss	3,2
 13223  1E58  2E2E               	goto	i1l4681
 13224  1E59                     i1l4693:	
 13225  1E59  0821               	movf	i1___aldiv@sign,w
 13226  1E5A  1903               	btfsc	3,2
 13227  1E5B  2E67               	goto	i1l4697
 13228  1E5C  09A2               	comf	i1___aldiv@quotient,f
 13229  1E5D  09A3               	comf	i1___aldiv@quotient+1,f
 13230  1E5E  09A4               	comf	i1___aldiv@quotient+2,f
 13231  1E5F  09A5               	comf	i1___aldiv@quotient+3,f
 13232  1E60  0AA2               	incf	i1___aldiv@quotient,f
 13233  1E61  1903               	skipnz
 13234  1E62  0AA3               	incf	i1___aldiv@quotient+1,f
 13235  1E63  1903               	skipnz
 13236  1E64  0AA4               	incf	i1___aldiv@quotient+2,f
 13237  1E65  1903               	skipnz
 13238  1E66  0AA5               	incf	i1___aldiv@quotient+3,f
 13239  1E67                     i1l4697:	
 13240  1E67  0825               	movf	i1___aldiv@quotient+3,w
 13241  1E68  00F3               	movwf	?i1___aldiv+3
 13242  1E69  0824               	movf	i1___aldiv@quotient+2,w
 13243  1E6A  00F2               	movwf	?i1___aldiv+2
 13244  1E6B  0823               	movf	i1___aldiv@quotient+1,w
 13245  1E6C  00F1               	movwf	?i1___aldiv+1
 13246  1E6D  0822               	movf	i1___aldiv@quotient,w
 13247  1E6E  00F0               	movwf	?i1___aldiv
 13248  1E6F  0008               	return
 13249  1E70                     __end_ofi1___aldiv:	
 13250                           
 13251                           	psect	text42
 13252  19B1                     __ptext42:	
 13253 ;; *************** function i1_Update_PWM *****************
 13254 ;; Defined at:
 13255 ;;		line 1151 in file "main.c"
 13256 ;; Parameters:    Size  Location     Type
 13257 ;;  setwsduty       2    0[COMMON] unsigned int 
 13258 ;; Auto vars:     Size  Location     Type
 13259 ;;  Update_PWM      2    6[COMMON] unsigned int 
 13260 ;;  Update_PWM      2    4[COMMON] unsigned int 
 13261 ;; Return value:  Size  Location     Type
 13262 ;;		None               void
 13263 ;; Registers used:
 13264 ;;		wreg, status,2, status,0
 13265 ;; Tracked objects:
 13266 ;;		On entry : 0/0
 13267 ;;		On exit  : 0/0
 13268 ;;		Unchanged: 0/0
 13269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13271 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13273 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13274 ;;Total ram usage:        8 bytes
 13275 ;; Hardware stack levels used:    1
 13276 ;; This function calls:
 13277 ;;		Nothing
 13278 ;; This function is called by:
 13279 ;;		_ISR_Function
 13280 ;; This function uses a non-reentrant model
 13281 ;;
 13282                           
 13283                           
 13284                           ;psect for function i1_Update_PWM
 13285  19B1                     i1_Update_PWM:	
 13286                           
 13287                           ;main.c: 1153: unsigned int Temp1=0x00, Dutycnt=0;
 13288                           
 13289                           ;incstack = 0
 13290                           ; Regs used in i1_Update_PWM: [wreg+status,2+status,0]
 13291  19B1  01F4               	clrf	i1Update_PWM@Temp1
 13292  19B2  01F5               	clrf	i1Update_PWM@Temp1+1
 13293  19B3  01F6               	clrf	i1Update_PWM@Dutycnt
 13294  19B4  01F7               	clrf	i1Update_PWM@Dutycnt+1
 13295                           
 13296                           ;main.c: 1154: Dutycnt=setwsduty;
 13297  19B5  0871               	movf	i1Update_PWM@setwsduty+1,w
 13298  19B6  01F7               	clrf	i1Update_PWM@Dutycnt+1
 13299  19B7  07F7               	addwf	i1Update_PWM@Dutycnt+1,f
 13300  19B8  0870               	movf	i1Update_PWM@setwsduty,w
 13301  19B9  01F6               	clrf	i1Update_PWM@Dutycnt
 13302  19BA  07F6               	addwf	i1Update_PWM@Dutycnt,f
 13303                           
 13304                           ;main.c: 1155: CCP1CONbits.DC1B=Dutycnt;
 13305  19BB  0876               	movf	i1Update_PWM@Dutycnt,w
 13306  19BC  00F2               	movwf	??i1_Update_PWM
 13307  19BD  0EF2               	swapf	??i1_Update_PWM,f
 13308  19BE  0025               	movlb	5	; select bank5
 13309  19BF  0813               	movf	19,w	;volatile
 13310  19C0  0672               	xorwf	??i1_Update_PWM,w
 13311  19C1  39CF               	andlw	-49
 13312  19C2  0672               	xorwf	??i1_Update_PWM,w
 13313  19C3  0093               	movwf	19	;volatile
 13314                           
 13315                           ;main.c: 1156: Temp1=Dutycnt >> 2;
 13316  19C4  0877               	movf	i1Update_PWM@Dutycnt+1,w
 13317  19C5  00F3               	movwf	??i1_Update_PWM+1
 13318  19C6  0876               	movf	i1Update_PWM@Dutycnt,w
 13319  19C7  00F2               	movwf	??i1_Update_PWM
 13320  19C8  36F3               	lsrf	??i1_Update_PWM+1,f
 13321  19C9  0CF2               	rrf	??i1_Update_PWM,f
 13322  19CA  36F3               	lsrf	??i1_Update_PWM+1,f
 13323  19CB  0CF2               	rrf	??i1_Update_PWM,f
 13324  19CC  0872               	movf	??i1_Update_PWM,w
 13325  19CD  00F4               	movwf	i1Update_PWM@Temp1
 13326  19CE  0873               	movf	??i1_Update_PWM+1,w
 13327  19CF  00F5               	movwf	i1Update_PWM@Temp1+1
 13328                           
 13329                           ;main.c: 1157: CCPR1L=Temp1;
 13330  19D0  0874               	movf	i1Update_PWM@Temp1,w
 13331  19D1  0091               	movwf	17	;volatile
 13332  19D2  0008               	return
 13333  19D3                     __end_ofi1_Update_PWM:	
 13334                           
 13335                           	psect	text43
 13336  0571                     __ptext43:	
 13337 ;; *************** function _Display *****************
 13338 ;; Defined at:
 13339 ;;		line 8 in file "DISPLAY.C"
 13340 ;; Parameters:    Size  Location     Type
 13341 ;;		None
 13342 ;; Auto vars:     Size  Location     Type
 13343 ;;		None
 13344 ;; Return value:  Size  Location     Type
 13345 ;;		None               void
 13346 ;; Registers used:
 13347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13348 ;; Tracked objects:
 13349 ;;		On entry : 0/0
 13350 ;;		On exit  : 0/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13355 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13357 ;;Total ram usage:        2 bytes
 13358 ;; Hardware stack levels used:    1
 13359 ;; This function calls:
 13360 ;;		Nothing
 13361 ;; This function is called by:
 13362 ;;		_ISR_Function
 13363 ;; This function uses a non-reentrant model
 13364 ;;
 13365                           
 13366                           
 13367                           ;psect for function _Display
 13368  0571                     _Display:	
 13369                           
 13370                           ;DISPLAY.C: 10: PORTB=0x00;
 13371                           
 13372                           ;incstack = 0
 13373                           ; Regs used in _Display: [wreg-fsr1h+status,2+status,0+pclath]
 13374  0571  0020               	movlb	0	; select bank0
 13375  0572  018D               	clrf	13	;volatile
 13376                           
 13377                           ;DISPLAY.C: 11: if(digit<=5)
 13378  0573  3006               	movlw	6
 13379  0574  025C               	subwf	_digit,w
 13380  0575  1C03               	btfss	3,0
 13381  0576  2E25               	goto	i1l4065
 13382  0577  2E31               	goto	i1l4067
 13383  0578                     i1l433:	
 13384                           ;DISPLAY.C: 14: {
 13385                           ;DISPLAY.C: 15: case 0:
 13386                           
 13387                           ;DISPLAY.C: 12: {
 13388                           ;DISPLAY.C: 13: switch(digit)
 13389                           
 13390                           
 13391                           ;DISPLAY.C: 16: LATCbits.LATC4=0;
 13392  0578  0022               	movlb	2	; select bank2
 13393  0579  120E               	bcf	14,4	;volatile
 13394                           
 13395                           ;DISPLAY.C: 17: LATAbits.LATA6=0;
 13396  057A  130C               	bcf	12,6	;volatile
 13397                           
 13398                           ;DISPLAY.C: 18: LATAbits.LATA7=0;
 13399  057B  138C               	bcf	12,7	;volatile
 13400                           
 13401                           ;DISPLAY.C: 19: LATB=lookup_table[diswin1[digit]];
 13402  057C  0020               	movlb	0	; select bank0
 13403  057D  085C               	movf	_digit,w
 13404  057E  3E64               	addlw	_diswin1& (0+255)
 13405  057F  0086               	movwf	6
 13406  0580  3001               	movlw	1	; select bank2/3
 13407  0581  0087               	movwf	7
 13408  0582  0801               	movf	1,w
 13409  0583  00F0               	movwf	??_Display
 13410  0584  01F1               	clrf	??_Display+1
 13411  0585  35F0               	lslf	??_Display,f
 13412  0586  0DF1               	rlf	??_Display+1,f
 13413  0587  3000               	movlw	low (_lookup_table| (0+32768))
 13414  0588  0770               	addwf	??_Display,w
 13415  0589  0084               	movwf	4
 13416  058A  3098               	movlw	high (_lookup_table| (0+32768))
 13417  058B  3D71               	addwfc	??_Display+1,w
 13418  058C  0085               	movwf	5
 13419  058D  0800               	movf	0,w	;code access
 13420  058E  0022               	movlb	2	; select bank2
 13421  058F  008D               	movwf	13	;volatile
 13422                           
 13423                           ;DISPLAY.C: 20: if(TypeDP.TypeD.digitdp1==1)
 13424  0590  0020               	movlb	0	; select bank0
 13425  0591  1C6B               	btfss	_TypeDP,0
 13426  0592  2E22               	goto	i1l450
 13427  0593  2E1F               	goto	i1l4061
 13428  0594                     i1l437:	
 13429                           ;DISPLAY.C: 25: case 1:
 13430                           
 13431                           ;DISPLAY.C: 24: break;
 13432                           
 13433                           ;DISPLAY.C: 22: else
 13434                           ;DISPLAY.C: 23: LATBbits.LATB7=0;
 13435                           
 13436                           ;DISPLAY.C: 21: LATBbits.LATB7=1;
 13437                           
 13438                           
 13439                           ;DISPLAY.C: 26: LATCbits.LATC4=1;
 13440  0594  0022               	movlb	2	; select bank2
 13441  0595  160E               	bsf	14,4	;volatile
 13442                           
 13443                           ;DISPLAY.C: 27: LATAbits.LATA6=0;
 13444  0596  130C               	bcf	12,6	;volatile
 13445                           
 13446                           ;DISPLAY.C: 28: LATAbits.LATA7=0;
 13447  0597  138C               	bcf	12,7	;volatile
 13448                           
 13449                           ;DISPLAY.C: 29: LATB=lookup_table[diswin1[digit]];
 13450  0598  0020               	movlb	0	; select bank0
 13451  0599  085C               	movf	_digit,w
 13452  059A  3E64               	addlw	_diswin1& (0+255)
 13453  059B  0086               	movwf	6
 13454  059C  3001               	movlw	1	; select bank2/3
 13455  059D  0087               	movwf	7
 13456  059E  0801               	movf	1,w
 13457  059F  00F0               	movwf	??_Display
 13458  05A0  01F1               	clrf	??_Display+1
 13459  05A1  35F0               	lslf	??_Display,f
 13460  05A2  0DF1               	rlf	??_Display+1,f
 13461  05A3  3000               	movlw	low (_lookup_table| (0+32768))
 13462  05A4  0770               	addwf	??_Display,w
 13463  05A5  0084               	movwf	4
 13464  05A6  3098               	movlw	high (_lookup_table| (0+32768))
 13465  05A7  3D71               	addwfc	??_Display+1,w
 13466  05A8  0085               	movwf	5
 13467  05A9  0800               	movf	0,w	;code access
 13468  05AA  0022               	movlb	2	; select bank2
 13469  05AB  008D               	movwf	13	;volatile
 13470                           
 13471                           ;DISPLAY.C: 30: if(TypeDP.TypeD.digitdp2==1)
 13472  05AC  0020               	movlb	0	; select bank0
 13473  05AD  1CEB               	btfss	_TypeDP,1
 13474  05AE  2E22               	goto	i1l450
 13475  05AF  2E1F               	goto	i1l4061
 13476  05B0                     i1l440:	
 13477                           ;DISPLAY.C: 35: case 2:
 13478                           
 13479                           ;DISPLAY.C: 34: break;
 13480                           
 13481                           ;DISPLAY.C: 32: else
 13482                           ;DISPLAY.C: 33: LATBbits.LATB7=0;
 13483                           
 13484                           ;DISPLAY.C: 31: LATBbits.LATB7=1;
 13485                           
 13486                           
 13487                           ;DISPLAY.C: 36: LATCbits.LATC4=0;
 13488  05B0  0022               	movlb	2	; select bank2
 13489  05B1  120E               	bcf	14,4	;volatile
 13490                           
 13491                           ;DISPLAY.C: 37: LATAbits.LATA6=1;
 13492  05B2  170C               	bsf	12,6	;volatile
 13493                           
 13494                           ;DISPLAY.C: 38: LATAbits.LATA7=0;
 13495  05B3  138C               	bcf	12,7	;volatile
 13496                           
 13497                           ;DISPLAY.C: 39: LATB=lookup_table[diswin1[digit]];
 13498  05B4  0020               	movlb	0	; select bank0
 13499  05B5  085C               	movf	_digit,w
 13500  05B6  3E64               	addlw	_diswin1& (0+255)
 13501  05B7  0086               	movwf	6
 13502  05B8  3001               	movlw	1	; select bank2/3
 13503  05B9  0087               	movwf	7
 13504  05BA  0801               	movf	1,w
 13505  05BB  00F0               	movwf	??_Display
 13506  05BC  01F1               	clrf	??_Display+1
 13507  05BD  35F0               	lslf	??_Display,f
 13508  05BE  0DF1               	rlf	??_Display+1,f
 13509  05BF  3000               	movlw	low (_lookup_table| (0+32768))
 13510  05C0  0770               	addwf	??_Display,w
 13511  05C1  0084               	movwf	4
 13512  05C2  3098               	movlw	high (_lookup_table| (0+32768))
 13513  05C3  3D71               	addwfc	??_Display+1,w
 13514  05C4  0085               	movwf	5
 13515  05C5  0800               	movf	0,w	;code access
 13516  05C6  0022               	movlb	2	; select bank2
 13517  05C7  008D               	movwf	13	;volatile
 13518                           
 13519                           ;DISPLAY.C: 40: if(TypeDP.TypeD.digitdp3==1)
 13520  05C8  0020               	movlb	0	; select bank0
 13521  05C9  1D6B               	btfss	_TypeDP,2
 13522  05CA  2E22               	goto	i1l450
 13523  05CB  2E1F               	goto	i1l4061
 13524  05CC                     i1l443:	
 13525                           ;DISPLAY.C: 45: case 3:
 13526                           
 13527                           ;DISPLAY.C: 44: break;
 13528                           
 13529                           ;DISPLAY.C: 42: else
 13530                           ;DISPLAY.C: 43: LATBbits.LATB7=0;
 13531                           
 13532                           ;DISPLAY.C: 41: LATBbits.LATB7=1;
 13533                           
 13534                           
 13535                           ;DISPLAY.C: 46: LATCbits.LATC4=1;
 13536  05CC  0022               	movlb	2	; select bank2
 13537  05CD  160E               	bsf	14,4	;volatile
 13538                           
 13539                           ;DISPLAY.C: 47: LATAbits.LATA6=1;
 13540  05CE  170C               	bsf	12,6	;volatile
 13541                           
 13542                           ;DISPLAY.C: 48: LATAbits.LATA7=0;
 13543  05CF  138C               	bcf	12,7	;volatile
 13544                           
 13545                           ;DISPLAY.C: 49: LATB=lookup_table[diswin1[digit]];
 13546  05D0  0020               	movlb	0	; select bank0
 13547  05D1  085C               	movf	_digit,w
 13548  05D2  3E64               	addlw	_diswin1& (0+255)
 13549  05D3  0086               	movwf	6
 13550  05D4  3001               	movlw	1	; select bank2/3
 13551  05D5  0087               	movwf	7
 13552  05D6  0801               	movf	1,w
 13553  05D7  00F0               	movwf	??_Display
 13554  05D8  01F1               	clrf	??_Display+1
 13555  05D9  35F0               	lslf	??_Display,f
 13556  05DA  0DF1               	rlf	??_Display+1,f
 13557  05DB  3000               	movlw	low (_lookup_table| (0+32768))
 13558  05DC  0770               	addwf	??_Display,w
 13559  05DD  0084               	movwf	4
 13560  05DE  3098               	movlw	high (_lookup_table| (0+32768))
 13561  05DF  3D71               	addwfc	??_Display+1,w
 13562  05E0  0085               	movwf	5
 13563  05E1  0800               	movf	0,w	;code access
 13564  05E2  0022               	movlb	2	; select bank2
 13565  05E3  008D               	movwf	13	;volatile
 13566                           
 13567                           ;DISPLAY.C: 50: if(TypeDP.TypeD.digitdp4==1)
 13568  05E4  0020               	movlb	0	; select bank0
 13569  05E5  1DEB               	btfss	_TypeDP,3
 13570  05E6  2E22               	goto	i1l450
 13571  05E7  2E1F               	goto	i1l4061
 13572  05E8                     i1l446:	
 13573                           ;DISPLAY.C: 55: case 4:
 13574                           
 13575                           ;DISPLAY.C: 54: break;
 13576                           
 13577                           ;DISPLAY.C: 52: else
 13578                           ;DISPLAY.C: 53: LATBbits.LATB7=0;
 13579                           
 13580                           ;DISPLAY.C: 51: LATBbits.LATB7=1;
 13581                           
 13582                           
 13583                           ;DISPLAY.C: 56: LATCbits.LATC4=0;
 13584  05E8  0022               	movlb	2	; select bank2
 13585  05E9  120E               	bcf	14,4	;volatile
 13586                           
 13587                           ;DISPLAY.C: 57: LATAbits.LATA6=0;
 13588  05EA  130C               	bcf	12,6	;volatile
 13589                           
 13590                           ;DISPLAY.C: 58: LATAbits.LATA7=1;
 13591  05EB  178C               	bsf	12,7	;volatile
 13592                           
 13593                           ;DISPLAY.C: 59: LATB=lookup_table[diswin1[digit]];
 13594  05EC  0020               	movlb	0	; select bank0
 13595  05ED  085C               	movf	_digit,w
 13596  05EE  3E64               	addlw	_diswin1& (0+255)
 13597  05EF  0086               	movwf	6
 13598  05F0  3001               	movlw	1	; select bank2/3
 13599  05F1  0087               	movwf	7
 13600  05F2  0801               	movf	1,w
 13601  05F3  00F0               	movwf	??_Display
 13602  05F4  01F1               	clrf	??_Display+1
 13603  05F5  35F0               	lslf	??_Display,f
 13604  05F6  0DF1               	rlf	??_Display+1,f
 13605  05F7  3000               	movlw	low (_lookup_table| (0+32768))
 13606  05F8  0770               	addwf	??_Display,w
 13607  05F9  0084               	movwf	4
 13608  05FA  3098               	movlw	high (_lookup_table| (0+32768))
 13609  05FB  3D71               	addwfc	??_Display+1,w
 13610  05FC  0085               	movwf	5
 13611  05FD  0800               	movf	0,w	;code access
 13612  05FE  0022               	movlb	2	; select bank2
 13613  05FF  008D               	movwf	13	;volatile
 13614                           
 13615                           ;DISPLAY.C: 60: if(TypeDP.TypeD.digitdp5==1)
 13616  0600  0020               	movlb	0	; select bank0
 13617  0601  1E6B               	btfss	_TypeDP,4
 13618  0602  2E22               	goto	i1l450
 13619  0603  2E1F               	goto	i1l4061
 13620  0604                     i1l449:	
 13621                           ;DISPLAY.C: 65: case 5:
 13622                           
 13623                           ;DISPLAY.C: 64: break;
 13624                           
 13625                           ;DISPLAY.C: 62: else
 13626                           ;DISPLAY.C: 63: LATBbits.LATB7=0;
 13627                           
 13628                           ;DISPLAY.C: 61: LATBbits.LATB7=1;
 13629                           
 13630                           
 13631                           ;DISPLAY.C: 66: LATCbits.LATC4=1;
 13632  0604  0022               	movlb	2	; select bank2
 13633  0605  160E               	bsf	14,4	;volatile
 13634                           
 13635                           ;DISPLAY.C: 67: LATAbits.LATA6=0;
 13636  0606  130C               	bcf	12,6	;volatile
 13637                           
 13638                           ;DISPLAY.C: 68: LATAbits.LATA7=1;
 13639  0607  178C               	bsf	12,7	;volatile
 13640                           
 13641                           ;DISPLAY.C: 69: LATB=lookup_table[diswin1[digit]];
 13642  0608  0020               	movlb	0	; select bank0
 13643  0609  085C               	movf	_digit,w
 13644  060A  3E64               	addlw	_diswin1& (0+255)
 13645  060B  0086               	movwf	6
 13646  060C  3001               	movlw	1	; select bank2/3
 13647  060D  0087               	movwf	7
 13648  060E  0801               	movf	1,w
 13649  060F  00F0               	movwf	??_Display
 13650  0610  01F1               	clrf	??_Display+1
 13651  0611  35F0               	lslf	??_Display,f
 13652  0612  0DF1               	rlf	??_Display+1,f
 13653  0613  3000               	movlw	low (_lookup_table| (0+32768))
 13654  0614  0770               	addwf	??_Display,w
 13655  0615  0084               	movwf	4
 13656  0616  3098               	movlw	high (_lookup_table| (0+32768))
 13657  0617  3D71               	addwfc	??_Display+1,w
 13658  0618  0085               	movwf	5
 13659  0619  0800               	movf	0,w	;code access
 13660  061A  0022               	movlb	2	; select bank2
 13661  061B  008D               	movwf	13	;volatile
 13662                           
 13663                           ;DISPLAY.C: 70: if(TypeDP.TypeD.digitdp6==1)
 13664  061C  0020               	movlb	0	; select bank0
 13665  061D  1EEB               	btfss	_TypeDP,5
 13666  061E  2E22               	goto	i1l450
 13667  061F                     i1l4061:	
 13668                           
 13669                           ;DISPLAY.C: 71: LATBbits.LATB7=1;
 13670  061F  0022               	movlb	2	; select bank2
 13671  0620  178D               	bsf	13,7	;volatile
 13672  0621  2EA9               	goto	i1l4135
 13673  0622                     i1l450:	
 13674                           
 13675                           ;DISPLAY.C: 72: else
 13676                           ;DISPLAY.C: 73: LATBbits.LATB7=0;
 13677  0622  0022               	movlb	2	; select bank2
 13678  0623  138D               	bcf	13,7	;volatile
 13679                           
 13680                           ;DISPLAY.C: 77: }
 13681                           
 13682                           ;DISPLAY.C: 76: break;
 13683                           
 13684                           ;DISPLAY.C: 75: default:
 13685                           
 13686                           ;DISPLAY.C: 74: break;
 13687  0624  2EA9               	goto	i1l4135
 13688  0625                     i1l4065:	
 13689  0625  0020               	movlb	0	; select bank0
 13690  0626  085C               	movf	_digit,w
 13691                           
 13692                           ; Switch size 1, requested type "space"
 13693                           ; Number of cases is 6, Range of values is 0 to 5
 13694                           ; switch strategies available:
 13695                           ; Name         Instructions Cycles
 13696                           ; direct_byte           18     6 (fixed)
 13697                           ; simple_byte           19    10 (average)
 13698                           ; jumptable            260     6 (fixed)
 13699                           ;	Chosen strategy is direct_byte
 13700  0627  0084               	movwf	4
 13701  0628  3006               	movlw	6
 13702  0629  0204               	subwf	4,w
 13703  062A  1803               	skipnc
 13704  062B  2EA9               	goto	i1l4135
 13705  062C  3198               	movlp	high i1S5749
 13706  062D  3504               	lslf	4,w
 13707  062E  3E6E               	addlw	low i1S5749
 13708  062F  0082               	movwf	2
 13709                           
 13710                           ;DISPLAY.C: 78: }
 13711  0630  2EA9               	goto	i1l4135
 13712  0631                     i1l4067:	
 13713                           
 13714                           ;DISPLAY.C: 79: else if(digit == 6)
 13715  0631  085C               	movf	_digit,w
 13716  0632  3A06               	xorlw	6
 13717  0633  1D03               	skipz
 13718  0634  2E3C               	goto	i1l4073
 13719                           
 13720                           ;DISPLAY.C: 80: {
 13721                           ;DISPLAY.C: 81: LATCbits.LATC4=0;
 13722  0635  0022               	movlb	2	; select bank2
 13723  0636  120E               	bcf	14,4	;volatile
 13724                           
 13725                           ;DISPLAY.C: 82: LATAbits.LATA6=1;
 13726  0637  170C               	bsf	12,6	;volatile
 13727                           
 13728                           ;DISPLAY.C: 83: LATAbits.LATA7=1;
 13729  0638  178C               	bsf	12,7	;volatile
 13730                           
 13731                           ;DISPLAY.C: 85: LATB=TypeU.LEDGROUP[0];
 13732  0639  0020               	movlb	0	; select bank0
 13733  063A  0867               	movf	_TypeU,w
 13734  063B  2E47               	goto	L25
 13735  063C                     i1l4073:	
 13736                           ;DISPLAY.C: 86: }
 13737                           
 13738                           
 13739                           ;DISPLAY.C: 87: else if(digit == 7)
 13740  063C  0020               	movlb	0	; select bank0
 13741  063D  085C               	movf	_digit,w
 13742  063E  3A07               	xorlw	7
 13743  063F  1D03               	skipz
 13744  0640  2E4A               	goto	i1l4079
 13745                           
 13746                           ;DISPLAY.C: 88: {
 13747                           ;DISPLAY.C: 89: LATCbits.LATC4=1;
 13748  0641  0022               	movlb	2	; select bank2
 13749  0642  160E               	bsf	14,4	;volatile
 13750                           
 13751                           ;DISPLAY.C: 90: LATAbits.LATA6=1;
 13752  0643  170C               	bsf	12,6	;volatile
 13753                           
 13754                           ;DISPLAY.C: 91: LATAbits.LATA7=1;
 13755  0644  178C               	bsf	12,7	;volatile
 13756                           
 13757                           ;DISPLAY.C: 93: LATB=TypeU.LEDGROUP[1];
 13758  0645  0020               	movlb	0	; select bank0
 13759  0646  0868               	movf	_TypeU+1,w
 13760  0647                     L25:	
 13761  0647  0022               	movlb	2	; select bank2
 13762  0648  008D               	movwf	13	;volatile
 13763                           
 13764                           ;DISPLAY.C: 95: }
 13765  0649  2EA9               	goto	i1l4135
 13766  064A                     i1l4079:	
 13767                           
 13768                           ;DISPLAY.C: 96: else if(digit == 8)
 13769  064A  0020               	movlb	0	; select bank0
 13770  064B  085C               	movf	_digit,w
 13771  064C  3A08               	xorlw	8
 13772  064D  1D03               	skipz
 13773  064E  2EA9               	goto	i1l4135
 13774                           
 13775                           ;DISPLAY.C: 97: {
 13776                           ;DISPLAY.C: 98: TRISB=0X0F;
 13777  064F  300F               	movlw	15
 13778  0650  0021               	movlb	1	; select bank1
 13779  0651  008D               	movwf	13	;volatile
 13780                           
 13781                           ;DISPLAY.C: 99: for(i=0;i>=100;i++);
 13782  0652  0020               	movlb	0	; select bank0
 13783  0653  01DF               	clrf	_i
 13784  0654  3064               	movlw	100
 13785  0655  025F               	subwf	_i,w
 13786  0656  1C03               	btfss	3,0
 13787  0657  2E60               	goto	i1l4093
 13788  0658                     i1l4089:	
 13789  0658  3001               	movlw	1
 13790  0659  00F0               	movwf	??_Display
 13791  065A  0870               	movf	??_Display,w
 13792  065B  07DF               	addwf	_i,f
 13793  065C  3064               	movlw	100
 13794  065D  025F               	subwf	_i,w
 13795  065E  1803               	skipnc
 13796  065F  2E58               	goto	i1l4089
 13797  0660                     i1l4093:	
 13798                           
 13799                           ;DISPLAY.C: 100: portbstatus=PORTB;
 13800  0660  080D               	movf	13,w	;volatile
 13801  0661  00F0               	movwf	??_Display
 13802  0662  0870               	movf	??_Display,w
 13803  0663  00E2               	movwf	_portbstatus	;volatile
 13804                           
 13805                           ;DISPLAY.C: 101: for(i=0;i>=200;i++);
 13806  0664  01DF               	clrf	_i
 13807  0665  30C8               	movlw	200
 13808  0666  025F               	subwf	_i,w
 13809  0667  1C03               	btfss	3,0
 13810  0668  2E71               	goto	i1l4105
 13811  0669                     i1l4101:	
 13812  0669  3001               	movlw	1
 13813  066A  00F0               	movwf	??_Display
 13814  066B  0870               	movf	??_Display,w
 13815  066C  07DF               	addwf	_i,f
 13816  066D  30C8               	movlw	200
 13817  066E  025F               	subwf	_i,w
 13818  066F  1803               	skipnc
 13819  0670  2E69               	goto	i1l4101
 13820  0671                     i1l4105:	
 13821                           
 13822                           ;DISPLAY.C: 102: if(pportb==portbstatus)
 13823  0671  0022               	movlb	2	; select bank2
 13824  0672  0851               	movf	_pportb^(0+256),w	;volatile
 13825  0673  0020               	movlb	0	; select bank0
 13826  0674  0662               	xorwf	_portbstatus,w	;volatile
 13827  0675  1D03               	skipz
 13828  0676  2E9F               	goto	i1l4129
 13829                           
 13830                           ;DISPLAY.C: 103: {
 13831                           ;DISPLAY.C: 104: temp=portbstatus;
 13832  0677  0862               	movf	_portbstatus,w	;volatile
 13833  0678  00F0               	movwf	??_Display
 13834  0679  0870               	movf	??_Display,w
 13835  067A  00E5               	movwf	_temp
 13836                           
 13837                           ;DISPLAY.C: 105: temp=(temp & 0x0F);
 13838  067B  0865               	movf	_temp,w
 13839  067C  390F               	andlw	15
 13840  067D  00F0               	movwf	??_Display
 13841  067E  0870               	movf	??_Display,w
 13842  067F  00E5               	movwf	_temp
 13843                           
 13844                           ;DISPLAY.C: 106: if(temp==0x01)
 13845  0680  0865               	movf	_temp,w
 13846  0681  3A01               	xorlw	1
 13847  0682  1D03               	skipz
 13848  0683  2E86               	goto	i1l4115
 13849                           
 13850                           ;DISPLAY.C: 107: key=1;
 13851  0684  3001               	movlw	1
 13852  0685  2E9A               	goto	L28
 13853  0686                     i1l4115:	
 13854                           
 13855                           ;DISPLAY.C: 108: else if(temp==0x02)
 13856  0686  0020               	movlb	0	; select bank0
 13857  0687  0865               	movf	_temp,w
 13858  0688  3A02               	xorlw	2
 13859  0689  1D03               	skipz
 13860  068A  2E8D               	goto	i1l4119
 13861                           
 13862                           ;DISPLAY.C: 109: key=2;
 13863  068B  3002               	movlw	2
 13864  068C  2E9A               	goto	L28
 13865  068D                     i1l4119:	
 13866                           
 13867                           ;DISPLAY.C: 110: else if(temp==0x04)
 13868  068D  0020               	movlb	0	; select bank0
 13869  068E  0865               	movf	_temp,w
 13870  068F  3A04               	xorlw	4
 13871  0690  1D03               	skipz
 13872  0691  2E94               	goto	i1l4123
 13873                           
 13874                           ;DISPLAY.C: 111: key=3;
 13875  0692  3003               	movlw	3
 13876  0693  2E9A               	goto	L28
 13877  0694                     i1l4123:	
 13878                           
 13879                           ;DISPLAY.C: 112: else if(temp==0x08)
 13880  0694  0020               	movlb	0	; select bank0
 13881  0695  0865               	movf	_temp,w
 13882  0696  3A08               	xorlw	8
 13883  0697  1D03               	skipz
 13884  0698  2E9F               	goto	i1l4129
 13885                           
 13886                           ;DISPLAY.C: 113: key=4;
 13887  0699  3004               	movlw	4
 13888  069A                     L28:	
 13889  069A  00F0               	movwf	??_Display
 13890  069B  0870               	movf	??_Display,w
 13891  069C  0021               	movlb	1	; select bank1
 13892  069D  00EF               	movwf	_key^(0+128)	;volatile
 13893  069E  2EA1               	goto	i1l4131
 13894  069F                     i1l4129:	
 13895                           ;DISPLAY.C: 116: }
 13896                           
 13897                           ;DISPLAY.C: 114: else
 13898                           ;DISPLAY.C: 115: key=0;
 13899                           
 13900                           
 13901                           ;DISPLAY.C: 117: else
 13902                           ;DISPLAY.C: 118: {
 13903                           ;DISPLAY.C: 119: key=0;
 13904  069F  0021               	movlb	1	; select bank1
 13905  06A0  01EF               	clrf	_key^(0+128)	;volatile
 13906  06A1                     i1l4131:	
 13907                           
 13908                           ;DISPLAY.C: 120: }
 13909                           ;DISPLAY.C: 121: pportb=portbstatus;
 13910  06A1  0020               	movlb	0	; select bank0
 13911  06A2  0862               	movf	_portbstatus,w	;volatile
 13912  06A3  00F0               	movwf	??_Display
 13913  06A4  0870               	movf	??_Display,w
 13914  06A5  0022               	movlb	2	; select bank2
 13915  06A6  00D1               	movwf	_pportb^(0+256)	;volatile
 13916                           
 13917                           ;DISPLAY.C: 122: TRISB=0X00;
 13918  06A7  0021               	movlb	1	; select bank1
 13919  06A8  018D               	clrf	13	;volatile
 13920  06A9                     i1l4135:	
 13921                           
 13922                           ;DISPLAY.C: 123: }
 13923                           ;DISPLAY.C: 124: if(++digit >=9)
 13924  06A9  3001               	movlw	1
 13925  06AA  00F0               	movwf	??_Display
 13926  06AB  0870               	movf	??_Display,w
 13927  06AC  0020               	movlb	0	; select bank0
 13928  06AD  07DC               	addwf	_digit,f
 13929  06AE  3009               	movlw	9
 13930  06AF  025C               	subwf	_digit,w
 13931  06B0  1C03               	skipc
 13932  06B1  0008               	return
 13933                           
 13934                           ;DISPLAY.C: 125: digit=0;
 13935  06B2  01DC               	clrf	_digit
 13936  06B3  0008               	return
 13937  06B4                     __end_of_Display:	
 13938  007E                     btemp	set	126	;btemp
 13939  007E                     pic14e$flags	set	126
 13940  007E                     wtemp	set	126
 13941  007E                     wtemp0	set	126
 13942  0080                     wtemp1	set	128
 13943  0082                     wtemp2	set	130
 13944  0084                     wtemp3	set	132
 13945  0086                     wtemp4	set	134
 13946  0088                     wtemp5	set	136
 13947  007F                     wtemp6	set	127
 13948  007E                     ttemp	set	126
 13949  007E                     ttemp0	set	126
 13950  0081                     ttemp1	set	129
 13951  0084                     ttemp2	set	132
 13952  0087                     ttemp3	set	135
 13953  007F                     ttemp4	set	127
 13954  007E                     ltemp	set	126
 13955  007E                     ltemp0	set	126
 13956  0082                     ltemp1	set	130
 13957  0086                     ltemp2	set	134
 13958  0080                     ltemp3	set	128
 13959  2396                     
 13960                           	psect	swtext1
 13961  186E                     __pswtext1:	
 13962  186E                     i1S5749:	
 13963  186E  3185  2D78         	ljmp	i1l433
 13964  1870  3185  2D94         	ljmp	i1l437
 13965  1872  3185  2DB0         	ljmp	i1l440
 13966  1874  3185  2DCC         	ljmp	i1l443
 13967  1876  3185  2DE8         	ljmp	i1l446
 13968  1878  3186  2E04         	ljmp	i1l449


Data Sizes:
    Strings     0
    Constant    110
    Data        33
    BSS         320
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      80
    BANK1            80     79      80
    BANK2            80      0      80
    BANK3            80      0      79
    BANK4            80      0      68
    BANK5            80      0      24
    BANK6            80      0      73
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           38      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_Function in COMMON

    _ISR_Function->i1___lwtoft
    i1___lwtoft->i1___ftpack
    i1___fttol->i1___lwtoft
    i1___ftmul->i1___lwtoft
    i1___ftdiv->i1___lwtoft
    i1___ftadd->i1___lwtoft

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_Function in BANK0

    _ISR_Function->i1___fttol
    i1___fttol->i1___ftadd
    i1___ftadd->i1___ftmul

Critical Paths under _main in BANK1

    _main->_Adaptive_base_pid
    _transmittops->_Send_Byte
    _send_status->_Send_Byte
    _key_application->_Update_PWM
    _disp_hex_window2->___lwdiv
    _disp_hex_window1->___lwdiv
    _detect_display_error->_Update_PWM
    ___lwtoft->___ftpack
    _SCANENCODER2->_enc2_port
    _SCANENCODER1->_enc1_port
    _Adaptive_base_pid->_Update_PWM
    ___fttol->___ftmul
    ___ftmul->___ftadd
    ___ftge->___altoft
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _Update_PWM->___fttol

Critical Paths under _ISR_Function in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Function in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   38977
                                             77 BANK1      2     2      0
                  _Adaptive_base_pid
                            _Delayms
                           _PWM_init
                       _SCANENCODER1
                       _SCANENCODER2
                        _Timer0_init
                         _Update_PWM
                            ___ftmul
                            ___fttol
                           ___lwtoft
                             ___wmul
                       _capture_init
               _detect_display_error
                   _disp_hex_window1
                   _disp_hex_window2
                    _key_application
                       _portpin_init
                        _send_status
                        _system_init
                       _transmittops
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _transmittops                                         1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status                                          1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Send_Byte                                            1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _portpin_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_application                                      3     3      0    5155
                                             59 BANK1      3     3      0
                         _Update_PWM
                             ___wmul
                   _disp_hex_window2
 ---------------------------------------------------------------------------------
 (2) _disp_hex_window2                                     3     1      2    3377
                                              8 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window1                                     3     1      2    3313
                                              8 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1695
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1186
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _detect_display_error                                 1     1      0     808
                                             59 BANK1      1     1      0
                         _Update_PWM
 ---------------------------------------------------------------------------------
 (1) _capture_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2735
                                              8 BANK1      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER2                                         2     2      0     123
                                              5 BANK1      2     2      0
                          _enc2_port
 ---------------------------------------------------------------------------------
 (2) _enc2_port                                            5     5      0      94
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER1                                         2     2      0     123
                                              6 BANK1      2     2      0
                          _enc1_port
 ---------------------------------------------------------------------------------
 (2) _enc1_port                                            6     6      0      94
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delayms                                              6     4      2     286
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Adaptive_base_pid                                   18    18      0   16442
                                             59 BANK1     18    18      0
                         _Update_PWM
                            ___aldiv
                           ___altoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     860
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     802
                                             37 BANK1     14    10      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    4101
                                             21 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     392
                                             16 BANK1      9     3      6
                           ___altoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2699
                                             37 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3745
                                              8 BANK1     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    2353
                                              8 BANK1      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2087
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     504
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (2) _Update_PWM                                           8     6      2     808
                                             51 BANK1      8     6      2
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Function                                        11    11      0    4636
                                             12 COMMON     2     2      0
                                             43 BANK0      9     9      0
                            _Display
                       i1_Update_PWM
                          i1___aldiv
                          i1___ftadd
                          i1___ftdiv
                          i1___ftmul
                          i1___fttol
                         i1___lwtoft
 ---------------------------------------------------------------------------------
 (5) i1___lwtoft                                           4     1      3     621
                                              8 COMMON     4     1      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (5) i1___fttol                                           14    10      4     278
                                             29 BANK0     14    10      4
                          i1___ftadd (ARG)
                          i1___ftmul (ARG)
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftmul                                           16    10      6     951
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftdiv                                           16    10      6     853
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftadd                                           13     7      6    1413
                                             16 BANK0     13     7      6
                          i1___ftmul (ARG)
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___ftpack                                           8     3      5     521
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) i1___aldiv                                           15     7      8     352
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) i1_Update_PWM                                         8     6      2     144
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Display                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adaptive_base_pid
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___aldiv
     ___altoft
       ___ftpack
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
       ___altoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftneg
     ___fttol
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
   _Delayms
   _PWM_init
   _SCANENCODER1
     _enc1_port
   _SCANENCODER2
     _enc2_port
   _Timer0_init
   _Update_PWM
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___ftmul
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___fttol
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
     ___wmul (ARG)
   ___wmul
   _capture_init
   _detect_display_error
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
   _disp_hex_window1
     ___lwdiv
     ___lwmod
   _disp_hex_window2
     ___lwdiv
     ___lwmod
   _key_application
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _disp_hex_window2
       ___lwdiv
       ___lwmod
   _portpin_init
   _send_status
     _Send_Byte
   _system_init
   _transmittops
     _Send_Byte
   _uart_init

 _ISR_Function (ROOT)
   _Display
   i1_Update_PWM
   i1___aldiv
   i1___ftadd
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftpack (ARG)
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftdiv
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftmul
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___fttol
     i1___ftadd (ARG)
       i1___ftmul (ARG)
         i1___ftpack
         i1___lwtoft (ARG)
           i1___ftpack
       i1___ftpack (ARG)
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___lwtoft
     i1___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      44      13       85.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      18      15       30.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      49      17       91.3%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1F2      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              26      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1F2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Feb 06 17:33:42 2020

          Update_PWM@setwsduty 00D3                    _portbstatus 0062                    _updatedispf 01DE  
                 ___altoft@exp 00AE                     __CFG_CP$ON 0000                              _i 005F  
                            pc 0002                     i1___ftpack 1B66                  ___altoft@sign 00AF  
    __end_of_Adaptive_base_pid 1800                    __CFG_CPD$ON 0000                     i1___lwtoft 1914  
          ___wmul@multiplicand 00A2                   _portpin_init 1964            __end_of_system_init 18BF  
                 ___ftadd@exp1 00B4                   ___ftadd@exp2 00B3                    __CFG_LVP$ON 0000  
                 ___ftadd@sign 00B2                            l631 0955                            l720 0D8C  
                          l704 0C82                            l801 0818                            l721 0D8D  
                          l546 1764                            l722 0F98                            l811 119F  
                          l731 0EF2                            l723 0E38                            l707 0CD9  
                          l732 0F29                            l724 0DE2                            l716 0D5C  
                          l644 0A8A                            l821 11D1                            l813 11A9  
                          l815 11B3                            l647 0A7F                            l489 07DD  
                          l817 11BD                            l665 0B26                            l827 11F6  
                          l819 11C7                            l659 0B35                            l916 199C  
                          l764 07B7                            l692 0D86                            l766 07BD  
                          l686 0BBD                            l759 079F                            l696 0C10  
                          l697 0C20                   i1___ftadd@f1 0030                   i1___ftadd@f2 0033  
                          l971 1E81                            l795 18AD                            l699 0C33  
                          _PR2 001B                    _transmitonf 015A                            _One 01B0  
                          _Two 01B4                            _iii 023E                            _ijk 0122  
                          _key 00EF                            _lmn 0124                   i1___ftdiv@f1 0023  
                 i1___ftdiv@f2 0020                   i1___ftdiv@f3 002B                   __CFG_BORV$LO 0000  
                          wreg 0009                   i1___ftmul@f1 0020                   i1___ftmul@f2 0023  
                 i1___fttol@f1 003D                _key_application 06B4                 i1___aldiv@sign 0021  
                 ___ftdiv@cntr 00CF                   ___ftdiv@sign 00D4                           l1106 08FB  
                         l1083 1C10                           l1077 1BF9                           l4221 1DE2  
                         l4223 1DE6                           l4313 161E                           l4153 07EE  
                         l4217 1DDE                           l4209 1DCC                           l4225 1DEB  
                         l4331 1720                           l4315 1625                           l4155 07F9  
                         l3603 102C                           l3541 1BE5                           l3533 1BCF  
                         l4341 17A2                           l4351 17C8                           l4175 1D8F  
                         l4247 1D11                           l4511 06FE                           l3537 1BD6  
                         l4345 17B8                           l4185 1D9C                           l4257 1D1E  
                         l3731 1EDB                           l3547 1BFE                           l3539 1BE0  
                         l3803 08ED                           l4355 17E5                           l4195 1DB0  
                         l4291 1D63                           l4267 1D32                           l3571 1A0F  
                         l4507 06F4                           l5411 0AF5                           l3717 1EA2  
                         l3709 1E92                           l3549 1C06                           l3813 091F  
                         l3805 08F7                           l3901 1310                           l3637 1B5A  
                         l4293 1D67                           l3581 1A2A                           l4541 076C  
                         l4509 06F7                           l5341 0A1F                           l5333 0A13  
                         l5317 09EE                           l5309 09E0                           l5253 0963  
                         l3735 1EE9                           l3727 1ED0                           l3719 1EB0  
                         l3751 1A92                           l3823 093A                           l4287 1D5F  
                         l4279 1D4D                           l4295 1D6C                           l4631 1203  
                         l4535 075C                           l4471 081A                           l5423 0B31  
                         l3809 090D                           l3833 10F3                           l3913 134B  
                         l4617 11DC                           l3577 1A21                           l3569 1A03  
                         l3593 100B                           l4561 07AA                           l4537 0767  
                         l5521 0C47                           l5505 0C01                           l5441 0B61  
                         l5417 0B1E                           l5329 0A01                           l3763 0884  
                         l3667 1AFB                           l4619 11E4                           l3595 1017  
                         l4539 0708                           l4491 0851                           l4483 0830  
                         l5611 0D79                           l5603 0D53                           l5451 0B7B  
                         l5435 0B50                           l5363 0A77                           l3749 1A82  
                         l3773 089A                           l3861 1163                           l3853 114A  
                         l3925 1367                           l3917 1353                           l4629 1202  
                         l4549 0790                           l5461 0B8F                           l5373 0A9B  
                         l5357 0A4D                           l3791 08C7                           l3767 088B  
                         l3839 1109                           l3599 1023                           l4559 07A6  
                         l5447 0B76                           l5455 0B7E                           l3793 08D1  
                         l3785 08B4                           l3873 1A48                           l3929 136F  
                         l3953 1F92                           l3689 1996                           l4585 07C4  
                         l5529 0C5D                           l5481 0BBA                           l5465 0B9B  
                         l5393 0AC4                           l5377 0AA7                           l3795 08D6  
                         l3971 1FC2                           l4587 07C5                           l5723 0FF3  
                         l5571 0D10                           l5555 0CC3                           l5395 0AC6  
                         l5483 0BBF                           l3797 08DA                           l3877 1A5E  
                         l3981 1FE6                           l3973 1FD0                           l4589 07CC  
                         l5565 0CED                           l5477 0BB3                           l5389 0ABE  
                         l5397 0ACD                           l5717 0FE6                           l3895 12FA  
                         l3983 1FE9                           l5727 0FFC                           l5671 0EDD  
                         l5639 0E02                           l5567 0CFF                           l5495 0BDC  
                         l5673 0EDF                           l5593 0D30                           l3987 1FF7  
                         l3979 1FDD                           l5677 0EE3                           l5695 0FBD  
                         _LATB 010D                           u4215 1C01                           u5025 1370  
                         u5105 1FC3                           u4305 1A1A                           u5035 1376  
                         u4315 1A22                           u4245 1C17                           u4175 1BDB  
                         u5135 1FDE                           u4345 100E                           u4515 1EB1  
                         u4195 1BF4                           u5075 1F99                           u4435 199D  
                         u4275 1A06                           u4525 1EC5                           u4445 19A2  
                         u4365 101D                           u4535 1ED1                           u4295 1A10  
                         u4375 1024                           u4715 08C8                           u4495 1EA5  
                         u4575 1A87                           u4745 08DB                           u8025 0CD2  
                         _PIR1 0011                           u5803 1714                           u4685 08B5  
                         u4845 111B                           u5813 174A                           u4775 08EE  
                         u4855 112B                           u5495 07E3                           u4865 114B  
                         u5825 1799                           u4875 115A                           u4955 131C  
                         u5835 17AC                           u4885 1164                           u4965 132C  
                         u4985 1354                           u7705 0B07                           u4995 135A  
                         u7575 0A5F                           u7925 0BEE                           u7935 0BFA  
                         u7955 0C0B                           u7995 0C7B                           _TMR0 0015  
                         _OneH 012D                           _OneL 012E                   __CFG_WRT$OFF 0000  
                         _TwoH 012F                           _TwoL 0130                   _transmittops 0808  
                   _Actual_amp 01E3                           _old1 01BE                           _old2 01C0  
                         _new1 0054                           _new2 0056                           _main 0952  
                 ___ftpack@arg 00A0                     _Actual_vtg 01E5                   ___ftpack@exp 00A3  
                         _tans 0157                           _temp 0065                   i1___lwtoft@c 0078  
                         fsr0h 0005                           fsr1h 0007                           fsr0l 0004  
                         indf0 0000                           indf1 0001                           fsr1l 0006  
                         btemp 007E                  i1___ftdiv@exp 002E                           ltemp 007E  
                         start 04EC                           ttemp 007E                           wtemp 007E  
                __CFG_IESO$OFF 0000                __end_of_Delayms 07FE       disp_hex_window1@hex_data 00A8  
       ??_detect_display_error 00DB                  __CFG_MCLRE$ON 0000                   ___ftmul@cntr 00C3  
              __end_of_Display 06B4                   ___ftmul@sign 00C4                  i1___ftmul@exp 002A  
     disp_hex_window2@hex_data 00A8                   ___fttol@exp1 00D2                   ___fttol@lval 00CE  
                __CFG_PLLEN$ON 0000                   _torchstatus1 0158                   _torchstatus2 0159  
      i1___ftmul@f3_as_product 002B             enc2_port@portvalue 00A3                __end_of___aldiv 1EF2  
                        ?_main 0070                __end_of___ftadd 0952                  __CFG_WDTE$OFF 0000  
              __end_of___ftdiv 1185                __end_of___ftneg 18AB                __end_of___ftmul 1397  
                        _T1CON 0018                __end_of___fttol 2000                __end_of___lwdiv 1A31  
                        i1l440 05B0                          i1l433 0578                __end_of___lwmod 1033  
                        i1l450 0622                          i1l443 05CC                          i1l611 0373  
                        i1l437 0594                          i1l621 0402                          i1l446 05E8  
                        i1l623 041F                          i1l624 0492                          i1l560 0033  
                        i1l449 0604                          i1l625 04C1                          i1l627 04CA  
                        i1l580 00DE                          i1l584 04E7                          i1l599 02EC  
                        i1l971 1DFF                          _RCREG 0199                  ?_SCANENCODER1 0070  
                ?_SCANENCODER2 0070                          _TMR1H 0017                          _TMR1L 0016  
                        _SPBRG 019B                          _PORTA 000C                          _PORTB 000D  
                        _PORTC 000E                 i1___ftadd@exp1 003C                 i1___ftadd@exp2 003B  
                        _TORCH 016C                          _TRISA 008C                          _TRISB 008D  
                        _TRISC 008E                          _TXREG 019A                 i1___ftadd@sign 003A  
                        _TXSTA 019E                          _Count 012C                     _Hi_setppwm 01AC  
               __CFG_FCMEN$OFF 0000                   _wfstatusbyte 01DF                          _TypeU 0067  
                   _Displayarr 1858                          _iTest 023C                          _delay 022E  
                        _digit 005C           __end_of_capture_init 1914                          _pfreq 0161  
                ___ftpack@sign 00A4                          _txonf 01DD                 __CFG_BOREN$OFF 0000  
                        ltemp0 007E                          ltemp1 0082                          ltemp2 0086  
                        ltemp3 0080                 i1___ftdiv@cntr 002A                 i1___ftdiv@sign 002F  
             __end_of_PWM_init 1993                          ttemp0 007E                          ttemp1 0081  
                        ttemp2 0084                          ttemp3 0087                          ttemp4 007F  
                        status 0003             __size_ofi1___aldiv 0082                          wtemp0 007E  
                        wtemp1 0080                          wtemp2 0082                          wtemp3 0084  
                        wtemp4 0086                          wtemp5 0088                          wtemp6 007F  
           __size_ofi1___ftadd 00F6             __size_ofi1___ftdiv 00A9             __size_ofi1___ftmul 00B4  
           __size_ofi1___fttol 0087                 i1___ftpack@arg 0070                 i1___ftpack@exp 0073  
              __initialization 04EE                    _system_init 18B5                   __end_of_main 1000  
        _universal_error_latch 015C                    ?i1___ftpack 0070                 i1___ftmul@cntr 002E  
               i1___ftmul@sign 002F     __size_of_Adaptive_base_pid 0373                 __CFG_LPBOR$OFF 0000  
                  ?i1___lwtoft 0078                 i1___fttol@exp1 004A                 i1___fttol@lval 0046  
                       ??_main 00ED                  ___fttol@sign1 00CD        __end_of_key_application 07D6  
               ??_SCANENCODER1 00A6                 ??_SCANENCODER2 00A5                     _Lo_setppwm 01AE  
                _count_transms 022A               __end_of___altoft 1AAA                         i1S5749 186E  
                       _CCPR2H 0299                         _CCPR1L 0291                         _CCPR2L 0298  
                       _ANSELA 018C                         _ANSELB 018D               __end_of___ftpack 1C27  
                 _adaptivepidf 0131                         i1l1106 1436                         i1l1083 1BAF  
                       i1l1077 1B98                         i1l4001 1B7F                         i1l4011 1BA5  
                       i1l4003 1B84                         i1l4101 0669                         i1l4105 0671  
                       i1l4009 1B9D                         i1l4123 0694                         i1l4131 06A1  
                       i1l4115 0686                         i1l4061 061F                         i1l4119 068D  
                       i1l4135 06A9                         i1l5023 00E8                         i1l5015 00CD  
                       i1l5007 00B3                         i1l4129 069F                         i1l4073 063C  
                       i1l4065 0625                         i1l5113 02D1                         i1l5041 012C  
                       i1l5033 0108                         i1l5025 00EF                         i1l4067 0631  
                       i1l5115 02D3                         i1l5019 00E0                         i1l4093 0660  
                       i1l5221 03E8                         i1l5029 00FC                         i1l4079 064A  
                       i1l5215 03CB                         i1l5207 03BB                         i1l5151 031C  
                       i1l5127 02F2                         i1l4089 0658                         i1l5241 04C8  
                       i1l5137 0307                         i1l5227 0404                         i1l5181 0385  
                       i1l5085 0244                         i1l5247 04DD                         i1l5159 033B  
                       i1l5095 02AE                         i1l4713 13C6                         i1l5089 024A  
                       i1l4731 13EF                         i1l5195 0392                         i1l5099 02B4  
                       i1l4741 1411                         i1l4709 13BF                         i1l4821 1246  
                       i1l4901 1F62                         i1l4671 1E10                         i1l4751 1432  
                       i1l4743 1415                         i1l4719 13D5                         i1l4807 10BA  
                       i1l4681 1E2E                         i1l4737 1402                         i1l4905 1F70  
                       i1l4755 1448                         i1l4739 140C                         i1l4851 12B3  
                       i1l4843 129F                         i1l4827 125C                         i1l4693 1E59  
                       i1l4749 1428                         i1l4679 1E20                         i1l4759 145A  
                       i1l4855 12BB                         i1l4839 1297                         i1l4871 1F0B  
                       i1l4943 0037                         i1l4697 1E67                         i1l4689 1E4E  
                       i1l4769 1475                         i1l4785 1060                         i1l3995 1B6E  
                       i1l4779 104A                         i1l4891 1F49                         i1l4955 0054  
                       i1l4973 0065                   ?_send_status 0070                         i1l3999 1B75  
                       i1l4799 10A1                         i1l4983 0080                         i1l4991 0097  
                       i1l4897 1F56                         i1l4889 1F3B                         i1l4899 1F5F  
                       i1l4987 0092                         i1l4979 0077                         i1l4997 00A2  
                       i1l4989 0094                         u520_25 1B93               __end_of___lwtoft 194F  
                       u522_25 1BA0                         u525_25 1BB6                         u622_25 1E23  
                       u518_25 1B7A                         u702_25 014B                      ??_Delayms 00A2  
                       u703_25 0168                         u624_25 1E2F                         u625_25 1E43  
                       u641_25 1403                         u705_25 01E0                         u626_25 1E4F  
                       u644_25 1416                         u740_25 0466                         u725_25 034E  
                       u638_25 13F0                         u654_25 1072                         u670_25 12C2  
                       u662_25 1268                         u647_25 1429                         u655_25 1082  
                       u663_25 1278                         u656_25 10A2                         u657_25 10B1  
                       u665_25 12A0                         u673_25 1F12                         u737_25 0412  
                       u658_25 10BB                         u666_25 12A6                         u738_25 042C  
                       u739_25 0449                         u676_25 1F3C                         u669_25 12BC  
                       u679_25 1F57                      ??_Display 0070                 __CFG_PWRTE$OFF 0000  
                ??_Timer0_init 00A0                         _TypeDP 006B                         ___ftge 1A31  
                       _Tx_ptr 01D2                      ??___aldiv 00A8             __size_of_Send_Byte 000A  
                       ___wmul 1993              i1Update_PWM@Temp1 0074                      ??___ftadd 00AE  
               __CFG_STVREN$ON 0000                      ??___ftdiv 00CB                      ??___ftneg 00A3  
                    ??___ftmul 00BB                      ??___fttol 00C9                         _encod1 005D  
                       _encod2 005E                         _chksum 0135                      ??___lwdiv 00A4  
                    ??___lwmod 00A4                         _arrptr 0132                         _error4 01D6  
                       _error8 013E                         _erroru 015F                         _pcount 014A  
                       _value1 0244                         _value2 0246                         _value3 0248  
                       _pportb 0151                         _rxdata 0063              __end_ofi1___aldiv 1E70  
        ___ftmul@f3_as_product 00C0              __end_ofi1___ftadd 148D              __end_ofi1___ftdiv 10DC  
            __end_ofi1___ftmul 12E3              __end_ofi1___fttol 1F79                     _Update_PWM 19D3  
               _controller_out 0224            __size_ofi1___ftpack 0060                 _wfspeedchangef 016F  
      __end_of__initialization 056D                     ___altoft@c 00A8            __size_ofi1___lwtoft 0013  
                   ___ftadd@f1 00A8                     ___ftadd@f2 00AB                     ___ftge@ff1 00B0  
                   ___ftge@ff2 00B3                i1___ftpack@sign 0074                     ___ftdiv@f1 00C8  
                   ___ftdiv@f2 00C5                     ___ftdiv@f3 00D0                     ___ftneg@f1 00A0  
    __size_of_disp_hex_window1 0064      __size_of_disp_hex_window2 0066                     ___ftmul@f1 00B5  
                   ___ftmul@f2 00B8                     ___fttol@f1 00C5             __size_of_enc1_port 005F  
           __size_of_enc2_port 005D                 __pcstackCOMMON 0070              _ISR_Function$1183 007C  
                 __pidataBANK0 07FE                   __pidataBANK1 07FF                   __pidataBANK2 18D7  
                 __pidataBANK3 18E3                   __pidataBANK4 0804            __end_of_Timer0_init 1903  
                   ___lwtoft@c 00A8                   _capintervalf 01D3               ?_key_application 0070  
        __size_of_capture_init 0011                      ?_PWM_init 0070                 _OPTION_REGbits 0095  
              i1___fttol@sign1 0045              __end_of_Send_Byte 18B5              i1___aldiv@divisor 0070  
            i1___aldiv@counter 0020                     __pbssBANK0 0054                     __pbssBANK2 0120  
                   __pbssBANK3 01A0                     __pbssBANK4 0220                     __pbssBANK5 02A0  
                   __pbssBANK6 0320                __CFG_VCAPEN$OFF 0000                  ?_ISR_Function 0070  
         __end_of_SCANENCODER1 1DEE           __end_of_SCANENCODER2 1D6F                     __pmaintext 0952  
                      ?___ftge 00B0                        ?___wmul 00A0                   _capture_init 1903  
                   __pintentry 0004                      ?___altoft 00A8                      ?___ftpack 00A0  
           SCANENCODER1@result 00A7             SCANENCODER2@result 00A6                      ?___lwtoft 00A8  
                   ??_PWM_init 00A0             __size_of_uart_init 0013                    ?_Update_PWM 00D3  
                   _creepspeed 022C              __end_of_enc1_port 1B66              __end_of_enc2_port 1B07  
                   _closeloopf 0136                     _displayonf 01ED                     _avgpperiod 015D  
                      _Delayms 07D6                 ??_ISR_Function 004B                        _Display 0571  
         __size_of_send_status 0015                     _cyclestrtf 013C                        _cEditfg 0133  
                  _Timer0_init 18F2                   ?_system_init 0070                     _pidParams2 2396  
                      ___aldiv 1E70                __size_of___ftge 003C  __size_of_detect_display_error 00AA  
                 ??i1___ftpack 0075                        ___ftadd 085C                        ___ftdiv 10DC  
                      ___ftneg 18A2                __size_of___wmul 001E                        ___ftmul 12E3  
                      ___fttol 1F79                        ___lwdiv 19FA                        ___lwmod 1004  
                 ??i1___lwtoft 007B                     ??___altoft 00AC                     _read_enc1f 0152  
                   ??___ftpack 00A5                        _delinch 01B8                        _gapfreq 023A  
                      __ptext1 1927                        __ptext2 0808                        __ptext3 18B5  
                      __ptext4 194F                        __ptext5 18AB                        __ptext6 1964  
                      __ptext7 06B4                        __ptext8 1C8B                        __ptext9 1C27  
                   _maxfmspeed 01E7                     ??___lwtoft 00AB                        _diswin1 0164  
                      _inchcnt 006C                     _parclength 0262                      _T2CONbits 001C  
                      _rec_arr 02A0                        _plus111 014B               ___aldiv@dividend 00A4  
                      _plus222 014C                        _onesecf 0061                     _minfmspeed 01E9  
                      _pperiod 01C2                        _prevkey 016E                        clrloop0 18CC  
         end_of_initialization 056D                     _minuspara1 0149                     _minuspara2 0060  
           __end_ofi1___ftpack 1BC6                        init_ram 18BF                        initloop 18C0  
           __end_ofi1___lwtoft 1927                     _kpressread 0142              Update_PWM@Dutycnt 00D9  
            __end_of_uart_init 193A               _disp_hex_window1 1C27               _disp_hex_window2 1C8B  
       _Adaptive_base_pid$1776 00E4         _Adaptive_base_pid$1777 00E7         _Adaptive_base_pid$1778 00EA  
          __size_of_Update_PWM 0027          i1Update_PWM@setwsduty 0070                   _crater_speed 013A  
                    _RCSTAbits 019D               ___aldiv@quotient 00AB                   __pstringtext 1800  
                   _setcurrent 0128                      _PORTAbits 000C                    _Total_Count 01B2  
                    _PORTCbits 000E                     _pluscount1 014D                     _pluscount2 014E  
             __CFG_FOSC$INTOSC 0000                     _setvoltage 0058                      _TRISAbits 008C  
                    _TRISCbits 008E                  _cWf2t4tmodefg 0134                      i1___aldiv 1DEE  
                    i1___ftadd 1397                      i1___ftdiv 1033                      i1___ftmul 122F  
                    i1___fttol 1EF2                     _softstartf 01DB          __size_of_SCANENCODER1 007F  
        __size_of_SCANENCODER2 007E                    _CCP1CONbits 0293                    ___ftdiv@exp 00D3  
                   _statusptr1 012A                    _CCP2CONbits 029A                      _TXSTAbits 019E  
                   _pstowfstru 024A                  ?i1_Update_PWM 0070                _newsetwirespeed 0069  
                  ___ftmul@exp 00BF             enc1_port@portvalue 00A4             __end_of_Displayarr 186E  
               __end_of___ftge 1A6D                 __end_of___wmul 19B1                    _BAUDCTLbits 019F  
                ?_portpin_init 0070           __end_of_ISR_Function 04EC                   _SCANENCODER1 1D6F  
                 _SCANENCODER2 1CF1            start_initialization 04EE              __size_of_PWM_init 0019  
                   ?i1___aldiv 0070                     ?i1___ftadd 0030                     ?i1___ftdiv 0020  
                   ?i1___ftmul 0020                     ?i1___fttol 003D                  ?_transmittops 0070  
             _comm_error_count 0137                      _Send_Byte 18AB                 ??i1_Update_PWM 0072  
                 _fixintervalf 01D9                  _rel_wirespeed 01CE           __end_of_lookup_table 1858  
                     ??___ftge 00B6                       ??___wmul 00A4                    __pdataBANK0 006F  
                  __pdataBANK1 00EF                    __pdataBANK2 0164                    __pdataBANK3 01E0  
                  __pdataBANK4 0260           __size_of_system_init 000A                 ??_portpin_init 00A0  
           i1___aldiv@dividend 0074                Update_PWM@Temp1 00D7                      _Tsampling 01E0  
              _scaled_baseval2 0126              __size_of___altoft 003D                   Delayms@delay 00A0  
            __size_of___ftpack 0061                   ??_Update_PWM 00D5                    __pbssBIGRAM 2396  
                    ___latbits 0002        key_application@keypress 00DD              __size_of___lwtoft 0015  
                __pcstackBANK0 0020                  __pcstackBANK1 00A0       __size_of_key_application 0122  
               ??_transmittops 00A1                      _enc1_port 1B07                       ?_Delayms 00A0  
                    _enc2_port 1AAA             i1___aldiv@quotient 0022                     ?_Send_Byte 0070  
                     ?_Display 0070               ___lwdiv@dividend 00A2                   ?_Timer0_init 0070  
           __end_of_Update_PWM 19FA                       ?___aldiv 00A0                      _disp1term 0230  
                    _disp2term 0232                      _disp3term 0234                      _disp4term 0236  
                     ?___ftadd 00A8                       ?___ftdiv 00C5               _prevsetwirespeed 01C8  
                     ?___ftneg 00A0                       ?___ftmul 00B5                       ?___fttol 00C5  
                     ?___lwdiv 00A0                       ?___lwmod 00A0                      __pswtext1 186E  
                    _mili1_100 0143                      _mili2_100 0144                      _count_1ms 01B6  
                    _count_2ms 0139       __end_of_disp_hex_window1 1C8B       __end_of_disp_hex_window2 1CF1  
                    _count_pid 01D5                      _inchkeyon 01DA                    ??i1___aldiv 0078  
 __end_of_detect_display_error 122F                    ??i1___ftadd 0036                    ??i1___ftdiv 0026  
                 _integral_old 01A9                   _integral_new 01A6                    ??i1___ftmul 0026  
                  ??i1___fttol 0041               ___lwdiv@quotient 00A5                   _scalefactor2 01EB  
                    _error_old 01A3                      _error_new 01A0                  ??_send_status 00A1  
                    _recchksum 0153                     ?_enc1_port 0070                ___aldiv@divisor 00A0  
                   ?_enc2_port 0070                ___aldiv@counter 00A9                 ___wmul@product 00A4  
                     _LATAbits 010C                       _LATBbits 010D                       _LATCbits 010E  
                    _minoutmax 0227                      clear_ram0 18CB                      _recstatus 01CC  
                     _PIE1bits 0091                    _creep_speed 013B                       _PIE2bits 0092  
                    _prevTORCH 016D                       _PIR1bits 0011                       _PIR2bits 0012  
              _universal_error 015B                    _closeloop1f 01D4                      _uart_init 1927  
        __size_of_ISR_Function 04E8                      _pluspara1 014F                      _pluspara2 0150  
                    _togglepin 01EE              ___wmul@multiplier 00A0                       _PWM_init 197A  
                  _dispupdatef 006F                      _startptr1 0064                      _psstatusu 006D  
         __end_ofi1_Update_PWM 19D3                      _wfstatusu 006E                    _mahesh_test 0260  
                  _count_1msec 0138           __end_of_portpin_init 197A                       _Fltpfreq 0120  
                  ??_Send_Byte 00A0               __size_of_Delayms 0028                   _ISR_Function 0004  
             __size_of_Display 0143              ??_key_application 00DB            __end_of_send_status 1964  
                  _firstpulse1 013F                    _firstpulse2 0140                   _secondpulse1 0154  
                 _secondpulse2 0155                     ?_uart_init 0070               __size_of___aldiv 0082  
             __size_of___ftadd 00F6               __size_of___ftdiv 00A9               __size_of___ftneg 0009  
                     ___altoft 1A6D               __size_of___ftmul 00B4               __size_of___fttol 0087  
             __size_of___lwdiv 0037               __size_of___lwmod 002F           __end_of_transmittops 085C  
                     ___ftpack 1BC6                       ___lwtoft 193A            i1Update_PWM@Dutycnt 0076  
                 _send_statusf 0156                    _error_code1 01D7                    _error_code2 01D8  
                     _delinch1 01BA                   _lookup_table 1800                ___lwdiv@divisor 00A0  
              ___lwdiv@counter 00A7                       _gaschkfg 0141                       __ptext10 1004  
                     __ptext11 19FA                       __ptext20 197A                       __ptext12 1185  
                     __ptext21 07D6                       __ptext13 1903                       __ptext30 1A6D  
                     __ptext22 148D                       __ptext14 193A                       __ptext31 1BC6  
                     __ptext23 1993                       __ptext15 18F2                       __ptext40 1B66  
                     __ptext32 1E70                       __ptext24 1F79                       __ptext16 1CF1  
                     __ptext41 1DEE                       __ptext33 19D3                       __ptext25 18A2  
                     __ptext17 1AAA                       __ptext42 19B1                       __ptext26 12E3  
                     __ptext18 1D6F                       __ptext43 0571                       __ptext35 1914  
                     __ptext27 1A31                       __ptext19 1B07                       __ptext36 1EF2  
                     __ptext28 10DC                       __ptext37 122F                       __ptext29 085C  
                     __ptext38 1033                       __ptext39 1397                       _enccount 013D  
                     _commandu 0163                       _igascntr 01BC             Send_Byte@transbyte 00A0  
                  ??_enc1_port 00A0                    ??_enc2_port 00A0                  __size_of_main 06AE  
                     _minus111 0145                       _minus222 0146                       _setpfreq 01D0  
                ?_capture_init 0070                       _weldmode 0066           _detect_display_error 1185  
         __size_of_Timer0_init 0011                       _torchonf 01DC                   _prevFltpfreq 0242  
                  _OSCTUNEbits 0098                     _INTCONbits 000B                    _PID_sParams 0320  
                  _minuscount1 0147                    _minuscount2 0148                    _recpsstatus 01CA  
               _prevsetcurrent 01C4                    pic14e$flags 007E                     Delayms@xxx 00A2  
                   Delayms@yyy 00A4                       intlevel1 0000                    _send_status 194F  
             ___lwmod@dividend 00A2                 _prevsetvoltage 01C6              __CFG_CLKOUTEN$OFF 0000  
                   _OSCCONbits 0099                    _openloopcnt 0240                  ??_system_init 00A0  
               ??_capture_init 00A0          ?_detect_display_error 0070                    ??_uart_init 00A0  
        __size_ofi1_Update_PWM 0022              _Adaptive_base_pid 148D                  _disparclength 0238  
              ___lwmod@divisor 00A0             ?_Adaptive_base_pid 0070                ___lwmod@counter 00A5  
            ?_disp_hex_window1 00A8              ?_disp_hex_window2 00A8                   ___aldiv@sign 00AA  
        __size_of_portpin_init 0016             ??_disp_hex_window1 00AA             ??_disp_hex_window2 00AA  
                 _Total_Period 0220                   _setwirespeed 005A            ??_Adaptive_base_pid 00DB  
                 i1_Update_PWM 19B1          __size_of_transmittops 0054  
