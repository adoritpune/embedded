

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Mar 13 12:39:49 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	idataBANK4,global,class=CODE,delta=2
     9                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	text42,local,class=CODE,merge=1,delta=2
    70                           	psect	swtext1,local,class=CONST,delta=2
    71                           	dabs	1,0x620,48
    72                           	dabs	1,0x5CA,38
    73                           	dabs	1,0x239A,0,_pidParams2
    74                           	dabs	1,0x7E,2
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  011A                     	;# 
   137  011B                     	;# 
   138  011C                     	;# 
   139  011D                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011E                     	;# 
   143  011F                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0191                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0197                     	;# 
   156  0199                     	;# 
   157  0199                     	;# 
   158  0199                     	;# 
   159  019A                     	;# 
   160  019A                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019D                     	;# 
   171  019D                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019E                     	;# 
   175  019E                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  020C                     	;# 
   182  020D                     	;# 
   183  020E                     	;# 
   184  0210                     	;# 
   185  0211                     	;# 
   186  0211                     	;# 
   187  0212                     	;# 
   188  0212                     	;# 
   189  0213                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0214                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0216                     	;# 
   198  0216                     	;# 
   199  0217                     	;# 
   200  0217                     	;# 
   201  028C                     	;# 
   202  028D                     	;# 
   203  028E                     	;# 
   204  0291                     	;# 
   205  0291                     	;# 
   206  0292                     	;# 
   207  0293                     	;# 
   208  0298                     	;# 
   209  0298                     	;# 
   210  0299                     	;# 
   211  029A                     	;# 
   212  030C                     	;# 
   213  030D                     	;# 
   214  030E                     	;# 
   215  0311                     	;# 
   216  0311                     	;# 
   217  0312                     	;# 
   218  0313                     	;# 
   219  038C                     	;# 
   220  038D                     	;# 
   221  038E                     	;# 
   222  0390                     	;# 
   223  0391                     	;# 
   224  0392                     	;# 
   225  0393                     	;# 
   226  0394                     	;# 
   227  0395                     	;# 
   228  0396                     	;# 
   229  0397                     	;# 
   230  0398                     	;# 
   231  0399                     	;# 
   232  039D                     	;# 
   233  039E                     	;# 
   234  039F                     	;# 
   235  0511                     	;# 
   236  0513                     	;# 
   237  051A                     	;# 
   238  0811                     	;# 
   239  0812                     	;# 
   240  0813                     	;# 
   241  0814                     	;# 
   242  0815                     	;# 
   243  0816                     	;# 
   244  0817                     	;# 
   245  0818                     	;# 
   246  0819                     	;# 
   247  081A                     	;# 
   248  081B                     	;# 
   249  081C                     	;# 
   250  081D                     	;# 
   251  081E                     	;# 
   252  081F                     	;# 
   253  0820                     	;# 
   254  0821                     	;# 
   255  0821                     	;# 
   256  0822                     	;# 
   257  0823                     	;# 
   258  0823                     	;# 
   259  0824                     	;# 
   260  0825                     	;# 
   261  0825                     	;# 
   262  0826                     	;# 
   263  0827                     	;# 
   264  0827                     	;# 
   265  0828                     	;# 
   266  0829                     	;# 
   267  082A                     	;# 
   268  082B                     	;# 
   269  082C                     	;# 
   270  082D                     	;# 
   271  082E                     	;# 
   272  082F                     	;# 
   273  0831                     	;# 
   274  0832                     	;# 
   275  0833                     	;# 
   276  0834                     	;# 
   277  0835                     	;# 
   278  0836                     	;# 
   279  0837                     	;# 
   280  0838                     	;# 
   281  0839                     	;# 
   282  083A                     	;# 
   283  083B                     	;# 
   284  083C                     	;# 
   285  083D                     	;# 
   286  083E                     	;# 
   287  083F                     	;# 
   288  0840                     	;# 
   289  0841                     	;# 
   290  0841                     	;# 
   291  0842                     	;# 
   292  0843                     	;# 
   293  0843                     	;# 
   294  0844                     	;# 
   295  0845                     	;# 
   296  0845                     	;# 
   297  0846                     	;# 
   298  0847                     	;# 
   299  0847                     	;# 
   300  0848                     	;# 
   301  0849                     	;# 
   302  084A                     	;# 
   303  084B                     	;# 
   304  084C                     	;# 
   305  084D                     	;# 
   306  084E                     	;# 
   307  084F                     	;# 
   308  0851                     	;# 
   309  0852                     	;# 
   310  0853                     	;# 
   311  0854                     	;# 
   312  0855                     	;# 
   313  0856                     	;# 
   314  0857                     	;# 
   315  0858                     	;# 
   316  0859                     	;# 
   317  085A                     	;# 
   318  085B                     	;# 
   319  085C                     	;# 
   320  085D                     	;# 
   321  085E                     	;# 
   322  085F                     	;# 
   323  0860                     	;# 
   324  0861                     	;# 
   325  0861                     	;# 
   326  0862                     	;# 
   327  0863                     	;# 
   328  0863                     	;# 
   329  0864                     	;# 
   330  0865                     	;# 
   331  0865                     	;# 
   332  0866                     	;# 
   333  0867                     	;# 
   334  0867                     	;# 
   335  0868                     	;# 
   336  0869                     	;# 
   337  086A                     	;# 
   338  086B                     	;# 
   339  086C                     	;# 
   340  086D                     	;# 
   341  086E                     	;# 
   342  086F                     	;# 
   343  0FE4                     	;# 
   344  0FE5                     	;# 
   345  0FE6                     	;# 
   346  0FE7                     	;# 
   347  0FE8                     	;# 
   348  0FE9                     	;# 
   349  0FEA                     	;# 
   350  0FEB                     	;# 
   351  0FED                     	;# 
   352  0FEE                     	;# 
   353  0FEF                     	;_pidParams2
   354                           
   355                           	psect	idataBANK0
   356  07FC                     __pidataBANK0:	
   357                           
   358                           ;initializer for _dispupdatef
   359  07FC  3401               	retlw	1
   360                           
   361                           	psect	idataBANK1
   362  07FD                     __pidataBANK1:	
   363                           
   364                           ;initializer for _key
   365  07FD  3458               	retlw	88
   366                           
   367                           	psect	idataBANK2
   368  18C6                     __pidataBANK2:	
   369                           
   370                           ;initializer for _diswin1
   371  18C6  3430               	retlw	48
   372  18C7  3430               	retlw	48
   373  18C8  3430               	retlw	48
   374  18C9  3430               	retlw	48
   375  18CA  3430               	retlw	48
   376  18CB  3430               	retlw	48
   377  18CC  3430               	retlw	48
   378  18CD  3430               	retlw	48
   379                           
   380                           ;initializer for _TORCH
   381  18CE  3458               	retlw	88
   382                           
   383                           ;initializer for _prevTORCH
   384  18CF  34FF               	retlw	255
   385                           
   386                           ;initializer for _prevkey
   387  18D0  345A               	retlw	90
   388                           
   389                           ;initializer for _wfspeedchangef
   390  18D1  3401               	retlw	1
   391                           
   392                           	psect	idataBANK3
   393  18F4                     __pidataBANK3:	
   394                           
   395                           ;initializer for _Tsampling
   396  18F4  3400               	retlw	0
   397  18F5  3480               	retlw	128
   398  18F6  343F               	retlw	63
   399                           
   400                           ;initializer for _Actual_amp
   401  18F7  34FF               	retlw	255
   402  18F8  34FF               	retlw	255
   403                           
   404                           ;initializer for _Actual_vtg
   405  18F9  34FF               	retlw	255
   406  18FA  34FF               	retlw	255
   407                           
   408                           ;initializer for _maxfmspeed
   409  18FB  3420               	retlw	32
   410  18FC  3403               	retlw	3
   411                           
   412                           ;initializer for _minfmspeed
   413  18FD  3432               	retlw	50
   414  18FE  3400               	retlw	0
   415                           
   416                           ;initializer for _parclength
   417  18FF  34FF               	retlw	255
   418  1900  34FF               	retlw	255
   419                           
   420                           ;initializer for _scalefactor2
   421  1901  3447               	retlw	71
   422  1902  3400               	retlw	0
   423                           
   424                           ;initializer for _displayonf
   425  1903  3401               	retlw	1
   426                           
   427                           ;initializer for _togglepin
   428  1904  3401               	retlw	1
   429                           
   430                           	psect	idataBANK4
   431  07FA                     __pidataBANK4:	
   432                           
   433                           ;initializer for _mahesh_test
   434  07FA  3432               	retlw	50
   435  07FB  3400               	retlw	0
   436                           
   437                           	psect	stringtext
   438  1800                     __pstringtext:	
   439  1800                     _lookup_table:	
   440  1800  343F               	retlw	63
   441  1801  3400               	retlw	0
   442  1802  3406               	retlw	6
   443  1803  3400               	retlw	0
   444  1804  345B               	retlw	91
   445  1805  3400               	retlw	0
   446  1806  344F               	retlw	79
   447  1807  3400               	retlw	0
   448  1808  3466               	retlw	102
   449  1809  3400               	retlw	0
   450  180A  346D               	retlw	109
   451  180B  3400               	retlw	0
   452  180C  347D               	retlw	125
   453  180D  3400               	retlw	0
   454  180E  3407               	retlw	7
   455  180F  3400               	retlw	0
   456  1810  347F               	retlw	127
   457  1811  3400               	retlw	0
   458  1812  346F               	retlw	111
   459  1813  3400               	retlw	0
   460  1814  3480               	retlw	128
   461  1815  3400               	retlw	0
   462  1816  3477               	retlw	119
   463  1817  3400               	retlw	0
   464  1818  347C               	retlw	124
   465  1819  3400               	retlw	0
   466  181A  3439               	retlw	57
   467  181B  3400               	retlw	0
   468  181C  345E               	retlw	94
   469  181D  3400               	retlw	0
   470  181E  3479               	retlw	121
   471  181F  3400               	retlw	0
   472  1820  3471               	retlw	113
   473  1821  3400               	retlw	0
   474  1822  343D               	retlw	61
   475  1823  3400               	retlw	0
   476  1824  3476               	retlw	118
   477  1825  3400               	retlw	0
   478  1826  3406               	retlw	6
   479  1827  3400               	retlw	0
   480  1828  341E               	retlw	30
   481  1829  3400               	retlw	0
   482  182A  3470               	retlw	112
   483  182B  3400               	retlw	0
   484  182C  3438               	retlw	56
   485  182D  3400               	retlw	0
   486  182E  3455               	retlw	85
   487  182F  3400               	retlw	0
   488  1830  3454               	retlw	84
   489  1831  3400               	retlw	0
   490  1832  343F               	retlw	63
   491  1833  3400               	retlw	0
   492  1834  3473               	retlw	115
   493  1835  3400               	retlw	0
   494  1836  3467               	retlw	103
   495  1837  3400               	retlw	0
   496  1838  3450               	retlw	80
   497  1839  3400               	retlw	0
   498  183A  346D               	retlw	109
   499  183B  3400               	retlw	0
   500  183C  3478               	retlw	120
   501  183D  3400               	retlw	0
   502  183E  341C               	retlw	28
   503  183F  3400               	retlw	0
   504  1840  343E               	retlw	62
   505  1841  3400               	retlw	0
   506  1842  346A               	retlw	106
   507  1843  3400               	retlw	0
   508  1844  3468               	retlw	104
   509  1845  3400               	retlw	0
   510  1846  346E               	retlw	110
   511  1847  3400               	retlw	0
   512  1848  3489               	retlw	137
   513  1849  3400               	retlw	0
   514  184A  3400               	retlw	0
   515  184B  3400               	retlw	0
   516  184C  3440               	retlw	64
   517  184D  3400               	retlw	0
   518  184E  34FF               	retlw	255
   519  184F  3400               	retlw	0
   520  1850  3400               	retlw	0
   521  1851  3400               	retlw	0
   522  1852  3400               	retlw	0
   523  1853  3400               	retlw	0
   524  1854  3400               	retlw	0
   525  1855  3400               	retlw	0
   526  1856  3400               	retlw	0
   527  1857  3400               	retlw	0
   528  1858                     __end_of_lookup_table:	
   529  1858                     _Displayarr:	
   530  1858  343F               	retlw	63
   531  1859  3400               	retlw	0
   532  185A  3406               	retlw	6
   533  185B  3400               	retlw	0
   534  185C  345B               	retlw	91
   535  185D  3400               	retlw	0
   536  185E  344F               	retlw	79
   537  185F  3400               	retlw	0
   538  1860  3466               	retlw	102
   539  1861  3400               	retlw	0
   540  1862  346D               	retlw	109
   541  1863  3400               	retlw	0
   542  1864  347D               	retlw	125
   543  1865  3400               	retlw	0
   544  1866  3407               	retlw	7
   545  1867  3400               	retlw	0
   546  1868  347F               	retlw	127
   547  1869  3400               	retlw	0
   548  186A  346F               	retlw	111
   549  186B  3400               	retlw	0
   550  186C  34FF               	retlw	255
   551  186D  3400               	retlw	0
   552  186E                     __end_of_Displayarr:	
   553  000B                     _INTCONbits	set	11
   554  0011                     _PIR1	set	17
   555  0011                     _PIR1bits	set	17
   556  0012                     _PIR2bits	set	18
   557  000C                     _PORTA	set	12
   558  000C                     _PORTAbits	set	12
   559  000D                     _PORTB	set	13
   560  000E                     _PORTC	set	14
   561  000E                     _PORTCbits	set	14
   562  001B                     _PR2	set	27
   563  0018                     _T1CON	set	24
   564  001C                     _T2CONbits	set	28
   565  0015                     _TMR0	set	21
   566  0017                     _TMR1H	set	23
   567  0016                     _TMR1L	set	22
   568  0095                     _OPTION_REGbits	set	149
   569  0099                     _OSCCONbits	set	153
   570  0098                     _OSCTUNEbits	set	152
   571  0091                     _PIE1bits	set	145
   572  0092                     _PIE2bits	set	146
   573  008C                     _TRISA	set	140
   574  008C                     _TRISAbits	set	140
   575  008D                     _TRISB	set	141
   576  008E                     _TRISC	set	142
   577  008E                     _TRISCbits	set	142
   578  010C                     _LATAbits	set	268
   579  010D                     _LATB	set	269
   580  010D                     _LATBbits	set	269
   581  010E                     _LATCbits	set	270
   582  018C                     _ANSELA	set	396
   583  018D                     _ANSELB	set	397
   584  019F                     _BAUDCTLbits	set	415
   585  0199                     _RCREG	set	409
   586  019D                     _RCSTAbits	set	413
   587  019B                     _SPBRG	set	411
   588  019A                     _TXREG	set	410
   589  019E                     _TXSTA	set	414
   590  019E                     _TXSTAbits	set	414
   591  0293                     _CCP1CONbits	set	659
   592  029A                     _CCP2CONbits	set	666
   593  0291                     _CCPR1L	set	657
   594  0299                     _CCPR2H	set	665
   595  0298                     _CCPR2L	set	664
   596                           
   597                           ; #config settings
   598  0000                     
   599                           	psect	cinit
   600  04DA                     start_initialization:	
   601  04DA                     __initialization:		;BIGRAM
   602                           
   603                           ; Clear objects allocated to BIGRAM
   604  04DA  309A               	movlw	low (0+9114)
   605  04DB  0084               	movwf	4
   606  04DC  3023               	movlw	high (0+9114)
   607  04DD  0085               	movwf	5
   608  04DE  3056               	movlw	86
   609  04DF  00FE               	movwf	btemp
   610  04E0  3000               	movlw	0
   611  04E1  00FF               	movwf	btemp+1
   612  04E2  3198  20BA  3184   	fcall	clear_ram0
   613                           
   614                           ; Clear objects allocated to BANK0
   615  04E5  3054               	movlw	low __pbssBANK0
   616  04E6  0084               	movwf	4
   617  04E7  3000               	movlw	high __pbssBANK0
   618  04E8  0085               	movwf	5
   619  04E9  301B               	movlw	27
   620  04EA  00FE               	movwf	btemp
   621  04EB  3000               	movlw	0
   622  04EC  00FF               	movwf	btemp+1
   623  04ED  3198  20BA  3184   	fcall	clear_ram0
   624                           
   625                           ; Clear objects allocated to BANK2
   626  04F0  3020               	movlw	low __pbssBANK2
   627  04F1  0084               	movwf	4
   628  04F2  3001               	movlw	high __pbssBANK2
   629  04F3  0085               	movwf	5
   630  04F4  3044               	movlw	68
   631  04F5  00FE               	movwf	btemp
   632  04F6  3000               	movlw	0
   633  04F7  00FF               	movwf	btemp+1
   634  04F8  3198  20BA  3184   	fcall	clear_ram0
   635                           
   636                           ; Clear objects allocated to BANK3
   637  04FB  30A0               	movlw	low __pbssBANK3
   638  04FC  0084               	movwf	4
   639  04FD  3001               	movlw	high __pbssBANK3
   640  04FE  0085               	movwf	5
   641  04FF  303F               	movlw	63
   642  0500  00FE               	movwf	btemp
   643  0501  3000               	movlw	0
   644  0502  00FF               	movwf	btemp+1
   645  0503  3198  20BA  3184   	fcall	clear_ram0
   646                           
   647                           ; Clear objects allocated to BANK4
   648  0506  3020               	movlw	low __pbssBANK4
   649  0507  0084               	movwf	4
   650  0508  3002               	movlw	high __pbssBANK4
   651  0509  0085               	movwf	5
   652  050A  3038               	movlw	56
   653  050B  00FE               	movwf	btemp
   654  050C  3000               	movlw	0
   655  050D  00FF               	movwf	btemp+1
   656  050E  3198  20BA  3184   	fcall	clear_ram0
   657                           
   658                           ; Clear objects allocated to BANK5
   659  0511  30A0               	movlw	low __pbssBANK5
   660  0512  0084               	movwf	4
   661  0513  3002               	movlw	high __pbssBANK5
   662  0514  0085               	movwf	5
   663  0515  3018               	movlw	24
   664  0516  00FE               	movwf	btemp
   665  0517  3000               	movlw	0
   666  0518  00FF               	movwf	btemp+1
   667  0519  3198  20BA  3184   	fcall	clear_ram0
   668                           
   669                           ; Clear objects allocated to BANK6
   670  051C  3020               	movlw	low __pbssBANK6
   671  051D  0084               	movwf	4
   672  051E  3003               	movlw	high __pbssBANK6
   673  051F  0085               	movwf	5
   674  0520  3049               	movlw	73
   675  0521  00FE               	movwf	btemp
   676  0522  3000               	movlw	0
   677  0523  00FF               	movwf	btemp+1
   678  0524  3198  20BA  3184   	fcall	clear_ram0
   679                           
   680                           ; Initialize objects allocated to BANK0
   681  0527  3187  27FC  3184   	fcall	__pidataBANK0	;fetch initializer
   682  052A  00EF               	movwf	__pdataBANK0& (0+127)
   683                           
   684                           ; Initialize objects allocated to BANK1
   685  052B  0021               	movlb	1	; select bank1
   686  052C  3187  27FD  3184   	fcall	__pidataBANK1	;fetch initializer
   687  052F  00EF               	movwf	__pdataBANK1& (0+127)
   688                           
   689                           ; Initialize objects allocated to BANK2
   690  0530  30C6               	movlw	low __pidataBANK2
   691  0531  0084               	movwf	4
   692  0532  3098               	movlw	(high __pidataBANK2)| (0+128)
   693  0533  0085               	movwf	5
   694  0534  3064               	movlw	low __pdataBANK2
   695  0535  0086               	movwf	6
   696  0536  3001               	movlw	high __pdataBANK2
   697  0537  0087               	movwf	7
   698  0538  3000               	movlw	0
   699  0539  00FF               	movwf	btemp+1
   700  053A  300C               	movlw	12
   701  053B  3198  20AE  3184   	fcall	init_ram
   702                           
   703                           ; Initialize objects allocated to BANK3
   704  053E  30F4               	movlw	low __pidataBANK3
   705  053F  0084               	movwf	4
   706  0540  3098               	movlw	(high __pidataBANK3)| (0+128)
   707  0541  0085               	movwf	5
   708  0542  30DF               	movlw	low __pdataBANK3
   709  0543  0086               	movwf	6
   710  0544  3001               	movlw	high __pdataBANK3
   711  0545  0087               	movwf	7
   712  0546  3000               	movlw	0
   713  0547  00FF               	movwf	btemp+1
   714  0548  3011               	movlw	17
   715  0549  3198  20AE  3184   	fcall	init_ram
   716                           
   717                           ; Initialize objects allocated to BANK4
   718  054C  0024               	movlb	4	; select bank4
   719  054D  3187  27FA  3184   	fcall	__pidataBANK4	;fetch initializer
   720  0550  00D8               	movwf	__pdataBANK4& (0+127)
   721  0551  3187  27FB         	fcall	__pidataBANK4+1	;fetch initializer
   722  0553  00D9               	movwf	(__pdataBANK4+1)& (0+127)
   723  0554                     end_of_initialization:	
   724                           ;End of C runtime variable initialization code
   725                           
   726  0554                     __end_of__initialization:	
   727  0554  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   728  0555  0020               	movlb	0
   729  0556  3189  2913         	ljmp	_main	;jump to C main() function
   730                           
   731                           	psect	bssBANK0
   732  0054                     __pbssBANK0:	
   733  0054                     _new1:	
   734  0054                     	ds	2
   735  0056                     _new2:	
   736  0056                     	ds	2
   737  0058                     _setvoltage:	
   738  0058                     	ds	2
   739  005A                     _setwirespeed:	
   740  005A                     	ds	2
   741  005C                     _digit:	
   742  005C                     	ds	1
   743  005D                     _encod1:	
   744  005D                     	ds	1
   745  005E                     _encod2:	
   746  005E                     	ds	1
   747  005F                     _i:	
   748  005F                     	ds	1
   749  0060                     _minuspara2:	
   750  0060                     	ds	1
   751  0061                     _onesecf:	
   752  0061                     	ds	1
   753  0062                     _portbstatus:	
   754  0062                     	ds	1
   755  0063                     _rxdata:	
   756  0063                     	ds	1
   757  0064                     _startptr1:	
   758  0064                     	ds	1
   759  0065                     _temp:	
   760  0065                     	ds	1
   761  0066                     _weldmode:	
   762  0066                     	ds	1
   763  0067                     _TypeU:	
   764  0067                     	ds	2
   765  0069                     _newsetwirespeed:	
   766  0069                     	ds	2
   767  006B                     _TypeDP:	
   768  006B                     	ds	1
   769  006C                     _inchcnt:	
   770  006C                     	ds	1
   771  006D                     _psstatusu:	
   772  006D                     	ds	1
   773  006E                     _wfstatusu:	
   774  006E                     	ds	1
   775                           
   776                           	psect	dataBANK0
   777  006F                     __pdataBANK0:	
   778  006F                     _dispupdatef:	
   779  006F                     	ds	1
   780                           
   781                           	psect	dataBANK1
   782  00EF                     __pdataBANK1:	
   783  00EF                     _key:	
   784  00EF                     	ds	1
   785                           
   786                           	psect	bssBANK2
   787  0120                     __pbssBANK2:	
   788  0120                     _Fltpfreq:	
   789  0120                     	ds	2
   790  0122                     _ijk:	
   791  0122                     	ds	2
   792  0124                     _lmn:	
   793  0124                     	ds	2
   794  0126                     _scaled_baseval2:	
   795  0126                     	ds	2
   796  0128                     _setcurrent:	
   797  0128                     	ds	2
   798  012A                     _statusptr1:	
   799  012A                     	ds	2
   800  012C                     _Count:	
   801  012C                     	ds	1
   802  012D                     _OneH:	
   803  012D                     	ds	1
   804  012E                     _OneL:	
   805  012E                     	ds	1
   806  012F                     _TwoH:	
   807  012F                     	ds	1
   808  0130                     _TwoL:	
   809  0130                     	ds	1
   810  0131                     _adaptivepidf:	
   811  0131                     	ds	1
   812  0132                     _arrptr:	
   813  0132                     	ds	1
   814  0133                     _cEditfg:	
   815  0133                     	ds	1
   816  0134                     _cWf2t4tmodefg:	
   817  0134                     	ds	1
   818  0135                     _chksum:	
   819  0135                     	ds	1
   820  0136                     _closeloopf:	
   821  0136                     	ds	1
   822  0137                     _comm_error_count:	
   823  0137                     	ds	1
   824  0138                     _count_1msec:	
   825  0138                     	ds	1
   826  0139                     _count_2ms:	
   827  0139                     	ds	1
   828  013A                     _crater_speed:	
   829  013A                     	ds	1
   830  013B                     _creep_speed:	
   831  013B                     	ds	1
   832  013C                     _cyclestrtf:	
   833  013C                     	ds	1
   834  013D                     _enccount:	
   835  013D                     	ds	1
   836  013E                     _error8:	
   837  013E                     	ds	1
   838  013F                     _firstpulse1:	
   839  013F                     	ds	1
   840  0140                     _firstpulse2:	
   841  0140                     	ds	1
   842  0141                     _gaschkfg:	
   843  0141                     	ds	1
   844  0142                     _kpressread:	
   845  0142                     	ds	1
   846  0143                     _mili1_100:	
   847  0143                     	ds	1
   848  0144                     _mili2_100:	
   849  0144                     	ds	1
   850  0145                     _minus111:	
   851  0145                     	ds	1
   852  0146                     _minus222:	
   853  0146                     	ds	1
   854  0147                     _minuscount1:	
   855  0147                     	ds	1
   856  0148                     _minuscount2:	
   857  0148                     	ds	1
   858  0149                     _minuspara1:	
   859  0149                     	ds	1
   860  014A                     _motor_acceleratefg:	
   861  014A                     	ds	1
   862  014B                     _pcount:	
   863  014B                     	ds	1
   864  014C                     _plus111:	
   865  014C                     	ds	1
   866  014D                     _plus222:	
   867  014D                     	ds	1
   868  014E                     _pluscount1:	
   869  014E                     	ds	1
   870  014F                     _pluscount2:	
   871  014F                     	ds	1
   872  0150                     _pluspara1:	
   873  0150                     	ds	1
   874  0151                     _pluspara2:	
   875  0151                     	ds	1
   876  0152                     _pportb:	
   877  0152                     	ds	1
   878  0153                     _read_enc1f:	
   879  0153                     	ds	1
   880  0154                     _recchksum:	
   881  0154                     	ds	1
   882  0155                     _secondpulse1:	
   883  0155                     	ds	1
   884  0156                     _secondpulse2:	
   885  0156                     	ds	1
   886  0157                     _send_statusf:	
   887  0157                     	ds	1
   888  0158                     _tans:	
   889  0158                     	ds	1
   890  0159                     _torchstatus1:	
   891  0159                     	ds	1
   892  015A                     _torchstatus2:	
   893  015A                     	ds	1
   894  015B                     _transmitonf:	
   895  015B                     	ds	1
   896  015C                     _universal_error:	
   897  015C                     	ds	1
   898  015D                     _universal_error_latch:	
   899  015D                     	ds	1
   900  015E                     _avgpperiod:	
   901  015E                     	ds	2
   902  0160                     _erroru:	
   903  0160                     	ds	2
   904  0162                     _pfreq:	
   905  0162                     	ds	2
   906                           
   907                           	psect	dataBANK2
   908  0164                     __pdataBANK2:	
   909  0164                     _diswin1:	
   910  0164                     	ds	8
   911  016C                     _TORCH:	
   912  016C                     	ds	1
   913  016D                     _prevTORCH:	
   914  016D                     	ds	1
   915  016E                     _prevkey:	
   916  016E                     	ds	1
   917  016F                     _wfspeedchangef:	
   918  016F                     	ds	1
   919                           
   920                           	psect	bssBANK3
   921  01A0                     __pbssBANK3:	
   922  01A0                     _error_new:	
   923  01A0                     	ds	3
   924  01A3                     _error_old:	
   925  01A3                     	ds	3
   926  01A6                     _integral_new:	
   927  01A6                     	ds	3
   928  01A9                     _integral_old:	
   929  01A9                     	ds	3
   930  01AC                     _One:	
   931  01AC                     	ds	2
   932  01AE                     _Total_Count:	
   933  01AE                     	ds	2
   934  01B0                     _Two:	
   935  01B0                     	ds	2
   936  01B2                     _count_1ms:	
   937  01B2                     	ds	2
   938  01B4                     _delinch:	
   939  01B4                     	ds	2
   940  01B6                     _delinch1:	
   941  01B6                     	ds	2
   942  01B8                     _disparclength:	
   943  01B8                     	ds	2
   944  01BA                     _igascntr:	
   945  01BA                     	ds	2
   946  01BC                     _old1:	
   947  01BC                     	ds	2
   948  01BE                     _old2:	
   949  01BE                     	ds	2
   950  01C0                     _pperiod:	
   951  01C0                     	ds	2
   952  01C2                     _prevsetcurrent:	
   953  01C2                     	ds	2
   954  01C4                     _prevsetvoltage:	
   955  01C4                     	ds	2
   956  01C6                     _prevsetwirespeed:	
   957  01C6                     	ds	2
   958  01C8                     _recpsstatus:	
   959  01C8                     	ds	2
   960  01CA                     _recstatus:	
   961  01CA                     	ds	2
   962  01CC                     _rel_wirespeed:	
   963  01CC                     	ds	2
   964  01CE                     _setpfreq:	
   965  01CE                     	ds	2
   966  01D0                     _up_count_motor:	
   967  01D0                     	ds	2
   968  01D2                     _Tx_ptr:	
   969  01D2                     	ds	1
   970  01D3                     _closeloop1f:	
   971  01D3                     	ds	1
   972  01D4                     _error4:	
   973  01D4                     	ds	1
   974  01D5                     _error_code1:	
   975  01D5                     	ds	1
   976  01D6                     _error_code2:	
   977  01D6                     	ds	1
   978  01D7                     _inchkeyon:	
   979  01D7                     	ds	1
   980  01D8                     _motor_continuefg:	
   981  01D8                     	ds	1
   982  01D9                     _softstartf:	
   983  01D9                     	ds	1
   984  01DA                     _torchonf:	
   985  01DA                     	ds	1
   986  01DB                     _txonf:	
   987  01DB                     	ds	1
   988  01DC                     _updatedispf:	
   989  01DC                     	ds	1
   990  01DD                     _wfstatusbyte:	
   991  01DD                     	ds	1
   992  01DE                     _commandu:	
   993  01DE                     	ds	1
   994                           
   995                           	psect	dataBANK3
   996  01DF                     __pdataBANK3:	
   997  01DF                     _Tsampling:	
   998  01DF                     	ds	3
   999  01E2                     _Actual_amp:	
  1000  01E2                     	ds	2
  1001  01E4                     _Actual_vtg:	
  1002  01E4                     	ds	2
  1003  01E6                     _maxfmspeed:	
  1004  01E6                     	ds	2
  1005  01E8                     _minfmspeed:	
  1006  01E8                     	ds	2
  1007  01EA                     _parclength:	
  1008  01EA                     	ds	2
  1009  01EC                     _scalefactor2:	
  1010  01EC                     	ds	2
  1011  01EE                     _displayonf:	
  1012  01EE                     	ds	1
  1013  01EF                     _togglepin:	
  1014  01EF                     	ds	1
  1015                           
  1016                           	psect	bssBANK4
  1017  0220                     __pbssBANK4:	
  1018  0220                     _Total_Period:	
  1019  0220                     	ds	4
  1020  0224                     _controller_out:	
  1021  0224                     	ds	3
  1022  0227                     _minoutmax:	
  1023  0227                     	ds	3
  1024  022A                     _Hi_setppwm:	
  1025  022A                     	ds	2
  1026  022C                     _Lo_setppwm:	
  1027  022C                     	ds	2
  1028  022E                     _creepspeed:	
  1029  022E                     	ds	2
  1030  0230                     _delay:	
  1031  0230                     	ds	2
  1032  0232                     _disp1term:	
  1033  0232                     	ds	2
  1034  0234                     _disp2term:	
  1035  0234                     	ds	2
  1036  0236                     _disp3term:	
  1037  0236                     	ds	2
  1038  0238                     _disp4term:	
  1039  0238                     	ds	2
  1040  023A                     _gapfreq:	
  1041  023A                     	ds	2
  1042  023C                     _iii:	
  1043  023C                     	ds	2
  1044  023E                     _openloopcnt:	
  1045  023E                     	ds	2
  1046  0240                     _prevFltpfreq:	
  1047  0240                     	ds	2
  1048  0242                     _pstowfstru:	
  1049  0242                     	ds	22
  1050                           
  1051                           	psect	dataBANK4
  1052  0258                     __pdataBANK4:	
  1053  0258                     _mahesh_test:	
  1054  0258                     	ds	2
  1055                           
  1056                           	psect	bssBANK5
  1057  02A0                     __pbssBANK5:	
  1058  02A0                     _rec_arr:	
  1059  02A0                     	ds	24
  1060                           
  1061                           	psect	bssBANK6
  1062  0320                     __pbssBANK6:	
  1063  0320                     _PID_sParams:	
  1064  0320                     	ds	73
  1065                           
  1066                           	psect	clrtext
  1067  18BA                     clear_ram0:	
  1068                           ;	Called with FSR0 containing the base address, and
  1069                           ;	btemp/btemp+1 has the size to clear
  1070                           
  1071  18BA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1072  18BB                     clrloop0:	
  1073  18BB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1074  18BC  3101               	addfsr 0,1
  1075  18BD  3001               	movlw	1
  1076  18BE  02FE               	subwf	126,f
  1077  18BF  3000               	movlw	0
  1078  18C0  3BFF               	subwfb	127,f
  1079  18C1  087F               	movf	127,w
  1080  18C2  047E               	iorwf	126,w
  1081  18C3  1903               	btfsc	3,2
  1082  18C4  3400               	retlw	0	;all done for this memory range, return
  1083  18C5  28BB               	goto	clrloop0	;have we reached the end yet?
  1084                           
  1085                           	psect	inittext
  1086  18AE                     init_ram:	
  1087  18AE  00FE               	movwf	126
  1088  18AF                     initloop:	
  1089  18AF  0012               	moviw fsr0++
  1090  18B0  001E               	movwi fsr1++
  1091  18B1  3001               	movlw	1
  1092  18B2  02FE               	subwf	126,f
  1093  18B3  3000               	movlw	0
  1094  18B4  3BFF               	subwfb	127,f
  1095  18B5  087F               	movf	127,w
  1096  18B6  047E               	iorwf	126,w
  1097  18B7  1903               	btfsc	3,2
  1098  18B8  3400               	retlw	0
  1099  18B9  28AF               	goto	initloop
  1100                           
  1101                           	psect	cstackBANK1
  1102  00A0                     __pcstackBANK1:	
  1103  00A0                     ??_enc1_port:	
  1104  00A0                     ??_enc2_port:	
  1105                           ; 0 bytes @ 0x0
  1106                           
  1107  00A0                     ??_system_init:	
  1108                           ; 0 bytes @ 0x0
  1109                           
  1110  00A0                     ??_portpin_init:	
  1111                           ; 0 bytes @ 0x0
  1112                           
  1113  00A0                     ??_Timer0_init:	
  1114                           ; 0 bytes @ 0x0
  1115                           
  1116  00A0                     ??_PWM_init:	
  1117                           ; 0 bytes @ 0x0
  1118                           
  1119  00A0                     ??_capture_init:	
  1120                           ; 0 bytes @ 0x0
  1121                           
  1122  00A0                     ??_uart_init:	
  1123                           ; 0 bytes @ 0x0
  1124                           
  1125  00A0                     ?_Delayms:	
  1126                           ; 0 bytes @ 0x0
  1127                           
  1128  00A0                     ??_Send_Byte:	
  1129                           ; 0 bytes @ 0x0
  1130                           
  1131  00A0                     ?___wmul:	
  1132                           ; 0 bytes @ 0x0
  1133                           
  1134  00A0                     ?___lwmod:	
  1135                           ; 2 bytes @ 0x0
  1136                           
  1137  00A0                     ?___ftpack:	
  1138                           ; 2 bytes @ 0x0
  1139                           
  1140  00A0                     ?___ftneg:	
  1141                           ; 3 bytes @ 0x0
  1142                           
  1143  00A0                     ?___aldiv:	
  1144                           ; 3 bytes @ 0x0
  1145                           
  1146  00A0                     Send_Byte@transbyte:	
  1147                           ; 4 bytes @ 0x0
  1148                           
  1149  00A0                     Delayms@delay:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  00A0                     ___wmul@multiplier:	
  1153                           ; 2 bytes @ 0x0
  1154                           
  1155  00A0                     ___lwmod@divisor:	
  1156                           ; 2 bytes @ 0x0
  1157                           
  1158  00A0                     ___ftpack@arg:	
  1159                           ; 2 bytes @ 0x0
  1160                           
  1161  00A0                     ___ftneg@f1:	
  1162                           ; 3 bytes @ 0x0
  1163                           
  1164  00A0                     ___aldiv@divisor:	
  1165                           ; 3 bytes @ 0x0
  1166                           
  1167                           
  1168                           ; 4 bytes @ 0x0
  1169  00A0                     	ds	1
  1170  00A1                     ??_send_status:	
  1171  00A1                     ??_transmittops:	
  1172                           ; 0 bytes @ 0x1
  1173                           
  1174                           
  1175                           ; 0 bytes @ 0x1
  1176  00A1                     	ds	1
  1177  00A2                     ??_Delayms:	
  1178  00A2                     Delayms@xxx:	
  1179                           ; 0 bytes @ 0x2
  1180                           
  1181  00A2                     ___wmul@multiplicand:	
  1182                           ; 2 bytes @ 0x2
  1183                           
  1184  00A2                     ___lwmod@dividend:	
  1185                           ; 2 bytes @ 0x2
  1186                           
  1187                           
  1188                           ; 2 bytes @ 0x2
  1189  00A2                     	ds	1
  1190  00A3                     ??___ftneg:	
  1191  00A3                     ___ftpack@exp:	
  1192                           ; 0 bytes @ 0x3
  1193                           
  1194  00A3                     enc2_port@portvalue:	
  1195                           ; 1 bytes @ 0x3
  1196                           
  1197                           
  1198                           ; 2 bytes @ 0x3
  1199  00A3                     	ds	1
  1200  00A4                     ??___wmul:	
  1201  00A4                     ??___lwmod:	
  1202                           ; 0 bytes @ 0x4
  1203                           
  1204  00A4                     ___ftpack@sign:	
  1205                           ; 0 bytes @ 0x4
  1206                           
  1207  00A4                     Delayms@yyy:	
  1208                           ; 1 bytes @ 0x4
  1209                           
  1210  00A4                     enc1_port@portvalue:	
  1211                           ; 2 bytes @ 0x4
  1212                           
  1213  00A4                     ___wmul@product:	
  1214                           ; 2 bytes @ 0x4
  1215                           
  1216  00A4                     ___aldiv@dividend:	
  1217                           ; 2 bytes @ 0x4
  1218                           
  1219                           
  1220                           ; 4 bytes @ 0x4
  1221  00A4                     	ds	1
  1222  00A5                     ??___ftpack:	
  1223  00A5                     ??_SCANENCODER2:	
  1224                           ; 0 bytes @ 0x5
  1225                           
  1226  00A5                     ___lwmod@counter:	
  1227                           ; 0 bytes @ 0x5
  1228                           
  1229                           
  1230                           ; 1 bytes @ 0x5
  1231  00A5                     	ds	1
  1232  00A6                     ??_SCANENCODER1:	
  1233  00A6                     ?___lwdiv:	
  1234                           ; 0 bytes @ 0x6
  1235                           
  1236  00A6                     SCANENCODER2@result:	
  1237                           ; 2 bytes @ 0x6
  1238                           
  1239  00A6                     ___lwdiv@divisor:	
  1240                           ; 1 bytes @ 0x6
  1241                           
  1242                           
  1243                           ; 2 bytes @ 0x6
  1244  00A6                     	ds	1
  1245  00A7                     SCANENCODER1@result:	
  1246                           
  1247                           ; 1 bytes @ 0x7
  1248  00A7                     	ds	1
  1249  00A8                     ??___aldiv:	
  1250  00A8                     ?___altoft:	
  1251                           ; 0 bytes @ 0x8
  1252                           
  1253  00A8                     ?___ftadd:	
  1254                           ; 3 bytes @ 0x8
  1255                           
  1256  00A8                     ?___lwtoft:	
  1257                           ; 3 bytes @ 0x8
  1258                           
  1259  00A8                     ___lwdiv@dividend:	
  1260                           ; 3 bytes @ 0x8
  1261                           
  1262  00A8                     ___lwtoft@c:	
  1263                           ; 2 bytes @ 0x8
  1264                           
  1265  00A8                     ___ftadd@f1:	
  1266                           ; 2 bytes @ 0x8
  1267                           
  1268  00A8                     ___altoft@c:	
  1269                           ; 3 bytes @ 0x8
  1270                           
  1271                           
  1272                           ; 4 bytes @ 0x8
  1273  00A8                     	ds	1
  1274  00A9                     ___aldiv@counter:	
  1275                           
  1276                           ; 1 bytes @ 0x9
  1277  00A9                     	ds	1
  1278  00AA                     ??___lwdiv:	
  1279  00AA                     ___aldiv@sign:	
  1280                           ; 0 bytes @ 0xA
  1281                           
  1282                           
  1283                           ; 1 bytes @ 0xA
  1284  00AA                     	ds	1
  1285  00AB                     ??___lwtoft:	
  1286  00AB                     ___lwdiv@quotient:	
  1287                           ; 0 bytes @ 0xB
  1288                           
  1289  00AB                     ___ftadd@f2:	
  1290                           ; 2 bytes @ 0xB
  1291                           
  1292  00AB                     ___aldiv@quotient:	
  1293                           ; 3 bytes @ 0xB
  1294                           
  1295                           
  1296                           ; 4 bytes @ 0xB
  1297  00AB                     	ds	1
  1298  00AC                     ??___altoft:	
  1299                           
  1300                           ; 0 bytes @ 0xC
  1301  00AC                     	ds	1
  1302  00AD                     ___lwdiv@counter:	
  1303                           
  1304                           ; 1 bytes @ 0xD
  1305  00AD                     	ds	1
  1306  00AE                     ?_disp_hex_window1:	
  1307  00AE                     ?_disp_hex_window2:	
  1308                           ; 0 bytes @ 0xE
  1309                           
  1310  00AE                     ??___ftadd:	
  1311                           ; 0 bytes @ 0xE
  1312                           
  1313  00AE                     ___altoft@exp:	
  1314                           ; 0 bytes @ 0xE
  1315                           
  1316  00AE                     disp_hex_window1@hex_data:	
  1317                           ; 1 bytes @ 0xE
  1318                           
  1319  00AE                     disp_hex_window2@hex_data:	
  1320                           ; 2 bytes @ 0xE
  1321                           
  1322                           
  1323                           ; 2 bytes @ 0xE
  1324  00AE                     	ds	1
  1325  00AF                     ___altoft@sign:	
  1326                           
  1327                           ; 1 bytes @ 0xF
  1328  00AF                     	ds	1
  1329  00B0                     ??_disp_hex_window1:	
  1330  00B0                     ??_disp_hex_window2:	
  1331                           ; 0 bytes @ 0x10
  1332                           
  1333  00B0                     ?___ftge:	
  1334                           ; 0 bytes @ 0x10
  1335                           
  1336  00B0                     ___ftge@ff1:	
  1337                           ; 1 bit 
  1338                           
  1339                           
  1340                           ; 3 bytes @ 0x10
  1341  00B0                     	ds	2
  1342  00B2                     ___ftadd@sign:	
  1343                           
  1344                           ; 1 bytes @ 0x12
  1345  00B2                     	ds	1
  1346  00B3                     ___ftadd@exp2:	
  1347  00B3                     ___ftge@ff2:	
  1348                           ; 1 bytes @ 0x13
  1349                           
  1350                           
  1351                           ; 3 bytes @ 0x13
  1352  00B3                     	ds	1
  1353  00B4                     ___ftadd@exp1:	
  1354                           
  1355                           ; 1 bytes @ 0x14
  1356  00B4                     	ds	1
  1357  00B5                     ?___ftmul:	
  1358  00B5                     ___ftmul@f1:	
  1359                           ; 3 bytes @ 0x15
  1360                           
  1361                           
  1362                           ; 3 bytes @ 0x15
  1363  00B5                     	ds	1
  1364  00B6                     ??___ftge:	
  1365                           
  1366                           ; 0 bytes @ 0x16
  1367  00B6                     	ds	2
  1368  00B8                     ___ftmul@f2:	
  1369                           
  1370                           ; 3 bytes @ 0x18
  1371  00B8                     	ds	3
  1372  00BB                     ??___ftmul:	
  1373                           
  1374                           ; 0 bytes @ 0x1B
  1375  00BB                     	ds	4
  1376  00BF                     ___ftmul@exp:	
  1377                           
  1378                           ; 1 bytes @ 0x1F
  1379  00BF                     	ds	1
  1380  00C0                     ___ftmul@f3_as_product:	
  1381                           
  1382                           ; 3 bytes @ 0x20
  1383  00C0                     	ds	3
  1384  00C3                     ___ftmul@cntr:	
  1385                           
  1386                           ; 1 bytes @ 0x23
  1387  00C3                     	ds	1
  1388  00C4                     ___ftmul@sign:	
  1389                           
  1390                           ; 1 bytes @ 0x24
  1391  00C4                     	ds	1
  1392  00C5                     ?___ftdiv:	
  1393  00C5                     ?___fttol:	
  1394                           ; 3 bytes @ 0x25
  1395                           
  1396  00C5                     ___ftdiv@f2:	
  1397                           ; 4 bytes @ 0x25
  1398                           
  1399  00C5                     ___fttol@f1:	
  1400                           ; 3 bytes @ 0x25
  1401                           
  1402                           
  1403                           ; 3 bytes @ 0x25
  1404  00C5                     	ds	3
  1405  00C8                     ___ftdiv@f1:	
  1406                           
  1407                           ; 3 bytes @ 0x28
  1408  00C8                     	ds	1
  1409  00C9                     ??___fttol:	
  1410                           
  1411                           ; 0 bytes @ 0x29
  1412  00C9                     	ds	2
  1413  00CB                     ??___ftdiv:	
  1414                           
  1415                           ; 0 bytes @ 0x2B
  1416  00CB                     	ds	2
  1417  00CD                     ___fttol@sign1:	
  1418                           
  1419                           ; 1 bytes @ 0x2D
  1420  00CD                     	ds	1
  1421  00CE                     ___fttol@lval:	
  1422                           
  1423                           ; 4 bytes @ 0x2E
  1424  00CE                     	ds	1
  1425  00CF                     ___ftdiv@cntr:	
  1426                           
  1427                           ; 1 bytes @ 0x2F
  1428  00CF                     	ds	1
  1429  00D0                     ___ftdiv@f3:	
  1430                           
  1431                           ; 3 bytes @ 0x30
  1432  00D0                     	ds	2
  1433  00D2                     ___fttol@exp1:	
  1434                           
  1435                           ; 1 bytes @ 0x32
  1436  00D2                     	ds	1
  1437  00D3                     ?_Update_PWM:	
  1438  00D3                     ___ftdiv@exp:	
  1439                           ; 0 bytes @ 0x33
  1440                           
  1441  00D3                     Update_PWM@setwsduty:	
  1442                           ; 1 bytes @ 0x33
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0x33
  1446  00D3                     	ds	1
  1447  00D4                     ___ftdiv@sign:	
  1448                           
  1449                           ; 1 bytes @ 0x34
  1450  00D4                     	ds	1
  1451  00D5                     ??_Update_PWM:	
  1452                           
  1453                           ; 0 bytes @ 0x35
  1454  00D5                     	ds	2
  1455  00D7                     Update_PWM@Temp1:	
  1456                           
  1457                           ; 2 bytes @ 0x37
  1458  00D7                     	ds	2
  1459  00D9                     Update_PWM@Dutycnt:	
  1460                           
  1461                           ; 2 bytes @ 0x39
  1462  00D9                     	ds	2
  1463  00DB                     ??_key_application:	
  1464  00DB                     ??_detect_display_error:	
  1465                           ; 0 bytes @ 0x3B
  1466                           
  1467  00DB                     ??_Adaptive_base_pid:	
  1468                           ; 0 bytes @ 0x3B
  1469                           
  1470                           
  1471                           ; 0 bytes @ 0x3B
  1472  00DB                     	ds	2
  1473  00DD                     key_application@keypress:	
  1474                           
  1475                           ; 1 bytes @ 0x3D
  1476  00DD                     	ds	7
  1477  00E4                     _Adaptive_base_pid$1769:	
  1478                           
  1479                           ; 3 bytes @ 0x44
  1480  00E4                     	ds	3
  1481  00E7                     _Adaptive_base_pid$1770:	
  1482                           
  1483                           ; 3 bytes @ 0x47
  1484  00E7                     	ds	3
  1485  00EA                     _Adaptive_base_pid$1771:	
  1486                           
  1487                           ; 3 bytes @ 0x4A
  1488  00EA                     	ds	3
  1489  00ED                     ??_main:	
  1490                           
  1491                           ; 0 bytes @ 0x4D
  1492  00ED                     	ds	2
  1493                           
  1494                           	psect	cstackCOMMON
  1495  0070                     __pcstackCOMMON:	
  1496  0070                     ?_system_init:	
  1497  0070                     ?_portpin_init:	
  1498                           ; 0 bytes @ 0x0
  1499                           
  1500  0070                     ?_Timer0_init:	
  1501                           ; 0 bytes @ 0x0
  1502                           
  1503  0070                     ?_PWM_init:	
  1504                           ; 0 bytes @ 0x0
  1505                           
  1506  0070                     ?_capture_init:	
  1507                           ; 0 bytes @ 0x0
  1508                           
  1509  0070                     ?_uart_init:	
  1510                           ; 0 bytes @ 0x0
  1511                           
  1512  0070                     ?_send_status:	
  1513                           ; 0 bytes @ 0x0
  1514                           
  1515  0070                     ?_transmittops:	
  1516                           ; 0 bytes @ 0x0
  1517                           
  1518  0070                     ?_key_application:	
  1519                           ; 0 bytes @ 0x0
  1520                           
  1521  0070                     ?_detect_display_error:	
  1522                           ; 0 bytes @ 0x0
  1523                           
  1524  0070                     ?_Display:	
  1525                           ; 0 bytes @ 0x0
  1526                           
  1527  0070                     ??_Display:	
  1528                           ; 0 bytes @ 0x0
  1529                           
  1530  0070                     ?_Adaptive_base_pid:	
  1531                           ; 0 bytes @ 0x0
  1532                           
  1533  0070                     ?_ISR_Function:	
  1534                           ; 0 bytes @ 0x0
  1535                           
  1536  0070                     ?_main:	
  1537                           ; 0 bytes @ 0x0
  1538                           
  1539  0070                     ?_Send_Byte:	
  1540                           ; 0 bytes @ 0x0
  1541                           
  1542  0070                     ?_enc1_port:	
  1543                           ; 0 bytes @ 0x0
  1544                           
  1545  0070                     ?_enc2_port:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_SCANENCODER1:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_SCANENCODER2:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?i1___ftpack:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?i1___aldiv:	
  1558                           ; 3 bytes @ 0x0
  1559                           
  1560  0070                     i1___ftpack@arg:	
  1561                           ; 4 bytes @ 0x0
  1562                           
  1563  0070                     i1___aldiv@divisor:	
  1564                           ; 3 bytes @ 0x0
  1565                           
  1566                           
  1567                           ; 4 bytes @ 0x0
  1568  0070                     	ds	3
  1569  0073                     i1___ftpack@exp:	
  1570                           
  1571                           ; 1 bytes @ 0x3
  1572  0073                     	ds	1
  1573  0074                     i1___ftpack@sign:	
  1574  0074                     i1___aldiv@dividend:	
  1575                           ; 1 bytes @ 0x4
  1576                           
  1577                           
  1578                           ; 4 bytes @ 0x4
  1579  0074                     	ds	1
  1580  0075                     ??i1___ftpack:	
  1581                           
  1582                           ; 0 bytes @ 0x5
  1583  0075                     	ds	3
  1584  0078                     ??i1___aldiv:	
  1585  0078                     ?i1___lwtoft:	
  1586                           ; 0 bytes @ 0x8
  1587                           
  1588  0078                     i1___lwtoft@c:	
  1589                           ; 3 bytes @ 0x8
  1590                           
  1591                           
  1592                           ; 2 bytes @ 0x8
  1593  0078                     	ds	3
  1594  007B                     ??i1___lwtoft:	
  1595                           
  1596                           ; 0 bytes @ 0xB
  1597  007B                     	ds	1
  1598  007C                     _ISR_Function$1176:	
  1599                           
  1600                           ; 2 bytes @ 0xC
  1601  007C                     	ds	2
  1602                           
  1603                           	psect	cstackBANK0
  1604  0020                     __pcstackBANK0:	
  1605  0020                     ?i1___ftdiv:	
  1606  0020                     ?i1___ftmul:	
  1607                           ; 3 bytes @ 0x0
  1608                           
  1609  0020                     i1___aldiv@counter:	
  1610                           ; 3 bytes @ 0x0
  1611                           
  1612  0020                     i1___ftdiv@f2:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0020                     i1___ftmul@f1:	
  1616                           ; 3 bytes @ 0x0
  1617                           
  1618                           
  1619                           ; 3 bytes @ 0x0
  1620  0020                     	ds	1
  1621  0021                     i1___aldiv@sign:	
  1622                           
  1623                           ; 1 bytes @ 0x1
  1624  0021                     	ds	1
  1625  0022                     i1___aldiv@quotient:	
  1626                           
  1627                           ; 4 bytes @ 0x2
  1628  0022                     	ds	1
  1629  0023                     i1___ftdiv@f1:	
  1630  0023                     i1___ftmul@f2:	
  1631                           ; 3 bytes @ 0x3
  1632                           
  1633                           
  1634                           ; 3 bytes @ 0x3
  1635  0023                     	ds	3
  1636  0026                     ??i1___ftdiv:	
  1637  0026                     ??i1___ftmul:	
  1638                           ; 0 bytes @ 0x6
  1639                           
  1640                           
  1641                           ; 0 bytes @ 0x6
  1642  0026                     	ds	4
  1643  002A                     i1___ftdiv@cntr:	
  1644  002A                     i1___ftmul@exp:	
  1645                           ; 1 bytes @ 0xA
  1646                           
  1647                           
  1648                           ; 1 bytes @ 0xA
  1649  002A                     	ds	1
  1650  002B                     i1___ftdiv@f3:	
  1651  002B                     i1___ftmul@f3_as_product:	
  1652                           ; 3 bytes @ 0xB
  1653                           
  1654                           
  1655                           ; 3 bytes @ 0xB
  1656  002B                     	ds	3
  1657  002E                     i1___ftdiv@exp:	
  1658  002E                     i1___ftmul@cntr:	
  1659                           ; 1 bytes @ 0xE
  1660                           
  1661                           
  1662                           ; 1 bytes @ 0xE
  1663  002E                     	ds	1
  1664  002F                     i1___ftdiv@sign:	
  1665  002F                     i1___ftmul@sign:	
  1666                           ; 1 bytes @ 0xF
  1667                           
  1668                           
  1669                           ; 1 bytes @ 0xF
  1670  002F                     	ds	1
  1671  0030                     ?i1___ftadd:	
  1672  0030                     i1___ftadd@f1:	
  1673                           ; 3 bytes @ 0x10
  1674                           
  1675                           
  1676                           ; 3 bytes @ 0x10
  1677  0030                     	ds	3
  1678  0033                     i1___ftadd@f2:	
  1679                           
  1680                           ; 3 bytes @ 0x13
  1681  0033                     	ds	3
  1682  0036                     ??i1___ftadd:	
  1683                           
  1684                           ; 0 bytes @ 0x16
  1685  0036                     	ds	4
  1686  003A                     i1___ftadd@sign:	
  1687                           
  1688                           ; 1 bytes @ 0x1A
  1689  003A                     	ds	1
  1690  003B                     i1___ftadd@exp2:	
  1691                           
  1692                           ; 1 bytes @ 0x1B
  1693  003B                     	ds	1
  1694  003C                     i1___ftadd@exp1:	
  1695                           
  1696                           ; 1 bytes @ 0x1C
  1697  003C                     	ds	1
  1698  003D                     ?i1___fttol:	
  1699  003D                     i1___fttol@f1:	
  1700                           ; 4 bytes @ 0x1D
  1701                           
  1702                           
  1703                           ; 3 bytes @ 0x1D
  1704  003D                     	ds	4
  1705  0041                     ??i1___fttol:	
  1706                           
  1707                           ; 0 bytes @ 0x21
  1708  0041                     	ds	4
  1709  0045                     i1___fttol@sign1:	
  1710                           
  1711                           ; 1 bytes @ 0x25
  1712  0045                     	ds	1
  1713  0046                     i1___fttol@lval:	
  1714                           
  1715                           ; 4 bytes @ 0x26
  1716  0046                     	ds	4
  1717  004A                     i1___fttol@exp1:	
  1718                           
  1719                           ; 1 bytes @ 0x2A
  1720  004A                     	ds	1
  1721  004B                     ??_ISR_Function:	
  1722                           
  1723                           ; 0 bytes @ 0x2B
  1724  004B                     	ds	9
  1725                           
  1726                           	psect	maintext
  1727  0913                     __pmaintext:	
  1728 ;;
  1729 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1730 ;;
  1731 ;; *************** function _main *****************
  1732 ;; Defined at:
  1733 ;;		line 496 in file "main.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;		None               void
  1740 ;; Registers used:
  1741 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 17F/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1751 ;;Total ram usage:        2 bytes
  1752 ;; Hardware stack levels required when called:    6
  1753 ;; This function calls:
  1754 ;;		_Adaptive_base_pid
  1755 ;;		_Delayms
  1756 ;;		_PWM_init
  1757 ;;		_SCANENCODER1
  1758 ;;		_SCANENCODER2
  1759 ;;		_Timer0_init
  1760 ;;		_Update_PWM
  1761 ;;		___ftmul
  1762 ;;		___fttol
  1763 ;;		___lwdiv
  1764 ;;		___lwtoft
  1765 ;;		___wmul
  1766 ;;		_capture_init
  1767 ;;		_detect_display_error
  1768 ;;		_disp_hex_window1
  1769 ;;		_disp_hex_window2
  1770 ;;		_key_application
  1771 ;;		_portpin_init
  1772 ;;		_send_status
  1773 ;;		_system_init
  1774 ;;		_transmittops
  1775 ;;		_uart_init
  1776 ;; This function is called by:
  1777 ;;		Startup code after reset
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function _main
  1783  0913                     _main:	
  1784                           
  1785                           ;main.c: 499: system_init();
  1786                           
  1787                           ;incstack = 0
  1788                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1789  0913  3198  20A4  3189   	fcall	_system_init
  1790  0916                     l622:	
  1791  0916  3013               	movlw	19
  1792  0917  0024               	movlb	4	; select bank4
  1793  0918  0231               	subwf	(_delay+1)^(0+512),w
  1794  0919  3088               	movlw	136
  1795  091A  1903               	skipnz
  1796  091B  0230               	subwf	_delay^(0+512),w
  1797  091C  1803               	btfsc	3,0
  1798  091D  2924               	goto	l5232
  1799  091E  3001               	movlw	1
  1800  091F  0024               	movlb	4	; select bank4
  1801  0920  07B0               	addwf	_delay^(0+512),f
  1802  0921  3000               	movlw	0
  1803  0922  3DB1               	addwfc	(_delay+1)^(0+512),f
  1804  0923  2916               	goto	l622
  1805  0924                     l5232:	
  1806                           
  1807                           ;main.c: 501: Delayms(1000);
  1808  0924  30E8               	movlw	232
  1809  0925  0021               	movlb	1	; select bank1
  1810  0926  00A0               	movwf	Delayms@delay^(0+128)
  1811  0927  3003               	movlw	3
  1812  0928  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1813  0929  3199  21B0  3189   	fcall	_Delayms
  1814                           
  1815                           ;main.c: 502: portpin_init();
  1816  092C  3199  2155  3189   	fcall	_portpin_init
  1817                           
  1818                           ;main.c: 503: Timer0_init();
  1819  092F  3198  20D2  3189   	fcall	_Timer0_init
  1820                           
  1821                           ;main.c: 504: PWM_init();
  1822  0932  3188  2004  3189   	fcall	_PWM_init
  1823                           
  1824                           ;main.c: 505: capture_init();
  1825  0935  3198  20E3  3189   	fcall	_capture_init
  1826                           
  1827                           ;main.c: 506: uart_init();
  1828  0938  3199  2118  3189   	fcall	_uart_init
  1829                           
  1830                           ;main.c: 507: INTCONbits.GIE =1;
  1831  093B  178B               	bsf	11,7	;volatile
  1832                           
  1833                           ;main.c: 508: INTCONbits.PEIE =1;
  1834  093C  170B               	bsf	11,6	;volatile
  1835                           
  1836                           ;main.c: 511: PORTCbits.RC3=0;
  1837  093D  0020               	movlb	0	; select bank0
  1838  093E  118E               	bcf	14,3	;volatile
  1839                           
  1840                           ;main.c: 513: diswin1[0]=0x0B;
  1841  093F  300B               	movlw	11
  1842  0940  0021               	movlb	1	; select bank1
  1843  0941  00ED               	movwf	??_main^(0+128)
  1844  0942  086D               	movf	??_main^(0+128),w
  1845  0943  0022               	movlb	2	; select bank2
  1846  0944  00E4               	movwf	_diswin1^(0+256)
  1847                           
  1848                           ;main.c: 514: diswin1[1]=0x0E;
  1849  0945  300E               	movlw	14
  1850  0946  0021               	movlb	1	; select bank1
  1851  0947  00ED               	movwf	??_main^(0+128)
  1852  0948  086D               	movf	??_main^(0+128),w
  1853  0949  0022               	movlb	2	; select bank2
  1854  094A  00E5               	movwf	(_diswin1^(0+256)+1)
  1855                           
  1856                           ;main.c: 515: diswin1[2]=0x1C;
  1857  094B  301C               	movlw	28
  1858  094C  0021               	movlb	1	; select bank1
  1859  094D  00ED               	movwf	??_main^(0+128)
  1860  094E  086D               	movf	??_main^(0+128),w
  1861  094F  0022               	movlb	2	; select bank2
  1862  0950  00E6               	movwf	(_diswin1^(0+256)+2)
  1863                           
  1864                           ;main.c: 516: diswin1[3]=0x1C;
  1865  0951  301C               	movlw	28
  1866  0952  0021               	movlb	1	; select bank1
  1867  0953  00ED               	movwf	??_main^(0+128)
  1868  0954  086D               	movf	??_main^(0+128),w
  1869  0955  0022               	movlb	2	; select bank2
  1870  0956  00E7               	movwf	(_diswin1^(0+256)+3)
  1871                           
  1872                           ;main.c: 517: diswin1[4]='1'-0x30;
  1873  0957  01E8               	clrf	(_diswin1^(0+256)+4)
  1874  0958  0AE8               	incf	(_diswin1^(0+256)+4),f
  1875                           
  1876                           ;main.c: 518: diswin1[5]='0'-0x30;
  1877  0959  01E9               	clrf	(_diswin1^(0+256)+5)
  1878                           
  1879                           ;main.c: 519: TypeDP.TypeD.digitdp5=1;
  1880  095A  0020               	movlb	0	; select bank0
  1881  095B  166B               	bsf	_TypeDP,4
  1882                           
  1883                           ;main.c: 521: Delayms(2000);
  1884  095C  30D0               	movlw	208
  1885  095D  0021               	movlb	1	; select bank1
  1886  095E  00A0               	movwf	Delayms@delay^(0+128)
  1887  095F  3007               	movlw	7
  1888  0960  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1889  0961  3199  21B0  3189   	fcall	_Delayms
  1890                           
  1891                           ;main.c: 523: LATCbits.LATC0=0;
  1892  0964  0022               	movlb	2	; select bank2
  1893  0965  100E               	bcf	14,0	;volatile
  1894                           
  1895                           ;main.c: 524: TypeDP.TypeD.digitdp5=0;
  1896  0966  0020               	movlb	0	; select bank0
  1897  0967  126B               	bcf	_TypeDP,4
  1898                           
  1899                           ;main.c: 525: TypeU.LEDGROUP[0] =0x00;
  1900  0968  01E7               	clrf	_TypeU
  1901                           
  1902                           ;main.c: 526: TypeU.LEDGROUP[1] =0x00;
  1903  0969  01E8               	clrf	_TypeU+1
  1904                           
  1905                           ;main.c: 527: TypeU.TypeS.wirespeed =1;
  1906  096A  1467               	bsf	_TypeU,0
  1907                           
  1908                           ;main.c: 528: TypeU.TypeS.vtg =1;
  1909  096B  14E8               	bsf	_TypeU+1,1
  1910                           
  1911                           ;main.c: 529: TypeU.TypeS.twot =1;
  1912  096C  1667               	bsf	_TypeU,4
  1913                           
  1914                           ;main.c: 530: TypeDP.DPGROUP[0] =0x00;
  1915  096D  01EB               	clrf	_TypeDP
  1916                           
  1917                           ;main.c: 531: TypeDP.TypeD.digitdp2 =1;
  1918  096E  14EB               	bsf	_TypeDP,1
  1919                           
  1920                           ;main.c: 532: TypeDP.TypeD.digitdp5 =1;
  1921  096F  166B               	bsf	_TypeDP,4
  1922                           
  1923                           ;main.c: 534: psstatusu.psstatusbyte[0]=0x00;
  1924  0970  01ED               	clrf	_psstatusu
  1925                           
  1926                           ;main.c: 537: setcurrent=0;
  1927  0971  0022               	movlb	2	; select bank2
  1928  0972  01A8               	clrf	_setcurrent^(0+256)
  1929  0973  01A9               	clrf	(_setcurrent+1)^(0+256)
  1930                           
  1931                           ;main.c: 538: setvoltage=0;
  1932  0974  0020               	movlb	0	; select bank0
  1933  0975  01D8               	clrf	_setvoltage
  1934  0976  01D9               	clrf	_setvoltage+1
  1935                           
  1936                           ;main.c: 539: disp_hex_window1(setcurrent);
  1937  0977  0022               	movlb	2	; select bank2
  1938  0978  0829               	movf	(_setcurrent+1)^(0+256),w
  1939  0979  0021               	movlb	1	; select bank1
  1940  097A  01AF               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  1941  097B  07AF               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  1942  097C  0022               	movlb	2	; select bank2
  1943  097D  0828               	movf	_setcurrent^(0+256),w
  1944  097E  0021               	movlb	1	; select bank1
  1945  097F  01AE               	clrf	disp_hex_window1@hex_data^(0+128)
  1946  0980  07AE               	addwf	disp_hex_window1@hex_data^(0+128),f
  1947  0981  319C  2427  3189   	fcall	_disp_hex_window1
  1948                           
  1949                           ;main.c: 540: disp_hex_window2(setvoltage);
  1950  0984  0020               	movlb	0	; select bank0
  1951  0985  0859               	movf	_setvoltage+1,w
  1952  0986  0021               	movlb	1	; select bank1
  1953  0987  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  1954  0988  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  1955  0989  0020               	movlb	0	; select bank0
  1956  098A  0858               	movf	_setvoltage,w
  1957  098B  0021               	movlb	1	; select bank1
  1958  098C  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  1959  098D  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  1960  098E  319C  248B  3189   	fcall	_disp_hex_window2
  1961                           
  1962                           ;main.c: 541: TXSTAbits.TXEN =1;
  1963  0991  0023               	movlb	3	; select bank3
  1964  0992  169E               	bsf	30,5	;volatile
  1965                           
  1966                           ;main.c: 542: RCSTAbits.CREN =1;
  1967  0993  161D               	bsf	29,4	;volatile
  1968                           
  1969                           ;main.c: 543: PIE1bits.RCIE =1;
  1970  0994  0021               	movlb	1	; select bank1
  1971  0995  1691               	bsf	17,5	;volatile
  1972                           
  1973                           ;main.c: 544: INTCONbits.GIE =1;
  1974  0996  178B               	bsf	11,7	;volatile
  1975                           
  1976                           ;main.c: 545: INTCONbits.PEIE =1;
  1977  0997  170B               	bsf	11,6	;volatile
  1978                           
  1979                           ;main.c: 546: Delayms(5000);
  1980  0998  3088               	movlw	136
  1981  0999  00A0               	movwf	Delayms@delay^(0+128)
  1982  099A  3013               	movlw	19
  1983  099B  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1984  099C  3199  21B0  3189   	fcall	_Delayms
  1985                           
  1986                           ;main.c: 547: PIE1bits.TXIE =0;
  1987  099F  0021               	movlb	1	; select bank1
  1988  09A0  1211               	bcf	17,4	;volatile
  1989  09A1                     l5288:	
  1990                           ;main.c: 548: while(1)
  1991                           
  1992                           
  1993                           ;main.c: 549: {
  1994                           ;main.c: 551: if(send_statusf==1 && onesecf==0)
  1995  09A1  0022               	movlb	2	; select bank2
  1996  09A2  0857               	movf	_send_statusf^(0+256),w
  1997  09A3  3A01               	xorlw	1
  1998  09A4  1D03               	skipz
  1999  09A5  29AF               	goto	l5296
  2000  09A6  0020               	movlb	0	; select bank0
  2001  09A7  08E1               	movf	_onesecf,f	;volatile
  2002  09A8  1D03               	skipz
  2003  09A9  29AF               	goto	l5296
  2004                           
  2005                           ;main.c: 552: {
  2006                           ;main.c: 553: send_statusf=0;
  2007  09AA  0022               	movlb	2	; select bank2
  2008  09AB  01D7               	clrf	_send_statusf^(0+256)
  2009                           
  2010                           ;main.c: 554: send_status();
  2011  09AC  3199  2140  3189   	fcall	_send_status
  2012  09AF                     l5296:	
  2013                           
  2014                           ;main.c: 555: }
  2015                           ;main.c: 556: if(onesecf==1 && transmitonf==1)
  2016  09AF  0020               	movlb	0	; select bank0
  2017  09B0  0861               	movf	_onesecf,w	;volatile
  2018  09B1  3A01               	xorlw	1
  2019  09B2  1D03               	skipz
  2020  09B3  29C2               	goto	l5308
  2021  09B4  0022               	movlb	2	; select bank2
  2022  09B5  085B               	movf	_transmitonf^(0+256),w
  2023  09B6  3A01               	xorlw	1
  2024  09B7  1D03               	skipz
  2025  09B8  29C2               	goto	l5308
  2026                           
  2027                           ;main.c: 557: {
  2028                           ;main.c: 558: onesecf=0;
  2029  09B9  0020               	movlb	0	; select bank0
  2030  09BA  01E1               	clrf	_onesecf	;volatile
  2031                           
  2032                           ;main.c: 559: transmittops();
  2033  09BB  319B  2307  3189   	fcall	_transmittops
  2034                           
  2035                           ;main.c: 560: txonf=0;
  2036  09BE  0023               	movlb	3	; select bank3
  2037  09BF  01DB               	clrf	_txonf^(0+384)	;volatile
  2038                           
  2039                           ;main.c: 561: cEditfg = 0;
  2040  09C0  0022               	movlb	2	; select bank2
  2041  09C1  01B3               	clrf	_cEditfg^(0+256)
  2042  09C2                     l5308:	
  2043                           
  2044                           ;main.c: 562: }
  2045                           ;main.c: 565: if(gaschkfg == 1)
  2046  09C2  0022               	movlb	2	; select bank2
  2047  09C3  0841               	movf	_gaschkfg^(0+256),w
  2048  09C4  3A01               	xorlw	1
  2049  09C5  1D03               	skipz
  2050  09C6  29D4               	goto	l5312
  2051                           
  2052                           ;main.c: 566: {
  2053                           ;main.c: 567: disp_hex_window2(igascntr);
  2054  09C7  0023               	movlb	3	; select bank3
  2055  09C8  083B               	movf	(_igascntr+1)^(0+384),w
  2056  09C9  0021               	movlb	1	; select bank1
  2057  09CA  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  2058  09CB  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  2059  09CC  0023               	movlb	3	; select bank3
  2060  09CD  083A               	movf	_igascntr^(0+384),w
  2061  09CE  0021               	movlb	1	; select bank1
  2062  09CF  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  2063  09D0  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  2064  09D1  319C  248B  3189   	fcall	_disp_hex_window2
  2065  09D4                     l5312:	
  2066                           
  2067                           ;main.c: 568: }
  2068                           ;main.c: 570: if(universal_error==0)
  2069  09D4  0022               	movlb	2	; select bank2
  2070  09D5  08DC               	movf	_universal_error^(0+256),f	;volatile
  2071  09D6  1D03               	skipz
  2072  09D7  2FE6               	goto	l5708
  2073                           
  2074                           ;main.c: 571: {
  2075                           ;main.c: 575: if(adaptivepidf==1)
  2076  09D8  0831               	movf	_adaptivepidf^(0+256),w
  2077  09D9  3A01               	xorlw	1
  2078  09DA  1D03               	skipz
  2079  09DB  29E0               	goto	l5320
  2080                           
  2081                           ;main.c: 576: {
  2082                           ;main.c: 577: adaptivepidf=0;
  2083  09DC  01B1               	clrf	_adaptivepidf^(0+256)
  2084                           
  2085                           ;main.c: 578: Adaptive_base_pid();
  2086  09DD  3194  248D  3189   	fcall	_Adaptive_base_pid
  2087  09E0                     l5320:	
  2088                           
  2089                           ;main.c: 579: }
  2090                           ;main.c: 581: if(read_enc1f==1)
  2091  09E0  0022               	movlb	2	; select bank2
  2092  09E1  0853               	movf	_read_enc1f^(0+256),w	;volatile
  2093  09E2  3A01               	xorlw	1
  2094  09E3  1D03               	skipz
  2095  09E4  2B80               	goto	l5462
  2096                           
  2097                           ;main.c: 582: {
  2098                           ;main.c: 583: read_enc1f=0;
  2099  09E5  01D3               	clrf	_read_enc1f^(0+256)	;volatile
  2100                           
  2101                           ;main.c: 584: if(enccount==0)
  2102  09E6  08BD               	movf	_enccount^(0+256),f	;volatile
  2103  09E7  1D03               	skipz
  2104  09E8  2A8E               	goto	l5376
  2105                           
  2106                           ;main.c: 585: {
  2107                           ;main.c: 586: encod1=SCANENCODER1();
  2108  09E9  319D  256F  3189   	fcall	_SCANENCODER1
  2109  09EC  0021               	movlb	1	; select bank1
  2110  09ED  00ED               	movwf	??_main^(0+128)
  2111  09EE  086D               	movf	??_main^(0+128),w
  2112  09EF  0020               	movlb	0	; select bank0
  2113  09F0  00DD               	movwf	_encod1
  2114                           
  2115                           ;main.c: 587: mili1_100++;
  2116  09F1  3001               	movlw	1
  2117  09F2  0021               	movlb	1	; select bank1
  2118  09F3  00ED               	movwf	??_main^(0+128)
  2119  09F4  086D               	movf	??_main^(0+128),w
  2120  09F5  0022               	movlb	2	; select bank2
  2121  09F6  07C3               	addwf	_mili1_100^(0+256),f
  2122                           
  2123                           ;main.c: 588: {
  2124                           ;main.c: 589: if(encod1=='+')
  2125  09F7  0020               	movlb	0	; select bank0
  2126  09F8  085D               	movf	_encod1,w
  2127  09F9  3A2B               	xorlw	43
  2128  09FA  1D03               	skipz
  2129  09FB  2A0E               	goto	l5336
  2130                           
  2131                           ;main.c: 590: {
  2132                           ;main.c: 591: setwirespeed=setwirespeed+pluspara1;
  2133  09FC  0022               	movlb	2	; select bank2
  2134  09FD  0850               	movf	_pluspara1^(0+256),w
  2135  09FE  0020               	movlb	0	; select bank0
  2136  09FF  075A               	addwf	_setwirespeed,w
  2137  0A00  00DA               	movwf	_setwirespeed
  2138  0A01  085B               	movf	_setwirespeed+1,w
  2139  0A02  1803               	skipnc
  2140  0A03  0A5B               	incf	_setwirespeed+1,w
  2141  0A04  00DB               	movwf	_setwirespeed+1
  2142                           
  2143                           ;main.c: 592: if(setwirespeed >= 220)
  2144  0A05  3000               	movlw	0
  2145  0A06  025B               	subwf	_setwirespeed+1,w
  2146  0A07  30DC               	movlw	220
  2147  0A08  1903               	skipnz
  2148  0A09  025A               	subwf	_setwirespeed,w
  2149  0A0A  1C03               	skipc
  2150  0A0B  2A4B               	goto	l635
  2151                           
  2152                           ;main.c: 593: setwirespeed=220;
  2153  0A0C  30DC               	movlw	220
  2154  0A0D  2A48               	goto	L1
  2155  0A0E                     l5336:	
  2156                           ;main.c: 594: }
  2157                           
  2158                           
  2159                           ;main.c: 595: else if(encod1=='-')
  2160  0A0E  085D               	movf	_encod1,w
  2161  0A0F  3A2D               	xorlw	45
  2162  0A10  1D03               	skipz
  2163  0A11  2A4B               	goto	l635
  2164                           
  2165                           ;main.c: 596: {
  2166                           ;main.c: 597: if(setwirespeed >= minuspara1)
  2167  0A12  0022               	movlb	2	; select bank2
  2168  0A13  0849               	movf	_minuspara1^(0+256),w
  2169  0A14  0021               	movlb	1	; select bank1
  2170  0A15  00ED               	movwf	??_main^(0+128)
  2171  0A16  01EE               	clrf	(??_main^(0+128)+1)
  2172  0A17  086E               	movf	(??_main+1)^(0+128),w
  2173  0A18  0020               	movlb	0	; select bank0
  2174  0A19  025B               	subwf	_setwirespeed+1,w
  2175  0A1A  1D03               	skipz
  2176  0A1B  2A20               	goto	u7655
  2177  0A1C  0021               	movlb	1	; select bank1
  2178  0A1D  086D               	movf	??_main^(0+128),w
  2179  0A1E  0020               	movlb	0	; select bank0
  2180  0A1F  025A               	subwf	_setwirespeed,w
  2181  0A20                     u7655:	
  2182  0A20  1C03               	skipc
  2183  0A21  2A38               	goto	l5342
  2184                           
  2185                           ;main.c: 598: setwirespeed=setwirespeed-minuspara1;
  2186  0A22  0022               	movlb	2	; select bank2
  2187  0A23  0849               	movf	_minuspara1^(0+256),w
  2188  0A24  0021               	movlb	1	; select bank1
  2189  0A25  00ED               	movwf	??_main^(0+128)
  2190  0A26  01EE               	clrf	(??_main^(0+128)+1)
  2191  0A27  09ED               	comf	??_main^(0+128),f
  2192  0A28  09EE               	comf	(??_main^(0+128)+1),f
  2193  0A29  0AED               	incf	??_main^(0+128),f
  2194  0A2A  1903               	skipnz
  2195  0A2B  0AEE               	incf	(??_main^(0+128)+1),f
  2196  0A2C  0020               	movlb	0	; select bank0
  2197  0A2D  085A               	movf	_setwirespeed,w
  2198  0A2E  0021               	movlb	1	; select bank1
  2199  0A2F  076D               	addwf	??_main^(0+128),w
  2200  0A30  0020               	movlb	0	; select bank0
  2201  0A31  00DA               	movwf	_setwirespeed
  2202  0A32  085B               	movf	_setwirespeed+1,w
  2203  0A33  0021               	movlb	1	; select bank1
  2204  0A34  3D6E               	addwfc	(??_main+1)^(0+128),w
  2205  0A35  0020               	movlb	0	; select bank0
  2206  0A36  00DB               	movwf	_setwirespeed+1
  2207  0A37  2A40               	goto	l638
  2208  0A38                     l5342:	
  2209                           
  2210                           ;main.c: 600: setwirespeed=setwirespeed--;
  2211  0A38  085B               	movf	_setwirespeed+1,w
  2212  0A39  045A               	iorwf	_setwirespeed,w
  2213  0A3A  1903               	skipnz
  2214  0A3B  2A40               	goto	l638
  2215  0A3C  3001               	movlw	1
  2216  0A3D  02DA               	subwf	_setwirespeed,f
  2217  0A3E  3000               	movlw	0
  2218  0A3F  3BDB               	subwfb	_setwirespeed+1,f
  2219  0A40                     l638:	
  2220                           
  2221                           ;main.c: 601: if(setwirespeed <= 1)
  2222  0A40  3000               	movlw	0
  2223  0A41  025B               	subwf	_setwirespeed+1,w
  2224  0A42  3002               	movlw	2
  2225  0A43  1903               	skipnz
  2226  0A44  025A               	subwf	_setwirespeed,w
  2227  0A45  1803               	skipnc
  2228  0A46  2A4B               	goto	l635
  2229                           
  2230                           ;main.c: 602: setwirespeed=1;
  2231  0A47  3001               	movlw	1
  2232  0A48                     L1:	
  2233  0A48  00DA               	movwf	_setwirespeed
  2234  0A49  3000               	movlw	0
  2235  0A4A  00DB               	movwf	_setwirespeed+1
  2236  0A4B                     l635:	
  2237                           
  2238                           ;main.c: 603: }
  2239                           ;main.c: 604: }
  2240                           ;main.c: 605: if(mili1_100<200)
  2241  0A4B  30C8               	movlw	200
  2242  0A4C  0022               	movlb	2	; select bank2
  2243  0A4D  0243               	subwf	_mili1_100^(0+256),w
  2244  0A4E  1803               	skipnc
  2245  0A4F  2A68               	goto	l5356
  2246                           
  2247                           ;main.c: 606: {
  2248                           ;main.c: 607: if(encod1=='+')
  2249  0A50  0020               	movlb	0	; select bank0
  2250  0A51  085D               	movf	_encod1,w
  2251  0A52  3A2B               	xorlw	43
  2252  0A53  1D03               	skipz
  2253  0A54  2A5C               	goto	l5352
  2254                           
  2255                           ;main.c: 608: pluscount1++;
  2256  0A55  3001               	movlw	1
  2257  0A56  0021               	movlb	1	; select bank1
  2258  0A57  00ED               	movwf	??_main^(0+128)
  2259  0A58  086D               	movf	??_main^(0+128),w
  2260  0A59  0022               	movlb	2	; select bank2
  2261  0A5A  07CE               	addwf	_pluscount1^(0+256),f
  2262  0A5B  2A87               	goto	l5374
  2263  0A5C                     l5352:	
  2264                           
  2265                           ;main.c: 609: else if(encod1=='-')
  2266  0A5C  0020               	movlb	0	; select bank0
  2267  0A5D  085D               	movf	_encod1,w
  2268  0A5E  3A2D               	xorlw	45
  2269  0A5F  1D03               	skipz
  2270  0A60  2A87               	goto	l5374
  2271                           
  2272                           ;main.c: 610: minuscount1++;
  2273  0A61  3001               	movlw	1
  2274  0A62  0021               	movlb	1	; select bank1
  2275  0A63  00ED               	movwf	??_main^(0+128)
  2276  0A64  086D               	movf	??_main^(0+128),w
  2277  0A65  0022               	movlb	2	; select bank2
  2278  0A66  07C7               	addwf	_minuscount1^(0+256),f
  2279                           
  2280                           ;main.c: 611: }
  2281  0A67  2A87               	goto	l5374
  2282  0A68                     l5356:	
  2283                           
  2284                           ;main.c: 612: else if(mili1_100>=200)
  2285  0A68  30C8               	movlw	200
  2286  0A69  0243               	subwf	_mili1_100^(0+256),w
  2287  0A6A  1C03               	skipc
  2288  0A6B  2A87               	goto	l5374
  2289                           
  2290                           ;main.c: 613: {
  2291                           ;main.c: 614: mili1_100=0;
  2292  0A6C  01C3               	clrf	_mili1_100^(0+256)
  2293                           
  2294                           ;main.c: 615: pluspara1=pluscount1>>1;
  2295  0A6D  364E               	lsrf	_pluscount1^(0+256),w
  2296  0A6E  0021               	movlb	1	; select bank1
  2297  0A6F  00ED               	movwf	??_main^(0+128)
  2298  0A70  086D               	movf	??_main^(0+128),w
  2299  0A71  0022               	movlb	2	; select bank2
  2300  0A72  00D0               	movwf	_pluspara1^(0+256)
  2301                           
  2302                           ;main.c: 616: minuspara1=minuscount1>>1;
  2303  0A73  3647               	lsrf	_minuscount1^(0+256),w
  2304  0A74  0021               	movlb	1	; select bank1
  2305  0A75  00ED               	movwf	??_main^(0+128)
  2306  0A76  086D               	movf	??_main^(0+128),w
  2307  0A77  0022               	movlb	2	; select bank2
  2308  0A78  00C9               	movwf	_minuspara1^(0+256)
  2309                           
  2310                           ;main.c: 617: if(pluspara1<=1)
  2311  0A79  3002               	movlw	2
  2312  0A7A  0250               	subwf	_pluspara1^(0+256),w
  2313  0A7B  1803               	skipnc
  2314  0A7C  2A7F               	goto	l5368
  2315                           
  2316                           ;main.c: 618: pluspara1=1;
  2317  0A7D  01D0               	clrf	_pluspara1^(0+256)
  2318  0A7E  0AD0               	incf	_pluspara1^(0+256),f
  2319  0A7F                     l5368:	
  2320                           
  2321                           ;main.c: 619: if(minuspara1<=1)
  2322  0A7F  3002               	movlw	2
  2323  0A80  0249               	subwf	_minuspara1^(0+256),w
  2324  0A81  1803               	skipnc
  2325  0A82  2A85               	goto	l5372
  2326                           
  2327                           ;main.c: 620: minuspara1=1;
  2328  0A83  01C9               	clrf	_minuspara1^(0+256)
  2329  0A84  0AC9               	incf	_minuspara1^(0+256),f
  2330  0A85                     l5372:	
  2331                           
  2332                           ;main.c: 621: pluscount1=0;
  2333  0A85  01CE               	clrf	_pluscount1^(0+256)
  2334                           
  2335                           ;main.c: 622: minuscount1=0;
  2336  0A86  01C7               	clrf	_minuscount1^(0+256)
  2337  0A87                     l5374:	
  2338                           
  2339                           ;main.c: 623: }
  2340                           ;main.c: 624: enccount++;
  2341  0A87  3001               	movlw	1
  2342  0A88  0021               	movlb	1	; select bank1
  2343  0A89  00ED               	movwf	??_main^(0+128)
  2344  0A8A  086D               	movf	??_main^(0+128),w
  2345  0A8B  0022               	movlb	2	; select bank2
  2346  0A8C  07BD               	addwf	_enccount^(0+256),f	;volatile
  2347                           
  2348                           ;main.c: 625: }
  2349  0A8D  2B80               	goto	l5462
  2350  0A8E                     l5376:	
  2351                           
  2352                           ;main.c: 626: else
  2353                           ;main.c: 627: {
  2354                           ;main.c: 628: mili2_100++;
  2355  0A8E  3001               	movlw	1
  2356  0A8F  0021               	movlb	1	; select bank1
  2357  0A90  00ED               	movwf	??_main^(0+128)
  2358  0A91  086D               	movf	??_main^(0+128),w
  2359  0A92  0022               	movlb	2	; select bank2
  2360  0A93  07C4               	addwf	_mili2_100^(0+256),f
  2361                           
  2362                           ;main.c: 629: encod2=SCANENCODER2();
  2363  0A94  319C  24F1  3189   	fcall	_SCANENCODER2
  2364  0A97  0021               	movlb	1	; select bank1
  2365  0A98  00ED               	movwf	??_main^(0+128)
  2366  0A99  086D               	movf	??_main^(0+128),w
  2367  0A9A  0020               	movlb	0	; select bank0
  2368  0A9B  00DE               	movwf	_encod2
  2369                           
  2370                           ;main.c: 630: if(TypeU.TypeS.vtg==1)
  2371  0A9C  1CE8               	btfss	_TypeU+1,1
  2372  0A9D  2AF6               	goto	l650
  2373                           
  2374                           ;main.c: 631: {
  2375                           ;main.c: 632: if(encod2=='+')
  2376  0A9E  085E               	movf	_encod2,w
  2377  0A9F  3A2B               	xorlw	43
  2378  0AA0  1D03               	skipz
  2379  0AA1  2AB6               	goto	l5390
  2380                           
  2381                           ;main.c: 633: {
  2382                           ;main.c: 634: setvoltage=setvoltage+pluspara2;
  2383  0AA2  0022               	movlb	2	; select bank2
  2384  0AA3  0851               	movf	_pluspara2^(0+256),w
  2385  0AA4  0020               	movlb	0	; select bank0
  2386  0AA5  0758               	addwf	_setvoltage,w
  2387  0AA6  00D8               	movwf	_setvoltage
  2388  0AA7  0859               	movf	_setvoltage+1,w
  2389  0AA8  1803               	skipnc
  2390  0AA9  0A59               	incf	_setvoltage+1,w
  2391  0AAA  00D9               	movwf	_setvoltage+1
  2392                           
  2393                           ;main.c: 635: if(setvoltage>440)
  2394  0AAB  3001               	movlw	1
  2395  0AAC  0259               	subwf	_setvoltage+1,w
  2396  0AAD  30B9               	movlw	185
  2397  0AAE  1903               	skipnz
  2398  0AAF  0258               	subwf	_setvoltage,w
  2399  0AB0  1C03               	skipc
  2400  0AB1  2AF2               	goto	l5402
  2401                           
  2402                           ;main.c: 636: setvoltage=440;
  2403  0AB2  30B8               	movlw	184
  2404  0AB3  00D8               	movwf	_setvoltage
  2405  0AB4  3001               	movlw	1
  2406  0AB5  2AF1               	goto	L6
  2407  0AB6                     l5390:	
  2408                           ;main.c: 638: }
  2409                           
  2410                           ;main.c: 637: cEditfg = 1;
  2411                           
  2412                           
  2413                           ;main.c: 639: else if(encod2=='-')
  2414  0AB6  0020               	movlb	0	; select bank0
  2415  0AB7  085E               	movf	_encod2,w
  2416  0AB8  3A2D               	xorlw	45
  2417  0AB9  1D03               	skipz
  2418  0ABA  2B3F               	goto	l5434
  2419                           
  2420                           ;main.c: 640: {
  2421                           ;main.c: 641: if(setvoltage>=minuspara2)
  2422  0ABB  0860               	movf	_minuspara2,w
  2423  0ABC  0021               	movlb	1	; select bank1
  2424  0ABD  00ED               	movwf	??_main^(0+128)
  2425  0ABE  01EE               	clrf	(??_main^(0+128)+1)
  2426  0ABF  086E               	movf	(??_main+1)^(0+128),w
  2427  0AC0  0020               	movlb	0	; select bank0
  2428  0AC1  0259               	subwf	_setvoltage+1,w
  2429  0AC2  1D03               	skipz
  2430  0AC3  2AC8               	goto	u7785
  2431  0AC4  0021               	movlb	1	; select bank1
  2432  0AC5  086D               	movf	??_main^(0+128),w
  2433  0AC6  0020               	movlb	0	; select bank0
  2434  0AC7  0258               	subwf	_setvoltage,w
  2435  0AC8                     u7785:	
  2436  0AC8  1C03               	skipc
  2437  0AC9  2ADF               	goto	l5396
  2438                           
  2439                           ;main.c: 642: setvoltage=setvoltage-minuspara2;
  2440  0ACA  0860               	movf	_minuspara2,w
  2441  0ACB  0021               	movlb	1	; select bank1
  2442  0ACC  00ED               	movwf	??_main^(0+128)
  2443  0ACD  01EE               	clrf	(??_main^(0+128)+1)
  2444  0ACE  09ED               	comf	??_main^(0+128),f
  2445  0ACF  09EE               	comf	(??_main^(0+128)+1),f
  2446  0AD0  0AED               	incf	??_main^(0+128),f
  2447  0AD1  1903               	skipnz
  2448  0AD2  0AEE               	incf	(??_main^(0+128)+1),f
  2449  0AD3  0020               	movlb	0	; select bank0
  2450  0AD4  0858               	movf	_setvoltage,w
  2451  0AD5  0021               	movlb	1	; select bank1
  2452  0AD6  076D               	addwf	??_main^(0+128),w
  2453  0AD7  0020               	movlb	0	; select bank0
  2454  0AD8  00D8               	movwf	_setvoltage
  2455  0AD9  0859               	movf	_setvoltage+1,w
  2456  0ADA  0021               	movlb	1	; select bank1
  2457  0ADB  3D6E               	addwfc	(??_main+1)^(0+128),w
  2458  0ADC  0020               	movlb	0	; select bank0
  2459  0ADD  00D9               	movwf	_setvoltage+1
  2460  0ADE  2AE7               	goto	l656
  2461  0ADF                     l5396:	
  2462                           
  2463                           ;main.c: 644: setvoltage=setvoltage--;
  2464  0ADF  0859               	movf	_setvoltage+1,w
  2465  0AE0  0458               	iorwf	_setvoltage,w
  2466  0AE1  1903               	skipnz
  2467  0AE2  2AE7               	goto	l656
  2468  0AE3  3001               	movlw	1
  2469  0AE4  02D8               	subwf	_setvoltage,f
  2470  0AE5  3000               	movlw	0
  2471  0AE6  3BD9               	subwfb	_setvoltage+1,f
  2472  0AE7                     l656:	
  2473                           
  2474                           ;main.c: 646: if(setvoltage<=140)
  2475  0AE7  3000               	movlw	0
  2476  0AE8  0259               	subwf	_setvoltage+1,w
  2477  0AE9  308D               	movlw	141
  2478  0AEA  1903               	skipnz
  2479  0AEB  0258               	subwf	_setvoltage,w
  2480  0AEC  1803               	skipnc
  2481  0AED  2AF2               	goto	l5402
  2482                           
  2483                           ;main.c: 647: setvoltage=140;
  2484  0AEE  308C               	movlw	140
  2485  0AEF  00D8               	movwf	_setvoltage
  2486  0AF0  3000               	movlw	0
  2487  0AF1                     L6:	
  2488  0AF1  00D9               	movwf	_setvoltage+1
  2489  0AF2                     l5402:	
  2490                           
  2491                           ;main.c: 648: cEditfg = 1;
  2492  0AF2  0022               	movlb	2	; select bank2
  2493  0AF3  01B3               	clrf	_cEditfg^(0+256)
  2494  0AF4  0AB3               	incf	_cEditfg^(0+256),f
  2495                           
  2496                           ;main.c: 649: }
  2497                           ;main.c: 650: }
  2498  0AF5  2B3F               	goto	l5434
  2499  0AF6                     l650:	
  2500                           
  2501                           ;main.c: 651: else if(TypeU.TypeS.arclength==1)
  2502  0AF6  1D67               	btfss	_TypeU,2
  2503  0AF7  2B3F               	goto	l5434
  2504                           
  2505                           ;main.c: 652: {
  2506                           ;main.c: 653: if(encod2=='+')
  2507  0AF8  085E               	movf	_encod2,w
  2508  0AF9  3A2B               	xorlw	43
  2509  0AFA  1D03               	skipz
  2510  0AFB  2B22               	goto	l5420
  2511                           
  2512                           ;main.c: 654: {
  2513                           ;main.c: 655: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength+pluspara2;
  2514  0AFC  0024               	movlb	4	; select bank4
  2515  0AFD  0849               	movf	(_pstowfstru^(0+512)+7),w
  2516  0AFE  0022               	movlb	2	; select bank2
  2517  0AFF  0751               	addwf	_pluspara2^(0+256),w
  2518  0B00  0021               	movlb	1	; select bank1
  2519  0B01  00ED               	movwf	??_main^(0+128)
  2520  0B02  086D               	movf	??_main^(0+128),w
  2521  0B03  0024               	movlb	4	; select bank4
  2522  0B04  00C9               	movwf	(_pstowfstru^(0+512)+7)
  2523                           
  2524                           ;main.c: 657: if(weldmode=='P')
  2525  0B05  0020               	movlb	0	; select bank0
  2526  0B06  0866               	movf	_weldmode,w	;volatile
  2527  0B07  3A50               	xorlw	80
  2528  0B08  1D03               	skipz
  2529  0B09  2B11               	goto	l5414
  2530                           
  2531                           ;main.c: 658: {
  2532                           ;main.c: 659: if(pstowfstru.pstowfstrs.arclength>80)
  2533  0B0A  3051               	movlw	81
  2534  0B0B  0024               	movlb	4	; select bank4
  2535  0B0C  0249               	subwf	(_pstowfstru^(0+512)+7),w
  2536  0B0D  1C03               	skipc
  2537  0B0E  2B3F               	goto	l5434
  2538                           
  2539                           ;main.c: 660: pstowfstru.pstowfstrs.arclength=80;
  2540  0B0F  3050               	movlw	80
  2541  0B10  2B1C               	goto	L2
  2542  0B11                     l5414:	
  2543                           ;main.c: 661: }
  2544                           
  2545                           
  2546                           ;main.c: 662: else if(weldmode=='G')
  2547  0B11  0020               	movlb	0	; select bank0
  2548  0B12  0866               	movf	_weldmode,w	;volatile
  2549  0B13  3A47               	xorlw	71
  2550  0B14  1D03               	skipz
  2551  0B15  2B3F               	goto	l5434
  2552                           
  2553                           ;main.c: 663: {
  2554                           ;main.c: 664: if(pstowfstru.pstowfstrs.arclength>40)
  2555  0B16  3029               	movlw	41
  2556  0B17  0024               	movlb	4	; select bank4
  2557  0B18  0249               	subwf	(_pstowfstru^(0+512)+7),w
  2558  0B19  1C03               	skipc
  2559  0B1A  2B3F               	goto	l5434
  2560                           
  2561                           ;main.c: 665: pstowfstru.pstowfstrs.arclength=40;
  2562  0B1B  3028               	movlw	40
  2563  0B1C                     L2:	
  2564  0B1C  0021               	movlb	1	; select bank1
  2565  0B1D  00ED               	movwf	??_main^(0+128)
  2566  0B1E  086D               	movf	??_main^(0+128),w
  2567  0B1F  0024               	movlb	4	; select bank4
  2568  0B20  00C9               	movwf	(_pstowfstru^(0+512)+7)
  2569                           
  2570                           ;main.c: 666: }
  2571                           ;main.c: 670: }
  2572  0B21  2B3F               	goto	l5434
  2573  0B22                     l5420:	
  2574                           
  2575                           ;main.c: 671: else if(encod2=='-')
  2576  0B22  0020               	movlb	0	; select bank0
  2577  0B23  085E               	movf	_encod2,w
  2578  0B24  3A2D               	xorlw	45
  2579  0B25  1D03               	skipz
  2580  0B26  2B3F               	goto	l5434
  2581                           
  2582                           ;main.c: 672: {
  2583                           ;main.c: 673: if(pstowfstru.pstowfstrs.arclength>=minuspara2)
  2584  0B27  0860               	movf	_minuspara2,w
  2585  0B28  0024               	movlb	4	; select bank4
  2586  0B29  0249               	subwf	(_pstowfstru^(0+512)+7),w
  2587  0B2A  1C03               	skipc
  2588  0B2B  2B37               	goto	l5426
  2589                           
  2590                           ;main.c: 674: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength-minuspara2
      +                          ;
  2591  0B2C  0020               	movlb	0	; select bank0
  2592  0B2D  0360               	decf	_minuspara2,w
  2593  0B2E  3AFF               	xorlw	255
  2594  0B2F  0024               	movlb	4	; select bank4
  2595  0B30  0749               	addwf	(_pstowfstru^(0+512)+7),w
  2596  0B31  0021               	movlb	1	; select bank1
  2597  0B32  00ED               	movwf	??_main^(0+128)
  2598  0B33  086D               	movf	??_main^(0+128),w
  2599  0B34  0024               	movlb	4	; select bank4
  2600  0B35  00C9               	movwf	(_pstowfstru^(0+512)+7)
  2601  0B36  2B3C               	goto	l5430
  2602  0B37                     l5426:	
  2603                           
  2604                           ;main.c: 676: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength--;
  2605  0B37  0849               	movf	(_pstowfstru^(0+512)+7),w
  2606  0B38  1903               	btfsc	3,2
  2607  0B39  2B3C               	goto	l5430
  2608  0B3A  3001               	movlw	1
  2609  0B3B  02C9               	subwf	(_pstowfstru^(0+512)+7),f
  2610  0B3C                     l5430:	
  2611                           
  2612                           ;main.c: 678: if(pstowfstru.pstowfstrs.arclength<=0)
  2613  0B3C  08C9               	movf	(_pstowfstru^(0+512)+7),f
  2614  0B3D  1903               	btfsc	3,2
  2615                           
  2616                           ;main.c: 679: pstowfstru.pstowfstrs.arclength=0;
  2617  0B3E  01C9               	clrf	(_pstowfstru^(0+512)+7)
  2618  0B3F                     l5434:	
  2619                           
  2620                           ;main.c: 680: }
  2621                           ;main.c: 681: }
  2622                           ;main.c: 682: if(mili2_100<200)
  2623  0B3F  30C8               	movlw	200
  2624  0B40  0022               	movlb	2	; select bank2
  2625  0B41  0244               	subwf	_mili2_100^(0+256),w
  2626  0B42  1803               	skipnc
  2627  0B43  2B5C               	goto	l5444
  2628                           
  2629                           ;main.c: 683: {
  2630                           ;main.c: 684: if(encod2=='+')
  2631  0B44  0020               	movlb	0	; select bank0
  2632  0B45  085E               	movf	_encod2,w
  2633  0B46  3A2B               	xorlw	43
  2634  0B47  1D03               	skipz
  2635  0B48  2B50               	goto	l5440
  2636                           
  2637                           ;main.c: 685: pluscount2++;
  2638  0B49  3001               	movlw	1
  2639  0B4A  0021               	movlb	1	; select bank1
  2640  0B4B  00ED               	movwf	??_main^(0+128)
  2641  0B4C  086D               	movf	??_main^(0+128),w
  2642  0B4D  0022               	movlb	2	; select bank2
  2643  0B4E  07CF               	addwf	_pluscount2^(0+256),f
  2644  0B4F  2B7E               	goto	l677
  2645  0B50                     l5440:	
  2646                           
  2647                           ;main.c: 686: else if(encod2=='-')
  2648  0B50  0020               	movlb	0	; select bank0
  2649  0B51  085E               	movf	_encod2,w
  2650  0B52  3A2D               	xorlw	45
  2651  0B53  1D03               	skipz
  2652  0B54  2B7E               	goto	l677
  2653                           
  2654                           ;main.c: 687: minuscount2++;
  2655  0B55  3001               	movlw	1
  2656  0B56  0021               	movlb	1	; select bank1
  2657  0B57  00ED               	movwf	??_main^(0+128)
  2658  0B58  086D               	movf	??_main^(0+128),w
  2659  0B59  0022               	movlb	2	; select bank2
  2660  0B5A  07C8               	addwf	_minuscount2^(0+256),f
  2661                           
  2662                           ;main.c: 688: }
  2663  0B5B  2B7E               	goto	l677
  2664  0B5C                     l5444:	
  2665                           
  2666                           ;main.c: 689: else if(mili2_100>=200)
  2667  0B5C  30C8               	movlw	200
  2668  0B5D  0244               	subwf	_mili2_100^(0+256),w
  2669  0B5E  1C03               	skipc
  2670  0B5F  2B7E               	goto	l677
  2671                           
  2672                           ;main.c: 690: {
  2673                           ;main.c: 691: mili2_100=0;
  2674  0B60  01C4               	clrf	_mili2_100^(0+256)
  2675                           
  2676                           ;main.c: 692: pluspara2=pluscount2;
  2677  0B61  084F               	movf	_pluscount2^(0+256),w
  2678  0B62  0021               	movlb	1	; select bank1
  2679  0B63  00ED               	movwf	??_main^(0+128)
  2680  0B64  086D               	movf	??_main^(0+128),w
  2681  0B65  0022               	movlb	2	; select bank2
  2682  0B66  00D1               	movwf	_pluspara2^(0+256)
  2683                           
  2684                           ;main.c: 693: minuspara2=minuscount2;
  2685  0B67  0848               	movf	_minuscount2^(0+256),w
  2686  0B68  0021               	movlb	1	; select bank1
  2687  0B69  00ED               	movwf	??_main^(0+128)
  2688  0B6A  086D               	movf	??_main^(0+128),w
  2689  0B6B  0020               	movlb	0	; select bank0
  2690  0B6C  00E0               	movwf	_minuspara2
  2691                           
  2692                           ;main.c: 694: if(pluspara2<=1)
  2693  0B6D  3002               	movlw	2
  2694  0B6E  0022               	movlb	2	; select bank2
  2695  0B6F  0251               	subwf	_pluspara2^(0+256),w
  2696  0B70  1803               	skipnc
  2697  0B71  2B74               	goto	l5456
  2698                           
  2699                           ;main.c: 695: pluspara2=1;
  2700  0B72  01D1               	clrf	_pluspara2^(0+256)
  2701  0B73  0AD1               	incf	_pluspara2^(0+256),f
  2702  0B74                     l5456:	
  2703                           
  2704                           ;main.c: 696: if(minuspara2<=1)
  2705  0B74  3002               	movlw	2
  2706  0B75  0020               	movlb	0	; select bank0
  2707  0B76  0260               	subwf	_minuspara2,w
  2708  0B77  1803               	skipnc
  2709  0B78  2B7B               	goto	l5460
  2710                           
  2711                           ;main.c: 697: minuspara2=1;
  2712  0B79  01E0               	clrf	_minuspara2
  2713  0B7A  0AE0               	incf	_minuspara2,f
  2714  0B7B                     l5460:	
  2715                           
  2716                           ;main.c: 698: pluscount2=0;
  2717  0B7B  0022               	movlb	2	; select bank2
  2718  0B7C  01CF               	clrf	_pluscount2^(0+256)
  2719                           
  2720                           ;main.c: 699: minuscount2=0;
  2721  0B7D  01C8               	clrf	_minuscount2^(0+256)
  2722  0B7E                     l677:	
  2723                           
  2724                           ;main.c: 700: }
  2725                           ;main.c: 701: enccount=0;
  2726  0B7E  0022               	movlb	2	; select bank2
  2727  0B7F  01BD               	clrf	_enccount^(0+256)	;volatile
  2728  0B80                     l5462:	
  2729                           
  2730                           ;main.c: 702: }
  2731                           ;main.c: 703: }
  2732                           ;main.c: 707: if(prevkey!=key)
  2733  0B80  086E               	movf	_prevkey^(0+256),w	;volatile
  2734  0B81  0021               	movlb	1	; select bank1
  2735  0B82  066F               	xorwf	_key^(0+128),w	;volatile
  2736  0B83  1903               	skipnz
  2737  0B84  2B9D               	goto	l5474
  2738                           
  2739                           ;main.c: 708: {
  2740                           ;main.c: 710: key_application(key);
  2741  0B85  086F               	movf	_key^(0+128),w	;volatile
  2742  0B86  3186  269B  3189   	fcall	_key_application
  2743                           
  2744                           ;main.c: 711: if(key!=0)
  2745  0B89  0021               	movlb	1	; select bank1
  2746  0B8A  086F               	movf	_key^(0+128),w	;volatile
  2747  0B8B  1903               	btfsc	3,2
  2748  0B8C  2B9D               	goto	l5474
  2749                           
  2750                           ;main.c: 712: {
  2751                           ;main.c: 713: count_1ms=0;
  2752  0B8D  0023               	movlb	3	; select bank3
  2753  0B8E  01B2               	clrf	_count_1ms^(0+384)	;volatile
  2754  0B8F  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  2755                           
  2756                           ;main.c: 714: onesecf=1;
  2757  0B90  3001               	movlw	1
  2758  0B91  0021               	movlb	1	; select bank1
  2759  0B92  00ED               	movwf	??_main^(0+128)
  2760  0B93  086D               	movf	??_main^(0+128),w
  2761  0B94  0020               	movlb	0	; select bank0
  2762  0B95  00E1               	movwf	_onesecf	;volatile
  2763                           
  2764                           ;main.c: 715: txonf=1;
  2765  0B96  3001               	movlw	1
  2766  0B97  0021               	movlb	1	; select bank1
  2767  0B98  00ED               	movwf	??_main^(0+128)
  2768  0B99  086D               	movf	??_main^(0+128),w
  2769  0B9A  0023               	movlb	3	; select bank3
  2770  0B9B  00DB               	movwf	_txonf^(0+384)	;volatile
  2771  0B9C  0021               	movlb	1	; select bank1
  2772  0B9D                     l5474:	
  2773                           
  2774                           ;main.c: 716: }
  2775                           ;main.c: 717: }
  2776                           ;main.c: 718: prevkey=key;
  2777  0B9D  0021               	movlb	1	; select bank1
  2778  0B9E  086F               	movf	_key^(0+128),w	;volatile
  2779  0B9F  00ED               	movwf	??_main^(0+128)
  2780  0BA0  086D               	movf	??_main^(0+128),w
  2781  0BA1  0022               	movlb	2	; select bank2
  2782  0BA2  00EE               	movwf	_prevkey^(0+256)	;volatile
  2783                           
  2784                           ;main.c: 722: if(psstatusu.psstatuss.weldoncyclestrt!=1)
  2785  0BA3  0020               	movlb	0	; select bank0
  2786  0BA4  196D               	btfsc	_psstatusu,2
  2787  0BA5  2D48               	goto	l683
  2788                           
  2789                           ;main.c: 723: {
  2790                           ;main.c: 724: if( (prevsetwirespeed!=setwirespeed) || (prevsetcurrent!=setcurrent) || di
      +                          spupdatef==1 )
  2791  0BA6  085B               	movf	_setwirespeed+1,w
  2792  0BA7  0023               	movlb	3	; select bank3
  2793  0BA8  0647               	xorwf	(_prevsetwirespeed+1)^(0+384),w
  2794  0BA9  1D03               	skipz
  2795  0BAA  2BAF               	goto	u8005
  2796  0BAB  0020               	movlb	0	; select bank0
  2797  0BAC  085A               	movf	_setwirespeed,w
  2798  0BAD  0023               	movlb	3	; select bank3
  2799  0BAE  0646               	xorwf	_prevsetwirespeed^(0+384),w
  2800  0BAF                     u8005:	
  2801  0BAF  1D03               	skipz
  2802  0BB0  2BC2               	goto	l5484
  2803  0BB1  0022               	movlb	2	; select bank2
  2804  0BB2  0829               	movf	(_setcurrent+1)^(0+256),w
  2805  0BB3  0023               	movlb	3	; select bank3
  2806  0BB4  0643               	xorwf	(_prevsetcurrent+1)^(0+384),w
  2807  0BB5  1D03               	skipz
  2808  0BB6  2BBB               	goto	u8015
  2809  0BB7  0022               	movlb	2	; select bank2
  2810  0BB8  0828               	movf	_setcurrent^(0+256),w
  2811  0BB9  0023               	movlb	3	; select bank3
  2812  0BBA  0642               	xorwf	_prevsetcurrent^(0+384),w
  2813  0BBB                     u8015:	
  2814  0BBB  1D03               	skipz
  2815  0BBC  2BC2               	goto	l5484
  2816  0BBD  0020               	movlb	0	; select bank0
  2817  0BBE  086F               	movf	_dispupdatef,w	;volatile
  2818  0BBF  3A01               	xorlw	1
  2819  0BC0  1D03               	skipz
  2820  0BC1  2C1E               	goto	l5508
  2821  0BC2                     l5484:	
  2822                           
  2823                           ;main.c: 725: {
  2824                           ;main.c: 726: if(prevsetwirespeed!=setwirespeed)
  2825  0BC2  0020               	movlb	0	; select bank0
  2826  0BC3  085B               	movf	_setwirespeed+1,w
  2827  0BC4  0023               	movlb	3	; select bank3
  2828  0BC5  0647               	xorwf	(_prevsetwirespeed+1)^(0+384),w
  2829  0BC6  1D03               	skipz
  2830  0BC7  2BCC               	goto	u8035
  2831  0BC8  0020               	movlb	0	; select bank0
  2832  0BC9  085A               	movf	_setwirespeed,w
  2833  0BCA  0023               	movlb	3	; select bank3
  2834  0BCB  0646               	xorwf	_prevsetwirespeed^(0+384),w
  2835  0BCC                     u8035:	
  2836  0BCC  1903               	skipnz
  2837  0BCD  2BD1               	goto	l687
  2838                           
  2839                           ;main.c: 727: {
  2840                           ;main.c: 728: wfspeedchangef=1;
  2841  0BCE  0022               	movlb	2	; select bank2
  2842  0BCF  01EF               	clrf	_wfspeedchangef^(0+256)
  2843  0BD0  0AEF               	incf	_wfspeedchangef^(0+256),f
  2844  0BD1                     l687:	
  2845                           
  2846                           ;main.c: 729: }
  2847                           ;main.c: 730: if(TypeU.TypeS.wirespeed==1)
  2848  0BD1  0020               	movlb	0	; select bank0
  2849  0BD2  1C67               	btfss	_TypeU,0
  2850  0BD3  2BE1               	goto	l688
  2851                           
  2852                           ;main.c: 731: {
  2853                           ;main.c: 732: TypeU.TypeS.wirespeed=1;
  2854  0BD4  1467               	bsf	_TypeU,0
  2855                           
  2856                           ;main.c: 733: TypeU.TypeS.amp=0;
  2857  0BD5  1068               	bcf	_TypeU+1,0
  2858                           
  2859                           ;main.c: 734: TypeU.TypeS.thickness=0;
  2860  0BD6  10E7               	bcf	_TypeU,1
  2861                           
  2862                           ;main.c: 736: TypeDP.TypeD.digitdp1 =0;
  2863  0BD7  106B               	bcf	_TypeDP,0
  2864                           
  2865                           ;main.c: 737: TypeDP.TypeD.digitdp2 =1;
  2866  0BD8  14EB               	bsf	_TypeDP,1
  2867                           
  2868                           ;main.c: 738: TypeDP.TypeD.digitdp3 =0;
  2869  0BD9  116B               	bcf	_TypeDP,2
  2870                           
  2871                           ;main.c: 739: disp_hex_window1(setwirespeed);
  2872  0BDA  085B               	movf	_setwirespeed+1,w
  2873  0BDB  0021               	movlb	1	; select bank1
  2874  0BDC  01AF               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  2875  0BDD  07AF               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  2876  0BDE  0020               	movlb	0	; select bank0
  2877  0BDF  085A               	movf	_setwirespeed,w
  2878  0BE0  2BF0               	goto	L9
  2879  0BE1                     l688:	
  2880                           ;main.c: 740: }
  2881                           
  2882                           
  2883                           ;main.c: 741: else if(TypeU.TypeS.amp==1)
  2884  0BE1  1C68               	btfss	_TypeU+1,0
  2885  0BE2  2BF4               	goto	l690
  2886                           
  2887                           ;main.c: 742: {
  2888                           ;main.c: 743: TypeU.TypeS.wirespeed=0;
  2889  0BE3  1067               	bcf	_TypeU,0
  2890                           
  2891                           ;main.c: 744: TypeU.TypeS.amp=1;
  2892  0BE4  1468               	bsf	_TypeU+1,0
  2893                           
  2894                           ;main.c: 745: TypeU.TypeS.thickness=0;
  2895  0BE5  10E7               	bcf	_TypeU,1
  2896                           
  2897                           ;main.c: 746: TypeDP.TypeD.digitdp1 =0;
  2898  0BE6  106B               	bcf	_TypeDP,0
  2899                           
  2900                           ;main.c: 747: TypeDP.TypeD.digitdp2 =0;
  2901  0BE7  10EB               	bcf	_TypeDP,1
  2902                           
  2903                           ;main.c: 748: TypeDP.TypeD.digitdp3 =0;
  2904  0BE8  116B               	bcf	_TypeDP,2
  2905                           
  2906                           ;main.c: 749: disp_hex_window1(setcurrent);
  2907  0BE9  0022               	movlb	2	; select bank2
  2908  0BEA  0829               	movf	(_setcurrent+1)^(0+256),w
  2909  0BEB  0021               	movlb	1	; select bank1
  2910  0BEC  01AF               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  2911  0BED  07AF               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  2912  0BEE  0022               	movlb	2	; select bank2
  2913  0BEF  0828               	movf	_setcurrent^(0+256),w
  2914  0BF0                     L9:	
  2915  0BF0  0021               	movlb	1	; select bank1
  2916  0BF1  01AE               	clrf	disp_hex_window1@hex_data^(0+128)
  2917  0BF2  07AE               	addwf	disp_hex_window1@hex_data^(0+128),f
  2918  0BF3  2C05               	goto	L7
  2919  0BF4                     l690:	
  2920                           ;main.c: 750: }
  2921                           
  2922                           
  2923                           ;main.c: 751: else if(TypeU.TypeS.thickness==1)
  2924  0BF4  1CE7               	btfss	_TypeU,1
  2925  0BF5  2C08               	goto	l5500
  2926                           
  2927                           ;main.c: 752: {
  2928                           ;main.c: 753: TypeU.TypeS.wirespeed =0;
  2929  0BF6  1067               	bcf	_TypeU,0
  2930                           
  2931                           ;main.c: 754: TypeU.TypeS.amp =0;
  2932  0BF7  1068               	bcf	_TypeU+1,0
  2933                           
  2934                           ;main.c: 755: TypeU.TypeS.thickness =1;
  2935  0BF8  14E7               	bsf	_TypeU,1
  2936                           
  2937                           ;main.c: 756: TypeDP.TypeD.digitdp1 =0;
  2938  0BF9  106B               	bcf	_TypeDP,0
  2939                           
  2940                           ;main.c: 757: TypeDP.TypeD.digitdp2 =1;
  2941  0BFA  14EB               	bsf	_TypeDP,1
  2942                           
  2943                           ;main.c: 758: TypeDP.TypeD.digitdp3 =0;
  2944  0BFB  116B               	bcf	_TypeDP,2
  2945                           
  2946                           ;main.c: 759: disp_hex_window1(pstowfstru.pstowfstrs.setthickness);
  2947  0BFC  0024               	movlb	4	; select bank4
  2948  0BFD  0846               	movf	(_pstowfstru^(0+512)+4),w
  2949  0BFE  0021               	movlb	1	; select bank1
  2950  0BFF  00ED               	movwf	??_main^(0+128)
  2951  0C00  01EE               	clrf	(??_main^(0+128)+1)
  2952  0C01  086D               	movf	??_main^(0+128),w
  2953  0C02  00AE               	movwf	disp_hex_window1@hex_data^(0+128)
  2954  0C03  086E               	movf	(??_main+1)^(0+128),w
  2955  0C04  00AF               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  2956  0C05                     L7:	
  2957  0C05  319C  2427  3189   	fcall	_disp_hex_window1
  2958  0C08                     l5500:	
  2959                           
  2960                           ;main.c: 760: }
  2961                           ;main.c: 761: pstowfstru.pstowfstrs.setwspeed=setwirespeed;
  2962  0C08  0020               	movlb	0	; select bank0
  2963  0C09  085A               	movf	_setwirespeed,w
  2964  0C0A  0021               	movlb	1	; select bank1
  2965  0C0B  00ED               	movwf	??_main^(0+128)
  2966  0C0C  086D               	movf	??_main^(0+128),w
  2967  0C0D  0024               	movlb	4	; select bank4
  2968  0C0E  00C3               	movwf	(_pstowfstru^(0+512)+1)
  2969                           
  2970                           ;main.c: 763: count_1ms=0;
  2971  0C0F  0023               	movlb	3	; select bank3
  2972  0C10  01B2               	clrf	_count_1ms^(0+384)	;volatile
  2973  0C11  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  2974                           
  2975                           ;main.c: 764: onesecf=1;
  2976  0C12  3001               	movlw	1
  2977  0C13  0021               	movlb	1	; select bank1
  2978  0C14  00ED               	movwf	??_main^(0+128)
  2979  0C15  086D               	movf	??_main^(0+128),w
  2980  0C16  0020               	movlb	0	; select bank0
  2981  0C17  00E1               	movwf	_onesecf	;volatile
  2982                           
  2983                           ;main.c: 765: txonf=1;
  2984  0C18  3001               	movlw	1
  2985  0C19  0021               	movlb	1	; select bank1
  2986  0C1A  00ED               	movwf	??_main^(0+128)
  2987  0C1B  086D               	movf	??_main^(0+128),w
  2988  0C1C  0023               	movlb	3	; select bank3
  2989  0C1D  00DB               	movwf	_txonf^(0+384)	;volatile
  2990  0C1E                     l5508:	
  2991                           
  2992                           ;main.c: 766: }
  2993                           ;main.c: 767: prevsetwirespeed=setwirespeed;
  2994  0C1E  0020               	movlb	0	; select bank0
  2995  0C1F  085B               	movf	_setwirespeed+1,w
  2996  0C20  0023               	movlb	3	; select bank3
  2997  0C21  01C7               	clrf	(_prevsetwirespeed+1)^(0+384)
  2998  0C22  07C7               	addwf	(_prevsetwirespeed+1)^(0+384),f
  2999  0C23  0020               	movlb	0	; select bank0
  3000  0C24  085A               	movf	_setwirespeed,w
  3001  0C25  0023               	movlb	3	; select bank3
  3002  0C26  01C6               	clrf	_prevsetwirespeed^(0+384)
  3003  0C27  07C6               	addwf	_prevsetwirespeed^(0+384),f
  3004                           
  3005                           ;main.c: 768: prevsetcurrent=setcurrent;
  3006  0C28  0022               	movlb	2	; select bank2
  3007  0C29  0829               	movf	(_setcurrent+1)^(0+256),w
  3008  0C2A  0023               	movlb	3	; select bank3
  3009  0C2B  01C3               	clrf	(_prevsetcurrent+1)^(0+384)
  3010  0C2C  07C3               	addwf	(_prevsetcurrent+1)^(0+384),f
  3011  0C2D  0022               	movlb	2	; select bank2
  3012  0C2E  0828               	movf	_setcurrent^(0+256),w
  3013  0C2F  0023               	movlb	3	; select bank3
  3014  0C30  01C2               	clrf	_prevsetcurrent^(0+384)
  3015  0C31  07C2               	addwf	_prevsetcurrent^(0+384),f
  3016                           
  3017                           ;main.c: 770: if(((prevsetvoltage!=setvoltage) || dispupdatef==1) && (TypeU.TypeS.vtg==1
      +                          ) )
  3018  0C32  0020               	movlb	0	; select bank0
  3019  0C33  0859               	movf	_setvoltage+1,w
  3020  0C34  0023               	movlb	3	; select bank3
  3021  0C35  0645               	xorwf	(_prevsetvoltage+1)^(0+384),w
  3022  0C36  1D03               	skipz
  3023  0C37  2C3C               	goto	u8075
  3024  0C38  0020               	movlb	0	; select bank0
  3025  0C39  0858               	movf	_setvoltage,w
  3026  0C3A  0023               	movlb	3	; select bank3
  3027  0C3B  0644               	xorwf	_prevsetvoltage^(0+384),w
  3028  0C3C                     u8075:	
  3029  0C3C  1D03               	skipz
  3030  0C3D  2C43               	goto	l695
  3031  0C3E  0020               	movlb	0	; select bank0
  3032  0C3F  086F               	movf	_dispupdatef,w	;volatile
  3033  0C40  3A01               	xorlw	1
  3034  0C41  1D03               	skipz
  3035  0C42  2C83               	goto	l5534
  3036  0C43                     l695:	
  3037  0C43  0020               	movlb	0	; select bank0
  3038  0C44  1CE8               	btfss	_TypeU+1,1
  3039  0C45  2C83               	goto	l5534
  3040                           
  3041                           ;main.c: 771: {
  3042                           ;main.c: 772: TypeDP.TypeD.digitdp4 =0;
  3043  0C46  11EB               	bcf	_TypeDP,3
  3044                           
  3045                           ;main.c: 773: TypeDP.TypeD.digitdp5 =1;
  3046  0C47  166B               	bsf	_TypeDP,4
  3047                           
  3048                           ;main.c: 774: TypeDP.TypeD.digitdp6 =0;
  3049  0C48  12EB               	bcf	_TypeDP,5
  3050                           
  3051                           ;main.c: 775: TypeU.TypeS.arclength =0;
  3052  0C49  1167               	bcf	_TypeU,2
  3053                           
  3054                           ;main.c: 776: TypeU.TypeS.vtg =1;
  3055  0C4A  14E8               	bsf	_TypeU+1,1
  3056                           
  3057                           ;main.c: 777: TypeU.TypeS.sec =0;
  3058  0C4B  1168               	bcf	_TypeU+1,2
  3059                           
  3060                           ;main.c: 778: disp_hex_window2(setvoltage);
  3061  0C4C  0859               	movf	_setvoltage+1,w
  3062  0C4D  0021               	movlb	1	; select bank1
  3063  0C4E  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  3064  0C4F  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  3065  0C50  0020               	movlb	0	; select bank0
  3066  0C51  0858               	movf	_setvoltage,w
  3067  0C52  0021               	movlb	1	; select bank1
  3068  0C53  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  3069  0C54  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  3070  0C55  319C  248B  3189   	fcall	_disp_hex_window2
  3071                           
  3072                           ;main.c: 779: pstowfstru.pstowfstrs.Lo_setvoltage=setvoltage;
  3073  0C58  0020               	movlb	0	; select bank0
  3074  0C59  0858               	movf	_setvoltage,w
  3075  0C5A  0021               	movlb	1	; select bank1
  3076  0C5B  00ED               	movwf	??_main^(0+128)
  3077  0C5C  086D               	movf	??_main^(0+128),w
  3078  0C5D  0024               	movlb	4	; select bank4
  3079  0C5E  00C8               	movwf	(_pstowfstru^(0+512)+6)
  3080                           
  3081                           ;main.c: 780: pstowfstru.pstowfstrs.Hi_setvoltage=setvoltage >> 8;
  3082  0C5F  0020               	movlb	0	; select bank0
  3083  0C60  0859               	movf	_setvoltage+1,w
  3084  0C61  0021               	movlb	1	; select bank1
  3085  0C62  00ED               	movwf	??_main^(0+128)
  3086  0C63  086D               	movf	??_main^(0+128),w
  3087  0C64  0024               	movlb	4	; select bank4
  3088  0C65  00C7               	movwf	(_pstowfstru^(0+512)+5)
  3089                           
  3090                           ;main.c: 781: count_1ms=0;
  3091  0C66  0023               	movlb	3	; select bank3
  3092  0C67  01B2               	clrf	_count_1ms^(0+384)	;volatile
  3093  0C68  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3094                           
  3095                           ;main.c: 782: onesecf=1;
  3096  0C69  3001               	movlw	1
  3097  0C6A  0021               	movlb	1	; select bank1
  3098  0C6B  00ED               	movwf	??_main^(0+128)
  3099  0C6C  086D               	movf	??_main^(0+128),w
  3100  0C6D  0020               	movlb	0	; select bank0
  3101  0C6E  00E1               	movwf	_onesecf	;volatile
  3102                           
  3103                           ;main.c: 783: txonf=1;
  3104  0C6F  3001               	movlw	1
  3105  0C70  0021               	movlb	1	; select bank1
  3106  0C71  00ED               	movwf	??_main^(0+128)
  3107  0C72  086D               	movf	??_main^(0+128),w
  3108  0C73  0023               	movlb	3	; select bank3
  3109  0C74  00DB               	movwf	_txonf^(0+384)	;volatile
  3110                           
  3111                           ;main.c: 784: prevsetvoltage=setvoltage;
  3112  0C75  0020               	movlb	0	; select bank0
  3113  0C76  0859               	movf	_setvoltage+1,w
  3114  0C77  0023               	movlb	3	; select bank3
  3115  0C78  01C5               	clrf	(_prevsetvoltage+1)^(0+384)
  3116  0C79  07C5               	addwf	(_prevsetvoltage+1)^(0+384),f
  3117  0C7A  0020               	movlb	0	; select bank0
  3118  0C7B  0858               	movf	_setvoltage,w
  3119  0C7C  0023               	movlb	3	; select bank3
  3120  0C7D  01C4               	clrf	_prevsetvoltage^(0+384)
  3121  0C7E  07C4               	addwf	_prevsetvoltage^(0+384),f
  3122                           
  3123                           ;main.c: 785: parclength=100;
  3124  0C7F  3064               	movlw	100
  3125  0C80  00EA               	movwf	_parclength^(0+384)
  3126  0C81  3000               	movlw	0
  3127  0C82  00EB               	movwf	(_parclength^(0+384)+1)
  3128  0C83                     l5534:	
  3129                           
  3130                           ;main.c: 786: }
  3131                           ;main.c: 790: if(((parclength!=pstowfstru.pstowfstrs.arclength) || dispupdatef==1) && (T
      +                          ypeU.TypeS.arclength==1))
  3132  0C83  0024               	movlb	4	; select bank4
  3133  0C84  0849               	movf	(_pstowfstru^(0+512)+7),w
  3134  0C85  0021               	movlb	1	; select bank1
  3135  0C86  00ED               	movwf	??_main^(0+128)
  3136  0C87  01EE               	clrf	(??_main^(0+128)+1)
  3137  0C88  0023               	movlb	3	; select bank3
  3138  0C89  086B               	movf	(_parclength+1)^(0+384),w
  3139  0C8A  0021               	movlb	1	; select bank1
  3140  0C8B  066E               	xorwf	(??_main+1)^(0+128),w
  3141  0C8C  1D03               	skipz
  3142  0C8D  2C92               	goto	u8105
  3143  0C8E  0023               	movlb	3	; select bank3
  3144  0C8F  086A               	movf	_parclength^(0+384),w
  3145  0C90  0021               	movlb	1	; select bank1
  3146  0C91  066D               	xorwf	??_main^(0+128),w
  3147  0C92                     u8105:	
  3148  0C92  1D03               	skipz
  3149  0C93  2C99               	goto	l698
  3150  0C94  0020               	movlb	0	; select bank0
  3151  0C95  086F               	movf	_dispupdatef,w	;volatile
  3152  0C96  3A01               	xorlw	1
  3153  0C97  1D03               	skipz
  3154  0C98  2D15               	goto	l5582
  3155  0C99                     l698:	
  3156  0C99  0020               	movlb	0	; select bank0
  3157  0C9A  1D67               	btfss	_TypeU,2
  3158  0C9B  2D15               	goto	l5582
  3159                           
  3160                           ;main.c: 791: {
  3161                           ;main.c: 794: if(weldmode=='P')
  3162  0C9C  0866               	movf	_weldmode,w	;volatile
  3163  0C9D  3A50               	xorlw	80
  3164  0C9E  1D03               	skipz
  3165  0C9F  2CC1               	goto	l5546
  3166                           
  3167                           ;main.c: 795: {
  3168                           ;main.c: 796: if(pstowfstru.pstowfstrs.arclength>=40)
  3169  0CA0  3028               	movlw	40
  3170  0CA1  0024               	movlb	4	; select bank4
  3171  0CA2  0249               	subwf	(_pstowfstru^(0+512)+7),w
  3172  0CA3  1C03               	skipc
  3173  0CA4  2CAE               	goto	l5544
  3174                           
  3175                           ;main.c: 797: disparclength=pstowfstru.pstowfstrs.arclength-40;
  3176  0CA5  0849               	movf	(_pstowfstru^(0+512)+7),w
  3177  0CA6  3ED8               	addlw	216
  3178  0CA7  0023               	movlb	3	; select bank3
  3179  0CA8  00B8               	movwf	_disparclength^(0+384)
  3180  0CA9  30FF               	movlw	255
  3181  0CAA  1803               	skipnc
  3182  0CAB  3000               	movlw	0
  3183  0CAC  00B9               	movwf	(_disparclength^(0+384)+1)
  3184  0CAD  2CC1               	goto	l5546
  3185  0CAE                     l5544:	
  3186                           
  3187                           ;main.c: 798: else
  3188                           ;main.c: 799: disparclength=40 - pstowfstru.pstowfstrs.arclength;
  3189  0CAE  0024               	movlb	4	; select bank4
  3190  0CAF  0849               	movf	(_pstowfstru^(0+512)+7),w
  3191  0CB0  0021               	movlb	1	; select bank1
  3192  0CB1  00ED               	movwf	??_main^(0+128)
  3193  0CB2  01EE               	clrf	(??_main^(0+128)+1)
  3194  0CB3  09ED               	comf	??_main^(0+128),f
  3195  0CB4  09EE               	comf	(??_main^(0+128)+1),f
  3196  0CB5  0AED               	incf	??_main^(0+128),f
  3197  0CB6  1903               	skipnz
  3198  0CB7  0AEE               	incf	(??_main^(0+128)+1),f
  3199  0CB8  086D               	movf	??_main^(0+128),w
  3200  0CB9  3E28               	addlw	40
  3201  0CBA  0023               	movlb	3	; select bank3
  3202  0CBB  00B8               	movwf	_disparclength^(0+384)
  3203  0CBC  3000               	movlw	0
  3204  0CBD  0021               	movlb	1	; select bank1
  3205  0CBE  3D6E               	addwfc	(??_main+1)^(0+128),w
  3206  0CBF  0023               	movlb	3	; select bank3
  3207  0CC0  00B9               	movwf	(_disparclength+1)^(0+384)
  3208  0CC1                     l5546:	
  3209                           
  3210                           ;main.c: 800: }
  3211                           ;main.c: 802: if(weldmode=='G')
  3212  0CC1  0020               	movlb	0	; select bank0
  3213  0CC2  0866               	movf	_weldmode,w	;volatile
  3214  0CC3  3A47               	xorlw	71
  3215  0CC4  1D03               	skipz
  3216  0CC5  2CD2               	goto	l5550
  3217                           
  3218                           ;main.c: 803: {
  3219                           ;main.c: 804: disparclength=pstowfstru.pstowfstrs.arclength;
  3220  0CC6  0024               	movlb	4	; select bank4
  3221  0CC7  0849               	movf	(_pstowfstru^(0+512)+7),w
  3222  0CC8  0021               	movlb	1	; select bank1
  3223  0CC9  00ED               	movwf	??_main^(0+128)
  3224  0CCA  01EE               	clrf	(??_main^(0+128)+1)
  3225  0CCB  086D               	movf	??_main^(0+128),w
  3226  0CCC  0023               	movlb	3	; select bank3
  3227  0CCD  00B8               	movwf	_disparclength^(0+384)
  3228  0CCE  0021               	movlb	1	; select bank1
  3229  0CCF  086E               	movf	(??_main+1)^(0+128),w
  3230  0CD0  0023               	movlb	3	; select bank3
  3231  0CD1  00B9               	movwf	(_disparclength+1)^(0+384)
  3232  0CD2                     l5550:	
  3233                           
  3234                           ;main.c: 805: }
  3235                           ;main.c: 807: TypeDP.TypeD.digitdp4 =0;
  3236  0CD2  0020               	movlb	0	; select bank0
  3237  0CD3  11EB               	bcf	_TypeDP,3
  3238                           
  3239                           ;main.c: 808: TypeDP.TypeD.digitdp5 =0;
  3240  0CD4  126B               	bcf	_TypeDP,4
  3241                           
  3242                           ;main.c: 809: TypeDP.TypeD.digitdp6 =0;
  3243  0CD5  12EB               	bcf	_TypeDP,5
  3244                           
  3245                           ;main.c: 810: TypeU.TypeS.arclength =1;
  3246  0CD6  1567               	bsf	_TypeU,2
  3247                           
  3248                           ;main.c: 811: TypeU.TypeS.vtg =0;
  3249  0CD7  10E8               	bcf	_TypeU+1,1
  3250                           
  3251                           ;main.c: 812: TypeU.TypeS.sec =0;
  3252  0CD8  1168               	bcf	_TypeU+1,2
  3253                           
  3254                           ;main.c: 813: disp_hex_window2(disparclength);
  3255  0CD9  0023               	movlb	3	; select bank3
  3256  0CDA  0839               	movf	(_disparclength+1)^(0+384),w
  3257  0CDB  0021               	movlb	1	; select bank1
  3258  0CDC  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  3259  0CDD  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  3260  0CDE  0023               	movlb	3	; select bank3
  3261  0CDF  0838               	movf	_disparclength^(0+384),w
  3262  0CE0  0021               	movlb	1	; select bank1
  3263  0CE1  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  3264  0CE2  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  3265  0CE3  319C  248B  3189   	fcall	_disp_hex_window2
  3266                           
  3267                           ;main.c: 816: if(weldmode=='P')
  3268  0CE6  0020               	movlb	0	; select bank0
  3269  0CE7  0866               	movf	_weldmode,w	;volatile
  3270  0CE8  3A50               	xorlw	80
  3271  0CE9  1D03               	skipz
  3272  0CEA  2CF2               	goto	l5572
  3273                           
  3274                           ;main.c: 817: {
  3275                           ;main.c: 818: if(pstowfstru.pstowfstrs.arclength>=40)
  3276  0CEB  3028               	movlw	40
  3277  0CEC  0024               	movlb	4	; select bank4
  3278  0CED  0249               	subwf	(_pstowfstru^(0+512)+7),w
  3279  0CEE  1803               	btfsc	3,0
  3280  0CEF  2CF2               	goto	l5572
  3281                           
  3282                           ;main.c: 820: else
  3283                           ;main.c: 821: diswin1[3]=0x26;
  3284                           
  3285                           ;main.c: 819: diswin1[3]=0x25;
  3286  0CF0  3026               	movlw	38
  3287  0CF1  2CF3               	goto	L4
  3288  0CF2                     l5572:	
  3289                           ;main.c: 822: }
  3290                           
  3291                           
  3292                           ;main.c: 823: else
  3293                           ;main.c: 824: diswin1[3]=0x25;
  3294  0CF2  3025               	movlw	37
  3295  0CF3                     L4:	
  3296  0CF3  0021               	movlb	1	; select bank1
  3297  0CF4  00ED               	movwf	??_main^(0+128)
  3298  0CF5  086D               	movf	??_main^(0+128),w
  3299  0CF6  0022               	movlb	2	; select bank2
  3300  0CF7  00E7               	movwf	(_diswin1^(0+256)+3)
  3301                           
  3302                           ;main.c: 827: count_1ms=0;
  3303  0CF8  0023               	movlb	3	; select bank3
  3304  0CF9  01B2               	clrf	_count_1ms^(0+384)	;volatile
  3305  0CFA  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3306                           
  3307                           ;main.c: 828: onesecf=1;
  3308  0CFB  3001               	movlw	1
  3309  0CFC  0021               	movlb	1	; select bank1
  3310  0CFD  00ED               	movwf	??_main^(0+128)
  3311  0CFE  086D               	movf	??_main^(0+128),w
  3312  0CFF  0020               	movlb	0	; select bank0
  3313  0D00  00E1               	movwf	_onesecf	;volatile
  3314                           
  3315                           ;main.c: 829: txonf=1;
  3316  0D01  3001               	movlw	1
  3317  0D02  0021               	movlb	1	; select bank1
  3318  0D03  00ED               	movwf	??_main^(0+128)
  3319  0D04  086D               	movf	??_main^(0+128),w
  3320  0D05  0023               	movlb	3	; select bank3
  3321  0D06  00DB               	movwf	_txonf^(0+384)	;volatile
  3322                           
  3323                           ;main.c: 830: prevsetvoltage=0;
  3324  0D07  01C4               	clrf	_prevsetvoltage^(0+384)
  3325  0D08  01C5               	clrf	(_prevsetvoltage+1)^(0+384)
  3326                           
  3327                           ;main.c: 831: parclength=pstowfstru.pstowfstrs.arclength;
  3328  0D09  0024               	movlb	4	; select bank4
  3329  0D0A  0849               	movf	(_pstowfstru^(0+512)+7),w
  3330  0D0B  0021               	movlb	1	; select bank1
  3331  0D0C  00ED               	movwf	??_main^(0+128)
  3332  0D0D  01EE               	clrf	(??_main^(0+128)+1)
  3333  0D0E  086D               	movf	??_main^(0+128),w
  3334  0D0F  0023               	movlb	3	; select bank3
  3335  0D10  00EA               	movwf	_parclength^(0+384)
  3336  0D11  0021               	movlb	1	; select bank1
  3337  0D12  086E               	movf	(??_main+1)^(0+128),w
  3338  0D13  0023               	movlb	3	; select bank3
  3339  0D14  00EB               	movwf	(_parclength+1)^(0+384)
  3340  0D15                     l5582:	
  3341                           
  3342                           ;main.c: 832: }
  3343                           ;main.c: 835: if((psstatusu.psstatuss.gasoncommand!=1)&&(gaschkfg == 0))
  3344  0D15  0020               	movlb	0	; select bank0
  3345  0D16  18ED               	btfsc	_psstatusu,1
  3346  0D17  2D1E               	goto	l707
  3347  0D18  0022               	movlb	2	; select bank2
  3348  0D19  08C1               	movf	_gaschkfg^(0+256),f
  3349  0D1A  1D03               	skipz
  3350  0D1B  2D1E               	goto	l707
  3351                           
  3352                           ;main.c: 836: PORTCbits.RC3 =0;
  3353  0D1C  0020               	movlb	0	; select bank0
  3354  0D1D  118E               	bcf	14,3	;volatile
  3355  0D1E                     l707:	
  3356                           
  3357                           ;main.c: 837: if(psstatusu.psstatuss.motoroncommand!=1)
  3358  0D1E  0020               	movlb	0	; select bank0
  3359  0D1F  19ED               	btfsc	_psstatusu,3
  3360  0D20  2D3B               	goto	l5590
  3361                           
  3362                           ;main.c: 838: Update_PWM(setwirespeed*0);
  3363  0D21  085B               	movf	_setwirespeed+1,w
  3364  0D22  0021               	movlb	1	; select bank1
  3365  0D23  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3366  0D24  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3367  0D25  0020               	movlb	0	; select bank0
  3368  0D26  085A               	movf	_setwirespeed,w
  3369  0D27  0021               	movlb	1	; select bank1
  3370  0D28  01A0               	clrf	___wmul@multiplier^(0+128)
  3371  0D29  07A0               	addwf	___wmul@multiplier^(0+128),f
  3372  0D2A  3000               	movlw	0
  3373  0D2B  00A2               	movwf	___wmul@multiplicand^(0+128)
  3374  0D2C  3000               	movlw	0
  3375  0D2D  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  3376  0D2E  3199  216B  3189   	fcall	___wmul
  3377  0D31  0021               	movlb	1	; select bank1
  3378  0D32  0821               	movf	(?___wmul+1)^(0+128),w
  3379  0D33  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3380  0D34  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3381  0D35  0820               	movf	?___wmul^(0+128),w
  3382  0D36  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3383  0D37  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3384  0D38  3199  2189  3189   	fcall	_Update_PWM
  3385  0D3B                     l5590:	
  3386                           
  3387                           ;main.c: 840: openloopcnt =0;
  3388  0D3B  0024               	movlb	4	; select bank4
  3389  0D3C  01BE               	clrf	_openloopcnt^(0+512)
  3390  0D3D  01BF               	clrf	(_openloopcnt+1)^(0+512)
  3391                           
  3392                           ;main.c: 841: softstartf =0;
  3393  0D3E  0023               	movlb	3	; select bank3
  3394  0D3F  01D9               	clrf	_softstartf^(0+384)	;volatile
  3395                           
  3396                           ;main.c: 842: dispupdatef =0;
  3397  0D40  0020               	movlb	0	; select bank0
  3398  0D41  01EF               	clrf	_dispupdatef	;volatile
  3399                           
  3400                           ;main.c: 843: closeloopf=0;
  3401  0D42  0022               	movlb	2	; select bank2
  3402  0D43  01B6               	clrf	_closeloopf^(0+256)
  3403                           
  3404                           ;main.c: 844: cyclestrtf=0;
  3405  0D44  01BC               	clrf	_cyclestrtf^(0+256)
  3406                           
  3407                           ;main.c: 846: psstatusu.psstatuss.creepspeedon=1;
  3408  0D45  0020               	movlb	0	; select bank0
  3409  0D46  16ED               	bsf	_psstatusu,5
  3410                           
  3411                           ;main.c: 849: }
  3412  0D47  2FE6               	goto	l5708
  3413  0D48                     l683:	
  3414                           
  3415                           ;main.c: 851: else if(psstatusu.psstatuss.weldoncyclestrt==1)
  3416  0D48  1D6D               	btfss	_psstatusu,2
  3417  0D49  2FE6               	goto	l5708
  3418                           
  3419                           ;main.c: 852: {
  3420                           ;main.c: 853: if(psstatusu.psstatuss.gasoncommand==1)
  3421  0D4A  1CED               	btfss	_psstatusu,1
  3422  0D4B  2D4E               	goto	l711
  3423                           
  3424                           ;main.c: 854: {
  3425                           ;main.c: 855: PORTCbits.RC3 =1;
  3426  0D4C  158E               	bsf	14,3	;volatile
  3427                           
  3428                           ;main.c: 856: }
  3429  0D4D  2D4F               	goto	l712
  3430  0D4E                     l711:	
  3431                           
  3432                           ;main.c: 857: else
  3433                           ;main.c: 858: {
  3434                           ;main.c: 859: PORTCbits.RC3 =0;
  3435  0D4E  118E               	bcf	14,3	;volatile
  3436  0D4F                     l712:	
  3437                           
  3438                           ;main.c: 860: }
  3439                           ;main.c: 861: if(psstatusu.psstatuss.motoroncommand==1)
  3440  0D4F  1DED               	btfss	_psstatusu,3
  3441  0D50  2F98               	goto	l713
  3442                           
  3443                           ;main.c: 862: {
  3444                           ;main.c: 863: if(psstatusu.psstatuss.creepspeedon==1)
  3445  0D51  1EED               	btfss	_psstatusu,5
  3446  0D52  2DD9               	goto	l714
  3447                           
  3448                           ;main.c: 864: {
  3449                           ;main.c: 865: cyclestrtf=0;
  3450  0D53  0022               	movlb	2	; select bank2
  3451  0D54  01BC               	clrf	_cyclestrtf^(0+256)
  3452                           
  3453                           ;main.c: 868: newsetwirespeed=setwirespeed*creep_speed*0.01;
  3454  0D55  0020               	movlb	0	; select bank0
  3455  0D56  085B               	movf	_setwirespeed+1,w
  3456  0D57  0021               	movlb	1	; select bank1
  3457  0D58  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  3458  0D59  07A3               	addwf	(___wmul@multiplicand+1)^(0+128),f
  3459  0D5A  0020               	movlb	0	; select bank0
  3460  0D5B  085A               	movf	_setwirespeed,w
  3461  0D5C  0021               	movlb	1	; select bank1
  3462  0D5D  01A2               	clrf	___wmul@multiplicand^(0+128)
  3463  0D5E  07A2               	addwf	___wmul@multiplicand^(0+128),f
  3464  0D5F  0022               	movlb	2	; select bank2
  3465  0D60  083B               	movf	_creep_speed^(0+256),w	;volatile
  3466  0D61  0021               	movlb	1	; select bank1
  3467  0D62  00ED               	movwf	??_main^(0+128)
  3468  0D63  01EE               	clrf	(??_main^(0+128)+1)
  3469  0D64  086D               	movf	??_main^(0+128),w
  3470  0D65  00A0               	movwf	___wmul@multiplier^(0+128)
  3471  0D66  086E               	movf	(??_main+1)^(0+128),w
  3472  0D67  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  3473  0D68  3199  216B  3189   	fcall	___wmul
  3474  0D6B  0021               	movlb	1	; select bank1
  3475  0D6C  0821               	movf	(?___wmul+1)^(0+128),w
  3476  0D6D  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3477  0D6E  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3478  0D6F  0820               	movf	?___wmul^(0+128),w
  3479  0D70  01A8               	clrf	___lwtoft@c^(0+128)
  3480  0D71  07A8               	addwf	___lwtoft@c^(0+128),f
  3481  0D72  3199  212B  3189   	fcall	___lwtoft
  3482  0D75  0021               	movlb	1	; select bank1
  3483  0D76  0828               	movf	?___lwtoft^(0+128),w
  3484  0D77  00B8               	movwf	___ftmul@f2^(0+128)
  3485  0D78  0829               	movf	(?___lwtoft+1)^(0+128),w
  3486  0D79  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3487  0D7A  082A               	movf	(?___lwtoft+2)^(0+128),w
  3488  0D7B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3489  0D7C  30D7               	movlw	215
  3490  0D7D  00B5               	movwf	___ftmul@f1^(0+128)
  3491  0D7E  3023               	movlw	35
  3492  0D7F  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3493  0D80  303C               	movlw	60
  3494  0D81  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3495  0D82  3192  22E3  3189   	fcall	___ftmul
  3496  0D85  0021               	movlb	1	; select bank1
  3497  0D86  0835               	movf	?___ftmul^(0+128),w
  3498  0D87  00C5               	movwf	___fttol@f1^(0+128)
  3499  0D88  0836               	movf	(?___ftmul+1)^(0+128),w
  3500  0D89  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3501  0D8A  0837               	movf	(?___ftmul+2)^(0+128),w
  3502  0D8B  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3503  0D8C  319F  2779  3189   	fcall	___fttol
  3504  0D8F  0021               	movlb	1	; select bank1
  3505  0D90  0846               	movf	(?___fttol^(0+128)+1),w
  3506  0D91  0020               	movlb	0	; select bank0
  3507  0D92  01EA               	clrf	_newsetwirespeed+1
  3508  0D93  07EA               	addwf	_newsetwirespeed+1,f
  3509  0D94  0021               	movlb	1	; select bank1
  3510  0D95  0845               	movf	?___fttol^(0+128),w
  3511  0D96  0020               	movlb	0	; select bank0
  3512  0D97  01E9               	clrf	_newsetwirespeed
  3513  0D98  07E9               	addwf	_newsetwirespeed,f
  3514                           
  3515                           ;main.c: 870: if(newsetwirespeed<=20)
  3516  0D99  3000               	movlw	0
  3517  0D9A  026A               	subwf	_newsetwirespeed+1,w
  3518  0D9B  3015               	movlw	21
  3519  0D9C  1903               	skipnz
  3520  0D9D  0269               	subwf	_newsetwirespeed,w
  3521  0D9E  1803               	skipnc
  3522  0D9F  2DA4               	goto	l5616
  3523                           
  3524                           ;main.c: 871: newsetwirespeed=20;
  3525  0DA0  3014               	movlw	20
  3526  0DA1  00E9               	movwf	_newsetwirespeed
  3527  0DA2  3000               	movlw	0
  3528  0DA3  00EA               	movwf	_newsetwirespeed+1
  3529  0DA4                     l5616:	
  3530                           
  3531                           ;main.c: 876: Update_PWM(newsetwirespeed*2.8);
  3532  0DA4  086A               	movf	_newsetwirespeed+1,w
  3533  0DA5  0021               	movlb	1	; select bank1
  3534  0DA6  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3535  0DA7  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3536  0DA8  0020               	movlb	0	; select bank0
  3537  0DA9  0869               	movf	_newsetwirespeed,w
  3538  0DAA  0021               	movlb	1	; select bank1
  3539  0DAB  01A8               	clrf	___lwtoft@c^(0+128)
  3540  0DAC  07A8               	addwf	___lwtoft@c^(0+128),f
  3541  0DAD  3199  212B  3189   	fcall	___lwtoft
  3542  0DB0  0021               	movlb	1	; select bank1
  3543  0DB1  0828               	movf	?___lwtoft^(0+128),w
  3544  0DB2  00B8               	movwf	___ftmul@f2^(0+128)
  3545  0DB3  0829               	movf	(?___lwtoft+1)^(0+128),w
  3546  0DB4  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3547  0DB5  082A               	movf	(?___lwtoft+2)^(0+128),w
  3548  0DB6  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3549  0DB7  3033               	movlw	51
  3550  0DB8  00B5               	movwf	___ftmul@f1^(0+128)
  3551  0DB9  3033               	movlw	51
  3552  0DBA  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3553  0DBB  3040               	movlw	64
  3554  0DBC  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3555  0DBD  3192  22E3  3189   	fcall	___ftmul
  3556  0DC0  0021               	movlb	1	; select bank1
  3557  0DC1  0835               	movf	?___ftmul^(0+128),w
  3558  0DC2  00C5               	movwf	___fttol@f1^(0+128)
  3559  0DC3  0836               	movf	(?___ftmul+1)^(0+128),w
  3560  0DC4  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3561  0DC5  0837               	movf	(?___ftmul+2)^(0+128),w
  3562  0DC6  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3563  0DC7  319F  2779  3189   	fcall	___fttol
  3564  0DCA  0021               	movlb	1	; select bank1
  3565  0DCB  0846               	movf	(?___fttol^(0+128)+1),w
  3566  0DCC  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3567  0DCD  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3568  0DCE  0845               	movf	?___fttol^(0+128),w
  3569  0DCF  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3570  0DD0  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3571  0DD1  3199  2189  3189   	fcall	_Update_PWM
  3572                           
  3573                           ;main.c: 886: TRISAbits.TRISA5=0;
  3574  0DD4  0021               	movlb	1	; select bank1
  3575  0DD5  128C               	bcf	12,5	;volatile
  3576                           
  3577                           ;main.c: 887: PORTAbits.RA0=1;
  3578  0DD6  0020               	movlb	0	; select bank0
  3579  0DD7  140C               	bsf	12,0	;volatile
  3580                           
  3581                           ;main.c: 889: }
  3582  0DD8  2E84               	goto	l5654
  3583  0DD9                     l714:	
  3584                           
  3585                           ;main.c: 890: else if(psstatusu.psstatuss.creepspeedon==0)
  3586  0DD9  1AED               	btfsc	_psstatusu,5
  3587  0DDA  2E84               	goto	l5654
  3588                           
  3589                           ;main.c: 891: {
  3590                           ;main.c: 892: cyclestrtf=1;
  3591  0DDB  0022               	movlb	2	; select bank2
  3592  0DDC  01BC               	clrf	_cyclestrtf^(0+256)
  3593  0DDD  0ABC               	incf	_cyclestrtf^(0+256),f
  3594                           
  3595                           ;main.c: 893: newsetwirespeed=setwirespeed;
  3596  0DDE  0020               	movlb	0	; select bank0
  3597  0DDF  085B               	movf	_setwirespeed+1,w
  3598  0DE0  01EA               	clrf	_newsetwirespeed+1
  3599  0DE1  07EA               	addwf	_newsetwirespeed+1,f
  3600  0DE2  085A               	movf	_setwirespeed,w
  3601  0DE3  01E9               	clrf	_newsetwirespeed
  3602  0DE4  07E9               	addwf	_newsetwirespeed,f
  3603                           
  3604                           ;main.c: 894: if(closeloopf==0)
  3605  0DE5  0022               	movlb	2	; select bank2
  3606  0DE6  08B6               	movf	_closeloopf^(0+256),f
  3607  0DE7  1D03               	skipz
  3608  0DE8  2E80               	goto	l5650
  3609                           
  3610                           ;main.c: 895: {
  3611                           ;main.c: 896: Update_PWM(newsetwirespeed*2.8);
  3612  0DE9  0020               	movlb	0	; select bank0
  3613  0DEA  086A               	movf	_newsetwirespeed+1,w
  3614  0DEB  0021               	movlb	1	; select bank1
  3615  0DEC  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3616  0DED  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3617  0DEE  0020               	movlb	0	; select bank0
  3618  0DEF  0869               	movf	_newsetwirespeed,w
  3619  0DF0  0021               	movlb	1	; select bank1
  3620  0DF1  01A8               	clrf	___lwtoft@c^(0+128)
  3621  0DF2  07A8               	addwf	___lwtoft@c^(0+128),f
  3622  0DF3  3199  212B  3189   	fcall	___lwtoft
  3623  0DF6  0021               	movlb	1	; select bank1
  3624  0DF7  0828               	movf	?___lwtoft^(0+128),w
  3625  0DF8  00B8               	movwf	___ftmul@f2^(0+128)
  3626  0DF9  0829               	movf	(?___lwtoft+1)^(0+128),w
  3627  0DFA  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3628  0DFB  082A               	movf	(?___lwtoft+2)^(0+128),w
  3629  0DFC  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3630  0DFD  3033               	movlw	51
  3631  0DFE  00B5               	movwf	___ftmul@f1^(0+128)
  3632  0DFF  3033               	movlw	51
  3633  0E00  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3634  0E01  3040               	movlw	64
  3635  0E02  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3636  0E03  3192  22E3  3189   	fcall	___ftmul
  3637  0E06  0021               	movlb	1	; select bank1
  3638  0E07  0835               	movf	?___ftmul^(0+128),w
  3639  0E08  00C5               	movwf	___fttol@f1^(0+128)
  3640  0E09  0836               	movf	(?___ftmul+1)^(0+128),w
  3641  0E0A  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3642  0E0B  0837               	movf	(?___ftmul+2)^(0+128),w
  3643  0E0C  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3644  0E0D  319F  2779  3189   	fcall	___fttol
  3645  0E10  0021               	movlb	1	; select bank1
  3646  0E11  0846               	movf	(?___fttol^(0+128)+1),w
  3647  0E12  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3648  0E13  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3649  0E14  0845               	movf	?___fttol^(0+128),w
  3650  0E15  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3651  0E16  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3652  0E17  3199  2189  3189   	fcall	_Update_PWM
  3653                           
  3654                           ;main.c: 897: if(wfspeedchangef==1)
  3655  0E1A  0022               	movlb	2	; select bank2
  3656  0E1B  086F               	movf	_wfspeedchangef^(0+256),w
  3657  0E1C  3A01               	xorlw	1
  3658  0E1D  1D03               	skipz
  3659  0E1E  2E7E               	goto	l5648
  3660                           
  3661                           ;main.c: 898: {
  3662                           ;main.c: 899: integral_old=newsetwirespeed*scalefactor2*2.8;
  3663  0E1F  3033               	movlw	51
  3664  0E20  0021               	movlb	1	; select bank1
  3665  0E21  00B5               	movwf	___ftmul@f1^(0+128)
  3666  0E22  3033               	movlw	51
  3667  0E23  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3668  0E24  3040               	movlw	64
  3669  0E25  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3670  0E26  0020               	movlb	0	; select bank0
  3671  0E27  086A               	movf	_newsetwirespeed+1,w
  3672  0E28  0021               	movlb	1	; select bank1
  3673  0E29  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3674  0E2A  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3675  0E2B  0020               	movlb	0	; select bank0
  3676  0E2C  0869               	movf	_newsetwirespeed,w
  3677  0E2D  0021               	movlb	1	; select bank1
  3678  0E2E  01A0               	clrf	___wmul@multiplier^(0+128)
  3679  0E2F  07A0               	addwf	___wmul@multiplier^(0+128),f
  3680  0E30  0023               	movlb	3	; select bank3
  3681  0E31  086D               	movf	(_scalefactor2+1)^(0+384),w
  3682  0E32  0021               	movlb	1	; select bank1
  3683  0E33  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  3684  0E34  07A3               	addwf	(___wmul@multiplicand+1)^(0+128),f
  3685  0E35  0023               	movlb	3	; select bank3
  3686  0E36  086C               	movf	_scalefactor2^(0+384),w
  3687  0E37  0021               	movlb	1	; select bank1
  3688  0E38  01A2               	clrf	___wmul@multiplicand^(0+128)
  3689  0E39  07A2               	addwf	___wmul@multiplicand^(0+128),f
  3690  0E3A  3199  216B  3189   	fcall	___wmul
  3691  0E3D  0021               	movlb	1	; select bank1
  3692  0E3E  0821               	movf	(?___wmul+1)^(0+128),w
  3693  0E3F  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3694  0E40  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3695  0E41  0820               	movf	?___wmul^(0+128),w
  3696  0E42  01A8               	clrf	___lwtoft@c^(0+128)
  3697  0E43  07A8               	addwf	___lwtoft@c^(0+128),f
  3698  0E44  3199  212B  3189   	fcall	___lwtoft
  3699  0E47  0021               	movlb	1	; select bank1
  3700  0E48  0828               	movf	?___lwtoft^(0+128),w
  3701  0E49  00B8               	movwf	___ftmul@f2^(0+128)
  3702  0E4A  0829               	movf	(?___lwtoft+1)^(0+128),w
  3703  0E4B  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3704  0E4C  082A               	movf	(?___lwtoft+2)^(0+128),w
  3705  0E4D  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3706  0E4E  3192  22E3  3189   	fcall	___ftmul
  3707  0E51  0021               	movlb	1	; select bank1
  3708  0E52  0835               	movf	?___ftmul^(0+128),w
  3709  0E53  0023               	movlb	3	; select bank3
  3710  0E54  00A9               	movwf	_integral_old^(0+384)
  3711  0E55  0021               	movlb	1	; select bank1
  3712  0E56  0836               	movf	(?___ftmul+1)^(0+128),w
  3713  0E57  0023               	movlb	3	; select bank3
  3714  0E58  00AA               	movwf	(_integral_old+1)^(0+384)
  3715  0E59  0021               	movlb	1	; select bank1
  3716  0E5A  0837               	movf	(?___ftmul+2)^(0+128),w
  3717  0E5B  0023               	movlb	3	; select bank3
  3718  0E5C  00AB               	movwf	(_integral_old+2)^(0+384)
  3719                           
  3720                           ;main.c: 901: wfspeedchangef=0;
  3721  0E5D  0022               	movlb	2	; select bank2
  3722  0E5E  01EF               	clrf	_wfspeedchangef^(0+256)
  3723                           
  3724                           ;main.c: 902: integral_new =0;
  3725  0E5F  3000               	movlw	0
  3726  0E60  0023               	movlb	3	; select bank3
  3727  0E61  00A6               	movwf	_integral_new^(0+384)
  3728  0E62  3000               	movlw	0
  3729  0E63  00A7               	movwf	(_integral_new+1)^(0+384)
  3730  0E64  3000               	movlw	0
  3731  0E65  00A8               	movwf	(_integral_new+2)^(0+384)
  3732                           
  3733                           ;main.c: 904: error_old =0;
  3734  0E66  3000               	movlw	0
  3735  0E67  00A3               	movwf	_error_old^(0+384)
  3736  0E68  3000               	movlw	0
  3737  0E69  00A4               	movwf	(_error_old+1)^(0+384)
  3738  0E6A  3000               	movlw	0
  3739  0E6B  00A5               	movwf	(_error_old+2)^(0+384)
  3740                           
  3741                           ;main.c: 905: error_new=0;
  3742  0E6C  3000               	movlw	0
  3743  0E6D  00A0               	movwf	_error_new^(0+384)
  3744  0E6E  3000               	movlw	0
  3745  0E6F  00A1               	movwf	(_error_new+1)^(0+384)
  3746  0E70  3000               	movlw	0
  3747  0E71  00A2               	movwf	(_error_new+2)^(0+384)
  3748                           
  3749                           ;main.c: 906: controller_out=0;
  3750  0E72  3000               	movlw	0
  3751  0E73  0024               	movlb	4	; select bank4
  3752  0E74  00A4               	movwf	_controller_out^(0+512)
  3753  0E75  3000               	movlw	0
  3754  0E76  00A5               	movwf	(_controller_out+1)^(0+512)
  3755  0E77  3000               	movlw	0
  3756  0E78  00A6               	movwf	(_controller_out+2)^(0+512)
  3757                           
  3758                           ;main.c: 907: prevFltpfreq=0;
  3759  0E79  01C0               	clrf	_prevFltpfreq^(0+512)
  3760  0E7A  01C1               	clrf	(_prevFltpfreq+1)^(0+512)
  3761                           
  3762                           ;main.c: 908: Fltpfreq=0;
  3763  0E7B  0022               	movlb	2	; select bank2
  3764  0E7C  01A0               	clrf	_Fltpfreq^(0+256)
  3765  0E7D  01A1               	clrf	(_Fltpfreq+1)^(0+256)
  3766  0E7E                     l5648:	
  3767                           
  3768                           ;main.c: 909: }
  3769                           ;main.c: 910: closeloopf=1;
  3770  0E7E  01B6               	clrf	_closeloopf^(0+256)
  3771  0E7F  0AB6               	incf	_closeloopf^(0+256),f
  3772  0E80                     l5650:	
  3773                           
  3774                           ;main.c: 911: }
  3775                           ;main.c: 912: TRISAbits.TRISA5=0;
  3776  0E80  0021               	movlb	1	; select bank1
  3777  0E81  128C               	bcf	12,5	;volatile
  3778                           
  3779                           ;main.c: 913: PORTAbits.RA0=0;
  3780  0E82  0020               	movlb	0	; select bank0
  3781  0E83  100C               	bcf	12,0	;volatile
  3782  0E84                     l5654:	
  3783                           
  3784                           ;main.c: 914: }
  3785                           ;main.c: 915: if(up_count_motor==0)
  3786  0E84  0023               	movlb	3	; select bank3
  3787  0E85  0851               	movf	(_up_count_motor+1)^(0+384),w
  3788  0E86  0450               	iorwf	_up_count_motor^(0+384),w
  3789  0E87  1D03               	skipz
  3790  0E88  2EE1               	goto	l5668
  3791                           
  3792                           ;main.c: 916: {
  3793                           ;main.c: 917: if((newsetwirespeed >= 20) && (newsetwirespeed <= 60))
  3794  0E89  3000               	movlw	0
  3795  0E8A  0020               	movlb	0	; select bank0
  3796  0E8B  026A               	subwf	_newsetwirespeed+1,w
  3797  0E8C  3014               	movlw	20
  3798  0E8D  1903               	skipnz
  3799  0E8E  0269               	subwf	_newsetwirespeed,w
  3800  0E8F  1C03               	skipc
  3801  0E90  2EA9               	goto	l5662
  3802  0E91  3000               	movlw	0
  3803  0E92  026A               	subwf	_newsetwirespeed+1,w
  3804  0E93  303D               	movlw	61
  3805  0E94  1903               	skipnz
  3806  0E95  0269               	subwf	_newsetwirespeed,w
  3807  0E96  1803               	skipnc
  3808  0E97  2EA9               	goto	l5662
  3809                           
  3810                           ;main.c: 918: newsetwirespeed=(setwirespeed*14) / 10;
  3811  0E98  300A               	movlw	10
  3812  0E99  0021               	movlb	1	; select bank1
  3813  0E9A  00A6               	movwf	___lwdiv@divisor^(0+128)
  3814  0E9B  3000               	movlw	0
  3815  0E9C  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  3816  0E9D  0020               	movlb	0	; select bank0
  3817  0E9E  085B               	movf	_setwirespeed+1,w
  3818  0E9F  0021               	movlb	1	; select bank1
  3819  0EA0  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3820  0EA1  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3821  0EA2  0020               	movlb	0	; select bank0
  3822  0EA3  085A               	movf	_setwirespeed,w
  3823  0EA4  0021               	movlb	1	; select bank1
  3824  0EA5  01A0               	clrf	___wmul@multiplier^(0+128)
  3825  0EA6  07A0               	addwf	___wmul@multiplier^(0+128),f
  3826  0EA7  300E               	movlw	14
  3827  0EA8  2EC7               	goto	L8
  3828  0EA9                     l5662:	
  3829                           
  3830                           ;main.c: 920: else if((newsetwirespeed > 60) && (newsetwirespeed <= 120))
  3831  0EA9  3000               	movlw	0
  3832  0EAA  026A               	subwf	_newsetwirespeed+1,w
  3833  0EAB  303D               	movlw	61
  3834  0EAC  1903               	skipnz
  3835  0EAD  0269               	subwf	_newsetwirespeed,w
  3836  0EAE  1C03               	skipc
  3837  0EAF  2EE1               	goto	l5668
  3838  0EB0  3000               	movlw	0
  3839  0EB1  026A               	subwf	_newsetwirespeed+1,w
  3840  0EB2  3079               	movlw	121
  3841  0EB3  1903               	skipnz
  3842  0EB4  0269               	subwf	_newsetwirespeed,w
  3843  0EB5  1803               	skipnc
  3844  0EB6  2EE1               	goto	l5668
  3845                           
  3846                           ;main.c: 921: newsetwirespeed=(setwirespeed*12) / 10;
  3847  0EB7  300A               	movlw	10
  3848  0EB8  0021               	movlb	1	; select bank1
  3849  0EB9  00A6               	movwf	___lwdiv@divisor^(0+128)
  3850  0EBA  3000               	movlw	0
  3851  0EBB  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  3852  0EBC  0020               	movlb	0	; select bank0
  3853  0EBD  085B               	movf	_setwirespeed+1,w
  3854  0EBE  0021               	movlb	1	; select bank1
  3855  0EBF  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3856  0EC0  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3857  0EC1  0020               	movlb	0	; select bank0
  3858  0EC2  085A               	movf	_setwirespeed,w
  3859  0EC3  0021               	movlb	1	; select bank1
  3860  0EC4  01A0               	clrf	___wmul@multiplier^(0+128)
  3861  0EC5  07A0               	addwf	___wmul@multiplier^(0+128),f
  3862  0EC6  300C               	movlw	12
  3863  0EC7                     L8:	
  3864  0EC7  00A2               	movwf	___wmul@multiplicand^(0+128)
  3865  0EC8  3000               	movlw	0
  3866  0EC9  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  3867  0ECA  3199  216B  3189   	fcall	___wmul
  3868  0ECD  0021               	movlb	1	; select bank1
  3869  0ECE  0821               	movf	(?___wmul+1)^(0+128),w
  3870  0ECF  01A9               	clrf	(___lwdiv@dividend+1)^(0+128)
  3871  0ED0  07A9               	addwf	(___lwdiv@dividend+1)^(0+128),f
  3872  0ED1  0820               	movf	?___wmul^(0+128),w
  3873  0ED2  01A8               	clrf	___lwdiv@dividend^(0+128)
  3874  0ED3  07A8               	addwf	___lwdiv@dividend^(0+128),f
  3875  0ED4  3199  21D8  3189   	fcall	___lwdiv
  3876  0ED7  0021               	movlb	1	; select bank1
  3877  0ED8  0827               	movf	(?___lwdiv+1)^(0+128),w
  3878  0ED9  0020               	movlb	0	; select bank0
  3879  0EDA  01EA               	clrf	_newsetwirespeed+1
  3880  0EDB  07EA               	addwf	_newsetwirespeed+1,f
  3881  0EDC  0021               	movlb	1	; select bank1
  3882  0EDD  0826               	movf	?___lwdiv^(0+128),w
  3883  0EDE  0020               	movlb	0	; select bank0
  3884  0EDF  01E9               	clrf	_newsetwirespeed
  3885  0EE0  07E9               	addwf	_newsetwirespeed,f
  3886  0EE1                     l5668:	
  3887                           
  3888                           ;main.c: 923: }
  3889                           ;main.c: 925: if(psstatusu.psstatuss.craterspeedon==1 && wfstatusu.wfstatuss.twotfourtmo
      +                          de1==1)
  3890  0EE1  0020               	movlb	0	; select bank0
  3891  0EE2  1A6D               	btfsc	_psstatusu,4
  3892  0EE3  1C6E               	btfss	_wfstatusu,0
  3893  0EE4  2EF1               	goto	l724
  3894                           
  3895                           ;main.c: 926: newsetwirespeed=crater_speed;
  3896  0EE5  0022               	movlb	2	; select bank2
  3897  0EE6  083A               	movf	_crater_speed^(0+256),w	;volatile
  3898  0EE7  0021               	movlb	1	; select bank1
  3899  0EE8  00ED               	movwf	??_main^(0+128)
  3900  0EE9  01EE               	clrf	(??_main^(0+128)+1)
  3901  0EEA  086D               	movf	??_main^(0+128),w
  3902  0EEB  0020               	movlb	0	; select bank0
  3903  0EEC  00E9               	movwf	_newsetwirespeed
  3904  0EED  0021               	movlb	1	; select bank1
  3905  0EEE  086E               	movf	(??_main+1)^(0+128),w
  3906  0EEF  0020               	movlb	0	; select bank0
  3907  0EF0  00EA               	movwf	_newsetwirespeed+1
  3908  0EF1                     l724:	
  3909                           
  3910                           ;main.c: 928: if(newsetwirespeed > 10)
  3911  0EF1  3000               	movlw	0
  3912  0EF2  026A               	subwf	_newsetwirespeed+1,w
  3913  0EF3  300B               	movlw	11
  3914  0EF4  1903               	skipnz
  3915  0EF5  0269               	subwf	_newsetwirespeed,w
  3916  0EF6  1C03               	skipc
  3917  0EF7  2F28               	goto	l725
  3918                           
  3919                           ;main.c: 929: setpfreq=(3.6*newsetwirespeed);
  3920  0EF8  086A               	movf	_newsetwirespeed+1,w
  3921  0EF9  0021               	movlb	1	; select bank1
  3922  0EFA  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3923  0EFB  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3924  0EFC  0020               	movlb	0	; select bank0
  3925  0EFD  0869               	movf	_newsetwirespeed,w
  3926  0EFE  0021               	movlb	1	; select bank1
  3927  0EFF  01A8               	clrf	___lwtoft@c^(0+128)
  3928  0F00  07A8               	addwf	___lwtoft@c^(0+128),f
  3929  0F01  3199  212B  3189   	fcall	___lwtoft
  3930  0F04  0021               	movlb	1	; select bank1
  3931  0F05  0828               	movf	?___lwtoft^(0+128),w
  3932  0F06  00B8               	movwf	___ftmul@f2^(0+128)
  3933  0F07  0829               	movf	(?___lwtoft+1)^(0+128),w
  3934  0F08  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3935  0F09  082A               	movf	(?___lwtoft+2)^(0+128),w
  3936  0F0A  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3937  0F0B  3066               	movlw	102
  3938  0F0C  00B5               	movwf	___ftmul@f1^(0+128)
  3939  0F0D  3066               	movlw	102
  3940  0F0E  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3941  0F0F  3040               	movlw	64
  3942  0F10  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3943  0F11  3192  22E3  3189   	fcall	___ftmul
  3944  0F14  0021               	movlb	1	; select bank1
  3945  0F15  0835               	movf	?___ftmul^(0+128),w
  3946  0F16  00C5               	movwf	___fttol@f1^(0+128)
  3947  0F17  0836               	movf	(?___ftmul+1)^(0+128),w
  3948  0F18  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3949  0F19  0837               	movf	(?___ftmul+2)^(0+128),w
  3950  0F1A  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3951  0F1B  319F  2779  3189   	fcall	___fttol
  3952  0F1E  0021               	movlb	1	; select bank1
  3953  0F1F  0846               	movf	(?___fttol^(0+128)+1),w
  3954  0F20  0023               	movlb	3	; select bank3
  3955  0F21  01CF               	clrf	(_setpfreq+1)^(0+384)
  3956  0F22  07CF               	addwf	(_setpfreq+1)^(0+384),f
  3957  0F23  0021               	movlb	1	; select bank1
  3958  0F24  0845               	movf	?___fttol^(0+128),w
  3959  0F25  0023               	movlb	3	; select bank3
  3960  0F26  01CE               	clrf	_setpfreq^(0+384)
  3961  0F27  07CE               	addwf	_setpfreq^(0+384),f
  3962  0F28                     l725:	
  3963                           
  3964                           ;main.c: 932: Hi_setppwm=(newsetwirespeed+rel_wirespeed)*2.8;
  3965  0F28  0023               	movlb	3	; select bank3
  3966  0F29  084C               	movf	_rel_wirespeed^(0+384),w
  3967  0F2A  0020               	movlb	0	; select bank0
  3968  0F2B  0769               	addwf	_newsetwirespeed,w
  3969  0F2C  0021               	movlb	1	; select bank1
  3970  0F2D  00A8               	movwf	___lwtoft@c^(0+128)
  3971  0F2E  0023               	movlb	3	; select bank3
  3972  0F2F  084D               	movf	(_rel_wirespeed+1)^(0+384),w
  3973  0F30  0020               	movlb	0	; select bank0
  3974  0F31  3D6A               	addwfc	_newsetwirespeed+1,w
  3975  0F32  0021               	movlb	1	; select bank1
  3976  0F33  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  3977  0F34  3199  212B  3189   	fcall	___lwtoft
  3978  0F37  0021               	movlb	1	; select bank1
  3979  0F38  0828               	movf	?___lwtoft^(0+128),w
  3980  0F39  00B8               	movwf	___ftmul@f2^(0+128)
  3981  0F3A  0829               	movf	(?___lwtoft+1)^(0+128),w
  3982  0F3B  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3983  0F3C  082A               	movf	(?___lwtoft+2)^(0+128),w
  3984  0F3D  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3985  0F3E  3033               	movlw	51
  3986  0F3F  00B5               	movwf	___ftmul@f1^(0+128)
  3987  0F40  3033               	movlw	51
  3988  0F41  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3989  0F42  3040               	movlw	64
  3990  0F43  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3991  0F44  3192  22E3  3189   	fcall	___ftmul
  3992  0F47  0021               	movlb	1	; select bank1
  3993  0F48  0835               	movf	?___ftmul^(0+128),w
  3994  0F49  00C5               	movwf	___fttol@f1^(0+128)
  3995  0F4A  0836               	movf	(?___ftmul+1)^(0+128),w
  3996  0F4B  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3997  0F4C  0837               	movf	(?___ftmul+2)^(0+128),w
  3998  0F4D  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3999  0F4E  319F  2779  3189   	fcall	___fttol
  4000  0F51  0021               	movlb	1	; select bank1
  4001  0F52  0846               	movf	(?___fttol^(0+128)+1),w
  4002  0F53  0024               	movlb	4	; select bank4
  4003  0F54  01AB               	clrf	(_Hi_setppwm+1)^(0+512)
  4004  0F55  07AB               	addwf	(_Hi_setppwm+1)^(0+512),f
  4005  0F56  0021               	movlb	1	; select bank1
  4006  0F57  0845               	movf	?___fttol^(0+128),w
  4007  0F58  0024               	movlb	4	; select bank4
  4008  0F59  01AA               	clrf	_Hi_setppwm^(0+512)
  4009  0F5A  07AA               	addwf	_Hi_setppwm^(0+512),f
  4010                           
  4011                           ;main.c: 933: Lo_setppwm=(newsetwirespeed-rel_wirespeed)*2.8;
  4012  0F5B  0023               	movlb	3	; select bank3
  4013  0F5C  094C               	comf	_rel_wirespeed^(0+384),w
  4014  0F5D  0021               	movlb	1	; select bank1
  4015  0F5E  00ED               	movwf	??_main^(0+128)
  4016  0F5F  0023               	movlb	3	; select bank3
  4017  0F60  094D               	comf	(_rel_wirespeed+1)^(0+384),w
  4018  0F61  0021               	movlb	1	; select bank1
  4019  0F62  00EE               	movwf	(??_main^(0+128)+1)
  4020  0F63  0AED               	incf	??_main^(0+128),f
  4021  0F64  1903               	skipnz
  4022  0F65  0AEE               	incf	(??_main^(0+128)+1),f
  4023  0F66  0020               	movlb	0	; select bank0
  4024  0F67  0869               	movf	_newsetwirespeed,w
  4025  0F68  0021               	movlb	1	; select bank1
  4026  0F69  076D               	addwf	??_main^(0+128),w
  4027  0F6A  00A8               	movwf	___lwtoft@c^(0+128)
  4028  0F6B  0020               	movlb	0	; select bank0
  4029  0F6C  086A               	movf	_newsetwirespeed+1,w
  4030  0F6D  0021               	movlb	1	; select bank1
  4031  0F6E  3D6E               	addwfc	(??_main+1)^(0+128),w
  4032  0F6F  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  4033  0F70  3199  212B  3189   	fcall	___lwtoft
  4034  0F73  0021               	movlb	1	; select bank1
  4035  0F74  0828               	movf	?___lwtoft^(0+128),w
  4036  0F75  00B8               	movwf	___ftmul@f2^(0+128)
  4037  0F76  0829               	movf	(?___lwtoft+1)^(0+128),w
  4038  0F77  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4039  0F78  082A               	movf	(?___lwtoft+2)^(0+128),w
  4040  0F79  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4041  0F7A  3033               	movlw	51
  4042  0F7B  00B5               	movwf	___ftmul@f1^(0+128)
  4043  0F7C  3033               	movlw	51
  4044  0F7D  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4045  0F7E  3040               	movlw	64
  4046  0F7F  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4047  0F80  3192  22E3  3189   	fcall	___ftmul
  4048  0F83  0021               	movlb	1	; select bank1
  4049  0F84  0835               	movf	?___ftmul^(0+128),w
  4050  0F85  00C5               	movwf	___fttol@f1^(0+128)
  4051  0F86  0836               	movf	(?___ftmul+1)^(0+128),w
  4052  0F87  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4053  0F88  0837               	movf	(?___ftmul+2)^(0+128),w
  4054  0F89  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4055  0F8A  319F  2779  3189   	fcall	___fttol
  4056  0F8D  0021               	movlb	1	; select bank1
  4057  0F8E  0846               	movf	(?___fttol^(0+128)+1),w
  4058  0F8F  0024               	movlb	4	; select bank4
  4059  0F90  01AD               	clrf	(_Lo_setppwm+1)^(0+512)
  4060  0F91  07AD               	addwf	(_Lo_setppwm+1)^(0+512),f
  4061  0F92  0021               	movlb	1	; select bank1
  4062  0F93  0845               	movf	?___fttol^(0+128),w
  4063  0F94  0024               	movlb	4	; select bank4
  4064  0F95  01AC               	clrf	_Lo_setppwm^(0+512)
  4065  0F96  07AC               	addwf	_Lo_setppwm^(0+512),f
  4066                           
  4067                           ;main.c: 934: }
  4068  0F97  2FBD               	goto	l5686
  4069  0F98                     l713:	
  4070                           
  4071                           ;main.c: 935: else if(psstatusu.psstatuss.motoroncommand!=1)
  4072  0F98  19ED               	btfsc	_psstatusu,3
  4073  0F99  2FBD               	goto	l5686
  4074                           
  4075                           ;main.c: 936: {
  4076                           ;main.c: 937: Update_PWM(setwirespeed*0);
  4077  0F9A  085B               	movf	_setwirespeed+1,w
  4078  0F9B  0021               	movlb	1	; select bank1
  4079  0F9C  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  4080  0F9D  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  4081  0F9E  0020               	movlb	0	; select bank0
  4082  0F9F  085A               	movf	_setwirespeed,w
  4083  0FA0  0021               	movlb	1	; select bank1
  4084  0FA1  01A0               	clrf	___wmul@multiplier^(0+128)
  4085  0FA2  07A0               	addwf	___wmul@multiplier^(0+128),f
  4086  0FA3  3000               	movlw	0
  4087  0FA4  00A2               	movwf	___wmul@multiplicand^(0+128)
  4088  0FA5  3000               	movlw	0
  4089  0FA6  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  4090  0FA7  3199  216B  3189   	fcall	___wmul
  4091  0FAA  0021               	movlb	1	; select bank1
  4092  0FAB  0821               	movf	(?___wmul+1)^(0+128),w
  4093  0FAC  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  4094  0FAD  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  4095  0FAE  0820               	movf	?___wmul^(0+128),w
  4096  0FAF  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  4097  0FB0  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  4098  0FB1  3199  2189  3189   	fcall	_Update_PWM
  4099                           
  4100                           ;main.c: 938: openloopcnt =0;
  4101  0FB4  0024               	movlb	4	; select bank4
  4102  0FB5  01BE               	clrf	_openloopcnt^(0+512)
  4103  0FB6  01BF               	clrf	(_openloopcnt+1)^(0+512)
  4104                           
  4105                           ;main.c: 939: closeloopf =0;
  4106  0FB7  0022               	movlb	2	; select bank2
  4107  0FB8  01B6               	clrf	_closeloopf^(0+256)
  4108                           
  4109                           ;main.c: 940: closeloop1f =0;
  4110  0FB9  0023               	movlb	3	; select bank3
  4111  0FBA  01D3               	clrf	_closeloop1f^(0+384)
  4112                           
  4113                           ;main.c: 941: cyclestrtf=0;
  4114  0FBB  0022               	movlb	2	; select bank2
  4115  0FBC  01BC               	clrf	_cyclestrtf^(0+256)
  4116  0FBD                     l5686:	
  4117                           
  4118                           ;main.c: 943: }
  4119                           ;main.c: 944: TypeU.TypeS.wirespeed=0;
  4120  0FBD  0020               	movlb	0	; select bank0
  4121  0FBE  1067               	bcf	_TypeU,0
  4122                           
  4123                           ;main.c: 945: TypeU.TypeS.amp=1;
  4124  0FBF  1468               	bsf	_TypeU+1,0
  4125                           
  4126                           ;main.c: 946: TypeU.TypeS.thickness=0;
  4127  0FC0  10E7               	bcf	_TypeU,1
  4128                           
  4129                           ;main.c: 947: TypeU.TypeS.arclength =0;
  4130  0FC1  1167               	bcf	_TypeU,2
  4131                           
  4132                           ;main.c: 948: TypeU.TypeS.vtg =1;
  4133  0FC2  14E8               	bsf	_TypeU+1,1
  4134                           
  4135                           ;main.c: 949: TypeU.TypeS.sec =0;
  4136  0FC3  1168               	bcf	_TypeU+1,2
  4137                           
  4138                           ;main.c: 951: TypeDP.DPGROUP[0]=0x00;
  4139  0FC4  01EB               	clrf	_TypeDP
  4140                           
  4141                           ;main.c: 952: TypeDP.TypeD.digitdp5 =1;
  4142  0FC5  166B               	bsf	_TypeDP,4
  4143                           
  4144                           ;main.c: 953: disp_hex_window1(Actual_amp);
  4145  0FC6  0023               	movlb	3	; select bank3
  4146  0FC7  0863               	movf	(_Actual_amp+1)^(0+384),w
  4147  0FC8  0021               	movlb	1	; select bank1
  4148  0FC9  01AF               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  4149  0FCA  07AF               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  4150  0FCB  0023               	movlb	3	; select bank3
  4151  0FCC  0862               	movf	_Actual_amp^(0+384),w
  4152  0FCD  0021               	movlb	1	; select bank1
  4153  0FCE  01AE               	clrf	disp_hex_window1@hex_data^(0+128)
  4154  0FCF  07AE               	addwf	disp_hex_window1@hex_data^(0+128),f
  4155  0FD0  319C  2427  3189   	fcall	_disp_hex_window1
  4156                           
  4157                           ;main.c: 954: disp_hex_window2(Actual_vtg);
  4158  0FD3  0023               	movlb	3	; select bank3
  4159  0FD4  0865               	movf	(_Actual_vtg+1)^(0+384),w
  4160  0FD5  0021               	movlb	1	; select bank1
  4161  0FD6  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  4162  0FD7  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  4163  0FD8  0023               	movlb	3	; select bank3
  4164  0FD9  0864               	movf	_Actual_vtg^(0+384),w
  4165  0FDA  0021               	movlb	1	; select bank1
  4166  0FDB  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  4167  0FDC  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  4168  0FDD  319C  248B  3189   	fcall	_disp_hex_window2
  4169                           
  4170                           ;main.c: 955: dispupdatef =1;
  4171  0FE0  3001               	movlw	1
  4172  0FE1  0021               	movlb	1	; select bank1
  4173  0FE2  00ED               	movwf	??_main^(0+128)
  4174  0FE3  086D               	movf	??_main^(0+128),w
  4175  0FE4  0020               	movlb	0	; select bank0
  4176  0FE5  00EF               	movwf	_dispupdatef	;volatile
  4177  0FE6                     l5708:	
  4178                           
  4179                           ;main.c: 957: }
  4180                           ;main.c: 958: }
  4181                           ;main.c: 960: if(universal_error_latch==1)
  4182  0FE6  0022               	movlb	2	; select bank2
  4183  0FE7  085D               	movf	_universal_error_latch^(0+256),w	;volatile
  4184  0FE8  3A01               	xorlw	1
  4185  0FE9  1D03               	skipz
  4186  0FEA  2FF3               	goto	l5714
  4187                           
  4188                           ;main.c: 961: {
  4189                           ;main.c: 962: dispupdatef=1;
  4190  0FEB  3001               	movlw	1
  4191  0FEC  0021               	movlb	1	; select bank1
  4192  0FED  00ED               	movwf	??_main^(0+128)
  4193  0FEE  086D               	movf	??_main^(0+128),w
  4194  0FEF  0020               	movlb	0	; select bank0
  4195  0FF0  00EF               	movwf	_dispupdatef	;volatile
  4196                           
  4197                           ;main.c: 963: universal_error_latch=0;
  4198  0FF1  0022               	movlb	2	; select bank2
  4199  0FF2  01DD               	clrf	_universal_error_latch^(0+256)	;volatile
  4200  0FF3                     l5714:	
  4201                           
  4202                           ;main.c: 964: }
  4203                           ;main.c: 965: if(( (weldmode=='P') || (weldmode=='G') ))
  4204  0FF3  0020               	movlb	0	; select bank0
  4205  0FF4  0866               	movf	_weldmode,w	;volatile
  4206  0FF5  3A50               	xorlw	80
  4207  0FF6  1903               	skipnz
  4208  0FF7  2FFC               	goto	l5718
  4209  0FF8  0866               	movf	_weldmode,w	;volatile
  4210  0FF9  3A47               	xorlw	71
  4211  0FFA  1D03               	skipz
  4212  0FFB  29A1               	goto	l5288
  4213  0FFC                     l5718:	
  4214                           
  4215                           ;main.c: 966: detect_display_error();
  4216  0FFC  3191  2185  3189   	fcall	_detect_display_error
  4217  0FFF  29A1               	goto	l5288
  4218  1000                     __end_of_main:	
  4219                           
  4220                           	psect	text1
  4221  1918                     __ptext1:	
  4222 ;; *************** function _uart_init *****************
  4223 ;; Defined at:
  4224 ;;		line 1203 in file "main.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;		None
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;		None
  4229 ;; Return value:  Size  Location     Type
  4230 ;;		None               void
  4231 ;; Registers used:
  4232 ;;		wreg
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4242 ;;Total ram usage:        0 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    3
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_main
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           
  4253                           ;psect for function _uart_init
  4254  1918                     _uart_init:	
  4255                           
  4256                           ;main.c: 1205: RCSTAbits.SPEN=1;
  4257                           
  4258                           ;incstack = 0
  4259                           ; Regs used in _uart_init: [wreg]
  4260  1918  0023               	movlb	3	; select bank3
  4261  1919  179D               	bsf	29,7	;volatile
  4262                           
  4263                           ;main.c: 1206: TRISCbits.TRISC6=0;
  4264  191A  0021               	movlb	1	; select bank1
  4265  191B  130E               	bcf	14,6	;volatile
  4266                           
  4267                           ;main.c: 1207: TRISCbits.TRISC7=1;
  4268  191C  178E               	bsf	14,7	;volatile
  4269                           
  4270                           ;main.c: 1208: TXSTAbits.BRGH=0;
  4271  191D  0023               	movlb	3	; select bank3
  4272  191E  111E               	bcf	30,2	;volatile
  4273                           
  4274                           ;main.c: 1209: BAUDCTLbits.BRG16=0;
  4275  191F  119F               	bcf	31,3	;volatile
  4276                           
  4277                           ;main.c: 1210: TXSTAbits.SYNC=0;
  4278  1920  121E               	bcf	30,4	;volatile
  4279                           
  4280                           ;main.c: 1211: SPBRG=51;
  4281  1921  3033               	movlw	51
  4282  1922  009B               	movwf	27	;volatile
  4283                           
  4284                           ;main.c: 1212: TXSTA=0x20;
  4285  1923  3020               	movlw	32
  4286  1924  009E               	movwf	30	;volatile
  4287                           
  4288                           ;main.c: 1213: TXSTAbits.TXEN=0;
  4289  1925  129E               	bcf	30,5	;volatile
  4290                           
  4291                           ;main.c: 1214: RCSTAbits.CREN=0;
  4292  1926  121D               	bcf	29,4	;volatile
  4293                           
  4294                           ;main.c: 1215: PIE1bits.RCIE=0;
  4295  1927  0021               	movlb	1	; select bank1
  4296  1928  1291               	bcf	17,5	;volatile
  4297                           
  4298                           ;main.c: 1216: PIE1bits.TXIE=0;
  4299  1929  1211               	bcf	17,4	;volatile
  4300  192A  0008               	return
  4301  192B                     __end_of_uart_init:	
  4302                           
  4303                           	psect	text2
  4304  1B07                     __ptext2:	
  4305 ;; *************** function _transmittops *****************
  4306 ;; Defined at:
  4307 ;;		line 1245 in file "main.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;		None
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;		None
  4312 ;; Return value:  Size  Location     Type
  4313 ;;		None               void
  4314 ;; Registers used:
  4315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4324 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;Total ram usage:        1 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    4
  4328 ;; This function calls:
  4329 ;;		_Send_Byte
  4330 ;; This function is called by:
  4331 ;;		_main
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           
  4336                           ;psect for function _transmittops
  4337  1B07                     _transmittops:	
  4338                           
  4339                           ;main.c: 1247: chksum=0;
  4340                           
  4341                           ;incstack = 0
  4342                           ; Regs used in _transmittops: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4343  1B07  0022               	movlb	2	; select bank2
  4344  1B08  01B5               	clrf	_chksum^(0+256)
  4345                           
  4346                           ;main.c: 1248: pstowfstru.pstowfstrs.psstatusbyte=0xBB;
  4347  1B09  30BB               	movlw	187
  4348  1B0A  0021               	movlb	1	; select bank1
  4349  1B0B  00A1               	movwf	??_transmittops^(0+128)
  4350  1B0C  0821               	movf	??_transmittops^(0+128),w
  4351  1B0D  0024               	movlb	4	; select bank4
  4352  1B0E  00CE               	movwf	(_pstowfstru^(0+512)+12)
  4353                           
  4354                           ;main.c: 1250: if(cWf2t4tmodefg == 1)
  4355  1B0F  0022               	movlb	2	; select bank2
  4356  1B10  0834               	movf	_cWf2t4tmodefg^(0+256),w
  4357  1B11  3A01               	xorlw	1
  4358  1B12  1D03               	skipz
  4359  1B13  2B17               	goto	l794
  4360                           
  4361                           ;main.c: 1251: {
  4362                           ;main.c: 1252: wfstatusu.wfstatuss.twotfourtmode1 = 1;
  4363  1B14  0020               	movlb	0	; select bank0
  4364  1B15  146E               	bsf	_wfstatusu,0
  4365                           
  4366                           ;main.c: 1253: }
  4367  1B16  2B19               	goto	l4464
  4368  1B17                     l794:	
  4369                           
  4370                           ;main.c: 1254: else
  4371                           ;main.c: 1255: {
  4372                           ;main.c: 1256: wfstatusu.wfstatuss.twotfourtmode1 = 0;
  4373  1B17  0020               	movlb	0	; select bank0
  4374  1B18  106E               	bcf	_wfstatusu,0
  4375  1B19                     l4464:	
  4376                           
  4377                           ;main.c: 1257: }
  4378                           ;main.c: 1259: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4379  1B19  086E               	movf	_wfstatusu,w
  4380  1B1A  0021               	movlb	1	; select bank1
  4381  1B1B  00A1               	movwf	??_transmittops^(0+128)
  4382  1B1C  0821               	movf	??_transmittops^(0+128),w
  4383  1B1D  0024               	movlb	4	; select bank4
  4384  1B1E  00CF               	movwf	(_pstowfstru^(0+512)+13)
  4385                           
  4386                           ;main.c: 1268: Tx_ptr=0;
  4387  1B1F  0023               	movlb	3	; select bank3
  4388  1B20  01D2               	clrf	_Tx_ptr^(0+384)
  4389                           
  4390                           ;main.c: 1269: Send_Byte('@');
  4391  1B21  3040               	movlw	64
  4392  1B22  3198  209A  319B   	fcall	_Send_Byte
  4393                           
  4394                           ;main.c: 1270: for(lmn=0;lmn<=15;lmn++)
  4395  1B25  0022               	movlb	2	; select bank2
  4396  1B26  01A4               	clrf	_lmn^(0+256)
  4397  1B27  01A5               	clrf	(_lmn+1)^(0+256)
  4398  1B28  3000               	movlw	0
  4399  1B29  0225               	subwf	(_lmn+1)^(0+256),w
  4400  1B2A  3010               	movlw	16
  4401  1B2B  1903               	skipnz
  4402  1B2C  0224               	subwf	_lmn^(0+256),w
  4403  1B2D  1803               	btfsc	3,0
  4404  1B2E  2B50               	goto	l4484
  4405  1B2F                     l4476:	
  4406                           
  4407                           ;main.c: 1271: {
  4408                           ;main.c: 1272: chksum=chksum+pstowfstru.pstransarr[lmn];
  4409  1B2F  0824               	movf	_lmn^(0+256),w
  4410  1B30  3E42               	addlw	_pstowfstru& (0+255)
  4411  1B31  0086               	movwf	6
  4412  1B32  3002               	movlw	2	; select bank4/5
  4413  1B33  0087               	movwf	7
  4414  1B34  0801               	movf	1,w
  4415  1B35  0735               	addwf	_chksum^(0+256),w
  4416  1B36  0021               	movlb	1	; select bank1
  4417  1B37  00A1               	movwf	??_transmittops^(0+128)
  4418  1B38  0821               	movf	??_transmittops^(0+128),w
  4419  1B39  0022               	movlb	2	; select bank2
  4420  1B3A  00B5               	movwf	_chksum^(0+256)
  4421                           
  4422                           ;main.c: 1273: Send_Byte(pstowfstru.pstransarr[lmn]);
  4423  1B3B  0824               	movf	_lmn^(0+256),w
  4424  1B3C  3E42               	addlw	_pstowfstru& (0+255)
  4425  1B3D  0086               	movwf	6
  4426  1B3E  3002               	movlw	2	; select bank4/5
  4427  1B3F  0087               	movwf	7
  4428  1B40  0801               	movf	1,w
  4429  1B41  3198  209A  319B   	fcall	_Send_Byte
  4430  1B44  3001               	movlw	1
  4431  1B45  0022               	movlb	2	; select bank2
  4432  1B46  07A4               	addwf	_lmn^(0+256),f
  4433  1B47  3000               	movlw	0
  4434  1B48  3DA5               	addwfc	(_lmn+1)^(0+256),f
  4435  1B49  3000               	movlw	0
  4436  1B4A  0225               	subwf	(_lmn+1)^(0+256),w
  4437  1B4B  3010               	movlw	16
  4438  1B4C  1903               	skipnz
  4439  1B4D  0224               	subwf	_lmn^(0+256),w
  4440  1B4E  1C03               	skipc
  4441  1B4F  2B2F               	goto	l4476
  4442  1B50                     l4484:	
  4443                           
  4444                           ;main.c: 1274: }
  4445                           ;main.c: 1275: if(cEditfg == 1)
  4446  1B50  0833               	movf	_cEditfg^(0+256),w
  4447  1B51  3A01               	xorlw	1
  4448  1B52  1D03               	skipz
  4449  1B53  2B56               	goto	l4488
  4450                           
  4451                           ;main.c: 1276: {
  4452                           ;main.c: 1277: Send_Byte('E');
  4453  1B54  3045               	movlw	69
  4454  1B55  2B57               	goto	L10
  4455  1B56                     l4488:	
  4456                           ;main.c: 1278: }
  4457                           
  4458                           
  4459                           ;main.c: 1279: else
  4460                           ;main.c: 1280: {
  4461                           ;main.c: 1281: Send_Byte('X');
  4462  1B56  3058               	movlw	88
  4463  1B57                     L10:	
  4464  1B57  3198  209A  319B   	fcall	_Send_Byte
  4465                           
  4466                           ;main.c: 1282: }
  4467                           ;main.c: 1283: pstowfstru.pstowfstrs.setthickness = chksum;
  4468  1B5A  0022               	movlb	2	; select bank2
  4469  1B5B  0835               	movf	_chksum^(0+256),w
  4470  1B5C  0021               	movlb	1	; select bank1
  4471  1B5D  00A1               	movwf	??_transmittops^(0+128)
  4472  1B5E  0821               	movf	??_transmittops^(0+128),w
  4473  1B5F  0024               	movlb	4	; select bank4
  4474  1B60  00C6               	movwf	(_pstowfstru^(0+512)+4)
  4475                           
  4476                           ;main.c: 1284: Send_Byte(chksum);
  4477  1B61  0022               	movlb	2	; select bank2
  4478  1B62  0835               	movf	_chksum^(0+256),w
  4479  1B63  3198  209A         	fcall	_Send_Byte
  4480  1B65  0008               	return
  4481  1B66                     __end_of_transmittops:	
  4482                           
  4483                           	psect	text3
  4484  18A4                     __ptext3:	
  4485 ;; *************** function _system_init *****************
  4486 ;; Defined at:
  4487 ;;		line 1110 in file "main.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;		None               void
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;Total ram usage:        0 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    3
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           
  4516                           ;psect for function _system_init
  4517  18A4                     _system_init:	
  4518                           
  4519                           ;main.c: 1114: OSCCONbits.IRCF=14;
  4520                           
  4521                           ;incstack = 0
  4522                           ; Regs used in _system_init: [wreg+status,2+status,0]
  4523  18A4  0021               	movlb	1	; select bank1
  4524  18A5  0819               	movf	25,w	;volatile
  4525  18A6  3987               	andlw	-121
  4526  18A7  3870               	iorlw	112
  4527  18A8  0099               	movwf	25	;volatile
  4528                           
  4529                           ;main.c: 1116: OSCCONbits.SCS=0;
  4530  18A9  30FC               	movlw	-4
  4531  18AA  0599               	andwf	25,f	;volatile
  4532                           
  4533                           ;main.c: 1117: OSCTUNEbits.TUN=0;
  4534  18AB  30C0               	movlw	-64
  4535  18AC  0598               	andwf	24,f	;volatile
  4536  18AD  0008               	return
  4537  18AE                     __end_of_system_init:	
  4538                           
  4539                           	psect	text4
  4540  1940                     __ptext4:	
  4541 ;; *************** function _send_status *****************
  4542 ;; Defined at:
  4543 ;;		line 1287 in file "main.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;		None
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;		None               void
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0, pclath, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4561 ;;Total ram usage:        1 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    4
  4564 ;; This function calls:
  4565 ;;		_Send_Byte
  4566 ;; This function is called by:
  4567 ;;		_main
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           
  4572                           ;psect for function _send_status
  4573  1940                     _send_status:	
  4574                           
  4575                           ;main.c: 1289: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4576                           
  4577                           ;incstack = 0
  4578                           ; Regs used in _send_status: [wreg+status,2+status,0+pclath+cstack]
  4579  1940  0020               	movlb	0	; select bank0
  4580  1941  086E               	movf	_wfstatusu,w
  4581  1942  0021               	movlb	1	; select bank1
  4582  1943  00A1               	movwf	??_send_status^(0+128)
  4583  1944  0821               	movf	??_send_status^(0+128),w
  4584  1945  0024               	movlb	4	; select bank4
  4585  1946  00CF               	movwf	(_pstowfstru^(0+512)+13)
  4586                           
  4587                           ;main.c: 1290: Send_Byte('#');
  4588  1947  3023               	movlw	35
  4589  1948  3198  209A  3199   	fcall	_Send_Byte
  4590                           
  4591                           ;main.c: 1291: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4592  194B  0024               	movlb	4	; select bank4
  4593  194C  084F               	movf	(_pstowfstru^(0+512)+13),w
  4594  194D  3198  209A  3199   	fcall	_Send_Byte
  4595                           
  4596                           ;main.c: 1292: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4597  1950  0024               	movlb	4	; select bank4
  4598  1951  084F               	movf	(_pstowfstru^(0+512)+13),w
  4599  1952  3198  209A         	fcall	_Send_Byte
  4600  1954  0008               	return
  4601  1955                     __end_of_send_status:	
  4602                           
  4603                           	psect	text5
  4604  189A                     __ptext5:	
  4605 ;; *************** function _Send_Byte *****************
  4606 ;; Defined at:
  4607 ;;		line 1236 in file "main.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  transbyte       1    wreg     unsigned char 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  transbyte       1    0[BANK1 ] unsigned char 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;		None               void
  4614 ;; Registers used:
  4615 ;;		wreg
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;Total ram usage:        1 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    3
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_transmittops
  4632 ;;		_send_status
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           
  4637                           ;psect for function _Send_Byte
  4638  189A                     _Send_Byte:	
  4639                           
  4640                           ;incstack = 0
  4641                           ; Regs used in _Send_Byte: [wreg]
  4642                           ;Send_Byte@transbyte stored from wreg
  4643  189A  0021               	movlb	1	; select bank1
  4644  189B  00A0               	movwf	Send_Byte@transbyte^(0+128)
  4645  189C                     l788:	
  4646                           ;main.c: 1238: while(TXSTAbits.TRMT != 1);
  4647                           
  4648  189C  0023               	movlb	3	; select bank3
  4649  189D  1C9E               	btfss	30,1	;volatile
  4650  189E  289C               	goto	l788
  4651                           
  4652                           ;main.c: 1239: TXREG=transbyte;
  4653  189F  0021               	movlb	1	; select bank1
  4654  18A0  0820               	movf	Send_Byte@transbyte^(0+128),w
  4655  18A1  0023               	movlb	3	; select bank3
  4656  18A2  009A               	movwf	26	;volatile
  4657  18A3  0008               	return
  4658  18A4                     __end_of_Send_Byte:	
  4659                           
  4660                           	psect	text6
  4661  1955                     __ptext6:	
  4662 ;; *************** function _portpin_init *****************
  4663 ;; Defined at:
  4664 ;;		line 1120 in file "main.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;		None               void
  4671 ;; Registers used:
  4672 ;;		wreg, status,2
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4682 ;;Total ram usage:        0 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    3
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_main
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           
  4693                           ;psect for function _portpin_init
  4694  1955                     _portpin_init:	
  4695                           
  4696                           ;main.c: 1122: TRISA=0x1F;
  4697                           
  4698                           ;incstack = 0
  4699                           ; Regs used in _portpin_init: [wreg+status,2]
  4700  1955  301F               	movlw	31
  4701  1956  0021               	movlb	1	; select bank1
  4702  1957  008C               	movwf	12	;volatile
  4703                           
  4704                           ;main.c: 1123: TRISB=0x00;
  4705  1958  018D               	clrf	13	;volatile
  4706                           
  4707                           ;main.c: 1124: TRISC=0x00;
  4708  1959  018E               	clrf	14	;volatile
  4709                           
  4710                           ;main.c: 1125: ANSELA=0X00;
  4711  195A  0023               	movlb	3	; select bank3
  4712  195B  018C               	clrf	12	;volatile
  4713                           
  4714                           ;main.c: 1126: ANSELB=0X00;
  4715  195C  018D               	clrf	13	;volatile
  4716                           
  4717                           ;main.c: 1129: PORTA=0X00;
  4718  195D  0020               	movlb	0	; select bank0
  4719  195E  018C               	clrf	12	;volatile
  4720                           
  4721                           ;main.c: 1130: PORTC=0X00;
  4722  195F  018E               	clrf	14	;volatile
  4723                           
  4724                           ;main.c: 1131: TRISAbits.TRISA1 =1;
  4725  1960  0021               	movlb	1	; select bank1
  4726  1961  148C               	bsf	12,1	;volatile
  4727                           
  4728                           ;main.c: 1132: TRISAbits.TRISA2 =1;
  4729  1962  150C               	bsf	12,2	;volatile
  4730                           
  4731                           ;main.c: 1133: TRISAbits.TRISA3 =1;
  4732  1963  158C               	bsf	12,3	;volatile
  4733                           
  4734                           ;main.c: 1134: TRISAbits.TRISA4 =1;
  4735  1964  160C               	bsf	12,4	;volatile
  4736                           
  4737                           ;main.c: 1135: TRISCbits.TRISC1 =1;
  4738  1965  148E               	bsf	14,1	;volatile
  4739                           
  4740                           ;main.c: 1136: TRISCbits.TRISC3=0;
  4741  1966  118E               	bcf	14,3	;volatile
  4742                           
  4743                           ;main.c: 1137: TRISAbits.TRISA5=0;
  4744  1967  128C               	bcf	12,5	;volatile
  4745                           
  4746                           ;main.c: 1138: TRISCbits.TRISC5=1;
  4747  1968  168E               	bsf	14,5	;volatile
  4748                           
  4749                           ;main.c: 1139: TRISAbits.TRISA0=0;
  4750  1969  100C               	bcf	12,0	;volatile
  4751  196A  0008               	return
  4752  196B                     __end_of_portpin_init:	
  4753                           
  4754                           	psect	text7
  4755  069B                     __ptext7:	
  4756 ;; *************** function _key_application *****************
  4757 ;; Defined at:
  4758 ;;		line 970 in file "main.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  keypress        1    wreg     unsigned char 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;  keypress        1   61[BANK1 ] unsigned char 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;		None               void
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0, pclath, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4774 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4775 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4776 ;;Total ram usage:        3 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    5
  4779 ;; This function calls:
  4780 ;;		_Update_PWM
  4781 ;;		___wmul
  4782 ;;		_disp_hex_window2
  4783 ;; This function is called by:
  4784 ;;		_main
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           
  4789                           ;psect for function _key_application
  4790  069B                     _key_application:	
  4791                           
  4792                           ;incstack = 0
  4793                           ; Regs used in _key_application: [wreg+status,2+status,0+pclath+cstack]
  4794                           ;key_application@keypress stored from wreg
  4795  069B  0021               	movlb	1	; select bank1
  4796  069C  00DD               	movwf	key_application@keypress^(0+128)
  4797                           
  4798                           ;main.c: 972: if(keypress==1)
  4799  069D  085D               	movf	key_application@keypress^(0+128),w
  4800  069E  3A01               	xorlw	1
  4801  069F  1D03               	skipz
  4802  06A0  2EE5               	goto	l4510
  4803                           
  4804                           ;main.c: 973: {
  4805                           ;main.c: 990: if(gaschkfg == 0)
  4806  06A1  0022               	movlb	2	; select bank2
  4807  06A2  08C1               	movf	_gaschkfg^(0+256),f
  4808  06A3  1D03               	skipz
  4809  06A4  2EDB               	goto	l4506
  4810                           
  4811                           ;main.c: 991: {
  4812                           ;main.c: 992: igascntr=15;
  4813  06A5  300F               	movlw	15
  4814  06A6  0023               	movlb	3	; select bank3
  4815  06A7  00BA               	movwf	_igascntr^(0+384)
  4816  06A8  3000               	movlw	0
  4817  06A9  00BB               	movwf	(_igascntr^(0+384)+1)
  4818                           
  4819                           ;main.c: 993: gaschkfg=1;
  4820  06AA  0022               	movlb	2	; select bank2
  4821  06AB  01C1               	clrf	_gaschkfg^(0+256)
  4822  06AC  0AC1               	incf	_gaschkfg^(0+256),f
  4823                           
  4824                           ;main.c: 994: TypeU.TypeS.gason =1;
  4825  06AD  0020               	movlb	0	; select bank0
  4826  06AE  15E7               	bsf	_TypeU,3
  4827                           
  4828                           ;main.c: 995: PORTCbits.RC3 =1;
  4829  06AF  158E               	bsf	14,3	;volatile
  4830                           
  4831                           ;main.c: 996: diswin1[0]= 0x11;
  4832  06B0  3011               	movlw	17
  4833  06B1  0021               	movlb	1	; select bank1
  4834  06B2  00DB               	movwf	??_key_application^(0+128)
  4835  06B3  085B               	movf	??_key_application^(0+128),w
  4836  06B4  0022               	movlb	2	; select bank2
  4837  06B5  00E4               	movwf	_diswin1^(0+256)
  4838                           
  4839                           ;main.c: 997: diswin1[1]= 0x0B;
  4840  06B6  300B               	movlw	11
  4841  06B7  0021               	movlb	1	; select bank1
  4842  06B8  00DB               	movwf	??_key_application^(0+128)
  4843  06B9  085B               	movf	??_key_application^(0+128),w
  4844  06BA  0022               	movlb	2	; select bank2
  4845  06BB  00E5               	movwf	(_diswin1^(0+256)+1)
  4846                           
  4847                           ;main.c: 998: diswin1[2]= 0x1D;
  4848  06BC  301D               	movlw	29
  4849  06BD  0021               	movlb	1	; select bank1
  4850  06BE  00DB               	movwf	??_key_application^(0+128)
  4851  06BF  085B               	movf	??_key_application^(0+128),w
  4852  06C0  0022               	movlb	2	; select bank2
  4853  06C1  00E6               	movwf	(_diswin1^(0+256)+2)
  4854                           
  4855                           ;main.c: 1000: diswin1[3]= 0x19;
  4856  06C2  3019               	movlw	25
  4857  06C3  0021               	movlb	1	; select bank1
  4858  06C4  00DB               	movwf	??_key_application^(0+128)
  4859  06C5  085B               	movf	??_key_application^(0+128),w
  4860  06C6  0022               	movlb	2	; select bank2
  4861  06C7  00E7               	movwf	(_diswin1^(0+256)+3)
  4862                           
  4863                           ;main.c: 1001: diswin1[4]= 0x18;
  4864  06C8  3018               	movlw	24
  4865  06C9  0021               	movlb	1	; select bank1
  4866  06CA  00DB               	movwf	??_key_application^(0+128)
  4867  06CB  085B               	movf	??_key_application^(0+128),w
  4868  06CC  0022               	movlb	2	; select bank2
  4869  06CD  00E8               	movwf	(_diswin1^(0+256)+4)
  4870                           
  4871                           ;main.c: 1002: diswin1[5]= 0x25;
  4872  06CE  3025               	movlw	37
  4873  06CF  0021               	movlb	1	; select bank1
  4874  06D0  00DB               	movwf	??_key_application^(0+128)
  4875  06D1  085B               	movf	??_key_application^(0+128),w
  4876  06D2  0022               	movlb	2	; select bank2
  4877  06D3  00E9               	movwf	(_diswin1^(0+256)+5)
  4878                           
  4879                           ;main.c: 1003: dispupdatef =1;
  4880  06D4  3001               	movlw	1
  4881  06D5  0021               	movlb	1	; select bank1
  4882  06D6  00DB               	movwf	??_key_application^(0+128)
  4883  06D7  085B               	movf	??_key_application^(0+128),w
  4884  06D8  0020               	movlb	0	; select bank0
  4885  06D9  00EF               	movwf	_dispupdatef	;volatile
  4886                           
  4887                           ;main.c: 1004: }
  4888  06DA  2EDE               	goto	l4508
  4889  06DB                     l4506:	
  4890                           
  4891                           ;main.c: 1005: else
  4892                           ;main.c: 1006: {
  4893                           ;main.c: 1007: igascntr = 0;
  4894  06DB  0023               	movlb	3	; select bank3
  4895  06DC  01BA               	clrf	_igascntr^(0+384)
  4896  06DD  01BB               	clrf	(_igascntr+1)^(0+384)
  4897  06DE                     l4508:	
  4898                           
  4899                           ;main.c: 1008: }
  4900                           ;main.c: 1010: dispupdatef =1;
  4901  06DE  3001               	movlw	1
  4902  06DF  0021               	movlb	1	; select bank1
  4903  06E0  00DB               	movwf	??_key_application^(0+128)
  4904  06E1  085B               	movf	??_key_application^(0+128),w
  4905  06E2  0020               	movlb	0	; select bank0
  4906  06E3  00EF               	movwf	_dispupdatef	;volatile
  4907                           
  4908                           ;main.c: 1012: }
  4909  06E4  0008               	return
  4910  06E5                     l4510:	
  4911                           
  4912                           ;main.c: 1013: else if(keypress==2)
  4913  06E5  0021               	movlb	1	; select bank1
  4914  06E6  085D               	movf	key_application@keypress^(0+128),w
  4915  06E7  3A02               	xorlw	2
  4916  06E8  1D03               	skipz
  4917  06E9  2F77               	goto	l4548
  4918                           
  4919                           ;main.c: 1014: {
  4920                           ;main.c: 1015: inchcnt=10;
  4921  06EA  300A               	movlw	10
  4922  06EB  00DB               	movwf	??_key_application^(0+128)
  4923  06EC  085B               	movf	??_key_application^(0+128),w
  4924  06ED  0020               	movlb	0	; select bank0
  4925  06EE  00EC               	movwf	_inchcnt
  4926  06EF                     l4538:	
  4927                           ;main.c: 1016: while(key==2)
  4928                           
  4929  06EF  0021               	movlb	1	; select bank1
  4930  06F0  086F               	movf	_key^(0+128),w	;volatile
  4931  06F1  3A02               	xorlw	2
  4932  06F2  1D03               	btfss	3,2
  4933  06F3  2F53               	goto	l4540
  4934                           
  4935                           ;main.c: 1017: {
  4936                           ;main.c: 1018: TypeU.TypeS.inch =1;
  4937  06F4  0020               	movlb	0	; select bank0
  4938  06F5  15E8               	bsf	_TypeU+1,3
  4939                           
  4940                           ;main.c: 1021: diswin1[0] =0x13;
  4941  06F6  3013               	movlw	19
  4942  06F7  0021               	movlb	1	; select bank1
  4943  06F8  00DB               	movwf	??_key_application^(0+128)
  4944  06F9  085B               	movf	??_key_application^(0+128),w
  4945  06FA  0022               	movlb	2	; select bank2
  4946  06FB  00E4               	movwf	_diswin1^(0+256)
  4947                           
  4948                           ;main.c: 1022: diswin1[1] =0x18;
  4949  06FC  3018               	movlw	24
  4950  06FD  0021               	movlb	1	; select bank1
  4951  06FE  00DB               	movwf	??_key_application^(0+128)
  4952  06FF  085B               	movf	??_key_application^(0+128),w
  4953  0700  0022               	movlb	2	; select bank2
  4954  0701  00E5               	movwf	(_diswin1^(0+256)+1)
  4955                           
  4956                           ;main.c: 1023: diswin1[2] =0x0D;
  4957  0702  300D               	movlw	13
  4958  0703  0021               	movlb	1	; select bank1
  4959  0704  00DB               	movwf	??_key_application^(0+128)
  4960  0705  085B               	movf	??_key_application^(0+128),w
  4961  0706  0022               	movlb	2	; select bank2
  4962  0707  00E6               	movwf	(_diswin1^(0+256)+2)
  4963                           
  4964                           ;main.c: 1024: Update_PWM(inchcnt*4);
  4965  0708  0020               	movlb	0	; select bank0
  4966  0709  086C               	movf	_inchcnt,w
  4967  070A  0021               	movlb	1	; select bank1
  4968  070B  00DB               	movwf	??_key_application^(0+128)
  4969  070C  01DC               	clrf	(??_key_application^(0+128)+1)
  4970  070D  35DB               	lslf	??_key_application^(0+128),f
  4971  070E  0DDC               	rlf	(??_key_application^(0+128)+1),f
  4972  070F  35DB               	lslf	??_key_application^(0+128),f
  4973  0710  0DDC               	rlf	(??_key_application^(0+128)+1),f
  4974  0711  085B               	movf	??_key_application^(0+128),w
  4975  0712  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  4976  0713  085C               	movf	(??_key_application+1)^(0+128),w
  4977  0714  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  4978  0715  3199  2189  3186   	fcall	_Update_PWM
  4979                           
  4980                           ;main.c: 1025: disp_hex_window2(inchcnt);
  4981  0718  0020               	movlb	0	; select bank0
  4982  0719  086C               	movf	_inchcnt,w
  4983  071A  0021               	movlb	1	; select bank1
  4984  071B  00DB               	movwf	??_key_application^(0+128)
  4985  071C  01DC               	clrf	(??_key_application^(0+128)+1)
  4986  071D  085B               	movf	??_key_application^(0+128),w
  4987  071E  00AE               	movwf	disp_hex_window2@hex_data^(0+128)
  4988  071F  085C               	movf	(??_key_application+1)^(0+128),w
  4989  0720  00AF               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  4990  0721  319C  248B  3186   	fcall	_disp_hex_window2
  4991                           
  4992                           ;main.c: 1026: if(inchcnt<100)
  4993  0724  3064               	movlw	100
  4994  0725  0020               	movlb	0	; select bank0
  4995  0726  026C               	subwf	_inchcnt,w
  4996  0727  1803               	skipnc
  4997  0728  2EEF               	goto	l4538
  4998                           
  4999                           ;main.c: 1027: {
  5000                           ;main.c: 1028: inchcnt=inchcnt+10;
  5001  0729  086C               	movf	_inchcnt,w
  5002  072A  3E0A               	addlw	10
  5003  072B  0021               	movlb	1	; select bank1
  5004  072C  00DB               	movwf	??_key_application^(0+128)
  5005  072D  085B               	movf	??_key_application^(0+128),w
  5006  072E  0020               	movlb	0	; select bank0
  5007  072F  00EC               	movwf	_inchcnt
  5008                           
  5009                           ;main.c: 1029: for(delinch1=0;delinch1<5;delinch1++)
  5010  0730  0023               	movlb	3	; select bank3
  5011  0731  01B6               	clrf	_delinch1^(0+384)
  5012  0732  01B7               	clrf	(_delinch1+1)^(0+384)
  5013  0733                     L11:	
  5014  0733  3000               	movlw	0
  5015  0734  0237               	subwf	(_delinch1+1)^(0+384),w
  5016  0735  3005               	movlw	5
  5017  0736  1903               	skipnz
  5018  0737  0236               	subwf	_delinch1^(0+384),w
  5019  0738  1803               	btfsc	3,0
  5020  0739  2EEF               	goto	l4538
  5021                           
  5022                           ;main.c: 1030: for(delinch=0;delinch<50000;delinch++);
  5023  073A  01B4               	clrf	_delinch^(0+384)
  5024  073B  01B5               	clrf	(_delinch+1)^(0+384)
  5025  073C  30C3               	movlw	195
  5026  073D  0235               	subwf	(_delinch+1)^(0+384),w
  5027  073E  3050               	movlw	80
  5028  073F  1903               	skipnz
  5029  0740  0234               	subwf	_delinch^(0+384),w
  5030  0741  1803               	btfsc	3,0
  5031  0742  2F4E               	goto	l4536
  5032  0743                     l4534:	
  5033  0743  3001               	movlw	1
  5034  0744  07B4               	addwf	_delinch^(0+384),f
  5035  0745  3000               	movlw	0
  5036  0746  3DB5               	addwfc	(_delinch+1)^(0+384),f
  5037  0747  30C3               	movlw	195
  5038  0748  0235               	subwf	(_delinch+1)^(0+384),w
  5039  0749  3050               	movlw	80
  5040  074A  1903               	skipnz
  5041  074B  0234               	subwf	_delinch^(0+384),w
  5042  074C  1C03               	skipc
  5043  074D  2F43               	goto	l4534
  5044  074E                     l4536:	
  5045  074E  3001               	movlw	1
  5046  074F  07B6               	addwf	_delinch1^(0+384),f
  5047  0750  3000               	movlw	0
  5048  0751  3DB7               	addwfc	(_delinch1+1)^(0+384),f
  5049  0752  2F33               	goto	L11
  5050  0753                     l4540:	
  5051                           
  5052                           ;main.c: 1031: }
  5053                           ;main.c: 1032: }
  5054                           ;main.c: 1033: Update_PWM(inchcnt*0);
  5055  0753  0020               	movlb	0	; select bank0
  5056  0754  086C               	movf	_inchcnt,w
  5057  0755  0021               	movlb	1	; select bank1
  5058  0756  00DB               	movwf	??_key_application^(0+128)
  5059  0757  01DC               	clrf	(??_key_application^(0+128)+1)
  5060  0758  085B               	movf	??_key_application^(0+128),w
  5061  0759  00A0               	movwf	___wmul@multiplier^(0+128)
  5062  075A  085C               	movf	(??_key_application+1)^(0+128),w
  5063  075B  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  5064  075C  3000               	movlw	0
  5065  075D  00A2               	movwf	___wmul@multiplicand^(0+128)
  5066  075E  3000               	movlw	0
  5067  075F  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  5068  0760  3199  216B  3186   	fcall	___wmul
  5069  0763  0021               	movlb	1	; select bank1
  5070  0764  0821               	movf	(?___wmul+1)^(0+128),w
  5071  0765  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  5072  0766  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  5073  0767  0820               	movf	?___wmul^(0+128),w
  5074  0768  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  5075  0769  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  5076  076A  3199  2189         	fcall	_Update_PWM
  5077                           
  5078                           ;main.c: 1034: TypeU.TypeS.inch =0;
  5079  076C  0020               	movlb	0	; select bank0
  5080  076D  11E8               	bcf	_TypeU+1,3
  5081                           
  5082                           ;main.c: 1036: inchkeyon =0;
  5083  076E  0023               	movlb	3	; select bank3
  5084  076F  01D7               	clrf	_inchkeyon^(0+384)
  5085                           
  5086                           ;main.c: 1037: dispupdatef =1;
  5087  0770  3001               	movlw	1
  5088  0771  0021               	movlb	1	; select bank1
  5089  0772  00DB               	movwf	??_key_application^(0+128)
  5090  0773  085B               	movf	??_key_application^(0+128),w
  5091  0774  0020               	movlb	0	; select bank0
  5092  0775  00EF               	movwf	_dispupdatef	;volatile
  5093                           
  5094                           ;main.c: 1038: }
  5095  0776  0008               	return
  5096  0777                     l4548:	
  5097                           
  5098                           ;main.c: 1039: else if(keypress==3)
  5099  0777  0021               	movlb	1	; select bank1
  5100  0778  085D               	movf	key_application@keypress^(0+128),w
  5101  0779  3A03               	xorlw	3
  5102  077A  1D03               	skipz
  5103  077B  2F91               	goto	l4560
  5104                           
  5105                           ;main.c: 1040: {
  5106                           ;main.c: 1044: if(TypeU.TypeS.twot==1)
  5107  077C  0020               	movlb	0	; select bank0
  5108  077D  1E67               	btfss	_TypeU,4
  5109  077E  2F86               	goto	l752
  5110                           
  5111                           ;main.c: 1045: {
  5112                           ;main.c: 1046: TypeU.TypeS.twot=0;
  5113  077F  1267               	bcf	_TypeU,4
  5114                           
  5115                           ;main.c: 1047: TypeU.TypeS.fourt=1;
  5116  0780  16E7               	bsf	_TypeU,5
  5117                           
  5118                           ;main.c: 1048: wfstatusu.wfstatuss.twotfourtmode1=1;
  5119  0781  146E               	bsf	_wfstatusu,0
  5120                           
  5121                           ;main.c: 1049: cWf2t4tmodefg = 1;
  5122  0782  0022               	movlb	2	; select bank2
  5123  0783  01B4               	clrf	_cWf2t4tmodefg^(0+256)
  5124  0784  0AB4               	incf	_cWf2t4tmodefg^(0+256),f
  5125                           
  5126                           ;main.c: 1050: }
  5127  0785  2F8D               	goto	l4558
  5128  0786                     l752:	
  5129                           
  5130                           ;main.c: 1051: else if(TypeU.TypeS.fourt==1)
  5131  0786  1EE7               	btfss	_TypeU,5
  5132  0787  2F8D               	goto	l4558
  5133                           
  5134                           ;main.c: 1052: {
  5135                           ;main.c: 1053: TypeU.TypeS.fourt=0;
  5136  0788  12E7               	bcf	_TypeU,5
  5137                           
  5138                           ;main.c: 1054: TypeU.TypeS.twot =1;
  5139  0789  1667               	bsf	_TypeU,4
  5140                           
  5141                           ;main.c: 1055: wfstatusu.wfstatuss.twotfourtmode1=0;
  5142  078A  106E               	bcf	_wfstatusu,0
  5143                           
  5144                           ;main.c: 1056: cWf2t4tmodefg = 0;
  5145  078B  0022               	movlb	2	; select bank2
  5146  078C  01B4               	clrf	_cWf2t4tmodefg^(0+256)
  5147  078D                     l4558:	
  5148                           
  5149                           ;main.c: 1057: }
  5150                           ;main.c: 1058: cEditfg = 1;
  5151  078D  0022               	movlb	2	; select bank2
  5152  078E  01B3               	clrf	_cEditfg^(0+256)
  5153  078F  0AB3               	incf	_cEditfg^(0+256),f
  5154                           
  5155                           ;main.c: 1059: }
  5156  0790  0008               	return
  5157  0791                     l4560:	
  5158                           
  5159                           ;main.c: 1060: else if(keypress==4)
  5160  0791  0021               	movlb	1	; select bank1
  5161  0792  085D               	movf	key_application@keypress^(0+128),w
  5162  0793  3A04               	xorlw	4
  5163  0794  1D03               	skipz
  5164  0795  2FB3               	goto	l4588
  5165                           
  5166                           ;main.c: 1061: {
  5167                           ;main.c: 1063: if(TypeU.TypeS.wirespeed==1)
  5168  0796  0020               	movlb	0	; select bank0
  5169  0797  1C67               	btfss	_TypeU,0
  5170  0798  2F9E               	goto	l757
  5171                           
  5172                           ;main.c: 1064: {
  5173                           ;main.c: 1067: TypeU.TypeS.wirespeed=0;
  5174  0799  1067               	bcf	_TypeU,0
  5175                           
  5176                           ;main.c: 1068: TypeU.TypeS.amp=1;
  5177  079A  1468               	bsf	_TypeU+1,0
  5178                           
  5179                           ;main.c: 1069: TypeU.TypeS.thickness=0;
  5180  079B  10E7               	bcf	_TypeU,1
  5181                           
  5182                           ;main.c: 1070: TypeDP.DPGROUP[0]=0x00;
  5183  079C  01EB               	clrf	_TypeDP
  5184  079D  2FAB               	goto	l4584
  5185  079E                     l757:	
  5186                           ;main.c: 1073: }
  5187                           
  5188                           ;main.c: 1071: TypeDP.TypeD.digitdp5 =1;
  5189                           
  5190                           
  5191                           ;main.c: 1074: else if(TypeU.TypeS.amp==1)
  5192  079E  1C68               	btfss	_TypeU+1,0
  5193  079F  2FA4               	goto	l759
  5194                           
  5195                           ;main.c: 1075: {
  5196                           ;main.c: 1078: TypeU.TypeS.wirespeed=0;
  5197  07A0  1067               	bcf	_TypeU,0
  5198                           
  5199                           ;main.c: 1079: TypeU.TypeS.amp=0;
  5200  07A1  1068               	bcf	_TypeU+1,0
  5201                           
  5202                           ;main.c: 1080: TypeU.TypeS.thickness=1;
  5203  07A2  14E7               	bsf	_TypeU,1
  5204  07A3  2FA9               	goto	L12
  5205  07A4                     l759:	
  5206                           ;main.c: 1085: }
  5207                           
  5208                           ;main.c: 1083: TypeDP.TypeD.digitdp5 =1;
  5209                           
  5210                           ;main.c: 1082: TypeDP.TypeD.digitdp2 =1;
  5211                           
  5212                           ;main.c: 1081: TypeDP.DPGROUP[0]=0x00;
  5213                           
  5214                           
  5215                           ;main.c: 1086: else if(TypeU.TypeS.thickness==1)
  5216  07A4  1CE7               	btfss	_TypeU,1
  5217  07A5  2FAC               	goto	l4586
  5218                           
  5219                           ;main.c: 1087: {
  5220                           ;main.c: 1090: TypeU.TypeS.wirespeed=1;
  5221  07A6  1467               	bsf	_TypeU,0
  5222                           
  5223                           ;main.c: 1091: TypeU.TypeS.amp=0;
  5224  07A7  1068               	bcf	_TypeU+1,0
  5225                           
  5226                           ;main.c: 1092: TypeU.TypeS.thickness=0;
  5227  07A8  10E7               	bcf	_TypeU,1
  5228  07A9                     L12:	
  5229                           
  5230                           ;main.c: 1093: TypeDP.DPGROUP[0]=0x00;
  5231  07A9  01EB               	clrf	_TypeDP
  5232                           
  5233                           ;main.c: 1094: TypeDP.TypeD.digitdp2 =1;
  5234  07AA  14EB               	bsf	_TypeDP,1
  5235  07AB                     l4584:	
  5236                           
  5237                           ;main.c: 1095: TypeDP.TypeD.digitdp5 =1;
  5238  07AB  166B               	bsf	_TypeDP,4
  5239  07AC                     l4586:	
  5240                           
  5241                           ;main.c: 1097: }
  5242                           ;main.c: 1098: dispupdatef =1;
  5243  07AC  3001               	movlw	1
  5244  07AD  0021               	movlb	1	; select bank1
  5245  07AE  00DB               	movwf	??_key_application^(0+128)
  5246  07AF  085B               	movf	??_key_application^(0+128),w
  5247  07B0  0020               	movlb	0	; select bank0
  5248  07B1  00EF               	movwf	_dispupdatef	;volatile
  5249                           
  5250                           ;main.c: 1099: }
  5251  07B2  0008               	return
  5252  07B3                     l4588:	
  5253                           
  5254                           ;main.c: 1100: else if(keypress==0)
  5255  07B3  0021               	movlb	1	; select bank1
  5256  07B4  08DD               	movf	key_application@keypress^(0+128),f
  5257  07B5  1D03               	skipz
  5258  07B6  0008               	return
  5259                           
  5260                           ;main.c: 1101: {
  5261                           ;main.c: 1102: TypeU.TypeS.gason =0;
  5262  07B7  0020               	movlb	0	; select bank0
  5263  07B8  11E7               	bcf	_TypeU,3
  5264                           
  5265                           ;main.c: 1103: TypeU.TypeS.inch =0;
  5266  07B9  11E8               	bcf	_TypeU+1,3
  5267                           
  5268                           ;main.c: 1107: inchkeyon =0;
  5269  07BA  0023               	movlb	3	; select bank3
  5270  07BB  01D7               	clrf	_inchkeyon^(0+384)
  5271  07BC  0008               	return
  5272  07BD                     __end_of_key_application:	
  5273                           
  5274                           	psect	text8
  5275  1C8B                     __ptext8:	
  5276 ;; *************** function _disp_hex_window2 *****************
  5277 ;; Defined at:
  5278 ;;		line 164 in file "DISPLAY.C"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  hex_data        2   14[BANK1 ] unsigned int 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;		None               void
  5285 ;; Registers used:
  5286 ;;		wreg, status,2, status,0, pclath, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5292 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5294 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5295 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5296 ;;Total ram usage:        3 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    4
  5299 ;; This function calls:
  5300 ;;		___lwdiv
  5301 ;;		___lwmod
  5302 ;; This function is called by:
  5303 ;;		_main
  5304 ;;		_key_application
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           
  5309                           ;psect for function _disp_hex_window2
  5310  1C8B                     _disp_hex_window2:	
  5311                           
  5312                           ;DISPLAY.C: 166: diswin1[5]= hex_data % 10;
  5313                           
  5314                           ;incstack = 0
  5315                           ; Regs used in _disp_hex_window2: [wreg+status,2+status,0+pclath+cstack]
  5316  1C8B  300A               	movlw	10
  5317  1C8C  0021               	movlb	1	; select bank1
  5318  1C8D  00A0               	movwf	___lwmod@divisor^(0+128)
  5319  1C8E  3000               	movlw	0
  5320  1C8F  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5321  1C90  082F               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5322  1C91  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5323  1C92  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5324  1C93  082E               	movf	disp_hex_window2@hex_data^(0+128),w
  5325  1C94  01A2               	clrf	___lwmod@dividend^(0+128)
  5326  1C95  07A2               	addwf	___lwmod@dividend^(0+128),f
  5327  1C96  3190  2004  319C   	fcall	___lwmod
  5328  1C99  0021               	movlb	1	; select bank1
  5329  1C9A  0820               	movf	?___lwmod^(0+128),w
  5330  1C9B  00B0               	movwf	??_disp_hex_window2^(0+128)
  5331  1C9C  0830               	movf	??_disp_hex_window2^(0+128),w
  5332  1C9D  0022               	movlb	2	; select bank2
  5333  1C9E  00E9               	movwf	(_diswin1^(0+256)+5)
  5334                           
  5335                           ;DISPLAY.C: 167: hex_data /= 10;
  5336  1C9F  300A               	movlw	10
  5337  1CA0  0021               	movlb	1	; select bank1
  5338  1CA1  00A6               	movwf	___lwdiv@divisor^(0+128)
  5339  1CA2  3000               	movlw	0
  5340  1CA3  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  5341  1CA4  082F               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5342  1CA5  01A9               	clrf	(___lwdiv@dividend+1)^(0+128)
  5343  1CA6  07A9               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5344  1CA7  082E               	movf	disp_hex_window2@hex_data^(0+128),w
  5345  1CA8  01A8               	clrf	___lwdiv@dividend^(0+128)
  5346  1CA9  07A8               	addwf	___lwdiv@dividend^(0+128),f
  5347  1CAA  3199  21D8  319C   	fcall	___lwdiv
  5348  1CAD  0021               	movlb	1	; select bank1
  5349  1CAE  0827               	movf	(?___lwdiv+1)^(0+128),w
  5350  1CAF  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  5351  1CB0  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  5352  1CB1  0826               	movf	?___lwdiv^(0+128),w
  5353  1CB2  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  5354  1CB3  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  5355                           
  5356                           ;DISPLAY.C: 168: diswin1[4]= hex_data % 10;
  5357  1CB4  300A               	movlw	10
  5358  1CB5  00A0               	movwf	___lwmod@divisor^(0+128)
  5359  1CB6  3000               	movlw	0
  5360  1CB7  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5361  1CB8  082F               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5362  1CB9  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5363  1CBA  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5364  1CBB  082E               	movf	disp_hex_window2@hex_data^(0+128),w
  5365  1CBC  01A2               	clrf	___lwmod@dividend^(0+128)
  5366  1CBD  07A2               	addwf	___lwmod@dividend^(0+128),f
  5367  1CBE  3190  2004  319C   	fcall	___lwmod
  5368  1CC1  0021               	movlb	1	; select bank1
  5369  1CC2  0820               	movf	?___lwmod^(0+128),w
  5370  1CC3  00B0               	movwf	??_disp_hex_window2^(0+128)
  5371  1CC4  0830               	movf	??_disp_hex_window2^(0+128),w
  5372  1CC5  0022               	movlb	2	; select bank2
  5373  1CC6  00E8               	movwf	(_diswin1^(0+256)+4)
  5374                           
  5375                           ;DISPLAY.C: 169: hex_data /= 10;
  5376  1CC7  300A               	movlw	10
  5377  1CC8  0021               	movlb	1	; select bank1
  5378  1CC9  00A6               	movwf	___lwdiv@divisor^(0+128)
  5379  1CCA  3000               	movlw	0
  5380  1CCB  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  5381  1CCC  082F               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5382  1CCD  01A9               	clrf	(___lwdiv@dividend+1)^(0+128)
  5383  1CCE  07A9               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5384  1CCF  082E               	movf	disp_hex_window2@hex_data^(0+128),w
  5385  1CD0  01A8               	clrf	___lwdiv@dividend^(0+128)
  5386  1CD1  07A8               	addwf	___lwdiv@dividend^(0+128),f
  5387  1CD2  3199  21D8  319C   	fcall	___lwdiv
  5388  1CD5  0021               	movlb	1	; select bank1
  5389  1CD6  0827               	movf	(?___lwdiv+1)^(0+128),w
  5390  1CD7  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  5391  1CD8  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  5392  1CD9  0826               	movf	?___lwdiv^(0+128),w
  5393  1CDA  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  5394  1CDB  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  5395                           
  5396                           ;DISPLAY.C: 170: diswin1[3]= hex_data % 10;
  5397  1CDC  300A               	movlw	10
  5398  1CDD  00A0               	movwf	___lwmod@divisor^(0+128)
  5399  1CDE  3000               	movlw	0
  5400  1CDF  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5401  1CE0  082F               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5402  1CE1  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5403  1CE2  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5404  1CE3  082E               	movf	disp_hex_window2@hex_data^(0+128),w
  5405  1CE4  01A2               	clrf	___lwmod@dividend^(0+128)
  5406  1CE5  07A2               	addwf	___lwmod@dividend^(0+128),f
  5407  1CE6  3190  2004         	fcall	___lwmod
  5408  1CE8  0021               	movlb	1	; select bank1
  5409  1CE9  0820               	movf	?___lwmod^(0+128),w
  5410  1CEA  00B0               	movwf	??_disp_hex_window2^(0+128)
  5411  1CEB  0830               	movf	??_disp_hex_window2^(0+128),w
  5412  1CEC  0022               	movlb	2	; select bank2
  5413  1CED  00E7               	movwf	(_diswin1^(0+256)+3)
  5414                           
  5415                           ;DISPLAY.C: 171: diswin1[6]=0x00;
  5416  1CEE  01EA               	clrf	(_diswin1^(0+256)+6)
  5417                           
  5418                           ;DISPLAY.C: 172: diswin1[7]=0x00;
  5419  1CEF  01EB               	clrf	(_diswin1^(0+256)+7)
  5420  1CF0  0008               	return
  5421  1CF1                     __end_of_disp_hex_window2:	
  5422                           
  5423                           	psect	text9
  5424  1C27                     __ptext9:	
  5425 ;; *************** function _disp_hex_window1 *****************
  5426 ;; Defined at:
  5427 ;;		line 152 in file "DISPLAY.C"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  hex_data        2   14[BANK1 ] unsigned int 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;		None               void
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, pclath, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5441 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5443 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5444 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5445 ;;Total ram usage:        3 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    4
  5448 ;; This function calls:
  5449 ;;		___lwdiv
  5450 ;;		___lwmod
  5451 ;; This function is called by:
  5452 ;;		_main
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           
  5457                           ;psect for function _disp_hex_window1
  5458  1C27                     _disp_hex_window1:	
  5459                           
  5460                           ;DISPLAY.C: 155: diswin1[2]= hex_data % 10;
  5461                           
  5462                           ;incstack = 0
  5463                           ; Regs used in _disp_hex_window1: [wreg+status,2+status,0+pclath+cstack]
  5464  1C27  300A               	movlw	10
  5465  1C28  0021               	movlb	1	; select bank1
  5466  1C29  00A0               	movwf	___lwmod@divisor^(0+128)
  5467  1C2A  3000               	movlw	0
  5468  1C2B  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5469  1C2C  082F               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5470  1C2D  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5471  1C2E  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5472  1C2F  082E               	movf	disp_hex_window1@hex_data^(0+128),w
  5473  1C30  01A2               	clrf	___lwmod@dividend^(0+128)
  5474  1C31  07A2               	addwf	___lwmod@dividend^(0+128),f
  5475  1C32  3190  2004  319C   	fcall	___lwmod
  5476  1C35  0021               	movlb	1	; select bank1
  5477  1C36  0820               	movf	?___lwmod^(0+128),w
  5478  1C37  00B0               	movwf	??_disp_hex_window1^(0+128)
  5479  1C38  0830               	movf	??_disp_hex_window1^(0+128),w
  5480  1C39  0022               	movlb	2	; select bank2
  5481  1C3A  00E6               	movwf	(_diswin1^(0+256)+2)
  5482                           
  5483                           ;DISPLAY.C: 156: hex_data /= 10;
  5484  1C3B  300A               	movlw	10
  5485  1C3C  0021               	movlb	1	; select bank1
  5486  1C3D  00A6               	movwf	___lwdiv@divisor^(0+128)
  5487  1C3E  3000               	movlw	0
  5488  1C3F  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  5489  1C40  082F               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5490  1C41  01A9               	clrf	(___lwdiv@dividend+1)^(0+128)
  5491  1C42  07A9               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5492  1C43  082E               	movf	disp_hex_window1@hex_data^(0+128),w
  5493  1C44  01A8               	clrf	___lwdiv@dividend^(0+128)
  5494  1C45  07A8               	addwf	___lwdiv@dividend^(0+128),f
  5495  1C46  3199  21D8  319C   	fcall	___lwdiv
  5496  1C49  0021               	movlb	1	; select bank1
  5497  1C4A  0827               	movf	(?___lwdiv+1)^(0+128),w
  5498  1C4B  01AF               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  5499  1C4C  07AF               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  5500  1C4D  0826               	movf	?___lwdiv^(0+128),w
  5501  1C4E  01AE               	clrf	disp_hex_window1@hex_data^(0+128)
  5502  1C4F  07AE               	addwf	disp_hex_window1@hex_data^(0+128),f
  5503                           
  5504                           ;DISPLAY.C: 157: diswin1[1]= hex_data % 10;
  5505  1C50  300A               	movlw	10
  5506  1C51  00A0               	movwf	___lwmod@divisor^(0+128)
  5507  1C52  3000               	movlw	0
  5508  1C53  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5509  1C54  082F               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5510  1C55  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5511  1C56  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5512  1C57  082E               	movf	disp_hex_window1@hex_data^(0+128),w
  5513  1C58  01A2               	clrf	___lwmod@dividend^(0+128)
  5514  1C59  07A2               	addwf	___lwmod@dividend^(0+128),f
  5515  1C5A  3190  2004  319C   	fcall	___lwmod
  5516  1C5D  0021               	movlb	1	; select bank1
  5517  1C5E  0820               	movf	?___lwmod^(0+128),w
  5518  1C5F  00B0               	movwf	??_disp_hex_window1^(0+128)
  5519  1C60  0830               	movf	??_disp_hex_window1^(0+128),w
  5520  1C61  0022               	movlb	2	; select bank2
  5521  1C62  00E5               	movwf	(_diswin1^(0+256)+1)
  5522                           
  5523                           ;DISPLAY.C: 158: hex_data /= 10;
  5524  1C63  300A               	movlw	10
  5525  1C64  0021               	movlb	1	; select bank1
  5526  1C65  00A6               	movwf	___lwdiv@divisor^(0+128)
  5527  1C66  3000               	movlw	0
  5528  1C67  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  5529  1C68  082F               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5530  1C69  01A9               	clrf	(___lwdiv@dividend+1)^(0+128)
  5531  1C6A  07A9               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5532  1C6B  082E               	movf	disp_hex_window1@hex_data^(0+128),w
  5533  1C6C  01A8               	clrf	___lwdiv@dividend^(0+128)
  5534  1C6D  07A8               	addwf	___lwdiv@dividend^(0+128),f
  5535  1C6E  3199  21D8  319C   	fcall	___lwdiv
  5536  1C71  0021               	movlb	1	; select bank1
  5537  1C72  0827               	movf	(?___lwdiv+1)^(0+128),w
  5538  1C73  01AF               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  5539  1C74  07AF               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  5540  1C75  0826               	movf	?___lwdiv^(0+128),w
  5541  1C76  01AE               	clrf	disp_hex_window1@hex_data^(0+128)
  5542  1C77  07AE               	addwf	disp_hex_window1@hex_data^(0+128),f
  5543                           
  5544                           ;DISPLAY.C: 159: diswin1[0]= hex_data % 10;
  5545  1C78  300A               	movlw	10
  5546  1C79  00A0               	movwf	___lwmod@divisor^(0+128)
  5547  1C7A  3000               	movlw	0
  5548  1C7B  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5549  1C7C  082F               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5550  1C7D  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5551  1C7E  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5552  1C7F  082E               	movf	disp_hex_window1@hex_data^(0+128),w
  5553  1C80  01A2               	clrf	___lwmod@dividend^(0+128)
  5554  1C81  07A2               	addwf	___lwmod@dividend^(0+128),f
  5555  1C82  3190  2004         	fcall	___lwmod
  5556  1C84  0021               	movlb	1	; select bank1
  5557  1C85  0820               	movf	?___lwmod^(0+128),w
  5558  1C86  00B0               	movwf	??_disp_hex_window1^(0+128)
  5559  1C87  0830               	movf	??_disp_hex_window1^(0+128),w
  5560  1C88  0022               	movlb	2	; select bank2
  5561  1C89  00E4               	movwf	_diswin1^(0+256)
  5562  1C8A  0008               	return
  5563  1C8B                     __end_of_disp_hex_window1:	
  5564                           
  5565                           	psect	text10
  5566  1004                     __ptext10:	
  5567 ;; *************** function ___lwmod *****************
  5568 ;; Defined at:
  5569 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwmod.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  divisor         2    0[BANK1 ] unsigned int 
  5572 ;;  dividend        2    2[BANK1 ] unsigned int 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  counter         1    5[BANK1 ] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  2    0[BANK1 ] unsigned int 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5584 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5587 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;Total ram usage:        6 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    3
  5591 ;; This function calls:
  5592 ;;		Nothing
  5593 ;; This function is called by:
  5594 ;;		_disp_hex_window1
  5595 ;;		_disp_hex_window2
  5596 ;;		_disp_hex_window11
  5597 ;;		_disp_hex_window22
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           
  5602                           ;psect for function ___lwmod
  5603  1004                     ___lwmod:	
  5604                           
  5605                           ;incstack = 0
  5606                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5607  1004  0021               	movlb	1	; select bank1
  5608  1005  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5609  1006  0420               	iorwf	___lwmod@divisor^(0+128),w
  5610  1007  1903               	skipnz
  5611  1008  282C               	goto	l3596
  5612  1009  01A5               	clrf	___lwmod@counter^(0+128)
  5613  100A  0AA5               	incf	___lwmod@counter^(0+128),f
  5614  100B                     l3586:	
  5615  100B  1BA1               	btfsc	(___lwmod@divisor+1)^(0+128),7
  5616  100C  2817               	goto	l3588
  5617  100D  3001               	movlw	1
  5618  100E                     u4405:	
  5619  100E  35A0               	lslf	___lwmod@divisor^(0+128),f
  5620  100F  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  5621  1010  0B89               	decfsz	9,f
  5622  1011  280E               	goto	u4405
  5623  1012  3001               	movlw	1
  5624  1013  00A4               	movwf	??___lwmod^(0+128)
  5625  1014  0824               	movf	??___lwmod^(0+128),w
  5626  1015  07A5               	addwf	___lwmod@counter^(0+128),f
  5627  1016  280B               	goto	l3586
  5628  1017                     l3588:	
  5629  1017  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5630  1018  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  5631  1019  1D03               	skipz
  5632  101A  281D               	goto	u4425
  5633  101B  0820               	movf	___lwmod@divisor^(0+128),w
  5634  101C  0222               	subwf	___lwmod@dividend^(0+128),w
  5635  101D                     u4425:	
  5636  101D  1C03               	skipc
  5637  101E  2823               	goto	l3592
  5638  101F  0820               	movf	___lwmod@divisor^(0+128),w
  5639  1020  02A2               	subwf	___lwmod@dividend^(0+128),f
  5640  1021  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5641  1022  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
  5642  1023                     l3592:	
  5643  1023  3001               	movlw	1
  5644  1024                     u4435:	
  5645  1024  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
  5646  1025  0CA0               	rrf	___lwmod@divisor^(0+128),f
  5647  1026  0B89               	decfsz	9,f
  5648  1027  2824               	goto	u4435
  5649  1028  3001               	movlw	1
  5650  1029  02A5               	subwf	___lwmod@counter^(0+128),f
  5651  102A  1D03               	btfss	3,2
  5652  102B  2817               	goto	l3588
  5653  102C                     l3596:	
  5654  102C  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  5655  102D  01A1               	clrf	(?___lwmod+1)^(0+128)
  5656  102E  07A1               	addwf	(?___lwmod+1)^(0+128),f
  5657  102F  0822               	movf	___lwmod@dividend^(0+128),w
  5658  1030  01A0               	clrf	?___lwmod^(0+128)
  5659  1031  07A0               	addwf	?___lwmod^(0+128),f
  5660  1032  0008               	return
  5661  1033                     __end_of___lwmod:	
  5662                           
  5663                           	psect	text11
  5664  19D8                     __ptext11:	
  5665 ;; *************** function ___lwdiv *****************
  5666 ;; Defined at:
  5667 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  divisor         2    6[BANK1 ] unsigned int 
  5670 ;;  dividend        2    8[BANK1 ] unsigned int 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  quotient        2   11[BANK1 ] unsigned int 
  5673 ;;  counter         1   13[BANK1 ] unsigned char 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  2    6[BANK1 ] unsigned int 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2, status,0
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5683 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5684 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5685 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5686 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5687 ;;Total ram usage:        8 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:    3
  5690 ;; This function calls:
  5691 ;;		Nothing
  5692 ;; This function is called by:
  5693 ;;		_disp_hex_window1
  5694 ;;		_disp_hex_window2
  5695 ;;		_main
  5696 ;;		_disp_hex_window11
  5697 ;;		_disp_hex_window22
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           
  5702                           ;psect for function ___lwdiv
  5703  19D8                     ___lwdiv:	
  5704                           
  5705                           ;incstack = 0
  5706                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5707  19D8  0021               	movlb	1	; select bank1
  5708  19D9  01AB               	clrf	___lwdiv@quotient^(0+128)
  5709  19DA  01AC               	clrf	(___lwdiv@quotient+1)^(0+128)
  5710  19DB  0827               	movf	(___lwdiv@divisor+1)^(0+128),w
  5711  19DC  0426               	iorwf	___lwdiv@divisor^(0+128),w
  5712  19DD  1903               	skipnz
  5713  19DE  2A08               	goto	l3574
  5714  19DF  01AD               	clrf	___lwdiv@counter^(0+128)
  5715  19E0  0AAD               	incf	___lwdiv@counter^(0+128),f
  5716  19E1                     l3562:	
  5717  19E1  1BA7               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  5718  19E2  29ED               	goto	l3564
  5719  19E3  3001               	movlw	1
  5720  19E4                     u4335:	
  5721  19E4  35A6               	lslf	___lwdiv@divisor^(0+128),f
  5722  19E5  0DA7               	rlf	(___lwdiv@divisor+1)^(0+128),f
  5723  19E6  0B89               	decfsz	9,f
  5724  19E7  29E4               	goto	u4335
  5725  19E8  3001               	movlw	1
  5726  19E9  00AA               	movwf	??___lwdiv^(0+128)
  5727  19EA  082A               	movf	??___lwdiv^(0+128),w
  5728  19EB  07AD               	addwf	___lwdiv@counter^(0+128),f
  5729  19EC  29E1               	goto	l3562
  5730  19ED                     l3564:	
  5731  19ED  3001               	movlw	1
  5732  19EE                     u4355:	
  5733  19EE  35AB               	lslf	___lwdiv@quotient^(0+128),f
  5734  19EF  0DAC               	rlf	(___lwdiv@quotient+1)^(0+128),f
  5735  19F0  0B89               	decfsz	9,f
  5736  19F1  29EE               	goto	u4355
  5737  19F2  0827               	movf	(___lwdiv@divisor+1)^(0+128),w
  5738  19F3  0229               	subwf	(___lwdiv@dividend+1)^(0+128),w
  5739  19F4  1D03               	skipz
  5740  19F5  29F8               	goto	u4365
  5741  19F6  0826               	movf	___lwdiv@divisor^(0+128),w
  5742  19F7  0228               	subwf	___lwdiv@dividend^(0+128),w
  5743  19F8                     u4365:	
  5744  19F8  1C03               	skipc
  5745  19F9  29FF               	goto	l3570
  5746  19FA  0826               	movf	___lwdiv@divisor^(0+128),w
  5747  19FB  02A8               	subwf	___lwdiv@dividend^(0+128),f
  5748  19FC  0827               	movf	(___lwdiv@divisor+1)^(0+128),w
  5749  19FD  3BA9               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  5750  19FE  142B               	bsf	___lwdiv@quotient^(0+128),0
  5751  19FF                     l3570:	
  5752  19FF  3001               	movlw	1
  5753  1A00                     u4375:	
  5754  1A00  36A7               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  5755  1A01  0CA6               	rrf	___lwdiv@divisor^(0+128),f
  5756  1A02  0B89               	decfsz	9,f
  5757  1A03  2A00               	goto	u4375
  5758  1A04  3001               	movlw	1
  5759  1A05  02AD               	subwf	___lwdiv@counter^(0+128),f
  5760  1A06  1D03               	btfss	3,2
  5761  1A07  29ED               	goto	l3564
  5762  1A08                     l3574:	
  5763  1A08  082C               	movf	(___lwdiv@quotient+1)^(0+128),w
  5764  1A09  01A7               	clrf	(?___lwdiv+1)^(0+128)
  5765  1A0A  07A7               	addwf	(?___lwdiv+1)^(0+128),f
  5766  1A0B  082B               	movf	___lwdiv@quotient^(0+128),w
  5767  1A0C  01A6               	clrf	?___lwdiv^(0+128)
  5768  1A0D  07A6               	addwf	?___lwdiv^(0+128),f
  5769  1A0E  0008               	return
  5770  1A0F                     __end_of___lwdiv:	
  5771                           
  5772                           	psect	text12
  5773  1185                     __ptext12:	
  5774 ;; *************** function _detect_display_error *****************
  5775 ;; Defined at:
  5776 ;;		line 1296 in file "main.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;		None
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;		None
  5781 ;; Return value:  Size  Location     Type
  5782 ;;		None               void
  5783 ;; Registers used:
  5784 ;;		wreg, status,2, status,0, pclath, cstack
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;Total ram usage:        1 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    4
  5797 ;; This function calls:
  5798 ;;		_Update_PWM
  5799 ;; This function is called by:
  5800 ;;		_main
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           
  5805                           ;psect for function _detect_display_error
  5806  1185                     _detect_display_error:	
  5807                           
  5808                           ;main.c: 1299: pstowfstru.pstowfstrs.error_code1=erroru.errorstatusbyte[0];
  5809                           
  5810                           ;incstack = 0
  5811                           ; Regs used in _detect_display_error: [wreg+status,2+status,0+pclath+cstack]
  5812  1185  0022               	movlb	2	; select bank2
  5813  1186  0860               	movf	_erroru^(0+256),w
  5814  1187  0021               	movlb	1	; select bank1
  5815  1188  00DB               	movwf	??_detect_display_error^(0+128)
  5816  1189  085B               	movf	??_detect_display_error^(0+128),w
  5817  118A  0024               	movlb	4	; select bank4
  5818  118B  00D2               	movwf	(_pstowfstru^(0+512)+16)
  5819                           
  5820                           ;main.c: 1300: pstowfstru.pstowfstrs.error_code2=erroru.errorstatusbyte[1];
  5821  118C  0022               	movlb	2	; select bank2
  5822  118D  0861               	movf	(_erroru^(0+256)+1),w
  5823  118E  0021               	movlb	1	; select bank1
  5824  118F  00DB               	movwf	??_detect_display_error^(0+128)
  5825  1190  085B               	movf	??_detect_display_error^(0+128),w
  5826  1191  0024               	movlb	4	; select bank4
  5827  1192  00D3               	movwf	(_pstowfstru^(0+512)+17)
  5828                           
  5829                           ;main.c: 1302: if(erroru.errors.uv_er1==1)
  5830  1193  0022               	movlb	2	; select bank2
  5831  1194  1C60               	btfss	_erroru^(0+256),0
  5832  1195  299F               	goto	l806
  5833                           
  5834                           ;main.c: 1303: {
  5835                           ;main.c: 1304: universal_error=1;
  5836  1196  3001               	movlw	1
  5837  1197  0021               	movlb	1	; select bank1
  5838  1198  00DB               	movwf	??_detect_display_error^(0+128)
  5839  1199  085B               	movf	??_detect_display_error^(0+128),w
  5840  119A  0022               	movlb	2	; select bank2
  5841  119B  00DC               	movwf	_universal_error^(0+256)	;volatile
  5842                           
  5843                           ;main.c: 1305: diswin1[5]=1;
  5844  119C  01E9               	clrf	(_diswin1^(0+256)+5)
  5845  119D  0AE9               	incf	(_diswin1^(0+256)+5),f
  5846                           
  5847                           ;main.c: 1306: }
  5848  119E  2A03               	goto	l4630
  5849  119F                     l806:	
  5850                           
  5851                           ;main.c: 1307: else if(erroru.errors.ov_er2==1)
  5852  119F  1CE0               	btfss	_erroru^(0+256),1
  5853  11A0  29A9               	goto	l808
  5854                           
  5855                           ;main.c: 1308: {
  5856                           ;main.c: 1309: universal_error=1;
  5857  11A1  3001               	movlw	1
  5858  11A2  0021               	movlb	1	; select bank1
  5859  11A3  00DB               	movwf	??_detect_display_error^(0+128)
  5860  11A4  085B               	movf	??_detect_display_error^(0+128),w
  5861  11A5  0022               	movlb	2	; select bank2
  5862  11A6  00DC               	movwf	_universal_error^(0+256)	;volatile
  5863                           
  5864                           ;main.c: 1310: diswin1[5]=2;
  5865  11A7  3002               	movlw	2
  5866  11A8  29F0               	goto	L18
  5867  11A9                     l808:	
  5868                           ;main.c: 1311: }
  5869                           
  5870                           
  5871                           ;main.c: 1312: else if(erroru.errors.th_er3==1)
  5872  11A9  1D60               	btfss	_erroru^(0+256),2
  5873  11AA  29B3               	goto	l810
  5874                           
  5875                           ;main.c: 1313: {
  5876                           ;main.c: 1314: universal_error=1;
  5877  11AB  3001               	movlw	1
  5878  11AC  0021               	movlb	1	; select bank1
  5879  11AD  00DB               	movwf	??_detect_display_error^(0+128)
  5880  11AE  085B               	movf	??_detect_display_error^(0+128),w
  5881  11AF  0022               	movlb	2	; select bank2
  5882  11B0  00DC               	movwf	_universal_error^(0+256)	;volatile
  5883                           
  5884                           ;main.c: 1315: diswin1[5]=3;
  5885  11B1  3003               	movlw	3
  5886  11B2  29F0               	goto	L18
  5887  11B3                     l810:	
  5888                           ;main.c: 1316: }
  5889                           
  5890                           
  5891                           ;main.c: 1317: else if(erroru.errors.no_curr_er4==1)
  5892  11B3  1DE0               	btfss	_erroru^(0+256),3
  5893  11B4  29BD               	goto	l812
  5894                           
  5895                           ;main.c: 1318: {
  5896                           ;main.c: 1319: universal_error=1;
  5897  11B5  3001               	movlw	1
  5898  11B6  0021               	movlb	1	; select bank1
  5899  11B7  00DB               	movwf	??_detect_display_error^(0+128)
  5900  11B8  085B               	movf	??_detect_display_error^(0+128),w
  5901  11B9  0022               	movlb	2	; select bank2
  5902  11BA  00DC               	movwf	_universal_error^(0+256)	;volatile
  5903                           
  5904                           ;main.c: 1320: diswin1[5]=4;
  5905  11BB  3004               	movlw	4
  5906  11BC  29F0               	goto	L18
  5907  11BD                     l812:	
  5908                           ;main.c: 1321: }
  5909                           
  5910                           
  5911                           ;main.c: 1322: else if(erroru.errors.motor_over_ld_er5==1)
  5912  11BD  1E60               	btfss	_erroru^(0+256),4
  5913  11BE  29C7               	goto	l814
  5914                           
  5915                           ;main.c: 1323: {
  5916                           ;main.c: 1324: universal_error=1;
  5917  11BF  3001               	movlw	1
  5918  11C0  0021               	movlb	1	; select bank1
  5919  11C1  00DB               	movwf	??_detect_display_error^(0+128)
  5920  11C2  085B               	movf	??_detect_display_error^(0+128),w
  5921  11C3  0022               	movlb	2	; select bank2
  5922  11C4  00DC               	movwf	_universal_error^(0+256)	;volatile
  5923                           
  5924                           ;main.c: 1325: diswin1[5]=5;
  5925  11C5  3005               	movlw	5
  5926  11C6  29F0               	goto	L18
  5927  11C7                     l814:	
  5928                           ;main.c: 1326: }
  5929                           
  5930                           
  5931                           ;main.c: 1327: else if(erroru.errors.wirefdr_er6==1)
  5932  11C7  1EE0               	btfss	_erroru^(0+256),5
  5933  11C8  29D1               	goto	l816
  5934                           
  5935                           ;main.c: 1328: {
  5936                           ;main.c: 1329: universal_error=1;
  5937  11C9  3001               	movlw	1
  5938  11CA  0021               	movlb	1	; select bank1
  5939  11CB  00DB               	movwf	??_detect_display_error^(0+128)
  5940  11CC  085B               	movf	??_detect_display_error^(0+128),w
  5941  11CD  0022               	movlb	2	; select bank2
  5942  11CE  00DC               	movwf	_universal_error^(0+256)	;volatile
  5943                           
  5944                           ;main.c: 1330: diswin1[5]=6;
  5945  11CF  3006               	movlw	6
  5946  11D0  29F0               	goto	L18
  5947  11D1                     l816:	
  5948                           ;main.c: 1331: }
  5949                           
  5950                           
  5951                           ;main.c: 1332: else if(erroru.errors.water_press_er7==1 && ( (weldmode=='P') || (weldmod
      +                          e=='G') ) )
  5952  11D1  1F60               	btfss	_erroru^(0+256),6
  5953  11D2  29E4               	goto	l4618
  5954  11D3  0020               	movlb	0	; select bank0
  5955  11D4  0866               	movf	_weldmode,w	;volatile
  5956  11D5  3A50               	xorlw	80
  5957  11D6  1903               	skipnz
  5958  11D7  29DC               	goto	l4616
  5959  11D8  0866               	movf	_weldmode,w	;volatile
  5960  11D9  3A47               	xorlw	71
  5961  11DA  1D03               	skipz
  5962  11DB  29E4               	goto	l4618
  5963  11DC                     l4616:	
  5964                           
  5965                           ;main.c: 1333: {
  5966                           ;main.c: 1334: universal_error=1;
  5967  11DC  3001               	movlw	1
  5968  11DD  0021               	movlb	1	; select bank1
  5969  11DE  00DB               	movwf	??_detect_display_error^(0+128)
  5970  11DF  085B               	movf	??_detect_display_error^(0+128),w
  5971  11E0  0022               	movlb	2	; select bank2
  5972  11E1  00DC               	movwf	_universal_error^(0+256)	;volatile
  5973                           
  5974                           ;main.c: 1335: diswin1[5]=7;
  5975  11E2  3007               	movlw	7
  5976  11E3  29F0               	goto	L18
  5977  11E4                     l4618:	
  5978                           ;main.c: 1336: }
  5979                           
  5980                           
  5981                           ;main.c: 1337: else if(error8==1)
  5982  11E4  0022               	movlb	2	; select bank2
  5983  11E5  083E               	movf	_error8^(0+256),w	;volatile
  5984  11E6  3A01               	xorlw	1
  5985  11E7  1D03               	skipz
  5986  11E8  29F6               	goto	l822
  5987                           
  5988                           ;main.c: 1338: {
  5989                           ;main.c: 1339: universal_error=1;
  5990  11E9  3001               	movlw	1
  5991  11EA  0021               	movlb	1	; select bank1
  5992  11EB  00DB               	movwf	??_detect_display_error^(0+128)
  5993  11EC  085B               	movf	??_detect_display_error^(0+128),w
  5994  11ED  0022               	movlb	2	; select bank2
  5995  11EE  00DC               	movwf	_universal_error^(0+256)	;volatile
  5996                           
  5997                           ;main.c: 1340: diswin1[5]=8;
  5998  11EF  3008               	movlw	8
  5999  11F0                     L18:	
  6000  11F0  0021               	movlb	1	; select bank1
  6001  11F1  00DB               	movwf	??_detect_display_error^(0+128)
  6002  11F2  085B               	movf	??_detect_display_error^(0+128),w
  6003  11F3  0022               	movlb	2	; select bank2
  6004  11F4  00E9               	movwf	(_diswin1^(0+256)+5)
  6005                           
  6006                           ;main.c: 1341: }
  6007  11F5  2A03               	goto	l4630
  6008  11F6                     l822:	
  6009                           
  6010                           ;main.c: 1342: else if(erroru.errors.motor_fb_err==1)
  6011  11F6  1D61               	btfss	(_erroru^(0+256)+1),2
  6012  11F7  2A02               	goto	l4628
  6013                           
  6014                           ;main.c: 1343: {
  6015                           ;main.c: 1344: universal_error=1;
  6016  11F8  3001               	movlw	1
  6017  11F9  0021               	movlb	1	; select bank1
  6018  11FA  00DB               	movwf	??_detect_display_error^(0+128)
  6019  11FB  085B               	movf	??_detect_display_error^(0+128),w
  6020  11FC  0022               	movlb	2	; select bank2
  6021  11FD  00DC               	movwf	_universal_error^(0+256)	;volatile
  6022                           
  6023                           ;main.c: 1345: diswin1[4]=1;
  6024  11FE  01E8               	clrf	(_diswin1^(0+256)+4)
  6025  11FF  0AE8               	incf	(_diswin1^(0+256)+4),f
  6026                           
  6027                           ;main.c: 1346: diswin1[5]=0;
  6028  1200  01E9               	clrf	(_diswin1^(0+256)+5)
  6029                           
  6030                           ;main.c: 1347: }
  6031  1201  2A03               	goto	l4630
  6032  1202                     l4628:	
  6033                           
  6034                           ;main.c: 1348: else
  6035                           ;main.c: 1349: universal_error=0;
  6036  1202  01DC               	clrf	_universal_error^(0+256)	;volatile
  6037  1203                     l4630:	
  6038                           
  6039                           ;main.c: 1351: if(universal_error==1)
  6040  1203  085C               	movf	_universal_error^(0+256),w	;volatile
  6041  1204  3A01               	xorlw	1
  6042  1205  1D03               	skipz
  6043  1206  0008               	return
  6044                           
  6045                           ;main.c: 1352: {
  6046                           ;main.c: 1353: universal_error_latch=1;
  6047  1207  3001               	movlw	1
  6048  1208  0021               	movlb	1	; select bank1
  6049  1209  00DB               	movwf	??_detect_display_error^(0+128)
  6050  120A  085B               	movf	??_detect_display_error^(0+128),w
  6051  120B  0022               	movlb	2	; select bank2
  6052  120C  00DD               	movwf	_universal_error_latch^(0+256)	;volatile
  6053                           
  6054                           ;main.c: 1354: diswin1[0]=0x0F;
  6055  120D  300F               	movlw	15
  6056  120E  0021               	movlb	1	; select bank1
  6057  120F  00DB               	movwf	??_detect_display_error^(0+128)
  6058  1210  085B               	movf	??_detect_display_error^(0+128),w
  6059  1211  0022               	movlb	2	; select bank2
  6060  1212  00E4               	movwf	_diswin1^(0+256)
  6061                           
  6062                           ;main.c: 1355: diswin1[1]=0x1C;
  6063  1213  301C               	movlw	28
  6064  1214  0021               	movlb	1	; select bank1
  6065  1215  00DB               	movwf	??_detect_display_error^(0+128)
  6066  1216  085B               	movf	??_detect_display_error^(0+128),w
  6067  1217  0022               	movlb	2	; select bank2
  6068  1218  00E5               	movwf	(_diswin1^(0+256)+1)
  6069                           
  6070                           ;main.c: 1356: diswin1[2]=0x1C;
  6071  1219  301C               	movlw	28
  6072  121A  0021               	movlb	1	; select bank1
  6073  121B  00DB               	movwf	??_detect_display_error^(0+128)
  6074  121C  085B               	movf	??_detect_display_error^(0+128),w
  6075  121D  0022               	movlb	2	; select bank2
  6076  121E  00E6               	movwf	(_diswin1^(0+256)+2)
  6077                           
  6078                           ;main.c: 1358: diswin1[3]=0;
  6079  121F  01E7               	clrf	(_diswin1^(0+256)+3)
  6080                           
  6081                           ;main.c: 1359: diswin1[4]=0;
  6082  1220  01E8               	clrf	(_diswin1^(0+256)+4)
  6083                           
  6084                           ;main.c: 1361: PORTCbits.RC3 =0;
  6085  1221  0020               	movlb	0	; select bank0
  6086  1222  118E               	bcf	14,3	;volatile
  6087                           
  6088                           ;main.c: 1362: Update_PWM(0);
  6089  1223  3000               	movlw	0
  6090  1224  0021               	movlb	1	; select bank1
  6091  1225  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  6092  1226  3000               	movlw	0
  6093  1227  00D4               	movwf	(Update_PWM@setwsduty^(0+128)+1)
  6094  1228  3199  2189         	fcall	_Update_PWM
  6095                           
  6096                           ;main.c: 1363: TypeDP.DPGROUP[0]=0;
  6097  122A  0020               	movlb	0	; select bank0
  6098  122B  01EB               	clrf	_TypeDP
  6099                           
  6100                           ;main.c: 1364: erroru.errors.comm_er8=1;
  6101  122C  0022               	movlb	2	; select bank2
  6102  122D  17E0               	bsf	_erroru^(0+256),7
  6103  122E  0008               	return
  6104  122F                     __end_of_detect_display_error:	
  6105                           
  6106                           	psect	text13
  6107  18E3                     __ptext13:	
  6108 ;; *************** function _capture_init *****************
  6109 ;; Defined at:
  6110 ;;		line 1184 in file "main.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;		None               void
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;Total ram usage:        0 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    3
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_main
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           
  6139                           ;psect for function _capture_init
  6140  18E3                     _capture_init:	
  6141                           
  6142                           ;main.c: 1186: TRISCbits.TRISC1 =1;
  6143                           
  6144                           ;incstack = 0
  6145                           ; Regs used in _capture_init: [wreg+status,2+status,0]
  6146  18E3  0021               	movlb	1	; select bank1
  6147  18E4  148E               	bsf	14,1	;volatile
  6148                           
  6149                           ;main.c: 1188: PIE2bits.CCP2IE = 1;
  6150  18E5  1412               	bsf	18,0	;volatile
  6151                           
  6152                           ;main.c: 1189: CCP2CONbits.CCP2M=0x05;
  6153  18E6  0025               	movlb	5	; select bank5
  6154  18E7  081A               	movf	26,w	;volatile
  6155  18E8  39F0               	andlw	-16
  6156  18E9  3805               	iorlw	5
  6157  18EA  009A               	movwf	26	;volatile
  6158                           
  6159                           ;main.c: 1190: TMR1H = 0x00;
  6160  18EB  0020               	movlb	0	; select bank0
  6161  18EC  0197               	clrf	23	;volatile
  6162                           
  6163                           ;main.c: 1191: TMR1L = 0x00;
  6164  18ED  0196               	clrf	22	;volatile
  6165                           
  6166                           ;main.c: 1192: PIR1 = 0x00;
  6167  18EE  0191               	clrf	17	;volatile
  6168                           
  6169                           ;main.c: 1194: T1CON = 0x21;
  6170  18EF  3021               	movlw	33
  6171  18F0  0098               	movwf	24	;volatile
  6172                           
  6173                           ;main.c: 1195: INTCONbits.GIE = 1;
  6174  18F1  178B               	bsf	11,7	;volatile
  6175                           
  6176                           ;main.c: 1196: INTCONbits.PEIE = 1;
  6177  18F2  170B               	bsf	11,6	;volatile
  6178  18F3  0008               	return
  6179  18F4                     __end_of_capture_init:	
  6180                           
  6181                           	psect	text14
  6182  192B                     __ptext14:	
  6183 ;; *************** function ___lwtoft *****************
  6184 ;; Defined at:
  6185 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;  c               2    8[BANK1 ] unsigned int 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  3    8[BANK1 ] float 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0, pclath, cstack
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6199 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6201 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6202 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;Total ram usage:        4 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    4
  6206 ;; This function calls:
  6207 ;;		___ftpack
  6208 ;; This function is called by:
  6209 ;;		_main
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           
  6214                           ;psect for function ___lwtoft
  6215  192B                     ___lwtoft:	
  6216                           
  6217                           ;incstack = 0
  6218                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6219  192B  0021               	movlb	1	; select bank1
  6220  192C  0828               	movf	___lwtoft@c^(0+128),w
  6221  192D  00A0               	movwf	___ftpack@arg^(0+128)
  6222  192E  0829               	movf	(___lwtoft@c+1)^(0+128),w
  6223  192F  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  6224  1930  01A2               	clrf	(___ftpack@arg+2)^(0+128)
  6225  1931  308E               	movlw	142
  6226  1932  00AB               	movwf	??___lwtoft^(0+128)
  6227  1933  082B               	movf	??___lwtoft^(0+128),w
  6228  1934  00A3               	movwf	___ftpack@exp^(0+128)
  6229  1935  01A4               	clrf	___ftpack@sign^(0+128)
  6230  1936  319B  23C6         	fcall	___ftpack
  6231  1938  0021               	movlb	1	; select bank1
  6232  1939  0820               	movf	?___ftpack^(0+128),w
  6233  193A  00A8               	movwf	?___lwtoft^(0+128)
  6234  193B  0821               	movf	(?___ftpack+1)^(0+128),w
  6235  193C  00A9               	movwf	(?___lwtoft+1)^(0+128)
  6236  193D  0822               	movf	(?___ftpack+2)^(0+128),w
  6237  193E  00AA               	movwf	(?___lwtoft+2)^(0+128)
  6238  193F  0008               	return
  6239  1940                     __end_of___lwtoft:	
  6240                           
  6241                           	psect	text15
  6242  18D2                     __ptext15:	
  6243 ;; *************** function _Timer0_init *****************
  6244 ;; Defined at:
  6245 ;;		line 1143 in file "main.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;		None
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;		None
  6250 ;; Return value:  Size  Location     Type
  6251 ;;		None               void
  6252 ;; Registers used:
  6253 ;;		wreg, status,2, status,0
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;Total ram usage:        0 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:    3
  6266 ;; This function calls:
  6267 ;;		Nothing
  6268 ;; This function is called by:
  6269 ;;		_main
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           
  6274                           ;psect for function _Timer0_init
  6275  18D2                     _Timer0_init:	
  6276                           
  6277                           ;main.c: 1145: TMR0=0;
  6278                           
  6279                           ;incstack = 0
  6280                           ; Regs used in _Timer0_init: [wreg+status,2+status,0]
  6281  18D2  0020               	movlb	0	; select bank0
  6282  18D3  0195               	clrf	21	;volatile
  6283                           
  6284                           ;main.c: 1146: OPTION_REGbits.PSA=0;
  6285  18D4  0021               	movlb	1	; select bank1
  6286  18D5  1195               	bcf	21,3	;volatile
  6287                           
  6288                           ;main.c: 1147: OPTION_REGbits.T0CS=0;
  6289  18D6  1295               	bcf	21,5	;volatile
  6290                           
  6291                           ;main.c: 1148: OPTION_REGbits.PS=5;
  6292  18D7  0815               	movf	21,w	;volatile
  6293  18D8  39F8               	andlw	-8
  6294  18D9  3805               	iorlw	5
  6295  18DA  0095               	movwf	21	;volatile
  6296                           
  6297                           ;main.c: 1149: INTCONbits.GIE=0;
  6298  18DB  138B               	bcf	11,7	;volatile
  6299                           
  6300                           ;main.c: 1150: INTCONbits.PEIE=0;
  6301  18DC  130B               	bcf	11,6	;volatile
  6302                           
  6303                           ;main.c: 1151: INTCONbits.T0IF=0;
  6304  18DD  110B               	bcf	11,2	;volatile
  6305                           
  6306                           ;main.c: 1157: TMR0=0x85;
  6307  18DE  3085               	movlw	133
  6308  18DF  0020               	movlb	0	; select bank0
  6309  18E0  0095               	movwf	21	;volatile
  6310                           
  6311                           ;main.c: 1158: INTCONbits.T0IE=1;
  6312  18E1  168B               	bsf	11,5	;volatile
  6313  18E2  0008               	return
  6314  18E3                     __end_of_Timer0_init:	
  6315                           
  6316                           	psect	text16
  6317  1CF1                     __ptext16:	
  6318 ;; *************** function _SCANENCODER2 *****************
  6319 ;; Defined at:
  6320 ;;		line 94 in file "ENCODER.C"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;		None
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  result          1    6[BANK1 ] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      unsigned char 
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0, pclath, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;Total ram usage:        2 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    4
  6341 ;; This function calls:
  6342 ;;		_enc2_port
  6343 ;; This function is called by:
  6344 ;;		_main
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           
  6349                           ;psect for function _SCANENCODER2
  6350  1CF1                     _SCANENCODER2:	
  6351                           
  6352                           ;ENCODER.C: 96: unsigned char result=0;
  6353                           
  6354                           ;incstack = 0
  6355                           ; Regs used in _SCANENCODER2: [wreg+status,2+status,0+pclath+cstack]
  6356  1CF1  0021               	movlb	1	; select bank1
  6357  1CF2  01A6               	clrf	SCANENCODER2@result^(0+128)
  6358                           
  6359                           ;ENCODER.C: 97: if(enc2_port() == 1)
  6360  1CF3  319A  224B  319C   	fcall	_enc2_port
  6361  1CF6  3A01               	xorlw	1
  6362  1CF7  1D03               	skipz
  6363  1CF8  2D6C               	goto	l4288
  6364                           
  6365                           ;ENCODER.C: 98: {
  6366                           ;ENCODER.C: 99: if(firstpulse2==0 && secondpulse2==0)
  6367  1CF9  0022               	movlb	2	; select bank2
  6368  1CFA  08C0               	movf	_firstpulse2^(0+256),f
  6369  1CFB  1D03               	skipz
  6370  1CFC  2D1E               	goto	l4250
  6371  1CFD  08D6               	movf	_secondpulse2^(0+256),f
  6372  1CFE  1D03               	skipz
  6373  1CFF  2D1E               	goto	l4250
  6374                           
  6375                           ;ENCODER.C: 100: {
  6376                           ;ENCODER.C: 101: if(new2==0x02)
  6377  1D00  3002               	movlw	2
  6378  1D01  0020               	movlb	0	; select bank0
  6379  1D02  0656               	xorwf	_new2,w
  6380  1D03  0457               	iorwf	_new2+1,w
  6381  1D04  1D03               	skipz
  6382  1D05  2D11               	goto	l4240
  6383                           
  6384                           ;ENCODER.C: 102: {
  6385                           ;ENCODER.C: 103: firstpulse2=1;
  6386  1D06  0022               	movlb	2	; select bank2
  6387  1D07  01C0               	clrf	_firstpulse2^(0+256)
  6388  1D08  0AC0               	incf	_firstpulse2^(0+256),f
  6389                           
  6390                           ;ENCODER.C: 104: secondpulse2=0;
  6391  1D09  01D6               	clrf	_secondpulse2^(0+256)
  6392                           
  6393                           ;ENCODER.C: 105: plus222=1;
  6394  1D0A  01CD               	clrf	_plus222^(0+256)
  6395  1D0B  0ACD               	incf	_plus222^(0+256),f
  6396                           
  6397                           ;ENCODER.C: 106: result='$';
  6398  1D0C  3024               	movlw	36
  6399  1D0D  0021               	movlb	1	; select bank1
  6400  1D0E  00A5               	movwf	??_SCANENCODER2^(0+128)
  6401  1D0F  0825               	movf	??_SCANENCODER2^(0+128),w
  6402  1D10  00A6               	movwf	SCANENCODER2@result^(0+128)
  6403  1D11                     l4240:	
  6404                           
  6405                           ;ENCODER.C: 107: }
  6406                           ;ENCODER.C: 108: if(new2==0x01)
  6407  1D11  3001               	movlw	1
  6408  1D12  0020               	movlb	0	; select bank0
  6409  1D13  0656               	xorwf	_new2,w
  6410  1D14  0457               	iorwf	_new2+1,w
  6411  1D15  1D03               	skipz
  6412  1D16  2D6C               	goto	l4288
  6413                           
  6414                           ;ENCODER.C: 109: {
  6415                           ;ENCODER.C: 110: firstpulse2=1;
  6416  1D17  0022               	movlb	2	; select bank2
  6417  1D18  01C0               	clrf	_firstpulse2^(0+256)
  6418  1D19  0AC0               	incf	_firstpulse2^(0+256),f
  6419                           
  6420                           ;ENCODER.C: 111: secondpulse2=0;
  6421  1D1A  01D6               	clrf	_secondpulse2^(0+256)
  6422                           
  6423                           ;ENCODER.C: 112: minus222=1;
  6424  1D1B  01C6               	clrf	_minus222^(0+256)
  6425  1D1C  0AC6               	incf	_minus222^(0+256),f
  6426  1D1D  2D67               	goto	l4286
  6427  1D1E                     l4250:	
  6428                           ;ENCODER.C: 114: }
  6429                           ;ENCODER.C: 115: }
  6430                           
  6431                           ;ENCODER.C: 113: result='$';
  6432                           
  6433                           
  6434                           ;ENCODER.C: 116: else if(firstpulse2==1 && secondpulse2==0)
  6435  1D1E  0022               	movlb	2	; select bank2
  6436  1D1F  0840               	movf	_firstpulse2^(0+256),w
  6437  1D20  3A01               	xorlw	1
  6438  1D21  1D03               	skipz
  6439  1D22  2D32               	goto	l4260
  6440  1D23  08D6               	movf	_secondpulse2^(0+256),f
  6441  1D24  1D03               	skipz
  6442  1D25  2D32               	goto	l4260
  6443                           
  6444                           ;ENCODER.C: 117: {
  6445                           ;ENCODER.C: 118: if(new2==0x03)
  6446  1D26  3003               	movlw	3
  6447  1D27  0020               	movlb	0	; select bank0
  6448  1D28  0656               	xorwf	_new2,w
  6449  1D29  0457               	iorwf	_new2+1,w
  6450  1D2A  1D03               	skipz
  6451  1D2B  2D6C               	goto	l4288
  6452                           
  6453                           ;ENCODER.C: 119: {
  6454                           ;ENCODER.C: 120: firstpulse2=1;
  6455  1D2C  0022               	movlb	2	; select bank2
  6456  1D2D  01C0               	clrf	_firstpulse2^(0+256)
  6457  1D2E  0AC0               	incf	_firstpulse2^(0+256),f
  6458                           
  6459                           ;ENCODER.C: 121: secondpulse2=1;
  6460  1D2F  01D6               	clrf	_secondpulse2^(0+256)
  6461  1D30  0AD6               	incf	_secondpulse2^(0+256),f
  6462  1D31  2D67               	goto	l4286
  6463  1D32                     l4260:	
  6464                           ;ENCODER.C: 123: }
  6465                           ;ENCODER.C: 124: }
  6466                           
  6467                           ;ENCODER.C: 122: result='$';
  6468                           
  6469                           
  6470                           ;ENCODER.C: 125: else if(firstpulse2==1 && secondpulse2==1)
  6471  1D32  0022               	movlb	2	; select bank2
  6472  1D33  0840               	movf	_firstpulse2^(0+256),w
  6473  1D34  3A01               	xorlw	1
  6474  1D35  1D03               	skipz
  6475  1D36  2D63               	goto	l4284
  6476  1D37  0856               	movf	_secondpulse2^(0+256),w
  6477  1D38  3A01               	xorlw	1
  6478  1D39  1D03               	skipz
  6479  1D3A  2D63               	goto	l4284
  6480                           
  6481                           ;ENCODER.C: 126: {
  6482                           ;ENCODER.C: 127: if(new2==0x01 && plus222==1)
  6483  1D3B  3001               	movlw	1
  6484  1D3C  0020               	movlb	0	; select bank0
  6485  1D3D  0656               	xorwf	_new2,w
  6486  1D3E  0457               	iorwf	_new2+1,w
  6487  1D3F  1D03               	skipz
  6488  1D40  2D4D               	goto	l4272
  6489  1D41  0022               	movlb	2	; select bank2
  6490  1D42  084D               	movf	_plus222^(0+256),w
  6491  1D43  3A01               	xorlw	1
  6492  1D44  1D03               	skipz
  6493  1D45  2D4D               	goto	l4272
  6494                           
  6495                           ;ENCODER.C: 128: {
  6496                           ;ENCODER.C: 129: firstpulse2=0;
  6497  1D46  01C0               	clrf	_firstpulse2^(0+256)
  6498                           
  6499                           ;ENCODER.C: 130: plus222=0;
  6500  1D47  01CD               	clrf	_plus222^(0+256)
  6501                           
  6502                           ;ENCODER.C: 131: result='+';
  6503  1D48  302B               	movlw	43
  6504  1D49  0021               	movlb	1	; select bank1
  6505  1D4A  00A5               	movwf	??_SCANENCODER2^(0+128)
  6506  1D4B  0825               	movf	??_SCANENCODER2^(0+128),w
  6507  1D4C  00A6               	movwf	SCANENCODER2@result^(0+128)
  6508  1D4D                     l4272:	
  6509                           
  6510                           ;ENCODER.C: 132: }
  6511                           ;ENCODER.C: 133: if(new2==0x02 && minus222==1)
  6512  1D4D  3002               	movlw	2
  6513  1D4E  0020               	movlb	0	; select bank0
  6514  1D4F  0656               	xorwf	_new2,w
  6515  1D50  0457               	iorwf	_new2+1,w
  6516  1D51  1D03               	skipz
  6517  1D52  2D5F               	goto	l4280
  6518  1D53  0022               	movlb	2	; select bank2
  6519  1D54  0846               	movf	_minus222^(0+256),w
  6520  1D55  3A01               	xorlw	1
  6521  1D56  1D03               	skipz
  6522  1D57  2D5F               	goto	l4280
  6523                           
  6524                           ;ENCODER.C: 134: {
  6525                           ;ENCODER.C: 135: firstpulse2=0;
  6526  1D58  01C0               	clrf	_firstpulse2^(0+256)
  6527                           
  6528                           ;ENCODER.C: 136: minus222=0;
  6529  1D59  01C6               	clrf	_minus222^(0+256)
  6530                           
  6531                           ;ENCODER.C: 137: result='-';
  6532  1D5A  302D               	movlw	45
  6533  1D5B  0021               	movlb	1	; select bank1
  6534  1D5C  00A5               	movwf	??_SCANENCODER2^(0+128)
  6535  1D5D  0825               	movf	??_SCANENCODER2^(0+128),w
  6536  1D5E  00A6               	movwf	SCANENCODER2@result^(0+128)
  6537  1D5F                     l4280:	
  6538                           
  6539                           ;ENCODER.C: 138: }
  6540                           ;ENCODER.C: 139: firstpulse2=0;
  6541  1D5F  0022               	movlb	2	; select bank2
  6542  1D60  01C0               	clrf	_firstpulse2^(0+256)
  6543                           
  6544                           ;ENCODER.C: 140: secondpulse2=0;
  6545  1D61  01D6               	clrf	_secondpulse2^(0+256)
  6546                           
  6547                           ;ENCODER.C: 141: }
  6548  1D62  2D6C               	goto	l4288
  6549  1D63                     l4284:	
  6550                           
  6551                           ;ENCODER.C: 142: else
  6552                           ;ENCODER.C: 143: {
  6553                           ;ENCODER.C: 144: plus222=0;
  6554  1D63  01CD               	clrf	_plus222^(0+256)
  6555                           
  6556                           ;ENCODER.C: 145: minus222=0;
  6557  1D64  01C6               	clrf	_minus222^(0+256)
  6558                           
  6559                           ;ENCODER.C: 146: firstpulse2=0;
  6560  1D65  01C0               	clrf	_firstpulse2^(0+256)
  6561                           
  6562                           ;ENCODER.C: 147: secondpulse2=0;
  6563  1D66  01D6               	clrf	_secondpulse2^(0+256)
  6564  1D67                     l4286:	
  6565                           
  6566                           ;ENCODER.C: 148: result='$';
  6567  1D67  3024               	movlw	36
  6568  1D68  0021               	movlb	1	; select bank1
  6569  1D69  00A5               	movwf	??_SCANENCODER2^(0+128)
  6570  1D6A  0825               	movf	??_SCANENCODER2^(0+128),w
  6571  1D6B  00A6               	movwf	SCANENCODER2@result^(0+128)
  6572  1D6C                     l4288:	
  6573                           
  6574                           ;ENCODER.C: 149: }
  6575                           ;ENCODER.C: 150: }
  6576                           ;ENCODER.C: 151: return(result);
  6577  1D6C  0021               	movlb	1	; select bank1
  6578  1D6D  0826               	movf	SCANENCODER2@result^(0+128),w
  6579  1D6E  0008               	return
  6580  1D6F                     __end_of_SCANENCODER2:	
  6581                           
  6582                           	psect	text17
  6583  1A4B                     __ptext17:	
  6584 ;; *************** function _enc2_port *****************
  6585 ;; Defined at:
  6586 ;;		line 154 in file "ENCODER.C"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;		None
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  portvalue       2    3[BANK1 ] unsigned int 
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1    wreg      unsigned char 
  6593 ;; Registers used:
  6594 ;;		wreg, status,2, status,0
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6602 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6603 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6604 ;;Total ram usage:        5 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:    3
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_SCANENCODER2
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           
  6615                           ;psect for function _enc2_port
  6616  1A4B                     _enc2_port:	
  6617                           
  6618                           ;ENCODER.C: 156: unsigned int portvalue=0x0000;
  6619                           
  6620                           ;incstack = 0
  6621                           ; Regs used in _enc2_port: [wreg+status,2+status,0]
  6622  1A4B  0021               	movlb	1	; select bank1
  6623  1A4C  01A3               	clrf	enc2_port@portvalue^(0+128)
  6624  1A4D  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6625                           
  6626                           ;ENCODER.C: 157: portvalue=0x0000;
  6627  1A4E  01A3               	clrf	enc2_port@portvalue^(0+128)
  6628  1A4F  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6629                           
  6630                           ;ENCODER.C: 158: portvalue=PORTAbits.RA2;
  6631  1A50  0020               	movlb	0	; select bank0
  6632  1A51  0C0C               	rrf	12,w	;volatile
  6633  1A52  0C89               	rrf	9,f
  6634  1A53  3901               	andlw	1
  6635  1A54  0021               	movlb	1	; select bank1
  6636  1A55  00A0               	movwf	??_enc2_port^(0+128)
  6637  1A56  01A1               	clrf	(??_enc2_port^(0+128)+1)
  6638  1A57  0820               	movf	??_enc2_port^(0+128),w
  6639  1A58  00A3               	movwf	enc2_port@portvalue^(0+128)
  6640  1A59  0821               	movf	(??_enc2_port+1)^(0+128),w
  6641  1A5A  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6642                           
  6643                           ;ENCODER.C: 159: portvalue=portvalue<<1;
  6644  1A5B  3523               	lslf	enc2_port@portvalue^(0+128),w
  6645  1A5C  00A3               	movwf	enc2_port@portvalue^(0+128)
  6646  1A5D  0D24               	rlf	(enc2_port@portvalue+1)^(0+128),w
  6647  1A5E  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6648                           
  6649                           ;ENCODER.C: 160: portvalue=portvalue|PORTAbits.RA1;
  6650  1A5F  0020               	movlb	0	; select bank0
  6651  1A60  0C0C               	rrf	12,w	;volatile
  6652  1A61  3901               	andlw	1
  6653  1A62  0021               	movlb	1	; select bank1
  6654  1A63  00A0               	movwf	??_enc2_port^(0+128)
  6655  1A64  0823               	movf	enc2_port@portvalue^(0+128),w
  6656  1A65  0420               	iorwf	??_enc2_port^(0+128),w
  6657  1A66  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6658  1A67  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6659  1A68  00A2               	movwf	(??_enc2_port+2)^(0+128)
  6660  1A69  0821               	movf	(??_enc2_port+1)^(0+128),w
  6661  1A6A  00A3               	movwf	enc2_port@portvalue^(0+128)
  6662  1A6B  0822               	movf	(??_enc2_port+2)^(0+128),w
  6663  1A6C  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6664                           
  6665                           ;ENCODER.C: 161: portvalue=(portvalue & 0X0003);
  6666  1A6D  3003               	movlw	3
  6667  1A6E  0523               	andwf	enc2_port@portvalue^(0+128),w
  6668  1A6F  00A3               	movwf	enc2_port@portvalue^(0+128)
  6669  1A70  3000               	movlw	0
  6670  1A71  0524               	andwf	(enc2_port@portvalue+1)^(0+128),w
  6671  1A72  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6672                           
  6673                           ;ENCODER.C: 162: new2=portvalue;
  6674  1A73  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6675  1A74  0020               	movlb	0	; select bank0
  6676  1A75  01D7               	clrf	_new2+1
  6677  1A76  07D7               	addwf	_new2+1,f
  6678  1A77  0021               	movlb	1	; select bank1
  6679  1A78  0823               	movf	enc2_port@portvalue^(0+128),w
  6680  1A79  0020               	movlb	0	; select bank0
  6681  1A7A  01D6               	clrf	_new2
  6682  1A7B  07D6               	addwf	_new2,f
  6683                           
  6684                           ;ENCODER.C: 163: temp=new2;
  6685  1A7C  0856               	movf	_new2,w
  6686  1A7D  0021               	movlb	1	; select bank1
  6687  1A7E  00A0               	movwf	??_enc2_port^(0+128)
  6688  1A7F  0820               	movf	??_enc2_port^(0+128),w
  6689  1A80  0020               	movlb	0	; select bank0
  6690  1A81  00E5               	movwf	_temp
  6691                           
  6692                           ;ENCODER.C: 164: if((temp ^ old2) !=0)
  6693  1A82  0023               	movlb	3	; select bank3
  6694  1A83  083E               	movf	_old2^(0+384),w
  6695  1A84  0020               	movlb	0	; select bank0
  6696  1A85  0665               	xorwf	_temp,w
  6697  1A86  0021               	movlb	1	; select bank1
  6698  1A87  00A0               	movwf	??_enc2_port^(0+128)
  6699  1A88  0023               	movlb	3	; select bank3
  6700  1A89  083F               	movf	(_old2+1)^(0+384),w
  6701  1A8A  0021               	movlb	1	; select bank1
  6702  1A8B  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6703  1A8C  0821               	movf	(??_enc2_port+1)^(0+128),w
  6704  1A8D  0420               	iorwf	??_enc2_port^(0+128),w
  6705  1A8E  1903               	skipnz
  6706  1A8F  2A9C               	goto	l3660
  6707                           
  6708                           ;ENCODER.C: 165: {
  6709                           ;ENCODER.C: 166: old2=new2;
  6710  1A90  0020               	movlb	0	; select bank0
  6711  1A91  0857               	movf	_new2+1,w
  6712  1A92  0023               	movlb	3	; select bank3
  6713  1A93  01BF               	clrf	(_old2+1)^(0+384)
  6714  1A94  07BF               	addwf	(_old2+1)^(0+384),f
  6715  1A95  0020               	movlb	0	; select bank0
  6716  1A96  0856               	movf	_new2,w
  6717  1A97  0023               	movlb	3	; select bank3
  6718  1A98  01BE               	clrf	_old2^(0+384)
  6719  1A99  07BE               	addwf	_old2^(0+384),f
  6720                           
  6721                           ;ENCODER.C: 167: return 1;
  6722  1A9A  3001               	movlw	1
  6723                           
  6724                           ;ENCODER.C: 168: }
  6725  1A9B  0008               	return
  6726  1A9C                     l3660:	
  6727                           
  6728                           ;ENCODER.C: 169: else
  6729                           ;ENCODER.C: 170: {
  6730                           ;ENCODER.C: 171: old2=new2;
  6731  1A9C  0020               	movlb	0	; select bank0
  6732  1A9D  0857               	movf	_new2+1,w
  6733  1A9E  0023               	movlb	3	; select bank3
  6734  1A9F  01BF               	clrf	(_old2+1)^(0+384)
  6735  1AA0  07BF               	addwf	(_old2+1)^(0+384),f
  6736  1AA1  0020               	movlb	0	; select bank0
  6737  1AA2  0856               	movf	_new2,w
  6738  1AA3  0023               	movlb	3	; select bank3
  6739  1AA4  01BE               	clrf	_old2^(0+384)
  6740  1AA5  07BE               	addwf	_old2^(0+384),f
  6741                           
  6742                           ;ENCODER.C: 172: return 0;
  6743  1AA6  3000               	movlw	0
  6744  1AA7  0008               	return
  6745  1AA8                     __end_of_enc2_port:	
  6746                           
  6747                           	psect	text18
  6748  1D6F                     __ptext18:	
  6749 ;; *************** function _SCANENCODER1 *****************
  6750 ;; Defined at:
  6751 ;;		line 12 in file "ENCODER.C"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;		None
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  result          1    7[BANK1 ] unsigned char 
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      unsigned char 
  6758 ;; Registers used:
  6759 ;;		wreg, status,2, status,0, pclath, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6766 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;Total ram usage:        2 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; Hardware stack levels required when called:    4
  6772 ;; This function calls:
  6773 ;;		_enc1_port
  6774 ;; This function is called by:
  6775 ;;		_main
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           
  6780                           ;psect for function _SCANENCODER1
  6781  1D6F                     _SCANENCODER1:	
  6782                           
  6783                           ;ENCODER.C: 14: unsigned char result=0;
  6784                           
  6785                           ;incstack = 0
  6786                           ; Regs used in _SCANENCODER1: [wreg+status,2+status,0+pclath+cstack]
  6787  1D6F  0021               	movlb	1	; select bank1
  6788  1D70  01A7               	clrf	SCANENCODER1@result^(0+128)
  6789                           
  6790                           ;ENCODER.C: 15: if(enc1_port() == 1)
  6791  1D71  319A  22A8  319D   	fcall	_enc1_port
  6792  1D74  3A01               	xorlw	1
  6793  1D75  1D03               	skipz
  6794  1D76  2DEB               	goto	l4218
  6795                           
  6796                           ;ENCODER.C: 16: {
  6797                           ;ENCODER.C: 17: if(firstpulse1==0 && secondpulse1==0)
  6798  1D77  0022               	movlb	2	; select bank2
  6799  1D78  08BF               	movf	_firstpulse1^(0+256),f
  6800  1D79  1D03               	skipz
  6801  1D7A  2D9C               	goto	l4178
  6802  1D7B  08D5               	movf	_secondpulse1^(0+256),f
  6803  1D7C  1D03               	skipz
  6804  1D7D  2D9C               	goto	l4178
  6805                           
  6806                           ;ENCODER.C: 18: {
  6807                           ;ENCODER.C: 19: if(new1==0x02)
  6808  1D7E  3002               	movlw	2
  6809  1D7F  0020               	movlb	0	; select bank0
  6810  1D80  0654               	xorwf	_new1,w
  6811  1D81  0455               	iorwf	_new1+1,w
  6812  1D82  1D03               	skipz
  6813  1D83  2D8F               	goto	l4168
  6814                           
  6815                           ;ENCODER.C: 20: {
  6816                           ;ENCODER.C: 21: firstpulse1=1;
  6817  1D84  0022               	movlb	2	; select bank2
  6818  1D85  01BF               	clrf	_firstpulse1^(0+256)
  6819  1D86  0ABF               	incf	_firstpulse1^(0+256),f
  6820                           
  6821                           ;ENCODER.C: 22: secondpulse1=0;
  6822  1D87  01D5               	clrf	_secondpulse1^(0+256)
  6823                           
  6824                           ;ENCODER.C: 23: plus111=1;
  6825  1D88  01CC               	clrf	_plus111^(0+256)
  6826  1D89  0ACC               	incf	_plus111^(0+256),f
  6827                           
  6828                           ;ENCODER.C: 24: result='$';
  6829  1D8A  3024               	movlw	36
  6830  1D8B  0021               	movlb	1	; select bank1
  6831  1D8C  00A6               	movwf	??_SCANENCODER1^(0+128)
  6832  1D8D  0826               	movf	??_SCANENCODER1^(0+128),w
  6833  1D8E  00A7               	movwf	SCANENCODER1@result^(0+128)
  6834  1D8F                     l4168:	
  6835                           
  6836                           ;ENCODER.C: 25: }
  6837                           ;ENCODER.C: 26: if(new1==0x01)
  6838  1D8F  3001               	movlw	1
  6839  1D90  0020               	movlb	0	; select bank0
  6840  1D91  0654               	xorwf	_new1,w
  6841  1D92  0455               	iorwf	_new1+1,w
  6842  1D93  1D03               	skipz
  6843  1D94  2DEB               	goto	l4218
  6844                           
  6845                           ;ENCODER.C: 27: {
  6846                           ;ENCODER.C: 28: firstpulse1=1;
  6847  1D95  0022               	movlb	2	; select bank2
  6848  1D96  01BF               	clrf	_firstpulse1^(0+256)
  6849  1D97  0ABF               	incf	_firstpulse1^(0+256),f
  6850                           
  6851                           ;ENCODER.C: 29: secondpulse1=0;
  6852  1D98  01D5               	clrf	_secondpulse1^(0+256)
  6853                           
  6854                           ;ENCODER.C: 30: minus111=1;
  6855  1D99  01C5               	clrf	_minus111^(0+256)
  6856  1D9A  0AC5               	incf	_minus111^(0+256),f
  6857  1D9B  2DE6               	goto	l4216
  6858  1D9C                     l4178:	
  6859                           ;ENCODER.C: 32: }
  6860                           ;ENCODER.C: 33: }
  6861                           
  6862                           ;ENCODER.C: 31: result='$';
  6863                           
  6864                           
  6865                           ;ENCODER.C: 34: else if(firstpulse1==1 && secondpulse1==0)
  6866  1D9C  0022               	movlb	2	; select bank2
  6867  1D9D  083F               	movf	_firstpulse1^(0+256),w
  6868  1D9E  3A01               	xorlw	1
  6869  1D9F  1D03               	skipz
  6870  1DA0  2DB0               	goto	l4188
  6871  1DA1  08D5               	movf	_secondpulse1^(0+256),f
  6872  1DA2  1D03               	skipz
  6873  1DA3  2DB0               	goto	l4188
  6874                           
  6875                           ;ENCODER.C: 35: {
  6876                           ;ENCODER.C: 36: if(new1==0x03)
  6877  1DA4  3003               	movlw	3
  6878  1DA5  0020               	movlb	0	; select bank0
  6879  1DA6  0654               	xorwf	_new1,w
  6880  1DA7  0455               	iorwf	_new1+1,w
  6881  1DA8  1D03               	skipz
  6882  1DA9  2DEB               	goto	l4218
  6883                           
  6884                           ;ENCODER.C: 37: {
  6885                           ;ENCODER.C: 38: firstpulse1=1;
  6886  1DAA  0022               	movlb	2	; select bank2
  6887  1DAB  01BF               	clrf	_firstpulse1^(0+256)
  6888  1DAC  0ABF               	incf	_firstpulse1^(0+256),f
  6889                           
  6890                           ;ENCODER.C: 39: secondpulse1=1;
  6891  1DAD  01D5               	clrf	_secondpulse1^(0+256)
  6892  1DAE  0AD5               	incf	_secondpulse1^(0+256),f
  6893  1DAF  2DE6               	goto	l4216
  6894  1DB0                     l4188:	
  6895                           ;ENCODER.C: 41: }
  6896                           ;ENCODER.C: 42: }
  6897                           
  6898                           ;ENCODER.C: 40: result='$';
  6899                           
  6900                           
  6901                           ;ENCODER.C: 43: else if(firstpulse1==1 && secondpulse1==1)
  6902  1DB0  0022               	movlb	2	; select bank2
  6903  1DB1  083F               	movf	_firstpulse1^(0+256),w
  6904  1DB2  3A01               	xorlw	1
  6905  1DB3  1D03               	skipz
  6906  1DB4  2DE2               	goto	l4214
  6907  1DB5  0855               	movf	_secondpulse1^(0+256),w
  6908  1DB6  3A01               	xorlw	1
  6909  1DB7  1D03               	skipz
  6910  1DB8  2DE2               	goto	l4214
  6911                           
  6912                           ;ENCODER.C: 44: {
  6913                           ;ENCODER.C: 45: if(new1==0x01 && plus111==1)
  6914  1DB9  3001               	movlw	1
  6915  1DBA  0020               	movlb	0	; select bank0
  6916  1DBB  0654               	xorwf	_new1,w
  6917  1DBC  0455               	iorwf	_new1+1,w
  6918  1DBD  1D03               	skipz
  6919  1DBE  2DCC               	goto	l4202
  6920  1DBF  0022               	movlb	2	; select bank2
  6921  1DC0  084C               	movf	_plus111^(0+256),w
  6922  1DC1  3A01               	xorlw	1
  6923  1DC2  1D03               	skipz
  6924  1DC3  2DCC               	goto	l4202
  6925                           
  6926                           ;ENCODER.C: 46: {
  6927                           ;ENCODER.C: 47: firstpulse1=1;
  6928  1DC4  01BF               	clrf	_firstpulse1^(0+256)
  6929  1DC5  0ABF               	incf	_firstpulse1^(0+256),f
  6930                           
  6931                           ;ENCODER.C: 48: plus111=0;
  6932  1DC6  01CC               	clrf	_plus111^(0+256)
  6933                           
  6934                           ;ENCODER.C: 49: result='+';
  6935  1DC7  302B               	movlw	43
  6936  1DC8  0021               	movlb	1	; select bank1
  6937  1DC9  00A6               	movwf	??_SCANENCODER1^(0+128)
  6938  1DCA  0826               	movf	??_SCANENCODER1^(0+128),w
  6939  1DCB  00A7               	movwf	SCANENCODER1@result^(0+128)
  6940  1DCC                     l4202:	
  6941                           
  6942                           ;ENCODER.C: 50: }
  6943                           ;ENCODER.C: 51: if(new1==0x02 && minus111==1)
  6944  1DCC  3002               	movlw	2
  6945  1DCD  0020               	movlb	0	; select bank0
  6946  1DCE  0654               	xorwf	_new1,w
  6947  1DCF  0455               	iorwf	_new1+1,w
  6948  1DD0  1D03               	skipz
  6949  1DD1  2DDE               	goto	l4210
  6950  1DD2  0022               	movlb	2	; select bank2
  6951  1DD3  0845               	movf	_minus111^(0+256),w
  6952  1DD4  3A01               	xorlw	1
  6953  1DD5  1D03               	skipz
  6954  1DD6  2DDE               	goto	l4210
  6955                           
  6956                           ;ENCODER.C: 52: {
  6957                           ;ENCODER.C: 53: firstpulse1=0;
  6958  1DD7  01BF               	clrf	_firstpulse1^(0+256)
  6959                           
  6960                           ;ENCODER.C: 54: minus111=0;
  6961  1DD8  01C5               	clrf	_minus111^(0+256)
  6962                           
  6963                           ;ENCODER.C: 55: result='-';
  6964  1DD9  302D               	movlw	45
  6965  1DDA  0021               	movlb	1	; select bank1
  6966  1DDB  00A6               	movwf	??_SCANENCODER1^(0+128)
  6967  1DDC  0826               	movf	??_SCANENCODER1^(0+128),w
  6968  1DDD  00A7               	movwf	SCANENCODER1@result^(0+128)
  6969  1DDE                     l4210:	
  6970                           
  6971                           ;ENCODER.C: 56: }
  6972                           ;ENCODER.C: 57: firstpulse1=0;
  6973  1DDE  0022               	movlb	2	; select bank2
  6974  1DDF  01BF               	clrf	_firstpulse1^(0+256)
  6975                           
  6976                           ;ENCODER.C: 58: secondpulse1=0;
  6977  1DE0  01D5               	clrf	_secondpulse1^(0+256)
  6978                           
  6979                           ;ENCODER.C: 59: }
  6980  1DE1  2DEB               	goto	l4218
  6981  1DE2                     l4214:	
  6982                           
  6983                           ;ENCODER.C: 60: else
  6984                           ;ENCODER.C: 61: {
  6985                           ;ENCODER.C: 62: plus111=0;
  6986  1DE2  01CC               	clrf	_plus111^(0+256)
  6987                           
  6988                           ;ENCODER.C: 63: minus111=0;
  6989  1DE3  01C5               	clrf	_minus111^(0+256)
  6990                           
  6991                           ;ENCODER.C: 64: firstpulse1=0;
  6992  1DE4  01BF               	clrf	_firstpulse1^(0+256)
  6993                           
  6994                           ;ENCODER.C: 65: secondpulse1=0;
  6995  1DE5  01D5               	clrf	_secondpulse1^(0+256)
  6996  1DE6                     l4216:	
  6997                           
  6998                           ;ENCODER.C: 66: result='$';
  6999  1DE6  3024               	movlw	36
  7000  1DE7  0021               	movlb	1	; select bank1
  7001  1DE8  00A6               	movwf	??_SCANENCODER1^(0+128)
  7002  1DE9  0826               	movf	??_SCANENCODER1^(0+128),w
  7003  1DEA  00A7               	movwf	SCANENCODER1@result^(0+128)
  7004  1DEB                     l4218:	
  7005                           
  7006                           ;ENCODER.C: 67: }
  7007                           ;ENCODER.C: 68: }
  7008                           ;ENCODER.C: 69: return(result);
  7009  1DEB  0021               	movlb	1	; select bank1
  7010  1DEC  0827               	movf	SCANENCODER1@result^(0+128),w
  7011  1DED  0008               	return
  7012  1DEE                     __end_of_SCANENCODER1:	
  7013                           
  7014                           	psect	text19
  7015  1AA8                     __ptext19:	
  7016 ;; *************** function _enc1_port *****************
  7017 ;; Defined at:
  7018 ;;		line 72 in file "ENCODER.C"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;		None
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  portvalue       2    4[BANK1 ] unsigned int 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1    wreg      unsigned char 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7033 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7034 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7035 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;Total ram usage:        6 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    3
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_SCANENCODER1
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           
  7047                           ;psect for function _enc1_port
  7048  1AA8                     _enc1_port:	
  7049                           
  7050                           ;ENCODER.C: 74: unsigned int portvalue=0x0000;
  7051                           
  7052                           ;incstack = 0
  7053                           ; Regs used in _enc1_port: [wreg+status,2+status,0]
  7054  1AA8  0021               	movlb	1	; select bank1
  7055  1AA9  01A4               	clrf	enc1_port@portvalue^(0+128)
  7056  1AAA  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  7057                           
  7058                           ;ENCODER.C: 75: portvalue=0x0000;
  7059  1AAB  01A4               	clrf	enc1_port@portvalue^(0+128)
  7060  1AAC  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  7061                           
  7062                           ;ENCODER.C: 76: portvalue=PORTAbits.RA4;
  7063  1AAD  0020               	movlb	0	; select bank0
  7064  1AAE  0E0C               	swapf	12,w	;volatile
  7065  1AAF  3901               	andlw	1
  7066  1AB0  0021               	movlb	1	; select bank1
  7067  1AB1  00A0               	movwf	??_enc1_port^(0+128)
  7068  1AB2  01A1               	clrf	(??_enc1_port^(0+128)+1)
  7069  1AB3  0820               	movf	??_enc1_port^(0+128),w
  7070  1AB4  00A4               	movwf	enc1_port@portvalue^(0+128)
  7071  1AB5  0821               	movf	(??_enc1_port+1)^(0+128),w
  7072  1AB6  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7073                           
  7074                           ;ENCODER.C: 77: portvalue=portvalue<<1;
  7075  1AB7  3524               	lslf	enc1_port@portvalue^(0+128),w
  7076  1AB8  00A4               	movwf	enc1_port@portvalue^(0+128)
  7077  1AB9  0D25               	rlf	(enc1_port@portvalue+1)^(0+128),w
  7078  1ABA  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7079                           
  7080                           ;ENCODER.C: 78: portvalue=portvalue|PORTAbits.RA3;
  7081  1ABB  0020               	movlb	0	; select bank0
  7082  1ABC  0C0C               	rrf	12,w	;volatile
  7083  1ABD  0021               	movlb	1	; select bank1
  7084  1ABE  00A0               	movwf	??_enc1_port^(0+128)
  7085  1ABF  0CA0               	rrf	??_enc1_port^(0+128),f
  7086  1AC0  0C20               	rrf	??_enc1_port^(0+128),w
  7087  1AC1  3901               	andlw	1
  7088  1AC2  00A1               	movwf	(??_enc1_port+1)^(0+128)
  7089  1AC3  0824               	movf	enc1_port@portvalue^(0+128),w
  7090  1AC4  0421               	iorwf	(??_enc1_port+1)^(0+128),w
  7091  1AC5  00A2               	movwf	(??_enc1_port+2)^(0+128)
  7092  1AC6  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  7093  1AC7  00A3               	movwf	(??_enc1_port+3)^(0+128)
  7094  1AC8  0822               	movf	(??_enc1_port+2)^(0+128),w
  7095  1AC9  00A4               	movwf	enc1_port@portvalue^(0+128)
  7096  1ACA  0823               	movf	(??_enc1_port+3)^(0+128),w
  7097  1ACB  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7098                           
  7099                           ;ENCODER.C: 79: portvalue=(portvalue & 0X0003);
  7100  1ACC  3003               	movlw	3
  7101  1ACD  0524               	andwf	enc1_port@portvalue^(0+128),w
  7102  1ACE  00A4               	movwf	enc1_port@portvalue^(0+128)
  7103  1ACF  3000               	movlw	0
  7104  1AD0  0525               	andwf	(enc1_port@portvalue+1)^(0+128),w
  7105  1AD1  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7106                           
  7107                           ;ENCODER.C: 80: new1=portvalue;
  7108  1AD2  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  7109  1AD3  0020               	movlb	0	; select bank0
  7110  1AD4  01D5               	clrf	_new1+1
  7111  1AD5  07D5               	addwf	_new1+1,f
  7112  1AD6  0021               	movlb	1	; select bank1
  7113  1AD7  0824               	movf	enc1_port@portvalue^(0+128),w
  7114  1AD8  0020               	movlb	0	; select bank0
  7115  1AD9  01D4               	clrf	_new1
  7116  1ADA  07D4               	addwf	_new1,f
  7117                           
  7118                           ;ENCODER.C: 81: temp=new1;
  7119  1ADB  0854               	movf	_new1,w
  7120  1ADC  0021               	movlb	1	; select bank1
  7121  1ADD  00A0               	movwf	??_enc1_port^(0+128)
  7122  1ADE  0820               	movf	??_enc1_port^(0+128),w
  7123  1ADF  0020               	movlb	0	; select bank0
  7124  1AE0  00E5               	movwf	_temp
  7125                           
  7126                           ;ENCODER.C: 82: if((temp ^ old1) !=0)
  7127  1AE1  0023               	movlb	3	; select bank3
  7128  1AE2  083C               	movf	_old1^(0+384),w
  7129  1AE3  0020               	movlb	0	; select bank0
  7130  1AE4  0665               	xorwf	_temp,w
  7131  1AE5  0021               	movlb	1	; select bank1
  7132  1AE6  00A0               	movwf	??_enc1_port^(0+128)
  7133  1AE7  0023               	movlb	3	; select bank3
  7134  1AE8  083D               	movf	(_old1+1)^(0+384),w
  7135  1AE9  0021               	movlb	1	; select bank1
  7136  1AEA  00A1               	movwf	(??_enc1_port+1)^(0+128)
  7137  1AEB  0821               	movf	(??_enc1_port+1)^(0+128),w
  7138  1AEC  0420               	iorwf	??_enc1_port^(0+128),w
  7139  1AED  1903               	skipnz
  7140  1AEE  2AFB               	goto	l3630
  7141                           
  7142                           ;ENCODER.C: 83: {
  7143                           ;ENCODER.C: 84: old1=new1;
  7144  1AEF  0020               	movlb	0	; select bank0
  7145  1AF0  0855               	movf	_new1+1,w
  7146  1AF1  0023               	movlb	3	; select bank3
  7147  1AF2  01BD               	clrf	(_old1+1)^(0+384)
  7148  1AF3  07BD               	addwf	(_old1+1)^(0+384),f
  7149  1AF4  0020               	movlb	0	; select bank0
  7150  1AF5  0854               	movf	_new1,w
  7151  1AF6  0023               	movlb	3	; select bank3
  7152  1AF7  01BC               	clrf	_old1^(0+384)
  7153  1AF8  07BC               	addwf	_old1^(0+384),f
  7154                           
  7155                           ;ENCODER.C: 85: return 1;
  7156  1AF9  3001               	movlw	1
  7157                           
  7158                           ;ENCODER.C: 86: }
  7159  1AFA  0008               	return
  7160  1AFB                     l3630:	
  7161                           
  7162                           ;ENCODER.C: 87: else
  7163                           ;ENCODER.C: 88: {
  7164                           ;ENCODER.C: 89: old1=new1;
  7165  1AFB  0020               	movlb	0	; select bank0
  7166  1AFC  0855               	movf	_new1+1,w
  7167  1AFD  0023               	movlb	3	; select bank3
  7168  1AFE  01BD               	clrf	(_old1+1)^(0+384)
  7169  1AFF  07BD               	addwf	(_old1+1)^(0+384),f
  7170  1B00  0020               	movlb	0	; select bank0
  7171  1B01  0854               	movf	_new1,w
  7172  1B02  0023               	movlb	3	; select bank3
  7173  1B03  01BC               	clrf	_old1^(0+384)
  7174  1B04  07BC               	addwf	_old1^(0+384),f
  7175                           
  7176                           ;ENCODER.C: 90: return 0;
  7177  1B05  3000               	movlw	0
  7178  1B06  0008               	return
  7179  1B07                     __end_of_enc1_port:	
  7180                           
  7181                           	psect	text20
  7182  0804                     __ptext20:	
  7183 ;; *************** function _PWM_init *****************
  7184 ;; Defined at:
  7185 ;;		line 1161 in file "main.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;		None
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;		None
  7190 ;; Return value:  Size  Location     Type
  7191 ;;		None               void
  7192 ;; Registers used:
  7193 ;;		wreg, status,2, status,0
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7203 ;;Total ram usage:        0 bytes
  7204 ;; Hardware stack levels used:    1
  7205 ;; Hardware stack levels required when called:    3
  7206 ;; This function calls:
  7207 ;;		Nothing
  7208 ;; This function is called by:
  7209 ;;		_main
  7210 ;; This function uses a non-reentrant model
  7211 ;;
  7212                           
  7213                           
  7214                           ;psect for function _PWM_init
  7215  0804                     _PWM_init:	
  7216                           
  7217                           ;main.c: 1164: CCP1CONbits.CCP1M=13;
  7218                           
  7219                           ;incstack = 0
  7220                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
  7221  0804  0025               	movlb	5	; select bank5
  7222  0805  0813               	movf	19,w	;volatile
  7223  0806  39F0               	andlw	-16
  7224  0807  380D               	iorlw	13
  7225  0808  0093               	movwf	19	;volatile
  7226                           
  7227                           ;main.c: 1165: CCP1CONbits.DC1B=0;
  7228  0809  30CF               	movlw	-49
  7229  080A  0593               	andwf	19,f	;volatile
  7230                           
  7231                           ;main.c: 1166: CCPR1L=0;
  7232  080B  0191               	clrf	17	;volatile
  7233                           
  7234                           ;main.c: 1167: TRISCbits.TRISC2=0;
  7235  080C  0021               	movlb	1	; select bank1
  7236  080D  110E               	bcf	14,2	;volatile
  7237                           
  7238                           ;main.c: 1168: PR2=0xC7;
  7239  080E  30C7               	movlw	199
  7240  080F  0020               	movlb	0	; select bank0
  7241  0810  009B               	movwf	27	;volatile
  7242                           
  7243                           ;main.c: 1169: T2CONbits.T2CKPS=1;
  7244  0811  081C               	movf	28,w	;volatile
  7245  0812  39FC               	andlw	-4
  7246  0813  3801               	iorlw	1
  7247  0814  009C               	movwf	28	;volatile
  7248                           
  7249                           ;main.c: 1170: T2CONbits.T2OUTPS=0;
  7250  0815  3087               	movlw	-121
  7251  0816  059C               	andwf	28,f	;volatile
  7252                           
  7253                           ;main.c: 1171: PIR1bits.TMR2IF=0;
  7254  0817  1091               	bcf	17,1	;volatile
  7255                           
  7256                           ;main.c: 1172: PIE1bits.TMR2IE=1;
  7257  0818  0021               	movlb	1	; select bank1
  7258  0819  1491               	bsf	17,1	;volatile
  7259                           
  7260                           ;main.c: 1173: T2CONbits.TMR2ON=1;
  7261  081A  0020               	movlb	0	; select bank0
  7262  081B  151C               	bsf	28,2	;volatile
  7263  081C  0008               	return
  7264  081D                     __end_of_PWM_init:	
  7265                           
  7266                           	psect	text21
  7267  19B0                     __ptext21:	
  7268 ;; *************** function _Delayms *****************
  7269 ;; Defined at:
  7270 ;;		line 201 in file "DISPLAY.C"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;  delay           2    0[BANK1 ] unsigned int 
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;  yyy             2    4[BANK1 ] unsigned int 
  7275 ;;  xxx             2    2[BANK1 ] unsigned int 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;		None               void
  7278 ;; Registers used:
  7279 ;;		wreg, status,2
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7285 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7289 ;;Total ram usage:        6 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    3
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_main
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           
  7300                           ;psect for function _Delayms
  7301  19B0                     _Delayms:	
  7302                           
  7303                           ;DISPLAY.C: 204: unsigned int yyy=0,xxx=0;
  7304                           
  7305                           ;incstack = 0
  7306                           ; Regs used in _Delayms: [wreg+status,2]
  7307  19B0  0021               	movlb	1	; select bank1
  7308  19B1  01A4               	clrf	Delayms@yyy^(0+128)
  7309  19B2  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  7310  19B3  01A2               	clrf	Delayms@xxx^(0+128)
  7311  19B4  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  7312                           
  7313                           ;DISPLAY.C: 205: for(xxx=0;xxx<delay;xxx++)
  7314  19B5  01A2               	clrf	Delayms@xxx^(0+128)
  7315  19B6  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  7316  19B7                     l479:	
  7317  19B7  0821               	movf	(Delayms@delay+1)^(0+128),w
  7318  19B8  0223               	subwf	(Delayms@xxx+1)^(0+128),w
  7319  19B9  1D03               	skipz
  7320  19BA  29BD               	goto	u5555
  7321  19BB  0820               	movf	Delayms@delay^(0+128),w
  7322  19BC  0222               	subwf	Delayms@xxx^(0+128),w
  7323  19BD                     u5555:	
  7324  19BD  1803               	btfsc	3,0
  7325  19BE  0008               	return
  7326                           
  7327                           ;DISPLAY.C: 206: {
  7328                           ;DISPLAY.C: 207: for(yyy=0;yyy<138;yyy++);
  7329  19BF  01A4               	clrf	Delayms@yyy^(0+128)
  7330  19C0  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  7331  19C1  3000               	movlw	0
  7332  19C2  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  7333  19C3  308A               	movlw	138
  7334  19C4  1903               	skipnz
  7335  19C5  0224               	subwf	Delayms@yyy^(0+128),w
  7336  19C6  1803               	btfsc	3,0
  7337  19C7  29D3               	goto	l4148
  7338  19C8                     l4146:	
  7339  19C8  3001               	movlw	1
  7340  19C9  07A4               	addwf	Delayms@yyy^(0+128),f
  7341  19CA  3000               	movlw	0
  7342  19CB  3DA5               	addwfc	(Delayms@yyy+1)^(0+128),f
  7343  19CC  3000               	movlw	0
  7344  19CD  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  7345  19CE  308A               	movlw	138
  7346  19CF  1903               	skipnz
  7347  19D0  0224               	subwf	Delayms@yyy^(0+128),w
  7348  19D1  1C03               	skipc
  7349  19D2  29C8               	goto	l4146
  7350  19D3                     l4148:	
  7351  19D3  3001               	movlw	1
  7352  19D4  07A2               	addwf	Delayms@xxx^(0+128),f
  7353  19D5  3000               	movlw	0
  7354  19D6  3DA3               	addwfc	(Delayms@xxx+1)^(0+128),f
  7355  19D7  29B7               	goto	l479
  7356  19D8                     __end_of_Delayms:	
  7357                           
  7358                           	psect	text22
  7359  148D                     __ptext22:	
  7360 ;; *************** function _Adaptive_base_pid *****************
  7361 ;; Defined at:
  7362 ;;		line 34 in file "MOTORCONTROL.C"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;		None
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;		None
  7367 ;; Return value:  Size  Location     Type
  7368 ;;		None               void
  7369 ;; Registers used:
  7370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7377 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  7378 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  7379 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  7380 ;;Total ram usage:       18 bytes
  7381 ;; Hardware stack levels used:    1
  7382 ;; Hardware stack levels required when called:    5
  7383 ;; This function calls:
  7384 ;;		_Update_PWM
  7385 ;;		___aldiv
  7386 ;;		___altoft
  7387 ;;		___ftadd
  7388 ;;		___ftdiv
  7389 ;;		___ftge
  7390 ;;		___ftmul
  7391 ;;		___ftneg
  7392 ;;		___fttol
  7393 ;;		___wmul
  7394 ;; This function is called by:
  7395 ;;		_main
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           
  7400                           ;psect for function _Adaptive_base_pid
  7401  148D                     _Adaptive_base_pid:	
  7402                           
  7403                           ;MOTORCONTROL.C: 37: pidParams2.Kp2=2.0;
  7404                           
  7405                           ;incstack = 0
  7406                           ; Regs used in _Adaptive_base_pid: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7407  148D  309A               	movlw	154
  7408  148E  0086               	movwf	6
  7409  148F  3023               	movlw	35
  7410  1490  0087               	movwf	7
  7411  1491  3000               	movlw	0
  7412  1492  3FC0               	movwi [0]fsr1
  7413  1493  3000               	movlw	0
  7414  1494  3FC1               	movwi [1]fsr1
  7415  1495  3040               	movlw	64
  7416  1496  3FC2               	movwi [2]fsr1
  7417                           
  7418                           ;MOTORCONTROL.C: 38: pidParams2.Ki2=0.5;
  7419  1497  309A               	movlw	154
  7420  1498  0086               	movwf	6
  7421  1499  3023               	movlw	35
  7422  149A  0087               	movwf	7
  7423  149B  3143               	addfsr 1,3
  7424  149C  3000               	movlw	0
  7425  149D  3FC0               	movwi [0]fsr1
  7426  149E  3000               	movlw	0
  7427  149F  3FC1               	movwi [1]fsr1
  7428  14A0  303F               	movlw	63
  7429  14A1  3FC2               	movwi [2]fsr1
  7430                           
  7431                           ;MOTORCONTROL.C: 39: pidParams2.Kd2=0;
  7432  14A2  309A               	movlw	154
  7433  14A3  0086               	movwf	6
  7434  14A4  3023               	movlw	35
  7435  14A5  0087               	movwf	7
  7436  14A6  3146               	addfsr 1,6
  7437  14A7  3000               	movlw	0
  7438  14A8  3FC0               	movwi [0]fsr1
  7439  14A9  3000               	movlw	0
  7440  14AA  3FC1               	movwi [1]fsr1
  7441  14AB  3000               	movlw	0
  7442  14AC  3FC2               	movwi [2]fsr1
  7443                           
  7444                           ;MOTORCONTROL.C: 41: pidParams2.ReferenceSetpoint2=setpfreq;
  7445  14AD  0023               	movlb	3	; select bank3
  7446  14AE  084E               	movf	_setpfreq^(0+384),w
  7447  14AF  0021               	movlb	1	; select bank1
  7448  14B0  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7449  14B1  0023               	movlb	3	; select bank3
  7450  14B2  084F               	movf	(_setpfreq+1)^(0+384),w
  7451  14B3  0021               	movlb	1	; select bank1
  7452  14B4  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7453  14B5  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7454  14B6  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7455  14B7  30C8               	movlw	200
  7456  14B8  0086               	movwf	6
  7457  14B9  3023               	movlw	35
  7458  14BA  0087               	movwf	7
  7459  14BB  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7460  14BC  3FC0               	movwi [0]fsr1
  7461  14BD  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7462  14BE  3FC1               	movwi [1]fsr1
  7463  14BF  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7464  14C0  3FC2               	movwi [2]fsr1
  7465  14C1  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7466  14C2  3FC3               	movwi [3]fsr1
  7467                           
  7468                           ;MOTORCONTROL.C: 42: pidParams2.feedback2=Fltpfreq;
  7469  14C3  0022               	movlb	2	; select bank2
  7470  14C4  0820               	movf	_Fltpfreq^(0+256),w
  7471  14C5  0021               	movlb	1	; select bank1
  7472  14C6  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7473  14C7  0022               	movlb	2	; select bank2
  7474  14C8  0821               	movf	(_Fltpfreq+1)^(0+256),w
  7475  14C9  0021               	movlb	1	; select bank1
  7476  14CA  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7477  14CB  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7478  14CC  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7479  14CD  30CC               	movlw	204
  7480  14CE  0086               	movwf	6
  7481  14CF  3023               	movlw	35
  7482  14D0  0087               	movwf	7
  7483  14D1  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7484  14D2  3FC0               	movwi [0]fsr1
  7485  14D3  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7486  14D4  3FC1               	movwi [1]fsr1
  7487  14D5  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7488  14D6  3FC2               	movwi [2]fsr1
  7489  14D7  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7490  14D8  3FC3               	movwi [3]fsr1
  7491                           
  7492                           ;MOTORCONTROL.C: 43: disp1term=pidParams2.ReferenceSetpoint2;
  7493  14D9  30C8               	movlw	200
  7494  14DA  0086               	movwf	6
  7495  14DB  3023               	movlw	35
  7496  14DC  0087               	movwf	7
  7497  14DD  3F40               	moviw [0]fsr1
  7498  14DE  0024               	movlb	4	; select bank4
  7499  14DF  00B2               	movwf	_disp1term^(0+512)
  7500  14E0  3F41               	moviw [1]fsr1
  7501  14E1  00B3               	movwf	(_disp1term+1)^(0+512)
  7502                           
  7503                           ;MOTORCONTROL.C: 44: disp2term=pidParams2.feedback2;
  7504  14E2  30CC               	movlw	204
  7505  14E3  0086               	movwf	6
  7506  14E4  3023               	movlw	35
  7507  14E5  0087               	movwf	7
  7508  14E6  3F40               	moviw [0]fsr1
  7509  14E7  00B4               	movwf	_disp2term^(0+512)
  7510  14E8  3F41               	moviw [1]fsr1
  7511  14E9  00B5               	movwf	(_disp2term+1)^(0+512)
  7512                           
  7513                           ;MOTORCONTROL.C: 46: pidParams2.error2 = pidParams2.ReferenceSetpoint2 - pidParams2.feed
      +                          back2;
  7514  14EA  30C8               	movlw	200
  7515  14EB  0086               	movwf	6
  7516  14EC  3023               	movlw	35
  7517  14ED  0087               	movwf	7
  7518  14EE  3F40               	moviw [0]fsr1
  7519  14EF  0021               	movlb	1	; select bank1
  7520  14F0  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7521  14F1  3F41               	moviw [1]fsr1
  7522  14F2  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7523  14F3  3F42               	moviw [2]fsr1
  7524  14F4  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7525  14F5  3F43               	moviw [3]fsr1
  7526  14F6  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7527  14F7  30CC               	movlw	204
  7528  14F8  0086               	movwf	6
  7529  14F9  3023               	movlw	35
  7530  14FA  0087               	movwf	7
  7531  14FB  3F40               	moviw [0]fsr1
  7532  14FC  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  7533  14FD  3F41               	moviw [1]fsr1
  7534  14FE  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  7535  14FF  3F42               	moviw [2]fsr1
  7536  1500  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  7537  1501  3F43               	moviw [3]fsr1
  7538  1502  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  7539  1503  09DF               	comf	(??_Adaptive_base_pid+4)^(0+128),f
  7540  1504  09E0               	comf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7541  1505  09E1               	comf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7542  1506  09E2               	comf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7543  1507  0ADF               	incf	(??_Adaptive_base_pid+4)^(0+128),f
  7544  1508  1903               	skipnz
  7545  1509  0AE0               	incf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7546  150A  1903               	skipnz
  7547  150B  0AE1               	incf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7548  150C  1903               	skipnz
  7549  150D  0AE2               	incf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7550  150E  085F               	movf	(??_Adaptive_base_pid+4)^(0+128),w
  7551  150F  07DB               	addwf	??_Adaptive_base_pid^(0+128),f
  7552  1510  0860               	movf	(??_Adaptive_base_pid+5)^(0+128),w
  7553  1511  3DDC               	addwfc	(??_Adaptive_base_pid^(0+128)+1),f
  7554  1512  0861               	movf	(??_Adaptive_base_pid+6)^(0+128),w
  7555  1513  3DDD               	addwfc	(??_Adaptive_base_pid^(0+128)+2),f
  7556  1514  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  7557  1515  3DDE               	addwfc	(??_Adaptive_base_pid^(0+128)+3),f
  7558  1516  309A               	movlw	154
  7559  1517  0086               	movwf	6
  7560  1518  3023               	movlw	35
  7561  1519  0087               	movwf	7
  7562  151A  314C               	addfsr 1,12
  7563  151B  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7564  151C  3FC0               	movwi [0]fsr1
  7565  151D  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7566  151E  3FC1               	movwi [1]fsr1
  7567  151F  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7568  1520  3FC2               	movwi [2]fsr1
  7569  1521  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7570  1522  3FC3               	movwi [3]fsr1
  7571                           
  7572                           ;MOTORCONTROL.C: 47: pidParams2.feedback2=0;
  7573  1523  30CC               	movlw	204
  7574  1524  0086               	movwf	6
  7575  1525  3023               	movlw	35
  7576  1526  0087               	movwf	7
  7577  1527  3000               	movlw	0
  7578  1528  3FC0               	movwi [0]fsr1
  7579  1529  3FC1               	movwi [1]fsr1
  7580  152A  3FC2               	movwi [2]fsr1
  7581  152B  3FC3               	movwi [3]fsr1
  7582                           
  7583                           ;MOTORCONTROL.C: 48: pidParams2.outmax2=53000;
  7584  152C  30C4               	movlw	196
  7585  152D  0086               	movwf	6
  7586  152E  3023               	movlw	35
  7587  152F  0087               	movwf	7
  7588  1530  3008               	movlw	8
  7589  1531  3FC0               	movwi [0]fsr1
  7590  1532  30CF               	movlw	207
  7591  1533  3FC1               	movwi [1]fsr1
  7592  1534  3000               	movlw	0
  7593  1535  3FC2               	movwi [2]fsr1
  7594  1536  3000               	movlw	0
  7595  1537  3FC3               	movwi [3]fsr1
  7596                           
  7597                           ;MOTORCONTROL.C: 50: scalefactor2=66.0;
  7598  1538  3042               	movlw	66
  7599  1539  0023               	movlb	3	; select bank3
  7600  153A  00EC               	movwf	_scalefactor2^(0+384)
  7601  153B  3000               	movlw	0
  7602  153C  00ED               	movwf	(_scalefactor2^(0+384)+1)
  7603                           
  7604                           ;MOTORCONTROL.C: 53: {
  7605                           ;MOTORCONTROL.C: 54: error_new =pidParams2.error2;
  7606  153D  309A               	movlw	154
  7607  153E  0086               	movwf	6
  7608  153F  3023               	movlw	35
  7609  1540  0087               	movwf	7
  7610  1541  314C               	addfsr 1,12
  7611  1542  3F40               	moviw [0]fsr1
  7612  1543  0021               	movlb	1	; select bank1
  7613  1544  00A8               	movwf	___altoft@c^(0+128)
  7614  1545  3F41               	moviw [1]fsr1
  7615  1546  00A9               	movwf	(___altoft@c+1)^(0+128)
  7616  1547  3F42               	moviw [2]fsr1
  7617  1548  00AA               	movwf	(___altoft@c+2)^(0+128)
  7618  1549  3F43               	moviw [3]fsr1
  7619  154A  00AB               	movwf	(___altoft@c+3)^(0+128)
  7620  154B  3187  27BD  3194   	fcall	___altoft
  7621  154E  0021               	movlb	1	; select bank1
  7622  154F  0828               	movf	?___altoft^(0+128),w
  7623  1550  0023               	movlb	3	; select bank3
  7624  1551  00A0               	movwf	_error_new^(0+384)
  7625  1552  0021               	movlb	1	; select bank1
  7626  1553  0829               	movf	(?___altoft+1)^(0+128),w
  7627  1554  0023               	movlb	3	; select bank3
  7628  1555  00A1               	movwf	(_error_new+1)^(0+384)
  7629  1556  0021               	movlb	1	; select bank1
  7630  1557  082A               	movf	(?___altoft+2)^(0+128),w
  7631  1558  0023               	movlb	3	; select bank3
  7632  1559  00A2               	movwf	(_error_new+2)^(0+384)
  7633                           
  7634                           ;MOTORCONTROL.C: 55: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7635  155A  309A               	movlw	154
  7636  155B  0086               	movwf	6
  7637  155C  3023               	movlw	35
  7638  155D  0087               	movwf	7
  7639  155E  3143               	addfsr 1,3
  7640  155F  3F40               	moviw [0]fsr1
  7641  1560  0021               	movlb	1	; select bank1
  7642  1561  00B5               	movwf	___ftmul@f1^(0+128)
  7643  1562  3F41               	moviw [1]fsr1
  7644  1563  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7645  1564  3F42               	moviw [2]fsr1
  7646  1565  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7647  1566  0023               	movlb	3	; select bank3
  7648  1567  0823               	movf	_error_old^(0+384),w
  7649  1568  0021               	movlb	1	; select bank1
  7650  1569  00A8               	movwf	___ftadd@f1^(0+128)
  7651  156A  0023               	movlb	3	; select bank3
  7652  156B  0824               	movf	(_error_old+1)^(0+384),w
  7653  156C  0021               	movlb	1	; select bank1
  7654  156D  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7655  156E  0023               	movlb	3	; select bank3
  7656  156F  0825               	movf	(_error_old+2)^(0+384),w
  7657  1570  0021               	movlb	1	; select bank1
  7658  1571  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7659  1572  0023               	movlb	3	; select bank3
  7660  1573  0820               	movf	_error_new^(0+384),w
  7661  1574  0021               	movlb	1	; select bank1
  7662  1575  00AB               	movwf	___ftadd@f2^(0+128)
  7663  1576  0023               	movlb	3	; select bank3
  7664  1577  0821               	movf	(_error_new+1)^(0+384),w
  7665  1578  0021               	movlb	1	; select bank1
  7666  1579  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7667  157A  0023               	movlb	3	; select bank3
  7668  157B  0822               	movf	(_error_new+2)^(0+384),w
  7669  157C  0021               	movlb	1	; select bank1
  7670  157D  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7671  157E  3188  201D  3194   	fcall	___ftadd
  7672  1581  0021               	movlb	1	; select bank1
  7673  1582  0828               	movf	?___ftadd^(0+128),w
  7674  1583  00B8               	movwf	___ftmul@f2^(0+128)
  7675  1584  0829               	movf	(?___ftadd+1)^(0+128),w
  7676  1585  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7677  1586  082A               	movf	(?___ftadd+2)^(0+128),w
  7678  1587  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7679  1588  3192  22E3  3194   	fcall	___ftmul
  7680  158B  0021               	movlb	1	; select bank1
  7681  158C  0835               	movf	?___ftmul^(0+128),w
  7682  158D  00E4               	movwf	_Adaptive_base_pid$1769^(0+128)
  7683  158E  0836               	movf	(?___ftmul+1)^(0+128),w
  7684  158F  00E5               	movwf	(_Adaptive_base_pid$1769+1)^(0+128)
  7685  1590  0837               	movf	(?___ftmul+2)^(0+128),w
  7686  1591  00E6               	movwf	(_Adaptive_base_pid$1769+2)^(0+128)
  7687                           
  7688                           ;MOTORCONTROL.C: 55: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7689  1592  0023               	movlb	3	; select bank3
  7690  1593  0829               	movf	_integral_old^(0+384),w
  7691  1594  0021               	movlb	1	; select bank1
  7692  1595  00A8               	movwf	___ftadd@f1^(0+128)
  7693  1596  0023               	movlb	3	; select bank3
  7694  1597  082A               	movf	(_integral_old+1)^(0+384),w
  7695  1598  0021               	movlb	1	; select bank1
  7696  1599  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7697  159A  0023               	movlb	3	; select bank3
  7698  159B  082B               	movf	(_integral_old+2)^(0+384),w
  7699  159C  0021               	movlb	1	; select bank1
  7700  159D  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7701  159E  3000               	movlw	0
  7702  159F  00C5               	movwf	___ftdiv@f2^(0+128)
  7703  15A0  3000               	movlw	0
  7704  15A1  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  7705  15A2  3040               	movlw	64
  7706  15A3  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  7707  15A4  0023               	movlb	3	; select bank3
  7708  15A5  085F               	movf	_Tsampling^(0+384),w
  7709  15A6  0021               	movlb	1	; select bank1
  7710  15A7  00B5               	movwf	___ftmul@f1^(0+128)
  7711  15A8  0023               	movlb	3	; select bank3
  7712  15A9  0860               	movf	(_Tsampling+1)^(0+384),w
  7713  15AA  0021               	movlb	1	; select bank1
  7714  15AB  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7715  15AC  0023               	movlb	3	; select bank3
  7716  15AD  0861               	movf	(_Tsampling+2)^(0+384),w
  7717  15AE  0021               	movlb	1	; select bank1
  7718  15AF  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7719  15B0  0864               	movf	_Adaptive_base_pid$1769^(0+128),w
  7720  15B1  00B8               	movwf	___ftmul@f2^(0+128)
  7721  15B2  0865               	movf	(_Adaptive_base_pid$1769+1)^(0+128),w
  7722  15B3  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7723  15B4  0866               	movf	(_Adaptive_base_pid$1769+2)^(0+128),w
  7724  15B5  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7725  15B6  3192  22E3  3194   	fcall	___ftmul
  7726  15B9  0021               	movlb	1	; select bank1
  7727  15BA  0835               	movf	?___ftmul^(0+128),w
  7728  15BB  00C8               	movwf	___ftdiv@f1^(0+128)
  7729  15BC  0836               	movf	(?___ftmul+1)^(0+128),w
  7730  15BD  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  7731  15BE  0837               	movf	(?___ftmul+2)^(0+128),w
  7732  15BF  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  7733  15C0  3190  20DC  3194   	fcall	___ftdiv
  7734  15C3  0021               	movlb	1	; select bank1
  7735  15C4  0845               	movf	?___ftdiv^(0+128),w
  7736  15C5  00AB               	movwf	___ftadd@f2^(0+128)
  7737  15C6  0846               	movf	(?___ftdiv+1)^(0+128),w
  7738  15C7  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7739  15C8  0847               	movf	(?___ftdiv+2)^(0+128),w
  7740  15C9  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7741  15CA  3188  201D  3194   	fcall	___ftadd
  7742  15CD  0021               	movlb	1	; select bank1
  7743  15CE  0828               	movf	?___ftadd^(0+128),w
  7744  15CF  0023               	movlb	3	; select bank3
  7745  15D0  00A6               	movwf	_integral_new^(0+384)
  7746  15D1  0021               	movlb	1	; select bank1
  7747  15D2  0829               	movf	(?___ftadd+1)^(0+128),w
  7748  15D3  0023               	movlb	3	; select bank3
  7749  15D4  00A7               	movwf	(_integral_new+1)^(0+384)
  7750  15D5  0021               	movlb	1	; select bank1
  7751  15D6  082A               	movf	(?___ftadd+2)^(0+128),w
  7752  15D7  0023               	movlb	3	; select bank3
  7753  15D8  00A8               	movwf	(_integral_new+2)^(0+384)
  7754                           
  7755                           ;MOTORCONTROL.C: 57: if((integral_new > pidParams2.outmax2) || (integral_new < minoutmax
      +                          ))
  7756  15D9  30C4               	movlw	196
  7757  15DA  0086               	movwf	6
  7758  15DB  3023               	movlw	35
  7759  15DC  0087               	movwf	7
  7760  15DD  3F40               	moviw [0]fsr1
  7761  15DE  0021               	movlb	1	; select bank1
  7762  15DF  00A8               	movwf	___altoft@c^(0+128)
  7763  15E0  3F41               	moviw [1]fsr1
  7764  15E1  00A9               	movwf	(___altoft@c+1)^(0+128)
  7765  15E2  3F42               	moviw [2]fsr1
  7766  15E3  00AA               	movwf	(___altoft@c+2)^(0+128)
  7767  15E4  3F43               	moviw [3]fsr1
  7768  15E5  00AB               	movwf	(___altoft@c+3)^(0+128)
  7769  15E6  3187  27BD  3194   	fcall	___altoft
  7770  15E9  0021               	movlb	1	; select bank1
  7771  15EA  0828               	movf	?___altoft^(0+128),w
  7772  15EB  00B0               	movwf	___ftge@ff1^(0+128)
  7773  15EC  0829               	movf	(?___altoft+1)^(0+128),w
  7774  15ED  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  7775  15EE  082A               	movf	(?___altoft+2)^(0+128),w
  7776  15EF  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  7777  15F0  0023               	movlb	3	; select bank3
  7778  15F1  0826               	movf	_integral_new^(0+384),w
  7779  15F2  0021               	movlb	1	; select bank1
  7780  15F3  00B3               	movwf	___ftge@ff2^(0+128)
  7781  15F4  0023               	movlb	3	; select bank3
  7782  15F5  0827               	movf	(_integral_new+1)^(0+384),w
  7783  15F6  0021               	movlb	1	; select bank1
  7784  15F7  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  7785  15F8  0023               	movlb	3	; select bank3
  7786  15F9  0828               	movf	(_integral_new+2)^(0+384),w
  7787  15FA  0021               	movlb	1	; select bank1
  7788  15FB  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  7789  15FC  319A  220F  3194   	fcall	___ftge
  7790  15FF  1C03               	btfss	3,0
  7791  1600  2E1E               	goto	l4306
  7792  1601  0023               	movlb	3	; select bank3
  7793  1602  0826               	movf	_integral_new^(0+384),w
  7794  1603  0021               	movlb	1	; select bank1
  7795  1604  00B0               	movwf	___ftge@ff1^(0+128)
  7796  1605  0023               	movlb	3	; select bank3
  7797  1606  0827               	movf	(_integral_new+1)^(0+384),w
  7798  1607  0021               	movlb	1	; select bank1
  7799  1608  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  7800  1609  0023               	movlb	3	; select bank3
  7801  160A  0828               	movf	(_integral_new+2)^(0+384),w
  7802  160B  0021               	movlb	1	; select bank1
  7803  160C  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  7804  160D  0024               	movlb	4	; select bank4
  7805  160E  0827               	movf	_minoutmax^(0+512),w
  7806  160F  0021               	movlb	1	; select bank1
  7807  1610  00B3               	movwf	___ftge@ff2^(0+128)
  7808  1611  0024               	movlb	4	; select bank4
  7809  1612  0828               	movf	(_minoutmax+1)^(0+512),w
  7810  1613  0021               	movlb	1	; select bank1
  7811  1614  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  7812  1615  0024               	movlb	4	; select bank4
  7813  1616  0829               	movf	(_minoutmax+2)^(0+512),w
  7814  1617  0021               	movlb	1	; select bank1
  7815  1618  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  7816  1619  319A  220F  3194   	fcall	___ftge
  7817  161C  1803               	btfsc	3,0
  7818  161D  2E25               	goto	l4308
  7819  161E                     l4306:	
  7820                           
  7821                           ;MOTORCONTROL.C: 58: integral_new = integral_old;
  7822  161E  0023               	movlb	3	; select bank3
  7823  161F  0829               	movf	_integral_old^(0+384),w
  7824  1620  00A6               	movwf	_integral_new^(0+384)
  7825  1621  082A               	movf	(_integral_old+1)^(0+384),w
  7826  1622  00A7               	movwf	(_integral_new+1)^(0+384)
  7827  1623  082B               	movf	(_integral_old+2)^(0+384),w
  7828  1624  00A8               	movwf	(_integral_new+2)^(0+384)
  7829  1625                     l4308:	
  7830                           
  7831                           ;MOTORCONTROL.C: 60: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7832  1625  0023               	movlb	3	; select bank3
  7833  1626  085F               	movf	_Tsampling^(0+384),w
  7834  1627  0021               	movlb	1	; select bank1
  7835  1628  00C5               	movwf	___ftdiv@f2^(0+128)
  7836  1629  0023               	movlb	3	; select bank3
  7837  162A  0860               	movf	(_Tsampling+1)^(0+384),w
  7838  162B  0021               	movlb	1	; select bank1
  7839  162C  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  7840  162D  0023               	movlb	3	; select bank3
  7841  162E  0861               	movf	(_Tsampling+2)^(0+384),w
  7842  162F  0021               	movlb	1	; select bank1
  7843  1630  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  7844  1631  309A               	movlw	154
  7845  1632  0086               	movwf	6
  7846  1633  3023               	movlw	35
  7847  1634  0087               	movwf	7
  7848  1635  3146               	addfsr 1,6
  7849  1636  3F40               	moviw [0]fsr1
  7850  1637  00B5               	movwf	___ftmul@f1^(0+128)
  7851  1638  3F41               	moviw [1]fsr1
  7852  1639  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7853  163A  3F42               	moviw [2]fsr1
  7854  163B  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7855  163C  0023               	movlb	3	; select bank3
  7856  163D  0820               	movf	_error_new^(0+384),w
  7857  163E  0021               	movlb	1	; select bank1
  7858  163F  00A8               	movwf	___ftadd@f1^(0+128)
  7859  1640  0023               	movlb	3	; select bank3
  7860  1641  0821               	movf	(_error_new+1)^(0+384),w
  7861  1642  0021               	movlb	1	; select bank1
  7862  1643  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7863  1644  0023               	movlb	3	; select bank3
  7864  1645  0822               	movf	(_error_new+2)^(0+384),w
  7865  1646  0021               	movlb	1	; select bank1
  7866  1647  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7867  1648  0023               	movlb	3	; select bank3
  7868  1649  0823               	movf	_error_old^(0+384),w
  7869  164A  0021               	movlb	1	; select bank1
  7870  164B  00A0               	movwf	___ftneg@f1^(0+128)
  7871  164C  0023               	movlb	3	; select bank3
  7872  164D  0824               	movf	(_error_old+1)^(0+384),w
  7873  164E  0021               	movlb	1	; select bank1
  7874  164F  00A1               	movwf	(___ftneg@f1+1)^(0+128)
  7875  1650  0023               	movlb	3	; select bank3
  7876  1651  0825               	movf	(_error_old+2)^(0+384),w
  7877  1652  0021               	movlb	1	; select bank1
  7878  1653  00A2               	movwf	(___ftneg@f1+2)^(0+128)
  7879  1654  3198  2091  3194   	fcall	___ftneg
  7880  1657  0021               	movlb	1	; select bank1
  7881  1658  0820               	movf	?___ftneg^(0+128),w
  7882  1659  00AB               	movwf	___ftadd@f2^(0+128)
  7883  165A  0821               	movf	(?___ftneg+1)^(0+128),w
  7884  165B  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7885  165C  0822               	movf	(?___ftneg+2)^(0+128),w
  7886  165D  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7887  165E  3188  201D  3194   	fcall	___ftadd
  7888  1661  0021               	movlb	1	; select bank1
  7889  1662  0828               	movf	?___ftadd^(0+128),w
  7890  1663  00B8               	movwf	___ftmul@f2^(0+128)
  7891  1664  0829               	movf	(?___ftadd+1)^(0+128),w
  7892  1665  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7893  1666  082A               	movf	(?___ftadd+2)^(0+128),w
  7894  1667  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7895  1668  3192  22E3  3194   	fcall	___ftmul
  7896  166B  0021               	movlb	1	; select bank1
  7897  166C  0835               	movf	?___ftmul^(0+128),w
  7898  166D  00C8               	movwf	___ftdiv@f1^(0+128)
  7899  166E  0836               	movf	(?___ftmul+1)^(0+128),w
  7900  166F  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  7901  1670  0837               	movf	(?___ftmul+2)^(0+128),w
  7902  1671  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  7903  1672  3190  20DC  3194   	fcall	___ftdiv
  7904  1675  0021               	movlb	1	; select bank1
  7905  1676  0845               	movf	?___ftdiv^(0+128),w
  7906  1677  00E7               	movwf	_Adaptive_base_pid$1770^(0+128)
  7907  1678  0846               	movf	(?___ftdiv+1)^(0+128),w
  7908  1679  00E8               	movwf	(_Adaptive_base_pid$1770+1)^(0+128)
  7909  167A  0847               	movf	(?___ftdiv+2)^(0+128),w
  7910  167B  00E9               	movwf	(_Adaptive_base_pid$1770+2)^(0+128)
  7911                           
  7912                           ;MOTORCONTROL.C: 60: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7913  167C  0867               	movf	_Adaptive_base_pid$1770^(0+128),w
  7914  167D  00A8               	movwf	___ftadd@f1^(0+128)
  7915  167E  0868               	movf	(_Adaptive_base_pid$1770+1)^(0+128),w
  7916  167F  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7917  1680  0869               	movf	(_Adaptive_base_pid$1770+2)^(0+128),w
  7918  1681  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7919  1682  0023               	movlb	3	; select bank3
  7920  1683  0820               	movf	_error_new^(0+384),w
  7921  1684  0021               	movlb	1	; select bank1
  7922  1685  00B5               	movwf	___ftmul@f1^(0+128)
  7923  1686  0023               	movlb	3	; select bank3
  7924  1687  0821               	movf	(_error_new+1)^(0+384),w
  7925  1688  0021               	movlb	1	; select bank1
  7926  1689  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7927  168A  0023               	movlb	3	; select bank3
  7928  168B  0822               	movf	(_error_new+2)^(0+384),w
  7929  168C  0021               	movlb	1	; select bank1
  7930  168D  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7931  168E  309A               	movlw	154
  7932  168F  0086               	movwf	6
  7933  1690  3023               	movlw	35
  7934  1691  0087               	movwf	7
  7935  1692  3F40               	moviw [0]fsr1
  7936  1693  00B8               	movwf	___ftmul@f2^(0+128)
  7937  1694  3F41               	moviw [1]fsr1
  7938  1695  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7939  1696  3F42               	moviw [2]fsr1
  7940  1697  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7941  1698  3192  22E3  3194   	fcall	___ftmul
  7942  169B  0021               	movlb	1	; select bank1
  7943  169C  0835               	movf	?___ftmul^(0+128),w
  7944  169D  00AB               	movwf	___ftadd@f2^(0+128)
  7945  169E  0836               	movf	(?___ftmul+1)^(0+128),w
  7946  169F  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7947  16A0  0837               	movf	(?___ftmul+2)^(0+128),w
  7948  16A1  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7949  16A2  3188  201D  3194   	fcall	___ftadd
  7950  16A5  0021               	movlb	1	; select bank1
  7951  16A6  0828               	movf	?___ftadd^(0+128),w
  7952  16A7  00EA               	movwf	_Adaptive_base_pid$1771^(0+128)
  7953  16A8  0829               	movf	(?___ftadd+1)^(0+128),w
  7954  16A9  00EB               	movwf	(_Adaptive_base_pid$1771+1)^(0+128)
  7955  16AA  082A               	movf	(?___ftadd+2)^(0+128),w
  7956  16AB  00EC               	movwf	(_Adaptive_base_pid$1771+2)^(0+128)
  7957                           
  7958                           ;MOTORCONTROL.C: 60: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7959  16AC  0023               	movlb	3	; select bank3
  7960  16AD  0826               	movf	_integral_new^(0+384),w
  7961  16AE  0021               	movlb	1	; select bank1
  7962  16AF  00A8               	movwf	___ftadd@f1^(0+128)
  7963  16B0  0023               	movlb	3	; select bank3
  7964  16B1  0827               	movf	(_integral_new+1)^(0+384),w
  7965  16B2  0021               	movlb	1	; select bank1
  7966  16B3  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7967  16B4  0023               	movlb	3	; select bank3
  7968  16B5  0828               	movf	(_integral_new+2)^(0+384),w
  7969  16B6  0021               	movlb	1	; select bank1
  7970  16B7  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7971  16B8  086A               	movf	_Adaptive_base_pid$1771^(0+128),w
  7972  16B9  00AB               	movwf	___ftadd@f2^(0+128)
  7973  16BA  086B               	movf	(_Adaptive_base_pid$1771+1)^(0+128),w
  7974  16BB  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7975  16BC  086C               	movf	(_Adaptive_base_pid$1771+2)^(0+128),w
  7976  16BD  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7977  16BE  3188  201D  3194   	fcall	___ftadd
  7978  16C1  0021               	movlb	1	; select bank1
  7979  16C2  0828               	movf	?___ftadd^(0+128),w
  7980  16C3  0024               	movlb	4	; select bank4
  7981  16C4  00A4               	movwf	_controller_out^(0+512)
  7982  16C5  0021               	movlb	1	; select bank1
  7983  16C6  0829               	movf	(?___ftadd+1)^(0+128),w
  7984  16C7  0024               	movlb	4	; select bank4
  7985  16C8  00A5               	movwf	(_controller_out+1)^(0+512)
  7986  16C9  0021               	movlb	1	; select bank1
  7987  16CA  082A               	movf	(?___ftadd+2)^(0+128),w
  7988  16CB  0024               	movlb	4	; select bank4
  7989  16CC  00A6               	movwf	(_controller_out+2)^(0+512)
  7990                           
  7991                           ;MOTORCONTROL.C: 61: integral_old = integral_new;
  7992  16CD  0023               	movlb	3	; select bank3
  7993  16CE  0826               	movf	_integral_new^(0+384),w
  7994  16CF  00A9               	movwf	_integral_old^(0+384)
  7995  16D0  0827               	movf	(_integral_new+1)^(0+384),w
  7996  16D1  00AA               	movwf	(_integral_old+1)^(0+384)
  7997  16D2  0828               	movf	(_integral_new+2)^(0+384),w
  7998  16D3  00AB               	movwf	(_integral_old+2)^(0+384)
  7999                           
  8000                           ;MOTORCONTROL.C: 62: error_old = error_new;
  8001  16D4  0820               	movf	_error_new^(0+384),w
  8002  16D5  00A3               	movwf	_error_old^(0+384)
  8003  16D6  0821               	movf	(_error_new+1)^(0+384),w
  8004  16D7  00A4               	movwf	(_error_old+1)^(0+384)
  8005  16D8  0822               	movf	(_error_new+2)^(0+384),w
  8006  16D9  00A5               	movwf	(_error_old+2)^(0+384)
  8007                           
  8008                           ;MOTORCONTROL.C: 63: pidParams2.pidoutput2=controller_out;
  8009  16DA  0024               	movlb	4	; select bank4
  8010  16DB  0824               	movf	_controller_out^(0+512),w
  8011  16DC  0021               	movlb	1	; select bank1
  8012  16DD  00C5               	movwf	___fttol@f1^(0+128)
  8013  16DE  0024               	movlb	4	; select bank4
  8014  16DF  0825               	movf	(_controller_out+1)^(0+512),w
  8015  16E0  0021               	movlb	1	; select bank1
  8016  16E1  00C6               	movwf	(___fttol@f1+1)^(0+128)
  8017  16E2  0024               	movlb	4	; select bank4
  8018  16E3  0826               	movf	(_controller_out+2)^(0+512),w
  8019  16E4  0021               	movlb	1	; select bank1
  8020  16E5  00C7               	movwf	(___fttol@f1+2)^(0+128)
  8021  16E6  319F  2779  3194   	fcall	___fttol
  8022  16E9  30E0               	movlw	224
  8023  16EA  0086               	movwf	6
  8024  16EB  3023               	movlw	35
  8025  16EC  0087               	movwf	7
  8026  16ED  0021               	movlb	1	; select bank1
  8027  16EE  0845               	movf	?___fttol^(0+128),w
  8028  16EF  3FC0               	movwi [0]fsr1
  8029  16F0  0846               	movf	(?___fttol+1)^(0+128),w
  8030  16F1  3FC1               	movwi [1]fsr1
  8031  16F2  0847               	movf	(?___fttol+2)^(0+128),w
  8032  16F3  3FC2               	movwi [2]fsr1
  8033  16F4  0848               	movf	(?___fttol+3)^(0+128),w
  8034  16F5  3FC3               	movwi [3]fsr1
  8035                           
  8036                           ;MOTORCONTROL.C: 66: if(pidParams2.pidoutput2<=0)
  8037  16F6  30E0               	movlw	224
  8038  16F7  0086               	movwf	6
  8039  16F8  3023               	movlw	35
  8040  16F9  0087               	movwf	7
  8041  16FA  3F40               	moviw [0]fsr1
  8042  16FB  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8043  16FC  3F41               	moviw [1]fsr1
  8044  16FD  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8045  16FE  3F42               	moviw [2]fsr1
  8046  16FF  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8047  1700  3F43               	moviw [3]fsr1
  8048  1701  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8049  1702  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8050  1703  3A80               	xorlw	128
  8051  1704  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  8052  1705  3000               	movlw	0
  8053  1706  3A80               	xorlw	128
  8054  1707  025F               	subwf	(??_Adaptive_base_pid+4)^(0+128),w
  8055  1708  1D03               	skipz
  8056  1709  2F14               	goto	u5863
  8057  170A  3000               	movlw	0
  8058  170B  025D               	subwf	(??_Adaptive_base_pid+2)^(0+128),w
  8059  170C  1D03               	skipz
  8060  170D  2F14               	goto	u5863
  8061  170E  3000               	movlw	0
  8062  170F  025C               	subwf	(??_Adaptive_base_pid+1)^(0+128),w
  8063  1710  1D03               	skipz
  8064  1711  2F14               	goto	u5863
  8065  1712  3001               	movlw	1
  8066  1713  025B               	subwf	??_Adaptive_base_pid^(0+128),w
  8067  1714                     u5863:	
  8068  1714  1803               	skipnc
  8069  1715  2F20               	goto	l4324
  8070                           
  8071                           ;MOTORCONTROL.C: 67: pidParams2.pidoutput2=0;
  8072  1716  30E0               	movlw	224
  8073  1717  0086               	movwf	6
  8074  1718  3023               	movlw	35
  8075  1719  0087               	movwf	7
  8076  171A  3000               	movlw	0
  8077  171B  3FC0               	movwi [0]fsr1
  8078  171C  3FC1               	movwi [1]fsr1
  8079  171D  3FC2               	movwi [2]fsr1
  8080  171E  3FC3               	movwi [3]fsr1
  8081  171F  2F64               	goto	l536
  8082  1720                     l4324:	
  8083                           
  8084                           ;MOTORCONTROL.C: 68: else if(pidParams2.pidoutput2>pidParams2.outmax2)
  8085  1720  30E0               	movlw	224
  8086  1721  0086               	movwf	6
  8087  1722  3023               	movlw	35
  8088  1723  0087               	movwf	7
  8089  1724  3F40               	moviw [0]fsr1
  8090  1725  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8091  1726  3F41               	moviw [1]fsr1
  8092  1727  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8093  1728  3F42               	moviw [2]fsr1
  8094  1729  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8095  172A  3F43               	moviw [3]fsr1
  8096  172B  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8097  172C  30C4               	movlw	196
  8098  172D  0086               	movwf	6
  8099  172E  3023               	movlw	35
  8100  172F  0087               	movwf	7
  8101  1730  3F40               	moviw [0]fsr1
  8102  1731  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  8103  1732  3F41               	moviw [1]fsr1
  8104  1733  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  8105  1734  3F42               	moviw [2]fsr1
  8106  1735  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  8107  1736  3F43               	moviw [3]fsr1
  8108  1737  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  8109  1738  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  8110  1739  3A80               	xorlw	128
  8111  173A  00E3               	movwf	(??_Adaptive_base_pid+8)^(0+128)
  8112  173B  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8113  173C  3A80               	xorlw	128
  8114  173D  0263               	subwf	(??_Adaptive_base_pid+8)^(0+128),w
  8115  173E  1D03               	skipz
  8116  173F  2F4A               	goto	u5873
  8117  1740  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8118  1741  0261               	subwf	(??_Adaptive_base_pid+6)^(0+128),w
  8119  1742  1D03               	skipz
  8120  1743  2F4A               	goto	u5873
  8121  1744  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8122  1745  0260               	subwf	(??_Adaptive_base_pid+5)^(0+128),w
  8123  1746  1D03               	skipz
  8124  1747  2F4A               	goto	u5873
  8125  1748  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8126  1749  025F               	subwf	(??_Adaptive_base_pid+4)^(0+128),w
  8127  174A                     u5873:	
  8128  174A  1803               	skipnc
  8129  174B  2F64               	goto	l536
  8130                           
  8131                           ;MOTORCONTROL.C: 69: pidParams2.pidoutput2=pidParams2.outmax2;
  8132  174C  30C4               	movlw	196
  8133  174D  0086               	movwf	6
  8134  174E  3023               	movlw	35
  8135  174F  0087               	movwf	7
  8136  1750  3F40               	moviw [0]fsr1
  8137  1751  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8138  1752  3F41               	moviw [1]fsr1
  8139  1753  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8140  1754  3F42               	moviw [2]fsr1
  8141  1755  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8142  1756  3F43               	moviw [3]fsr1
  8143  1757  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8144  1758  30E0               	movlw	224
  8145  1759  0086               	movwf	6
  8146  175A  3023               	movlw	35
  8147  175B  0087               	movwf	7
  8148  175C  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8149  175D  3FC0               	movwi [0]fsr1
  8150  175E  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8151  175F  3FC1               	movwi [1]fsr1
  8152  1760  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8153  1761  3FC2               	movwi [2]fsr1
  8154  1762  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8155  1763  3FC3               	movwi [3]fsr1
  8156  1764                     l536:	
  8157                           
  8158                           ;MOTORCONTROL.C: 73: disp4term=pidParams2.pidoutput2;
  8159  1764  30E0               	movlw	224
  8160  1765  0086               	movwf	6
  8161  1766  3023               	movlw	35
  8162  1767  0087               	movwf	7
  8163  1768  3F40               	moviw [0]fsr1
  8164  1769  0024               	movlb	4	; select bank4
  8165  176A  00B8               	movwf	_disp4term^(0+512)
  8166  176B  3F41               	moviw [1]fsr1
  8167  176C  00B9               	movwf	(_disp4term+1)^(0+512)
  8168                           
  8169                           ;MOTORCONTROL.C: 74: scaled_baseval2=(pidParams2.pidoutput2/scalefactor2);
  8170  176D  0023               	movlb	3	; select bank3
  8171  176E  086C               	movf	_scalefactor2^(0+384),w
  8172  176F  0021               	movlb	1	; select bank1
  8173  1770  00A0               	movwf	___aldiv@divisor^(0+128)
  8174  1771  0023               	movlb	3	; select bank3
  8175  1772  086D               	movf	(_scalefactor2+1)^(0+384),w
  8176  1773  0021               	movlb	1	; select bank1
  8177  1774  00A1               	movwf	(___aldiv@divisor^(0+128)+1)
  8178  1775  01A2               	clrf	(___aldiv@divisor^(0+128)+2)
  8179  1776  01A3               	clrf	(___aldiv@divisor^(0+128)+3)
  8180  1777  30E0               	movlw	224
  8181  1778  0086               	movwf	6
  8182  1779  3023               	movlw	35
  8183  177A  0087               	movwf	7
  8184  177B  3F40               	moviw [0]fsr1
  8185  177C  00A4               	movwf	___aldiv@dividend^(0+128)
  8186  177D  3F41               	moviw [1]fsr1
  8187  177E  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  8188  177F  3F42               	moviw [2]fsr1
  8189  1780  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  8190  1781  3F43               	moviw [3]fsr1
  8191  1782  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  8192  1783  319E  2670  3194   	fcall	___aldiv
  8193  1786  0021               	movlb	1	; select bank1
  8194  1787  0821               	movf	(?___aldiv^(0+128)+1),w
  8195  1788  0022               	movlb	2	; select bank2
  8196  1789  01A7               	clrf	(_scaled_baseval2+1)^(0+256)
  8197  178A  07A7               	addwf	(_scaled_baseval2+1)^(0+256),f
  8198  178B  0021               	movlb	1	; select bank1
  8199  178C  0820               	movf	?___aldiv^(0+128),w
  8200  178D  0022               	movlb	2	; select bank2
  8201  178E  01A6               	clrf	_scaled_baseval2^(0+256)
  8202  178F  07A6               	addwf	_scaled_baseval2^(0+256),f
  8203                           
  8204                           ;MOTORCONTROL.C: 76: if(scaled_baseval2>maxfmspeed)
  8205  1790  0827               	movf	(_scaled_baseval2+1)^(0+256),w
  8206  1791  0023               	movlb	3	; select bank3
  8207  1792  0267               	subwf	(_maxfmspeed+1)^(0+384),w
  8208  1793  1D03               	skipz
  8209  1794  2F99               	goto	u5885
  8210  1795  0022               	movlb	2	; select bank2
  8211  1796  0826               	movf	_scaled_baseval2^(0+256),w
  8212  1797  0023               	movlb	3	; select bank3
  8213  1798  0266               	subwf	_maxfmspeed^(0+384),w
  8214  1799                     u5885:	
  8215  1799  1803               	skipnc
  8216  179A  2FA2               	goto	l4334
  8217                           
  8218                           ;MOTORCONTROL.C: 77: {
  8219                           ;MOTORCONTROL.C: 78: scaled_baseval2=maxfmspeed;
  8220  179B  0867               	movf	(_maxfmspeed+1)^(0+384),w
  8221  179C  0022               	movlb	2	; select bank2
  8222  179D  01A7               	clrf	(_scaled_baseval2+1)^(0+256)
  8223  179E  07A7               	addwf	(_scaled_baseval2+1)^(0+256),f
  8224  179F  0023               	movlb	3	; select bank3
  8225  17A0  0866               	movf	_maxfmspeed^(0+384),w
  8226  17A1  2FB5               	goto	L19
  8227  17A2                     l4334:	
  8228                           ;MOTORCONTROL.C: 79: }
  8229                           
  8230                           
  8231                           ;MOTORCONTROL.C: 80: else if(scaled_baseval2<minfmspeed)
  8232  17A2  0023               	movlb	3	; select bank3
  8233  17A3  0869               	movf	(_minfmspeed+1)^(0+384),w
  8234  17A4  0022               	movlb	2	; select bank2
  8235  17A5  0227               	subwf	(_scaled_baseval2+1)^(0+256),w
  8236  17A6  1D03               	skipz
  8237  17A7  2FAC               	goto	u5895
  8238  17A8  0023               	movlb	3	; select bank3
  8239  17A9  0868               	movf	_minfmspeed^(0+384),w
  8240  17AA  0022               	movlb	2	; select bank2
  8241  17AB  0226               	subwf	_scaled_baseval2^(0+256),w
  8242  17AC                     u5895:	
  8243  17AC  1803               	skipnc
  8244  17AD  2FB8               	goto	l4338
  8245                           
  8246                           ;MOTORCONTROL.C: 81: {
  8247                           ;MOTORCONTROL.C: 82: scaled_baseval2=minfmspeed;
  8248  17AE  0023               	movlb	3	; select bank3
  8249  17AF  0869               	movf	(_minfmspeed+1)^(0+384),w
  8250  17B0  0022               	movlb	2	; select bank2
  8251  17B1  01A7               	clrf	(_scaled_baseval2+1)^(0+256)
  8252  17B2  07A7               	addwf	(_scaled_baseval2+1)^(0+256),f
  8253  17B3  0023               	movlb	3	; select bank3
  8254  17B4  0868               	movf	_minfmspeed^(0+384),w
  8255  17B5                     L19:	
  8256  17B5  0022               	movlb	2	; select bank2
  8257  17B6  01A6               	clrf	_scaled_baseval2^(0+256)
  8258  17B7  07A6               	addwf	_scaled_baseval2^(0+256),f
  8259  17B8                     l4338:	
  8260                           
  8261                           ;MOTORCONTROL.C: 83: }
  8262                           ;MOTORCONTROL.C: 84: if(cyclestrtf==1 && closeloopf==1)
  8263  17B8  083C               	movf	_cyclestrtf^(0+256),w
  8264  17B9  3A01               	xorlw	1
  8265  17BA  1D03               	skipz
  8266  17BB  2FC8               	goto	l4344
  8267  17BC  0836               	movf	_closeloopf^(0+256),w
  8268  17BD  3A01               	xorlw	1
  8269  17BE  1D03               	skipz
  8270  17BF  2FC8               	goto	l4344
  8271                           
  8272                           ;MOTORCONTROL.C: 85: {
  8273                           ;MOTORCONTROL.C: 86: Update_PWM(scaled_baseval2);
  8274  17C0  0827               	movf	(_scaled_baseval2+1)^(0+256),w
  8275  17C1  0021               	movlb	1	; select bank1
  8276  17C2  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  8277  17C3  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  8278  17C4  0022               	movlb	2	; select bank2
  8279  17C5  0826               	movf	_scaled_baseval2^(0+256),w
  8280  17C6  0021               	movlb	1	; select bank1
  8281  17C7  2FE1               	goto	L20
  8282  17C8                     l4344:	
  8283                           ;MOTORCONTROL.C: 88: }
  8284                           
  8285                           
  8286                           ;MOTORCONTROL.C: 89: else if(cyclestrtf==0)
  8287  17C8  0022               	movlb	2	; select bank2
  8288  17C9  08BC               	movf	_cyclestrtf^(0+256),f
  8289  17CA  1D03               	skipz
  8290  17CB  2FE5               	goto	l4348
  8291                           
  8292                           ;MOTORCONTROL.C: 90: {
  8293                           ;MOTORCONTROL.C: 91: Update_PWM(scaled_baseval2*0);
  8294  17CC  0827               	movf	(_scaled_baseval2+1)^(0+256),w
  8295  17CD  0021               	movlb	1	; select bank1
  8296  17CE  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  8297  17CF  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  8298  17D0  0022               	movlb	2	; select bank2
  8299  17D1  0826               	movf	_scaled_baseval2^(0+256),w
  8300  17D2  0021               	movlb	1	; select bank1
  8301  17D3  01A0               	clrf	___wmul@multiplier^(0+128)
  8302  17D4  07A0               	addwf	___wmul@multiplier^(0+128),f
  8303  17D5  3000               	movlw	0
  8304  17D6  00A2               	movwf	___wmul@multiplicand^(0+128)
  8305  17D7  3000               	movlw	0
  8306  17D8  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  8307  17D9  3199  216B  3194   	fcall	___wmul
  8308  17DC  0021               	movlb	1	; select bank1
  8309  17DD  0821               	movf	(?___wmul+1)^(0+128),w
  8310  17DE  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  8311  17DF  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  8312  17E0  0820               	movf	?___wmul^(0+128),w
  8313  17E1                     L20:	
  8314  17E1  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  8315  17E2  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  8316  17E3  3199  2189         	fcall	_Update_PWM
  8317  17E5                     l4348:	
  8318                           
  8319                           ;MOTORCONTROL.C: 92: }
  8320                           ;MOTORCONTROL.C: 93: }
  8321                           ;MOTORCONTROL.C: 94: pidParams2.previous_error2 = pidParams2.error2;
  8322  17E5  309A               	movlw	154
  8323  17E6  0086               	movwf	6
  8324  17E7  3023               	movlw	35
  8325  17E8  0087               	movwf	7
  8326  17E9  314C               	addfsr 1,12
  8327  17EA  3F40               	moviw [0]fsr1
  8328  17EB  0021               	movlb	1	; select bank1
  8329  17EC  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8330  17ED  3F41               	moviw [1]fsr1
  8331  17EE  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8332  17EF  3F42               	moviw [2]fsr1
  8333  17F0  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8334  17F1  3F43               	moviw [3]fsr1
  8335  17F2  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8336  17F3  30D8               	movlw	216
  8337  17F4  0086               	movwf	6
  8338  17F5  3023               	movlw	35
  8339  17F6  0087               	movwf	7
  8340  17F7  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8341  17F8  3FC0               	movwi [0]fsr1
  8342  17F9  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8343  17FA  3FC1               	movwi [1]fsr1
  8344  17FB  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8345  17FC  3FC2               	movwi [2]fsr1
  8346  17FD  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8347  17FE  3FC3               	movwi [3]fsr1
  8348  17FF  0008               	return
  8349  1800                     __end_of_Adaptive_base_pid:	
  8350                           
  8351                           	psect	text23
  8352  196B                     __ptext23:	
  8353 ;; *************** function ___wmul *****************
  8354 ;; Defined at:
  8355 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  multiplier      2    0[BANK1 ] unsigned int 
  8358 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;  product         2    4[BANK1 ] unsigned int 
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  2    0[BANK1 ] unsigned int 
  8363 ;; Registers used:
  8364 ;;		wreg, status,2, status,0
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8370 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8373 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8374 ;;Total ram usage:        6 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:    3
  8377 ;; This function calls:
  8378 ;;		Nothing
  8379 ;; This function is called by:
  8380 ;;		_Adaptive_base_pid
  8381 ;;		_main
  8382 ;;		_key_application
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           
  8387                           ;psect for function ___wmul
  8388  196B                     ___wmul:	
  8389                           
  8390                           ;incstack = 0
  8391                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8392  196B  0021               	movlb	1	; select bank1
  8393  196C  01A4               	clrf	___wmul@product^(0+128)
  8394  196D  01A5               	clrf	(___wmul@product+1)^(0+128)
  8395  196E                     l3682:	
  8396  196E  1C20               	btfss	___wmul@multiplier^(0+128),0
  8397  196F  2974               	goto	l911
  8398  1970  0822               	movf	___wmul@multiplicand^(0+128),w
  8399  1971  07A4               	addwf	___wmul@product^(0+128),f
  8400  1972  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  8401  1973  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  8402  1974                     l911:	
  8403  1974  3001               	movlw	1
  8404  1975                     u4495:	
  8405  1975  35A2               	lslf	___wmul@multiplicand^(0+128),f
  8406  1976  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  8407  1977  0B89               	decfsz	9,f
  8408  1978  2975               	goto	u4495
  8409  1979  3001               	movlw	1
  8410  197A                     u4505:	
  8411  197A  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  8412  197B  0CA0               	rrf	___wmul@multiplier^(0+128),f
  8413  197C  0B89               	decfsz	9,f
  8414  197D  297A               	goto	u4505
  8415  197E  0821               	movf	(___wmul@multiplier+1)^(0+128),w
  8416  197F  0420               	iorwf	___wmul@multiplier^(0+128),w
  8417  1980  1D03               	skipz
  8418  1981  296E               	goto	l3682
  8419  1982  0825               	movf	(___wmul@product+1)^(0+128),w
  8420  1983  01A1               	clrf	(?___wmul+1)^(0+128)
  8421  1984  07A1               	addwf	(?___wmul+1)^(0+128),f
  8422  1985  0824               	movf	___wmul@product^(0+128),w
  8423  1986  01A0               	clrf	?___wmul^(0+128)
  8424  1987  07A0               	addwf	?___wmul^(0+128),f
  8425  1988  0008               	return
  8426  1989                     __end_of___wmul:	
  8427                           
  8428                           	psect	text24
  8429  1F79                     __ptext24:	
  8430 ;; *************** function ___fttol *****************
  8431 ;; Defined at:
  8432 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;  f1              3   37[BANK1 ] float 
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;  lval            4   46[BANK1 ] unsigned long 
  8437 ;;  exp1            1   50[BANK1 ] unsigned char 
  8438 ;;  sign1           1   45[BANK1 ] unsigned char 
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  4   37[BANK1 ] long 
  8441 ;; Registers used:
  8442 ;;		wreg, status,2, status,0
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8448 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8449 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8450 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8451 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;Total ram usage:       14 bytes
  8453 ;; Hardware stack levels used:    1
  8454 ;; Hardware stack levels required when called:    3
  8455 ;; This function calls:
  8456 ;;		Nothing
  8457 ;; This function is called by:
  8458 ;;		_Adaptive_base_pid
  8459 ;;		_main
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           
  8464                           ;psect for function ___fttol
  8465  1F79                     ___fttol:	
  8466                           
  8467                           ;incstack = 0
  8468                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8469  1F79  0021               	movlb	1	; select bank1
  8470  1F7A  0845               	movf	___fttol@f1^(0+128),w
  8471  1F7B  00C9               	movwf	??___fttol^(0+128)
  8472  1F7C  0846               	movf	(___fttol@f1+1)^(0+128),w
  8473  1F7D  00CA               	movwf	(??___fttol^(0+128)+1)
  8474  1F7E  0847               	movf	(___fttol@f1+2)^(0+128),w
  8475  1F7F  00CB               	movwf	(??___fttol^(0+128)+2)
  8476  1F80  1003               	clrc
  8477  1F81  0D4A               	rlf	(??___fttol^(0+128)+1),w
  8478  1F82  0D4B               	rlf	(??___fttol^(0+128)+2),w
  8479  1F83  00CC               	movwf	(??___fttol+3)^(0+128)
  8480  1F84  084C               	movf	(??___fttol+3)^(0+128),w
  8481  1F85  00D2               	movwf	___fttol@exp1^(0+128)
  8482  1F86  08D2               	movf	___fttol@exp1^(0+128),f
  8483  1F87  1D03               	skipz
  8484  1F88  2F92               	goto	l3946
  8485  1F89  3000               	movlw	0
  8486  1F8A  00C8               	movwf	(?___fttol+3)^(0+128)
  8487  1F8B  3000               	movlw	0
  8488  1F8C  00C7               	movwf	(?___fttol+2)^(0+128)
  8489  1F8D  3000               	movlw	0
  8490  1F8E  00C6               	movwf	(?___fttol+1)^(0+128)
  8491  1F8F  3000               	movlw	0
  8492  1F90  00C5               	movwf	?___fttol^(0+128)
  8493  1F91  0008               	return
  8494  1F92                     l3946:	
  8495  1F92  0845               	movf	___fttol@f1^(0+128),w
  8496  1F93  00C9               	movwf	??___fttol^(0+128)
  8497  1F94  0846               	movf	(___fttol@f1+1)^(0+128),w
  8498  1F95  00CA               	movwf	(??___fttol^(0+128)+1)
  8499  1F96  0847               	movf	(___fttol@f1+2)^(0+128),w
  8500  1F97  00CB               	movwf	(??___fttol^(0+128)+2)
  8501  1F98  3017               	movlw	23
  8502  1F99                     u5135:	
  8503  1F99  36CB               	lsrf	(??___fttol^(0+128)+2),f
  8504  1F9A  0CCA               	rrf	(??___fttol^(0+128)+1),f
  8505  1F9B  0CC9               	rrf	??___fttol^(0+128),f
  8506  1F9C  0B89               	decfsz	9,f
  8507  1F9D  2F99               	goto	u5135
  8508  1F9E  0849               	movf	??___fttol^(0+128),w
  8509  1F9F  00CC               	movwf	(??___fttol+3)^(0+128)
  8510  1FA0  084C               	movf	(??___fttol+3)^(0+128),w
  8511  1FA1  00CD               	movwf	___fttol@sign1^(0+128)
  8512  1FA2  17C6               	bsf	(___fttol@f1^(0+128)+1),7
  8513  1FA3  30FF               	movlw	255
  8514  1FA4  05C5               	andwf	___fttol@f1^(0+128),f
  8515  1FA5  30FF               	movlw	255
  8516  1FA6  05C6               	andwf	(___fttol@f1+1)^(0+128),f
  8517  1FA7  3000               	movlw	0
  8518  1FA8  05C7               	andwf	(___fttol@f1+2)^(0+128),f
  8519  1FA9  0845               	movf	___fttol@f1^(0+128),w
  8520  1FAA  00CE               	movwf	___fttol@lval^(0+128)
  8521  1FAB  0846               	movf	(___fttol@f1+1)^(0+128),w
  8522  1FAC  00CF               	movwf	(___fttol@lval^(0+128)+1)
  8523  1FAD  0847               	movf	(___fttol@f1+2)^(0+128),w
  8524  1FAE  00D0               	movwf	(___fttol@lval^(0+128)+2)
  8525  1FAF  01D1               	clrf	(___fttol@lval^(0+128)+3)
  8526  1FB0  308E               	movlw	142
  8527  1FB1  02D2               	subwf	___fttol@exp1^(0+128),f
  8528  1FB2  1FD2               	btfss	___fttol@exp1^(0+128),7
  8529  1FB3  2FD0               	goto	l3966
  8530  1FB4  0852               	movf	___fttol@exp1^(0+128),w
  8531  1FB5  3A80               	xorlw	128
  8532  1FB6  3E8F               	addlw	143
  8533  1FB7  1803               	skipnc
  8534  1FB8  2FC2               	goto	l3964
  8535  1FB9  3000               	movlw	0
  8536  1FBA  00C8               	movwf	(?___fttol+3)^(0+128)
  8537  1FBB  3000               	movlw	0
  8538  1FBC  00C7               	movwf	(?___fttol+2)^(0+128)
  8539  1FBD  3000               	movlw	0
  8540  1FBE  00C6               	movwf	(?___fttol+1)^(0+128)
  8541  1FBF  3000               	movlw	0
  8542  1FC0  00C5               	movwf	?___fttol^(0+128)
  8543  1FC1  0008               	return
  8544  1FC2                     l3964:	
  8545  1FC2  3001               	movlw	1
  8546  1FC3                     u5165:	
  8547  1FC3  36D1               	lsrf	(___fttol@lval+3)^(0+128),f
  8548  1FC4  0CD0               	rrf	(___fttol@lval+2)^(0+128),f
  8549  1FC5  0CCF               	rrf	(___fttol@lval+1)^(0+128),f
  8550  1FC6  0CCE               	rrf	___fttol@lval^(0+128),f
  8551  1FC7  0B89               	decfsz	9,f
  8552  1FC8  2FC3               	goto	u5165
  8553  1FC9  3001               	movlw	1
  8554  1FCA  00C9               	movwf	??___fttol^(0+128)
  8555  1FCB  0849               	movf	??___fttol^(0+128),w
  8556  1FCC  07D2               	addwf	___fttol@exp1^(0+128),f
  8557  1FCD  1903               	btfsc	3,2
  8558  1FCE  2FE9               	goto	l3976
  8559  1FCF  2FC2               	goto	l3964
  8560  1FD0                     l3966:	
  8561  1FD0  3018               	movlw	24
  8562  1FD1  0252               	subwf	___fttol@exp1^(0+128),w
  8563  1FD2  1C03               	skipc
  8564  1FD3  2FE6               	goto	l3974
  8565  1FD4  3000               	movlw	0
  8566  1FD5  00C8               	movwf	(?___fttol+3)^(0+128)
  8567  1FD6  3000               	movlw	0
  8568  1FD7  00C7               	movwf	(?___fttol+2)^(0+128)
  8569  1FD8  3000               	movlw	0
  8570  1FD9  00C6               	movwf	(?___fttol+1)^(0+128)
  8571  1FDA  3000               	movlw	0
  8572  1FDB  00C5               	movwf	?___fttol^(0+128)
  8573  1FDC  0008               	return
  8574  1FDD                     l3972:	
  8575  1FDD  3001               	movlw	1
  8576  1FDE                     u5195:	
  8577  1FDE  35CE               	lslf	___fttol@lval^(0+128),f
  8578  1FDF  0DCF               	rlf	(___fttol@lval+1)^(0+128),f
  8579  1FE0  0DD0               	rlf	(___fttol@lval+2)^(0+128),f
  8580  1FE1  0DD1               	rlf	(___fttol@lval+3)^(0+128),f
  8581  1FE2  0B89               	decfsz	9,f
  8582  1FE3  2FDE               	goto	u5195
  8583  1FE4  3001               	movlw	1
  8584  1FE5  02D2               	subwf	___fttol@exp1^(0+128),f
  8585  1FE6                     l3974:	
  8586  1FE6  08D2               	movf	___fttol@exp1^(0+128),f
  8587  1FE7  1D03               	skipz
  8588  1FE8  2FDD               	goto	l3972
  8589  1FE9                     l3976:	
  8590  1FE9  084D               	movf	___fttol@sign1^(0+128),w
  8591  1FEA  1903               	btfsc	3,2
  8592  1FEB  2FF7               	goto	l3980
  8593  1FEC  09CE               	comf	___fttol@lval^(0+128),f
  8594  1FED  09CF               	comf	(___fttol@lval+1)^(0+128),f
  8595  1FEE  09D0               	comf	(___fttol@lval+2)^(0+128),f
  8596  1FEF  09D1               	comf	(___fttol@lval+3)^(0+128),f
  8597  1FF0  0ACE               	incf	___fttol@lval^(0+128),f
  8598  1FF1  1903               	skipnz
  8599  1FF2  0ACF               	incf	(___fttol@lval+1)^(0+128),f
  8600  1FF3  1903               	skipnz
  8601  1FF4  0AD0               	incf	(___fttol@lval+2)^(0+128),f
  8602  1FF5  1903               	skipnz
  8603  1FF6  0AD1               	incf	(___fttol@lval+3)^(0+128),f
  8604  1FF7                     l3980:	
  8605  1FF7  0851               	movf	(___fttol@lval+3)^(0+128),w
  8606  1FF8  00C8               	movwf	(?___fttol+3)^(0+128)
  8607  1FF9  0850               	movf	(___fttol@lval+2)^(0+128),w
  8608  1FFA  00C7               	movwf	(?___fttol+2)^(0+128)
  8609  1FFB  084F               	movf	(___fttol@lval+1)^(0+128),w
  8610  1FFC  00C6               	movwf	(?___fttol+1)^(0+128)
  8611  1FFD  084E               	movf	___fttol@lval^(0+128),w
  8612  1FFE  00C5               	movwf	?___fttol^(0+128)
  8613  1FFF  0008               	return
  8614  2000                     __end_of___fttol:	
  8615                           
  8616                           	psect	text25
  8617  1891                     __ptext25:	
  8618 ;; *************** function ___ftneg *****************
  8619 ;; Defined at:
  8620 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;  f1              3    0[BANK1 ] float 
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;		None
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  3    0[BANK1 ] float 
  8627 ;; Registers used:
  8628 ;;		wreg
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8634 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8637 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8638 ;;Total ram usage:        3 bytes
  8639 ;; Hardware stack levels used:    1
  8640 ;; Hardware stack levels required when called:    3
  8641 ;; This function calls:
  8642 ;;		Nothing
  8643 ;; This function is called by:
  8644 ;;		_Adaptive_base_pid
  8645 ;; This function uses a non-reentrant model
  8646 ;;
  8647                           
  8648                           
  8649                           ;psect for function ___ftneg
  8650  1891                     ___ftneg:	
  8651                           
  8652                           ;incstack = 0
  8653                           ; Regs used in ___ftneg: [wreg]
  8654  1891  0021               	movlb	1	; select bank1
  8655  1892  0822               	movf	(___ftneg@f1+2)^(0+128),w
  8656  1893  0421               	iorwf	(___ftneg@f1+1)^(0+128),w
  8657  1894  0420               	iorwf	___ftneg@f1^(0+128),w
  8658  1895  1903               	skipnz
  8659  1896  0008               	return
  8660  1897  3080               	movlw	128
  8661  1898  06A2               	xorwf	(___ftneg@f1+2)^(0+128),f
  8662  1899  0008               	return
  8663  189A                     __end_of___ftneg:	
  8664                           
  8665                           	psect	text26
  8666  12E3                     __ptext26:	
  8667 ;; *************** function ___ftmul *****************
  8668 ;; Defined at:
  8669 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  f1              3   21[BANK1 ] float 
  8672 ;;  f2              3   24[BANK1 ] float 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  f3_as_produc    3   32[BANK1 ] unsigned um
  8675 ;;  sign            1   36[BANK1 ] unsigned char 
  8676 ;;  cntr            1   35[BANK1 ] unsigned char 
  8677 ;;  exp             1   31[BANK1 ] unsigned char 
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  3   21[BANK1 ] float 
  8680 ;; Registers used:
  8681 ;;		wreg, status,2, status,0, pclath, cstack
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8687 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8688 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8690 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8691 ;;Total ram usage:       16 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:    4
  8694 ;; This function calls:
  8695 ;;		___ftpack
  8696 ;; This function is called by:
  8697 ;;		_Adaptive_base_pid
  8698 ;;		_main
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           
  8703                           ;psect for function ___ftmul
  8704  12E3                     ___ftmul:	
  8705                           
  8706                           ;incstack = 0
  8707                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8708  12E3  0021               	movlb	1	; select bank1
  8709  12E4  0835               	movf	___ftmul@f1^(0+128),w
  8710  12E5  00BB               	movwf	??___ftmul^(0+128)
  8711  12E6  0836               	movf	(___ftmul@f1+1)^(0+128),w
  8712  12E7  00BC               	movwf	(??___ftmul^(0+128)+1)
  8713  12E8  0837               	movf	(___ftmul@f1+2)^(0+128),w
  8714  12E9  00BD               	movwf	(??___ftmul^(0+128)+2)
  8715  12EA  1003               	clrc
  8716  12EB  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  8717  12EC  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  8718  12ED  00BE               	movwf	(??___ftmul+3)^(0+128)
  8719  12EE  083E               	movf	(??___ftmul+3)^(0+128),w
  8720  12EF  00BF               	movwf	___ftmul@exp^(0+128)
  8721  12F0  08BF               	movf	___ftmul@exp^(0+128),f
  8722  12F1  1D03               	skipz
  8723  12F2  2AFA               	goto	l3888
  8724  12F3  3000               	movlw	0
  8725  12F4  00B5               	movwf	?___ftmul^(0+128)
  8726  12F5  3000               	movlw	0
  8727  12F6  00B6               	movwf	(?___ftmul+1)^(0+128)
  8728  12F7  3000               	movlw	0
  8729  12F8  00B7               	movwf	(?___ftmul+2)^(0+128)
  8730  12F9  0008               	return
  8731  12FA                     l3888:	
  8732  12FA  0838               	movf	___ftmul@f2^(0+128),w
  8733  12FB  00BB               	movwf	??___ftmul^(0+128)
  8734  12FC  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8735  12FD  00BC               	movwf	(??___ftmul^(0+128)+1)
  8736  12FE  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8737  12FF  00BD               	movwf	(??___ftmul^(0+128)+2)
  8738  1300  1003               	clrc
  8739  1301  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  8740  1302  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  8741  1303  00BE               	movwf	(??___ftmul+3)^(0+128)
  8742  1304  083E               	movf	(??___ftmul+3)^(0+128),w
  8743  1305  00C4               	movwf	___ftmul@sign^(0+128)
  8744  1306  08C4               	movf	___ftmul@sign^(0+128),f
  8745  1307  1D03               	skipz
  8746  1308  2B10               	goto	l3894
  8747  1309  3000               	movlw	0
  8748  130A  00B5               	movwf	?___ftmul^(0+128)
  8749  130B  3000               	movlw	0
  8750  130C  00B6               	movwf	(?___ftmul+1)^(0+128)
  8751  130D  3000               	movlw	0
  8752  130E  00B7               	movwf	(?___ftmul+2)^(0+128)
  8753  130F  0008               	return
  8754  1310                     l3894:	
  8755  1310  0844               	movf	___ftmul@sign^(0+128),w
  8756  1311  3E7B               	addlw	123
  8757  1312  00BB               	movwf	??___ftmul^(0+128)
  8758  1313  083B               	movf	??___ftmul^(0+128),w
  8759  1314  07BF               	addwf	___ftmul@exp^(0+128),f
  8760  1315  0835               	movf	___ftmul@f1^(0+128),w
  8761  1316  00BB               	movwf	??___ftmul^(0+128)
  8762  1317  0836               	movf	(___ftmul@f1+1)^(0+128),w
  8763  1318  00BC               	movwf	(??___ftmul^(0+128)+1)
  8764  1319  0837               	movf	(___ftmul@f1+2)^(0+128),w
  8765  131A  00BD               	movwf	(??___ftmul^(0+128)+2)
  8766  131B  3010               	movlw	16
  8767  131C                     u5015:	
  8768  131C  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  8769  131D  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  8770  131E  0CBB               	rrf	??___ftmul^(0+128),f
  8771  131F  0B89               	decfsz	9,f
  8772  1320  2B1C               	goto	u5015
  8773  1321  083B               	movf	??___ftmul^(0+128),w
  8774  1322  00BE               	movwf	(??___ftmul+3)^(0+128)
  8775  1323  083E               	movf	(??___ftmul+3)^(0+128),w
  8776  1324  00C4               	movwf	___ftmul@sign^(0+128)
  8777  1325  0838               	movf	___ftmul@f2^(0+128),w
  8778  1326  00BB               	movwf	??___ftmul^(0+128)
  8779  1327  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8780  1328  00BC               	movwf	(??___ftmul^(0+128)+1)
  8781  1329  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8782  132A  00BD               	movwf	(??___ftmul^(0+128)+2)
  8783  132B  3010               	movlw	16
  8784  132C                     u5025:	
  8785  132C  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  8786  132D  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  8787  132E  0CBB               	rrf	??___ftmul^(0+128),f
  8788  132F  0B89               	decfsz	9,f
  8789  1330  2B2C               	goto	u5025
  8790  1331  083B               	movf	??___ftmul^(0+128),w
  8791  1332  00BE               	movwf	(??___ftmul+3)^(0+128)
  8792  1333  083E               	movf	(??___ftmul+3)^(0+128),w
  8793  1334  06C4               	xorwf	___ftmul@sign^(0+128),f
  8794  1335  3080               	movlw	128
  8795  1336  00BB               	movwf	??___ftmul^(0+128)
  8796  1337  083B               	movf	??___ftmul^(0+128),w
  8797  1338  05C4               	andwf	___ftmul@sign^(0+128),f
  8798  1339  17B6               	bsf	(___ftmul@f1^(0+128)+1),7
  8799  133A  17B9               	bsf	(___ftmul@f2^(0+128)+1),7
  8800  133B  30FF               	movlw	255
  8801  133C  05B8               	andwf	___ftmul@f2^(0+128),f
  8802  133D  30FF               	movlw	255
  8803  133E  05B9               	andwf	(___ftmul@f2+1)^(0+128),f
  8804  133F  3000               	movlw	0
  8805  1340  05BA               	andwf	(___ftmul@f2+2)^(0+128),f
  8806  1341  3000               	movlw	0
  8807  1342  00C0               	movwf	___ftmul@f3_as_product^(0+128)
  8808  1343  3000               	movlw	0
  8809  1344  00C1               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  8810  1345  3000               	movlw	0
  8811  1346  00C2               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  8812  1347  3007               	movlw	7
  8813  1348  00BB               	movwf	??___ftmul^(0+128)
  8814  1349  083B               	movf	??___ftmul^(0+128),w
  8815  134A  00C3               	movwf	___ftmul@cntr^(0+128)
  8816  134B                     l3906:	
  8817  134B  1C35               	btfss	___ftmul@f1^(0+128),0
  8818  134C  2B53               	goto	l3910
  8819  134D  0838               	movf	___ftmul@f2^(0+128),w
  8820  134E  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  8821  134F  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8822  1350  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8823  1351  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8824  1352  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8825  1353                     l3910:	
  8826  1353  3001               	movlw	1
  8827  1354                     u5045:	
  8828  1354  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  8829  1355  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  8830  1356  0CB5               	rrf	___ftmul@f1^(0+128),f
  8831  1357  0B89               	decfsz	9,f
  8832  1358  2B54               	goto	u5045
  8833  1359  3001               	movlw	1
  8834  135A                     u5055:	
  8835  135A  35B8               	lslf	___ftmul@f2^(0+128),f
  8836  135B  0DB9               	rlf	(___ftmul@f2+1)^(0+128),f
  8837  135C  0DBA               	rlf	(___ftmul@f2+2)^(0+128),f
  8838  135D  0B89               	decfsz	9,f
  8839  135E  2B5A               	goto	u5055
  8840  135F  3001               	movlw	1
  8841  1360  02C3               	subwf	___ftmul@cntr^(0+128),f
  8842  1361  1D03               	btfss	3,2
  8843  1362  2B4B               	goto	l3906
  8844  1363  3009               	movlw	9
  8845  1364  00BB               	movwf	??___ftmul^(0+128)
  8846  1365  083B               	movf	??___ftmul^(0+128),w
  8847  1366  00C3               	movwf	___ftmul@cntr^(0+128)
  8848  1367                     l3918:	
  8849  1367  1C35               	btfss	___ftmul@f1^(0+128),0
  8850  1368  2B6F               	goto	l3922
  8851  1369  0838               	movf	___ftmul@f2^(0+128),w
  8852  136A  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  8853  136B  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8854  136C  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8855  136D  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8856  136E  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8857  136F                     l3922:	
  8858  136F  3001               	movlw	1
  8859  1370                     u5085:	
  8860  1370  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  8861  1371  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  8862  1372  0CB5               	rrf	___ftmul@f1^(0+128),f
  8863  1373  0B89               	decfsz	9,f
  8864  1374  2B70               	goto	u5085
  8865  1375  3001               	movlw	1
  8866  1376                     u5095:	
  8867  1376  36C2               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  8868  1377  0CC1               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  8869  1378  0CC0               	rrf	___ftmul@f3_as_product^(0+128),f
  8870  1379  0B89               	decfsz	9,f
  8871  137A  2B76               	goto	u5095
  8872  137B  3001               	movlw	1
  8873  137C  02C3               	subwf	___ftmul@cntr^(0+128),f
  8874  137D  1D03               	btfss	3,2
  8875  137E  2B67               	goto	l3918
  8876  137F  0840               	movf	___ftmul@f3_as_product^(0+128),w
  8877  1380  00A0               	movwf	___ftpack@arg^(0+128)
  8878  1381  0841               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  8879  1382  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  8880  1383  0842               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  8881  1384  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  8882  1385  083F               	movf	___ftmul@exp^(0+128),w
  8883  1386  00BB               	movwf	??___ftmul^(0+128)
  8884  1387  083B               	movf	??___ftmul^(0+128),w
  8885  1388  00A3               	movwf	___ftpack@exp^(0+128)
  8886  1389  0844               	movf	___ftmul@sign^(0+128),w
  8887  138A  00BC               	movwf	(??___ftmul+1)^(0+128)
  8888  138B  083C               	movf	(??___ftmul+1)^(0+128),w
  8889  138C  00A4               	movwf	___ftpack@sign^(0+128)
  8890  138D  319B  23C6         	fcall	___ftpack
  8891  138F  0021               	movlb	1	; select bank1
  8892  1390  0820               	movf	?___ftpack^(0+128),w
  8893  1391  00B5               	movwf	?___ftmul^(0+128)
  8894  1392  0821               	movf	(?___ftpack+1)^(0+128),w
  8895  1393  00B6               	movwf	(?___ftmul+1)^(0+128)
  8896  1394  0822               	movf	(?___ftpack+2)^(0+128),w
  8897  1395  00B7               	movwf	(?___ftmul+2)^(0+128)
  8898  1396  0008               	return
  8899  1397                     __end_of___ftmul:	
  8900                           
  8901                           	psect	text27
  8902  1A0F                     __ptext27:	
  8903 ;; *************** function ___ftge *****************
  8904 ;; Defined at:
  8905 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftge.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;  ff1             3   16[BANK1 ] float 
  8908 ;;  ff2             3   19[BANK1 ] float 
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;		None
  8911 ;; Return value:  Size  Location     Type
  8912 ;;		None               void
  8913 ;; Registers used:
  8914 ;;		wreg, status,2, status,0
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8920 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;Total ram usage:        9 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; Hardware stack levels required when called:    3
  8927 ;; This function calls:
  8928 ;;		Nothing
  8929 ;; This function is called by:
  8930 ;;		_Adaptive_base_pid
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           
  8935                           ;psect for function ___ftge
  8936  1A0F                     ___ftge:	
  8937                           
  8938                           ;incstack = 0
  8939                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8940  1A0F  0021               	movlb	1	; select bank1
  8941  1A10  1FB2               	btfss	(___ftge@ff1+2)^(0+128),7
  8942  1A11  2A26               	goto	l3866
  8943  1A12  0930               	comf	___ftge@ff1^(0+128),w
  8944  1A13  00B6               	movwf	??___ftge^(0+128)
  8945  1A14  0931               	comf	(___ftge@ff1+1)^(0+128),w
  8946  1A15  00B7               	movwf	(??___ftge^(0+128)+1)
  8947  1A16  0932               	comf	(___ftge@ff1+2)^(0+128),w
  8948  1A17  00B8               	movwf	(??___ftge^(0+128)+2)
  8949  1A18  0AB6               	incf	??___ftge^(0+128),f
  8950  1A19  1903               	skipnz
  8951  1A1A  0AB7               	incf	(??___ftge^(0+128)+1),f
  8952  1A1B  1903               	skipnz
  8953  1A1C  0AB8               	incf	(??___ftge^(0+128)+2),f
  8954  1A1D  3000               	movlw	0
  8955  1A1E  0736               	addwf	??___ftge^(0+128),w
  8956  1A1F  00B0               	movwf	___ftge@ff1^(0+128)
  8957  1A20  3000               	movlw	0
  8958  1A21  3D37               	addwfc	(??___ftge+1)^(0+128),w
  8959  1A22  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  8960  1A23  3080               	movlw	128
  8961  1A24  3D38               	addwfc	(??___ftge+2)^(0+128),w
  8962  1A25  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  8963  1A26                     l3866:	
  8964  1A26  1FB5               	btfss	(___ftge@ff2+2)^(0+128),7
  8965  1A27  2A3C               	goto	l3870
  8966  1A28  0933               	comf	___ftge@ff2^(0+128),w
  8967  1A29  00B6               	movwf	??___ftge^(0+128)
  8968  1A2A  0934               	comf	(___ftge@ff2+1)^(0+128),w
  8969  1A2B  00B7               	movwf	(??___ftge^(0+128)+1)
  8970  1A2C  0935               	comf	(___ftge@ff2+2)^(0+128),w
  8971  1A2D  00B8               	movwf	(??___ftge^(0+128)+2)
  8972  1A2E  0AB6               	incf	??___ftge^(0+128),f
  8973  1A2F  1903               	skipnz
  8974  1A30  0AB7               	incf	(??___ftge^(0+128)+1),f
  8975  1A31  1903               	skipnz
  8976  1A32  0AB8               	incf	(??___ftge^(0+128)+2),f
  8977  1A33  3000               	movlw	0
  8978  1A34  0736               	addwf	??___ftge^(0+128),w
  8979  1A35  00B3               	movwf	___ftge@ff2^(0+128)
  8980  1A36  3000               	movlw	0
  8981  1A37  3D37               	addwfc	(??___ftge+1)^(0+128),w
  8982  1A38  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  8983  1A39  3080               	movlw	128
  8984  1A3A  3D38               	addwfc	(??___ftge+2)^(0+128),w
  8985  1A3B  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  8986  1A3C                     l3870:	
  8987  1A3C  3080               	movlw	128
  8988  1A3D  06B2               	xorwf	(___ftge@ff1+2)^(0+128),f
  8989  1A3E  3080               	movlw	128
  8990  1A3F  06B5               	xorwf	(___ftge@ff2+2)^(0+128),f
  8991  1A40  0835               	movf	(___ftge@ff2+2)^(0+128),w
  8992  1A41  0232               	subwf	(___ftge@ff1+2)^(0+128),w
  8993  1A42  1D03               	skipz
  8994  1A43  0008               	return
  8995  1A44  0834               	movf	(___ftge@ff2+1)^(0+128),w
  8996  1A45  0231               	subwf	(___ftge@ff1+1)^(0+128),w
  8997  1A46  1D03               	skipz
  8998  1A47  0008               	return
  8999  1A48  0833               	movf	___ftge@ff2^(0+128),w
  9000  1A49  0230               	subwf	___ftge@ff1^(0+128),w
  9001  1A4A  0008               	return
  9002  1A4B                     __end_of___ftge:	
  9003                           
  9004                           	psect	text28
  9005  10DC                     __ptext28:	
  9006 ;; *************** function ___ftdiv *****************
  9007 ;; Defined at:
  9008 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  f2              3   37[BANK1 ] float 
  9011 ;;  f1              3   40[BANK1 ] float 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  f3              3   48[BANK1 ] float 
  9014 ;;  sign            1   52[BANK1 ] unsigned char 
  9015 ;;  exp             1   51[BANK1 ] unsigned char 
  9016 ;;  cntr            1   47[BANK1 ] unsigned char 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  3   37[BANK1 ] float 
  9019 ;; Registers used:
  9020 ;;		wreg, status,2, status,0, pclath, cstack
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9026 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9028 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9029 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  9030 ;;Total ram usage:       16 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:    4
  9033 ;; This function calls:
  9034 ;;		___ftpack
  9035 ;; This function is called by:
  9036 ;;		_Adaptive_base_pid
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           
  9041                           ;psect for function ___ftdiv
  9042  10DC                     ___ftdiv:	
  9043                           
  9044                           ;incstack = 0
  9045                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9046  10DC  0021               	movlb	1	; select bank1
  9047  10DD  0848               	movf	___ftdiv@f1^(0+128),w
  9048  10DE  00CB               	movwf	??___ftdiv^(0+128)
  9049  10DF  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  9050  10E0  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9051  10E1  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  9052  10E2  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9053  10E3  1003               	clrc
  9054  10E4  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  9055  10E5  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  9056  10E6  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9057  10E7  084E               	movf	(??___ftdiv+3)^(0+128),w
  9058  10E8  00D3               	movwf	___ftdiv@exp^(0+128)
  9059  10E9  08D3               	movf	___ftdiv@exp^(0+128),f
  9060  10EA  1D03               	skipz
  9061  10EB  28F3               	goto	l3826
  9062  10EC  3000               	movlw	0
  9063  10ED  00C5               	movwf	?___ftdiv^(0+128)
  9064  10EE  3000               	movlw	0
  9065  10EF  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9066  10F0  3000               	movlw	0
  9067  10F1  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9068  10F2  0008               	return
  9069  10F3                     l3826:	
  9070  10F3  0845               	movf	___ftdiv@f2^(0+128),w
  9071  10F4  00CB               	movwf	??___ftdiv^(0+128)
  9072  10F5  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9073  10F6  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9074  10F7  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9075  10F8  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9076  10F9  1003               	clrc
  9077  10FA  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  9078  10FB  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  9079  10FC  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9080  10FD  084E               	movf	(??___ftdiv+3)^(0+128),w
  9081  10FE  00D4               	movwf	___ftdiv@sign^(0+128)
  9082  10FF  08D4               	movf	___ftdiv@sign^(0+128),f
  9083  1100  1D03               	skipz
  9084  1101  2909               	goto	l3832
  9085  1102  3000               	movlw	0
  9086  1103  00C5               	movwf	?___ftdiv^(0+128)
  9087  1104  3000               	movlw	0
  9088  1105  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9089  1106  3000               	movlw	0
  9090  1107  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9091  1108  0008               	return
  9092  1109                     l3832:	
  9093  1109  3000               	movlw	0
  9094  110A  00D0               	movwf	___ftdiv@f3^(0+128)
  9095  110B  3000               	movlw	0
  9096  110C  00D1               	movwf	(___ftdiv@f3+1)^(0+128)
  9097  110D  3000               	movlw	0
  9098  110E  00D2               	movwf	(___ftdiv@f3+2)^(0+128)
  9099  110F  3089               	movlw	137
  9100  1110  0754               	addwf	___ftdiv@sign^(0+128),w
  9101  1111  00CB               	movwf	??___ftdiv^(0+128)
  9102  1112  084B               	movf	??___ftdiv^(0+128),w
  9103  1113  02D3               	subwf	___ftdiv@exp^(0+128),f
  9104  1114  0848               	movf	___ftdiv@f1^(0+128),w
  9105  1115  00CB               	movwf	??___ftdiv^(0+128)
  9106  1116  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  9107  1117  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9108  1118  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  9109  1119  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9110  111A  3010               	movlw	16
  9111  111B                     u4905:	
  9112  111B  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  9113  111C  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  9114  111D  0CCB               	rrf	??___ftdiv^(0+128),f
  9115  111E  0B89               	decfsz	9,f
  9116  111F  291B               	goto	u4905
  9117  1120  084B               	movf	??___ftdiv^(0+128),w
  9118  1121  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9119  1122  084E               	movf	(??___ftdiv+3)^(0+128),w
  9120  1123  00D4               	movwf	___ftdiv@sign^(0+128)
  9121  1124  0845               	movf	___ftdiv@f2^(0+128),w
  9122  1125  00CB               	movwf	??___ftdiv^(0+128)
  9123  1126  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9124  1127  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9125  1128  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9126  1129  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9127  112A  3010               	movlw	16
  9128  112B                     u4915:	
  9129  112B  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  9130  112C  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  9131  112D  0CCB               	rrf	??___ftdiv^(0+128),f
  9132  112E  0B89               	decfsz	9,f
  9133  112F  292B               	goto	u4915
  9134  1130  084B               	movf	??___ftdiv^(0+128),w
  9135  1131  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9136  1132  084E               	movf	(??___ftdiv+3)^(0+128),w
  9137  1133  06D4               	xorwf	___ftdiv@sign^(0+128),f
  9138  1134  3080               	movlw	128
  9139  1135  00CB               	movwf	??___ftdiv^(0+128)
  9140  1136  084B               	movf	??___ftdiv^(0+128),w
  9141  1137  05D4               	andwf	___ftdiv@sign^(0+128),f
  9142  1138  17C9               	bsf	(___ftdiv@f1^(0+128)+1),7
  9143  1139  30FF               	movlw	255
  9144  113A  05C8               	andwf	___ftdiv@f1^(0+128),f
  9145  113B  30FF               	movlw	255
  9146  113C  05C9               	andwf	(___ftdiv@f1+1)^(0+128),f
  9147  113D  3000               	movlw	0
  9148  113E  05CA               	andwf	(___ftdiv@f1+2)^(0+128),f
  9149  113F  17C6               	bsf	(___ftdiv@f2^(0+128)+1),7
  9150  1140  30FF               	movlw	255
  9151  1141  05C5               	andwf	___ftdiv@f2^(0+128),f
  9152  1142  30FF               	movlw	255
  9153  1143  05C6               	andwf	(___ftdiv@f2+1)^(0+128),f
  9154  1144  3000               	movlw	0
  9155  1145  05C7               	andwf	(___ftdiv@f2+2)^(0+128),f
  9156  1146  3018               	movlw	24
  9157  1147  00CB               	movwf	??___ftdiv^(0+128)
  9158  1148  084B               	movf	??___ftdiv^(0+128),w
  9159  1149  00CF               	movwf	___ftdiv@cntr^(0+128)
  9160  114A                     l3846:	
  9161  114A  3001               	movlw	1
  9162  114B                     u4925:	
  9163  114B  35D0               	lslf	___ftdiv@f3^(0+128),f
  9164  114C  0DD1               	rlf	(___ftdiv@f3+1)^(0+128),f
  9165  114D  0DD2               	rlf	(___ftdiv@f3+2)^(0+128),f
  9166  114E  0B89               	decfsz	9,f
  9167  114F  294B               	goto	u4925
  9168  1150  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9169  1151  024A               	subwf	(___ftdiv@f1+2)^(0+128),w
  9170  1152  1D03               	skipz
  9171  1153  295A               	goto	u4935
  9172  1154  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9173  1155  0249               	subwf	(___ftdiv@f1+1)^(0+128),w
  9174  1156  1D03               	skipz
  9175  1157  295A               	goto	u4935
  9176  1158  0845               	movf	___ftdiv@f2^(0+128),w
  9177  1159  0248               	subwf	___ftdiv@f1^(0+128),w
  9178  115A                     u4935:	
  9179  115A  1C03               	skipc
  9180  115B  2963               	goto	l3854
  9181  115C  0845               	movf	___ftdiv@f2^(0+128),w
  9182  115D  02C8               	subwf	___ftdiv@f1^(0+128),f
  9183  115E  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9184  115F  3BC9               	subwfb	(___ftdiv@f1+1)^(0+128),f
  9185  1160  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9186  1161  3BCA               	subwfb	(___ftdiv@f1+2)^(0+128),f
  9187  1162  1450               	bsf	___ftdiv@f3^(0+128),0
  9188  1163                     l3854:	
  9189  1163  3001               	movlw	1
  9190  1164                     u4945:	
  9191  1164  35C8               	lslf	___ftdiv@f1^(0+128),f
  9192  1165  0DC9               	rlf	(___ftdiv@f1+1)^(0+128),f
  9193  1166  0DCA               	rlf	(___ftdiv@f1+2)^(0+128),f
  9194  1167  0B89               	decfsz	9,f
  9195  1168  2964               	goto	u4945
  9196  1169  3001               	movlw	1
  9197  116A  02CF               	subwf	___ftdiv@cntr^(0+128),f
  9198  116B  1D03               	btfss	3,2
  9199  116C  294A               	goto	l3846
  9200  116D  0850               	movf	___ftdiv@f3^(0+128),w
  9201  116E  00A0               	movwf	___ftpack@arg^(0+128)
  9202  116F  0851               	movf	(___ftdiv@f3+1)^(0+128),w
  9203  1170  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9204  1171  0852               	movf	(___ftdiv@f3+2)^(0+128),w
  9205  1172  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9206  1173  0853               	movf	___ftdiv@exp^(0+128),w
  9207  1174  00CB               	movwf	??___ftdiv^(0+128)
  9208  1175  084B               	movf	??___ftdiv^(0+128),w
  9209  1176  00A3               	movwf	___ftpack@exp^(0+128)
  9210  1177  0854               	movf	___ftdiv@sign^(0+128),w
  9211  1178  00CC               	movwf	(??___ftdiv+1)^(0+128)
  9212  1179  084C               	movf	(??___ftdiv+1)^(0+128),w
  9213  117A  00A4               	movwf	___ftpack@sign^(0+128)
  9214  117B  319B  23C6         	fcall	___ftpack
  9215  117D  0021               	movlb	1	; select bank1
  9216  117E  0820               	movf	?___ftpack^(0+128),w
  9217  117F  00C5               	movwf	?___ftdiv^(0+128)
  9218  1180  0821               	movf	(?___ftpack+1)^(0+128),w
  9219  1181  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9220  1182  0822               	movf	(?___ftpack+2)^(0+128),w
  9221  1183  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9222  1184  0008               	return
  9223  1185                     __end_of___ftdiv:	
  9224                           
  9225                           	psect	text29
  9226  081D                     __ptext29:	
  9227 ;; *************** function ___ftadd *****************
  9228 ;; Defined at:
  9229 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  f1              3    8[BANK1 ] float 
  9232 ;;  f2              3   11[BANK1 ] float 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;  exp1            1   20[BANK1 ] unsigned char 
  9235 ;;  exp2            1   19[BANK1 ] unsigned char 
  9236 ;;  sign            1   18[BANK1 ] unsigned char 
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  3    8[BANK1 ] float 
  9239 ;; Registers used:
  9240 ;;		wreg, status,2, status,0, pclath, cstack
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9246 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;Total ram usage:       13 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:    4
  9253 ;; This function calls:
  9254 ;;		___ftpack
  9255 ;; This function is called by:
  9256 ;;		_Adaptive_base_pid
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           
  9261                           ;psect for function ___ftadd
  9262  081D                     ___ftadd:	
  9263                           
  9264                           ;incstack = 0
  9265                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9266  081D  0021               	movlb	1	; select bank1
  9267  081E  0828               	movf	___ftadd@f1^(0+128),w
  9268  081F  00AE               	movwf	??___ftadd^(0+128)
  9269  0820  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9270  0821  00AF               	movwf	(??___ftadd^(0+128)+1)
  9271  0822  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9272  0823  00B0               	movwf	(??___ftadd^(0+128)+2)
  9273  0824  1003               	clrc
  9274  0825  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  9275  0826  0D30               	rlf	(??___ftadd^(0+128)+2),w
  9276  0827  00B1               	movwf	(??___ftadd+3)^(0+128)
  9277  0828  0831               	movf	(??___ftadd+3)^(0+128),w
  9278  0829  00B4               	movwf	___ftadd@exp1^(0+128)
  9279  082A  082B               	movf	___ftadd@f2^(0+128),w
  9280  082B  00AE               	movwf	??___ftadd^(0+128)
  9281  082C  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9282  082D  00AF               	movwf	(??___ftadd^(0+128)+1)
  9283  082E  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9284  082F  00B0               	movwf	(??___ftadd^(0+128)+2)
  9285  0830  1003               	clrc
  9286  0831  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  9287  0832  0D30               	rlf	(??___ftadd^(0+128)+2),w
  9288  0833  00B1               	movwf	(??___ftadd+3)^(0+128)
  9289  0834  0831               	movf	(??___ftadd+3)^(0+128),w
  9290  0835  00B3               	movwf	___ftadd@exp2^(0+128)
  9291  0836  0834               	movf	___ftadd@exp1^(0+128),w
  9292  0837  1903               	btfsc	3,2
  9293  0838  2845               	goto	l3756
  9294  0839  0833               	movf	___ftadd@exp2^(0+128),w
  9295  083A  0234               	subwf	___ftadd@exp1^(0+128),w
  9296  083B  1803               	skipnc
  9297  083C  284C               	goto	l3760
  9298  083D  0334               	decf	___ftadd@exp1^(0+128),w
  9299  083E  3AFF               	xorlw	255
  9300  083F  0733               	addwf	___ftadd@exp2^(0+128),w
  9301  0840  00AE               	movwf	??___ftadd^(0+128)
  9302  0841  3019               	movlw	25
  9303  0842  022E               	subwf	??___ftadd^(0+128),w
  9304  0843  1C03               	skipc
  9305  0844  284C               	goto	l3760
  9306  0845                     l3756:	
  9307  0845  082B               	movf	___ftadd@f2^(0+128),w
  9308  0846  00A8               	movwf	?___ftadd^(0+128)
  9309  0847  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9310  0848  00A9               	movwf	(?___ftadd+1)^(0+128)
  9311  0849  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9312  084A  00AA               	movwf	(?___ftadd+2)^(0+128)
  9313  084B  0008               	return
  9314  084C                     l3760:	
  9315  084C  0833               	movf	___ftadd@exp2^(0+128),w
  9316  084D  1903               	btfsc	3,2
  9317  084E  0008               	return
  9318  084F  0834               	movf	___ftadd@exp1^(0+128),w
  9319  0850  0233               	subwf	___ftadd@exp2^(0+128),w
  9320  0851  1803               	skipnc
  9321  0852  285B               	goto	l3766
  9322  0853  0333               	decf	___ftadd@exp2^(0+128),w
  9323  0854  3AFF               	xorlw	255
  9324  0855  0734               	addwf	___ftadd@exp1^(0+128),w
  9325  0856  00AE               	movwf	??___ftadd^(0+128)
  9326  0857  3019               	movlw	25
  9327  0858  022E               	subwf	??___ftadd^(0+128),w
  9328  0859  1803               	btfsc	3,0
  9329  085A  0008               	return
  9330  085B                     l3766:	
  9331  085B  3006               	movlw	6
  9332  085C  00AE               	movwf	??___ftadd^(0+128)
  9333  085D  082E               	movf	??___ftadd^(0+128),w
  9334  085E  00B2               	movwf	___ftadd@sign^(0+128)
  9335  085F  1BAA               	btfsc	(___ftadd@f1+2)^(0+128),7
  9336  0860  17B2               	bsf	___ftadd@sign^(0+128),7
  9337  0861  1BAD               	btfsc	(___ftadd@f2+2)^(0+128),7
  9338  0862  1732               	bsf	___ftadd@sign^(0+128),6
  9339  0863  17A9               	bsf	(___ftadd@f1^(0+128)+1),7
  9340  0864  30FF               	movlw	255
  9341  0865  05A8               	andwf	___ftadd@f1^(0+128),f
  9342  0866  30FF               	movlw	255
  9343  0867  05A9               	andwf	(___ftadd@f1+1)^(0+128),f
  9344  0868  3000               	movlw	0
  9345  0869  05AA               	andwf	(___ftadd@f1+2)^(0+128),f
  9346  086A  17AC               	bsf	(___ftadd@f2^(0+128)+1),7
  9347  086B  30FF               	movlw	255
  9348  086C  05AB               	andwf	___ftadd@f2^(0+128),f
  9349  086D  30FF               	movlw	255
  9350  086E  05AC               	andwf	(___ftadd@f2+1)^(0+128),f
  9351  086F  3000               	movlw	0
  9352  0870  05AD               	andwf	(___ftadd@f2+2)^(0+128),f
  9353  0871  0833               	movf	___ftadd@exp2^(0+128),w
  9354  0872  0234               	subwf	___ftadd@exp1^(0+128),w
  9355  0873  1803               	skipnc
  9356  0874  2897               	goto	l3788
  9357  0875                     l3778:	
  9358  0875  3001               	movlw	1
  9359  0876                     u4745:	
  9360  0876  35AB               	lslf	___ftadd@f2^(0+128),f
  9361  0877  0DAC               	rlf	(___ftadd@f2+1)^(0+128),f
  9362  0878  0DAD               	rlf	(___ftadd@f2+2)^(0+128),f
  9363  0879  0B89               	decfsz	9,f
  9364  087A  2876               	goto	u4745
  9365  087B  3001               	movlw	1
  9366  087C  02B3               	subwf	___ftadd@exp2^(0+128),f
  9367  087D  0833               	movf	___ftadd@exp2^(0+128),w
  9368  087E  0634               	xorwf	___ftadd@exp1^(0+128),w
  9369  087F  1903               	skipnz
  9370  0880  2892               	goto	l3786
  9371  0881  3001               	movlw	1
  9372  0882  02B2               	subwf	___ftadd@sign^(0+128),f
  9373  0883  0832               	movf	___ftadd@sign^(0+128),w
  9374  0884  3907               	andlw	7
  9375  0885  1903               	btfsc	3,2
  9376  0886  2892               	goto	l3786
  9377  0887  2875               	goto	l3778
  9378  0888                     l3784:	
  9379  0888  3001               	movlw	1
  9380  0889                     u4775:	
  9381  0889  36AA               	lsrf	(___ftadd@f1+2)^(0+128),f
  9382  088A  0CA9               	rrf	(___ftadd@f1+1)^(0+128),f
  9383  088B  0CA8               	rrf	___ftadd@f1^(0+128),f
  9384  088C  0B89               	decfsz	9,f
  9385  088D  2889               	goto	u4775
  9386  088E  3001               	movlw	1
  9387  088F  00AE               	movwf	??___ftadd^(0+128)
  9388  0890  082E               	movf	??___ftadd^(0+128),w
  9389  0891  07B4               	addwf	___ftadd@exp1^(0+128),f
  9390  0892                     l3786:	
  9391  0892  0834               	movf	___ftadd@exp1^(0+128),w
  9392  0893  0633               	xorwf	___ftadd@exp2^(0+128),w
  9393  0894  1903               	btfsc	3,2
  9394  0895  28BC               	goto	l1101
  9395  0896  2888               	goto	l3784
  9396  0897                     l3788:	
  9397  0897  0834               	movf	___ftadd@exp1^(0+128),w
  9398  0898  0233               	subwf	___ftadd@exp2^(0+128),w
  9399  0899  1803               	skipnc
  9400  089A  28BC               	goto	l1101
  9401  089B                     l3790:	
  9402  089B  3001               	movlw	1
  9403  089C                     u4805:	
  9404  089C  35A8               	lslf	___ftadd@f1^(0+128),f
  9405  089D  0DA9               	rlf	(___ftadd@f1+1)^(0+128),f
  9406  089E  0DAA               	rlf	(___ftadd@f1+2)^(0+128),f
  9407  089F  0B89               	decfsz	9,f
  9408  08A0  289C               	goto	u4805
  9409  08A1  3001               	movlw	1
  9410  08A2  02B4               	subwf	___ftadd@exp1^(0+128),f
  9411  08A3  0833               	movf	___ftadd@exp2^(0+128),w
  9412  08A4  0634               	xorwf	___ftadd@exp1^(0+128),w
  9413  08A5  1903               	skipnz
  9414  08A6  28B8               	goto	l3798
  9415  08A7  3001               	movlw	1
  9416  08A8  02B2               	subwf	___ftadd@sign^(0+128),f
  9417  08A9  0832               	movf	___ftadd@sign^(0+128),w
  9418  08AA  3907               	andlw	7
  9419  08AB  1903               	btfsc	3,2
  9420  08AC  28B8               	goto	l3798
  9421  08AD  289B               	goto	l3790
  9422  08AE                     l3796:	
  9423  08AE  3001               	movlw	1
  9424  08AF                     u4835:	
  9425  08AF  36AD               	lsrf	(___ftadd@f2+2)^(0+128),f
  9426  08B0  0CAC               	rrf	(___ftadd@f2+1)^(0+128),f
  9427  08B1  0CAB               	rrf	___ftadd@f2^(0+128),f
  9428  08B2  0B89               	decfsz	9,f
  9429  08B3  28AF               	goto	u4835
  9430  08B4  3001               	movlw	1
  9431  08B5  00AE               	movwf	??___ftadd^(0+128)
  9432  08B6  082E               	movf	??___ftadd^(0+128),w
  9433  08B7  07B3               	addwf	___ftadd@exp2^(0+128),f
  9434  08B8                     l3798:	
  9435  08B8  0834               	movf	___ftadd@exp1^(0+128),w
  9436  08B9  0633               	xorwf	___ftadd@exp2^(0+128),w
  9437  08BA  1D03               	skipz
  9438  08BB  28AE               	goto	l3796
  9439  08BC                     l1101:	
  9440  08BC  1FB2               	btfss	___ftadd@sign^(0+128),7
  9441  08BD  28CE               	goto	l3802
  9442  08BE  30FF               	movlw	255
  9443  08BF  06A8               	xorwf	___ftadd@f1^(0+128),f
  9444  08C0  30FF               	movlw	255
  9445  08C1  06A9               	xorwf	(___ftadd@f1+1)^(0+128),f
  9446  08C2  30FF               	movlw	255
  9447  08C3  06AA               	xorwf	(___ftadd@f1+2)^(0+128),f
  9448  08C4  3001               	movlw	1
  9449  08C5  07A8               	addwf	___ftadd@f1^(0+128),f
  9450  08C6  3000               	movlw	0
  9451  08C7  1803               	skipnc
  9452  08C8  3001               	movlw	1
  9453  08C9  07A9               	addwf	(___ftadd@f1+1)^(0+128),f
  9454  08CA  3000               	movlw	0
  9455  08CB  1803               	skipnc
  9456  08CC  3001               	movlw	1
  9457  08CD  07AA               	addwf	(___ftadd@f1+2)^(0+128),f
  9458  08CE                     l3802:	
  9459  08CE  1F32               	btfss	___ftadd@sign^(0+128),6
  9460  08CF  28E0               	goto	l3806
  9461  08D0  30FF               	movlw	255
  9462  08D1  06AB               	xorwf	___ftadd@f2^(0+128),f
  9463  08D2  30FF               	movlw	255
  9464  08D3  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9465  08D4  30FF               	movlw	255
  9466  08D5  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9467  08D6  3001               	movlw	1
  9468  08D7  07AB               	addwf	___ftadd@f2^(0+128),f
  9469  08D8  3000               	movlw	0
  9470  08D9  1803               	skipnc
  9471  08DA  3001               	movlw	1
  9472  08DB  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9473  08DC  3000               	movlw	0
  9474  08DD  1803               	skipnc
  9475  08DE  3001               	movlw	1
  9476  08DF  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9477  08E0                     l3806:	
  9478  08E0  01B2               	clrf	___ftadd@sign^(0+128)
  9479  08E1  0828               	movf	___ftadd@f1^(0+128),w
  9480  08E2  07AB               	addwf	___ftadd@f2^(0+128),f
  9481  08E3  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9482  08E4  3DAC               	addwfc	(___ftadd@f2+1)^(0+128),f
  9483  08E5  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9484  08E6  3DAD               	addwfc	(___ftadd@f2+2)^(0+128),f
  9485  08E7  1FAD               	btfss	(___ftadd@f2+2)^(0+128),7
  9486  08E8  28FB               	goto	l3816
  9487  08E9  30FF               	movlw	255
  9488  08EA  06AB               	xorwf	___ftadd@f2^(0+128),f
  9489  08EB  30FF               	movlw	255
  9490  08EC  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9491  08ED  30FF               	movlw	255
  9492  08EE  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9493  08EF  3001               	movlw	1
  9494  08F0  07AB               	addwf	___ftadd@f2^(0+128),f
  9495  08F1  3000               	movlw	0
  9496  08F2  1803               	skipnc
  9497  08F3  3001               	movlw	1
  9498  08F4  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9499  08F5  3000               	movlw	0
  9500  08F6  1803               	skipnc
  9501  08F7  3001               	movlw	1
  9502  08F8  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9503  08F9  01B2               	clrf	___ftadd@sign^(0+128)
  9504  08FA  0AB2               	incf	___ftadd@sign^(0+128),f
  9505  08FB                     l3816:	
  9506  08FB  082B               	movf	___ftadd@f2^(0+128),w
  9507  08FC  00A0               	movwf	___ftpack@arg^(0+128)
  9508  08FD  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9509  08FE  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9510  08FF  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9511  0900  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9512  0901  0834               	movf	___ftadd@exp1^(0+128),w
  9513  0902  00AE               	movwf	??___ftadd^(0+128)
  9514  0903  082E               	movf	??___ftadd^(0+128),w
  9515  0904  00A3               	movwf	___ftpack@exp^(0+128)
  9516  0905  0832               	movf	___ftadd@sign^(0+128),w
  9517  0906  00AF               	movwf	(??___ftadd+1)^(0+128)
  9518  0907  082F               	movf	(??___ftadd+1)^(0+128),w
  9519  0908  00A4               	movwf	___ftpack@sign^(0+128)
  9520  0909  319B  23C6         	fcall	___ftpack
  9521  090B  0021               	movlb	1	; select bank1
  9522  090C  0820               	movf	?___ftpack^(0+128),w
  9523  090D  00A8               	movwf	?___ftadd^(0+128)
  9524  090E  0821               	movf	(?___ftpack+1)^(0+128),w
  9525  090F  00A9               	movwf	(?___ftadd+1)^(0+128)
  9526  0910  0822               	movf	(?___ftpack+2)^(0+128),w
  9527  0911  00AA               	movwf	(?___ftadd+2)^(0+128)
  9528  0912  0008               	return
  9529  0913                     __end_of___ftadd:	
  9530                           
  9531                           	psect	text30
  9532  07BD                     __ptext30:	
  9533 ;; *************** function ___altoft *****************
  9534 ;; Defined at:
  9535 ;;		line 42 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\altoft.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;  c               4    8[BANK1 ] long 
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;  sign            1   15[BANK1 ] unsigned char 
  9540 ;;  exp             1   14[BANK1 ] unsigned char 
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  3    8[BANK1 ] float 
  9543 ;; Registers used:
  9544 ;;		wreg, status,2, status,0, pclath, cstack
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9550 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9551 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9552 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9554 ;;Total ram usage:        8 bytes
  9555 ;; Hardware stack levels used:    1
  9556 ;; Hardware stack levels required when called:    4
  9557 ;; This function calls:
  9558 ;;		___ftpack
  9559 ;; This function is called by:
  9560 ;;		_Adaptive_base_pid
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           
  9565                           ;psect for function ___altoft
  9566  07BD                     ___altoft:	
  9567                           
  9568                           ;incstack = 0
  9569                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  9570  07BD  0021               	movlb	1	; select bank1
  9571  07BE  01AF               	clrf	___altoft@sign^(0+128)
  9572  07BF  308E               	movlw	142
  9573  07C0  00AC               	movwf	??___altoft^(0+128)
  9574  07C1  082C               	movf	??___altoft^(0+128),w
  9575  07C2  00AE               	movwf	___altoft@exp^(0+128)
  9576  07C3  1FAB               	btfss	(___altoft@c+3)^(0+128),7
  9577  07C4  2FD2               	goto	l3742
  9578  07C5  09A8               	comf	___altoft@c^(0+128),f
  9579  07C6  09A9               	comf	(___altoft@c+1)^(0+128),f
  9580  07C7  09AA               	comf	(___altoft@c+2)^(0+128),f
  9581  07C8  09AB               	comf	(___altoft@c+3)^(0+128),f
  9582  07C9  0AA8               	incf	___altoft@c^(0+128),f
  9583  07CA  1903               	skipnz
  9584  07CB  0AA9               	incf	(___altoft@c+1)^(0+128),f
  9585  07CC  1903               	skipnz
  9586  07CD  0AAA               	incf	(___altoft@c+2)^(0+128),f
  9587  07CE  1903               	skipnz
  9588  07CF  0AAB               	incf	(___altoft@c+3)^(0+128),f
  9589  07D0  01AF               	clrf	___altoft@sign^(0+128)
  9590  07D1  0AAF               	incf	___altoft@sign^(0+128),f
  9591  07D2                     l3742:	
  9592  07D2  30FF               	movlw	255
  9593  07D3  052B               	andwf	(___altoft@c+3)^(0+128),w
  9594  07D4  1903               	btfsc	3,2
  9595  07D5  2FE2               	goto	l3744
  9596  07D6  3001               	movlw	1
  9597  07D7                     u4635:	
  9598  07D7  36AB               	lsrf	(___altoft@c+3)^(0+128),f
  9599  07D8  0CAA               	rrf	(___altoft@c+2)^(0+128),f
  9600  07D9  0CA9               	rrf	(___altoft@c+1)^(0+128),f
  9601  07DA  0CA8               	rrf	___altoft@c^(0+128),f
  9602  07DB  0B89               	decfsz	9,f
  9603  07DC  2FD7               	goto	u4635
  9604  07DD  3001               	movlw	1
  9605  07DE  00AC               	movwf	??___altoft^(0+128)
  9606  07DF  082C               	movf	??___altoft^(0+128),w
  9607  07E0  07AE               	addwf	___altoft@exp^(0+128),f
  9608  07E1  2FD2               	goto	l3742
  9609  07E2                     l3744:	
  9610  07E2  0828               	movf	___altoft@c^(0+128),w
  9611  07E3  00A0               	movwf	___ftpack@arg^(0+128)
  9612  07E4  0829               	movf	(___altoft@c+1)^(0+128),w
  9613  07E5  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9614  07E6  082A               	movf	(___altoft@c+2)^(0+128),w
  9615  07E7  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9616  07E8  082E               	movf	___altoft@exp^(0+128),w
  9617  07E9  00AC               	movwf	??___altoft^(0+128)
  9618  07EA  082C               	movf	??___altoft^(0+128),w
  9619  07EB  00A3               	movwf	___ftpack@exp^(0+128)
  9620  07EC  082F               	movf	___altoft@sign^(0+128),w
  9621  07ED  00AD               	movwf	(??___altoft+1)^(0+128)
  9622  07EE  082D               	movf	(??___altoft+1)^(0+128),w
  9623  07EF  00A4               	movwf	___ftpack@sign^(0+128)
  9624  07F0  319B  23C6         	fcall	___ftpack
  9625  07F2  0021               	movlb	1	; select bank1
  9626  07F3  0820               	movf	?___ftpack^(0+128),w
  9627  07F4  00A8               	movwf	?___altoft^(0+128)
  9628  07F5  0821               	movf	(?___ftpack+1)^(0+128),w
  9629  07F6  00A9               	movwf	(?___altoft+1)^(0+128)
  9630  07F7  0822               	movf	(?___ftpack+2)^(0+128),w
  9631  07F8  00AA               	movwf	(?___altoft+2)^(0+128)
  9632  07F9  0008               	return
  9633  07FA                     __end_of___altoft:	
  9634                           
  9635                           	psect	text31
  9636  1BC6                     __ptext31:	
  9637 ;; *************** function ___ftpack *****************
  9638 ;; Defined at:
  9639 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  arg             3    0[BANK1 ] unsigned um
  9642 ;;  exp             1    3[BANK1 ] unsigned char 
  9643 ;;  sign            1    4[BANK1 ] unsigned char 
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;		None
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  3    0[BANK1 ] float 
  9648 ;; Registers used:
  9649 ;;		wreg, status,2, status,0
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9655 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;Total ram usage:        8 bytes
  9660 ;; Hardware stack levels used:    1
  9661 ;; Hardware stack levels required when called:    3
  9662 ;; This function calls:
  9663 ;;		Nothing
  9664 ;; This function is called by:
  9665 ;;		___altoft
  9666 ;;		___ftadd
  9667 ;;		___ftdiv
  9668 ;;		___ftmul
  9669 ;;		___lwtoft
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673                           
  9674                           ;psect for function ___ftpack
  9675  1BC6                     ___ftpack:	
  9676                           
  9677                           ;incstack = 0
  9678                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9679  1BC6  0021               	movlb	1	; select bank1
  9680  1BC7  0823               	movf	___ftpack@exp^(0+128),w
  9681  1BC8  1903               	btfsc	3,2
  9682  1BC9  2BCF               	goto	l3526
  9683  1BCA  0822               	movf	(___ftpack@arg+2)^(0+128),w
  9684  1BCB  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  9685  1BCC  0420               	iorwf	___ftpack@arg^(0+128),w
  9686  1BCD  1D03               	skipz
  9687  1BCE  2BE0               	goto	l3532
  9688  1BCF                     l3526:	
  9689  1BCF  3000               	movlw	0
  9690  1BD0  00A0               	movwf	?___ftpack^(0+128)
  9691  1BD1  3000               	movlw	0
  9692  1BD2  00A1               	movwf	(?___ftpack+1)^(0+128)
  9693  1BD3  3000               	movlw	0
  9694  1BD4  00A2               	movwf	(?___ftpack+2)^(0+128)
  9695  1BD5  0008               	return
  9696  1BD6                     l3530:	
  9697  1BD6  3001               	movlw	1
  9698  1BD7  00A5               	movwf	??___ftpack^(0+128)
  9699  1BD8  0825               	movf	??___ftpack^(0+128),w
  9700  1BD9  07A3               	addwf	___ftpack@exp^(0+128),f
  9701  1BDA  3001               	movlw	1
  9702  1BDB                     u4235:	
  9703  1BDB  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  9704  1BDC  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  9705  1BDD  0CA0               	rrf	___ftpack@arg^(0+128),f
  9706  1BDE  0B89               	decfsz	9,f
  9707  1BDF  2BDB               	goto	u4235
  9708  1BE0                     l3532:	
  9709  1BE0  30FE               	movlw	254
  9710  1BE1  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  9711  1BE2  1903               	btfsc	3,2
  9712  1BE3  2BF9               	goto	l1072
  9713  1BE4  2BD6               	goto	l3530
  9714  1BE5                     l3534:	
  9715  1BE5  3001               	movlw	1
  9716  1BE6  00A5               	movwf	??___ftpack^(0+128)
  9717  1BE7  0825               	movf	??___ftpack^(0+128),w
  9718  1BE8  07A3               	addwf	___ftpack@exp^(0+128),f
  9719  1BE9  3001               	movlw	1
  9720  1BEA  07A0               	addwf	___ftpack@arg^(0+128),f
  9721  1BEB  3000               	movlw	0
  9722  1BEC  1803               	skipnc
  9723  1BED  3001               	movlw	1
  9724  1BEE  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  9725  1BEF  3000               	movlw	0
  9726  1BF0  1803               	skipnc
  9727  1BF1  3001               	movlw	1
  9728  1BF2  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  9729  1BF3  3001               	movlw	1
  9730  1BF4                     u4255:	
  9731  1BF4  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  9732  1BF5  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  9733  1BF6  0CA0               	rrf	___ftpack@arg^(0+128),f
  9734  1BF7  0B89               	decfsz	9,f
  9735  1BF8  2BF4               	goto	u4255
  9736  1BF9                     l1072:	
  9737  1BF9  30FF               	movlw	255
  9738  1BFA  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  9739  1BFB  1903               	btfsc	3,2
  9740  1BFC  2C06               	goto	l3542
  9741  1BFD  2BE5               	goto	l3534
  9742  1BFE                     l3540:	
  9743  1BFE  3001               	movlw	1
  9744  1BFF  02A3               	subwf	___ftpack@exp^(0+128),f
  9745  1C00  3001               	movlw	1
  9746  1C01                     u4275:	
  9747  1C01  35A0               	lslf	___ftpack@arg^(0+128),f
  9748  1C02  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  9749  1C03  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  9750  1C04  0B89               	decfsz	9,f
  9751  1C05  2C01               	goto	u4275
  9752  1C06                     l3542:	
  9753  1C06  1FA1               	btfss	(___ftpack@arg+1)^(0+128),7
  9754  1C07  2BFE               	goto	l3540
  9755  1C08  1823               	btfsc	___ftpack@exp^(0+128),0
  9756  1C09  2C10               	goto	l1078
  9757  1C0A  30FF               	movlw	255
  9758  1C0B  05A0               	andwf	___ftpack@arg^(0+128),f
  9759  1C0C  307F               	movlw	127
  9760  1C0D  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  9761  1C0E  30FF               	movlw	255
  9762  1C0F  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  9763  1C10                     l1078:	
  9764  1C10  1003               	clrc
  9765  1C11  0CA3               	rrf	___ftpack@exp^(0+128),f
  9766  1C12  0823               	movf	___ftpack@exp^(0+128),w
  9767  1C13  00A5               	movwf	??___ftpack^(0+128)
  9768  1C14  01A6               	clrf	(??___ftpack^(0+128)+1)
  9769  1C15  01A7               	clrf	(??___ftpack^(0+128)+2)
  9770  1C16  3010               	movlw	16
  9771  1C17                     u4305:	
  9772  1C17  35A5               	lslf	??___ftpack^(0+128),f
  9773  1C18  0DA6               	rlf	(??___ftpack^(0+128)+1),f
  9774  1C19  0DA7               	rlf	(??___ftpack^(0+128)+2),f
  9775  1C1A  0B89               	decfsz	9,f
  9776  1C1B  2C17               	goto	u4305
  9777  1C1C  0825               	movf	??___ftpack^(0+128),w
  9778  1C1D  04A0               	iorwf	___ftpack@arg^(0+128),f
  9779  1C1E  0826               	movf	(??___ftpack+1)^(0+128),w
  9780  1C1F  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  9781  1C20  0827               	movf	(??___ftpack+2)^(0+128),w
  9782  1C21  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  9783  1C22  0824               	movf	___ftpack@sign^(0+128),w
  9784  1C23  1903               	btfsc	3,2
  9785  1C24  0008               	return
  9786  1C25  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  9787  1C26  0008               	return
  9788  1C27                     __end_of___ftpack:	
  9789                           
  9790                           	psect	text32
  9791  1E70                     __ptext32:	
  9792 ;; *************** function ___aldiv *****************
  9793 ;; Defined at:
  9794 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\aldiv.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;  divisor         4    0[BANK1 ] long 
  9797 ;;  dividend        4    4[BANK1 ] long 
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;  quotient        4   11[BANK1 ] long 
  9800 ;;  sign            1   10[BANK1 ] unsigned char 
  9801 ;;  counter         1    9[BANK1 ] unsigned char 
  9802 ;; Return value:  Size  Location     Type
  9803 ;;                  4    0[BANK1 ] long 
  9804 ;; Registers used:
  9805 ;;		wreg, status,2, status,0
  9806 ;; Tracked objects:
  9807 ;;		On entry : 0/0
  9808 ;;		On exit  : 0/0
  9809 ;;		Unchanged: 0/0
  9810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9811 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;Total ram usage:       15 bytes
  9816 ;; Hardware stack levels used:    1
  9817 ;; Hardware stack levels required when called:    3
  9818 ;; This function calls:
  9819 ;;		Nothing
  9820 ;; This function is called by:
  9821 ;;		_Adaptive_base_pid
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           
  9826                           ;psect for function ___aldiv
  9827  1E70                     ___aldiv:	
  9828                           
  9829                           ;incstack = 0
  9830                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9831  1E70  0021               	movlb	1	; select bank1
  9832  1E71  01AA               	clrf	___aldiv@sign^(0+128)
  9833  1E72  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
  9834  1E73  2E81               	goto	l966
  9835  1E74  09A0               	comf	___aldiv@divisor^(0+128),f
  9836  1E75  09A1               	comf	(___aldiv@divisor+1)^(0+128),f
  9837  1E76  09A2               	comf	(___aldiv@divisor+2)^(0+128),f
  9838  1E77  09A3               	comf	(___aldiv@divisor+3)^(0+128),f
  9839  1E78  0AA0               	incf	___aldiv@divisor^(0+128),f
  9840  1E79  1903               	skipnz
  9841  1E7A  0AA1               	incf	(___aldiv@divisor+1)^(0+128),f
  9842  1E7B  1903               	skipnz
  9843  1E7C  0AA2               	incf	(___aldiv@divisor+2)^(0+128),f
  9844  1E7D  1903               	skipnz
  9845  1E7E  0AA3               	incf	(___aldiv@divisor+3)^(0+128),f
  9846  1E7F  01AA               	clrf	___aldiv@sign^(0+128)
  9847  1E80  0AAA               	incf	___aldiv@sign^(0+128),f
  9848  1E81                     l966:	
  9849  1E81  1FA7               	btfss	(___aldiv@dividend+3)^(0+128),7
  9850  1E82  2E92               	goto	l3702
  9851  1E83  09A4               	comf	___aldiv@dividend^(0+128),f
  9852  1E84  09A5               	comf	(___aldiv@dividend+1)^(0+128),f
  9853  1E85  09A6               	comf	(___aldiv@dividend+2)^(0+128),f
  9854  1E86  09A7               	comf	(___aldiv@dividend+3)^(0+128),f
  9855  1E87  0AA4               	incf	___aldiv@dividend^(0+128),f
  9856  1E88  1903               	skipnz
  9857  1E89  0AA5               	incf	(___aldiv@dividend+1)^(0+128),f
  9858  1E8A  1903               	skipnz
  9859  1E8B  0AA6               	incf	(___aldiv@dividend+2)^(0+128),f
  9860  1E8C  1903               	skipnz
  9861  1E8D  0AA7               	incf	(___aldiv@dividend+3)^(0+128),f
  9862  1E8E  3001               	movlw	1
  9863  1E8F  00A8               	movwf	??___aldiv^(0+128)
  9864  1E90  0828               	movf	??___aldiv^(0+128),w
  9865  1E91  06AA               	xorwf	___aldiv@sign^(0+128),f
  9866  1E92                     l3702:	
  9867  1E92  3000               	movlw	0
  9868  1E93  00AE               	movwf	(___aldiv@quotient+3)^(0+128)
  9869  1E94  3000               	movlw	0
  9870  1E95  00AD               	movwf	(___aldiv@quotient+2)^(0+128)
  9871  1E96  3000               	movlw	0
  9872  1E97  00AC               	movwf	(___aldiv@quotient+1)^(0+128)
  9873  1E98  3000               	movlw	0
  9874  1E99  00AB               	movwf	___aldiv@quotient^(0+128)
  9875  1E9A  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  9876  1E9B  0422               	iorwf	(___aldiv@divisor+2)^(0+128),w
  9877  1E9C  0421               	iorwf	(___aldiv@divisor+1)^(0+128),w
  9878  1E9D  0420               	iorwf	___aldiv@divisor^(0+128),w
  9879  1E9E  1903               	skipnz
  9880  1E9F  2EDB               	goto	l3724
  9881  1EA0  01A9               	clrf	___aldiv@counter^(0+128)
  9882  1EA1  0AA9               	incf	___aldiv@counter^(0+128),f
  9883  1EA2                     l3710:	
  9884  1EA2  1BA3               	btfsc	(___aldiv@divisor+3)^(0+128),7
  9885  1EA3  2EB0               	goto	l3712
  9886  1EA4  3001               	movlw	1
  9887  1EA5                     u4555:	
  9888  1EA5  35A0               	lslf	___aldiv@divisor^(0+128),f
  9889  1EA6  0DA1               	rlf	(___aldiv@divisor+1)^(0+128),f
  9890  1EA7  0DA2               	rlf	(___aldiv@divisor+2)^(0+128),f
  9891  1EA8  0DA3               	rlf	(___aldiv@divisor+3)^(0+128),f
  9892  1EA9  0B89               	decfsz	9,f
  9893  1EAA  2EA5               	goto	u4555
  9894  1EAB  3001               	movlw	1
  9895  1EAC  00A8               	movwf	??___aldiv^(0+128)
  9896  1EAD  0828               	movf	??___aldiv^(0+128),w
  9897  1EAE  07A9               	addwf	___aldiv@counter^(0+128),f
  9898  1EAF  2EA2               	goto	l3710
  9899  1EB0                     l3712:	
  9900  1EB0  3001               	movlw	1
  9901  1EB1                     u4575:	
  9902  1EB1  35AB               	lslf	___aldiv@quotient^(0+128),f
  9903  1EB2  0DAC               	rlf	(___aldiv@quotient+1)^(0+128),f
  9904  1EB3  0DAD               	rlf	(___aldiv@quotient+2)^(0+128),f
  9905  1EB4  0DAE               	rlf	(___aldiv@quotient+3)^(0+128),f
  9906  1EB5  0B89               	decfsz	9,f
  9907  1EB6  2EB1               	goto	u4575
  9908  1EB7  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  9909  1EB8  0227               	subwf	(___aldiv@dividend+3)^(0+128),w
  9910  1EB9  1D03               	skipz
  9911  1EBA  2EC5               	goto	u4585
  9912  1EBB  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  9913  1EBC  0226               	subwf	(___aldiv@dividend+2)^(0+128),w
  9914  1EBD  1D03               	skipz
  9915  1EBE  2EC5               	goto	u4585
  9916  1EBF  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  9917  1EC0  0225               	subwf	(___aldiv@dividend+1)^(0+128),w
  9918  1EC1  1D03               	skipz
  9919  1EC2  2EC5               	goto	u4585
  9920  1EC3  0820               	movf	___aldiv@divisor^(0+128),w
  9921  1EC4  0224               	subwf	___aldiv@dividend^(0+128),w
  9922  1EC5                     u4585:	
  9923  1EC5  1C03               	skipc
  9924  1EC6  2ED0               	goto	l3720
  9925  1EC7  0820               	movf	___aldiv@divisor^(0+128),w
  9926  1EC8  02A4               	subwf	___aldiv@dividend^(0+128),f
  9927  1EC9  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  9928  1ECA  3BA5               	subwfb	(___aldiv@dividend+1)^(0+128),f
  9929  1ECB  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  9930  1ECC  3BA6               	subwfb	(___aldiv@dividend+2)^(0+128),f
  9931  1ECD  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  9932  1ECE  3BA7               	subwfb	(___aldiv@dividend+3)^(0+128),f
  9933  1ECF  142B               	bsf	___aldiv@quotient^(0+128),0
  9934  1ED0                     l3720:	
  9935  1ED0  3001               	movlw	1
  9936  1ED1                     u4595:	
  9937  1ED1  36A3               	lsrf	(___aldiv@divisor+3)^(0+128),f
  9938  1ED2  0CA2               	rrf	(___aldiv@divisor+2)^(0+128),f
  9939  1ED3  0CA1               	rrf	(___aldiv@divisor+1)^(0+128),f
  9940  1ED4  0CA0               	rrf	___aldiv@divisor^(0+128),f
  9941  1ED5  0B89               	decfsz	9,f
  9942  1ED6  2ED1               	goto	u4595
  9943  1ED7  3001               	movlw	1
  9944  1ED8  02A9               	subwf	___aldiv@counter^(0+128),f
  9945  1ED9  1D03               	btfss	3,2
  9946  1EDA  2EB0               	goto	l3712
  9947  1EDB                     l3724:	
  9948  1EDB  082A               	movf	___aldiv@sign^(0+128),w
  9949  1EDC  1903               	btfsc	3,2
  9950  1EDD  2EE9               	goto	l3728
  9951  1EDE  09AB               	comf	___aldiv@quotient^(0+128),f
  9952  1EDF  09AC               	comf	(___aldiv@quotient+1)^(0+128),f
  9953  1EE0  09AD               	comf	(___aldiv@quotient+2)^(0+128),f
  9954  1EE1  09AE               	comf	(___aldiv@quotient+3)^(0+128),f
  9955  1EE2  0AAB               	incf	___aldiv@quotient^(0+128),f
  9956  1EE3  1903               	skipnz
  9957  1EE4  0AAC               	incf	(___aldiv@quotient+1)^(0+128),f
  9958  1EE5  1903               	skipnz
  9959  1EE6  0AAD               	incf	(___aldiv@quotient+2)^(0+128),f
  9960  1EE7  1903               	skipnz
  9961  1EE8  0AAE               	incf	(___aldiv@quotient+3)^(0+128),f
  9962  1EE9                     l3728:	
  9963  1EE9  082E               	movf	(___aldiv@quotient+3)^(0+128),w
  9964  1EEA  00A3               	movwf	(?___aldiv+3)^(0+128)
  9965  1EEB  082D               	movf	(___aldiv@quotient+2)^(0+128),w
  9966  1EEC  00A2               	movwf	(?___aldiv+2)^(0+128)
  9967  1EED  082C               	movf	(___aldiv@quotient+1)^(0+128),w
  9968  1EEE  00A1               	movwf	(?___aldiv+1)^(0+128)
  9969  1EEF  082B               	movf	___aldiv@quotient^(0+128),w
  9970  1EF0  00A0               	movwf	?___aldiv^(0+128)
  9971  1EF1  0008               	return
  9972  1EF2                     __end_of___aldiv:	
  9973                           
  9974                           	psect	text33
  9975  1989                     __ptext33:	
  9976 ;; *************** function _Update_PWM *****************
  9977 ;; Defined at:
  9978 ;;		line 1175 in file "main.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;  setwsduty       2   51[BANK1 ] unsigned int 
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;  Dutycnt         2   57[BANK1 ] unsigned int 
  9983 ;;  Temp1           2   55[BANK1 ] unsigned int 
  9984 ;; Return value:  Size  Location     Type
  9985 ;;		None               void
  9986 ;; Registers used:
  9987 ;;		wreg, status,2, status,0
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/0
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9993 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9994 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;Total ram usage:        8 bytes
  9998 ;; Hardware stack levels used:    1
  9999 ;; Hardware stack levels required when called:    3
 10000 ;; This function calls:
 10001 ;;		Nothing
 10002 ;; This function is called by:
 10003 ;;		_Adaptive_base_pid
 10004 ;;		_main
 10005 ;;		_key_application
 10006 ;;		_detect_display_error
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           
 10011                           ;psect for function _Update_PWM
 10012  1989                     _Update_PWM:	
 10013                           
 10014                           ;main.c: 1177: unsigned int Temp1=0x00, Dutycnt=0;
 10015                           
 10016                           ;incstack = 0
 10017                           ; Regs used in _Update_PWM: [wreg+status,2+status,0]
 10018  1989  0021               	movlb	1	; select bank1
 10019  198A  01D7               	clrf	Update_PWM@Temp1^(0+128)
 10020  198B  01D8               	clrf	(Update_PWM@Temp1+1)^(0+128)
 10021  198C  01D9               	clrf	Update_PWM@Dutycnt^(0+128)
 10022  198D  01DA               	clrf	(Update_PWM@Dutycnt+1)^(0+128)
 10023                           
 10024                           ;main.c: 1178: Dutycnt=setwsduty;
 10025  198E  0854               	movf	(Update_PWM@setwsduty+1)^(0+128),w
 10026  198F  01DA               	clrf	(Update_PWM@Dutycnt+1)^(0+128)
 10027  1990  07DA               	addwf	(Update_PWM@Dutycnt+1)^(0+128),f
 10028  1991  0853               	movf	Update_PWM@setwsduty^(0+128),w
 10029  1992  01D9               	clrf	Update_PWM@Dutycnt^(0+128)
 10030  1993  07D9               	addwf	Update_PWM@Dutycnt^(0+128),f
 10031                           
 10032                           ;main.c: 1179: CCP1CONbits.DC1B=Dutycnt;
 10033  1994  0859               	movf	Update_PWM@Dutycnt^(0+128),w
 10034  1995  00D5               	movwf	??_Update_PWM^(0+128)
 10035  1996  0ED5               	swapf	??_Update_PWM^(0+128),f
 10036  1997  0025               	movlb	5	; select bank5
 10037  1998  0813               	movf	19,w	;volatile
 10038  1999  0021               	movlb	1	; select bank1
 10039  199A  0655               	xorwf	??_Update_PWM^(0+128),w
 10040  199B  39CF               	andlw	-49
 10041  199C  0655               	xorwf	??_Update_PWM^(0+128),w
 10042  199D  0025               	movlb	5	; select bank5
 10043  199E  0093               	movwf	19	;volatile
 10044                           
 10045                           ;main.c: 1180: Temp1=Dutycnt >> 2;
 10046  199F  0021               	movlb	1	; select bank1
 10047  19A0  085A               	movf	(Update_PWM@Dutycnt+1)^(0+128),w
 10048  19A1  00D6               	movwf	(??_Update_PWM^(0+128)+1)
 10049  19A2  0859               	movf	Update_PWM@Dutycnt^(0+128),w
 10050  19A3  00D5               	movwf	??_Update_PWM^(0+128)
 10051  19A4  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
 10052  19A5  0CD5               	rrf	??_Update_PWM^(0+128),f
 10053  19A6  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
 10054  19A7  0CD5               	rrf	??_Update_PWM^(0+128),f
 10055  19A8  0855               	movf	??_Update_PWM^(0+128),w
 10056  19A9  00D7               	movwf	Update_PWM@Temp1^(0+128)
 10057  19AA  0856               	movf	(??_Update_PWM+1)^(0+128),w
 10058  19AB  00D8               	movwf	(Update_PWM@Temp1+1)^(0+128)
 10059                           
 10060                           ;main.c: 1181: CCPR1L=Temp1;
 10061  19AC  0857               	movf	Update_PWM@Temp1^(0+128),w
 10062  19AD  0025               	movlb	5	; select bank5
 10063  19AE  0091               	movwf	17	;volatile
 10064  19AF  0008               	return
 10065  19B0                     __end_of_Update_PWM:	
 10066                           
 10067                           	psect	intentry
 10068  0004                     __pintentry:	
 10069 ;; *************** function _ISR_Function *****************
 10070 ;; Defined at:
 10071 ;;		line 41 in file "main.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;		None
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;		None
 10076 ;; Return value:  Size  Location     Type
 10077 ;;		None               void
 10078 ;; Registers used:
 10079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10087 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10088 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10089 ;;Total ram usage:       11 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:    2
 10092 ;; This function calls:
 10093 ;;		_Display
 10094 ;;		i1___aldiv
 10095 ;;		i1___ftadd
 10096 ;;		i1___ftdiv
 10097 ;;		i1___ftmul
 10098 ;;		i1___fttol
 10099 ;;		i1___lwtoft
 10100 ;; This function is called by:
 10101 ;;		Interrupt level 1
 10102 ;; This function uses a non-reentrant model
 10103 ;;
 10104                           
 10105  0004                     _ISR_Function:	
 10106                           
 10107                           ;incstack = 0
 10108                           ; Regs used in _ISR_Function: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10109  0004  147E               	bsf	126,0	;set compiler interrupt flag
 10110  0005  3180               	pagesel	$
 10111  0006  0020               	movlb	0	; select bank0
 10112  0007  087F               	movf	127,w
 10113  0008  00D3               	movwf	??_ISR_Function+8
 10114                           
 10115                           ;main.c: 43: if(INTCONbits.TMR0IF==1)
 10116  0009  1D0B               	btfss	11,2	;volatile
 10117  000A  2908               	goto	i1l5026
 10118                           
 10119                           ;main.c: 44: {
 10120                           ;main.c: 45: INTCONbits.TMR0IF=0;
 10121  000B  110B               	bcf	11,2	;volatile
 10122                           
 10123                           ;main.c: 46: TMR0=0x00;
 10124  000C  0195               	clrf	21	;volatile
 10125                           
 10126                           ;main.c: 47: updatedispf=0;
 10127  000D  0023               	movlb	3	; select bank3
 10128  000E  01DC               	clrf	_updatedispf^(0+384)	;volatile
 10129                           
 10130                           ;main.c: 48: Display();
 10131  000F  3185  2558  3180   	fcall	_Display
 10132                           
 10133                           ;main.c: 49: count_1ms++;
 10134  0012  3001               	movlw	1
 10135  0013  0023               	movlb	3	; select bank3
 10136  0014  07B2               	addwf	_count_1ms^(0+384),f	;volatile
 10137  0015  3000               	movlw	0
 10138  0016  3DB3               	addwfc	(_count_1ms+1)^(0+384),f	;volatile
 10139                           
 10140                           ;main.c: 50: count_2ms++;
 10141  0017  3001               	movlw	1
 10142  0018  0020               	movlb	0	; select bank0
 10143  0019  00CB               	movwf	??_ISR_Function
 10144  001A  084B               	movf	??_ISR_Function,w
 10145  001B  0022               	movlb	2	; select bank2
 10146  001C  07B9               	addwf	_count_2ms^(0+256),f	;volatile
 10147                           
 10148                           ;main.c: 51: count_1msec++;
 10149  001D  3001               	movlw	1
 10150  001E  0020               	movlb	0	; select bank0
 10151  001F  00CB               	movwf	??_ISR_Function
 10152  0020  084B               	movf	??_ISR_Function,w
 10153  0021  0022               	movlb	2	; select bank2
 10154  0022  07B8               	addwf	_count_1msec^(0+256),f
 10155                           
 10156                           ;main.c: 55: if(motor_acceleratefg==1)
 10157  0023  084A               	movf	_motor_acceleratefg^(0+256),w
 10158  0024  3A01               	xorlw	1
 10159  0025  1D03               	skipz
 10160  0026  283A               	goto	i1l4932
 10161                           
 10162                           ;main.c: 56: {
 10163                           ;main.c: 57: up_count_motor++;
 10164  0027  3001               	movlw	1
 10165  0028  0023               	movlb	3	; select bank3
 10166  0029  07D0               	addwf	_up_count_motor^(0+384),f
 10167  002A  3000               	movlw	0
 10168  002B  3DD1               	addwfc	(_up_count_motor+1)^(0+384),f
 10169                           
 10170                           ;main.c: 58: if(up_count_motor > 1000)
 10171  002C  3003               	movlw	3
 10172  002D  0251               	subwf	(_up_count_motor+1)^(0+384),w
 10173  002E  30E9               	movlw	233
 10174  002F  1903               	skipnz
 10175  0030  0250               	subwf	_up_count_motor^(0+384),w
 10176  0031  1C03               	skipc
 10177  0032  283A               	goto	i1l4932
 10178                           
 10179                           ;main.c: 59: {
 10180                           ;main.c: 60: up_count_motor=0;
 10181  0033  01D0               	clrf	_up_count_motor^(0+384)
 10182  0034  01D1               	clrf	(_up_count_motor+1)^(0+384)
 10183                           
 10184                           ;main.c: 61: motor_acceleratefg=0;
 10185  0035  0022               	movlb	2	; select bank2
 10186  0036  01CA               	clrf	_motor_acceleratefg^(0+256)
 10187                           
 10188                           ;main.c: 62: motor_continuefg=1;
 10189  0037  0023               	movlb	3	; select bank3
 10190  0038  01D8               	clrf	_motor_continuefg^(0+384)
 10191  0039  0AD8               	incf	_motor_continuefg^(0+384),f
 10192  003A                     i1l4932:	
 10193                           
 10194                           ;main.c: 63: }
 10195                           ;main.c: 64: }
 10196                           ;main.c: 66: if(RCSTAbits.FERR==1 || RCSTAbits.OERR==1)
 10197  003A  0023               	movlb	3	; select bank3
 10198  003B  191D               	btfsc	29,2	;volatile
 10199  003C  283F               	goto	i1l552
 10200  003D  1C9D               	btfss	29,1	;volatile
 10201  003E  2843               	goto	i1l4936
 10202  003F                     i1l552:	
 10203                           
 10204                           ;main.c: 67: {
 10205                           ;main.c: 68: RCSTAbits.SPEN=0;
 10206  003F  139D               	bcf	29,7	;volatile
 10207                           
 10208                           ;main.c: 69: RCSTAbits.CREN=0;
 10209  0040  121D               	bcf	29,4	;volatile
 10210                           
 10211                           ;main.c: 70: RCSTAbits.SPEN=1;
 10212  0041  179D               	bsf	29,7	;volatile
 10213                           
 10214                           ;main.c: 71: RCSTAbits.CREN=1;
 10215  0042  161D               	bsf	29,4	;volatile
 10216  0043                     i1l4936:	
 10217                           
 10218                           ;main.c: 72: }
 10219                           ;main.c: 73: if(count_1ms>=500)
 10220  0043  3001               	movlw	1
 10221  0044  0233               	subwf	(_count_1ms+1)^(0+384),w	;volatile
 10222  0045  30F4               	movlw	244
 10223  0046  1903               	skipnz
 10224  0047  0232               	subwf	_count_1ms^(0+384),w	;volatile
 10225  0048  1C03               	skipc
 10226  0049  28A3               	goto	i1l4984
 10227                           
 10228                           ;main.c: 74: {
 10229                           ;main.c: 75: count_1ms=0;
 10230  004A  01B2               	clrf	_count_1ms^(0+384)	;volatile
 10231  004B  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
 10232                           
 10233                           ;main.c: 76: comm_error_count++;
 10234  004C  3001               	movlw	1
 10235  004D  0020               	movlb	0	; select bank0
 10236  004E  00CB               	movwf	??_ISR_Function
 10237  004F  084B               	movf	??_ISR_Function,w
 10238  0050  0022               	movlb	2	; select bank2
 10239  0051  07B7               	addwf	_comm_error_count^(0+256),f	;volatile
 10240                           
 10241                           ;main.c: 78: if(gaschkfg == 1)
 10242  0052  0841               	movf	_gaschkfg^(0+256),w
 10243  0053  3A01               	xorlw	1
 10244  0054  1D03               	skipz
 10245  0055  2883               	goto	i1l4972
 10246                           
 10247                           ;main.c: 79: {
 10248                           ;main.c: 80: if(igascntr != 0)
 10249  0056  0023               	movlb	3	; select bank3
 10250  0057  083B               	movf	(_igascntr+1)^(0+384),w
 10251  0058  043A               	iorwf	_igascntr^(0+384),w
 10252  0059  1903               	skipnz
 10253  005A  2860               	goto	i1l4948
 10254                           
 10255                           ;main.c: 81: {
 10256                           ;main.c: 82: igascntr--;
 10257  005B  3001               	movlw	1
 10258  005C  02BA               	subwf	_igascntr^(0+384),f
 10259  005D  3000               	movlw	0
 10260  005E  3BBB               	subwfb	(_igascntr+1)^(0+384),f
 10261                           
 10262                           ;main.c: 83: }else
 10263  005F  2871               	goto	i1l4966
 10264  0060                     i1l4948:	
 10265                           
 10266                           ;main.c: 84: {
 10267                           ;main.c: 85: igascntr = 0;
 10268  0060  01BA               	clrf	_igascntr^(0+384)
 10269  0061  01BB               	clrf	(_igascntr+1)^(0+384)
 10270                           
 10271                           ;main.c: 86: gaschkfg = 0;
 10272  0062  0022               	movlb	2	; select bank2
 10273  0063  01C1               	clrf	_gaschkfg^(0+256)
 10274                           
 10275                           ;main.c: 87: TypeU.TypeS.gason =0;
 10276  0064  0020               	movlb	0	; select bank0
 10277  0065  11E7               	bcf	_TypeU,3
 10278                           
 10279                           ;main.c: 88: PORTCbits.RC3 =0;
 10280  0066  118E               	bcf	14,3	;volatile
 10281                           
 10282                           ;main.c: 89: TypeU.TypeS.wirespeed=1;
 10283  0067  1467               	bsf	_TypeU,0
 10284                           
 10285                           ;main.c: 90: TypeU.TypeS.amp=0;
 10286  0068  1068               	bcf	_TypeU+1,0
 10287                           
 10288                           ;main.c: 91: TypeU.TypeS.thickness=0;
 10289  0069  10E7               	bcf	_TypeU,1
 10290                           
 10291                           ;main.c: 92: TypeDP.DPGROUP[0]=0x00;
 10292  006A  01EB               	clrf	_TypeDP
 10293                           
 10294                           ;main.c: 93: TypeDP.TypeD.digitdp2 =1;
 10295  006B  14EB               	bsf	_TypeDP,1
 10296                           
 10297                           ;main.c: 94: TypeDP.TypeD.digitdp5 =1;
 10298  006C  166B               	bsf	_TypeDP,4
 10299                           
 10300                           ;main.c: 95: dispupdatef =1;
 10301  006D  3001               	movlw	1
 10302  006E  00CB               	movwf	??_ISR_Function
 10303  006F  084B               	movf	??_ISR_Function,w
 10304  0070  00EF               	movwf	_dispupdatef	;volatile
 10305  0071                     i1l4966:	
 10306                           
 10307                           ;main.c: 96: }
 10308                           ;main.c: 97: diswin1[0]= 0x11;
 10309  0071  3011               	movlw	17
 10310  0072  0020               	movlb	0	; select bank0
 10311  0073  00CB               	movwf	??_ISR_Function
 10312  0074  084B               	movf	??_ISR_Function,w
 10313  0075  0022               	movlb	2	; select bank2
 10314  0076  00E4               	movwf	_diswin1^(0+256)
 10315                           
 10316                           ;main.c: 98: diswin1[1]= 0x0B;
 10317  0077  300B               	movlw	11
 10318  0078  0020               	movlb	0	; select bank0
 10319  0079  00CB               	movwf	??_ISR_Function
 10320  007A  084B               	movf	??_ISR_Function,w
 10321  007B  0022               	movlb	2	; select bank2
 10322  007C  00E5               	movwf	(_diswin1^(0+256)+1)
 10323                           
 10324                           ;main.c: 99: diswin1[2]= 0x1D;
 10325  007D  301D               	movlw	29
 10326  007E  0020               	movlb	0	; select bank0
 10327  007F  00CB               	movwf	??_ISR_Function
 10328  0080  084B               	movf	??_ISR_Function,w
 10329  0081  0022               	movlb	2	; select bank2
 10330  0082  00E6               	movwf	(_diswin1^(0+256)+2)
 10331  0083                     i1l4972:	
 10332                           
 10333                           ;main.c: 100: }
 10334                           ;main.c: 102: if(weldmode=='P' || weldmode=='G')
 10335  0083  0020               	movlb	0	; select bank0
 10336  0084  0866               	movf	_weldmode,w	;volatile
 10337  0085  3A50               	xorlw	80
 10338  0086  1903               	skipnz
 10339  0087  288C               	goto	i1l4976
 10340  0088  0866               	movf	_weldmode,w	;volatile
 10341  0089  3A47               	xorlw	71
 10342  008A  1D03               	skipz
 10343  008B  28A0               	goto	i1l4982
 10344  008C                     i1l4976:	
 10345                           
 10346                           ;main.c: 103: {
 10347                           ;main.c: 104: if(comm_error_count>3)
 10348  008C  3004               	movlw	4
 10349  008D  0022               	movlb	2	; select bank2
 10350  008E  0237               	subwf	_comm_error_count^(0+256),w	;volatile
 10351  008F  1C03               	skipc
 10352  0090  289E               	goto	i1l4980
 10353                           
 10354                           ;main.c: 105: {
 10355                           ;main.c: 106: error8=1;
 10356  0091  3001               	movlw	1
 10357  0092  0020               	movlb	0	; select bank0
 10358  0093  00CB               	movwf	??_ISR_Function
 10359  0094  084B               	movf	??_ISR_Function,w
 10360  0095  0022               	movlb	2	; select bank2
 10361  0096  00BE               	movwf	_error8^(0+256)	;volatile
 10362                           
 10363                           ;main.c: 107: comm_error_count=4;
 10364  0097  3004               	movlw	4
 10365  0098  0020               	movlb	0	; select bank0
 10366  0099  00CB               	movwf	??_ISR_Function
 10367  009A  084B               	movf	??_ISR_Function,w
 10368  009B  0022               	movlb	2	; select bank2
 10369  009C  00B7               	movwf	_comm_error_count^(0+256)	;volatile
 10370                           
 10371                           ;main.c: 108: }
 10372  009D  28A3               	goto	i1l4984
 10373  009E                     i1l4980:	
 10374                           
 10375                           ;main.c: 109: else
 10376                           ;main.c: 110: error8=0;
 10377  009E  01BE               	clrf	_error8^(0+256)	;volatile
 10378                           
 10379                           ;main.c: 111: }
 10380  009F  28A3               	goto	i1l4984
 10381  00A0                     i1l4982:	
 10382                           
 10383                           ;main.c: 112: else
 10384                           ;main.c: 113: {
 10385                           ;main.c: 114: error8=0;
 10386  00A0  0022               	movlb	2	; select bank2
 10387  00A1  01BE               	clrf	_error8^(0+256)	;volatile
 10388                           
 10389                           ;main.c: 115: comm_error_count=0;
 10390  00A2  01B7               	clrf	_comm_error_count^(0+256)	;volatile
 10391  00A3                     i1l4984:	
 10392                           
 10393                           ;main.c: 116: }
 10394                           ;main.c: 132: }
 10395                           ;main.c: 133: if(count_2ms >=1)
 10396  00A3  0022               	movlb	2	; select bank2
 10397  00A4  0839               	movf	_count_2ms^(0+256),w	;volatile
 10398  00A5  1903               	btfsc	3,2
 10399  00A6  28AE               	goto	i1l4990
 10400                           
 10401                           ;main.c: 134: {
 10402                           ;main.c: 135: count_2ms=0;
 10403  00A7  01B9               	clrf	_count_2ms^(0+256)	;volatile
 10404                           
 10405                           ;main.c: 136: read_enc1f=1;
 10406  00A8  3001               	movlw	1
 10407  00A9  0020               	movlb	0	; select bank0
 10408  00AA  00CB               	movwf	??_ISR_Function
 10409  00AB  084B               	movf	??_ISR_Function,w
 10410  00AC  0022               	movlb	2	; select bank2
 10411  00AD  00D3               	movwf	_read_enc1f^(0+256)	;volatile
 10412  00AE                     i1l4990:	
 10413                           
 10414                           ;main.c: 137: }
 10415                           ;main.c: 139: if(count_1msec >= 10)
 10416  00AE  300A               	movlw	10
 10417  00AF  0238               	subwf	_count_1msec^(0+256),w
 10418  00B0  1C03               	skipc
 10419  00B1  2908               	goto	i1l5026
 10420                           
 10421                           ;main.c: 140: {
 10422                           ;main.c: 141: count_1msec=0;
 10423  00B2  01B8               	clrf	_count_1msec^(0+256)
 10424                           
 10425                           ;main.c: 142: if(kpressread==0)
 10426  00B3  08C2               	movf	_kpressread^(0+256),f
 10427  00B4  1D03               	skipz
 10428  00B5  28BF               	goto	i1l5000
 10429                           
 10430                           ;main.c: 143: {
 10431                           ;main.c: 144: torchstatus1=PORTCbits.RC5;
 10432  00B6  3000               	movlw	0
 10433  00B7  0020               	movlb	0	; select bank0
 10434  00B8  1A8E               	btfsc	14,5	;volatile
 10435  00B9  3001               	movlw	1
 10436  00BA  0022               	movlb	2	; select bank2
 10437  00BB  00D9               	movwf	_torchstatus1^(0+256)
 10438                           
 10439                           ;main.c: 145: kpressread=1;
 10440  00BC  01C2               	clrf	_kpressread^(0+256)
 10441  00BD  0AC2               	incf	_kpressread^(0+256),f
 10442                           
 10443                           ;main.c: 146: }
 10444  00BE  2908               	goto	i1l5026
 10445  00BF                     i1l5000:	
 10446                           
 10447                           ;main.c: 147: else
 10448                           ;main.c: 148: {
 10449                           ;main.c: 149: kpressread=0;
 10450  00BF  01C2               	clrf	_kpressread^(0+256)
 10451                           
 10452                           ;main.c: 150: torchstatus2=PORTCbits.RC5;
 10453  00C0  3000               	movlw	0
 10454  00C1  0020               	movlb	0	; select bank0
 10455  00C2  1A8E               	btfsc	14,5	;volatile
 10456  00C3  3001               	movlw	1
 10457  00C4  0022               	movlb	2	; select bank2
 10458  00C5  00DA               	movwf	_torchstatus2^(0+256)
 10459                           
 10460                           ;main.c: 151: tans =(torchstatus1 == torchstatus2 ? 1:0);
 10461  00C6  0859               	movf	_torchstatus1^(0+256),w
 10462  00C7  065A               	xorwf	_torchstatus2^(0+256),w
 10463  00C8  3000               	movlw	0
 10464  00C9  1903               	skipnz
 10465  00CA  3001               	movlw	1
 10466  00CB  0020               	movlb	0	; select bank0
 10467  00CC  00CB               	movwf	??_ISR_Function
 10468  00CD  084B               	movf	??_ISR_Function,w
 10469  00CE  0022               	movlb	2	; select bank2
 10470  00CF  00D8               	movwf	_tans^(0+256)
 10471                           
 10472                           ;main.c: 152: if(tans==1)
 10473  00D0  0858               	movf	_tans^(0+256),w
 10474  00D1  3A01               	xorlw	1
 10475  00D2  1D03               	skipz
 10476  00D3  28F9               	goto	i1l5020
 10477                           
 10478                           ;main.c: 153: {
 10479                           ;main.c: 154: TORCH=(torchstatus2 == 0 ? 'P':'X');
 10480  00D4  085A               	movf	_torchstatus2^(0+256),w
 10481  00D5  1903               	btfsc	3,2
 10482  00D6  28D9               	goto	i1l5008
 10483  00D7  3058               	movlw	88
 10484  00D8  28DA               	goto	L22
 10485  00D9                     i1l5008:	
 10486  00D9  3050               	movlw	80
 10487  00DA                     L22:	
 10488  00DA  00FC               	movwf	_ISR_Function$1176
 10489  00DB  3000               	movlw	0
 10490  00DC  00FD               	movwf	_ISR_Function$1176+1
 10491  00DD  087C               	movf	_ISR_Function$1176,w
 10492  00DE  0020               	movlb	0	; select bank0
 10493  00DF  00CB               	movwf	??_ISR_Function
 10494  00E0  084B               	movf	??_ISR_Function,w
 10495  00E1  0022               	movlb	2	; select bank2
 10496  00E2  00EC               	movwf	_TORCH^(0+256)
 10497                           
 10498                           ;main.c: 155: if(TORCH=='P')
 10499  00E3  086C               	movf	_TORCH^(0+256),w
 10500  00E4  3A50               	xorlw	80
 10501  00E5  1D03               	skipz
 10502  00E6  28F7               	goto	i1l572
 10503                           
 10504                           ;main.c: 156: {
 10505                           ;main.c: 157: if((motor_acceleratefg==0) && (motor_continuefg==0))
 10506  00E7  08CA               	movf	_motor_acceleratefg^(0+256),f
 10507  00E8  1D03               	skipz
 10508  00E9  28F4               	goto	i1l5018
 10509  00EA  0023               	movlb	3	; select bank3
 10510  00EB  08D8               	movf	_motor_continuefg^(0+384),f
 10511  00EC  1D03               	skipz
 10512  00ED  28F4               	goto	i1l5018
 10513                           
 10514                           ;main.c: 158: {
 10515                           ;main.c: 159: motor_acceleratefg=1;
 10516  00EE  0022               	movlb	2	; select bank2
 10517  00EF  01CA               	clrf	_motor_acceleratefg^(0+256)
 10518  00F0  0ACA               	incf	_motor_acceleratefg^(0+256),f
 10519                           
 10520                           ;main.c: 160: up_count_motor=0;
 10521  00F1  0023               	movlb	3	; select bank3
 10522  00F2  01D0               	clrf	_up_count_motor^(0+384)
 10523  00F3  01D1               	clrf	(_up_count_motor+1)^(0+384)
 10524  00F4                     i1l5018:	
 10525                           
 10526                           ;main.c: 161: }
 10527                           ;main.c: 162: wfstatusu.wfstatuss.torchonstatus=1;
 10528  00F4  0020               	movlb	0	; select bank0
 10529  00F5  14EE               	bsf	_wfstatusu,1
 10530                           
 10531                           ;main.c: 163: }
 10532  00F6  28F9               	goto	i1l5020
 10533  00F7                     i1l572:	
 10534                           
 10535                           ;main.c: 164: else
 10536                           ;main.c: 165: {
 10537                           ;main.c: 166: wfstatusu.wfstatuss.torchonstatus=0;
 10538  00F7  0020               	movlb	0	; select bank0
 10539  00F8  10EE               	bcf	_wfstatusu,1
 10540  00F9                     i1l5020:	
 10541                           
 10542                           ;main.c: 167: }
 10543                           ;main.c: 168: }
 10544                           ;main.c: 169: if(prevTORCH != TORCH)
 10545  00F9  0022               	movlb	2	; select bank2
 10546  00FA  086D               	movf	_prevTORCH^(0+256),w
 10547  00FB  066C               	xorwf	_TORCH^(0+256),w
 10548  00FC  1903               	skipnz
 10549  00FD  2901               	goto	i1l5024
 10550                           
 10551                           ;main.c: 170: {
 10552                           ;main.c: 171: count_1ms=0;
 10553  00FE  0023               	movlb	3	; select bank3
 10554  00FF  01B2               	clrf	_count_1ms^(0+384)	;volatile
 10555  0100  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
 10556  0101                     i1l5024:	
 10557                           
 10558                           ;main.c: 174: }
 10559                           ;main.c: 175: prevTORCH = TORCH;
 10560  0101  0022               	movlb	2	; select bank2
 10561  0102  086C               	movf	_TORCH^(0+256),w
 10562  0103  0020               	movlb	0	; select bank0
 10563  0104  00CB               	movwf	??_ISR_Function
 10564  0105  084B               	movf	??_ISR_Function,w
 10565  0106  0022               	movlb	2	; select bank2
 10566  0107  00ED               	movwf	_prevTORCH^(0+256)
 10567  0108                     i1l5026:	
 10568                           
 10569                           ;main.c: 176: }
 10570                           ;main.c: 177: }
 10571                           ;main.c: 178: }
 10572                           ;main.c: 180: if(PIE1bits.TMR2IE & PIR1bits.TMR2IF)
 10573  0108  0020               	movlb	0	; select bank0
 10574  0109  0C11               	rrf	17,w	;volatile
 10575  010A  3901               	andlw	1
 10576  010B  00CB               	movwf	??_ISR_Function
 10577  010C  0021               	movlb	1	; select bank1
 10578  010D  0C11               	rrf	17,w	;volatile
 10579  010E  3901               	andlw	1
 10580  010F  0020               	movlb	0	; select bank0
 10581  0110  054B               	andwf	??_ISR_Function,w
 10582  0111  1903               	btfsc	3,2
 10583  0112  2915               	goto	i1l5030
 10584                           
 10585                           ;main.c: 181: {
 10586                           ;main.c: 182: PIR1bits.TMR2IF=0;
 10587  0113  1091               	bcf	17,1	;volatile
 10588                           
 10589                           ;main.c: 183: return;
 10590  0114  2CD3               	goto	i1l577
 10591  0115                     i1l5030:	
 10592                           
 10593                           ;main.c: 184: }
 10594                           ;main.c: 185: if(PIE1bits.TXIE & PIR1bits.TXIF)
 10595  0115  0E11               	swapf	17,w	;volatile
 10596  0116  3901               	andlw	1
 10597  0117  00CB               	movwf	??_ISR_Function
 10598  0118  0021               	movlb	1	; select bank1
 10599  0119  0E11               	swapf	17,w	;volatile
 10600  011A  3901               	andlw	1
 10601  011B  0020               	movlb	0	; select bank0
 10602  011C  054B               	andwf	??_ISR_Function,w
 10603  011D  1903               	btfsc	3,2
 10604  011E  2921               	goto	i1l5034
 10605                           
 10606                           ;main.c: 186: {
 10607                           ;main.c: 187: PIR1bits.TXIF=0;
 10608  011F  1211               	bcf	17,4	;volatile
 10609                           
 10610                           ;main.c: 188: return;
 10611  0120  2CD3               	goto	i1l577
 10612  0121                     i1l5034:	
 10613                           
 10614                           ;main.c: 189: }
 10615                           ;main.c: 191: if(PIE2bits.CCP2IE & PIR2bits.CCP2IF)
 10616  0121  0812               	movf	18,w	;volatile
 10617  0122  3901               	andlw	1
 10618  0123  00CB               	movwf	??_ISR_Function
 10619  0124  0021               	movlb	1	; select bank1
 10620  0125  0812               	movf	18,w	;volatile
 10621  0126  3901               	andlw	1
 10622  0127  0020               	movlb	0	; select bank0
 10623  0128  054B               	andwf	??_ISR_Function,w
 10624  0129  1903               	btfsc	3,2
 10625  012A  2AE4               	goto	i1l5110
 10626                           
 10627                           ;main.c: 192: {
 10628                           ;main.c: 193: PIR2bits.CCP2IF =0;
 10629  012B  1012               	bcf	18,0	;volatile
 10630                           
 10631                           ;main.c: 194: if(Count == 0)
 10632  012C  0022               	movlb	2	; select bank2
 10633  012D  08AC               	movf	_Count^(0+256),f	;volatile
 10634  012E  1D03               	skipz
 10635  012F  2945               	goto	i1l5042
 10636                           
 10637                           ;main.c: 195: {
 10638                           ;main.c: 196: OneH = CCPR2H;
 10639  0130  0025               	movlb	5	; select bank5
 10640  0131  0819               	movf	25,w	;volatile
 10641  0132  0020               	movlb	0	; select bank0
 10642  0133  00CB               	movwf	??_ISR_Function
 10643  0134  084B               	movf	??_ISR_Function,w
 10644  0135  0022               	movlb	2	; select bank2
 10645  0136  00AD               	movwf	_OneH^(0+256)	;volatile
 10646                           
 10647                           ;main.c: 197: OneL = CCPR2L;
 10648  0137  0025               	movlb	5	; select bank5
 10649  0138  0818               	movf	24,w	;volatile
 10650  0139  0020               	movlb	0	; select bank0
 10651  013A  00CB               	movwf	??_ISR_Function
 10652  013B  084B               	movf	??_ISR_Function,w
 10653  013C  0022               	movlb	2	; select bank2
 10654  013D  00AE               	movwf	_OneL^(0+256)	;volatile
 10655                           
 10656                           ;main.c: 198: Count = 1;
 10657  013E  3001               	movlw	1
 10658  013F  0020               	movlb	0	; select bank0
 10659  0140  00CB               	movwf	??_ISR_Function
 10660  0141  084B               	movf	??_ISR_Function,w
 10661  0142  0022               	movlb	2	; select bank2
 10662  0143  00AC               	movwf	_Count^(0+256)	;volatile
 10663                           
 10664                           ;main.c: 199: }
 10665  0144  2AE4               	goto	i1l5110
 10666  0145                     i1l5042:	
 10667                           
 10668                           ;main.c: 200: else
 10669                           ;main.c: 201: {
 10670                           ;main.c: 202: TwoH = CCPR2H;
 10671  0145  0025               	movlb	5	; select bank5
 10672  0146  0819               	movf	25,w	;volatile
 10673  0147  0020               	movlb	0	; select bank0
 10674  0148  00CB               	movwf	??_ISR_Function
 10675  0149  084B               	movf	??_ISR_Function,w
 10676  014A  0022               	movlb	2	; select bank2
 10677  014B  00AF               	movwf	_TwoH^(0+256)	;volatile
 10678                           
 10679                           ;main.c: 203: TwoL = CCPR2L;
 10680  014C  0025               	movlb	5	; select bank5
 10681  014D  0818               	movf	24,w	;volatile
 10682  014E  0020               	movlb	0	; select bank0
 10683  014F  00CB               	movwf	??_ISR_Function
 10684  0150  084B               	movf	??_ISR_Function,w
 10685  0151  0022               	movlb	2	; select bank2
 10686  0152  00B0               	movwf	_TwoL^(0+256)	;volatile
 10687                           
 10688                           ;main.c: 204: TMR1H = 0x00;
 10689  0153  0020               	movlb	0	; select bank0
 10690  0154  0197               	clrf	23	;volatile
 10691                           
 10692                           ;main.c: 205: TMR1L = 0x00;
 10693  0155  0196               	clrf	22	;volatile
 10694                           
 10695                           ;main.c: 206: Count = 0;
 10696  0156  0022               	movlb	2	; select bank2
 10697  0157  01AC               	clrf	_Count^(0+256)	;volatile
 10698                           
 10699                           ;main.c: 207: Two = TwoH;
 10700  0158  082F               	movf	_TwoH^(0+256),w	;volatile
 10701  0159  0020               	movlb	0	; select bank0
 10702  015A  00CB               	movwf	??_ISR_Function
 10703  015B  01CC               	clrf	??_ISR_Function+1
 10704  015C  084B               	movf	??_ISR_Function,w
 10705  015D  0023               	movlb	3	; select bank3
 10706  015E  00B0               	movwf	_Two^(0+384)	;volatile
 10707  015F  0020               	movlb	0	; select bank0
 10708  0160  084C               	movf	??_ISR_Function+1,w
 10709  0161  0023               	movlb	3	; select bank3
 10710  0162  00B1               	movwf	(_Two+1)^(0+384)	;volatile
 10711                           
 10712                           ;main.c: 208: Two <<= 8;
 10713  0163  3008               	movlw	8
 10714  0164                     u713_25:	
 10715  0164  35B0               	lslf	_Two^(0+384),f	;volatile
 10716  0165  0DB1               	rlf	(_Two+1)^(0+384),f	;volatile
 10717  0166  0B89               	decfsz	9,f
 10718  0167  2964               	goto	u713_25
 10719                           
 10720                           ;main.c: 209: Two |= TwoL;
 10721  0168  0022               	movlb	2	; select bank2
 10722  0169  0830               	movf	_TwoL^(0+256),w	;volatile
 10723  016A  0020               	movlb	0	; select bank0
 10724  016B  00CB               	movwf	??_ISR_Function
 10725  016C  01CC               	clrf	??_ISR_Function+1
 10726  016D  084B               	movf	??_ISR_Function,w
 10727  016E  0023               	movlb	3	; select bank3
 10728  016F  04B0               	iorwf	_Two^(0+384),f	;volatile
 10729  0170  0020               	movlb	0	; select bank0
 10730  0171  084C               	movf	??_ISR_Function+1,w
 10731  0172  0023               	movlb	3	; select bank3
 10732  0173  04B1               	iorwf	(_Two+1)^(0+384),f	;volatile
 10733                           
 10734                           ;main.c: 210: One = OneH;
 10735  0174  0022               	movlb	2	; select bank2
 10736  0175  082D               	movf	_OneH^(0+256),w	;volatile
 10737  0176  0020               	movlb	0	; select bank0
 10738  0177  00CB               	movwf	??_ISR_Function
 10739  0178  01CC               	clrf	??_ISR_Function+1
 10740  0179  084B               	movf	??_ISR_Function,w
 10741  017A  0023               	movlb	3	; select bank3
 10742  017B  00AC               	movwf	_One^(0+384)	;volatile
 10743  017C  0020               	movlb	0	; select bank0
 10744  017D  084C               	movf	??_ISR_Function+1,w
 10745  017E  0023               	movlb	3	; select bank3
 10746  017F  00AD               	movwf	(_One+1)^(0+384)	;volatile
 10747                           
 10748                           ;main.c: 211: One <<= 8;
 10749  0180  3008               	movlw	8
 10750  0181                     u714_25:	
 10751  0181  35AC               	lslf	_One^(0+384),f	;volatile
 10752  0182  0DAD               	rlf	(_One+1)^(0+384),f	;volatile
 10753  0183  0B89               	decfsz	9,f
 10754  0184  2981               	goto	u714_25
 10755                           
 10756                           ;main.c: 212: One |= OneL;
 10757  0185  0022               	movlb	2	; select bank2
 10758  0186  082E               	movf	_OneL^(0+256),w	;volatile
 10759  0187  0020               	movlb	0	; select bank0
 10760  0188  00CB               	movwf	??_ISR_Function
 10761  0189  01CC               	clrf	??_ISR_Function+1
 10762  018A  084B               	movf	??_ISR_Function,w
 10763  018B  0023               	movlb	3	; select bank3
 10764  018C  04AC               	iorwf	_One^(0+384),f	;volatile
 10765  018D  0020               	movlb	0	; select bank0
 10766  018E  084C               	movf	??_ISR_Function+1,w
 10767  018F  0023               	movlb	3	; select bank3
 10768  0190  04AD               	iorwf	(_One+1)^(0+384),f	;volatile
 10769                           
 10770                           ;main.c: 213: Total_Count = Two - One;
 10771  0191  092C               	comf	_One^(0+384),w	;volatile
 10772  0192  0020               	movlb	0	; select bank0
 10773  0193  00CB               	movwf	??_ISR_Function
 10774  0194  0023               	movlb	3	; select bank3
 10775  0195  092D               	comf	(_One+1)^(0+384),w	;volatile
 10776  0196  0020               	movlb	0	; select bank0
 10777  0197  00CC               	movwf	??_ISR_Function+1
 10778  0198  0ACB               	incf	??_ISR_Function,f
 10779  0199  1903               	skipnz
 10780  019A  0ACC               	incf	??_ISR_Function+1,f
 10781  019B  0023               	movlb	3	; select bank3
 10782  019C  0830               	movf	_Two^(0+384),w	;volatile
 10783  019D  0020               	movlb	0	; select bank0
 10784  019E  074B               	addwf	??_ISR_Function,w
 10785  019F  0023               	movlb	3	; select bank3
 10786  01A0  00AE               	movwf	_Total_Count^(0+384)	;volatile
 10787  01A1  0831               	movf	(_Two+1)^(0+384),w	;volatile
 10788  01A2  0020               	movlb	0	; select bank0
 10789  01A3  3D4C               	addwfc	??_ISR_Function+1,w
 10790  01A4  0023               	movlb	3	; select bank3
 10791  01A5  00AF               	movwf	(_Total_Count+1)^(0+384)	;volatile
 10792                           
 10793                           ;main.c: 215: pperiod=Total_Count;
 10794  01A6  082F               	movf	(_Total_Count+1)^(0+384),w	;volatile
 10795  01A7  01C1               	clrf	(_pperiod+1)^(0+384)	;volatile
 10796  01A8  07C1               	addwf	(_pperiod+1)^(0+384),f	;volatile
 10797  01A9  082E               	movf	_Total_Count^(0+384),w	;volatile
 10798  01AA  01C0               	clrf	_pperiod^(0+384)	;volatile
 10799  01AB  07C0               	addwf	_pperiod^(0+384),f	;volatile
 10800                           
 10801                           ;main.c: 216: Total_Period=Total_Period+pperiod;
 10802  01AC  0024               	movlb	4	; select bank4
 10803  01AD  0820               	movf	_Total_Period^(0+512),w
 10804  01AE  0020               	movlb	0	; select bank0
 10805  01AF  00CB               	movwf	??_ISR_Function
 10806  01B0  0024               	movlb	4	; select bank4
 10807  01B1  0821               	movf	(_Total_Period+1)^(0+512),w
 10808  01B2  0020               	movlb	0	; select bank0
 10809  01B3  00CC               	movwf	??_ISR_Function+1
 10810  01B4  0024               	movlb	4	; select bank4
 10811  01B5  0822               	movf	(_Total_Period+2)^(0+512),w
 10812  01B6  0020               	movlb	0	; select bank0
 10813  01B7  00CD               	movwf	??_ISR_Function+2
 10814  01B8  0024               	movlb	4	; select bank4
 10815  01B9  0823               	movf	(_Total_Period+3)^(0+512),w
 10816  01BA  0020               	movlb	0	; select bank0
 10817  01BB  00CE               	movwf	??_ISR_Function+3
 10818  01BC  0023               	movlb	3	; select bank3
 10819  01BD  0840               	movf	_pperiod^(0+384),w	;volatile
 10820  01BE  0020               	movlb	0	; select bank0
 10821  01BF  00CF               	movwf	??_ISR_Function+4
 10822  01C0  0023               	movlb	3	; select bank3
 10823  01C1  0841               	movf	(_pperiod+1)^(0+384),w	;volatile
 10824  01C2  0020               	movlb	0	; select bank0
 10825  01C3  00D0               	movwf	??_ISR_Function+5
 10826  01C4  01D1               	clrf	??_ISR_Function+6
 10827  01C5  01D2               	clrf	??_ISR_Function+7
 10828  01C6  084F               	movf	??_ISR_Function+4,w
 10829  01C7  07CB               	addwf	??_ISR_Function,f
 10830  01C8  0850               	movf	??_ISR_Function+5,w
 10831  01C9  3DCC               	addwfc	??_ISR_Function+1,f
 10832  01CA  0851               	movf	??_ISR_Function+6,w
 10833  01CB  3DCD               	addwfc	??_ISR_Function+2,f
 10834  01CC  0852               	movf	??_ISR_Function+7,w
 10835  01CD  3DCE               	addwfc	??_ISR_Function+3,f
 10836  01CE  084E               	movf	??_ISR_Function+3,w
 10837  01CF  0024               	movlb	4	; select bank4
 10838  01D0  00A3               	movwf	(_Total_Period+3)^(0+512)
 10839  01D1  0020               	movlb	0	; select bank0
 10840  01D2  084D               	movf	??_ISR_Function+2,w
 10841  01D3  0024               	movlb	4	; select bank4
 10842  01D4  00A2               	movwf	(_Total_Period+2)^(0+512)
 10843  01D5  0020               	movlb	0	; select bank0
 10844  01D6  084C               	movf	??_ISR_Function+1,w
 10845  01D7  0024               	movlb	4	; select bank4
 10846  01D8  00A1               	movwf	(_Total_Period+1)^(0+512)
 10847  01D9  0020               	movlb	0	; select bank0
 10848  01DA  084B               	movf	??_ISR_Function,w
 10849  01DB  0024               	movlb	4	; select bank4
 10850  01DC  00A0               	movwf	_Total_Period^(0+512)
 10851                           
 10852                           ;main.c: 217: pcount++;
 10853  01DD  3001               	movlw	1
 10854  01DE  0020               	movlb	0	; select bank0
 10855  01DF  00CB               	movwf	??_ISR_Function
 10856  01E0  084B               	movf	??_ISR_Function,w
 10857  01E1  0022               	movlb	2	; select bank2
 10858  01E2  07CB               	addwf	_pcount^(0+256),f
 10859                           
 10860                           ;main.c: 218: if(pcount>=8)
 10861  01E3  3008               	movlw	8
 10862  01E4  024B               	subwf	_pcount^(0+256),w
 10863  01E5  1C03               	skipc
 10864  01E6  2AE4               	goto	i1l5110
 10865                           
 10866                           ;main.c: 219: {
 10867                           ;main.c: 220: pcount=0;
 10868  01E7  01CB               	clrf	_pcount^(0+256)
 10869                           
 10870                           ;main.c: 221: avgpperiod=Total_Period>>4;
 10871  01E8  0024               	movlb	4	; select bank4
 10872  01E9  0820               	movf	_Total_Period^(0+512),w
 10873  01EA  0020               	movlb	0	; select bank0
 10874  01EB  00CB               	movwf	??_ISR_Function
 10875  01EC  0024               	movlb	4	; select bank4
 10876  01ED  0821               	movf	(_Total_Period+1)^(0+512),w
 10877  01EE  0020               	movlb	0	; select bank0
 10878  01EF  00CC               	movwf	??_ISR_Function+1
 10879  01F0  0024               	movlb	4	; select bank4
 10880  01F1  0822               	movf	(_Total_Period+2)^(0+512),w
 10881  01F2  0020               	movlb	0	; select bank0
 10882  01F3  00CD               	movwf	??_ISR_Function+2
 10883  01F4  0024               	movlb	4	; select bank4
 10884  01F5  0823               	movf	(_Total_Period+3)^(0+512),w
 10885  01F6  0020               	movlb	0	; select bank0
 10886  01F7  00CE               	movwf	??_ISR_Function+3
 10887  01F8  3004               	movlw	4
 10888  01F9                     u716_25:	
 10889  01F9  36CE               	lsrf	??_ISR_Function+3,f
 10890  01FA  0CCD               	rrf	??_ISR_Function+2,f
 10891  01FB  0CCC               	rrf	??_ISR_Function+1,f
 10892  01FC  0CCB               	rrf	??_ISR_Function,f
 10893  01FD  0B89               	decfsz	9,f
 10894  01FE  29F9               	goto	u716_25
 10895  01FF  084C               	movf	??_ISR_Function+1,w
 10896  0200  0022               	movlb	2	; select bank2
 10897  0201  01DF               	clrf	(_avgpperiod+1)^(0+256)	;volatile
 10898  0202  07DF               	addwf	(_avgpperiod+1)^(0+256),f	;volatile
 10899  0203  0020               	movlb	0	; select bank0
 10900  0204  084B               	movf	??_ISR_Function,w
 10901  0205  0022               	movlb	2	; select bank2
 10902  0206  01DE               	clrf	_avgpperiod^(0+256)	;volatile
 10903  0207  07DE               	addwf	_avgpperiod^(0+256),f	;volatile
 10904                           
 10905                           ;main.c: 222: pfreq=1000000/avgpperiod;
 10906  0208  085E               	movf	_avgpperiod^(0+256),w	;volatile
 10907  0209  00F0               	movwf	i1___aldiv@divisor
 10908  020A  085F               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 10909  020B  00F1               	movwf	i1___aldiv@divisor+1
 10910  020C  01F2               	clrf	i1___aldiv@divisor+2
 10911  020D  01F3               	clrf	i1___aldiv@divisor+3
 10912  020E  3000               	movlw	0
 10913  020F  00F7               	movwf	i1___aldiv@dividend+3
 10914  0210  300F               	movlw	15
 10915  0211  00F6               	movwf	i1___aldiv@dividend+2
 10916  0212  3042               	movlw	66
 10917  0213  00F5               	movwf	i1___aldiv@dividend+1
 10918  0214  3040               	movlw	64
 10919  0215  00F4               	movwf	i1___aldiv@dividend
 10920  0216  319D  25EE  3180   	fcall	i1___aldiv
 10921  0219  0871               	movf	?i1___aldiv+1,w
 10922  021A  0022               	movlb	2	; select bank2
 10923  021B  01E3               	clrf	(_pfreq+1)^(0+256)	;volatile
 10924  021C  07E3               	addwf	(_pfreq+1)^(0+256),f	;volatile
 10925  021D  0870               	movf	?i1___aldiv,w
 10926  021E  01E2               	clrf	_pfreq^(0+256)	;volatile
 10927  021F  07E2               	addwf	_pfreq^(0+256),f	;volatile
 10928                           
 10929                           ;main.c: 223: Total_Period=0;
 10930  0220  3000               	movlw	0
 10931  0221  0024               	movlb	4	; select bank4
 10932  0222  00A3               	movwf	(_Total_Period+3)^(0+512)
 10933  0223  3000               	movlw	0
 10934  0224  00A2               	movwf	(_Total_Period+2)^(0+512)
 10935  0225  3000               	movlw	0
 10936  0226  00A1               	movwf	(_Total_Period+1)^(0+512)
 10937  0227  3000               	movlw	0
 10938  0228  00A0               	movwf	_Total_Period^(0+512)
 10939                           
 10940                           ;main.c: 225: Tsampling =avgpperiod/1000.0;
 10941  0229  3000               	movlw	0
 10942  022A  0020               	movlb	0	; select bank0
 10943  022B  00A0               	movwf	i1___ftdiv@f2
 10944  022C  307A               	movlw	122
 10945  022D  00A1               	movwf	i1___ftdiv@f2+1
 10946  022E  3044               	movlw	68
 10947  022F  00A2               	movwf	i1___ftdiv@f2+2
 10948  0230  0022               	movlb	2	; select bank2
 10949  0231  085F               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 10950  0232  01F9               	clrf	i1___lwtoft@c+1
 10951  0233  07F9               	addwf	i1___lwtoft@c+1,f
 10952  0234  085E               	movf	_avgpperiod^(0+256),w	;volatile
 10953  0235  01F8               	clrf	i1___lwtoft@c
 10954  0236  07F8               	addwf	i1___lwtoft@c,f
 10955  0237  3199  2105  3180   	fcall	i1___lwtoft
 10956  023A  0878               	movf	?i1___lwtoft,w
 10957  023B  0020               	movlb	0	; select bank0
 10958  023C  00A3               	movwf	i1___ftdiv@f1
 10959  023D  0879               	movf	?i1___lwtoft+1,w
 10960  023E  00A4               	movwf	i1___ftdiv@f1+1
 10961  023F  087A               	movf	?i1___lwtoft+2,w
 10962  0240  00A5               	movwf	i1___ftdiv@f1+2
 10963  0241  3190  2033  3180   	fcall	i1___ftdiv
 10964  0244  0020               	movlb	0	; select bank0
 10965  0245  0820               	movf	?i1___ftdiv,w
 10966  0246  0023               	movlb	3	; select bank3
 10967  0247  00DF               	movwf	_Tsampling^(0+384)
 10968  0248  0020               	movlb	0	; select bank0
 10969  0249  0821               	movf	?i1___ftdiv+1,w
 10970  024A  0023               	movlb	3	; select bank3
 10971  024B  00E0               	movwf	(_Tsampling+1)^(0+384)
 10972  024C  0020               	movlb	0	; select bank0
 10973  024D  0822               	movf	?i1___ftdiv+2,w
 10974  024E  0023               	movlb	3	; select bank3
 10975  024F  00E1               	movwf	(_Tsampling+2)^(0+384)
 10976                           
 10977                           ;main.c: 227: if(pfreq>=999)
 10978  0250  3003               	movlw	3
 10979  0251  0022               	movlb	2	; select bank2
 10980  0252  0263               	subwf	(_pfreq+1)^(0+256),w	;volatile
 10981  0253  30E7               	movlw	231
 10982  0254  1903               	skipnz
 10983  0255  0262               	subwf	_pfreq^(0+256),w	;volatile
 10984  0256  1C03               	skipc
 10985  0257  2A5D               	goto	i1l5086
 10986                           
 10987                           ;main.c: 228: pfreq=999;
 10988  0258  30E7               	movlw	231
 10989  0259  00E2               	movwf	_pfreq^(0+256)	;volatile
 10990  025A  3003               	movlw	3
 10991  025B  00E3               	movwf	(_pfreq^(0+256)+1)	;volatile
 10992  025C  2A63               	goto	i1l5090
 10993  025D                     i1l5086:	
 10994                           
 10995                           ;main.c: 229: else if(pfreq<=0)
 10996  025D  0863               	movf	(_pfreq+1)^(0+256),w	;volatile
 10997  025E  0462               	iorwf	_pfreq^(0+256),w	;volatile
 10998  025F  1D03               	skipz
 10999  0260  2A63               	goto	i1l5090
 11000                           
 11001                           ;main.c: 230: pfreq=0;
 11002  0261  01E2               	clrf	_pfreq^(0+256)	;volatile
 11003  0262  01E3               	clrf	(_pfreq+1)^(0+256)	;volatile
 11004  0263                     i1l5090:	
 11005                           
 11006                           ;main.c: 232: Fltpfreq=(0.2*pfreq)+(0.8)*prevFltpfreq;
 11007  0263  0863               	movf	(_pfreq+1)^(0+256),w	;volatile
 11008  0264  01F9               	clrf	i1___lwtoft@c+1
 11009  0265  07F9               	addwf	i1___lwtoft@c+1,f
 11010  0266  0862               	movf	_pfreq^(0+256),w	;volatile
 11011  0267  01F8               	clrf	i1___lwtoft@c
 11012  0268  07F8               	addwf	i1___lwtoft@c,f
 11013  0269  3199  2105  3180   	fcall	i1___lwtoft
 11014  026C  0878               	movf	?i1___lwtoft,w
 11015  026D  0020               	movlb	0	; select bank0
 11016  026E  00A3               	movwf	i1___ftmul@f2
 11017  026F  0879               	movf	?i1___lwtoft+1,w
 11018  0270  00A4               	movwf	i1___ftmul@f2+1
 11019  0271  087A               	movf	?i1___lwtoft+2,w
 11020  0272  00A5               	movwf	i1___ftmul@f2+2
 11021  0273  30CD               	movlw	205
 11022  0274  00A0               	movwf	i1___ftmul@f1
 11023  0275  304C               	movlw	76
 11024  0276  00A1               	movwf	i1___ftmul@f1+1
 11025  0277  303E               	movlw	62
 11026  0278  00A2               	movwf	i1___ftmul@f1+2
 11027  0279  3192  222F  3180   	fcall	i1___ftmul
 11028  027C  0020               	movlb	0	; select bank0
 11029  027D  0820               	movf	?i1___ftmul,w
 11030  027E  00B3               	movwf	i1___ftadd@f2
 11031  027F  0821               	movf	?i1___ftmul+1,w
 11032  0280  00B4               	movwf	i1___ftadd@f2+1
 11033  0281  0822               	movf	?i1___ftmul+2,w
 11034  0282  00B5               	movwf	i1___ftadd@f2+2
 11035  0283  0024               	movlb	4	; select bank4
 11036  0284  0841               	movf	(_prevFltpfreq+1)^(0+512),w
 11037  0285  01F9               	clrf	i1___lwtoft@c+1
 11038  0286  07F9               	addwf	i1___lwtoft@c+1,f
 11039  0287  0840               	movf	_prevFltpfreq^(0+512),w
 11040  0288  01F8               	clrf	i1___lwtoft@c
 11041  0289  07F8               	addwf	i1___lwtoft@c,f
 11042  028A  3199  2105  3180   	fcall	i1___lwtoft
 11043  028D  0878               	movf	?i1___lwtoft,w
 11044  028E  0020               	movlb	0	; select bank0
 11045  028F  00A3               	movwf	i1___ftmul@f2
 11046  0290  0879               	movf	?i1___lwtoft+1,w
 11047  0291  00A4               	movwf	i1___ftmul@f2+1
 11048  0292  087A               	movf	?i1___lwtoft+2,w
 11049  0293  00A5               	movwf	i1___ftmul@f2+2
 11050  0294  30CD               	movlw	205
 11051  0295  00A0               	movwf	i1___ftmul@f1
 11052  0296  304C               	movlw	76
 11053  0297  00A1               	movwf	i1___ftmul@f1+1
 11054  0298  303F               	movlw	63
 11055  0299  00A2               	movwf	i1___ftmul@f1+2
 11056  029A  3192  222F  3180   	fcall	i1___ftmul
 11057  029D  0020               	movlb	0	; select bank0
 11058  029E  0820               	movf	?i1___ftmul,w
 11059  029F  00B0               	movwf	i1___ftadd@f1
 11060  02A0  0821               	movf	?i1___ftmul+1,w
 11061  02A1  00B1               	movwf	i1___ftadd@f1+1
 11062  02A2  0822               	movf	?i1___ftmul+2,w
 11063  02A3  00B2               	movwf	i1___ftadd@f1+2
 11064  02A4  3193  2397  3180   	fcall	i1___ftadd
 11065  02A7  0020               	movlb	0	; select bank0
 11066  02A8  0830               	movf	?i1___ftadd,w
 11067  02A9  00BD               	movwf	i1___fttol@f1
 11068  02AA  0831               	movf	?i1___ftadd+1,w
 11069  02AB  00BE               	movwf	i1___fttol@f1+1
 11070  02AC  0832               	movf	?i1___ftadd+2,w
 11071  02AD  00BF               	movwf	i1___fttol@f1+2
 11072  02AE  319E  26F2  3180   	fcall	i1___fttol
 11073  02B1  0020               	movlb	0	; select bank0
 11074  02B2  083E               	movf	?i1___fttol+1,w
 11075  02B3  0022               	movlb	2	; select bank2
 11076  02B4  01A1               	clrf	(_Fltpfreq+1)^(0+256)
 11077  02B5  07A1               	addwf	(_Fltpfreq+1)^(0+256),f
 11078  02B6  0020               	movlb	0	; select bank0
 11079  02B7  083D               	movf	?i1___fttol,w
 11080  02B8  0022               	movlb	2	; select bank2
 11081  02B9  01A0               	clrf	_Fltpfreq^(0+256)
 11082  02BA  07A0               	addwf	_Fltpfreq^(0+256),f
 11083                           
 11084                           ;main.c: 234: if(Fltpfreq>=999)
 11085  02BB  3003               	movlw	3
 11086  02BC  0221               	subwf	(_Fltpfreq+1)^(0+256),w
 11087  02BD  30E7               	movlw	231
 11088  02BE  1903               	skipnz
 11089  02BF  0220               	subwf	_Fltpfreq^(0+256),w
 11090  02C0  1C03               	skipc
 11091  02C1  2AC7               	goto	i1l5096
 11092                           
 11093                           ;main.c: 235: Fltpfreq=999;
 11094  02C2  30E7               	movlw	231
 11095  02C3  00A0               	movwf	_Fltpfreq^(0+256)
 11096  02C4  3003               	movlw	3
 11097  02C5  00A1               	movwf	(_Fltpfreq^(0+256)+1)
 11098  02C6  2ACD               	goto	i1l5100
 11099  02C7                     i1l5096:	
 11100                           
 11101                           ;main.c: 236: else if(Fltpfreq<=0)
 11102  02C7  0821               	movf	(_Fltpfreq+1)^(0+256),w
 11103  02C8  0420               	iorwf	_Fltpfreq^(0+256),w
 11104  02C9  1D03               	skipz
 11105  02CA  2ACD               	goto	i1l5100
 11106                           
 11107                           ;main.c: 237: Fltpfreq=0;
 11108  02CB  01A0               	clrf	_Fltpfreq^(0+256)
 11109  02CC  01A1               	clrf	(_Fltpfreq+1)^(0+256)
 11110  02CD                     i1l5100:	
 11111                           
 11112                           ;main.c: 239: prevFltpfreq=Fltpfreq;
 11113  02CD  0821               	movf	(_Fltpfreq+1)^(0+256),w
 11114  02CE  0024               	movlb	4	; select bank4
 11115  02CF  01C1               	clrf	(_prevFltpfreq+1)^(0+512)
 11116  02D0  07C1               	addwf	(_prevFltpfreq+1)^(0+512),f
 11117  02D1  0022               	movlb	2	; select bank2
 11118  02D2  0820               	movf	_Fltpfreq^(0+256),w
 11119  02D3  0024               	movlb	4	; select bank4
 11120  02D4  01C0               	clrf	_prevFltpfreq^(0+512)
 11121  02D5  07C0               	addwf	_prevFltpfreq^(0+512),f
 11122                           
 11123                           ;main.c: 245: if(cyclestrtf==1 && psstatusu.psstatuss.twinpulseon==0)
 11124  02D6  0022               	movlb	2	; select bank2
 11125  02D7  083C               	movf	_cyclestrtf^(0+256),w
 11126  02D8  3A01               	xorlw	1
 11127  02D9  1D03               	skipz
 11128  02DA  2AE2               	goto	i1l5108
 11129  02DB  0020               	movlb	0	; select bank0
 11130  02DC  1B6D               	btfsc	_psstatusu,6
 11131  02DD  2AE2               	goto	i1l5108
 11132                           
 11133                           ;main.c: 246: adaptivepidf=1;
 11134  02DE  0022               	movlb	2	; select bank2
 11135  02DF  01B1               	clrf	_adaptivepidf^(0+256)
 11136  02E0  0AB1               	incf	_adaptivepidf^(0+256),f
 11137  02E1  2AE4               	goto	i1l5110
 11138  02E2                     i1l5108:	
 11139                           
 11140                           ;main.c: 247: else
 11141                           ;main.c: 248: adaptivepidf=0;
 11142  02E2  0022               	movlb	2	; select bank2
 11143  02E3  01B1               	clrf	_adaptivepidf^(0+256)
 11144  02E4                     i1l5110:	
 11145                           
 11146                           ;main.c: 250: }
 11147                           ;main.c: 251: }
 11148                           ;main.c: 252: }
 11149                           ;main.c: 254: if(PIE1bits.RCIE & PIR1bits.RCIF)
 11150  02E4  0020               	movlb	0	; select bank0
 11151  02E5  0E11               	swapf	17,w	;volatile
 11152  02E6  0C89               	rrf	9,f
 11153  02E7  3901               	andlw	1
 11154  02E8  00CB               	movwf	??_ISR_Function
 11155  02E9  0021               	movlb	1	; select bank1
 11156  02EA  0E11               	swapf	17,w	;volatile
 11157  02EB  0C89               	rrf	9,f
 11158  02EC  3901               	andlw	1
 11159  02ED  0020               	movlb	0	; select bank0
 11160  02EE  054B               	andwf	??_ISR_Function,w
 11161  02EF  1903               	btfsc	3,2
 11162  02F0  2CD3               	goto	i1l577
 11163                           
 11164                           ;main.c: 255: {
 11165                           ;main.c: 256: PIR1bits.RCIF=0;
 11166  02F1  1291               	bcf	17,5	;volatile
 11167                           
 11168                           ;main.c: 257: rxdata= RCREG;
 11169  02F2  0023               	movlb	3	; select bank3
 11170  02F3  0819               	movf	25,w	;volatile
 11171  02F4  0020               	movlb	0	; select bank0
 11172  02F5  00CB               	movwf	??_ISR_Function
 11173  02F6  084B               	movf	??_ISR_Function,w
 11174  02F7  00E3               	movwf	_rxdata	;volatile
 11175                           
 11176                           ;main.c: 259: if(RCSTAbits.FERR)
 11177  02F8  0023               	movlb	3	; select bank3
 11178  02F9  1D1D               	btfss	29,2	;volatile
 11179  02FA  2AFD               	goto	i1l592
 11180                           
 11181                           ;main.c: 260: {
 11182                           ;main.c: 261: RCSTAbits.SPEN=0;
 11183  02FB  139D               	bcf	29,7	;volatile
 11184                           
 11185                           ;main.c: 262: RCSTAbits.SPEN=1;
 11186  02FC  179D               	bsf	29,7	;volatile
 11187  02FD                     i1l592:	
 11188                           
 11189                           ;main.c: 263: }
 11190                           ;main.c: 264: if(RCSTAbits.OERR)
 11191  02FD  1C9D               	btfss	29,1	;volatile
 11192  02FE  2B03               	goto	i1l5122
 11193                           
 11194                           ;main.c: 265: {
 11195                           ;main.c: 266: RCSTAbits.CREN=0;
 11196  02FF  121D               	bcf	29,4	;volatile
 11197                           
 11198                           ;main.c: 267: RCSTAbits.CREN=1;
 11199  0300  161D               	bsf	29,4	;volatile
 11200                           
 11201                           ;main.c: 268: RCSTAbits.SPEN=0;
 11202  0301  139D               	bcf	29,7	;volatile
 11203                           
 11204                           ;main.c: 269: RCSTAbits.SPEN=1;
 11205  0302  179D               	bsf	29,7	;volatile
 11206  0303                     i1l5122:	
 11207                           
 11208                           ;main.c: 270: }
 11209                           ;main.c: 272: {
 11210                           ;main.c: 273: if(rxdata=='@' && startptr1==0 && statusptr1==0 )
 11211  0303  0020               	movlb	0	; select bank0
 11212  0304  0863               	movf	_rxdata,w	;volatile
 11213  0305  3A40               	xorlw	64
 11214  0306  1D03               	skipz
 11215  0307  2B18               	goto	i1l5132
 11216  0308  08E4               	movf	_startptr1,f
 11217  0309  1D03               	skipz
 11218  030A  2B18               	goto	i1l5132
 11219  030B  0022               	movlb	2	; select bank2
 11220  030C  082B               	movf	(_statusptr1+1)^(0+256),w
 11221  030D  042A               	iorwf	_statusptr1^(0+256),w
 11222  030E  1D03               	skipz
 11223  030F  2B18               	goto	i1l5132
 11224                           
 11225                           ;main.c: 274: {
 11226                           ;main.c: 276: startptr1 =1;
 11227  0310  0020               	movlb	0	; select bank0
 11228  0311  01E4               	clrf	_startptr1
 11229  0312  0AE4               	incf	_startptr1,f
 11230                           
 11231                           ;main.c: 277: arrptr =0;
 11232  0313  0022               	movlb	2	; select bank2
 11233  0314  01B2               	clrf	_arrptr^(0+256)
 11234                           
 11235                           ;main.c: 278: statusptr1 =0;
 11236  0315  01AA               	clrf	_statusptr1^(0+256)
 11237  0316  01AB               	clrf	(_statusptr1+1)^(0+256)
 11238  0317  2CD2               	goto	L24
 11239  0318                     i1l5132:	
 11240                           ;main.c: 280: }
 11241                           
 11242                           ;main.c: 279: recchksum =0;
 11243                           
 11244                           
 11245                           ;main.c: 281: else if(rxdata=='#' && startptr1==0 && statusptr1==0)
 11246  0318  0020               	movlb	0	; select bank0
 11247  0319  0863               	movf	_rxdata,w	;volatile
 11248  031A  3A23               	xorlw	35
 11249  031B  1D03               	skipz
 11250  031C  2B2D               	goto	i1l5146
 11251  031D  08E4               	movf	_startptr1,f
 11252  031E  1D03               	skipz
 11253  031F  2B2D               	goto	i1l5146
 11254  0320  0022               	movlb	2	; select bank2
 11255  0321  082B               	movf	(_statusptr1+1)^(0+256),w
 11256  0322  042A               	iorwf	_statusptr1^(0+256),w
 11257  0323  1D03               	skipz
 11258  0324  2B2D               	goto	i1l5146
 11259                           
 11260                           ;main.c: 282: {
 11261                           ;main.c: 284: startptr1 =0;
 11262  0325  0020               	movlb	0	; select bank0
 11263  0326  01E4               	clrf	_startptr1
 11264                           
 11265                           ;main.c: 285: statusptr1 =1;
 11266  0327  3001               	movlw	1
 11267  0328  0022               	movlb	2	; select bank2
 11268  0329  00AA               	movwf	_statusptr1^(0+256)
 11269  032A  3000               	movlw	0
 11270  032B  00AB               	movwf	(_statusptr1^(0+256)+1)
 11271  032C  2CD1               	goto	L25
 11272  032D                     i1l5146:	
 11273                           ;main.c: 288: }
 11274                           
 11275                           ;main.c: 287: recchksum =0;
 11276                           
 11277                           ;main.c: 286: arrptr =0;
 11278                           
 11279                           
 11280                           ;main.c: 289: else if(startptr1==0 && statusptr1==1)
 11281  032D  0020               	movlb	0	; select bank0
 11282  032E  08E4               	movf	_startptr1,f
 11283  032F  1D03               	skipz
 11284  0330  2B7D               	goto	i1l5174
 11285  0331  3001               	movlw	1
 11286  0332  0022               	movlb	2	; select bank2
 11287  0333  062A               	xorwf	_statusptr1^(0+256),w
 11288  0334  042B               	iorwf	(_statusptr1+1)^(0+256),w
 11289  0335  1D03               	skipz
 11290  0336  2B7D               	goto	i1l5174
 11291                           
 11292                           ;main.c: 290: {
 11293                           ;main.c: 291: if(recstatus==0)
 11294  0337  0023               	movlb	3	; select bank3
 11295  0338  084B               	movf	(_recstatus+1)^(0+384),w
 11296  0339  044A               	iorwf	_recstatus^(0+384),w
 11297  033A  1D03               	skipz
 11298  033B  2B4C               	goto	i1l5154
 11299                           
 11300                           ;main.c: 292: {
 11301                           ;main.c: 293: recpsstatus=rxdata;
 11302  033C  0020               	movlb	0	; select bank0
 11303  033D  0863               	movf	_rxdata,w	;volatile
 11304  033E  00CB               	movwf	??_ISR_Function
 11305  033F  01CC               	clrf	??_ISR_Function+1
 11306  0340  084B               	movf	??_ISR_Function,w
 11307  0341  0023               	movlb	3	; select bank3
 11308  0342  00C8               	movwf	_recpsstatus^(0+384)
 11309  0343  0020               	movlb	0	; select bank0
 11310  0344  084C               	movf	??_ISR_Function+1,w
 11311  0345  0023               	movlb	3	; select bank3
 11312  0346  00C9               	movwf	(_recpsstatus+1)^(0+384)
 11313                           
 11314                           ;main.c: 294: recstatus=1;
 11315  0347  3001               	movlw	1
 11316  0348  00CA               	movwf	_recstatus^(0+384)
 11317  0349  3000               	movlw	0
 11318  034A  00CB               	movwf	(_recstatus^(0+384)+1)
 11319                           
 11320                           ;main.c: 295: }
 11321  034B  2CD3               	goto	i1l577
 11322  034C                     i1l5154:	
 11323                           
 11324                           ;main.c: 296: else if(recstatus==1)
 11325  034C  3001               	movlw	1
 11326  034D  064A               	xorwf	_recstatus^(0+384),w
 11327  034E  044B               	iorwf	(_recstatus+1)^(0+384),w
 11328  034F  1D03               	skipz
 11329  0350  2CD3               	goto	i1l577
 11330                           
 11331                           ;main.c: 297: {
 11332                           ;main.c: 298: if(rxdata==recpsstatus)
 11333  0351  0020               	movlb	0	; select bank0
 11334  0352  0863               	movf	_rxdata,w	;volatile
 11335  0353  00CB               	movwf	??_ISR_Function
 11336  0354  01CC               	clrf	??_ISR_Function+1
 11337  0355  0023               	movlb	3	; select bank3
 11338  0356  0849               	movf	(_recpsstatus+1)^(0+384),w
 11339  0357  0020               	movlb	0	; select bank0
 11340  0358  064C               	xorwf	??_ISR_Function+1,w
 11341  0359  1D03               	skipz
 11342  035A  2B5F               	goto	u736_25
 11343  035B  0023               	movlb	3	; select bank3
 11344  035C  0848               	movf	_recpsstatus^(0+384),w
 11345  035D  0020               	movlb	0	; select bank0
 11346  035E  064B               	xorwf	??_ISR_Function,w
 11347  035F                     u736_25:	
 11348  035F  1D03               	skipz
 11349  0360  2CC9               	goto	i1l5226
 11350                           
 11351                           ;main.c: 299: {
 11352                           ;main.c: 301: comm_error_count=0;
 11353  0361  0022               	movlb	2	; select bank2
 11354  0362  01B7               	clrf	_comm_error_count^(0+256)	;volatile
 11355                           
 11356                           ;main.c: 302: psstatusu.psstatusbyte[0]=recpsstatus;
 11357  0363  0023               	movlb	3	; select bank3
 11358  0364  0848               	movf	_recpsstatus^(0+384),w
 11359  0365  0020               	movlb	0	; select bank0
 11360  0366  00CB               	movwf	??_ISR_Function
 11361  0367  084B               	movf	??_ISR_Function,w
 11362  0368  00ED               	movwf	_psstatusu
 11363                           
 11364                           ;main.c: 303: pstowfstru.pstowfstrs.psstatusbyte=recpsstatus;
 11365  0369  0023               	movlb	3	; select bank3
 11366  036A  0848               	movf	_recpsstatus^(0+384),w
 11367  036B  0020               	movlb	0	; select bank0
 11368  036C  00CB               	movwf	??_ISR_Function
 11369  036D  084B               	movf	??_ISR_Function,w
 11370  036E  0024               	movlb	4	; select bank4
 11371  036F  00CE               	movwf	(_pstowfstru^(0+512)+12)
 11372                           
 11373                           ;main.c: 324: }
 11374                           ;main.c: 336: recstatus=0;
 11375                           
 11376                           ;main.c: 306: {
 11377  0370  0023               	movlb	3	; select bank3
 11378  0371  01CA               	clrf	_recstatus^(0+384)
 11379  0372  01CB               	clrf	(_recstatus+1)^(0+384)
 11380                           
 11381                           ;main.c: 337: startptr1=0;
 11382  0373  0020               	movlb	0	; select bank0
 11383  0374  01E4               	clrf	_startptr1
 11384                           
 11385                           ;main.c: 338: statusptr1=0;
 11386  0375  0022               	movlb	2	; select bank2
 11387  0376  01AA               	clrf	_statusptr1^(0+256)
 11388  0377  01AB               	clrf	(_statusptr1+1)^(0+256)
 11389                           
 11390                           ;main.c: 339: arrptr=0;
 11391  0378  01B2               	clrf	_arrptr^(0+256)
 11392                           
 11393                           ;main.c: 340: recchksum=0;
 11394  0379  01D4               	clrf	_recchksum^(0+256)
 11395                           
 11396                           ;main.c: 341: send_statusf=1;
 11397  037A  01D7               	clrf	_send_statusf^(0+256)
 11398  037B  0AD7               	incf	_send_statusf^(0+256),f
 11399                           
 11400                           ;main.c: 343: }
 11401  037C  2CD3               	goto	i1l577
 11402  037D                     i1l5174:	
 11403                           ;main.c: 351: }
 11404                           ;main.c: 352: }
 11405                           ;main.c: 353: }
 11406                           
 11407                           ;main.c: 350: recchksum=0;
 11408                           
 11409                           ;main.c: 349: arrptr=0;
 11410                           
 11411                           ;main.c: 348: statusptr1=0;
 11412                           
 11413                           ;main.c: 347: startptr1=0;
 11414                           
 11415                           ;main.c: 344: else
 11416                           ;main.c: 345: {
 11417                           ;main.c: 346: recstatus=0;
 11418                           
 11419                           
 11420                           ;main.c: 354: else if(startptr1==1 && statusptr1==0)
 11421  037D  0020               	movlb	0	; select bank0
 11422  037E  0864               	movf	_startptr1,w
 11423  037F  3A01               	xorlw	1
 11424  0380  1D03               	skipz
 11425  0381  2CD3               	goto	i1l577
 11426  0382  0022               	movlb	2	; select bank2
 11427  0383  082B               	movf	(_statusptr1+1)^(0+256),w
 11428  0384  042A               	iorwf	_statusptr1^(0+256),w
 11429  0385  1D03               	skipz
 11430  0386  2CD3               	goto	i1l577
 11431                           
 11432                           ;main.c: 355: {
 11433                           ;main.c: 356: if(arrptr<=21)
 11434  0387  3016               	movlw	22
 11435  0388  0232               	subwf	_arrptr^(0+256),w
 11436  0389  1803               	skipnc
 11437  038A  2BA6               	goto	i1l5186
 11438                           
 11439                           ;main.c: 357: {
 11440                           ;main.c: 358: rec_arr[arrptr]=rxdata;
 11441  038B  0020               	movlb	0	; select bank0
 11442  038C  0863               	movf	_rxdata,w	;volatile
 11443  038D  00CB               	movwf	??_ISR_Function
 11444  038E  0022               	movlb	2	; select bank2
 11445  038F  0832               	movf	_arrptr^(0+256),w
 11446  0390  3EA0               	addlw	_rec_arr& (0+255)
 11447  0391  0086               	movwf	6
 11448  0392  3002               	movlw	2	; select bank5/6
 11449  0393  0087               	movwf	7
 11450  0394  0020               	movlb	0	; select bank0
 11451  0395  084B               	movf	??_ISR_Function,w
 11452  0396  0081               	movwf	1
 11453                           
 11454                           ;main.c: 359: recchksum=recchksum+rxdata;
 11455  0397  0022               	movlb	2	; select bank2
 11456  0398  0854               	movf	_recchksum^(0+256),w
 11457  0399  0020               	movlb	0	; select bank0
 11458  039A  0763               	addwf	_rxdata,w	;volatile
 11459  039B  00CB               	movwf	??_ISR_Function
 11460  039C  084B               	movf	??_ISR_Function,w
 11461  039D  0022               	movlb	2	; select bank2
 11462  039E  00D4               	movwf	_recchksum^(0+256)
 11463                           
 11464                           ;main.c: 360: arrptr++;
 11465  039F  3001               	movlw	1
 11466  03A0  0020               	movlb	0	; select bank0
 11467  03A1  00CB               	movwf	??_ISR_Function
 11468  03A2  084B               	movf	??_ISR_Function,w
 11469  03A3  0022               	movlb	2	; select bank2
 11470  03A4  07B2               	addwf	_arrptr^(0+256),f
 11471                           
 11472                           ;main.c: 361: }
 11473  03A5  2CD3               	goto	i1l577
 11474  03A6                     i1l5186:	
 11475                           
 11476                           ;main.c: 362: else if(recchksum==rxdata)
 11477  03A6  0854               	movf	_recchksum^(0+256),w
 11478  03A7  0020               	movlb	0	; select bank0
 11479  03A8  0663               	xorwf	_rxdata,w	;volatile
 11480  03A9  1D03               	skipz
 11481  03AA  2CC9               	goto	i1l5226
 11482                           
 11483                           ;main.c: 364: {
 11484                           ;main.c: 378: comm_error_count=0;
 11485  03AB  0022               	movlb	2	; select bank2
 11486  03AC  01B7               	clrf	_comm_error_count^(0+256)	;volatile
 11487                           
 11488                           ;main.c: 379: for(ijk=0;ijk<=21;ijk++)
 11489  03AD  01A2               	clrf	_ijk^(0+256)
 11490  03AE  01A3               	clrf	(_ijk+1)^(0+256)
 11491  03AF  3000               	movlw	0
 11492  03B0  0223               	subwf	(_ijk+1)^(0+256),w
 11493  03B1  3016               	movlw	22
 11494  03B2  1903               	skipnz
 11495  03B3  0222               	subwf	_ijk^(0+256),w
 11496  03B4  1803               	btfsc	3,0
 11497  03B5  2BD3               	goto	i1l5200
 11498  03B6                     i1l5194:	
 11499                           
 11500                           ;main.c: 380: {
 11501                           ;main.c: 381: pstowfstru.pstransarr[ijk]=rec_arr[ijk];
 11502  03B6  0822               	movf	_ijk^(0+256),w
 11503  03B7  3EA0               	addlw	_rec_arr& (0+255)
 11504  03B8  0086               	movwf	6
 11505  03B9  3002               	movlw	2	; select bank5/6
 11506  03BA  0087               	movwf	7
 11507  03BB  0801               	movf	1,w
 11508  03BC  0020               	movlb	0	; select bank0
 11509  03BD  00CB               	movwf	??_ISR_Function
 11510  03BE  0022               	movlb	2	; select bank2
 11511  03BF  0822               	movf	_ijk^(0+256),w
 11512  03C0  3E42               	addlw	_pstowfstru& (0+255)
 11513  03C1  0086               	movwf	6
 11514  03C2  3002               	movlw	2	; select bank4/5
 11515  03C3  0087               	movwf	7
 11516  03C4  0020               	movlb	0	; select bank0
 11517  03C5  084B               	movf	??_ISR_Function,w
 11518  03C6  0081               	movwf	1
 11519  03C7  3001               	movlw	1
 11520  03C8  0022               	movlb	2	; select bank2
 11521  03C9  07A2               	addwf	_ijk^(0+256),f
 11522  03CA  3000               	movlw	0
 11523  03CB  3DA3               	addwfc	(_ijk+1)^(0+256),f
 11524  03CC  3000               	movlw	0
 11525  03CD  0223               	subwf	(_ijk+1)^(0+256),w
 11526  03CE  3016               	movlw	22
 11527  03CF  1903               	skipnz
 11528  03D0  0222               	subwf	_ijk^(0+256),w
 11529  03D1  1C03               	skipc
 11530  03D2  2BB6               	goto	i1l5194
 11531  03D3                     i1l5200:	
 11532                           
 11533                           ;main.c: 382: }
 11534                           ;main.c: 383: weldmode=pstowfstru.pstowfstrs.weldmode;
 11535  03D3  0024               	movlb	4	; select bank4
 11536  03D4  0842               	movf	_pstowfstru^(0+512),w
 11537  03D5  0020               	movlb	0	; select bank0
 11538  03D6  00CB               	movwf	??_ISR_Function
 11539  03D7  084B               	movf	??_ISR_Function,w
 11540  03D8  00E6               	movwf	_weldmode	;volatile
 11541                           
 11542                           ;main.c: 384: setwirespeed=pstowfstru.pstowfstrs.setwspeed;
 11543  03D9  0024               	movlb	4	; select bank4
 11544  03DA  0843               	movf	(_pstowfstru^(0+512)+1),w
 11545  03DB  0020               	movlb	0	; select bank0
 11546  03DC  00CB               	movwf	??_ISR_Function
 11547  03DD  01CC               	clrf	??_ISR_Function+1
 11548  03DE  084B               	movf	??_ISR_Function,w
 11549  03DF  00DA               	movwf	_setwirespeed
 11550  03E0  084C               	movf	??_ISR_Function+1,w
 11551  03E1  00DB               	movwf	_setwirespeed+1
 11552                           
 11553                           ;main.c: 385: wfstatusu.wfstatusbyte[0]=pstowfstru.pstowfstrs.wfstatusbyte;
 11554  03E2  0024               	movlb	4	; select bank4
 11555  03E3  084F               	movf	(_pstowfstru^(0+512)+13),w
 11556  03E4  0020               	movlb	0	; select bank0
 11557  03E5  00CB               	movwf	??_ISR_Function
 11558  03E6  084B               	movf	??_ISR_Function,w
 11559  03E7  00EE               	movwf	_wfstatusu
 11560                           
 11561                           ;main.c: 386: if(wfstatusu.wfstatuss.twotfourtmode1==1)
 11562  03E8  1C6E               	btfss	_wfstatusu,0
 11563  03E9  2BED               	goto	i1l612
 11564                           
 11565                           ;main.c: 387: {
 11566                           ;main.c: 388: TypeU.TypeS.twot=0;
 11567  03EA  1267               	bcf	_TypeU,4
 11568                           
 11569                           ;main.c: 389: TypeU.TypeS.fourt=1;
 11570  03EB  16E7               	bsf	_TypeU,5
 11571                           
 11572                           ;main.c: 390: }
 11573  03EC  2BEF               	goto	i1l5206
 11574  03ED                     i1l612:	
 11575                           
 11576                           ;main.c: 391: else
 11577                           ;main.c: 392: {
 11578                           ;main.c: 393: TypeU.TypeS.twot=1;
 11579  03ED  1667               	bsf	_TypeU,4
 11580                           
 11581                           ;main.c: 394: TypeU.TypeS.fourt=0;
 11582  03EE  12E7               	bcf	_TypeU,5
 11583  03EF                     i1l5206:	
 11584                           
 11585                           ;main.c: 395: }
 11586                           ;main.c: 396: if(cEditfg == 0)
 11587  03EF  0022               	movlb	2	; select bank2
 11588  03F0  08B3               	movf	_cEditfg^(0+256),f
 11589  03F1  1D03               	skipz
 11590  03F2  2C0A               	goto	i1l614
 11591                           
 11592                           ;main.c: 397: {
 11593                           ;main.c: 398: setvoltage=pstowfstru.pstowfstrs.Hi_setvoltage;
 11594  03F3  0024               	movlb	4	; select bank4
 11595  03F4  0847               	movf	(_pstowfstru^(0+512)+5),w
 11596  03F5  0020               	movlb	0	; select bank0
 11597  03F6  00CB               	movwf	??_ISR_Function
 11598  03F7  01CC               	clrf	??_ISR_Function+1
 11599  03F8  084B               	movf	??_ISR_Function,w
 11600  03F9  00D8               	movwf	_setvoltage
 11601  03FA  084C               	movf	??_ISR_Function+1,w
 11602  03FB  00D9               	movwf	_setvoltage+1
 11603                           
 11604                           ;main.c: 399: setvoltage<<=8;
 11605  03FC  3008               	movlw	8
 11606  03FD                     u745_25:	
 11607  03FD  35D8               	lslf	_setvoltage,f
 11608  03FE  0DD9               	rlf	_setvoltage+1,f
 11609  03FF  0B89               	decfsz	9,f
 11610  0400  2BFD               	goto	u745_25
 11611                           
 11612                           ;main.c: 400: setvoltage|=pstowfstru.pstowfstrs.Lo_setvoltage;
 11613  0401  0024               	movlb	4	; select bank4
 11614  0402  0848               	movf	(_pstowfstru^(0+512)+6),w
 11615  0403  0020               	movlb	0	; select bank0
 11616  0404  00CB               	movwf	??_ISR_Function
 11617  0405  01CC               	clrf	??_ISR_Function+1
 11618  0406  084B               	movf	??_ISR_Function,w
 11619  0407  04D8               	iorwf	_setvoltage,f
 11620  0408  084C               	movf	??_ISR_Function+1,w
 11621  0409  04D9               	iorwf	_setvoltage+1,f
 11622  040A                     i1l614:	
 11623                           
 11624                           ;main.c: 401: }
 11625                           ;main.c: 403: setcurrent=pstowfstru.pstowfstrs.Hi_setcurrent;
 11626  040A  0024               	movlb	4	; select bank4
 11627  040B  0844               	movf	(_pstowfstru^(0+512)+2),w
 11628  040C  0020               	movlb	0	; select bank0
 11629  040D  00CB               	movwf	??_ISR_Function
 11630  040E  01CC               	clrf	??_ISR_Function+1
 11631  040F  084B               	movf	??_ISR_Function,w
 11632  0410  0022               	movlb	2	; select bank2
 11633  0411  00A8               	movwf	_setcurrent^(0+256)
 11634  0412  0020               	movlb	0	; select bank0
 11635  0413  084C               	movf	??_ISR_Function+1,w
 11636  0414  0022               	movlb	2	; select bank2
 11637  0415  00A9               	movwf	(_setcurrent+1)^(0+256)
 11638                           
 11639                           ;main.c: 404: setcurrent<<=8;
 11640  0416  3008               	movlw	8
 11641  0417                     u746_25:	
 11642  0417  35A8               	lslf	_setcurrent^(0+256),f
 11643  0418  0DA9               	rlf	(_setcurrent+1)^(0+256),f
 11644  0419  0B89               	decfsz	9,f
 11645  041A  2C17               	goto	u746_25
 11646                           
 11647                           ;main.c: 405: setcurrent|=pstowfstru.pstowfstrs.Lo_setcurrent;
 11648  041B  0024               	movlb	4	; select bank4
 11649  041C  0845               	movf	(_pstowfstru^(0+512)+3),w
 11650  041D  0020               	movlb	0	; select bank0
 11651  041E  00CB               	movwf	??_ISR_Function
 11652  041F  01CC               	clrf	??_ISR_Function+1
 11653  0420  084B               	movf	??_ISR_Function,w
 11654  0421  0022               	movlb	2	; select bank2
 11655  0422  04A8               	iorwf	_setcurrent^(0+256),f
 11656  0423  0020               	movlb	0	; select bank0
 11657  0424  084C               	movf	??_ISR_Function+1,w
 11658  0425  0022               	movlb	2	; select bank2
 11659  0426  04A9               	iorwf	(_setcurrent+1)^(0+256),f
 11660                           
 11661                           ;main.c: 408: Actual_amp=pstowfstru.pstowfstrs.Hi_actualcurrent;
 11662  0427  0024               	movlb	4	; select bank4
 11663  0428  084A               	movf	(_pstowfstru^(0+512)+8),w
 11664  0429  0020               	movlb	0	; select bank0
 11665  042A  00CB               	movwf	??_ISR_Function
 11666  042B  01CC               	clrf	??_ISR_Function+1
 11667  042C  084B               	movf	??_ISR_Function,w
 11668  042D  0023               	movlb	3	; select bank3
 11669  042E  00E2               	movwf	_Actual_amp^(0+384)
 11670  042F  0020               	movlb	0	; select bank0
 11671  0430  084C               	movf	??_ISR_Function+1,w
 11672  0431  0023               	movlb	3	; select bank3
 11673  0432  00E3               	movwf	(_Actual_amp+1)^(0+384)
 11674                           
 11675                           ;main.c: 409: Actual_amp<<=8;
 11676  0433  3008               	movlw	8
 11677  0434                     u747_25:	
 11678  0434  35E2               	lslf	_Actual_amp^(0+384),f
 11679  0435  0DE3               	rlf	(_Actual_amp+1)^(0+384),f
 11680  0436  0B89               	decfsz	9,f
 11681  0437  2C34               	goto	u747_25
 11682                           
 11683                           ;main.c: 410: Actual_amp|=pstowfstru.pstowfstrs.Lo_actualcurrent;
 11684  0438  0024               	movlb	4	; select bank4
 11685  0439  084B               	movf	(_pstowfstru^(0+512)+9),w
 11686  043A  0020               	movlb	0	; select bank0
 11687  043B  00CB               	movwf	??_ISR_Function
 11688  043C  01CC               	clrf	??_ISR_Function+1
 11689  043D  084B               	movf	??_ISR_Function,w
 11690  043E  0023               	movlb	3	; select bank3
 11691  043F  04E2               	iorwf	_Actual_amp^(0+384),f
 11692  0440  0020               	movlb	0	; select bank0
 11693  0441  084C               	movf	??_ISR_Function+1,w
 11694  0442  0023               	movlb	3	; select bank3
 11695  0443  04E3               	iorwf	(_Actual_amp+1)^(0+384),f
 11696                           
 11697                           ;main.c: 417: Actual_vtg=pstowfstru.pstowfstrs.Hi_actualvoltage;
 11698  0444  0024               	movlb	4	; select bank4
 11699  0445  084C               	movf	(_pstowfstru^(0+512)+10),w
 11700  0446  0020               	movlb	0	; select bank0
 11701  0447  00CB               	movwf	??_ISR_Function
 11702  0448  01CC               	clrf	??_ISR_Function+1
 11703  0449  084B               	movf	??_ISR_Function,w
 11704  044A  0023               	movlb	3	; select bank3
 11705  044B  00E4               	movwf	_Actual_vtg^(0+384)
 11706  044C  0020               	movlb	0	; select bank0
 11707  044D  084C               	movf	??_ISR_Function+1,w
 11708  044E  0023               	movlb	3	; select bank3
 11709  044F  00E5               	movwf	(_Actual_vtg+1)^(0+384)
 11710                           
 11711                           ;main.c: 418: Actual_vtg<<=8;
 11712  0450  3008               	movlw	8
 11713  0451                     u748_25:	
 11714  0451  35E4               	lslf	_Actual_vtg^(0+384),f
 11715  0452  0DE5               	rlf	(_Actual_vtg+1)^(0+384),f
 11716  0453  0B89               	decfsz	9,f
 11717  0454  2C51               	goto	u748_25
 11718                           
 11719                           ;main.c: 419: Actual_vtg|=pstowfstru.pstowfstrs.Lo_actualvoltage;
 11720  0455  0024               	movlb	4	; select bank4
 11721  0456  084D               	movf	(_pstowfstru^(0+512)+11),w
 11722  0457  0020               	movlb	0	; select bank0
 11723  0458  00CB               	movwf	??_ISR_Function
 11724  0459  01CC               	clrf	??_ISR_Function+1
 11725  045A  084B               	movf	??_ISR_Function,w
 11726  045B  0023               	movlb	3	; select bank3
 11727  045C  04E4               	iorwf	_Actual_vtg^(0+384),f
 11728  045D  0020               	movlb	0	; select bank0
 11729  045E  084C               	movf	??_ISR_Function+1,w
 11730  045F  0023               	movlb	3	; select bank3
 11731  0460  04E5               	iorwf	(_Actual_vtg+1)^(0+384),f
 11732                           
 11733                           ;main.c: 421: rel_wirespeed=pstowfstru.pstowfstrs.rel_wirespeed;
 11734  0461  0024               	movlb	4	; select bank4
 11735  0462  0850               	movf	(_pstowfstru^(0+512)+14),w
 11736  0463  0020               	movlb	0	; select bank0
 11737  0464  00CB               	movwf	??_ISR_Function
 11738  0465  01CC               	clrf	??_ISR_Function+1
 11739  0466  084B               	movf	??_ISR_Function,w
 11740  0467  0023               	movlb	3	; select bank3
 11741  0468  00CC               	movwf	_rel_wirespeed^(0+384)
 11742  0469  0020               	movlb	0	; select bank0
 11743  046A  084C               	movf	??_ISR_Function+1,w
 11744  046B  0023               	movlb	3	; select bank3
 11745  046C  00CD               	movwf	(_rel_wirespeed+1)^(0+384)
 11746                           
 11747                           ;main.c: 423: crater_speed=pstowfstru.pstowfstrs.crater_speed;
 11748  046D  0024               	movlb	4	; select bank4
 11749  046E  0854               	movf	(_pstowfstru^(0+512)+18),w
 11750  046F  0020               	movlb	0	; select bank0
 11751  0470  00CB               	movwf	??_ISR_Function
 11752  0471  084B               	movf	??_ISR_Function,w
 11753  0472  0022               	movlb	2	; select bank2
 11754  0473  00BA               	movwf	_crater_speed^(0+256)	;volatile
 11755                           
 11756                           ;main.c: 425: if(cEditfg == 0)
 11757  0474  08B3               	movf	_cEditfg^(0+256),f
 11758  0475  1D03               	skipz
 11759  0476  2C7D               	goto	i1l615
 11760                           
 11761                           ;main.c: 426: {
 11762                           ;main.c: 427: psstatusu.psstatusbyte[0]=pstowfstru.pstowfstrs.psstatusbyte;
 11763  0477  0024               	movlb	4	; select bank4
 11764  0478  084E               	movf	(_pstowfstru^(0+512)+12),w
 11765  0479  0020               	movlb	0	; select bank0
 11766  047A  00CB               	movwf	??_ISR_Function
 11767  047B  084B               	movf	??_ISR_Function,w
 11768  047C  00ED               	movwf	_psstatusu
 11769  047D                     i1l615:	
 11770                           
 11771                           ;main.c: 428: }
 11772                           ;main.c: 429: error_code1=pstowfstru.pstowfstrs.error_code1;
 11773  047D  0024               	movlb	4	; select bank4
 11774  047E  0852               	movf	(_pstowfstru^(0+512)+16),w
 11775  047F  0020               	movlb	0	; select bank0
 11776  0480  00CB               	movwf	??_ISR_Function
 11777  0481  084B               	movf	??_ISR_Function,w
 11778  0482  0023               	movlb	3	; select bank3
 11779  0483  00D5               	movwf	_error_code1^(0+384)	;volatile
 11780                           
 11781                           ;main.c: 430: error_code2=pstowfstru.pstowfstrs.error_code2;
 11782  0484  0024               	movlb	4	; select bank4
 11783  0485  0853               	movf	(_pstowfstru^(0+512)+17),w
 11784  0486  0020               	movlb	0	; select bank0
 11785  0487  00CB               	movwf	??_ISR_Function
 11786  0488  084B               	movf	??_ISR_Function,w
 11787  0489  0023               	movlb	3	; select bank3
 11788  048A  00D6               	movwf	_error_code2^(0+384)	;volatile
 11789                           
 11790                           ;main.c: 432: commandu.commandbyte[0]=pstowfstru.pstowfstrs.command_to_wf;
 11791  048B  0024               	movlb	4	; select bank4
 11792  048C  0856               	movf	(_pstowfstru^(0+512)+20),w
 11793  048D  0020               	movlb	0	; select bank0
 11794  048E  00CB               	movwf	??_ISR_Function
 11795  048F  084B               	movf	??_ISR_Function,w
 11796  0490  0023               	movlb	3	; select bank3
 11797  0491  00DE               	movwf	_commandu^(0+384)
 11798                           
 11799                           ;main.c: 433: erroru.errorstatusbyte[0]=pstowfstru.pstowfstrs.error_code1;;
 11800  0492  0024               	movlb	4	; select bank4
 11801  0493  0852               	movf	(_pstowfstru^(0+512)+16),w
 11802  0494  0020               	movlb	0	; select bank0
 11803  0495  00CB               	movwf	??_ISR_Function
 11804  0496  084B               	movf	??_ISR_Function,w
 11805  0497  0022               	movlb	2	; select bank2
 11806  0498  00E0               	movwf	_erroru^(0+256)
 11807                           
 11808                           ;main.c: 434: erroru.errorstatusbyte[1]=pstowfstru.pstowfstrs.error_code2;
 11809  0499  0024               	movlb	4	; select bank4
 11810  049A  0853               	movf	(_pstowfstru^(0+512)+17),w
 11811  049B  0020               	movlb	0	; select bank0
 11812  049C  00CB               	movwf	??_ISR_Function
 11813  049D  084B               	movf	??_ISR_Function,w
 11814  049E  0022               	movlb	2	; select bank2
 11815  049F  00E1               	movwf	(_erroru^(0+256)+1)
 11816                           
 11817                           ;main.c: 436: creep_speed=pstowfstru.pstowfstrs.creep_speed;
 11818  04A0  0024               	movlb	4	; select bank4
 11819  04A1  0855               	movf	(_pstowfstru^(0+512)+19),w
 11820  04A2  0020               	movlb	0	; select bank0
 11821  04A3  00CB               	movwf	??_ISR_Function
 11822  04A4  084B               	movf	??_ISR_Function,w
 11823  04A5  0022               	movlb	2	; select bank2
 11824  04A6  00BB               	movwf	_creep_speed^(0+256)	;volatile
 11825                           
 11826                           ;main.c: 438: if(commandu.commands.volt_or_arc==1)
 11827  04A7  0023               	movlb	3	; select bank3
 11828  04A8  1C5E               	btfss	_commandu^(0+384),0
 11829  04A9  2CAD               	goto	i1l616
 11830                           
 11831                           ;main.c: 440: {
 11832                           ;main.c: 441: TypeU.TypeS.arclength=0;
 11833  04AA  0020               	movlb	0	; select bank0
 11834  04AB  1167               	bcf	_TypeU,2
 11835                           
 11836                           ;main.c: 442: TypeU.TypeS.vtg =1;
 11837  04AC  14E8               	bsf	_TypeU+1,1
 11838  04AD                     i1l616:	
 11839                           
 11840                           ;main.c: 443: }
 11841                           ;main.c: 452: if(wfstatusu.wfstatuss.twotfourtmode1 == 1)
 11842  04AD  0020               	movlb	0	; select bank0
 11843  04AE  1C6E               	btfss	_wfstatusu,0
 11844  04AF  2CB4               	goto	i1l5220
 11845                           
 11846                           ;main.c: 453: {
 11847                           ;main.c: 454: cWf2t4tmodefg = 1;
 11848  04B0  0022               	movlb	2	; select bank2
 11849  04B1  01B4               	clrf	_cWf2t4tmodefg^(0+256)
 11850  04B2  0AB4               	incf	_cWf2t4tmodefg^(0+256),f
 11851                           
 11852                           ;main.c: 455: }
 11853  04B3  2CB6               	goto	i1l618
 11854  04B4                     i1l5220:	
 11855                           
 11856                           ;main.c: 456: else
 11857                           ;main.c: 457: {
 11858                           ;main.c: 458: cWf2t4tmodefg = 0;
 11859  04B4  0022               	movlb	2	; select bank2
 11860  04B5  01B4               	clrf	_cWf2t4tmodefg^(0+256)
 11861  04B6                     i1l618:	
 11862                           
 11863                           ;main.c: 459: }
 11864                           ;main.c: 464: startptr1=0;
 11865  04B6  0020               	movlb	0	; select bank0
 11866  04B7  01E4               	clrf	_startptr1
 11867                           
 11868                           ;main.c: 465: arrptr=0;
 11869  04B8  0022               	movlb	2	; select bank2
 11870  04B9  01B2               	clrf	_arrptr^(0+256)
 11871                           
 11872                           ;main.c: 466: recchksum=0;
 11873  04BA  01D4               	clrf	_recchksum^(0+256)
 11874                           
 11875                           ;main.c: 467: recstatus=0;
 11876  04BB  0023               	movlb	3	; select bank3
 11877  04BC  01CA               	clrf	_recstatus^(0+384)
 11878  04BD  01CB               	clrf	(_recstatus+1)^(0+384)
 11879                           
 11880                           ;main.c: 468: statusptr1=0;
 11881  04BE  0022               	movlb	2	; select bank2
 11882  04BF  01AA               	clrf	_statusptr1^(0+256)
 11883  04C0  01AB               	clrf	(_statusptr1+1)^(0+256)
 11884                           
 11885                           ;main.c: 469: transmitonf=1;
 11886  04C1  01DB               	clrf	_transmitonf^(0+256)
 11887  04C2  0ADB               	incf	_transmitonf^(0+256),f
 11888                           
 11889                           ;main.c: 470: onesecf=1;
 11890  04C3  3001               	movlw	1
 11891  04C4  0020               	movlb	0	; select bank0
 11892  04C5  00CB               	movwf	??_ISR_Function
 11893  04C6  084B               	movf	??_ISR_Function,w
 11894  04C7  00E1               	movwf	_onesecf	;volatile
 11895                           
 11896                           ;main.c: 472: }
 11897  04C8  2CD3               	goto	i1l577
 11898  04C9                     i1l5226:	
 11899                           
 11900                           ;main.c: 473: else
 11901                           ;main.c: 474: {
 11902                           ;main.c: 475: recstatus=0;
 11903  04C9  0023               	movlb	3	; select bank3
 11904  04CA  01CA               	clrf	_recstatus^(0+384)
 11905  04CB  01CB               	clrf	(_recstatus+1)^(0+384)
 11906                           
 11907                           ;main.c: 476: startptr1=0;
 11908  04CC  0020               	movlb	0	; select bank0
 11909  04CD  01E4               	clrf	_startptr1
 11910                           
 11911                           ;main.c: 477: statusptr1=0;
 11912  04CE  0022               	movlb	2	; select bank2
 11913  04CF  01AA               	clrf	_statusptr1^(0+256)
 11914  04D0  01AB               	clrf	(_statusptr1+1)^(0+256)
 11915  04D1                     L25:	
 11916                           
 11917                           ;main.c: 478: arrptr=0;
 11918  04D1  01B2               	clrf	_arrptr^(0+256)
 11919  04D2                     L24:	
 11920                           
 11921                           ;main.c: 479: recchksum=0;
 11922  04D2  01D4               	clrf	_recchksum^(0+256)
 11923  04D3                     i1l577:	
 11924  04D3  0020               	movlb	0	; select bank0
 11925  04D4  0853               	movf	??_ISR_Function+8,w
 11926  04D5  00FF               	movwf	127
 11927  04D6  107E               	bcf	126,0	;clear compiler interrupt flag
 11928  04D7  0009               	retfie
 11929  04D8                     __end_of_ISR_Function:	
 11930                           
 11931                           	psect	text35
 11932  1905                     __ptext35:	
 11933 ;; *************** function i1___lwtoft *****************
 11934 ;; Defined at:
 11935 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 11936 ;; Parameters:    Size  Location     Type
 11937 ;;  c               2    8[COMMON] unsigned int 
 11938 ;; Auto vars:     Size  Location     Type
 11939 ;;		None
 11940 ;; Return value:  Size  Location     Type
 11941 ;;                  3    8[COMMON] float 
 11942 ;; Registers used:
 11943 ;;		wreg, status,2, status,0, pclath, cstack
 11944 ;; Tracked objects:
 11945 ;;		On entry : 0/0
 11946 ;;		On exit  : 0/0
 11947 ;;		Unchanged: 0/0
 11948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11949 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11952 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;Total ram usage:        4 bytes
 11954 ;; Hardware stack levels used:    1
 11955 ;; Hardware stack levels required when called:    1
 11956 ;; This function calls:
 11957 ;;		i1___ftpack
 11958 ;; This function is called by:
 11959 ;;		_ISR_Function
 11960 ;; This function uses a non-reentrant model
 11961 ;;
 11962                           
 11963                           
 11964                           ;psect for function i1___lwtoft
 11965  1905                     i1___lwtoft:	
 11966                           
 11967                           ;incstack = 0
 11968                           ; Regs used in i1___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 11969  1905  0878               	movf	i1___lwtoft@c,w
 11970  1906  00F0               	movwf	i1___ftpack@arg
 11971  1907  0879               	movf	i1___lwtoft@c+1,w
 11972  1908  00F1               	movwf	i1___ftpack@arg+1
 11973  1909  01F2               	clrf	i1___ftpack@arg+2
 11974  190A  308E               	movlw	142
 11975  190B  00FB               	movwf	??i1___lwtoft
 11976  190C  087B               	movf	??i1___lwtoft,w
 11977  190D  00F3               	movwf	i1___ftpack@exp
 11978  190E  01F4               	clrf	i1___ftpack@sign
 11979  190F  319B  2366         	fcall	i1___ftpack
 11980  1911  0870               	movf	?i1___ftpack,w
 11981  1912  00F8               	movwf	?i1___lwtoft
 11982  1913  0871               	movf	?i1___ftpack+1,w
 11983  1914  00F9               	movwf	?i1___lwtoft+1
 11984  1915  0872               	movf	?i1___ftpack+2,w
 11985  1916  00FA               	movwf	?i1___lwtoft+2
 11986  1917  0008               	return
 11987  1918                     __end_ofi1___lwtoft:	
 11988                           
 11989                           	psect	text36
 11990  1EF2                     __ptext36:	
 11991 ;; *************** function i1___fttol *****************
 11992 ;; Defined at:
 11993 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
 11994 ;; Parameters:    Size  Location     Type
 11995 ;;  f1              3   29[BANK0 ] float 
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;  __fttol         4   38[BANK0 ] unsigned long 
 11998 ;;  __fttol         1   42[BANK0 ] unsigned char 
 11999 ;;  __fttol         1   37[BANK0 ] unsigned char 
 12000 ;; Return value:  Size  Location     Type
 12001 ;;                  4   29[BANK0 ] long 
 12002 ;; Registers used:
 12003 ;;		wreg, status,2, status,0
 12004 ;; Tracked objects:
 12005 ;;		On entry : 0/0
 12006 ;;		On exit  : 0/0
 12007 ;;		Unchanged: 0/0
 12008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12009 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12010 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12012 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12013 ;;Total ram usage:       14 bytes
 12014 ;; Hardware stack levels used:    1
 12015 ;; This function calls:
 12016 ;;		Nothing
 12017 ;; This function is called by:
 12018 ;;		_ISR_Function
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022                           
 12023                           ;psect for function i1___fttol
 12024  1EF2                     i1___fttol:	
 12025                           
 12026                           ;incstack = 0
 12027                           ; Regs used in i1___fttol: [wreg+status,2+status,0]
 12028  1EF2  0020               	movlb	0	; select bank0
 12029  1EF3  083D               	movf	i1___fttol@f1,w
 12030  1EF4  00C1               	movwf	??i1___fttol
 12031  1EF5  083E               	movf	i1___fttol@f1+1,w
 12032  1EF6  00C2               	movwf	??i1___fttol+1
 12033  1EF7  083F               	movf	i1___fttol@f1+2,w
 12034  1EF8  00C3               	movwf	??i1___fttol+2
 12035  1EF9  1003               	clrc
 12036  1EFA  0D42               	rlf	??i1___fttol+1,w
 12037  1EFB  0D43               	rlf	??i1___fttol+2,w
 12038  1EFC  00C4               	movwf	??i1___fttol+3
 12039  1EFD  0844               	movf	??i1___fttol+3,w
 12040  1EFE  00CA               	movwf	i1___fttol@exp1
 12041  1EFF  08CA               	movf	i1___fttol@exp1,f
 12042  1F00  1D03               	skipz
 12043  1F01  2F0B               	goto	i1l4860
 12044  1F02  3000               	movlw	0
 12045  1F03  00C0               	movwf	?i1___fttol+3
 12046  1F04  3000               	movlw	0
 12047  1F05  00BF               	movwf	?i1___fttol+2
 12048  1F06  3000               	movlw	0
 12049  1F07  00BE               	movwf	?i1___fttol+1
 12050  1F08  3000               	movlw	0
 12051  1F09  00BD               	movwf	?i1___fttol
 12052  1F0A  0008               	return
 12053  1F0B                     i1l4860:	
 12054  1F0B  083D               	movf	i1___fttol@f1,w
 12055  1F0C  00C1               	movwf	??i1___fttol
 12056  1F0D  083E               	movf	i1___fttol@f1+1,w
 12057  1F0E  00C2               	movwf	??i1___fttol+1
 12058  1F0F  083F               	movf	i1___fttol@f1+2,w
 12059  1F10  00C3               	movwf	??i1___fttol+2
 12060  1F11  3017               	movlw	23
 12061  1F12                     u680_25:	
 12062  1F12  36C3               	lsrf	??i1___fttol+2,f
 12063  1F13  0CC2               	rrf	??i1___fttol+1,f
 12064  1F14  0CC1               	rrf	??i1___fttol,f
 12065  1F15  0B89               	decfsz	9,f
 12066  1F16  2F12               	goto	u680_25
 12067  1F17  0841               	movf	??i1___fttol,w
 12068  1F18  00C4               	movwf	??i1___fttol+3
 12069  1F19  0844               	movf	??i1___fttol+3,w
 12070  1F1A  00C5               	movwf	i1___fttol@sign1
 12071  1F1B  17BE               	bsf	i1___fttol@f1+1,7
 12072  1F1C  30FF               	movlw	255
 12073  1F1D  05BD               	andwf	i1___fttol@f1,f
 12074  1F1E  30FF               	movlw	255
 12075  1F1F  05BE               	andwf	i1___fttol@f1+1,f
 12076  1F20  3000               	movlw	0
 12077  1F21  05BF               	andwf	i1___fttol@f1+2,f
 12078  1F22  083D               	movf	i1___fttol@f1,w
 12079  1F23  00C6               	movwf	i1___fttol@lval
 12080  1F24  083E               	movf	i1___fttol@f1+1,w
 12081  1F25  00C7               	movwf	i1___fttol@lval+1
 12082  1F26  083F               	movf	i1___fttol@f1+2,w
 12083  1F27  00C8               	movwf	i1___fttol@lval+2
 12084  1F28  01C9               	clrf	i1___fttol@lval+3
 12085  1F29  308E               	movlw	142
 12086  1F2A  02CA               	subwf	i1___fttol@exp1,f
 12087  1F2B  1FCA               	btfss	i1___fttol@exp1,7
 12088  1F2C  2F49               	goto	i1l4880
 12089  1F2D  084A               	movf	i1___fttol@exp1,w
 12090  1F2E  3A80               	xorlw	128
 12091  1F2F  3E8F               	addlw	143
 12092  1F30  1803               	skipnc
 12093  1F31  2F3B               	goto	i1l4878
 12094  1F32  3000               	movlw	0
 12095  1F33  00C0               	movwf	?i1___fttol+3
 12096  1F34  3000               	movlw	0
 12097  1F35  00BF               	movwf	?i1___fttol+2
 12098  1F36  3000               	movlw	0
 12099  1F37  00BE               	movwf	?i1___fttol+1
 12100  1F38  3000               	movlw	0
 12101  1F39  00BD               	movwf	?i1___fttol
 12102  1F3A  0008               	return
 12103  1F3B                     i1l4878:	
 12104  1F3B  3001               	movlw	1
 12105  1F3C                     u683_25:	
 12106  1F3C  36C9               	lsrf	i1___fttol@lval+3,f
 12107  1F3D  0CC8               	rrf	i1___fttol@lval+2,f
 12108  1F3E  0CC7               	rrf	i1___fttol@lval+1,f
 12109  1F3F  0CC6               	rrf	i1___fttol@lval,f
 12110  1F40  0B89               	decfsz	9,f
 12111  1F41  2F3C               	goto	u683_25
 12112  1F42  3001               	movlw	1
 12113  1F43  00C1               	movwf	??i1___fttol
 12114  1F44  0841               	movf	??i1___fttol,w
 12115  1F45  07CA               	addwf	i1___fttol@exp1,f
 12116  1F46  1903               	btfsc	3,2
 12117  1F47  2F62               	goto	i1l4890
 12118  1F48  2F3B               	goto	i1l4878
 12119  1F49                     i1l4880:	
 12120  1F49  3018               	movlw	24
 12121  1F4A  024A               	subwf	i1___fttol@exp1,w
 12122  1F4B  1C03               	skipc
 12123  1F4C  2F5F               	goto	i1l4888
 12124  1F4D  3000               	movlw	0
 12125  1F4E  00C0               	movwf	?i1___fttol+3
 12126  1F4F  3000               	movlw	0
 12127  1F50  00BF               	movwf	?i1___fttol+2
 12128  1F51  3000               	movlw	0
 12129  1F52  00BE               	movwf	?i1___fttol+1
 12130  1F53  3000               	movlw	0
 12131  1F54  00BD               	movwf	?i1___fttol
 12132  1F55  0008               	return
 12133  1F56                     i1l4886:	
 12134  1F56  3001               	movlw	1
 12135  1F57                     u686_25:	
 12136  1F57  35C6               	lslf	i1___fttol@lval,f
 12137  1F58  0DC7               	rlf	i1___fttol@lval+1,f
 12138  1F59  0DC8               	rlf	i1___fttol@lval+2,f
 12139  1F5A  0DC9               	rlf	i1___fttol@lval+3,f
 12140  1F5B  0B89               	decfsz	9,f
 12141  1F5C  2F57               	goto	u686_25
 12142  1F5D  3001               	movlw	1
 12143  1F5E  02CA               	subwf	i1___fttol@exp1,f
 12144  1F5F                     i1l4888:	
 12145  1F5F  08CA               	movf	i1___fttol@exp1,f
 12146  1F60  1D03               	skipz
 12147  1F61  2F56               	goto	i1l4886
 12148  1F62                     i1l4890:	
 12149  1F62  0845               	movf	i1___fttol@sign1,w
 12150  1F63  1903               	btfsc	3,2
 12151  1F64  2F70               	goto	i1l4894
 12152  1F65  09C6               	comf	i1___fttol@lval,f
 12153  1F66  09C7               	comf	i1___fttol@lval+1,f
 12154  1F67  09C8               	comf	i1___fttol@lval+2,f
 12155  1F68  09C9               	comf	i1___fttol@lval+3,f
 12156  1F69  0AC6               	incf	i1___fttol@lval,f
 12157  1F6A  1903               	skipnz
 12158  1F6B  0AC7               	incf	i1___fttol@lval+1,f
 12159  1F6C  1903               	skipnz
 12160  1F6D  0AC8               	incf	i1___fttol@lval+2,f
 12161  1F6E  1903               	skipnz
 12162  1F6F  0AC9               	incf	i1___fttol@lval+3,f
 12163  1F70                     i1l4894:	
 12164  1F70  0849               	movf	i1___fttol@lval+3,w
 12165  1F71  00C0               	movwf	?i1___fttol+3
 12166  1F72  0848               	movf	i1___fttol@lval+2,w
 12167  1F73  00BF               	movwf	?i1___fttol+2
 12168  1F74  0847               	movf	i1___fttol@lval+1,w
 12169  1F75  00BE               	movwf	?i1___fttol+1
 12170  1F76  0846               	movf	i1___fttol@lval,w
 12171  1F77  00BD               	movwf	?i1___fttol
 12172  1F78  0008               	return
 12173  1F79                     __end_ofi1___fttol:	
 12174                           
 12175                           	psect	text37
 12176  122F                     __ptext37:	
 12177 ;; *************** function i1___ftmul *****************
 12178 ;; Defined at:
 12179 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
 12180 ;; Parameters:    Size  Location     Type
 12181 ;;  f1              3    0[BANK0 ] float 
 12182 ;;  f2              3    3[BANK0 ] float 
 12183 ;; Auto vars:     Size  Location     Type
 12184 ;;  __ftmul         3   11[BANK0 ] unsigned um
 12185 ;;  __ftmul         1   15[BANK0 ] unsigned char 
 12186 ;;  __ftmul         1   14[BANK0 ] unsigned char 
 12187 ;;  __ftmul         1   10[BANK0 ] unsigned char 
 12188 ;; Return value:  Size  Location     Type
 12189 ;;                  3    0[BANK0 ] float 
 12190 ;; Registers used:
 12191 ;;		wreg, status,2, status,0, pclath, cstack
 12192 ;; Tracked objects:
 12193 ;;		On entry : 0/0
 12194 ;;		On exit  : 0/0
 12195 ;;		Unchanged: 0/0
 12196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12197 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12198 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12199 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12200 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12201 ;;Total ram usage:       16 bytes
 12202 ;; Hardware stack levels used:    1
 12203 ;; Hardware stack levels required when called:    1
 12204 ;; This function calls:
 12205 ;;		i1___ftpack
 12206 ;; This function is called by:
 12207 ;;		_ISR_Function
 12208 ;; This function uses a non-reentrant model
 12209 ;;
 12210                           
 12211                           
 12212                           ;psect for function i1___ftmul
 12213  122F                     i1___ftmul:	
 12214                           
 12215                           ;incstack = 0
 12216                           ; Regs used in i1___ftmul: [wreg+status,2+status,0+pclath+cstack]
 12217  122F  0020               	movlb	0	; select bank0
 12218  1230  0820               	movf	i1___ftmul@f1,w
 12219  1231  00A6               	movwf	??i1___ftmul
 12220  1232  0821               	movf	i1___ftmul@f1+1,w
 12221  1233  00A7               	movwf	??i1___ftmul+1
 12222  1234  0822               	movf	i1___ftmul@f1+2,w
 12223  1235  00A8               	movwf	??i1___ftmul+2
 12224  1236  1003               	clrc
 12225  1237  0D27               	rlf	??i1___ftmul+1,w
 12226  1238  0D28               	rlf	??i1___ftmul+2,w
 12227  1239  00A9               	movwf	??i1___ftmul+3
 12228  123A  0829               	movf	??i1___ftmul+3,w
 12229  123B  00AA               	movwf	i1___ftmul@exp
 12230  123C  08AA               	movf	i1___ftmul@exp,f
 12231  123D  1D03               	skipz
 12232  123E  2A46               	goto	i1l4810
 12233  123F  3000               	movlw	0
 12234  1240  00A0               	movwf	?i1___ftmul
 12235  1241  3000               	movlw	0
 12236  1242  00A1               	movwf	?i1___ftmul+1
 12237  1243  3000               	movlw	0
 12238  1244  00A2               	movwf	?i1___ftmul+2
 12239  1245  0008               	return
 12240  1246                     i1l4810:	
 12241  1246  0823               	movf	i1___ftmul@f2,w
 12242  1247  00A6               	movwf	??i1___ftmul
 12243  1248  0824               	movf	i1___ftmul@f2+1,w
 12244  1249  00A7               	movwf	??i1___ftmul+1
 12245  124A  0825               	movf	i1___ftmul@f2+2,w
 12246  124B  00A8               	movwf	??i1___ftmul+2
 12247  124C  1003               	clrc
 12248  124D  0D27               	rlf	??i1___ftmul+1,w
 12249  124E  0D28               	rlf	??i1___ftmul+2,w
 12250  124F  00A9               	movwf	??i1___ftmul+3
 12251  1250  0829               	movf	??i1___ftmul+3,w
 12252  1251  00AF               	movwf	i1___ftmul@sign
 12253  1252  08AF               	movf	i1___ftmul@sign,f
 12254  1253  1D03               	skipz
 12255  1254  2A5C               	goto	i1l4816
 12256  1255  3000               	movlw	0
 12257  1256  00A0               	movwf	?i1___ftmul
 12258  1257  3000               	movlw	0
 12259  1258  00A1               	movwf	?i1___ftmul+1
 12260  1259  3000               	movlw	0
 12261  125A  00A2               	movwf	?i1___ftmul+2
 12262  125B  0008               	return
 12263  125C                     i1l4816:	
 12264  125C  082F               	movf	i1___ftmul@sign,w
 12265  125D  3E7B               	addlw	123
 12266  125E  00A6               	movwf	??i1___ftmul
 12267  125F  0826               	movf	??i1___ftmul,w
 12268  1260  07AA               	addwf	i1___ftmul@exp,f
 12269  1261  0820               	movf	i1___ftmul@f1,w
 12270  1262  00A6               	movwf	??i1___ftmul
 12271  1263  0821               	movf	i1___ftmul@f1+1,w
 12272  1264  00A7               	movwf	??i1___ftmul+1
 12273  1265  0822               	movf	i1___ftmul@f1+2,w
 12274  1266  00A8               	movwf	??i1___ftmul+2
 12275  1267  3010               	movlw	16
 12276  1268                     u669_25:	
 12277  1268  36A8               	lsrf	??i1___ftmul+2,f
 12278  1269  0CA7               	rrf	??i1___ftmul+1,f
 12279  126A  0CA6               	rrf	??i1___ftmul,f
 12280  126B  0B89               	decfsz	9,f
 12281  126C  2A68               	goto	u669_25
 12282  126D  0826               	movf	??i1___ftmul,w
 12283  126E  00A9               	movwf	??i1___ftmul+3
 12284  126F  0829               	movf	??i1___ftmul+3,w
 12285  1270  00AF               	movwf	i1___ftmul@sign
 12286  1271  0823               	movf	i1___ftmul@f2,w
 12287  1272  00A6               	movwf	??i1___ftmul
 12288  1273  0824               	movf	i1___ftmul@f2+1,w
 12289  1274  00A7               	movwf	??i1___ftmul+1
 12290  1275  0825               	movf	i1___ftmul@f2+2,w
 12291  1276  00A8               	movwf	??i1___ftmul+2
 12292  1277  3010               	movlw	16
 12293  1278                     u670_25:	
 12294  1278  36A8               	lsrf	??i1___ftmul+2,f
 12295  1279  0CA7               	rrf	??i1___ftmul+1,f
 12296  127A  0CA6               	rrf	??i1___ftmul,f
 12297  127B  0B89               	decfsz	9,f
 12298  127C  2A78               	goto	u670_25
 12299  127D  0826               	movf	??i1___ftmul,w
 12300  127E  00A9               	movwf	??i1___ftmul+3
 12301  127F  0829               	movf	??i1___ftmul+3,w
 12302  1280  06AF               	xorwf	i1___ftmul@sign,f
 12303  1281  3080               	movlw	128
 12304  1282  00A6               	movwf	??i1___ftmul
 12305  1283  0826               	movf	??i1___ftmul,w
 12306  1284  05AF               	andwf	i1___ftmul@sign,f
 12307  1285  17A1               	bsf	i1___ftmul@f1+1,7
 12308  1286  17A4               	bsf	i1___ftmul@f2+1,7
 12309  1287  30FF               	movlw	255
 12310  1288  05A3               	andwf	i1___ftmul@f2,f
 12311  1289  30FF               	movlw	255
 12312  128A  05A4               	andwf	i1___ftmul@f2+1,f
 12313  128B  3000               	movlw	0
 12314  128C  05A5               	andwf	i1___ftmul@f2+2,f
 12315  128D  3000               	movlw	0
 12316  128E  00AB               	movwf	i1___ftmul@f3_as_product
 12317  128F  3000               	movlw	0
 12318  1290  00AC               	movwf	i1___ftmul@f3_as_product+1
 12319  1291  3000               	movlw	0
 12320  1292  00AD               	movwf	i1___ftmul@f3_as_product+2
 12321  1293  3007               	movlw	7
 12322  1294  00A6               	movwf	??i1___ftmul
 12323  1295  0826               	movf	??i1___ftmul,w
 12324  1296  00AE               	movwf	i1___ftmul@cntr
 12325  1297                     i1l4828:	
 12326  1297  1C20               	btfss	i1___ftmul@f1,0
 12327  1298  2A9F               	goto	i1l4832
 12328  1299  0823               	movf	i1___ftmul@f2,w
 12329  129A  07AB               	addwf	i1___ftmul@f3_as_product,f
 12330  129B  0824               	movf	i1___ftmul@f2+1,w
 12331  129C  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12332  129D  0825               	movf	i1___ftmul@f2+2,w
 12333  129E  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12334  129F                     i1l4832:	
 12335  129F  3001               	movlw	1
 12336  12A0                     u672_25:	
 12337  12A0  36A2               	lsrf	i1___ftmul@f1+2,f
 12338  12A1  0CA1               	rrf	i1___ftmul@f1+1,f
 12339  12A2  0CA0               	rrf	i1___ftmul@f1,f
 12340  12A3  0B89               	decfsz	9,f
 12341  12A4  2AA0               	goto	u672_25
 12342  12A5  3001               	movlw	1
 12343  12A6                     u673_25:	
 12344  12A6  35A3               	lslf	i1___ftmul@f2,f
 12345  12A7  0DA4               	rlf	i1___ftmul@f2+1,f
 12346  12A8  0DA5               	rlf	i1___ftmul@f2+2,f
 12347  12A9  0B89               	decfsz	9,f
 12348  12AA  2AA6               	goto	u673_25
 12349  12AB  3001               	movlw	1
 12350  12AC  02AE               	subwf	i1___ftmul@cntr,f
 12351  12AD  1D03               	btfss	3,2
 12352  12AE  2A97               	goto	i1l4828
 12353  12AF  3009               	movlw	9
 12354  12B0  00A6               	movwf	??i1___ftmul
 12355  12B1  0826               	movf	??i1___ftmul,w
 12356  12B2  00AE               	movwf	i1___ftmul@cntr
 12357  12B3                     i1l4840:	
 12358  12B3  1C20               	btfss	i1___ftmul@f1,0
 12359  12B4  2ABB               	goto	i1l4844
 12360  12B5  0823               	movf	i1___ftmul@f2,w
 12361  12B6  07AB               	addwf	i1___ftmul@f3_as_product,f
 12362  12B7  0824               	movf	i1___ftmul@f2+1,w
 12363  12B8  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12364  12B9  0825               	movf	i1___ftmul@f2+2,w
 12365  12BA  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12366  12BB                     i1l4844:	
 12367  12BB  3001               	movlw	1
 12368  12BC                     u676_25:	
 12369  12BC  36A2               	lsrf	i1___ftmul@f1+2,f
 12370  12BD  0CA1               	rrf	i1___ftmul@f1+1,f
 12371  12BE  0CA0               	rrf	i1___ftmul@f1,f
 12372  12BF  0B89               	decfsz	9,f
 12373  12C0  2ABC               	goto	u676_25
 12374  12C1  3001               	movlw	1
 12375  12C2                     u677_25:	
 12376  12C2  36AD               	lsrf	i1___ftmul@f3_as_product+2,f
 12377  12C3  0CAC               	rrf	i1___ftmul@f3_as_product+1,f
 12378  12C4  0CAB               	rrf	i1___ftmul@f3_as_product,f
 12379  12C5  0B89               	decfsz	9,f
 12380  12C6  2AC2               	goto	u677_25
 12381  12C7  3001               	movlw	1
 12382  12C8  02AE               	subwf	i1___ftmul@cntr,f
 12383  12C9  1D03               	btfss	3,2
 12384  12CA  2AB3               	goto	i1l4840
 12385  12CB  082B               	movf	i1___ftmul@f3_as_product,w
 12386  12CC  00F0               	movwf	i1___ftpack@arg
 12387  12CD  082C               	movf	i1___ftmul@f3_as_product+1,w
 12388  12CE  00F1               	movwf	i1___ftpack@arg+1
 12389  12CF  082D               	movf	i1___ftmul@f3_as_product+2,w
 12390  12D0  00F2               	movwf	i1___ftpack@arg+2
 12391  12D1  082A               	movf	i1___ftmul@exp,w
 12392  12D2  00A6               	movwf	??i1___ftmul
 12393  12D3  0826               	movf	??i1___ftmul,w
 12394  12D4  00F3               	movwf	i1___ftpack@exp
 12395  12D5  082F               	movf	i1___ftmul@sign,w
 12396  12D6  00A7               	movwf	??i1___ftmul+1
 12397  12D7  0827               	movf	??i1___ftmul+1,w
 12398  12D8  00F4               	movwf	i1___ftpack@sign
 12399  12D9  319B  2366         	fcall	i1___ftpack
 12400  12DB  0870               	movf	?i1___ftpack,w
 12401  12DC  0020               	movlb	0	; select bank0
 12402  12DD  00A0               	movwf	?i1___ftmul
 12403  12DE  0871               	movf	?i1___ftpack+1,w
 12404  12DF  00A1               	movwf	?i1___ftmul+1
 12405  12E0  0872               	movf	?i1___ftpack+2,w
 12406  12E1  00A2               	movwf	?i1___ftmul+2
 12407  12E2  0008               	return
 12408  12E3                     __end_ofi1___ftmul:	
 12409                           
 12410                           	psect	text38
 12411  1033                     __ptext38:	
 12412 ;; *************** function i1___ftdiv *****************
 12413 ;; Defined at:
 12414 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
 12415 ;; Parameters:    Size  Location     Type
 12416 ;;  f2              3    0[BANK0 ] float 
 12417 ;;  f1              3    3[BANK0 ] float 
 12418 ;; Auto vars:     Size  Location     Type
 12419 ;;  __ftdiv         3   11[BANK0 ] float 
 12420 ;;  __ftdiv         1   15[BANK0 ] unsigned char 
 12421 ;;  __ftdiv         1   14[BANK0 ] unsigned char 
 12422 ;;  __ftdiv         1   10[BANK0 ] unsigned char 
 12423 ;; Return value:  Size  Location     Type
 12424 ;;                  3    0[BANK0 ] float 
 12425 ;; Registers used:
 12426 ;;		wreg, status,2, status,0, pclath, cstack
 12427 ;; Tracked objects:
 12428 ;;		On entry : 0/0
 12429 ;;		On exit  : 0/0
 12430 ;;		Unchanged: 0/0
 12431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12432 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12433 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12434 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12435 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12436 ;;Total ram usage:       16 bytes
 12437 ;; Hardware stack levels used:    1
 12438 ;; Hardware stack levels required when called:    1
 12439 ;; This function calls:
 12440 ;;		i1___ftpack
 12441 ;; This function is called by:
 12442 ;;		_ISR_Function
 12443 ;; This function uses a non-reentrant model
 12444 ;;
 12445                           
 12446                           
 12447                           ;psect for function i1___ftdiv
 12448  1033                     i1___ftdiv:	
 12449                           
 12450                           ;incstack = 0
 12451                           ; Regs used in i1___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 12452  1033  0020               	movlb	0	; select bank0
 12453  1034  0823               	movf	i1___ftdiv@f1,w
 12454  1035  00A6               	movwf	??i1___ftdiv
 12455  1036  0824               	movf	i1___ftdiv@f1+1,w
 12456  1037  00A7               	movwf	??i1___ftdiv+1
 12457  1038  0825               	movf	i1___ftdiv@f1+2,w
 12458  1039  00A8               	movwf	??i1___ftdiv+2
 12459  103A  1003               	clrc
 12460  103B  0D27               	rlf	??i1___ftdiv+1,w
 12461  103C  0D28               	rlf	??i1___ftdiv+2,w
 12462  103D  00A9               	movwf	??i1___ftdiv+3
 12463  103E  0829               	movf	??i1___ftdiv+3,w
 12464  103F  00AE               	movwf	i1___ftdiv@exp
 12465  1040  08AE               	movf	i1___ftdiv@exp,f
 12466  1041  1D03               	skipz
 12467  1042  284A               	goto	i1l4768
 12468  1043  3000               	movlw	0
 12469  1044  00A0               	movwf	?i1___ftdiv
 12470  1045  3000               	movlw	0
 12471  1046  00A1               	movwf	?i1___ftdiv+1
 12472  1047  3000               	movlw	0
 12473  1048  00A2               	movwf	?i1___ftdiv+2
 12474  1049  0008               	return
 12475  104A                     i1l4768:	
 12476  104A  0820               	movf	i1___ftdiv@f2,w
 12477  104B  00A6               	movwf	??i1___ftdiv
 12478  104C  0821               	movf	i1___ftdiv@f2+1,w
 12479  104D  00A7               	movwf	??i1___ftdiv+1
 12480  104E  0822               	movf	i1___ftdiv@f2+2,w
 12481  104F  00A8               	movwf	??i1___ftdiv+2
 12482  1050  1003               	clrc
 12483  1051  0D27               	rlf	??i1___ftdiv+1,w
 12484  1052  0D28               	rlf	??i1___ftdiv+2,w
 12485  1053  00A9               	movwf	??i1___ftdiv+3
 12486  1054  0829               	movf	??i1___ftdiv+3,w
 12487  1055  00AF               	movwf	i1___ftdiv@sign
 12488  1056  08AF               	movf	i1___ftdiv@sign,f
 12489  1057  1D03               	skipz
 12490  1058  2860               	goto	i1l4774
 12491  1059  3000               	movlw	0
 12492  105A  00A0               	movwf	?i1___ftdiv
 12493  105B  3000               	movlw	0
 12494  105C  00A1               	movwf	?i1___ftdiv+1
 12495  105D  3000               	movlw	0
 12496  105E  00A2               	movwf	?i1___ftdiv+2
 12497  105F  0008               	return
 12498  1060                     i1l4774:	
 12499  1060  3000               	movlw	0
 12500  1061  00AB               	movwf	i1___ftdiv@f3
 12501  1062  3000               	movlw	0
 12502  1063  00AC               	movwf	i1___ftdiv@f3+1
 12503  1064  3000               	movlw	0
 12504  1065  00AD               	movwf	i1___ftdiv@f3+2
 12505  1066  3089               	movlw	137
 12506  1067  072F               	addwf	i1___ftdiv@sign,w
 12507  1068  00A6               	movwf	??i1___ftdiv
 12508  1069  0826               	movf	??i1___ftdiv,w
 12509  106A  02AE               	subwf	i1___ftdiv@exp,f
 12510  106B  0823               	movf	i1___ftdiv@f1,w
 12511  106C  00A6               	movwf	??i1___ftdiv
 12512  106D  0824               	movf	i1___ftdiv@f1+1,w
 12513  106E  00A7               	movwf	??i1___ftdiv+1
 12514  106F  0825               	movf	i1___ftdiv@f1+2,w
 12515  1070  00A8               	movwf	??i1___ftdiv+2
 12516  1071  3010               	movlw	16
 12517  1072                     u661_25:	
 12518  1072  36A8               	lsrf	??i1___ftdiv+2,f
 12519  1073  0CA7               	rrf	??i1___ftdiv+1,f
 12520  1074  0CA6               	rrf	??i1___ftdiv,f
 12521  1075  0B89               	decfsz	9,f
 12522  1076  2872               	goto	u661_25
 12523  1077  0826               	movf	??i1___ftdiv,w
 12524  1078  00A9               	movwf	??i1___ftdiv+3
 12525  1079  0829               	movf	??i1___ftdiv+3,w
 12526  107A  00AF               	movwf	i1___ftdiv@sign
 12527  107B  0820               	movf	i1___ftdiv@f2,w
 12528  107C  00A6               	movwf	??i1___ftdiv
 12529  107D  0821               	movf	i1___ftdiv@f2+1,w
 12530  107E  00A7               	movwf	??i1___ftdiv+1
 12531  107F  0822               	movf	i1___ftdiv@f2+2,w
 12532  1080  00A8               	movwf	??i1___ftdiv+2
 12533  1081  3010               	movlw	16
 12534  1082                     u662_25:	
 12535  1082  36A8               	lsrf	??i1___ftdiv+2,f
 12536  1083  0CA7               	rrf	??i1___ftdiv+1,f
 12537  1084  0CA6               	rrf	??i1___ftdiv,f
 12538  1085  0B89               	decfsz	9,f
 12539  1086  2882               	goto	u662_25
 12540  1087  0826               	movf	??i1___ftdiv,w
 12541  1088  00A9               	movwf	??i1___ftdiv+3
 12542  1089  0829               	movf	??i1___ftdiv+3,w
 12543  108A  06AF               	xorwf	i1___ftdiv@sign,f
 12544  108B  3080               	movlw	128
 12545  108C  00A6               	movwf	??i1___ftdiv
 12546  108D  0826               	movf	??i1___ftdiv,w
 12547  108E  05AF               	andwf	i1___ftdiv@sign,f
 12548  108F  17A4               	bsf	i1___ftdiv@f1+1,7
 12549  1090  30FF               	movlw	255
 12550  1091  05A3               	andwf	i1___ftdiv@f1,f
 12551  1092  30FF               	movlw	255
 12552  1093  05A4               	andwf	i1___ftdiv@f1+1,f
 12553  1094  3000               	movlw	0
 12554  1095  05A5               	andwf	i1___ftdiv@f1+2,f
 12555  1096  17A1               	bsf	i1___ftdiv@f2+1,7
 12556  1097  30FF               	movlw	255
 12557  1098  05A0               	andwf	i1___ftdiv@f2,f
 12558  1099  30FF               	movlw	255
 12559  109A  05A1               	andwf	i1___ftdiv@f2+1,f
 12560  109B  3000               	movlw	0
 12561  109C  05A2               	andwf	i1___ftdiv@f2+2,f
 12562  109D  3018               	movlw	24
 12563  109E  00A6               	movwf	??i1___ftdiv
 12564  109F  0826               	movf	??i1___ftdiv,w
 12565  10A0  00AA               	movwf	i1___ftdiv@cntr
 12566  10A1                     i1l4788:	
 12567  10A1  3001               	movlw	1
 12568  10A2                     u663_25:	
 12569  10A2  35AB               	lslf	i1___ftdiv@f3,f
 12570  10A3  0DAC               	rlf	i1___ftdiv@f3+1,f
 12571  10A4  0DAD               	rlf	i1___ftdiv@f3+2,f
 12572  10A5  0B89               	decfsz	9,f
 12573  10A6  28A2               	goto	u663_25
 12574  10A7  0822               	movf	i1___ftdiv@f2+2,w
 12575  10A8  0225               	subwf	i1___ftdiv@f1+2,w
 12576  10A9  1D03               	skipz
 12577  10AA  28B1               	goto	u664_25
 12578  10AB  0821               	movf	i1___ftdiv@f2+1,w
 12579  10AC  0224               	subwf	i1___ftdiv@f1+1,w
 12580  10AD  1D03               	skipz
 12581  10AE  28B1               	goto	u664_25
 12582  10AF  0820               	movf	i1___ftdiv@f2,w
 12583  10B0  0223               	subwf	i1___ftdiv@f1,w
 12584  10B1                     u664_25:	
 12585  10B1  1C03               	skipc
 12586  10B2  28BA               	goto	i1l4796
 12587  10B3  0820               	movf	i1___ftdiv@f2,w
 12588  10B4  02A3               	subwf	i1___ftdiv@f1,f
 12589  10B5  0821               	movf	i1___ftdiv@f2+1,w
 12590  10B6  3BA4               	subwfb	i1___ftdiv@f1+1,f
 12591  10B7  0822               	movf	i1___ftdiv@f2+2,w
 12592  10B8  3BA5               	subwfb	i1___ftdiv@f1+2,f
 12593  10B9  142B               	bsf	i1___ftdiv@f3,0
 12594  10BA                     i1l4796:	
 12595  10BA  3001               	movlw	1
 12596  10BB                     u665_25:	
 12597  10BB  35A3               	lslf	i1___ftdiv@f1,f
 12598  10BC  0DA4               	rlf	i1___ftdiv@f1+1,f
 12599  10BD  0DA5               	rlf	i1___ftdiv@f1+2,f
 12600  10BE  0B89               	decfsz	9,f
 12601  10BF  28BB               	goto	u665_25
 12602  10C0  3001               	movlw	1
 12603  10C1  02AA               	subwf	i1___ftdiv@cntr,f
 12604  10C2  1D03               	btfss	3,2
 12605  10C3  28A1               	goto	i1l4788
 12606  10C4  082B               	movf	i1___ftdiv@f3,w
 12607  10C5  00F0               	movwf	i1___ftpack@arg
 12608  10C6  082C               	movf	i1___ftdiv@f3+1,w
 12609  10C7  00F1               	movwf	i1___ftpack@arg+1
 12610  10C8  082D               	movf	i1___ftdiv@f3+2,w
 12611  10C9  00F2               	movwf	i1___ftpack@arg+2
 12612  10CA  082E               	movf	i1___ftdiv@exp,w
 12613  10CB  00A6               	movwf	??i1___ftdiv
 12614  10CC  0826               	movf	??i1___ftdiv,w
 12615  10CD  00F3               	movwf	i1___ftpack@exp
 12616  10CE  082F               	movf	i1___ftdiv@sign,w
 12617  10CF  00A7               	movwf	??i1___ftdiv+1
 12618  10D0  0827               	movf	??i1___ftdiv+1,w
 12619  10D1  00F4               	movwf	i1___ftpack@sign
 12620  10D2  319B  2366         	fcall	i1___ftpack
 12621  10D4  0870               	movf	?i1___ftpack,w
 12622  10D5  0020               	movlb	0	; select bank0
 12623  10D6  00A0               	movwf	?i1___ftdiv
 12624  10D7  0871               	movf	?i1___ftpack+1,w
 12625  10D8  00A1               	movwf	?i1___ftdiv+1
 12626  10D9  0872               	movf	?i1___ftpack+2,w
 12627  10DA  00A2               	movwf	?i1___ftdiv+2
 12628  10DB  0008               	return
 12629  10DC                     __end_ofi1___ftdiv:	
 12630                           
 12631                           	psect	text39
 12632  1397                     __ptext39:	
 12633 ;; *************** function i1___ftadd *****************
 12634 ;; Defined at:
 12635 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
 12636 ;; Parameters:    Size  Location     Type
 12637 ;;  f1              3   16[BANK0 ] float 
 12638 ;;  f2              3   19[BANK0 ] float 
 12639 ;; Auto vars:     Size  Location     Type
 12640 ;;  __ftadd         1   28[BANK0 ] unsigned char 
 12641 ;;  __ftadd         1   27[BANK0 ] unsigned char 
 12642 ;;  __ftadd         1   26[BANK0 ] unsigned char 
 12643 ;; Return value:  Size  Location     Type
 12644 ;;                  3   16[BANK0 ] float 
 12645 ;; Registers used:
 12646 ;;		wreg, status,2, status,0, pclath, cstack
 12647 ;; Tracked objects:
 12648 ;;		On entry : 0/0
 12649 ;;		On exit  : 0/0
 12650 ;;		Unchanged: 0/0
 12651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12652 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12653 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12654 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12655 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;Total ram usage:       13 bytes
 12657 ;; Hardware stack levels used:    1
 12658 ;; Hardware stack levels required when called:    1
 12659 ;; This function calls:
 12660 ;;		i1___ftpack
 12661 ;; This function is called by:
 12662 ;;		_ISR_Function
 12663 ;; This function uses a non-reentrant model
 12664 ;;
 12665                           
 12666                           
 12667                           ;psect for function i1___ftadd
 12668  1397                     i1___ftadd:	
 12669                           
 12670                           ;incstack = 0
 12671                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
 12672  1397  0020               	movlb	0	; select bank0
 12673  1398  0830               	movf	i1___ftadd@f1,w
 12674  1399  00B6               	movwf	??i1___ftadd
 12675  139A  0831               	movf	i1___ftadd@f1+1,w
 12676  139B  00B7               	movwf	??i1___ftadd+1
 12677  139C  0832               	movf	i1___ftadd@f1+2,w
 12678  139D  00B8               	movwf	??i1___ftadd+2
 12679  139E  1003               	clrc
 12680  139F  0D37               	rlf	??i1___ftadd+1,w
 12681  13A0  0D38               	rlf	??i1___ftadd+2,w
 12682  13A1  00B9               	movwf	??i1___ftadd+3
 12683  13A2  0839               	movf	??i1___ftadd+3,w
 12684  13A3  00BC               	movwf	i1___ftadd@exp1
 12685  13A4  0833               	movf	i1___ftadd@f2,w
 12686  13A5  00B6               	movwf	??i1___ftadd
 12687  13A6  0834               	movf	i1___ftadd@f2+1,w
 12688  13A7  00B7               	movwf	??i1___ftadd+1
 12689  13A8  0835               	movf	i1___ftadd@f2+2,w
 12690  13A9  00B8               	movwf	??i1___ftadd+2
 12691  13AA  1003               	clrc
 12692  13AB  0D37               	rlf	??i1___ftadd+1,w
 12693  13AC  0D38               	rlf	??i1___ftadd+2,w
 12694  13AD  00B9               	movwf	??i1___ftadd+3
 12695  13AE  0839               	movf	??i1___ftadd+3,w
 12696  13AF  00BB               	movwf	i1___ftadd@exp2
 12697  13B0  083C               	movf	i1___ftadd@exp1,w
 12698  13B1  1903               	btfsc	3,2
 12699  13B2  2BBF               	goto	i1l4698
 12700  13B3  083B               	movf	i1___ftadd@exp2,w
 12701  13B4  023C               	subwf	i1___ftadd@exp1,w
 12702  13B5  1803               	skipnc
 12703  13B6  2BC6               	goto	i1l4702
 12704  13B7  033C               	decf	i1___ftadd@exp1,w
 12705  13B8  3AFF               	xorlw	255
 12706  13B9  073B               	addwf	i1___ftadd@exp2,w
 12707  13BA  00B6               	movwf	??i1___ftadd
 12708  13BB  3019               	movlw	25
 12709  13BC  0236               	subwf	??i1___ftadd,w
 12710  13BD  1C03               	skipc
 12711  13BE  2BC6               	goto	i1l4702
 12712  13BF                     i1l4698:	
 12713  13BF  0833               	movf	i1___ftadd@f2,w
 12714  13C0  00B0               	movwf	?i1___ftadd
 12715  13C1  0834               	movf	i1___ftadd@f2+1,w
 12716  13C2  00B1               	movwf	?i1___ftadd+1
 12717  13C3  0835               	movf	i1___ftadd@f2+2,w
 12718  13C4  00B2               	movwf	?i1___ftadd+2
 12719  13C5  0008               	return
 12720  13C6                     i1l4702:	
 12721  13C6  083B               	movf	i1___ftadd@exp2,w
 12722  13C7  1903               	btfsc	3,2
 12723  13C8  0008               	return
 12724  13C9  083C               	movf	i1___ftadd@exp1,w
 12725  13CA  023B               	subwf	i1___ftadd@exp2,w
 12726  13CB  1803               	skipnc
 12727  13CC  2BD5               	goto	i1l4708
 12728  13CD  033B               	decf	i1___ftadd@exp2,w
 12729  13CE  3AFF               	xorlw	255
 12730  13CF  073C               	addwf	i1___ftadd@exp1,w
 12731  13D0  00B6               	movwf	??i1___ftadd
 12732  13D1  3019               	movlw	25
 12733  13D2  0236               	subwf	??i1___ftadd,w
 12734  13D3  1803               	btfsc	3,0
 12735  13D4  0008               	return
 12736  13D5                     i1l4708:	
 12737  13D5  3006               	movlw	6
 12738  13D6  00B6               	movwf	??i1___ftadd
 12739  13D7  0836               	movf	??i1___ftadd,w
 12740  13D8  00BA               	movwf	i1___ftadd@sign
 12741  13D9  1BB2               	btfsc	i1___ftadd@f1+2,7
 12742  13DA  17BA               	bsf	i1___ftadd@sign,7
 12743  13DB  1BB5               	btfsc	i1___ftadd@f2+2,7
 12744  13DC  173A               	bsf	i1___ftadd@sign,6
 12745  13DD  17B1               	bsf	i1___ftadd@f1+1,7
 12746  13DE  30FF               	movlw	255
 12747  13DF  05B0               	andwf	i1___ftadd@f1,f
 12748  13E0  30FF               	movlw	255
 12749  13E1  05B1               	andwf	i1___ftadd@f1+1,f
 12750  13E2  3000               	movlw	0
 12751  13E3  05B2               	andwf	i1___ftadd@f1+2,f
 12752  13E4  17B4               	bsf	i1___ftadd@f2+1,7
 12753  13E5  30FF               	movlw	255
 12754  13E6  05B3               	andwf	i1___ftadd@f2,f
 12755  13E7  30FF               	movlw	255
 12756  13E8  05B4               	andwf	i1___ftadd@f2+1,f
 12757  13E9  3000               	movlw	0
 12758  13EA  05B5               	andwf	i1___ftadd@f2+2,f
 12759  13EB  083B               	movf	i1___ftadd@exp2,w
 12760  13EC  023C               	subwf	i1___ftadd@exp1,w
 12761  13ED  1803               	skipnc
 12762  13EE  2C11               	goto	i1l4730
 12763  13EF                     i1l4720:	
 12764  13EF  3001               	movlw	1
 12765  13F0                     u645_25:	
 12766  13F0  35B3               	lslf	i1___ftadd@f2,f
 12767  13F1  0DB4               	rlf	i1___ftadd@f2+1,f
 12768  13F2  0DB5               	rlf	i1___ftadd@f2+2,f
 12769  13F3  0B89               	decfsz	9,f
 12770  13F4  2BF0               	goto	u645_25
 12771  13F5  3001               	movlw	1
 12772  13F6  02BB               	subwf	i1___ftadd@exp2,f
 12773  13F7  083B               	movf	i1___ftadd@exp2,w
 12774  13F8  063C               	xorwf	i1___ftadd@exp1,w
 12775  13F9  1903               	skipnz
 12776  13FA  2C0C               	goto	i1l4728
 12777  13FB  3001               	movlw	1
 12778  13FC  02BA               	subwf	i1___ftadd@sign,f
 12779  13FD  083A               	movf	i1___ftadd@sign,w
 12780  13FE  3907               	andlw	7
 12781  13FF  1903               	btfsc	3,2
 12782  1400  2C0C               	goto	i1l4728
 12783  1401  2BEF               	goto	i1l4720
 12784  1402                     i1l4726:	
 12785  1402  3001               	movlw	1
 12786  1403                     u648_25:	
 12787  1403  36B2               	lsrf	i1___ftadd@f1+2,f
 12788  1404  0CB1               	rrf	i1___ftadd@f1+1,f
 12789  1405  0CB0               	rrf	i1___ftadd@f1,f
 12790  1406  0B89               	decfsz	9,f
 12791  1407  2C03               	goto	u648_25
 12792  1408  3001               	movlw	1
 12793  1409  00B6               	movwf	??i1___ftadd
 12794  140A  0836               	movf	??i1___ftadd,w
 12795  140B  07BC               	addwf	i1___ftadd@exp1,f
 12796  140C                     i1l4728:	
 12797  140C  083C               	movf	i1___ftadd@exp1,w
 12798  140D  063B               	xorwf	i1___ftadd@exp2,w
 12799  140E  1903               	btfsc	3,2
 12800  140F  2C36               	goto	i1l1101
 12801  1410  2C02               	goto	i1l4726
 12802  1411                     i1l4730:	
 12803  1411  083C               	movf	i1___ftadd@exp1,w
 12804  1412  023B               	subwf	i1___ftadd@exp2,w
 12805  1413  1803               	skipnc
 12806  1414  2C36               	goto	i1l1101
 12807  1415                     i1l4732:	
 12808  1415  3001               	movlw	1
 12809  1416                     u651_25:	
 12810  1416  35B0               	lslf	i1___ftadd@f1,f
 12811  1417  0DB1               	rlf	i1___ftadd@f1+1,f
 12812  1418  0DB2               	rlf	i1___ftadd@f1+2,f
 12813  1419  0B89               	decfsz	9,f
 12814  141A  2C16               	goto	u651_25
 12815  141B  3001               	movlw	1
 12816  141C  02BC               	subwf	i1___ftadd@exp1,f
 12817  141D  083B               	movf	i1___ftadd@exp2,w
 12818  141E  063C               	xorwf	i1___ftadd@exp1,w
 12819  141F  1903               	skipnz
 12820  1420  2C32               	goto	i1l4740
 12821  1421  3001               	movlw	1
 12822  1422  02BA               	subwf	i1___ftadd@sign,f
 12823  1423  083A               	movf	i1___ftadd@sign,w
 12824  1424  3907               	andlw	7
 12825  1425  1903               	btfsc	3,2
 12826  1426  2C32               	goto	i1l4740
 12827  1427  2C15               	goto	i1l4732
 12828  1428                     i1l4738:	
 12829  1428  3001               	movlw	1
 12830  1429                     u654_25:	
 12831  1429  36B5               	lsrf	i1___ftadd@f2+2,f
 12832  142A  0CB4               	rrf	i1___ftadd@f2+1,f
 12833  142B  0CB3               	rrf	i1___ftadd@f2,f
 12834  142C  0B89               	decfsz	9,f
 12835  142D  2C29               	goto	u654_25
 12836  142E  3001               	movlw	1
 12837  142F  00B6               	movwf	??i1___ftadd
 12838  1430  0836               	movf	??i1___ftadd,w
 12839  1431  07BB               	addwf	i1___ftadd@exp2,f
 12840  1432                     i1l4740:	
 12841  1432  083C               	movf	i1___ftadd@exp1,w
 12842  1433  063B               	xorwf	i1___ftadd@exp2,w
 12843  1434  1D03               	skipz
 12844  1435  2C28               	goto	i1l4738
 12845  1436                     i1l1101:	
 12846  1436  1FBA               	btfss	i1___ftadd@sign,7
 12847  1437  2C48               	goto	i1l4744
 12848  1438  30FF               	movlw	255
 12849  1439  06B0               	xorwf	i1___ftadd@f1,f
 12850  143A  30FF               	movlw	255
 12851  143B  06B1               	xorwf	i1___ftadd@f1+1,f
 12852  143C  30FF               	movlw	255
 12853  143D  06B2               	xorwf	i1___ftadd@f1+2,f
 12854  143E  3001               	movlw	1
 12855  143F  07B0               	addwf	i1___ftadd@f1,f
 12856  1440  3000               	movlw	0
 12857  1441  1803               	skipnc
 12858  1442  3001               	movlw	1
 12859  1443  07B1               	addwf	i1___ftadd@f1+1,f
 12860  1444  3000               	movlw	0
 12861  1445  1803               	skipnc
 12862  1446  3001               	movlw	1
 12863  1447  07B2               	addwf	i1___ftadd@f1+2,f
 12864  1448                     i1l4744:	
 12865  1448  1F3A               	btfss	i1___ftadd@sign,6
 12866  1449  2C5A               	goto	i1l4748
 12867  144A  30FF               	movlw	255
 12868  144B  06B3               	xorwf	i1___ftadd@f2,f
 12869  144C  30FF               	movlw	255
 12870  144D  06B4               	xorwf	i1___ftadd@f2+1,f
 12871  144E  30FF               	movlw	255
 12872  144F  06B5               	xorwf	i1___ftadd@f2+2,f
 12873  1450  3001               	movlw	1
 12874  1451  07B3               	addwf	i1___ftadd@f2,f
 12875  1452  3000               	movlw	0
 12876  1453  1803               	skipnc
 12877  1454  3001               	movlw	1
 12878  1455  07B4               	addwf	i1___ftadd@f2+1,f
 12879  1456  3000               	movlw	0
 12880  1457  1803               	skipnc
 12881  1458  3001               	movlw	1
 12882  1459  07B5               	addwf	i1___ftadd@f2+2,f
 12883  145A                     i1l4748:	
 12884  145A  01BA               	clrf	i1___ftadd@sign
 12885  145B  0830               	movf	i1___ftadd@f1,w
 12886  145C  07B3               	addwf	i1___ftadd@f2,f
 12887  145D  0831               	movf	i1___ftadd@f1+1,w
 12888  145E  3DB4               	addwfc	i1___ftadd@f2+1,f
 12889  145F  0832               	movf	i1___ftadd@f1+2,w
 12890  1460  3DB5               	addwfc	i1___ftadd@f2+2,f
 12891  1461  1FB5               	btfss	i1___ftadd@f2+2,7
 12892  1462  2C75               	goto	i1l4758
 12893  1463  30FF               	movlw	255
 12894  1464  06B3               	xorwf	i1___ftadd@f2,f
 12895  1465  30FF               	movlw	255
 12896  1466  06B4               	xorwf	i1___ftadd@f2+1,f
 12897  1467  30FF               	movlw	255
 12898  1468  06B5               	xorwf	i1___ftadd@f2+2,f
 12899  1469  3001               	movlw	1
 12900  146A  07B3               	addwf	i1___ftadd@f2,f
 12901  146B  3000               	movlw	0
 12902  146C  1803               	skipnc
 12903  146D  3001               	movlw	1
 12904  146E  07B4               	addwf	i1___ftadd@f2+1,f
 12905  146F  3000               	movlw	0
 12906  1470  1803               	skipnc
 12907  1471  3001               	movlw	1
 12908  1472  07B5               	addwf	i1___ftadd@f2+2,f
 12909  1473  01BA               	clrf	i1___ftadd@sign
 12910  1474  0ABA               	incf	i1___ftadd@sign,f
 12911  1475                     i1l4758:	
 12912  1475  0833               	movf	i1___ftadd@f2,w
 12913  1476  00F0               	movwf	i1___ftpack@arg
 12914  1477  0834               	movf	i1___ftadd@f2+1,w
 12915  1478  00F1               	movwf	i1___ftpack@arg+1
 12916  1479  0835               	movf	i1___ftadd@f2+2,w
 12917  147A  00F2               	movwf	i1___ftpack@arg+2
 12918  147B  083C               	movf	i1___ftadd@exp1,w
 12919  147C  00B6               	movwf	??i1___ftadd
 12920  147D  0836               	movf	??i1___ftadd,w
 12921  147E  00F3               	movwf	i1___ftpack@exp
 12922  147F  083A               	movf	i1___ftadd@sign,w
 12923  1480  00B7               	movwf	??i1___ftadd+1
 12924  1481  0837               	movf	??i1___ftadd+1,w
 12925  1482  00F4               	movwf	i1___ftpack@sign
 12926  1483  319B  2366         	fcall	i1___ftpack
 12927  1485  0870               	movf	?i1___ftpack,w
 12928  1486  0020               	movlb	0	; select bank0
 12929  1487  00B0               	movwf	?i1___ftadd
 12930  1488  0871               	movf	?i1___ftpack+1,w
 12931  1489  00B1               	movwf	?i1___ftadd+1
 12932  148A  0872               	movf	?i1___ftpack+2,w
 12933  148B  00B2               	movwf	?i1___ftadd+2
 12934  148C  0008               	return
 12935  148D                     __end_ofi1___ftadd:	
 12936                           
 12937                           	psect	text40
 12938  1B66                     __ptext40:	
 12939 ;; *************** function i1___ftpack *****************
 12940 ;; Defined at:
 12941 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
 12942 ;; Parameters:    Size  Location     Type
 12943 ;;  arg             3    0[COMMON] unsigned um
 12944 ;;  exp             1    3[COMMON] unsigned char 
 12945 ;;  sign            1    4[COMMON] unsigned char 
 12946 ;; Auto vars:     Size  Location     Type
 12947 ;;		None
 12948 ;; Return value:  Size  Location     Type
 12949 ;;                  3    0[COMMON] float 
 12950 ;; Registers used:
 12951 ;;		wreg, status,2, status,0
 12952 ;; Tracked objects:
 12953 ;;		On entry : 0/0
 12954 ;;		On exit  : 0/0
 12955 ;;		Unchanged: 0/0
 12956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12957 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12959 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12960 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12961 ;;Total ram usage:        8 bytes
 12962 ;; Hardware stack levels used:    1
 12963 ;; This function calls:
 12964 ;;		Nothing
 12965 ;; This function is called by:
 12966 ;;		i1___ftadd
 12967 ;;		i1___ftdiv
 12968 ;;		i1___ftmul
 12969 ;;		i1___lwtoft
 12970 ;; This function uses a non-reentrant model
 12971 ;;
 12972                           
 12973                           
 12974                           ;psect for function i1___ftpack
 12975  1B66                     i1___ftpack:	
 12976                           
 12977                           ;incstack = 0
 12978                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
 12979  1B66  0873               	movf	i1___ftpack@exp,w
 12980  1B67  1903               	btfsc	3,2
 12981  1B68  2B6E               	goto	i1l3988
 12982  1B69  0872               	movf	i1___ftpack@arg+2,w
 12983  1B6A  0471               	iorwf	i1___ftpack@arg+1,w
 12984  1B6B  0470               	iorwf	i1___ftpack@arg,w
 12985  1B6C  1D03               	skipz
 12986  1B6D  2B7F               	goto	i1l3994
 12987  1B6E                     i1l3988:	
 12988  1B6E  3000               	movlw	0
 12989  1B6F  00F0               	movwf	?i1___ftpack
 12990  1B70  3000               	movlw	0
 12991  1B71  00F1               	movwf	?i1___ftpack+1
 12992  1B72  3000               	movlw	0
 12993  1B73  00F2               	movwf	?i1___ftpack+2
 12994  1B74  0008               	return
 12995  1B75                     i1l3992:	
 12996  1B75  3001               	movlw	1
 12997  1B76  00F5               	movwf	??i1___ftpack
 12998  1B77  0875               	movf	??i1___ftpack,w
 12999  1B78  07F3               	addwf	i1___ftpack@exp,f
 13000  1B79  3001               	movlw	1
 13001  1B7A                     u524_25:	
 13002  1B7A  36F2               	lsrf	i1___ftpack@arg+2,f
 13003  1B7B  0CF1               	rrf	i1___ftpack@arg+1,f
 13004  1B7C  0CF0               	rrf	i1___ftpack@arg,f
 13005  1B7D  0B89               	decfsz	9,f
 13006  1B7E  2B7A               	goto	u524_25
 13007  1B7F                     i1l3994:	
 13008  1B7F  30FE               	movlw	254
 13009  1B80  0572               	andwf	i1___ftpack@arg+2,w
 13010  1B81  1903               	btfsc	3,2
 13011  1B82  2B98               	goto	i1l1072
 13012  1B83  2B75               	goto	i1l3992
 13013  1B84                     i1l3996:	
 13014  1B84  3001               	movlw	1
 13015  1B85  00F5               	movwf	??i1___ftpack
 13016  1B86  0875               	movf	??i1___ftpack,w
 13017  1B87  07F3               	addwf	i1___ftpack@exp,f
 13018  1B88  3001               	movlw	1
 13019  1B89  07F0               	addwf	i1___ftpack@arg,f
 13020  1B8A  3000               	movlw	0
 13021  1B8B  1803               	skipnc
 13022  1B8C  3001               	movlw	1
 13023  1B8D  07F1               	addwf	i1___ftpack@arg+1,f
 13024  1B8E  3000               	movlw	0
 13025  1B8F  1803               	skipnc
 13026  1B90  3001               	movlw	1
 13027  1B91  07F2               	addwf	i1___ftpack@arg+2,f
 13028  1B92  3001               	movlw	1
 13029  1B93                     u526_25:	
 13030  1B93  36F2               	lsrf	i1___ftpack@arg+2,f
 13031  1B94  0CF1               	rrf	i1___ftpack@arg+1,f
 13032  1B95  0CF0               	rrf	i1___ftpack@arg,f
 13033  1B96  0B89               	decfsz	9,f
 13034  1B97  2B93               	goto	u526_25
 13035  1B98                     i1l1072:	
 13036  1B98  30FF               	movlw	255
 13037  1B99  0572               	andwf	i1___ftpack@arg+2,w
 13038  1B9A  1903               	btfsc	3,2
 13039  1B9B  2BA5               	goto	i1l4004
 13040  1B9C  2B84               	goto	i1l3996
 13041  1B9D                     i1l4002:	
 13042  1B9D  3001               	movlw	1
 13043  1B9E  02F3               	subwf	i1___ftpack@exp,f
 13044  1B9F  3001               	movlw	1
 13045  1BA0                     u528_25:	
 13046  1BA0  35F0               	lslf	i1___ftpack@arg,f
 13047  1BA1  0DF1               	rlf	i1___ftpack@arg+1,f
 13048  1BA2  0DF2               	rlf	i1___ftpack@arg+2,f
 13049  1BA3  0B89               	decfsz	9,f
 13050  1BA4  2BA0               	goto	u528_25
 13051  1BA5                     i1l4004:	
 13052  1BA5  1FF1               	btfss	i1___ftpack@arg+1,7
 13053  1BA6  2B9D               	goto	i1l4002
 13054  1BA7  1873               	btfsc	i1___ftpack@exp,0
 13055  1BA8  2BAF               	goto	i1l1078
 13056  1BA9  30FF               	movlw	255
 13057  1BAA  05F0               	andwf	i1___ftpack@arg,f
 13058  1BAB  307F               	movlw	127
 13059  1BAC  05F1               	andwf	i1___ftpack@arg+1,f
 13060  1BAD  30FF               	movlw	255
 13061  1BAE  05F2               	andwf	i1___ftpack@arg+2,f
 13062  1BAF                     i1l1078:	
 13063  1BAF  1003               	clrc
 13064  1BB0  0CF3               	rrf	i1___ftpack@exp,f
 13065  1BB1  0873               	movf	i1___ftpack@exp,w
 13066  1BB2  00F5               	movwf	??i1___ftpack
 13067  1BB3  01F6               	clrf	??i1___ftpack+1
 13068  1BB4  01F7               	clrf	??i1___ftpack+2
 13069  1BB5  3010               	movlw	16
 13070  1BB6                     u531_25:	
 13071  1BB6  35F5               	lslf	??i1___ftpack,f
 13072  1BB7  0DF6               	rlf	??i1___ftpack+1,f
 13073  1BB8  0DF7               	rlf	??i1___ftpack+2,f
 13074  1BB9  0B89               	decfsz	9,f
 13075  1BBA  2BB6               	goto	u531_25
 13076  1BBB  0875               	movf	??i1___ftpack,w
 13077  1BBC  04F0               	iorwf	i1___ftpack@arg,f
 13078  1BBD  0876               	movf	??i1___ftpack+1,w
 13079  1BBE  04F1               	iorwf	i1___ftpack@arg+1,f
 13080  1BBF  0877               	movf	??i1___ftpack+2,w
 13081  1BC0  04F2               	iorwf	i1___ftpack@arg+2,f
 13082  1BC1  0874               	movf	i1___ftpack@sign,w
 13083  1BC2  1903               	btfsc	3,2
 13084  1BC3  0008               	return
 13085  1BC4  17F2               	bsf	i1___ftpack@arg+2,7
 13086  1BC5  0008               	return
 13087  1BC6                     __end_ofi1___ftpack:	
 13088                           
 13089                           	psect	text41
 13090  1DEE                     __ptext41:	
 13091 ;; *************** function i1___aldiv *****************
 13092 ;; Defined at:
 13093 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\aldiv.c"
 13094 ;; Parameters:    Size  Location     Type
 13095 ;;  divisor         4    0[COMMON] long 
 13096 ;;  dividend        4    4[COMMON] long 
 13097 ;; Auto vars:     Size  Location     Type
 13098 ;;  __aldiv         4    2[BANK0 ] long 
 13099 ;;  __aldiv         1    1[BANK0 ] unsigned char 
 13100 ;;  __aldiv         1    0[BANK0 ] unsigned char 
 13101 ;; Return value:  Size  Location     Type
 13102 ;;                  4    0[COMMON] long 
 13103 ;; Registers used:
 13104 ;;		wreg, status,2, status,0
 13105 ;; Tracked objects:
 13106 ;;		On entry : 0/0
 13107 ;;		On exit  : 0/0
 13108 ;;		Unchanged: 0/0
 13109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13110 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13111 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13113 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13114 ;;Total ram usage:       15 bytes
 13115 ;; Hardware stack levels used:    1
 13116 ;; This function calls:
 13117 ;;		Nothing
 13118 ;; This function is called by:
 13119 ;;		_ISR_Function
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123                           
 13124                           ;psect for function i1___aldiv
 13125  1DEE                     i1___aldiv:	
 13126                           
 13127                           ;incstack = 0
 13128                           ; Regs used in i1___aldiv: [wreg+status,2+status,0]
 13129  1DEE  0020               	movlb	0	; select bank0
 13130  1DEF  01A1               	clrf	i1___aldiv@sign
 13131  1DF0  1FF3               	btfss	i1___aldiv@divisor+3,7
 13132  1DF1  2DFF               	goto	i1l966
 13133  1DF2  09F0               	comf	i1___aldiv@divisor,f
 13134  1DF3  09F1               	comf	i1___aldiv@divisor+1,f
 13135  1DF4  09F2               	comf	i1___aldiv@divisor+2,f
 13136  1DF5  09F3               	comf	i1___aldiv@divisor+3,f
 13137  1DF6  0AF0               	incf	i1___aldiv@divisor,f
 13138  1DF7  1903               	skipnz
 13139  1DF8  0AF1               	incf	i1___aldiv@divisor+1,f
 13140  1DF9  1903               	skipnz
 13141  1DFA  0AF2               	incf	i1___aldiv@divisor+2,f
 13142  1DFB  1903               	skipnz
 13143  1DFC  0AF3               	incf	i1___aldiv@divisor+3,f
 13144  1DFD  01A1               	clrf	i1___aldiv@sign
 13145  1DFE  0AA1               	incf	i1___aldiv@sign,f
 13146  1DFF                     i1l966:	
 13147  1DFF  1FF7               	btfss	i1___aldiv@dividend+3,7
 13148  1E00  2E10               	goto	i1l4660
 13149  1E01  09F4               	comf	i1___aldiv@dividend,f
 13150  1E02  09F5               	comf	i1___aldiv@dividend+1,f
 13151  1E03  09F6               	comf	i1___aldiv@dividend+2,f
 13152  1E04  09F7               	comf	i1___aldiv@dividend+3,f
 13153  1E05  0AF4               	incf	i1___aldiv@dividend,f
 13154  1E06  1903               	skipnz
 13155  1E07  0AF5               	incf	i1___aldiv@dividend+1,f
 13156  1E08  1903               	skipnz
 13157  1E09  0AF6               	incf	i1___aldiv@dividend+2,f
 13158  1E0A  1903               	skipnz
 13159  1E0B  0AF7               	incf	i1___aldiv@dividend+3,f
 13160  1E0C  3001               	movlw	1
 13161  1E0D  00F8               	movwf	??i1___aldiv
 13162  1E0E  0878               	movf	??i1___aldiv,w
 13163  1E0F  06A1               	xorwf	i1___aldiv@sign,f
 13164  1E10                     i1l4660:	
 13165  1E10  3000               	movlw	0
 13166  1E11  00A5               	movwf	i1___aldiv@quotient+3
 13167  1E12  3000               	movlw	0
 13168  1E13  00A4               	movwf	i1___aldiv@quotient+2
 13169  1E14  3000               	movlw	0
 13170  1E15  00A3               	movwf	i1___aldiv@quotient+1
 13171  1E16  3000               	movlw	0
 13172  1E17  00A2               	movwf	i1___aldiv@quotient
 13173  1E18  0873               	movf	i1___aldiv@divisor+3,w
 13174  1E19  0472               	iorwf	i1___aldiv@divisor+2,w
 13175  1E1A  0471               	iorwf	i1___aldiv@divisor+1,w
 13176  1E1B  0470               	iorwf	i1___aldiv@divisor,w
 13177  1E1C  1903               	skipnz
 13178  1E1D  2E59               	goto	i1l4682
 13179  1E1E  01A0               	clrf	i1___aldiv@counter
 13180  1E1F  0AA0               	incf	i1___aldiv@counter,f
 13181  1E20                     i1l4668:	
 13182  1E20  1BF3               	btfsc	i1___aldiv@divisor+3,7
 13183  1E21  2E2E               	goto	i1l4670
 13184  1E22  3001               	movlw	1
 13185  1E23                     u629_25:	
 13186  1E23  35F0               	lslf	i1___aldiv@divisor,f
 13187  1E24  0DF1               	rlf	i1___aldiv@divisor+1,f
 13188  1E25  0DF2               	rlf	i1___aldiv@divisor+2,f
 13189  1E26  0DF3               	rlf	i1___aldiv@divisor+3,f
 13190  1E27  0B89               	decfsz	9,f
 13191  1E28  2E23               	goto	u629_25
 13192  1E29  3001               	movlw	1
 13193  1E2A  00F8               	movwf	??i1___aldiv
 13194  1E2B  0878               	movf	??i1___aldiv,w
 13195  1E2C  07A0               	addwf	i1___aldiv@counter,f
 13196  1E2D  2E20               	goto	i1l4668
 13197  1E2E                     i1l4670:	
 13198  1E2E  3001               	movlw	1
 13199  1E2F                     u631_25:	
 13200  1E2F  35A2               	lslf	i1___aldiv@quotient,f
 13201  1E30  0DA3               	rlf	i1___aldiv@quotient+1,f
 13202  1E31  0DA4               	rlf	i1___aldiv@quotient+2,f
 13203  1E32  0DA5               	rlf	i1___aldiv@quotient+3,f
 13204  1E33  0B89               	decfsz	9,f
 13205  1E34  2E2F               	goto	u631_25
 13206  1E35  0873               	movf	i1___aldiv@divisor+3,w
 13207  1E36  0277               	subwf	i1___aldiv@dividend+3,w
 13208  1E37  1D03               	skipz
 13209  1E38  2E43               	goto	u632_25
 13210  1E39  0872               	movf	i1___aldiv@divisor+2,w
 13211  1E3A  0276               	subwf	i1___aldiv@dividend+2,w
 13212  1E3B  1D03               	skipz
 13213  1E3C  2E43               	goto	u632_25
 13214  1E3D  0871               	movf	i1___aldiv@divisor+1,w
 13215  1E3E  0275               	subwf	i1___aldiv@dividend+1,w
 13216  1E3F  1D03               	skipz
 13217  1E40  2E43               	goto	u632_25
 13218  1E41  0870               	movf	i1___aldiv@divisor,w
 13219  1E42  0274               	subwf	i1___aldiv@dividend,w
 13220  1E43                     u632_25:	
 13221  1E43  1C03               	skipc
 13222  1E44  2E4E               	goto	i1l4678
 13223  1E45  0870               	movf	i1___aldiv@divisor,w
 13224  1E46  02F4               	subwf	i1___aldiv@dividend,f
 13225  1E47  0871               	movf	i1___aldiv@divisor+1,w
 13226  1E48  3BF5               	subwfb	i1___aldiv@dividend+1,f
 13227  1E49  0872               	movf	i1___aldiv@divisor+2,w
 13228  1E4A  3BF6               	subwfb	i1___aldiv@dividend+2,f
 13229  1E4B  0873               	movf	i1___aldiv@divisor+3,w
 13230  1E4C  3BF7               	subwfb	i1___aldiv@dividend+3,f
 13231  1E4D  1422               	bsf	i1___aldiv@quotient,0
 13232  1E4E                     i1l4678:	
 13233  1E4E  3001               	movlw	1
 13234  1E4F                     u633_25:	
 13235  1E4F  36F3               	lsrf	i1___aldiv@divisor+3,f
 13236  1E50  0CF2               	rrf	i1___aldiv@divisor+2,f
 13237  1E51  0CF1               	rrf	i1___aldiv@divisor+1,f
 13238  1E52  0CF0               	rrf	i1___aldiv@divisor,f
 13239  1E53  0B89               	decfsz	9,f
 13240  1E54  2E4F               	goto	u633_25
 13241  1E55  3001               	movlw	1
 13242  1E56  02A0               	subwf	i1___aldiv@counter,f
 13243  1E57  1D03               	btfss	3,2
 13244  1E58  2E2E               	goto	i1l4670
 13245  1E59                     i1l4682:	
 13246  1E59  0821               	movf	i1___aldiv@sign,w
 13247  1E5A  1903               	btfsc	3,2
 13248  1E5B  2E67               	goto	i1l4686
 13249  1E5C  09A2               	comf	i1___aldiv@quotient,f
 13250  1E5D  09A3               	comf	i1___aldiv@quotient+1,f
 13251  1E5E  09A4               	comf	i1___aldiv@quotient+2,f
 13252  1E5F  09A5               	comf	i1___aldiv@quotient+3,f
 13253  1E60  0AA2               	incf	i1___aldiv@quotient,f
 13254  1E61  1903               	skipnz
 13255  1E62  0AA3               	incf	i1___aldiv@quotient+1,f
 13256  1E63  1903               	skipnz
 13257  1E64  0AA4               	incf	i1___aldiv@quotient+2,f
 13258  1E65  1903               	skipnz
 13259  1E66  0AA5               	incf	i1___aldiv@quotient+3,f
 13260  1E67                     i1l4686:	
 13261  1E67  0825               	movf	i1___aldiv@quotient+3,w
 13262  1E68  00F3               	movwf	?i1___aldiv+3
 13263  1E69  0824               	movf	i1___aldiv@quotient+2,w
 13264  1E6A  00F2               	movwf	?i1___aldiv+2
 13265  1E6B  0823               	movf	i1___aldiv@quotient+1,w
 13266  1E6C  00F1               	movwf	?i1___aldiv+1
 13267  1E6D  0822               	movf	i1___aldiv@quotient,w
 13268  1E6E  00F0               	movwf	?i1___aldiv
 13269  1E6F  0008               	return
 13270  1E70                     __end_ofi1___aldiv:	
 13271                           
 13272                           	psect	text42
 13273  0558                     __ptext42:	
 13274 ;; *************** function _Display *****************
 13275 ;; Defined at:
 13276 ;;		line 8 in file "DISPLAY.C"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;		None
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;		None
 13281 ;; Return value:  Size  Location     Type
 13282 ;;		None               void
 13283 ;; Registers used:
 13284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13292 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13293 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13294 ;;Total ram usage:        2 bytes
 13295 ;; Hardware stack levels used:    1
 13296 ;; This function calls:
 13297 ;;		Nothing
 13298 ;; This function is called by:
 13299 ;;		_ISR_Function
 13300 ;; This function uses a non-reentrant model
 13301 ;;
 13302                           
 13303                           
 13304                           ;psect for function _Display
 13305  0558                     _Display:	
 13306                           
 13307                           ;DISPLAY.C: 10: PORTB=0x00;
 13308                           
 13309                           ;incstack = 0
 13310                           ; Regs used in _Display: [wreg-fsr1h+status,2+status,0+pclath]
 13311  0558  0020               	movlb	0	; select bank0
 13312  0559  018D               	clrf	13	;volatile
 13313                           
 13314                           ;DISPLAY.C: 11: if(digit<=5)
 13315  055A  3006               	movlw	6
 13316  055B  025C               	subwf	_digit,w
 13317  055C  1C03               	btfss	3,0
 13318  055D  2E0C               	goto	i1l4058
 13319  055E  2E18               	goto	i1l4060
 13320  055F                     i1l423:	
 13321                           ;DISPLAY.C: 14: {
 13322                           ;DISPLAY.C: 15: case 0:
 13323                           
 13324                           ;DISPLAY.C: 12: {
 13325                           ;DISPLAY.C: 13: switch(digit)
 13326                           
 13327                           
 13328                           ;DISPLAY.C: 16: LATCbits.LATC4=0;
 13329  055F  0022               	movlb	2	; select bank2
 13330  0560  120E               	bcf	14,4	;volatile
 13331                           
 13332                           ;DISPLAY.C: 17: LATAbits.LATA6=0;
 13333  0561  130C               	bcf	12,6	;volatile
 13334                           
 13335                           ;DISPLAY.C: 18: LATAbits.LATA7=0;
 13336  0562  138C               	bcf	12,7	;volatile
 13337                           
 13338                           ;DISPLAY.C: 19: LATB=lookup_table[diswin1[digit]];
 13339  0563  0020               	movlb	0	; select bank0
 13340  0564  085C               	movf	_digit,w
 13341  0565  3E64               	addlw	_diswin1& (0+255)
 13342  0566  0086               	movwf	6
 13343  0567  3001               	movlw	1	; select bank2/3
 13344  0568  0087               	movwf	7
 13345  0569  0801               	movf	1,w
 13346  056A  00F0               	movwf	??_Display
 13347  056B  01F1               	clrf	??_Display+1
 13348  056C  35F0               	lslf	??_Display,f
 13349  056D  0DF1               	rlf	??_Display+1,f
 13350  056E  3000               	movlw	low (_lookup_table| (0+32768))
 13351  056F  0770               	addwf	??_Display,w
 13352  0570  0084               	movwf	4
 13353  0571  3098               	movlw	high (_lookup_table| (0+32768))
 13354  0572  3D71               	addwfc	??_Display+1,w
 13355  0573  0085               	movwf	5
 13356  0574  0800               	movf	0,w	;code access
 13357  0575  0022               	movlb	2	; select bank2
 13358  0576  008D               	movwf	13	;volatile
 13359                           
 13360                           ;DISPLAY.C: 20: if(TypeDP.TypeD.digitdp1==1)
 13361  0577  0020               	movlb	0	; select bank0
 13362  0578  1C6B               	btfss	_TypeDP,0
 13363  0579  2E09               	goto	i1l440
 13364  057A  2E06               	goto	i1l4054
 13365  057B                     i1l427:	
 13366                           ;DISPLAY.C: 25: case 1:
 13367                           
 13368                           ;DISPLAY.C: 24: break;
 13369                           
 13370                           ;DISPLAY.C: 22: else
 13371                           ;DISPLAY.C: 23: LATBbits.LATB7=0;
 13372                           
 13373                           ;DISPLAY.C: 21: LATBbits.LATB7=1;
 13374                           
 13375                           
 13376                           ;DISPLAY.C: 26: LATCbits.LATC4=1;
 13377  057B  0022               	movlb	2	; select bank2
 13378  057C  160E               	bsf	14,4	;volatile
 13379                           
 13380                           ;DISPLAY.C: 27: LATAbits.LATA6=0;
 13381  057D  130C               	bcf	12,6	;volatile
 13382                           
 13383                           ;DISPLAY.C: 28: LATAbits.LATA7=0;
 13384  057E  138C               	bcf	12,7	;volatile
 13385                           
 13386                           ;DISPLAY.C: 29: LATB=lookup_table[diswin1[digit]];
 13387  057F  0020               	movlb	0	; select bank0
 13388  0580  085C               	movf	_digit,w
 13389  0581  3E64               	addlw	_diswin1& (0+255)
 13390  0582  0086               	movwf	6
 13391  0583  3001               	movlw	1	; select bank2/3
 13392  0584  0087               	movwf	7
 13393  0585  0801               	movf	1,w
 13394  0586  00F0               	movwf	??_Display
 13395  0587  01F1               	clrf	??_Display+1
 13396  0588  35F0               	lslf	??_Display,f
 13397  0589  0DF1               	rlf	??_Display+1,f
 13398  058A  3000               	movlw	low (_lookup_table| (0+32768))
 13399  058B  0770               	addwf	??_Display,w
 13400  058C  0084               	movwf	4
 13401  058D  3098               	movlw	high (_lookup_table| (0+32768))
 13402  058E  3D71               	addwfc	??_Display+1,w
 13403  058F  0085               	movwf	5
 13404  0590  0800               	movf	0,w	;code access
 13405  0591  0022               	movlb	2	; select bank2
 13406  0592  008D               	movwf	13	;volatile
 13407                           
 13408                           ;DISPLAY.C: 30: if(TypeDP.TypeD.digitdp2==1)
 13409  0593  0020               	movlb	0	; select bank0
 13410  0594  1CEB               	btfss	_TypeDP,1
 13411  0595  2E09               	goto	i1l440
 13412  0596  2E06               	goto	i1l4054
 13413  0597                     i1l430:	
 13414                           ;DISPLAY.C: 35: case 2:
 13415                           
 13416                           ;DISPLAY.C: 34: break;
 13417                           
 13418                           ;DISPLAY.C: 32: else
 13419                           ;DISPLAY.C: 33: LATBbits.LATB7=0;
 13420                           
 13421                           ;DISPLAY.C: 31: LATBbits.LATB7=1;
 13422                           
 13423                           
 13424                           ;DISPLAY.C: 36: LATCbits.LATC4=0;
 13425  0597  0022               	movlb	2	; select bank2
 13426  0598  120E               	bcf	14,4	;volatile
 13427                           
 13428                           ;DISPLAY.C: 37: LATAbits.LATA6=1;
 13429  0599  170C               	bsf	12,6	;volatile
 13430                           
 13431                           ;DISPLAY.C: 38: LATAbits.LATA7=0;
 13432  059A  138C               	bcf	12,7	;volatile
 13433                           
 13434                           ;DISPLAY.C: 39: LATB=lookup_table[diswin1[digit]];
 13435  059B  0020               	movlb	0	; select bank0
 13436  059C  085C               	movf	_digit,w
 13437  059D  3E64               	addlw	_diswin1& (0+255)
 13438  059E  0086               	movwf	6
 13439  059F  3001               	movlw	1	; select bank2/3
 13440  05A0  0087               	movwf	7
 13441  05A1  0801               	movf	1,w
 13442  05A2  00F0               	movwf	??_Display
 13443  05A3  01F1               	clrf	??_Display+1
 13444  05A4  35F0               	lslf	??_Display,f
 13445  05A5  0DF1               	rlf	??_Display+1,f
 13446  05A6  3000               	movlw	low (_lookup_table| (0+32768))
 13447  05A7  0770               	addwf	??_Display,w
 13448  05A8  0084               	movwf	4
 13449  05A9  3098               	movlw	high (_lookup_table| (0+32768))
 13450  05AA  3D71               	addwfc	??_Display+1,w
 13451  05AB  0085               	movwf	5
 13452  05AC  0800               	movf	0,w	;code access
 13453  05AD  0022               	movlb	2	; select bank2
 13454  05AE  008D               	movwf	13	;volatile
 13455                           
 13456                           ;DISPLAY.C: 40: if(TypeDP.TypeD.digitdp3==1)
 13457  05AF  0020               	movlb	0	; select bank0
 13458  05B0  1D6B               	btfss	_TypeDP,2
 13459  05B1  2E09               	goto	i1l440
 13460  05B2  2E06               	goto	i1l4054
 13461  05B3                     i1l433:	
 13462                           ;DISPLAY.C: 45: case 3:
 13463                           
 13464                           ;DISPLAY.C: 44: break;
 13465                           
 13466                           ;DISPLAY.C: 42: else
 13467                           ;DISPLAY.C: 43: LATBbits.LATB7=0;
 13468                           
 13469                           ;DISPLAY.C: 41: LATBbits.LATB7=1;
 13470                           
 13471                           
 13472                           ;DISPLAY.C: 46: LATCbits.LATC4=1;
 13473  05B3  0022               	movlb	2	; select bank2
 13474  05B4  160E               	bsf	14,4	;volatile
 13475                           
 13476                           ;DISPLAY.C: 47: LATAbits.LATA6=1;
 13477  05B5  170C               	bsf	12,6	;volatile
 13478                           
 13479                           ;DISPLAY.C: 48: LATAbits.LATA7=0;
 13480  05B6  138C               	bcf	12,7	;volatile
 13481                           
 13482                           ;DISPLAY.C: 49: LATB=lookup_table[diswin1[digit]];
 13483  05B7  0020               	movlb	0	; select bank0
 13484  05B8  085C               	movf	_digit,w
 13485  05B9  3E64               	addlw	_diswin1& (0+255)
 13486  05BA  0086               	movwf	6
 13487  05BB  3001               	movlw	1	; select bank2/3
 13488  05BC  0087               	movwf	7
 13489  05BD  0801               	movf	1,w
 13490  05BE  00F0               	movwf	??_Display
 13491  05BF  01F1               	clrf	??_Display+1
 13492  05C0  35F0               	lslf	??_Display,f
 13493  05C1  0DF1               	rlf	??_Display+1,f
 13494  05C2  3000               	movlw	low (_lookup_table| (0+32768))
 13495  05C3  0770               	addwf	??_Display,w
 13496  05C4  0084               	movwf	4
 13497  05C5  3098               	movlw	high (_lookup_table| (0+32768))
 13498  05C6  3D71               	addwfc	??_Display+1,w
 13499  05C7  0085               	movwf	5
 13500  05C8  0800               	movf	0,w	;code access
 13501  05C9  0022               	movlb	2	; select bank2
 13502  05CA  008D               	movwf	13	;volatile
 13503                           
 13504                           ;DISPLAY.C: 50: if(TypeDP.TypeD.digitdp4==1)
 13505  05CB  0020               	movlb	0	; select bank0
 13506  05CC  1DEB               	btfss	_TypeDP,3
 13507  05CD  2E09               	goto	i1l440
 13508  05CE  2E06               	goto	i1l4054
 13509  05CF                     i1l436:	
 13510                           ;DISPLAY.C: 55: case 4:
 13511                           
 13512                           ;DISPLAY.C: 54: break;
 13513                           
 13514                           ;DISPLAY.C: 52: else
 13515                           ;DISPLAY.C: 53: LATBbits.LATB7=0;
 13516                           
 13517                           ;DISPLAY.C: 51: LATBbits.LATB7=1;
 13518                           
 13519                           
 13520                           ;DISPLAY.C: 56: LATCbits.LATC4=0;
 13521  05CF  0022               	movlb	2	; select bank2
 13522  05D0  120E               	bcf	14,4	;volatile
 13523                           
 13524                           ;DISPLAY.C: 57: LATAbits.LATA6=0;
 13525  05D1  130C               	bcf	12,6	;volatile
 13526                           
 13527                           ;DISPLAY.C: 58: LATAbits.LATA7=1;
 13528  05D2  178C               	bsf	12,7	;volatile
 13529                           
 13530                           ;DISPLAY.C: 59: LATB=lookup_table[diswin1[digit]];
 13531  05D3  0020               	movlb	0	; select bank0
 13532  05D4  085C               	movf	_digit,w
 13533  05D5  3E64               	addlw	_diswin1& (0+255)
 13534  05D6  0086               	movwf	6
 13535  05D7  3001               	movlw	1	; select bank2/3
 13536  05D8  0087               	movwf	7
 13537  05D9  0801               	movf	1,w
 13538  05DA  00F0               	movwf	??_Display
 13539  05DB  01F1               	clrf	??_Display+1
 13540  05DC  35F0               	lslf	??_Display,f
 13541  05DD  0DF1               	rlf	??_Display+1,f
 13542  05DE  3000               	movlw	low (_lookup_table| (0+32768))
 13543  05DF  0770               	addwf	??_Display,w
 13544  05E0  0084               	movwf	4
 13545  05E1  3098               	movlw	high (_lookup_table| (0+32768))
 13546  05E2  3D71               	addwfc	??_Display+1,w
 13547  05E3  0085               	movwf	5
 13548  05E4  0800               	movf	0,w	;code access
 13549  05E5  0022               	movlb	2	; select bank2
 13550  05E6  008D               	movwf	13	;volatile
 13551                           
 13552                           ;DISPLAY.C: 60: if(TypeDP.TypeD.digitdp5==1)
 13553  05E7  0020               	movlb	0	; select bank0
 13554  05E8  1E6B               	btfss	_TypeDP,4
 13555  05E9  2E09               	goto	i1l440
 13556  05EA  2E06               	goto	i1l4054
 13557  05EB                     i1l439:	
 13558                           ;DISPLAY.C: 65: case 5:
 13559                           
 13560                           ;DISPLAY.C: 64: break;
 13561                           
 13562                           ;DISPLAY.C: 62: else
 13563                           ;DISPLAY.C: 63: LATBbits.LATB7=0;
 13564                           
 13565                           ;DISPLAY.C: 61: LATBbits.LATB7=1;
 13566                           
 13567                           
 13568                           ;DISPLAY.C: 66: LATCbits.LATC4=1;
 13569  05EB  0022               	movlb	2	; select bank2
 13570  05EC  160E               	bsf	14,4	;volatile
 13571                           
 13572                           ;DISPLAY.C: 67: LATAbits.LATA6=0;
 13573  05ED  130C               	bcf	12,6	;volatile
 13574                           
 13575                           ;DISPLAY.C: 68: LATAbits.LATA7=1;
 13576  05EE  178C               	bsf	12,7	;volatile
 13577                           
 13578                           ;DISPLAY.C: 69: LATB=lookup_table[diswin1[digit]];
 13579  05EF  0020               	movlb	0	; select bank0
 13580  05F0  085C               	movf	_digit,w
 13581  05F1  3E64               	addlw	_diswin1& (0+255)
 13582  05F2  0086               	movwf	6
 13583  05F3  3001               	movlw	1	; select bank2/3
 13584  05F4  0087               	movwf	7
 13585  05F5  0801               	movf	1,w
 13586  05F6  00F0               	movwf	??_Display
 13587  05F7  01F1               	clrf	??_Display+1
 13588  05F8  35F0               	lslf	??_Display,f
 13589  05F9  0DF1               	rlf	??_Display+1,f
 13590  05FA  3000               	movlw	low (_lookup_table| (0+32768))
 13591  05FB  0770               	addwf	??_Display,w
 13592  05FC  0084               	movwf	4
 13593  05FD  3098               	movlw	high (_lookup_table| (0+32768))
 13594  05FE  3D71               	addwfc	??_Display+1,w
 13595  05FF  0085               	movwf	5
 13596  0600  0800               	movf	0,w	;code access
 13597  0601  0022               	movlb	2	; select bank2
 13598  0602  008D               	movwf	13	;volatile
 13599                           
 13600                           ;DISPLAY.C: 70: if(TypeDP.TypeD.digitdp6==1)
 13601  0603  0020               	movlb	0	; select bank0
 13602  0604  1EEB               	btfss	_TypeDP,5
 13603  0605  2E09               	goto	i1l440
 13604  0606                     i1l4054:	
 13605                           
 13606                           ;DISPLAY.C: 71: LATBbits.LATB7=1;
 13607  0606  0022               	movlb	2	; select bank2
 13608  0607  178D               	bsf	13,7	;volatile
 13609  0608  2E90               	goto	i1l4128
 13610  0609                     i1l440:	
 13611                           
 13612                           ;DISPLAY.C: 72: else
 13613                           ;DISPLAY.C: 73: LATBbits.LATB7=0;
 13614  0609  0022               	movlb	2	; select bank2
 13615  060A  138D               	bcf	13,7	;volatile
 13616                           
 13617                           ;DISPLAY.C: 77: }
 13618                           
 13619                           ;DISPLAY.C: 76: break;
 13620                           
 13621                           ;DISPLAY.C: 75: default:
 13622                           
 13623                           ;DISPLAY.C: 74: break;
 13624  060B  2E90               	goto	i1l4128
 13625  060C                     i1l4058:	
 13626  060C  0020               	movlb	0	; select bank0
 13627  060D  085C               	movf	_digit,w
 13628                           
 13629                           ; Switch size 1, requested type "space"
 13630                           ; Number of cases is 6, Range of values is 0 to 5
 13631                           ; switch strategies available:
 13632                           ; Name         Instructions Cycles
 13633                           ; direct_byte           18     6 (fixed)
 13634                           ; simple_byte           19    10 (average)
 13635                           ; jumptable            260     6 (fixed)
 13636                           ;	Chosen strategy is direct_byte
 13637  060E  0084               	movwf	4
 13638  060F  3006               	movlw	6
 13639  0610  0204               	subwf	4,w
 13640  0611  1803               	skipnc
 13641  0612  2E90               	goto	i1l4128
 13642  0613  3198               	movlp	high i1S5740
 13643  0614  3504               	lslf	4,w
 13644  0615  3E6E               	addlw	low i1S5740
 13645  0616  0082               	movwf	2
 13646                           
 13647                           ;DISPLAY.C: 78: }
 13648  0617  2E90               	goto	i1l4128
 13649  0618                     i1l4060:	
 13650                           
 13651                           ;DISPLAY.C: 79: else if(digit == 6)
 13652  0618  085C               	movf	_digit,w
 13653  0619  3A06               	xorlw	6
 13654  061A  1D03               	skipz
 13655  061B  2E23               	goto	i1l4066
 13656                           
 13657                           ;DISPLAY.C: 80: {
 13658                           ;DISPLAY.C: 81: LATCbits.LATC4=0;
 13659  061C  0022               	movlb	2	; select bank2
 13660  061D  120E               	bcf	14,4	;volatile
 13661                           
 13662                           ;DISPLAY.C: 82: LATAbits.LATA6=1;
 13663  061E  170C               	bsf	12,6	;volatile
 13664                           
 13665                           ;DISPLAY.C: 83: LATAbits.LATA7=1;
 13666  061F  178C               	bsf	12,7	;volatile
 13667                           
 13668                           ;DISPLAY.C: 85: LATB=TypeU.LEDGROUP[0];
 13669  0620  0020               	movlb	0	; select bank0
 13670  0621  0867               	movf	_TypeU,w
 13671  0622  2E2E               	goto	L26
 13672  0623                     i1l4066:	
 13673                           ;DISPLAY.C: 86: }
 13674                           
 13675                           
 13676                           ;DISPLAY.C: 87: else if(digit == 7)
 13677  0623  0020               	movlb	0	; select bank0
 13678  0624  085C               	movf	_digit,w
 13679  0625  3A07               	xorlw	7
 13680  0626  1D03               	skipz
 13681  0627  2E31               	goto	i1l4072
 13682                           
 13683                           ;DISPLAY.C: 88: {
 13684                           ;DISPLAY.C: 89: LATCbits.LATC4=1;
 13685  0628  0022               	movlb	2	; select bank2
 13686  0629  160E               	bsf	14,4	;volatile
 13687                           
 13688                           ;DISPLAY.C: 90: LATAbits.LATA6=1;
 13689  062A  170C               	bsf	12,6	;volatile
 13690                           
 13691                           ;DISPLAY.C: 91: LATAbits.LATA7=1;
 13692  062B  178C               	bsf	12,7	;volatile
 13693                           
 13694                           ;DISPLAY.C: 93: LATB=TypeU.LEDGROUP[1];
 13695  062C  0020               	movlb	0	; select bank0
 13696  062D  0868               	movf	_TypeU+1,w
 13697  062E                     L26:	
 13698  062E  0022               	movlb	2	; select bank2
 13699  062F  008D               	movwf	13	;volatile
 13700                           
 13701                           ;DISPLAY.C: 95: }
 13702  0630  2E90               	goto	i1l4128
 13703  0631                     i1l4072:	
 13704                           
 13705                           ;DISPLAY.C: 96: else if(digit == 8)
 13706  0631  0020               	movlb	0	; select bank0
 13707  0632  085C               	movf	_digit,w
 13708  0633  3A08               	xorlw	8
 13709  0634  1D03               	skipz
 13710  0635  2E90               	goto	i1l4128
 13711                           
 13712                           ;DISPLAY.C: 97: {
 13713                           ;DISPLAY.C: 98: TRISB=0X0F;
 13714  0636  300F               	movlw	15
 13715  0637  0021               	movlb	1	; select bank1
 13716  0638  008D               	movwf	13	;volatile
 13717                           
 13718                           ;DISPLAY.C: 99: for(i=0;i>=100;i++);
 13719  0639  0020               	movlb	0	; select bank0
 13720  063A  01DF               	clrf	_i
 13721  063B  3064               	movlw	100
 13722  063C  025F               	subwf	_i,w
 13723  063D  1C03               	btfss	3,0
 13724  063E  2E47               	goto	i1l4086
 13725  063F                     i1l4082:	
 13726  063F  3001               	movlw	1
 13727  0640  00F0               	movwf	??_Display
 13728  0641  0870               	movf	??_Display,w
 13729  0642  07DF               	addwf	_i,f
 13730  0643  3064               	movlw	100
 13731  0644  025F               	subwf	_i,w
 13732  0645  1803               	skipnc
 13733  0646  2E3F               	goto	i1l4082
 13734  0647                     i1l4086:	
 13735                           
 13736                           ;DISPLAY.C: 100: portbstatus=PORTB;
 13737  0647  080D               	movf	13,w	;volatile
 13738  0648  00F0               	movwf	??_Display
 13739  0649  0870               	movf	??_Display,w
 13740  064A  00E2               	movwf	_portbstatus	;volatile
 13741                           
 13742                           ;DISPLAY.C: 101: for(i=0;i>=200;i++);
 13743  064B  01DF               	clrf	_i
 13744  064C  30C8               	movlw	200
 13745  064D  025F               	subwf	_i,w
 13746  064E  1C03               	btfss	3,0
 13747  064F  2E58               	goto	i1l4098
 13748  0650                     i1l4094:	
 13749  0650  3001               	movlw	1
 13750  0651  00F0               	movwf	??_Display
 13751  0652  0870               	movf	??_Display,w
 13752  0653  07DF               	addwf	_i,f
 13753  0654  30C8               	movlw	200
 13754  0655  025F               	subwf	_i,w
 13755  0656  1803               	skipnc
 13756  0657  2E50               	goto	i1l4094
 13757  0658                     i1l4098:	
 13758                           
 13759                           ;DISPLAY.C: 102: if(pportb==portbstatus)
 13760  0658  0022               	movlb	2	; select bank2
 13761  0659  0852               	movf	_pportb^(0+256),w	;volatile
 13762  065A  0020               	movlb	0	; select bank0
 13763  065B  0662               	xorwf	_portbstatus,w	;volatile
 13764  065C  1D03               	skipz
 13765  065D  2E86               	goto	i1l4122
 13766                           
 13767                           ;DISPLAY.C: 103: {
 13768                           ;DISPLAY.C: 104: temp=portbstatus;
 13769  065E  0862               	movf	_portbstatus,w	;volatile
 13770  065F  00F0               	movwf	??_Display
 13771  0660  0870               	movf	??_Display,w
 13772  0661  00E5               	movwf	_temp
 13773                           
 13774                           ;DISPLAY.C: 105: temp=(temp & 0x0F);
 13775  0662  0865               	movf	_temp,w
 13776  0663  390F               	andlw	15
 13777  0664  00F0               	movwf	??_Display
 13778  0665  0870               	movf	??_Display,w
 13779  0666  00E5               	movwf	_temp
 13780                           
 13781                           ;DISPLAY.C: 106: if(temp==0x01)
 13782  0667  0865               	movf	_temp,w
 13783  0668  3A01               	xorlw	1
 13784  0669  1D03               	skipz
 13785  066A  2E6D               	goto	i1l4108
 13786                           
 13787                           ;DISPLAY.C: 107: key=1;
 13788  066B  3001               	movlw	1
 13789  066C  2E81               	goto	L29
 13790  066D                     i1l4108:	
 13791                           
 13792                           ;DISPLAY.C: 108: else if(temp==0x02)
 13793  066D  0020               	movlb	0	; select bank0
 13794  066E  0865               	movf	_temp,w
 13795  066F  3A02               	xorlw	2
 13796  0670  1D03               	skipz
 13797  0671  2E74               	goto	i1l4112
 13798                           
 13799                           ;DISPLAY.C: 109: key=2;
 13800  0672  3002               	movlw	2
 13801  0673  2E81               	goto	L29
 13802  0674                     i1l4112:	
 13803                           
 13804                           ;DISPLAY.C: 110: else if(temp==0x04)
 13805  0674  0020               	movlb	0	; select bank0
 13806  0675  0865               	movf	_temp,w
 13807  0676  3A04               	xorlw	4
 13808  0677  1D03               	skipz
 13809  0678  2E7B               	goto	i1l4116
 13810                           
 13811                           ;DISPLAY.C: 111: key=3;
 13812  0679  3003               	movlw	3
 13813  067A  2E81               	goto	L29
 13814  067B                     i1l4116:	
 13815                           
 13816                           ;DISPLAY.C: 112: else if(temp==0x08)
 13817  067B  0020               	movlb	0	; select bank0
 13818  067C  0865               	movf	_temp,w
 13819  067D  3A08               	xorlw	8
 13820  067E  1D03               	skipz
 13821  067F  2E86               	goto	i1l4122
 13822                           
 13823                           ;DISPLAY.C: 113: key=4;
 13824  0680  3004               	movlw	4
 13825  0681                     L29:	
 13826  0681  00F0               	movwf	??_Display
 13827  0682  0870               	movf	??_Display,w
 13828  0683  0021               	movlb	1	; select bank1
 13829  0684  00EF               	movwf	_key^(0+128)	;volatile
 13830  0685  2E88               	goto	i1l4124
 13831  0686                     i1l4122:	
 13832                           ;DISPLAY.C: 116: }
 13833                           
 13834                           ;DISPLAY.C: 114: else
 13835                           ;DISPLAY.C: 115: key=0;
 13836                           
 13837                           
 13838                           ;DISPLAY.C: 117: else
 13839                           ;DISPLAY.C: 118: {
 13840                           ;DISPLAY.C: 119: key=0;
 13841  0686  0021               	movlb	1	; select bank1
 13842  0687  01EF               	clrf	_key^(0+128)	;volatile
 13843  0688                     i1l4124:	
 13844                           
 13845                           ;DISPLAY.C: 120: }
 13846                           ;DISPLAY.C: 121: pportb=portbstatus;
 13847  0688  0020               	movlb	0	; select bank0
 13848  0689  0862               	movf	_portbstatus,w	;volatile
 13849  068A  00F0               	movwf	??_Display
 13850  068B  0870               	movf	??_Display,w
 13851  068C  0022               	movlb	2	; select bank2
 13852  068D  00D2               	movwf	_pportb^(0+256)	;volatile
 13853                           
 13854                           ;DISPLAY.C: 122: TRISB=0X00;
 13855  068E  0021               	movlb	1	; select bank1
 13856  068F  018D               	clrf	13	;volatile
 13857  0690                     i1l4128:	
 13858                           
 13859                           ;DISPLAY.C: 123: }
 13860                           ;DISPLAY.C: 124: if(++digit >=9)
 13861  0690  3001               	movlw	1
 13862  0691  00F0               	movwf	??_Display
 13863  0692  0870               	movf	??_Display,w
 13864  0693  0020               	movlb	0	; select bank0
 13865  0694  07DC               	addwf	_digit,f
 13866  0695  3009               	movlw	9
 13867  0696  025C               	subwf	_digit,w
 13868  0697  1C03               	skipc
 13869  0698  0008               	return
 13870                           
 13871                           ;DISPLAY.C: 125: digit=0;
 13872  0699  01DC               	clrf	_digit
 13873  069A  0008               	return
 13874  069B                     __end_of_Display:	
 13875  007E                     btemp	set	126	;btemp
 13876  007E                     pic14e$flags	set	126
 13877  007E                     wtemp	set	126
 13878  007E                     wtemp0	set	126
 13879  0080                     wtemp1	set	128
 13880  0082                     wtemp2	set	130
 13881  0084                     wtemp3	set	132
 13882  0086                     wtemp4	set	134
 13883  0088                     wtemp5	set	136
 13884  007F                     wtemp6	set	127
 13885  007E                     ttemp	set	126
 13886  007E                     ttemp0	set	126
 13887  0081                     ttemp1	set	129
 13888  0084                     ttemp2	set	132
 13889  0087                     ttemp3	set	135
 13890  007F                     ttemp4	set	127
 13891  007E                     ltemp	set	126
 13892  007E                     ltemp0	set	126
 13893  0082                     ltemp1	set	130
 13894  0086                     ltemp2	set	134
 13895  0080                     ltemp3	set	128
 13896  239A                     
 13897                           	psect	swtext1
 13898  186E                     __pswtext1:	
 13899  186E                     i1S5740:	
 13900  186E  3185  2D5F         	ljmp	i1l423
 13901  1870  3185  2D7B         	ljmp	i1l427
 13902  1872  3185  2D97         	ljmp	i1l430
 13903  1874  3185  2DB3         	ljmp	i1l433
 13904  1876  3185  2DCF         	ljmp	i1l436
 13905  1878  3185  2DEB         	ljmp	i1l439


Data Sizes:
    Strings     0
    Constant    110
    Data        33
    BSS         311
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      80
    BANK1            80     79      80
    BANK2            80      0      80
    BANK3            80      0      80
    BANK4            80      0      58
    BANK5            80      0      24
    BANK6            80      0      73
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           42      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_Function in COMMON

    _ISR_Function->i1___lwtoft
    i1___lwtoft->i1___ftpack
    i1___fttol->i1___lwtoft
    i1___ftmul->i1___lwtoft
    i1___ftdiv->i1___lwtoft
    i1___ftadd->i1___lwtoft

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_Function in BANK0

    _ISR_Function->i1___fttol
    i1___fttol->i1___ftadd
    i1___ftadd->i1___ftmul

Critical Paths under _main in BANK1

    _main->_Adaptive_base_pid
    _transmittops->_Send_Byte
    _send_status->_Send_Byte
    _key_application->_Update_PWM
    _disp_hex_window2->___lwdiv
    _disp_hex_window1->___lwdiv
    ___lwdiv->___wmul
    _detect_display_error->_Update_PWM
    ___lwtoft->___ftpack
    _SCANENCODER2->_enc2_port
    _SCANENCODER1->_enc1_port
    _Adaptive_base_pid->_Update_PWM
    ___fttol->___ftmul
    ___ftmul->___ftadd
    ___ftge->___altoft
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _Update_PWM->___fttol

Critical Paths under _ISR_Function in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Function in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   40947
                                             77 BANK1      2     2      0
                  _Adaptive_base_pid
                            _Delayms
                           _PWM_init
                       _SCANENCODER1
                       _SCANENCODER2
                        _Timer0_init
                         _Update_PWM
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                       _capture_init
               _detect_display_error
                   _disp_hex_window1
                   _disp_hex_window2
                    _key_application
                       _portpin_init
                        _send_status
                        _system_init
                       _transmittops
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _transmittops                                         1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status                                          1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Send_Byte                                            1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _portpin_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_application                                      3     3      0    5527
                                             59 BANK1      3     3      0
                         _Update_PWM
                             ___wmul
                   _disp_hex_window2
 ---------------------------------------------------------------------------------
 (2) _disp_hex_window2                                     3     1      2    3633
                                             14 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window1                                     3     1      2    3569
                                             14 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1695
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1442
                                              6 BANK1      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _detect_display_error                                 1     1      0     668
                                             59 BANK1      1     1      0
                         _Update_PWM
 ---------------------------------------------------------------------------------
 (1) _capture_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2671
                                              8 BANK1      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER2                                         2     2      0     123
                                              5 BANK1      2     2      0
                          _enc2_port
 ---------------------------------------------------------------------------------
 (2) _enc2_port                                            5     5      0      94
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER1                                         2     2      0     123
                                              6 BANK1      2     2      0
                          _enc1_port
 ---------------------------------------------------------------------------------
 (2) _enc1_port                                            6     6      0      94
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delayms                                              6     4      2     286
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Adaptive_base_pid                                   18    18      0   16366
                                             59 BANK1     18    18      0
                         _Update_PWM
                            ___aldiv
                           ___altoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1116
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     738
                                             37 BANK1     14    10      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    3973
                                             21 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     392
                                             16 BANK1      9     3      6
                           ___altoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2699
                                             37 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3745
                                              8 BANK1     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    2353
                                              8 BANK1      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2087
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     504
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (2) _Update_PWM                                           8     6      2     668
                                             51 BANK1      8     6      2
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Function                                        11    11      0    4492
                                             12 COMMON     2     2      0
                                             43 BANK0      9     9      0
                            _Display
                          i1___aldiv
                          i1___ftadd
                          i1___ftdiv
                          i1___ftmul
                          i1___fttol
                         i1___lwtoft
 ---------------------------------------------------------------------------------
 (5) i1___lwtoft                                           4     1      3     621
                                              8 COMMON     4     1      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (5) i1___fttol                                           14    10      4     278
                                             29 BANK0     14    10      4
                          i1___ftadd (ARG)
                          i1___ftmul (ARG)
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftmul                                           16    10      6     951
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftdiv                                           16    10      6     853
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftadd                                           13     7      6    1413
                                             16 BANK0     13     7      6
                          i1___ftmul (ARG)
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___ftpack                                           8     3      5     521
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) i1___aldiv                                           15     7      8     352
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) _Display                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adaptive_base_pid
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___aldiv
     ___altoft
       ___ftpack
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
       ___altoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftneg
     ___fttol
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
   _Delayms
   _PWM_init
   _SCANENCODER1
     _enc1_port
   _SCANENCODER2
     _enc2_port
   _Timer0_init
   _Update_PWM
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___ftmul
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___fttol
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___lwdiv
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
     ___wmul (ARG)
   ___wmul
   _capture_init
   _detect_display_error
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
   _disp_hex_window1
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
   _disp_hex_window2
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
   _key_application
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _disp_hex_window2
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
   _portpin_init
   _send_status
     _Send_Byte
   _system_init
   _transmittops
     _Send_Byte
   _uart_init

 _ISR_Function (ROOT)
   _Display
   i1___aldiv
   i1___ftadd
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftpack (ARG)
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftdiv
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftmul
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___fttol
     i1___ftadd (ARG)
       i1___ftmul (ARG)
         i1___ftpack
         i1___lwtoft (ARG)
           i1___ftpack
       i1___ftpack (ARG)
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___lwtoft
     i1___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      3A      13       72.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      18      15       30.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      49      17       91.3%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1E9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              2A      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1E9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Mar 13 12:39:49 2020

          Update_PWM@setwsduty 00D3                    _portbstatus 0062                    _updatedispf 01DC  
                 ___altoft@exp 00AE                     __CFG_CP$ON 0000                              _i 005F  
                            pc 0002                     i1___ftpack 1B66                  ___altoft@sign 00AF  
    __end_of_Adaptive_base_pid 1800                    __CFG_CPD$ON 0000                     i1___lwtoft 1905  
          ___wmul@multiplicand 00A2                   _portpin_init 1955            __end_of_system_init 18AE  
                 ___ftadd@exp1 00B4                   ___ftadd@exp2 00B3                    __CFG_LVP$ON 0000  
                 ___ftadd@sign 00B2                            l622 0916                            l711 0D4E  
                          l536 1764                            l712 0D4F                            l713 0F98  
                          l810 11B3                            l714 0DD9                            l650 0AF6  
                          l707 0D1E                            l635 0A4B                            l812 11BD  
                          l724 0EF1                            l725 0F28                            l822 11F6  
                          l814 11C7                            l806 119F                            l638 0A40  
                          l911 1974                            l479 19B7                            l816 11D1  
                          l808 11A9                            l752 0786                            l656 0AE7  
                          l690 0BF4                            l683 0D48                            l757 079E  
                          l677 0B7E                            l759 07A4                            l695 0C43  
                          l687 0BD1                            l688 0BE1                   i1___ftadd@f1 0030  
                          l794 1B17                            l698 0C99                   i1___ftadd@f2 0033  
                          l788 189C                            l966 1E81                            _PR2 001B  
                  _transmitonf 015B                            _One 01AC                            _Two 01B0  
                          _iii 023C                            _ijk 0122                            _key 00EF  
                          _lmn 0124                   i1___ftdiv@f1 0023                   i1___ftdiv@f2 0020  
                 i1___ftdiv@f3 002B                   __CFG_BORV$LO 0000                            wreg 0009  
                 i1___ftmul@f1 0020                   i1___ftmul@f2 0023                   i1___fttol@f1 003D  
              _key_application 069B                 i1___aldiv@sign 0021                   ___ftdiv@cntr 00CF  
                 ___ftdiv@sign 00D4                           l1101 08BC                           l1072 1BF9  
                         l1078 1C10                           l4210 1DDE                           l4202 1DCC  
                         l4214 1DE2                           l4216 1DE6                           l4240 1D11  
                         l3530 1BD6                           l4306 161E                           l4146 19C8  
                         l4218 1DEB                           l4250 1D1E                           l3540 1BFE  
                         l3532 1BE0                           l4324 1720                           l4308 1625  
                         l4148 19D3                           l4260 1D32                           l3710 1EA2  
                         l3702 1E92                           l3542 1C06                           l3534 1BE5  
                         l3526 1BCF                           l4334 17A2                           l3630 1AFB  
                         l4510 06E5                           l3720 1ED0                           l3712 1EB0  
                         l4344 17C8                           l4168 1D8F                           l4280 1D5F  
                         l4272 1D4D                           l5320 09E0                           l5312 09D4  
                         l5232 0924                           l3802 08CE                           l4338 17B8  
                         l4178 1D9C                           l3570 19FF                           l3562 19E1  
                         l4506 06DB                           l5402 0AF2                           l3724 1EDB  
                         l4348 17E5                           l4188 1DB0                           l3660 1A9C  
                         l4284 1D63                           l3564 19ED                           l4540 0753  
                         l4508 06DE                           l5500 0C08                           l5420 0B22  
                         l5308 09C2                           l3742 07D2                           l3806 08E0  
                         l3910 1353                           l4286 1D67                           l4630 1203  
                         l3574 1A08                           l4534 0743                           l5430 0B3C  
                         l5414 0B11                           l5342 0A38                           l3728 1EE9  
                         l3744 07E2                           l3816 08FB                           l3760 084C  
                         l3832 1109                           l4288 1D6C                           l4616 11DC  
                         l3592 1023                           l4560 0791                           l4536 074E  
                         l4464 1B19                           l5440 0B50                           l5352 0A5C  
                         l5336 0A0E                           l3826 10F3                           l3922 136F  
                         l3906 134B                           l3682 196E                           l4618 11E4  
                         l3586 100B                           l4538 06EF                           l5426 0B37  
                         l5434 0B3F                           l3756 0845                           l4628 1202  
                         l3588 1017                           l3596 102C                           l4548 0777  
                         l4484 1B50                           l4476 1B2F                           l5508 0C1E  
                         l5460 0B7B                           l5444 0B5C                           l5372 0A85  
                         l5356 0A68                           l3790 089B                           l3766 085B  
                         l3854 1163                           l3846 114A                           l3870 1A3C  
                         l3918 1367                           l4558 078D                           l5550 0CD2  
                         l5534 0C83                           l5390 0AB6                           l5374 0A87  
                         l5462 0B80                           l3784 0888                           l4584 07AB  
                         l4488 1B56                           l5616 0DA4                           l5544 0CAE  
                         l5456 0B74                           l5368 0A7F                           l5376 0A8E  
                         l5296 09AF                           l5288 09A1                           l3786 0892  
                         l3778 0875                           l3866 1A26                           l3946 1F92  
                         l4586 07AC                           l5714 0FF3                           l5650 0E80  
                         l5546 0CC1                           l5474 0B9D                           l3796 08AE  
                         l3788 0897                           l3980 1FF7                           l3972 1FDD  
                         l3964 1FC2                           l4588 07B3                           l5572 0CF2  
                         l5484 0BC2                           l5396 0ADF                           l5708 0FE6  
                         l3798 08B8                           l3894 1310                           l3974 1FE6  
                         l3966 1FD0                           l5718 0FFC                           l5662 0EA9  
                         l5654 0E84                           l5590 0D3B                           l5582 0D15  
                         l3888 12FA                           l3976 1FE9                           l5648 0E7E  
                         l5668 0EE1                           l5686 0FBD                           _LATB 010D  
                         u5015 131C                           u4305 1C17                           u5025 132C  
                         u4235 1BDB                           u5045 1354                           u4405 100E  
                         u4255 1BF4                           u5055 135A                           u5135 1F99  
                         u4335 19E4                           u4505 197A                           u4425 101D  
                         u4275 1C01                           u4355 19EE                           u4435 1024  
                         u5085 1370                           u5165 1FC3                           u4365 19F8  
                         u5095 1376                           u4375 1A00                           u4555 1EA5  
                         u4635 07D7                           u5195 1FDE                           u4805 089C  
                         u8005 0BAF                           u4575 1EB1                           u4495 1975  
                         u8015 0BBB                           u4585 1EC5                           u4745 0876  
                         u4905 111B                           u8105 0C92                           _PIR1 0011  
                         u4595 1ED1                           u4835 08AF                           u4915 112B  
                         u5555 19BD                           u8035 0BCC                           u4925 114B  
                         u4775 0889                           u4935 115A                           u4945 1164  
                         u8075 0C3C                           u5863 1714                           u5873 174A  
                         u5885 1799                           u5895 17AC                           u7655 0A20  
                         u7785 0AC8                           _TMR0 0015                           _OneH 012D  
                         _OneL 012E                   __CFG_WRT$OFF 0000                           _TwoH 012F  
                         _TwoL 0130                   _transmittops 1B07                     _Actual_amp 01E2  
                         _old1 01BC                           _old2 01BE                           _new1 0054  
                         _new2 0056                           _main 0913                   ___ftpack@arg 00A0  
                   _Actual_vtg 01E4                   ___ftpack@exp 00A3                           _tans 0158  
                         _temp 0065                   i1___lwtoft@c 0078                           fsr0h 0005  
                         fsr1h 0007                           fsr0l 0004                           indf0 0000  
                         indf1 0001                           fsr1l 0006                           btemp 007E  
                i1___ftdiv@exp 002E                           ltemp 007E                           start 04D8  
                         ttemp 007E                           wtemp 007E                  __CFG_IESO$OFF 0000  
              __end_of_Delayms 19D8       disp_hex_window1@hex_data 00AE         ??_detect_display_error 00DB  
                __CFG_MCLRE$ON 0000                   ___ftmul@cntr 00C3                __end_of_Display 069B  
                 ___ftmul@sign 00C4                  i1___ftmul@exp 002A       disp_hex_window2@hex_data 00AE  
                 ___fttol@exp1 00D2                   ___fttol@lval 00CE                  __CFG_PLLEN$ON 0000  
                 _torchstatus1 0159                   _torchstatus2 015A        i1___ftmul@f3_as_product 002B  
           enc2_port@portvalue 00A3                __end_of___aldiv 1EF2                          ?_main 0070  
              __end_of___ftadd 0913                  __CFG_WDTE$OFF 0000                __end_of___ftdiv 1185  
              __end_of___ftneg 189A                __end_of___ftmul 1397                          _T1CON 0018  
              __end_of___fttol 2000                __end_of___lwdiv 1A0F                          i1l430 0597  
                        i1l423 055F                          i1l440 0609                          i1l433 05B3  
              __end_of___lwmod 1033                          i1l427 057B                          i1l436 05CF  
                        i1l612 03ED                          i1l614 040A                          i1l439 05EB  
                        i1l615 047D                          i1l616 04AD                          i1l552 003F  
                        i1l618 04B6                          i1l572 00F7                          i1l592 02FD  
                        i1l577 04D3                          i1l966 1DFF                          _RCREG 0199  
                ?_SCANENCODER1 0070                  ?_SCANENCODER2 0070                          _TMR1H 0017  
                        _TMR1L 0016                          _SPBRG 019B                          _PORTA 000C  
                        _PORTB 000D                          _PORTC 000E                 i1___ftadd@exp1 003C  
               i1___ftadd@exp2 003B                          _TORCH 016C                          _TRISA 008C  
                        _TRISB 008D                          _TRISC 008E                          _TXREG 019A  
               i1___ftadd@sign 003A                          _TXSTA 019E                          _Count 012C  
                   _Hi_setppwm 022A                 __CFG_FCMEN$OFF 0000                   _wfstatusbyte 01DD  
                        _TypeU 0067                     _Displayarr 1858                          _delay 0230  
                        _digit 005C           __end_of_capture_init 18F4                          _pfreq 0162  
                ___ftpack@sign 00A4                          _txonf 01DB                 __CFG_BOREN$OFF 0000  
                        ltemp0 007E                          ltemp1 0082                          ltemp2 0086  
                        ltemp3 0080                 i1___ftdiv@cntr 002A                 i1___ftdiv@sign 002F  
             __end_of_PWM_init 081D                          ttemp0 007E                          ttemp1 0081  
                        ttemp2 0084                          ttemp3 0087                          ttemp4 007F  
                        status 0003             __size_ofi1___aldiv 0082                          wtemp0 007E  
                        wtemp1 0080                          wtemp2 0082                          wtemp3 0084  
                        wtemp4 0086                          wtemp5 0088                          wtemp6 007F  
           __size_ofi1___ftadd 00F6             __size_ofi1___ftdiv 00A9             __size_ofi1___ftmul 00B4  
           __size_ofi1___fttol 0087                 i1___ftpack@arg 0070                 i1___ftpack@exp 0073  
              __initialization 04DA                    _system_init 18A4                   __end_of_main 1000  
        _universal_error_latch 015D                    ?i1___ftpack 0070                 i1___ftmul@cntr 002E  
               i1___ftmul@sign 002F     __size_of_Adaptive_base_pid 0373                 __CFG_LPBOR$OFF 0000  
                  ?i1___lwtoft 0078                 i1___fttol@exp1 004A                 i1___fttol@lval 0046  
                       ??_main 00ED                  ___fttol@sign1 00CD        __end_of_key_application 07BD  
               ??_SCANENCODER1 00A6                 ??_SCANENCODER2 00A5                     _Lo_setppwm 022C  
             __end_of___altoft 07FA                         i1S5740 186E                         _CCPR2H 0299  
                       _CCPR1L 0291                         _CCPR2L 0298                         _ANSELA 018C  
                       _ANSELB 018D               __end_of___ftpack 1C27                   _adaptivepidf 0131  
                       i1l1101 1436                         i1l1072 1B98                         i1l1078 1BAF  
                       i1l4002 1B9D                         i1l4004 1BA5                         i1l4112 0674  
                       i1l5000 00BF                         i1l4122 0686                         i1l4116 067B  
                       i1l4124 0688                         i1l4108 066D                         i1l4060 0618  
                       i1l5100 02CD                         i1l5020 00F9                         i1l4054 0606  
                       i1l5110 02E4                         i1l5030 0115                         i1l4072 0631  
                       i1l4128 0690                         i1l5200 03D3                         i1l5024 0101  
                       i1l5008 00D9                         i1l4082 063F                         i1l4066 0623  
                       i1l4058 060C                         i1l5122 0303                         i1l5042 0145  
                       i1l5034 0121                         i1l5018 00F4                         i1l5026 0108  
                       i1l5220 04B4                         i1l5132 0318                         i1l5108 02E2  
                       i1l4094 0650                         i1l4086 0647                         i1l5206 03EF  
                       i1l4098 0658                         i1l5226 04C9                         i1l5154 034C  
                       i1l5146 032D                         i1l5090 0263                         i1l4702 13C6  
                       i1l5174 037D                         i1l5086 025D                         i1l4720 13EF  
                       i1l5096 02C7                         i1l4730 1411                         i1l4810 1246  
                       i1l5194 03B6                         i1l5186 03A6                         i1l4660 1E10  
                       i1l4740 1432                         i1l4732 1415                         i1l4708 13D5  
                       i1l4670 1E2E                         i1l4726 1402                         i1l4744 1448  
                       i1l4728 140C                         i1l4840 12B3                         i1l4832 129F  
                       i1l4816 125C                         i1l4682 1E59                         i1l4738 1428  
                       i1l4668 1E20                         i1l4748 145A                         i1l4844 12BB  
                       i1l4828 1297                         i1l4860 1F0B                         i1l4932 003A  
                       i1l4686 1E67                         i1l4678 1E4E                         i1l4758 1475  
                       i1l4774 1060                         i1l3992 1B75                         i1l4768 104A  
                       i1l4880 1F49                         i1l4936 0043                         i1l3994 1B7F  
                       i1l4698 13BF                         i1l4890 1F62                         i1l3996 1B84  
                       i1l3988 1B6E                         i1l4796 10BA                         i1l4788 10A1  
                       i1l4980 009E                         i1l4948 0060                         i1l4972 0083  
                       i1l4894 1F70                         i1l4886 1F56                         i1l4878 1F3B  
                       i1l4990 00AE                         i1l4982 00A0                         i1l4966 0071  
                 ?_send_status 0070                         i1l4888 1F5F                         i1l4976 008C  
                       i1l4984 00A3               __end_of___lwtoft 1940                         u531_25 1BB6  
                       u524_25 1B7A                         u526_25 1B93                      ??_Delayms 00A2  
                       u631_25 1E2F                         u632_25 1E43                         u528_25 1BA0  
                       u633_25 1E4F                         u713_25 0164                         u714_25 0181  
                       u651_25 1416                         u716_25 01F9                         u629_25 1E23  
                       u645_25 13F0                         u661_25 1072                         u654_25 1429  
                       u662_25 1082                         u670_25 1278                         u663_25 10A2  
                       u648_25 1403                         u664_25 10B1                         u672_25 12A0  
                       u680_25 1F12                         u736_25 035F                         u665_25 10BB  
                       u673_25 12A6                         u745_25 03FD                         u746_25 0417  
                       u683_25 1F3C                         u747_25 0434                         u676_25 12BC  
                       u748_25 0451                         u677_25 12C2                         u669_25 1268  
                       u686_25 1F57                      ??_Display 0070                 __CFG_PWRTE$OFF 0000  
                ??_Timer0_init 00A0                         _TypeDP 006B                         ___ftge 1A0F  
                       _Tx_ptr 01D2                      ??___aldiv 00A8             __size_of_Send_Byte 000A  
                       ___wmul 196B                      ??___ftadd 00AE                 __CFG_STVREN$ON 0000  
                    ??___ftdiv 00CB                      ??___ftneg 00A3                      ??___ftmul 00BB  
                    ??___fttol 00C9                         _encod1 005D                         _encod2 005E  
                       _chksum 0135                      ??___lwdiv 00AA                      ??___lwmod 00A4  
                       _arrptr 0132                         _error4 01D4                         _error8 013E  
                       _erroru 0160                         _pcount 014B                         _pportb 0152  
                       _rxdata 0063              __end_ofi1___aldiv 1E70          ___ftmul@f3_as_product 00C0  
            __end_ofi1___ftadd 148D              __end_ofi1___ftdiv 10DC              __end_ofi1___ftmul 12E3  
            __end_ofi1___fttol 1F79                     _Update_PWM 1989                 _controller_out 0224  
          __size_ofi1___ftpack 0060                 _wfspeedchangef 016F        __end_of__initialization 0554  
                   ___altoft@c 00A8            __size_ofi1___lwtoft 0013                     ___ftadd@f1 00A8  
                   ___ftadd@f2 00AB                     ___ftge@ff1 00B0                     ___ftge@ff2 00B3  
              i1___ftpack@sign 0074                     ___ftdiv@f1 00C8                     ___ftdiv@f2 00C5  
                   ___ftdiv@f3 00D0                     ___ftneg@f1 00A0      __size_of_disp_hex_window1 0064  
    __size_of_disp_hex_window2 0066                     ___ftmul@f1 00B5                     ___ftmul@f2 00B8  
                   ___fttol@f1 00C5             __size_of_enc1_port 005F             __size_of_enc2_port 005D  
               __pcstackCOMMON 0070              _ISR_Function$1176 007C                   __pidataBANK0 07FC  
                 __pidataBANK1 07FD                   __pidataBANK2 18C6                   __pidataBANK3 18F4  
                 __pidataBANK4 07FA            __end_of_Timer0_init 18E3                     ___lwtoft@c 00A8  
             ?_key_application 0070          __size_of_capture_init 0011                      ?_PWM_init 0070  
               _OPTION_REGbits 0095                i1___fttol@sign1 0045              __end_of_Send_Byte 18A4  
            i1___aldiv@divisor 0070              i1___aldiv@counter 0020                     __pbssBANK0 0054  
                   __pbssBANK2 0120                     __pbssBANK3 01A0                     __pbssBANK4 0220  
                   __pbssBANK5 02A0                     __pbssBANK6 0320                __CFG_VCAPEN$OFF 0000  
                ?_ISR_Function 0070           __end_of_SCANENCODER1 1DEE           __end_of_SCANENCODER2 1D6F  
                   __pmaintext 0913                        ?___ftge 00B0                        ?___wmul 00A0  
                 _capture_init 18E3                     __pintentry 0004                      ?___altoft 00A8  
                    ?___ftpack 00A0             SCANENCODER1@result 00A7             SCANENCODER2@result 00A6  
                    ?___lwtoft 00A8                     ??_PWM_init 00A0             __size_of_uart_init 0013  
                  ?_Update_PWM 00D3                     _creepspeed 022E              __end_of_enc1_port 1B07  
            __end_of_enc2_port 1AA8                     _closeloopf 0136                     _displayonf 01EE  
                   _avgpperiod 015E                        _Delayms 19B0                 ??_ISR_Function 004B  
                      _Display 0558           __size_of_send_status 0015                     _cyclestrtf 013C  
                      _cEditfg 0133                    _Timer0_init 18D2                   ?_system_init 0070  
                   _pidParams2 239A                        ___aldiv 1E70                __size_of___ftge 003C  
__size_of_detect_display_error 00AA                   ??i1___ftpack 0075                        ___ftadd 081D  
                      ___ftdiv 10DC                        ___ftneg 1891                __size_of___wmul 001E  
                      ___ftmul 12E3                        ___fttol 1F79                        ___lwdiv 19D8  
                      ___lwmod 1004                   ??i1___lwtoft 007B                     ??___altoft 00AC  
                   _read_enc1f 0153                     ??___ftpack 00A5                        _delinch 01B4  
                      _gapfreq 023A                        __ptext1 1918                        __ptext2 1B07  
                      __ptext3 18A4                        __ptext4 1940                        __ptext5 189A  
                      __ptext6 1955                        __ptext7 069B                        __ptext8 1C8B  
                      __ptext9 1C27                     _maxfmspeed 01E6                     ??___lwtoft 00AB  
                      _diswin1 0164                        _inchcnt 006C                     _parclength 01EA  
                    _T2CONbits 001C                        _rec_arr 02A0                        _plus111 014C  
             ___aldiv@dividend 00A4                        _plus222 014D                        _onesecf 0061  
                   _minfmspeed 01E8                        _pperiod 01C0                        _prevkey 016E  
                      clrloop0 18BB           end_of_initialization 0554                     _minuspara1 0149  
                   _minuspara2 0060             __end_ofi1___ftpack 1BC6                        init_ram 18AE  
                      initloop 18AF             __end_ofi1___lwtoft 1918                     _kpressread 0142  
            Update_PWM@Dutycnt 00D9              __end_of_uart_init 192B               _disp_hex_window1 1C27  
             _disp_hex_window2 1C8B         _Adaptive_base_pid$1770 00E7         _Adaptive_base_pid$1771 00EA  
       _Adaptive_base_pid$1769 00E4            __size_of_Update_PWM 0027                   _crater_speed 013A  
                    _RCSTAbits 019D               ___aldiv@quotient 00AB                   __pstringtext 1800  
                   _setcurrent 0128                      _PORTAbits 000C                    _Total_Count 01AE  
                    _PORTCbits 000E                     _pluscount1 014E                     _pluscount2 014F  
             __CFG_FOSC$INTOSC 0000                     _setvoltage 0058               _motor_continuefg 01D8  
                    _TRISAbits 008C                      _TRISCbits 008E                  _cWf2t4tmodefg 0134  
                    i1___aldiv 1DEE                      i1___ftadd 1397                      i1___ftdiv 1033  
                    i1___ftmul 122F                      i1___fttol 1EF2                     _softstartf 01D9  
        __size_of_SCANENCODER1 007F          __size_of_SCANENCODER2 007E                    _CCP1CONbits 0293  
                  ___ftdiv@exp 00D3                     _statusptr1 012A                    _CCP2CONbits 029A  
                    _TXSTAbits 019E                     _pstowfstru 0242                _newsetwirespeed 0069  
                  ___ftmul@exp 00BF             enc1_port@portvalue 00A4             __end_of_Displayarr 186E  
               __end_of___ftge 1A4B                 __end_of___wmul 1989                    _BAUDCTLbits 019F  
           _motor_acceleratefg 014A                  ?_portpin_init 0070           __end_of_ISR_Function 04D8  
                 _SCANENCODER1 1D6F                   _SCANENCODER2 1CF1            start_initialization 04DA  
            __size_of_PWM_init 0019                     ?i1___aldiv 0070                     ?i1___ftadd 0030  
                   ?i1___ftdiv 0020                     ?i1___ftmul 0020                     ?i1___fttol 003D  
                ?_transmittops 0070               _comm_error_count 0137                      _Send_Byte 189A  
                _rel_wirespeed 01CC           __end_of_lookup_table 1858                       ??___ftge 00B6  
                     ??___wmul 00A4                    __pdataBANK0 006F                    __pdataBANK1 00EF  
                  __pdataBANK2 0164                    __pdataBANK3 01DF                    __pdataBANK4 0258  
         __size_of_system_init 000A                 ??_portpin_init 00A0             i1___aldiv@dividend 0074  
              Update_PWM@Temp1 00D7                      _Tsampling 01DF                _scaled_baseval2 0126  
            __size_of___altoft 003D                   Delayms@delay 00A0              __size_of___ftpack 0061  
                 ??_Update_PWM 00D5                    __pbssBIGRAM 239A                      ___latbits 0002  
      key_application@keypress 00DD              __size_of___lwtoft 0015                  __pcstackBANK0 0020  
                __pcstackBANK1 00A0       __size_of_key_application 0122                 ??_transmittops 00A1  
                    _enc1_port 1AA8                       ?_Delayms 00A0                      _enc2_port 1A4B  
           i1___aldiv@quotient 0022                     ?_Send_Byte 0070                       ?_Display 0070  
             ___lwdiv@dividend 00A8                   ?_Timer0_init 0070             __end_of_Update_PWM 19B0  
                     ?___aldiv 00A0                      _disp1term 0232                      _disp2term 0234  
                    _disp3term 0236                      _disp4term 0238                       ?___ftadd 00A8  
                     ?___ftdiv 00C5               _prevsetwirespeed 01C6                       ?___ftneg 00A0  
                     ?___ftmul 00B5                       ?___fttol 00C5                       ?___lwdiv 00A6  
                     ?___lwmod 00A0                      __pswtext1 186E                      _mili1_100 0143  
                    _mili2_100 0144                      _count_1ms 01B2                      _count_2ms 0139  
     __end_of_disp_hex_window1 1C8B       __end_of_disp_hex_window2 1CF1                      _inchkeyon 01D7  
                  ??i1___aldiv 0078   __end_of_detect_display_error 122F                    ??i1___ftadd 0036  
                  ??i1___ftdiv 0026                   _integral_old 01A9                   _integral_new 01A6  
                  ??i1___ftmul 0026                    ??i1___fttol 0041               ___lwdiv@quotient 00AB  
                 _scalefactor2 01EC                      _error_old 01A3                      _error_new 01A0  
                ??_send_status 00A1                      _recchksum 0154                     ?_enc1_port 0070  
              ___aldiv@divisor 00A0                     ?_enc2_port 0070                ___aldiv@counter 00A9  
               ___wmul@product 00A4                       _LATAbits 010C                       _LATBbits 010D  
                     _LATCbits 010E                      _minoutmax 0227                      clear_ram0 18BA  
                    _recstatus 01CA                       _PIE1bits 0091                    _creep_speed 013B  
                     _PIE2bits 0092                      _prevTORCH 016D                       _PIR1bits 0011  
                     _PIR2bits 0012                _universal_error 015C                    _closeloop1f 01D3  
                    _uart_init 1918          __size_of_ISR_Function 04D4                      _pluspara1 0150  
                    _pluspara2 0151                      _togglepin 01EF              ___wmul@multiplier 00A0  
                     _PWM_init 0804                    _dispupdatef 006F                      _startptr1 0064  
                    _psstatusu 006D                      _wfstatusu 006E                    _mahesh_test 0258  
                  _count_1msec 0138           __end_of_portpin_init 196B                       _Fltpfreq 0120  
                  ??_Send_Byte 00A0               __size_of_Delayms 0028                   _ISR_Function 0004  
             __size_of_Display 0143              ??_key_application 00DB            __end_of_send_status 1955  
                  _firstpulse1 013F                    _firstpulse2 0140                   _secondpulse1 0155  
                 _secondpulse2 0156                     ?_uart_init 0070               __size_of___aldiv 0082  
             __size_of___ftadd 00F6               __size_of___ftdiv 00A9               __size_of___ftneg 0009  
                     ___altoft 07BD               __size_of___ftmul 00B4               __size_of___fttol 0087  
             __size_of___lwdiv 0037               __size_of___lwmod 002F           __end_of_transmittops 1B66  
                     ___ftpack 1BC6                       ___lwtoft 192B                   _send_statusf 0157  
                  _error_code1 01D5                    _error_code2 01D6                       _delinch1 01B6  
                 _lookup_table 1800                ___lwdiv@divisor 00A6                ___lwdiv@counter 00AD  
                     _gaschkfg 0141                       __ptext10 1004                       __ptext11 19D8  
                     __ptext20 0804                       __ptext12 1185                       __ptext21 19B0  
                     __ptext13 18E3                       __ptext30 07BD                       __ptext22 148D  
                     __ptext14 192B                       __ptext31 1BC6                       __ptext23 196B  
                     __ptext15 18D2                       __ptext40 1B66                       __ptext32 1E70  
                     __ptext24 1F79                       __ptext16 1CF1                       __ptext41 1DEE  
                     __ptext33 1989                       __ptext25 1891                       __ptext17 1A4B  
                     __ptext42 0558                       __ptext26 12E3                       __ptext18 1D6F  
                     __ptext35 1905                       __ptext27 1A0F                       __ptext19 1AA8  
                     __ptext36 1EF2                       __ptext28 10DC                       __ptext37 122F  
                     __ptext29 081D                       __ptext38 1033                       __ptext39 1397  
                     _enccount 013D                       _commandu 01DE                       _igascntr 01BA  
           Send_Byte@transbyte 00A0                    ??_enc1_port 00A0                    ??_enc2_port 00A0  
                __size_of_main 06ED                       _minus111 0145                       _minus222 0146  
                     _setpfreq 01CE                  ?_capture_init 0070                       _weldmode 0066  
         _detect_display_error 1185           __size_of_Timer0_init 0011                       _torchonf 01DA  
                 _prevFltpfreq 0240                    _OSCTUNEbits 0098                     _INTCONbits 000B  
                  _PID_sParams 0320                    _minuscount1 0147                    _minuscount2 0148  
                  _recpsstatus 01C8                 _prevsetcurrent 01C2                    pic14e$flags 007E  
                   Delayms@xxx 00A2                     Delayms@yyy 00A4                       intlevel1 0000  
                  _send_status 1940               ___lwmod@dividend 00A2                 _prevsetvoltage 01C4  
            __CFG_CLKOUTEN$OFF 0000                     _OSCCONbits 0099                    _openloopcnt 023E  
                ??_system_init 00A0                 ??_capture_init 00A0          ?_detect_display_error 0070  
                  ??_uart_init 00A0                 _up_count_motor 01D0              _Adaptive_base_pid 148D  
                _disparclength 01B8                ___lwmod@divisor 00A0             ?_Adaptive_base_pid 0070  
              ___lwmod@counter 00A5              ?_disp_hex_window1 00AE              ?_disp_hex_window2 00AE  
                 ___aldiv@sign 00AA          __size_of_portpin_init 0016             ??_disp_hex_window1 00B0  
           ??_disp_hex_window2 00B0                   _Total_Period 0220                   _setwirespeed 005A  
          ??_Adaptive_base_pid 00DB          __size_of_transmittops 005F  
