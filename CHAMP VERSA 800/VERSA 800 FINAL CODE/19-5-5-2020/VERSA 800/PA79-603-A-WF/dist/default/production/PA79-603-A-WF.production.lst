

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Jan 02 10:40:58 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	idataBANK4,global,class=CODE,delta=2
     9                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	text42,local,class=CODE,merge=1,delta=2
    70                           	psect	text43,local,class=CODE,merge=1,delta=2
    71                           	psect	swtext1,local,class=CONST,delta=2
    72                           	dabs	1,0x620,48
    73                           	dabs	1,0x5C6,42
    74                           	dabs	1,0x2396,0,_pidParams2
    75                           	dabs	1,0x7E,2
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011A                     	;# 
   138  011B                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011F                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0191                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0194                     	;# 
   154  0195                     	;# 
   155  0196                     	;# 
   156  0197                     	;# 
   157  0199                     	;# 
   158  0199                     	;# 
   159  0199                     	;# 
   160  019A                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019D                     	;# 
   172  019D                     	;# 
   173  019D                     	;# 
   174  019E                     	;# 
   175  019E                     	;# 
   176  019E                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020D                     	;# 
   184  020E                     	;# 
   185  0210                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0214                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  028C                     	;# 
   203  028D                     	;# 
   204  028E                     	;# 
   205  0291                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0298                     	;# 
   210  0298                     	;# 
   211  0299                     	;# 
   212  029A                     	;# 
   213  030C                     	;# 
   214  030D                     	;# 
   215  030E                     	;# 
   216  0311                     	;# 
   217  0311                     	;# 
   218  0312                     	;# 
   219  0313                     	;# 
   220  038C                     	;# 
   221  038D                     	;# 
   222  038E                     	;# 
   223  0390                     	;# 
   224  0391                     	;# 
   225  0392                     	;# 
   226  0393                     	;# 
   227  0394                     	;# 
   228  0395                     	;# 
   229  0396                     	;# 
   230  0397                     	;# 
   231  0398                     	;# 
   232  0399                     	;# 
   233  039D                     	;# 
   234  039E                     	;# 
   235  039F                     	;# 
   236  0511                     	;# 
   237  0513                     	;# 
   238  051A                     	;# 
   239  0811                     	;# 
   240  0812                     	;# 
   241  0813                     	;# 
   242  0814                     	;# 
   243  0815                     	;# 
   244  0816                     	;# 
   245  0817                     	;# 
   246  0818                     	;# 
   247  0819                     	;# 
   248  081A                     	;# 
   249  081B                     	;# 
   250  081C                     	;# 
   251  081D                     	;# 
   252  081E                     	;# 
   253  081F                     	;# 
   254  0820                     	;# 
   255  0821                     	;# 
   256  0821                     	;# 
   257  0822                     	;# 
   258  0823                     	;# 
   259  0823                     	;# 
   260  0824                     	;# 
   261  0825                     	;# 
   262  0825                     	;# 
   263  0826                     	;# 
   264  0827                     	;# 
   265  0827                     	;# 
   266  0828                     	;# 
   267  0829                     	;# 
   268  082A                     	;# 
   269  082B                     	;# 
   270  082C                     	;# 
   271  082D                     	;# 
   272  082E                     	;# 
   273  082F                     	;# 
   274  0831                     	;# 
   275  0832                     	;# 
   276  0833                     	;# 
   277  0834                     	;# 
   278  0835                     	;# 
   279  0836                     	;# 
   280  0837                     	;# 
   281  0838                     	;# 
   282  0839                     	;# 
   283  083A                     	;# 
   284  083B                     	;# 
   285  083C                     	;# 
   286  083D                     	;# 
   287  083E                     	;# 
   288  083F                     	;# 
   289  0840                     	;# 
   290  0841                     	;# 
   291  0841                     	;# 
   292  0842                     	;# 
   293  0843                     	;# 
   294  0843                     	;# 
   295  0844                     	;# 
   296  0845                     	;# 
   297  0845                     	;# 
   298  0846                     	;# 
   299  0847                     	;# 
   300  0847                     	;# 
   301  0848                     	;# 
   302  0849                     	;# 
   303  084A                     	;# 
   304  084B                     	;# 
   305  084C                     	;# 
   306  084D                     	;# 
   307  084E                     	;# 
   308  084F                     	;# 
   309  0851                     	;# 
   310  0852                     	;# 
   311  0853                     	;# 
   312  0854                     	;# 
   313  0855                     	;# 
   314  0856                     	;# 
   315  0857                     	;# 
   316  0858                     	;# 
   317  0859                     	;# 
   318  085A                     	;# 
   319  085B                     	;# 
   320  085C                     	;# 
   321  085D                     	;# 
   322  085E                     	;# 
   323  085F                     	;# 
   324  0860                     	;# 
   325  0861                     	;# 
   326  0861                     	;# 
   327  0862                     	;# 
   328  0863                     	;# 
   329  0863                     	;# 
   330  0864                     	;# 
   331  0865                     	;# 
   332  0865                     	;# 
   333  0866                     	;# 
   334  0867                     	;# 
   335  0867                     	;# 
   336  0868                     	;# 
   337  0869                     	;# 
   338  086A                     	;# 
   339  086B                     	;# 
   340  086C                     	;# 
   341  086D                     	;# 
   342  086E                     	;# 
   343  086F                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;_pidParams2
   355                           
   356                           	psect	idataBANK0
   357  07FE                     __pidataBANK0:	
   358                           
   359                           ;initializer for _dispupdatef
   360  07FE  3401               	retlw	1
   361                           
   362                           	psect	idataBANK1
   363  07FF                     __pidataBANK1:	
   364                           
   365                           ;initializer for _key
   366  07FF  3458               	retlw	88
   367                           
   368                           	psect	idataBANK2
   369  18C1                     __pidataBANK2:	
   370                           
   371                           ;initializer for _diswin1
   372  18C1  3430               	retlw	48
   373  18C2  3430               	retlw	48
   374  18C3  3430               	retlw	48
   375  18C4  3430               	retlw	48
   376  18C5  3430               	retlw	48
   377  18C6  3430               	retlw	48
   378  18C7  3430               	retlw	48
   379  18C8  3430               	retlw	48
   380                           
   381                           ;initializer for _TORCH
   382  18C9  3458               	retlw	88
   383                           
   384                           ;initializer for _prevTORCH
   385  18CA  34FF               	retlw	255
   386                           
   387                           ;initializer for _prevkey
   388  18CB  345A               	retlw	90
   389                           
   390                           ;initializer for _wfspeedchangef
   391  18CC  3401               	retlw	1
   392                           
   393                           	psect	idataBANK3
   394  18CD                     __pidataBANK3:	
   395                           
   396                           ;initializer for _Tsampling
   397  18CD  3400               	retlw	0
   398  18CE  3480               	retlw	128
   399  18CF  343F               	retlw	63
   400                           
   401                           ;initializer for _Actual_amp
   402  18D0  34FF               	retlw	255
   403  18D1  34FF               	retlw	255
   404                           
   405                           ;initializer for _Actual_vtg
   406  18D2  34FF               	retlw	255
   407  18D3  34FF               	retlw	255
   408                           
   409                           ;initializer for _maxfmspeed
   410  18D4  3420               	retlw	32
   411  18D5  3403               	retlw	3
   412                           
   413                           ;initializer for _minfmspeed
   414  18D6  3432               	retlw	50
   415  18D7  3400               	retlw	0
   416                           
   417                           ;initializer for _scalefactor2
   418  18D8  3447               	retlw	71
   419  18D9  3400               	retlw	0
   420                           
   421                           ;initializer for _displayonf
   422  18DA  3401               	retlw	1
   423                           
   424                           ;initializer for _togglepin
   425  18DB  3401               	retlw	1
   426                           
   427                           	psect	idataBANK4
   428  0804                     __pidataBANK4:	
   429                           
   430                           ;initializer for _mahesh_test
   431  0804  3432               	retlw	50
   432  0805  3400               	retlw	0
   433                           
   434                           ;initializer for _parclength
   435  0806  34FF               	retlw	255
   436  0807  34FF               	retlw	255
   437                           
   438                           	psect	stringtext
   439  1800                     __pstringtext:	
   440  1800                     _lookup_table:	
   441  1800  343F               	retlw	63
   442  1801  3400               	retlw	0
   443  1802  3406               	retlw	6
   444  1803  3400               	retlw	0
   445  1804  345B               	retlw	91
   446  1805  3400               	retlw	0
   447  1806  344F               	retlw	79
   448  1807  3400               	retlw	0
   449  1808  3466               	retlw	102
   450  1809  3400               	retlw	0
   451  180A  346D               	retlw	109
   452  180B  3400               	retlw	0
   453  180C  347D               	retlw	125
   454  180D  3400               	retlw	0
   455  180E  3407               	retlw	7
   456  180F  3400               	retlw	0
   457  1810  347F               	retlw	127
   458  1811  3400               	retlw	0
   459  1812  346F               	retlw	111
   460  1813  3400               	retlw	0
   461  1814  3480               	retlw	128
   462  1815  3400               	retlw	0
   463  1816  3477               	retlw	119
   464  1817  3400               	retlw	0
   465  1818  347C               	retlw	124
   466  1819  3400               	retlw	0
   467  181A  3439               	retlw	57
   468  181B  3400               	retlw	0
   469  181C  345E               	retlw	94
   470  181D  3400               	retlw	0
   471  181E  3479               	retlw	121
   472  181F  3400               	retlw	0
   473  1820  3471               	retlw	113
   474  1821  3400               	retlw	0
   475  1822  343D               	retlw	61
   476  1823  3400               	retlw	0
   477  1824  3476               	retlw	118
   478  1825  3400               	retlw	0
   479  1826  3406               	retlw	6
   480  1827  3400               	retlw	0
   481  1828  341E               	retlw	30
   482  1829  3400               	retlw	0
   483  182A  3470               	retlw	112
   484  182B  3400               	retlw	0
   485  182C  3438               	retlw	56
   486  182D  3400               	retlw	0
   487  182E  3455               	retlw	85
   488  182F  3400               	retlw	0
   489  1830  3454               	retlw	84
   490  1831  3400               	retlw	0
   491  1832  343F               	retlw	63
   492  1833  3400               	retlw	0
   493  1834  3473               	retlw	115
   494  1835  3400               	retlw	0
   495  1836  3467               	retlw	103
   496  1837  3400               	retlw	0
   497  1838  3450               	retlw	80
   498  1839  3400               	retlw	0
   499  183A  346D               	retlw	109
   500  183B  3400               	retlw	0
   501  183C  3478               	retlw	120
   502  183D  3400               	retlw	0
   503  183E  341C               	retlw	28
   504  183F  3400               	retlw	0
   505  1840  343E               	retlw	62
   506  1841  3400               	retlw	0
   507  1842  346A               	retlw	106
   508  1843  3400               	retlw	0
   509  1844  3468               	retlw	104
   510  1845  3400               	retlw	0
   511  1846  346E               	retlw	110
   512  1847  3400               	retlw	0
   513  1848  3489               	retlw	137
   514  1849  3400               	retlw	0
   515  184A  3400               	retlw	0
   516  184B  3400               	retlw	0
   517  184C  3440               	retlw	64
   518  184D  3400               	retlw	0
   519  184E  34FF               	retlw	255
   520  184F  3400               	retlw	0
   521  1850  3400               	retlw	0
   522  1851  3400               	retlw	0
   523  1852  3400               	retlw	0
   524  1853  3400               	retlw	0
   525  1854  3400               	retlw	0
   526  1855  3400               	retlw	0
   527  1856  3400               	retlw	0
   528  1857  3400               	retlw	0
   529  1858                     __end_of_lookup_table:	
   530  1858                     _Displayarr:	
   531  1858  343F               	retlw	63
   532  1859  3400               	retlw	0
   533  185A  3406               	retlw	6
   534  185B  3400               	retlw	0
   535  185C  345B               	retlw	91
   536  185D  3400               	retlw	0
   537  185E  344F               	retlw	79
   538  185F  3400               	retlw	0
   539  1860  3466               	retlw	102
   540  1861  3400               	retlw	0
   541  1862  346D               	retlw	109
   542  1863  3400               	retlw	0
   543  1864  347D               	retlw	125
   544  1865  3400               	retlw	0
   545  1866  3407               	retlw	7
   546  1867  3400               	retlw	0
   547  1868  347F               	retlw	127
   548  1869  3400               	retlw	0
   549  186A  346F               	retlw	111
   550  186B  3400               	retlw	0
   551  186C  34FF               	retlw	255
   552  186D  3400               	retlw	0
   553  186E                     __end_of_Displayarr:	
   554  000B                     _INTCONbits	set	11
   555  0011                     _PIR1	set	17
   556  0011                     _PIR1bits	set	17
   557  0012                     _PIR2bits	set	18
   558  000C                     _PORTA	set	12
   559  000C                     _PORTAbits	set	12
   560  000D                     _PORTB	set	13
   561  000E                     _PORTC	set	14
   562  000E                     _PORTCbits	set	14
   563  001B                     _PR2	set	27
   564  0018                     _T1CON	set	24
   565  001C                     _T2CONbits	set	28
   566  0015                     _TMR0	set	21
   567  0017                     _TMR1H	set	23
   568  0016                     _TMR1L	set	22
   569  0095                     _OPTION_REGbits	set	149
   570  0099                     _OSCCONbits	set	153
   571  0098                     _OSCTUNEbits	set	152
   572  0091                     _PIE1bits	set	145
   573  0092                     _PIE2bits	set	146
   574  008C                     _TRISA	set	140
   575  008C                     _TRISAbits	set	140
   576  008D                     _TRISB	set	141
   577  008E                     _TRISC	set	142
   578  008E                     _TRISCbits	set	142
   579  010C                     _LATAbits	set	268
   580  010D                     _LATB	set	269
   581  010D                     _LATBbits	set	269
   582  010E                     _LATCbits	set	270
   583  018C                     _ANSELA	set	396
   584  018D                     _ANSELB	set	397
   585  019F                     _BAUDCTLbits	set	415
   586  0199                     _RCREG	set	409
   587  019D                     _RCSTAbits	set	413
   588  019B                     _SPBRG	set	411
   589  019A                     _TXREG	set	410
   590  019E                     _TXSTA	set	414
   591  019E                     _TXSTAbits	set	414
   592  0293                     _CCP1CONbits	set	659
   593  029A                     _CCP2CONbits	set	666
   594  0291                     _CCPR1L	set	657
   595  0299                     _CCPR2H	set	665
   596  0298                     _CCPR2L	set	664
   597                           
   598                           ; #config settings
   599  0000                     
   600                           	psect	cinit
   601  04EE                     start_initialization:	
   602  04EE                     __initialization:		;BIGRAM
   603                           
   604                           ; Clear objects allocated to BIGRAM
   605  04EE  3096               	movlw	low (0+9110)
   606  04EF  0084               	movwf	4
   607  04F0  3023               	movlw	high (0+9110)
   608  04F1  0085               	movwf	5
   609  04F2  305A               	movlw	90
   610  04F3  00FE               	movwf	btemp
   611  04F4  3000               	movlw	0
   612  04F5  00FF               	movwf	btemp+1
   613  04F6  3198  20B5  3184   	fcall	clear_ram0
   614                           
   615                           ; Clear objects allocated to BANK0
   616  04F9  3054               	movlw	low __pbssBANK0
   617  04FA  0084               	movwf	4
   618  04FB  3000               	movlw	high __pbssBANK0
   619  04FC  0085               	movwf	5
   620  04FD  301B               	movlw	27
   621  04FE  00FE               	movwf	btemp
   622  04FF  3000               	movlw	0
   623  0500  00FF               	movwf	btemp+1
   624  0501  3198  20B5  3184   	fcall	clear_ram0
   625                           
   626                           ; Clear objects allocated to BANK2
   627  0504  3020               	movlw	low __pbssBANK2
   628  0505  0084               	movwf	4
   629  0506  3001               	movlw	high __pbssBANK2
   630  0507  0085               	movwf	5
   631  0508  3044               	movlw	68
   632  0509  00FE               	movwf	btemp
   633  050A  3000               	movlw	0
   634  050B  00FF               	movwf	btemp+1
   635  050C  3198  20B5  3184   	fcall	clear_ram0
   636                           
   637                           ; Clear objects allocated to BANK3
   638  050F  30A0               	movlw	low __pbssBANK3
   639  0510  0084               	movwf	4
   640  0511  3001               	movlw	high __pbssBANK3
   641  0512  0085               	movwf	5
   642  0513  3040               	movlw	64
   643  0514  00FE               	movwf	btemp
   644  0515  3000               	movlw	0
   645  0516  00FF               	movwf	btemp+1
   646  0517  3198  20B5  3184   	fcall	clear_ram0
   647                           
   648                           ; Clear objects allocated to BANK4
   649  051A  3020               	movlw	low __pbssBANK4
   650  051B  0084               	movwf	4
   651  051C  3002               	movlw	high __pbssBANK4
   652  051D  0085               	movwf	5
   653  051E  303A               	movlw	58
   654  051F  00FE               	movwf	btemp
   655  0520  3000               	movlw	0
   656  0521  00FF               	movwf	btemp+1
   657  0522  3198  20B5  3184   	fcall	clear_ram0
   658                           
   659                           ; Clear objects allocated to BANK5
   660  0525  30A0               	movlw	low __pbssBANK5
   661  0526  0084               	movwf	4
   662  0527  3002               	movlw	high __pbssBANK5
   663  0528  0085               	movwf	5
   664  0529  3018               	movlw	24
   665  052A  00FE               	movwf	btemp
   666  052B  3000               	movlw	0
   667  052C  00FF               	movwf	btemp+1
   668  052D  3198  20B5  3184   	fcall	clear_ram0
   669                           
   670                           ; Clear objects allocated to BANK6
   671  0530  3020               	movlw	low __pbssBANK6
   672  0531  0084               	movwf	4
   673  0532  3003               	movlw	high __pbssBANK6
   674  0533  0085               	movwf	5
   675  0534  3049               	movlw	73
   676  0535  00FE               	movwf	btemp
   677  0536  3000               	movlw	0
   678  0537  00FF               	movwf	btemp+1
   679  0538  3198  20B5  3184   	fcall	clear_ram0
   680                           
   681                           ; Initialize objects allocated to BANK0
   682  053B  3187  27FE  3184   	fcall	__pidataBANK0	;fetch initializer
   683  053E  00EF               	movwf	__pdataBANK0& (0+127)
   684                           
   685                           ; Initialize objects allocated to BANK1
   686  053F  0021               	movlb	1	; select bank1
   687  0540  3187  27FF  3184   	fcall	__pidataBANK1	;fetch initializer
   688  0543  00EF               	movwf	__pdataBANK1& (0+127)
   689                           
   690                           ; Initialize objects allocated to BANK2
   691  0544  30C1               	movlw	low __pidataBANK2
   692  0545  0084               	movwf	4
   693  0546  3098               	movlw	(high __pidataBANK2)| (0+128)
   694  0547  0085               	movwf	5
   695  0548  3064               	movlw	low __pdataBANK2
   696  0549  0086               	movwf	6
   697  054A  3001               	movlw	high __pdataBANK2
   698  054B  0087               	movwf	7
   699  054C  3000               	movlw	0
   700  054D  00FF               	movwf	btemp+1
   701  054E  300C               	movlw	12
   702  054F  3198  20A9  3184   	fcall	init_ram
   703                           
   704                           ; Initialize objects allocated to BANK3
   705  0552  30CD               	movlw	low __pidataBANK3
   706  0553  0084               	movwf	4
   707  0554  3098               	movlw	(high __pidataBANK3)| (0+128)
   708  0555  0085               	movwf	5
   709  0556  30E0               	movlw	low __pdataBANK3
   710  0557  0086               	movwf	6
   711  0558  3001               	movlw	high __pdataBANK3
   712  0559  0087               	movwf	7
   713  055A  3000               	movlw	0
   714  055B  00FF               	movwf	btemp+1
   715  055C  300F               	movlw	15
   716  055D  3198  20A9  3184   	fcall	init_ram
   717                           
   718                           ; Initialize objects allocated to BANK4
   719  0560  3004               	movlw	low __pidataBANK4
   720  0561  0084               	movwf	4
   721  0562  3088               	movlw	(high __pidataBANK4)| (0+128)
   722  0563  0085               	movwf	5
   723  0564  305A               	movlw	low __pdataBANK4
   724  0565  0086               	movwf	6
   725  0566  3002               	movlw	high __pdataBANK4
   726  0567  0087               	movwf	7
   727  0568  3000               	movlw	0
   728  0569  00FF               	movwf	btemp+1
   729  056A  3004               	movlw	4
   730  056B  3198  20A9         	fcall	init_ram
   731  056D                     end_of_initialization:	
   732                           ;End of C runtime variable initialization code
   733                           
   734  056D                     __end_of__initialization:	
   735  056D  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   736  056E  0020               	movlb	0
   737  056F  3189  2952         	ljmp	_main	;jump to C main() function
   738                           
   739                           	psect	bssBANK0
   740  0054                     __pbssBANK0:	
   741  0054                     _new1:	
   742  0054                     	ds	2
   743  0056                     _new2:	
   744  0056                     	ds	2
   745  0058                     _setvoltage:	
   746  0058                     	ds	2
   747  005A                     _setwirespeed:	
   748  005A                     	ds	2
   749  005C                     _digit:	
   750  005C                     	ds	1
   751  005D                     _encod1:	
   752  005D                     	ds	1
   753  005E                     _encod2:	
   754  005E                     	ds	1
   755  005F                     _i:	
   756  005F                     	ds	1
   757  0060                     _minuspara2:	
   758  0060                     	ds	1
   759  0061                     _onesecf:	
   760  0061                     	ds	1
   761  0062                     _portbstatus:	
   762  0062                     	ds	1
   763  0063                     _rxdata:	
   764  0063                     	ds	1
   765  0064                     _startptr1:	
   766  0064                     	ds	1
   767  0065                     _temp:	
   768  0065                     	ds	1
   769  0066                     _weldmode:	
   770  0066                     	ds	1
   771  0067                     _TypeU:	
   772  0067                     	ds	2
   773  0069                     _newsetwirespeed:	
   774  0069                     	ds	2
   775  006B                     _TypeDP:	
   776  006B                     	ds	1
   777  006C                     _inchcnt:	
   778  006C                     	ds	1
   779  006D                     _psstatusu:	
   780  006D                     	ds	1
   781  006E                     _wfstatusu:	
   782  006E                     	ds	1
   783                           
   784                           	psect	dataBANK0
   785  006F                     __pdataBANK0:	
   786  006F                     _dispupdatef:	
   787  006F                     	ds	1
   788                           
   789                           	psect	dataBANK1
   790  00EF                     __pdataBANK1:	
   791  00EF                     _key:	
   792  00EF                     	ds	1
   793                           
   794                           	psect	bssBANK2
   795  0120                     __pbssBANK2:	
   796  0120                     _Fltpfreq:	
   797  0120                     	ds	2
   798  0122                     _ijk:	
   799  0122                     	ds	2
   800  0124                     _lmn:	
   801  0124                     	ds	2
   802  0126                     _recpsstatus:	
   803  0126                     	ds	2
   804  0128                     _setcurrent:	
   805  0128                     	ds	2
   806  012A                     _statusptr1:	
   807  012A                     	ds	2
   808  012C                     _Count:	
   809  012C                     	ds	1
   810  012D                     _OneH:	
   811  012D                     	ds	1
   812  012E                     _OneL:	
   813  012E                     	ds	1
   814  012F                     _TwoH:	
   815  012F                     	ds	1
   816  0130                     _TwoL:	
   817  0130                     	ds	1
   818  0131                     _adaptivepidf:	
   819  0131                     	ds	1
   820  0132                     _arrptr:	
   821  0132                     	ds	1
   822  0133                     _cEditfg:	
   823  0133                     	ds	1
   824  0134                     _cWf2t4tmodefg:	
   825  0134                     	ds	1
   826  0135                     _chksum:	
   827  0135                     	ds	1
   828  0136                     _closeloopf:	
   829  0136                     	ds	1
   830  0137                     _comm_error_count:	
   831  0137                     	ds	1
   832  0138                     _count_1msec:	
   833  0138                     	ds	1
   834  0139                     _count_2ms:	
   835  0139                     	ds	1
   836  013A                     _crater_speed:	
   837  013A                     	ds	1
   838  013B                     _creep_speed:	
   839  013B                     	ds	1
   840  013C                     _cyclestrtf:	
   841  013C                     	ds	1
   842  013D                     _enccount:	
   843  013D                     	ds	1
   844  013E                     _error8:	
   845  013E                     	ds	1
   846  013F                     _firstpulse1:	
   847  013F                     	ds	1
   848  0140                     _firstpulse2:	
   849  0140                     	ds	1
   850  0141                     _gaschkfg:	
   851  0141                     	ds	1
   852  0142                     _kpressread:	
   853  0142                     	ds	1
   854  0143                     _mili1_100:	
   855  0143                     	ds	1
   856  0144                     _mili2_100:	
   857  0144                     	ds	1
   858  0145                     _minus111:	
   859  0145                     	ds	1
   860  0146                     _minus222:	
   861  0146                     	ds	1
   862  0147                     _minuscount1:	
   863  0147                     	ds	1
   864  0148                     _minuscount2:	
   865  0148                     	ds	1
   866  0149                     _minuspara1:	
   867  0149                     	ds	1
   868  014A                     _pcount:	
   869  014A                     	ds	1
   870  014B                     _plus111:	
   871  014B                     	ds	1
   872  014C                     _plus222:	
   873  014C                     	ds	1
   874  014D                     _pluscount1:	
   875  014D                     	ds	1
   876  014E                     _pluscount2:	
   877  014E                     	ds	1
   878  014F                     _pluspara1:	
   879  014F                     	ds	1
   880  0150                     _pluspara2:	
   881  0150                     	ds	1
   882  0151                     _pportb:	
   883  0151                     	ds	1
   884  0152                     _read_enc1f:	
   885  0152                     	ds	1
   886  0153                     _recchksum:	
   887  0153                     	ds	1
   888  0154                     _secondpulse1:	
   889  0154                     	ds	1
   890  0155                     _secondpulse2:	
   891  0155                     	ds	1
   892  0156                     _send_statusf:	
   893  0156                     	ds	1
   894  0157                     _tans:	
   895  0157                     	ds	1
   896  0158                     _torchstatus1:	
   897  0158                     	ds	1
   898  0159                     _torchstatus2:	
   899  0159                     	ds	1
   900  015A                     _transmitonf:	
   901  015A                     	ds	1
   902  015B                     _universal_error:	
   903  015B                     	ds	1
   904  015C                     _universal_error_latch:	
   905  015C                     	ds	1
   906  015D                     _avgpperiod:	
   907  015D                     	ds	2
   908  015F                     _erroru:	
   909  015F                     	ds	2
   910  0161                     _pfreq:	
   911  0161                     	ds	2
   912  0163                     _commandu:	
   913  0163                     	ds	1
   914                           
   915                           	psect	dataBANK2
   916  0164                     __pdataBANK2:	
   917  0164                     _diswin1:	
   918  0164                     	ds	8
   919  016C                     _TORCH:	
   920  016C                     	ds	1
   921  016D                     _prevTORCH:	
   922  016D                     	ds	1
   923  016E                     _prevkey:	
   924  016E                     	ds	1
   925  016F                     _wfspeedchangef:	
   926  016F                     	ds	1
   927                           
   928                           	psect	bssBANK3
   929  01A0                     __pbssBANK3:	
   930  01A0                     _error_new:	
   931  01A0                     	ds	3
   932  01A3                     _error_old:	
   933  01A3                     	ds	3
   934  01A6                     _integral_new:	
   935  01A6                     	ds	3
   936  01A9                     _integral_old:	
   937  01A9                     	ds	3
   938  01AC                     _Hi_setppwm:	
   939  01AC                     	ds	2
   940  01AE                     _Lo_setppwm:	
   941  01AE                     	ds	2
   942  01B0                     _One:	
   943  01B0                     	ds	2
   944  01B2                     _Total_Count:	
   945  01B2                     	ds	2
   946  01B4                     _Two:	
   947  01B4                     	ds	2
   948  01B6                     _count_1ms:	
   949  01B6                     	ds	2
   950  01B8                     _delinch:	
   951  01B8                     	ds	2
   952  01BA                     _delinch1:	
   953  01BA                     	ds	2
   954  01BC                     _igascntr:	
   955  01BC                     	ds	2
   956  01BE                     _old1:	
   957  01BE                     	ds	2
   958  01C0                     _old2:	
   959  01C0                     	ds	2
   960  01C2                     _pperiod:	
   961  01C2                     	ds	2
   962  01C4                     _prevsetcurrent:	
   963  01C4                     	ds	2
   964  01C6                     _prevsetvoltage:	
   965  01C6                     	ds	2
   966  01C8                     _prevsetwirespeed:	
   967  01C8                     	ds	2
   968  01CA                     _recstatus:	
   969  01CA                     	ds	2
   970  01CC                     _rel_wirespeed:	
   971  01CC                     	ds	2
   972  01CE                     _scaled_baseval2:	
   973  01CE                     	ds	2
   974  01D0                     _setpfreq:	
   975  01D0                     	ds	2
   976  01D2                     _Tx_ptr:	
   977  01D2                     	ds	1
   978  01D3                     _capintervalf:	
   979  01D3                     	ds	1
   980  01D4                     _closeloop1f:	
   981  01D4                     	ds	1
   982  01D5                     _count_pid:	
   983  01D5                     	ds	1
   984  01D6                     _error4:	
   985  01D6                     	ds	1
   986  01D7                     _error_code1:	
   987  01D7                     	ds	1
   988  01D8                     _error_code2:	
   989  01D8                     	ds	1
   990  01D9                     _fixintervalf:	
   991  01D9                     	ds	1
   992  01DA                     _inchkeyon:	
   993  01DA                     	ds	1
   994  01DB                     _softstartf:	
   995  01DB                     	ds	1
   996  01DC                     _torchonf:	
   997  01DC                     	ds	1
   998  01DD                     _txonf:	
   999  01DD                     	ds	1
  1000  01DE                     _updatedispf:	
  1001  01DE                     	ds	1
  1002  01DF                     _wfstatusbyte:	
  1003  01DF                     	ds	1
  1004                           
  1005                           	psect	dataBANK3
  1006  01E0                     __pdataBANK3:	
  1007  01E0                     _Tsampling:	
  1008  01E0                     	ds	3
  1009  01E3                     _Actual_amp:	
  1010  01E3                     	ds	2
  1011  01E5                     _Actual_vtg:	
  1012  01E5                     	ds	2
  1013  01E7                     _maxfmspeed:	
  1014  01E7                     	ds	2
  1015  01E9                     _minfmspeed:	
  1016  01E9                     	ds	2
  1017  01EB                     _scalefactor2:	
  1018  01EB                     	ds	2
  1019  01ED                     _displayonf:	
  1020  01ED                     	ds	1
  1021  01EE                     _togglepin:	
  1022  01EE                     	ds	1
  1023                           
  1024                           	psect	bssBANK4
  1025  0220                     __pbssBANK4:	
  1026  0220                     _Total_Period:	
  1027  0220                     	ds	4
  1028  0224                     _controller_out:	
  1029  0224                     	ds	3
  1030  0227                     _minoutmax:	
  1031  0227                     	ds	3
  1032  022A                     _count_transms:	
  1033  022A                     	ds	2
  1034  022C                     _creepspeed:	
  1035  022C                     	ds	2
  1036  022E                     _delay:	
  1037  022E                     	ds	2
  1038  0230                     _disp1term:	
  1039  0230                     	ds	2
  1040  0232                     _disp2term:	
  1041  0232                     	ds	2
  1042  0234                     _disp3term:	
  1043  0234                     	ds	2
  1044  0236                     _disp4term:	
  1045  0236                     	ds	2
  1046  0238                     _disparclength:	
  1047  0238                     	ds	2
  1048  023A                     _gapfreq:	
  1049  023A                     	ds	2
  1050  023C                     _iTest:	
  1051  023C                     	ds	2
  1052  023E                     _iii:	
  1053  023E                     	ds	2
  1054  0240                     _openloopcnt:	
  1055  0240                     	ds	2
  1056  0242                     _prevFltpfreq:	
  1057  0242                     	ds	2
  1058  0244                     _pstowfstru:	
  1059  0244                     	ds	22
  1060                           
  1061                           	psect	dataBANK4
  1062  025A                     __pdataBANK4:	
  1063  025A                     _mahesh_test:	
  1064  025A                     	ds	2
  1065  025C                     _parclength:	
  1066  025C                     	ds	2
  1067                           
  1068                           	psect	bssBANK5
  1069  02A0                     __pbssBANK5:	
  1070  02A0                     _rec_arr:	
  1071  02A0                     	ds	24
  1072                           
  1073                           	psect	bssBANK6
  1074  0320                     __pbssBANK6:	
  1075  0320                     _PID_sParams:	
  1076  0320                     	ds	73
  1077                           
  1078                           	psect	clrtext
  1079  18B5                     clear_ram0:	
  1080                           ;	Called with FSR0 containing the base address, and
  1081                           ;	btemp/btemp+1 has the size to clear
  1082                           
  1083  18B5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1084  18B6                     clrloop0:	
  1085  18B6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1086  18B7  3101               	addfsr 0,1
  1087  18B8  3001               	movlw	1
  1088  18B9  02FE               	subwf	126,f
  1089  18BA  3000               	movlw	0
  1090  18BB  3BFF               	subwfb	127,f
  1091  18BC  087F               	movf	127,w
  1092  18BD  047E               	iorwf	126,w
  1093  18BE  1903               	btfsc	3,2
  1094  18BF  3400               	retlw	0	;all done for this memory range, return
  1095  18C0  28B6               	goto	clrloop0	;have we reached the end yet?
  1096                           
  1097                           	psect	inittext
  1098  18A9                     init_ram:	
  1099  18A9  00FE               	movwf	126
  1100  18AA                     initloop:	
  1101  18AA  0012               	moviw fsr0++
  1102  18AB  001E               	movwi fsr1++
  1103  18AC  3001               	movlw	1
  1104  18AD  02FE               	subwf	126,f
  1105  18AE  3000               	movlw	0
  1106  18AF  3BFF               	subwfb	127,f
  1107  18B0  087F               	movf	127,w
  1108  18B1  047E               	iorwf	126,w
  1109  18B2  1903               	btfsc	3,2
  1110  18B3  3400               	retlw	0
  1111  18B4  28AA               	goto	initloop
  1112                           
  1113                           	psect	cstackBANK1
  1114  00A0                     __pcstackBANK1:	
  1115  00A0                     ??_enc1_port:	
  1116  00A0                     ??_enc2_port:	
  1117                           ; 0 bytes @ 0x0
  1118                           
  1119  00A0                     ??_system_init:	
  1120                           ; 0 bytes @ 0x0
  1121                           
  1122  00A0                     ??_portpin_init:	
  1123                           ; 0 bytes @ 0x0
  1124                           
  1125  00A0                     ??_Timer0_init:	
  1126                           ; 0 bytes @ 0x0
  1127                           
  1128  00A0                     ??_PWM_init:	
  1129                           ; 0 bytes @ 0x0
  1130                           
  1131  00A0                     ??_capture_init:	
  1132                           ; 0 bytes @ 0x0
  1133                           
  1134  00A0                     ??_uart_init:	
  1135                           ; 0 bytes @ 0x0
  1136                           
  1137  00A0                     ?_Delayms:	
  1138                           ; 0 bytes @ 0x0
  1139                           
  1140  00A0                     ??_Send_Byte:	
  1141                           ; 0 bytes @ 0x0
  1142                           
  1143  00A0                     ?___wmul:	
  1144                           ; 0 bytes @ 0x0
  1145                           
  1146  00A0                     ?___lwdiv:	
  1147                           ; 2 bytes @ 0x0
  1148                           
  1149  00A0                     ?___lwmod:	
  1150                           ; 2 bytes @ 0x0
  1151                           
  1152  00A0                     ?___ftpack:	
  1153                           ; 2 bytes @ 0x0
  1154                           
  1155  00A0                     ?___ftneg:	
  1156                           ; 3 bytes @ 0x0
  1157                           
  1158  00A0                     ?___aldiv:	
  1159                           ; 3 bytes @ 0x0
  1160                           
  1161  00A0                     Send_Byte@transbyte:	
  1162                           ; 4 bytes @ 0x0
  1163                           
  1164  00A0                     Delayms@delay:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  00A0                     ___wmul@multiplier:	
  1168                           ; 2 bytes @ 0x0
  1169                           
  1170  00A0                     ___lwdiv@divisor:	
  1171                           ; 2 bytes @ 0x0
  1172                           
  1173  00A0                     ___lwmod@divisor:	
  1174                           ; 2 bytes @ 0x0
  1175                           
  1176  00A0                     ___ftpack@arg:	
  1177                           ; 2 bytes @ 0x0
  1178                           
  1179  00A0                     ___ftneg@f1:	
  1180                           ; 3 bytes @ 0x0
  1181                           
  1182  00A0                     ___aldiv@divisor:	
  1183                           ; 3 bytes @ 0x0
  1184                           
  1185                           
  1186                           ; 4 bytes @ 0x0
  1187  00A0                     	ds	1
  1188  00A1                     ??_send_status:	
  1189  00A1                     ??_transmittops:	
  1190                           ; 0 bytes @ 0x1
  1191                           
  1192                           
  1193                           ; 0 bytes @ 0x1
  1194  00A1                     	ds	1
  1195  00A2                     ??_Delayms:	
  1196  00A2                     Delayms@xxx:	
  1197                           ; 0 bytes @ 0x2
  1198                           
  1199  00A2                     ___wmul@multiplicand:	
  1200                           ; 2 bytes @ 0x2
  1201                           
  1202  00A2                     ___lwdiv@dividend:	
  1203                           ; 2 bytes @ 0x2
  1204                           
  1205  00A2                     ___lwmod@dividend:	
  1206                           ; 2 bytes @ 0x2
  1207                           
  1208                           
  1209                           ; 2 bytes @ 0x2
  1210  00A2                     	ds	1
  1211  00A3                     ??___ftneg:	
  1212  00A3                     ___ftpack@exp:	
  1213                           ; 0 bytes @ 0x3
  1214                           
  1215  00A3                     enc2_port@portvalue:	
  1216                           ; 1 bytes @ 0x3
  1217                           
  1218                           
  1219                           ; 2 bytes @ 0x3
  1220  00A3                     	ds	1
  1221  00A4                     ??___wmul:	
  1222  00A4                     ??___lwdiv:	
  1223                           ; 0 bytes @ 0x4
  1224                           
  1225  00A4                     ??___lwmod:	
  1226                           ; 0 bytes @ 0x4
  1227                           
  1228  00A4                     ___ftpack@sign:	
  1229                           ; 0 bytes @ 0x4
  1230                           
  1231  00A4                     Delayms@yyy:	
  1232                           ; 1 bytes @ 0x4
  1233                           
  1234  00A4                     enc1_port@portvalue:	
  1235                           ; 2 bytes @ 0x4
  1236                           
  1237  00A4                     ___wmul@product:	
  1238                           ; 2 bytes @ 0x4
  1239                           
  1240  00A4                     ___aldiv@dividend:	
  1241                           ; 2 bytes @ 0x4
  1242                           
  1243                           
  1244                           ; 4 bytes @ 0x4
  1245  00A4                     	ds	1
  1246  00A5                     ??___ftpack:	
  1247  00A5                     ??_SCANENCODER2:	
  1248                           ; 0 bytes @ 0x5
  1249                           
  1250  00A5                     ___lwmod@counter:	
  1251                           ; 0 bytes @ 0x5
  1252                           
  1253  00A5                     ___lwdiv@quotient:	
  1254                           ; 1 bytes @ 0x5
  1255                           
  1256                           
  1257                           ; 2 bytes @ 0x5
  1258  00A5                     	ds	1
  1259  00A6                     ??_SCANENCODER1:	
  1260  00A6                     SCANENCODER2@result:	
  1261                           ; 0 bytes @ 0x6
  1262                           
  1263                           
  1264                           ; 1 bytes @ 0x6
  1265  00A6                     	ds	1
  1266  00A7                     SCANENCODER1@result:	
  1267  00A7                     ___lwdiv@counter:	
  1268                           ; 1 bytes @ 0x7
  1269                           
  1270                           
  1271                           ; 1 bytes @ 0x7
  1272  00A7                     	ds	1
  1273  00A8                     ?_disp_hex_window1:	
  1274  00A8                     ?_disp_hex_window2:	
  1275                           ; 0 bytes @ 0x8
  1276                           
  1277  00A8                     ??___aldiv:	
  1278                           ; 0 bytes @ 0x8
  1279                           
  1280  00A8                     ?___altoft:	
  1281                           ; 0 bytes @ 0x8
  1282                           
  1283  00A8                     ?___ftadd:	
  1284                           ; 3 bytes @ 0x8
  1285                           
  1286  00A8                     ?___lwtoft:	
  1287                           ; 3 bytes @ 0x8
  1288                           
  1289  00A8                     disp_hex_window1@hex_data:	
  1290                           ; 3 bytes @ 0x8
  1291                           
  1292  00A8                     disp_hex_window2@hex_data:	
  1293                           ; 2 bytes @ 0x8
  1294                           
  1295  00A8                     ___lwtoft@c:	
  1296                           ; 2 bytes @ 0x8
  1297                           
  1298  00A8                     ___ftadd@f1:	
  1299                           ; 2 bytes @ 0x8
  1300                           
  1301  00A8                     ___altoft@c:	
  1302                           ; 3 bytes @ 0x8
  1303                           
  1304                           
  1305                           ; 4 bytes @ 0x8
  1306  00A8                     	ds	1
  1307  00A9                     ___aldiv@counter:	
  1308                           
  1309                           ; 1 bytes @ 0x9
  1310  00A9                     	ds	1
  1311  00AA                     ??_disp_hex_window1:	
  1312  00AA                     ??_disp_hex_window2:	
  1313                           ; 0 bytes @ 0xA
  1314                           
  1315  00AA                     ___aldiv@sign:	
  1316                           ; 0 bytes @ 0xA
  1317                           
  1318                           
  1319                           ; 1 bytes @ 0xA
  1320  00AA                     	ds	1
  1321  00AB                     ??___lwtoft:	
  1322  00AB                     ___ftadd@f2:	
  1323                           ; 0 bytes @ 0xB
  1324                           
  1325  00AB                     ___aldiv@quotient:	
  1326                           ; 3 bytes @ 0xB
  1327                           
  1328                           
  1329                           ; 4 bytes @ 0xB
  1330  00AB                     	ds	1
  1331  00AC                     ??___altoft:	
  1332                           
  1333                           ; 0 bytes @ 0xC
  1334  00AC                     	ds	2
  1335  00AE                     ??___ftadd:	
  1336  00AE                     ___altoft@exp:	
  1337                           ; 0 bytes @ 0xE
  1338                           
  1339                           
  1340                           ; 1 bytes @ 0xE
  1341  00AE                     	ds	1
  1342  00AF                     ___altoft@sign:	
  1343                           
  1344                           ; 1 bytes @ 0xF
  1345  00AF                     	ds	1
  1346  00B0                     ?___ftge:	
  1347  00B0                     ___ftge@ff1:	
  1348                           ; 1 bit 
  1349                           
  1350                           
  1351                           ; 3 bytes @ 0x10
  1352  00B0                     	ds	2
  1353  00B2                     ___ftadd@sign:	
  1354                           
  1355                           ; 1 bytes @ 0x12
  1356  00B2                     	ds	1
  1357  00B3                     ___ftadd@exp2:	
  1358  00B3                     ___ftge@ff2:	
  1359                           ; 1 bytes @ 0x13
  1360                           
  1361                           
  1362                           ; 3 bytes @ 0x13
  1363  00B3                     	ds	1
  1364  00B4                     ___ftadd@exp1:	
  1365                           
  1366                           ; 1 bytes @ 0x14
  1367  00B4                     	ds	1
  1368  00B5                     ?___ftmul:	
  1369  00B5                     ___ftmul@f1:	
  1370                           ; 3 bytes @ 0x15
  1371                           
  1372                           
  1373                           ; 3 bytes @ 0x15
  1374  00B5                     	ds	1
  1375  00B6                     ??___ftge:	
  1376                           
  1377                           ; 0 bytes @ 0x16
  1378  00B6                     	ds	2
  1379  00B8                     ___ftmul@f2:	
  1380                           
  1381                           ; 3 bytes @ 0x18
  1382  00B8                     	ds	3
  1383  00BB                     ??___ftmul:	
  1384                           
  1385                           ; 0 bytes @ 0x1B
  1386  00BB                     	ds	4
  1387  00BF                     ___ftmul@exp:	
  1388                           
  1389                           ; 1 bytes @ 0x1F
  1390  00BF                     	ds	1
  1391  00C0                     ___ftmul@f3_as_product:	
  1392                           
  1393                           ; 3 bytes @ 0x20
  1394  00C0                     	ds	3
  1395  00C3                     ___ftmul@cntr:	
  1396                           
  1397                           ; 1 bytes @ 0x23
  1398  00C3                     	ds	1
  1399  00C4                     ___ftmul@sign:	
  1400                           
  1401                           ; 1 bytes @ 0x24
  1402  00C4                     	ds	1
  1403  00C5                     ?___ftdiv:	
  1404  00C5                     ?___fttol:	
  1405                           ; 3 bytes @ 0x25
  1406                           
  1407  00C5                     ___ftdiv@f2:	
  1408                           ; 4 bytes @ 0x25
  1409                           
  1410  00C5                     ___fttol@f1:	
  1411                           ; 3 bytes @ 0x25
  1412                           
  1413                           
  1414                           ; 3 bytes @ 0x25
  1415  00C5                     	ds	3
  1416  00C8                     ___ftdiv@f1:	
  1417                           
  1418                           ; 3 bytes @ 0x28
  1419  00C8                     	ds	1
  1420  00C9                     ??___fttol:	
  1421                           
  1422                           ; 0 bytes @ 0x29
  1423  00C9                     	ds	2
  1424  00CB                     ??___ftdiv:	
  1425                           
  1426                           ; 0 bytes @ 0x2B
  1427  00CB                     	ds	2
  1428  00CD                     ___fttol@sign1:	
  1429                           
  1430                           ; 1 bytes @ 0x2D
  1431  00CD                     	ds	1
  1432  00CE                     ___fttol@lval:	
  1433                           
  1434                           ; 4 bytes @ 0x2E
  1435  00CE                     	ds	1
  1436  00CF                     ___ftdiv@cntr:	
  1437                           
  1438                           ; 1 bytes @ 0x2F
  1439  00CF                     	ds	1
  1440  00D0                     ___ftdiv@f3:	
  1441                           
  1442                           ; 3 bytes @ 0x30
  1443  00D0                     	ds	2
  1444  00D2                     ___fttol@exp1:	
  1445                           
  1446                           ; 1 bytes @ 0x32
  1447  00D2                     	ds	1
  1448  00D3                     ?_Update_PWM:	
  1449  00D3                     ___ftdiv@exp:	
  1450                           ; 0 bytes @ 0x33
  1451                           
  1452  00D3                     Update_PWM@setwsduty:	
  1453                           ; 1 bytes @ 0x33
  1454                           
  1455                           
  1456                           ; 2 bytes @ 0x33
  1457  00D3                     	ds	1
  1458  00D4                     ___ftdiv@sign:	
  1459                           
  1460                           ; 1 bytes @ 0x34
  1461  00D4                     	ds	1
  1462  00D5                     ??_Update_PWM:	
  1463                           
  1464                           ; 0 bytes @ 0x35
  1465  00D5                     	ds	2
  1466  00D7                     Update_PWM@Temp1:	
  1467                           
  1468                           ; 2 bytes @ 0x37
  1469  00D7                     	ds	2
  1470  00D9                     Update_PWM@Dutycnt:	
  1471                           
  1472                           ; 2 bytes @ 0x39
  1473  00D9                     	ds	2
  1474  00DB                     ??_key_application:	
  1475  00DB                     ??_detect_display_error:	
  1476                           ; 0 bytes @ 0x3B
  1477                           
  1478  00DB                     ??_Adaptive_base_pid:	
  1479                           ; 0 bytes @ 0x3B
  1480                           
  1481                           
  1482                           ; 0 bytes @ 0x3B
  1483  00DB                     	ds	2
  1484  00DD                     key_application@keypress:	
  1485                           
  1486                           ; 1 bytes @ 0x3D
  1487  00DD                     	ds	7
  1488  00E4                     _Adaptive_base_pid$1773:	
  1489                           
  1490                           ; 3 bytes @ 0x44
  1491  00E4                     	ds	3
  1492  00E7                     _Adaptive_base_pid$1774:	
  1493                           
  1494                           ; 3 bytes @ 0x47
  1495  00E7                     	ds	3
  1496  00EA                     _Adaptive_base_pid$1775:	
  1497                           
  1498                           ; 3 bytes @ 0x4A
  1499  00EA                     	ds	3
  1500  00ED                     ??_main:	
  1501                           
  1502                           ; 0 bytes @ 0x4D
  1503  00ED                     	ds	2
  1504                           
  1505                           	psect	cstackCOMMON
  1506  0070                     __pcstackCOMMON:	
  1507  0070                     ?_system_init:	
  1508  0070                     ?_portpin_init:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_Timer0_init:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_PWM_init:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_capture_init:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_uart_init:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_send_status:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_transmittops:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_key_application:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_detect_display_error:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_Display:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ??_Display:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_Adaptive_base_pid:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_ISR_Function:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_main:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_Send_Byte:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?i1_Update_PWM:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0070                     ?_enc1_port:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0070                     ?_enc2_port:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_SCANENCODER1:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_SCANENCODER2:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?i1___ftpack:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?i1___aldiv:	
  1572                           ; 3 bytes @ 0x0
  1573                           
  1574  0070                     i1Update_PWM@setwsduty:	
  1575                           ; 4 bytes @ 0x0
  1576                           
  1577  0070                     i1___ftpack@arg:	
  1578                           ; 2 bytes @ 0x0
  1579                           
  1580  0070                     i1___aldiv@divisor:	
  1581                           ; 3 bytes @ 0x0
  1582                           
  1583                           
  1584                           ; 4 bytes @ 0x0
  1585  0070                     	ds	2
  1586  0072                     ??i1_Update_PWM:	
  1587                           
  1588                           ; 0 bytes @ 0x2
  1589  0072                     	ds	1
  1590  0073                     i1___ftpack@exp:	
  1591                           
  1592                           ; 1 bytes @ 0x3
  1593  0073                     	ds	1
  1594  0074                     i1___ftpack@sign:	
  1595  0074                     i1Update_PWM@Temp1:	
  1596                           ; 1 bytes @ 0x4
  1597                           
  1598  0074                     i1___aldiv@dividend:	
  1599                           ; 2 bytes @ 0x4
  1600                           
  1601                           
  1602                           ; 4 bytes @ 0x4
  1603  0074                     	ds	1
  1604  0075                     ??i1___ftpack:	
  1605                           
  1606                           ; 0 bytes @ 0x5
  1607  0075                     	ds	1
  1608  0076                     i1Update_PWM@Dutycnt:	
  1609                           
  1610                           ; 2 bytes @ 0x6
  1611  0076                     	ds	2
  1612  0078                     ??i1___aldiv:	
  1613  0078                     ?i1___lwtoft:	
  1614                           ; 0 bytes @ 0x8
  1615                           
  1616  0078                     i1___lwtoft@c:	
  1617                           ; 3 bytes @ 0x8
  1618                           
  1619                           
  1620                           ; 2 bytes @ 0x8
  1621  0078                     	ds	3
  1622  007B                     ??i1___lwtoft:	
  1623                           
  1624                           ; 0 bytes @ 0xB
  1625  007B                     	ds	1
  1626  007C                     _ISR_Function$1180:	
  1627                           
  1628                           ; 2 bytes @ 0xC
  1629  007C                     	ds	2
  1630                           
  1631                           	psect	cstackBANK0
  1632  0020                     __pcstackBANK0:	
  1633  0020                     ?i1___ftdiv:	
  1634  0020                     ?i1___ftmul:	
  1635                           ; 3 bytes @ 0x0
  1636                           
  1637  0020                     i1___aldiv@counter:	
  1638                           ; 3 bytes @ 0x0
  1639                           
  1640  0020                     i1___ftdiv@f2:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643  0020                     i1___ftmul@f1:	
  1644                           ; 3 bytes @ 0x0
  1645                           
  1646                           
  1647                           ; 3 bytes @ 0x0
  1648  0020                     	ds	1
  1649  0021                     i1___aldiv@sign:	
  1650                           
  1651                           ; 1 bytes @ 0x1
  1652  0021                     	ds	1
  1653  0022                     i1___aldiv@quotient:	
  1654                           
  1655                           ; 4 bytes @ 0x2
  1656  0022                     	ds	1
  1657  0023                     i1___ftdiv@f1:	
  1658  0023                     i1___ftmul@f2:	
  1659                           ; 3 bytes @ 0x3
  1660                           
  1661                           
  1662                           ; 3 bytes @ 0x3
  1663  0023                     	ds	3
  1664  0026                     ??i1___ftdiv:	
  1665  0026                     ??i1___ftmul:	
  1666                           ; 0 bytes @ 0x6
  1667                           
  1668                           
  1669                           ; 0 bytes @ 0x6
  1670  0026                     	ds	4
  1671  002A                     i1___ftdiv@cntr:	
  1672  002A                     i1___ftmul@exp:	
  1673                           ; 1 bytes @ 0xA
  1674                           
  1675                           
  1676                           ; 1 bytes @ 0xA
  1677  002A                     	ds	1
  1678  002B                     i1___ftdiv@f3:	
  1679  002B                     i1___ftmul@f3_as_product:	
  1680                           ; 3 bytes @ 0xB
  1681                           
  1682                           
  1683                           ; 3 bytes @ 0xB
  1684  002B                     	ds	3
  1685  002E                     i1___ftdiv@exp:	
  1686  002E                     i1___ftmul@cntr:	
  1687                           ; 1 bytes @ 0xE
  1688                           
  1689                           
  1690                           ; 1 bytes @ 0xE
  1691  002E                     	ds	1
  1692  002F                     i1___ftdiv@sign:	
  1693  002F                     i1___ftmul@sign:	
  1694                           ; 1 bytes @ 0xF
  1695                           
  1696                           
  1697                           ; 1 bytes @ 0xF
  1698  002F                     	ds	1
  1699  0030                     ?i1___ftadd:	
  1700  0030                     i1___ftadd@f1:	
  1701                           ; 3 bytes @ 0x10
  1702                           
  1703                           
  1704                           ; 3 bytes @ 0x10
  1705  0030                     	ds	3
  1706  0033                     i1___ftadd@f2:	
  1707                           
  1708                           ; 3 bytes @ 0x13
  1709  0033                     	ds	3
  1710  0036                     ??i1___ftadd:	
  1711                           
  1712                           ; 0 bytes @ 0x16
  1713  0036                     	ds	4
  1714  003A                     i1___ftadd@sign:	
  1715                           
  1716                           ; 1 bytes @ 0x1A
  1717  003A                     	ds	1
  1718  003B                     i1___ftadd@exp2:	
  1719                           
  1720                           ; 1 bytes @ 0x1B
  1721  003B                     	ds	1
  1722  003C                     i1___ftadd@exp1:	
  1723                           
  1724                           ; 1 bytes @ 0x1C
  1725  003C                     	ds	1
  1726  003D                     ?i1___fttol:	
  1727  003D                     i1___fttol@f1:	
  1728                           ; 4 bytes @ 0x1D
  1729                           
  1730                           
  1731                           ; 3 bytes @ 0x1D
  1732  003D                     	ds	4
  1733  0041                     ??i1___fttol:	
  1734                           
  1735                           ; 0 bytes @ 0x21
  1736  0041                     	ds	4
  1737  0045                     i1___fttol@sign1:	
  1738                           
  1739                           ; 1 bytes @ 0x25
  1740  0045                     	ds	1
  1741  0046                     i1___fttol@lval:	
  1742                           
  1743                           ; 4 bytes @ 0x26
  1744  0046                     	ds	4
  1745  004A                     i1___fttol@exp1:	
  1746                           
  1747                           ; 1 bytes @ 0x2A
  1748  004A                     	ds	1
  1749  004B                     ??_ISR_Function:	
  1750                           
  1751                           ; 0 bytes @ 0x2B
  1752  004B                     	ds	9
  1753                           
  1754                           	psect	maintext
  1755  0952                     __pmaintext:	
  1756 ;;
  1757 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1758 ;;
  1759 ;; *************** function _main *****************
  1760 ;; Defined at:
  1761 ;;		line 481 in file "main.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;		None
  1766 ;; Return value:  Size  Location     Type
  1767 ;;		None               void
  1768 ;; Registers used:
  1769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 17F/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1777 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1778 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;Total ram usage:        2 bytes
  1780 ;; Hardware stack levels required when called:    6
  1781 ;; This function calls:
  1782 ;;		_Adaptive_base_pid
  1783 ;;		_Delayms
  1784 ;;		_PWM_init
  1785 ;;		_SCANENCODER1
  1786 ;;		_SCANENCODER2
  1787 ;;		_Timer0_init
  1788 ;;		_Update_PWM
  1789 ;;		___ftmul
  1790 ;;		___fttol
  1791 ;;		___lwtoft
  1792 ;;		___wmul
  1793 ;;		_capture_init
  1794 ;;		_detect_display_error
  1795 ;;		_disp_hex_window1
  1796 ;;		_disp_hex_window2
  1797 ;;		_key_application
  1798 ;;		_portpin_init
  1799 ;;		_send_status
  1800 ;;		_system_init
  1801 ;;		_transmittops
  1802 ;;		_uart_init
  1803 ;; This function is called by:
  1804 ;;		Startup code after reset
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function _main
  1810  0952                     _main:	
  1811                           
  1812                           ;main.c: 484: system_init();
  1813                           
  1814                           ;incstack = 0
  1815                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1816  0952  3198  209F  3189   	fcall	_system_init
  1817  0955                     l625:	
  1818  0955  3013               	movlw	19
  1819  0956  0024               	movlb	4	; select bank4
  1820  0957  022F               	subwf	(_delay+1)^(0+512),w
  1821  0958  3088               	movlw	136
  1822  0959  1903               	skipnz
  1823  095A  022E               	subwf	_delay^(0+512),w
  1824  095B  1803               	btfsc	3,0
  1825  095C  2963               	goto	l5247
  1826  095D  3001               	movlw	1
  1827  095E  0024               	movlb	4	; select bank4
  1828  095F  07AE               	addwf	_delay^(0+512),f
  1829  0960  3000               	movlw	0
  1830  0961  3DAF               	addwfc	(_delay+1)^(0+512),f
  1831  0962  2955               	goto	l625
  1832  0963                     l5247:	
  1833                           
  1834                           ;main.c: 486: Delayms(1000);
  1835  0963  30E8               	movlw	232
  1836  0964  0021               	movlb	1	; select bank1
  1837  0965  00A0               	movwf	Delayms@delay^(0+128)
  1838  0966  3003               	movlw	3
  1839  0967  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1840  0968  3187  27D6  3189   	fcall	_Delayms
  1841                           
  1842                           ;main.c: 487: portpin_init();
  1843  096B  3199  214E  3189   	fcall	_portpin_init
  1844                           
  1845                           ;main.c: 488: Timer0_init();
  1846  096E  3198  20DC  3189   	fcall	_Timer0_init
  1847                           
  1848                           ;main.c: 489: PWM_init();
  1849  0971  3190  2000  3189   	fcall	_PWM_init
  1850                           
  1851                           ;main.c: 490: capture_init();
  1852  0974  3198  20ED  3189   	fcall	_capture_init
  1853                           
  1854                           ;main.c: 491: uart_init();
  1855  0977  3199  2111  3189   	fcall	_uart_init
  1856                           
  1857                           ;main.c: 492: INTCONbits.GIE =1;
  1858  097A  178B               	bsf	11,7	;volatile
  1859                           
  1860                           ;main.c: 493: INTCONbits.PEIE =1;
  1861  097B  170B               	bsf	11,6	;volatile
  1862                           
  1863                           ;main.c: 496: PORTCbits.RC3=0;
  1864  097C  0020               	movlb	0	; select bank0
  1865  097D  118E               	bcf	14,3	;volatile
  1866                           
  1867                           ;main.c: 498: diswin1[0]=0x0B;
  1868  097E  300B               	movlw	11
  1869  097F  0021               	movlb	1	; select bank1
  1870  0980  00ED               	movwf	??_main^(0+128)
  1871  0981  086D               	movf	??_main^(0+128),w
  1872  0982  0022               	movlb	2	; select bank2
  1873  0983  00E4               	movwf	_diswin1^(0+256)
  1874                           
  1875                           ;main.c: 499: diswin1[1]=0x0E;
  1876  0984  300E               	movlw	14
  1877  0985  0021               	movlb	1	; select bank1
  1878  0986  00ED               	movwf	??_main^(0+128)
  1879  0987  086D               	movf	??_main^(0+128),w
  1880  0988  0022               	movlb	2	; select bank2
  1881  0989  00E5               	movwf	(_diswin1^(0+256)+1)
  1882                           
  1883                           ;main.c: 500: diswin1[2]=0x1C;
  1884  098A  301C               	movlw	28
  1885  098B  0021               	movlb	1	; select bank1
  1886  098C  00ED               	movwf	??_main^(0+128)
  1887  098D  086D               	movf	??_main^(0+128),w
  1888  098E  0022               	movlb	2	; select bank2
  1889  098F  00E6               	movwf	(_diswin1^(0+256)+2)
  1890                           
  1891                           ;main.c: 501: diswin1[3]=0x1C;
  1892  0990  301C               	movlw	28
  1893  0991  0021               	movlb	1	; select bank1
  1894  0992  00ED               	movwf	??_main^(0+128)
  1895  0993  086D               	movf	??_main^(0+128),w
  1896  0994  0022               	movlb	2	; select bank2
  1897  0995  00E7               	movwf	(_diswin1^(0+256)+3)
  1898                           
  1899                           ;main.c: 502: diswin1[4]='1'-0x30;
  1900  0996  01E8               	clrf	(_diswin1^(0+256)+4)
  1901  0997  0AE8               	incf	(_diswin1^(0+256)+4),f
  1902                           
  1903                           ;main.c: 503: diswin1[5]='0'-0x30;
  1904  0998  01E9               	clrf	(_diswin1^(0+256)+5)
  1905                           
  1906                           ;main.c: 504: TypeDP.TypeD.digitdp5=1;
  1907  0999  0020               	movlb	0	; select bank0
  1908  099A  166B               	bsf	_TypeDP,4
  1909                           
  1910                           ;main.c: 506: Delayms(2000);
  1911  099B  30D0               	movlw	208
  1912  099C  0021               	movlb	1	; select bank1
  1913  099D  00A0               	movwf	Delayms@delay^(0+128)
  1914  099E  3007               	movlw	7
  1915  099F  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1916  09A0  3187  27D6  3189   	fcall	_Delayms
  1917                           
  1918                           ;main.c: 508: LATCbits.LATC0=0;
  1919  09A3  0022               	movlb	2	; select bank2
  1920  09A4  100E               	bcf	14,0	;volatile
  1921                           
  1922                           ;main.c: 509: TypeDP.TypeD.digitdp5=0;
  1923  09A5  0020               	movlb	0	; select bank0
  1924  09A6  126B               	bcf	_TypeDP,4
  1925                           
  1926                           ;main.c: 510: TypeU.LEDGROUP[0] =0x00;
  1927  09A7  01E7               	clrf	_TypeU
  1928                           
  1929                           ;main.c: 511: TypeU.LEDGROUP[1] =0x00;
  1930  09A8  01E8               	clrf	_TypeU+1
  1931                           
  1932                           ;main.c: 512: TypeU.TypeS.wirespeed =1;
  1933  09A9  1467               	bsf	_TypeU,0
  1934                           
  1935                           ;main.c: 513: TypeU.TypeS.vtg =1;
  1936  09AA  14E8               	bsf	_TypeU+1,1
  1937                           
  1938                           ;main.c: 514: TypeU.TypeS.twot =1;
  1939  09AB  1667               	bsf	_TypeU,4
  1940                           
  1941                           ;main.c: 515: TypeDP.DPGROUP[0] =0x00;
  1942  09AC  01EB               	clrf	_TypeDP
  1943                           
  1944                           ;main.c: 516: TypeDP.TypeD.digitdp2 =1;
  1945  09AD  14EB               	bsf	_TypeDP,1
  1946                           
  1947                           ;main.c: 517: TypeDP.TypeD.digitdp5 =1;
  1948  09AE  166B               	bsf	_TypeDP,4
  1949                           
  1950                           ;main.c: 519: psstatusu.psstatusbyte[0]=0x00;
  1951  09AF  01ED               	clrf	_psstatusu
  1952                           
  1953                           ;main.c: 522: setcurrent=0;
  1954  09B0  0022               	movlb	2	; select bank2
  1955  09B1  01A8               	clrf	_setcurrent^(0+256)
  1956  09B2  01A9               	clrf	(_setcurrent+1)^(0+256)
  1957                           
  1958                           ;main.c: 523: setvoltage=0;
  1959  09B3  0020               	movlb	0	; select bank0
  1960  09B4  01D8               	clrf	_setvoltage
  1961  09B5  01D9               	clrf	_setvoltage+1
  1962                           
  1963                           ;main.c: 524: disp_hex_window1(setcurrent);
  1964  09B6  0022               	movlb	2	; select bank2
  1965  09B7  0829               	movf	(_setcurrent+1)^(0+256),w
  1966  09B8  0021               	movlb	1	; select bank1
  1967  09B9  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  1968  09BA  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  1969  09BB  0022               	movlb	2	; select bank2
  1970  09BC  0828               	movf	_setcurrent^(0+256),w
  1971  09BD  0021               	movlb	1	; select bank1
  1972  09BE  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  1973  09BF  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  1974  09C0  319C  2427  3189   	fcall	_disp_hex_window1
  1975                           
  1976                           ;main.c: 525: disp_hex_window2(setvoltage);
  1977  09C3  0020               	movlb	0	; select bank0
  1978  09C4  0859               	movf	_setvoltage+1,w
  1979  09C5  0021               	movlb	1	; select bank1
  1980  09C6  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  1981  09C7  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  1982  09C8  0020               	movlb	0	; select bank0
  1983  09C9  0858               	movf	_setvoltage,w
  1984  09CA  0021               	movlb	1	; select bank1
  1985  09CB  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  1986  09CC  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  1987  09CD  319C  248B  3189   	fcall	_disp_hex_window2
  1988                           
  1989                           ;main.c: 526: TXSTAbits.TXEN =1;
  1990  09D0  0023               	movlb	3	; select bank3
  1991  09D1  169E               	bsf	30,5	;volatile
  1992                           
  1993                           ;main.c: 527: RCSTAbits.CREN =1;
  1994  09D2  161D               	bsf	29,4	;volatile
  1995                           
  1996                           ;main.c: 528: PIE1bits.RCIE =1;
  1997  09D3  0021               	movlb	1	; select bank1
  1998  09D4  1691               	bsf	17,5	;volatile
  1999                           
  2000                           ;main.c: 529: INTCONbits.GIE =1;
  2001  09D5  178B               	bsf	11,7	;volatile
  2002                           
  2003                           ;main.c: 530: INTCONbits.PEIE =1;
  2004  09D6  170B               	bsf	11,6	;volatile
  2005                           
  2006                           ;main.c: 531: Delayms(5000);
  2007  09D7  3088               	movlw	136
  2008  09D8  00A0               	movwf	Delayms@delay^(0+128)
  2009  09D9  3013               	movlw	19
  2010  09DA  00A1               	movwf	(Delayms@delay^(0+128)+1)
  2011  09DB  3187  27D6  3189   	fcall	_Delayms
  2012                           
  2013                           ;main.c: 532: PIE1bits.TXIE =0;
  2014  09DE  0021               	movlb	1	; select bank1
  2015  09DF  1211               	bcf	17,4	;volatile
  2016  09E0                     l5303:	
  2017                           ;main.c: 533: while(1)
  2018                           
  2019                           
  2020                           ;main.c: 534: {
  2021                           ;main.c: 536: if(send_statusf==1 && onesecf==0)
  2022  09E0  0022               	movlb	2	; select bank2
  2023  09E1  0856               	movf	_send_statusf^(0+256),w
  2024  09E2  3A01               	xorlw	1
  2025  09E3  1D03               	skipz
  2026  09E4  29EE               	goto	l5311
  2027  09E5  0020               	movlb	0	; select bank0
  2028  09E6  08E1               	movf	_onesecf,f	;volatile
  2029  09E7  1D03               	skipz
  2030  09E8  29EE               	goto	l5311
  2031                           
  2032                           ;main.c: 537: {
  2033                           ;main.c: 538: send_statusf=0;
  2034  09E9  0022               	movlb	2	; select bank2
  2035  09EA  01D6               	clrf	_send_statusf^(0+256)
  2036                           
  2037                           ;main.c: 539: send_status();
  2038  09EB  3199  2139  3189   	fcall	_send_status
  2039  09EE                     l5311:	
  2040                           
  2041                           ;main.c: 540: }
  2042                           ;main.c: 541: if(onesecf==1 && transmitonf==1)
  2043  09EE  0020               	movlb	0	; select bank0
  2044  09EF  0861               	movf	_onesecf,w	;volatile
  2045  09F0  3A01               	xorlw	1
  2046  09F1  1D03               	skipz
  2047  09F2  2A01               	goto	l5323
  2048  09F3  0022               	movlb	2	; select bank2
  2049  09F4  085A               	movf	_transmitonf^(0+256),w
  2050  09F5  3A01               	xorlw	1
  2051  09F6  1D03               	skipz
  2052  09F7  2A01               	goto	l5323
  2053                           
  2054                           ;main.c: 542: {
  2055                           ;main.c: 543: onesecf=0;
  2056  09F8  0020               	movlb	0	; select bank0
  2057  09F9  01E1               	clrf	_onesecf	;volatile
  2058                           
  2059                           ;main.c: 544: transmittops();
  2060  09FA  3188  2008  3189   	fcall	_transmittops
  2061                           
  2062                           ;main.c: 545: txonf=0;
  2063  09FD  0023               	movlb	3	; select bank3
  2064  09FE  01DD               	clrf	_txonf^(0+384)	;volatile
  2065                           
  2066                           ;main.c: 546: cEditfg = 0;
  2067  09FF  0022               	movlb	2	; select bank2
  2068  0A00  01B3               	clrf	_cEditfg^(0+256)
  2069  0A01                     l5323:	
  2070                           
  2071                           ;main.c: 547: }
  2072                           ;main.c: 550: if(gaschkfg == 1)
  2073  0A01  0022               	movlb	2	; select bank2
  2074  0A02  0841               	movf	_gaschkfg^(0+256),w
  2075  0A03  3A01               	xorlw	1
  2076  0A04  1D03               	skipz
  2077  0A05  2A13               	goto	l5327
  2078                           
  2079                           ;main.c: 551: {
  2080                           ;main.c: 552: disp_hex_window2(igascntr);
  2081  0A06  0023               	movlb	3	; select bank3
  2082  0A07  083D               	movf	(_igascntr+1)^(0+384),w
  2083  0A08  0021               	movlb	1	; select bank1
  2084  0A09  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  2085  0A0A  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  2086  0A0B  0023               	movlb	3	; select bank3
  2087  0A0C  083C               	movf	_igascntr^(0+384),w
  2088  0A0D  0021               	movlb	1	; select bank1
  2089  0A0E  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  2090  0A0F  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  2091  0A10  319C  248B  3189   	fcall	_disp_hex_window2
  2092  0A13                     l5327:	
  2093                           
  2094                           ;main.c: 553: }
  2095                           ;main.c: 555: if(universal_error==0)
  2096  0A13  0022               	movlb	2	; select bank2
  2097  0A14  08DB               	movf	_universal_error^(0+256),f	;volatile
  2098  0A15  1D03               	skipz
  2099  0A16  2FE6               	goto	l5711
  2100                           
  2101                           ;main.c: 556: {
  2102                           ;main.c: 560: if(adaptivepidf==1)
  2103  0A17  0831               	movf	_adaptivepidf^(0+256),w
  2104  0A18  3A01               	xorlw	1
  2105  0A19  1D03               	skipz
  2106  0A1A  2A1F               	goto	l5335
  2107                           
  2108                           ;main.c: 561: {
  2109                           ;main.c: 562: adaptivepidf=0;
  2110  0A1B  01B1               	clrf	_adaptivepidf^(0+256)
  2111                           
  2112                           ;main.c: 563: Adaptive_base_pid();
  2113  0A1C  3194  2473  3189   	fcall	_Adaptive_base_pid
  2114  0A1F                     l5335:	
  2115                           
  2116                           ;main.c: 564: }
  2117                           ;main.c: 566: if(read_enc1f==1)
  2118  0A1F  0022               	movlb	2	; select bank2
  2119  0A20  0852               	movf	_read_enc1f^(0+256),w	;volatile
  2120  0A21  3A01               	xorlw	1
  2121  0A22  1D03               	skipz
  2122  0A23  2BBF               	goto	l5477
  2123                           
  2124                           ;main.c: 567: {
  2125                           ;main.c: 568: read_enc1f=0;
  2126  0A24  01D2               	clrf	_read_enc1f^(0+256)	;volatile
  2127                           
  2128                           ;main.c: 569: if(enccount==0)
  2129  0A25  08BD               	movf	_enccount^(0+256),f	;volatile
  2130  0A26  1D03               	skipz
  2131  0A27  2ACD               	goto	l5391
  2132                           
  2133                           ;main.c: 570: {
  2134                           ;main.c: 571: encod1=SCANENCODER1();
  2135  0A28  319D  256F  3189   	fcall	_SCANENCODER1
  2136  0A2B  0021               	movlb	1	; select bank1
  2137  0A2C  00ED               	movwf	??_main^(0+128)
  2138  0A2D  086D               	movf	??_main^(0+128),w
  2139  0A2E  0020               	movlb	0	; select bank0
  2140  0A2F  00DD               	movwf	_encod1
  2141                           
  2142                           ;main.c: 572: mili1_100++;
  2143  0A30  3001               	movlw	1
  2144  0A31  0021               	movlb	1	; select bank1
  2145  0A32  00ED               	movwf	??_main^(0+128)
  2146  0A33  086D               	movf	??_main^(0+128),w
  2147  0A34  0022               	movlb	2	; select bank2
  2148  0A35  07C3               	addwf	_mili1_100^(0+256),f
  2149                           
  2150                           ;main.c: 573: {
  2151                           ;main.c: 574: if(encod1=='+')
  2152  0A36  0020               	movlb	0	; select bank0
  2153  0A37  085D               	movf	_encod1,w
  2154  0A38  3A2B               	xorlw	43
  2155  0A39  1D03               	skipz
  2156  0A3A  2A4D               	goto	l5351
  2157                           
  2158                           ;main.c: 575: {
  2159                           ;main.c: 576: setwirespeed=setwirespeed+pluspara1;
  2160  0A3B  0022               	movlb	2	; select bank2
  2161  0A3C  084F               	movf	_pluspara1^(0+256),w
  2162  0A3D  0020               	movlb	0	; select bank0
  2163  0A3E  075A               	addwf	_setwirespeed,w
  2164  0A3F  00DA               	movwf	_setwirespeed
  2165  0A40  085B               	movf	_setwirespeed+1,w
  2166  0A41  1803               	skipnc
  2167  0A42  0A5B               	incf	_setwirespeed+1,w
  2168  0A43  00DB               	movwf	_setwirespeed+1
  2169                           
  2170                           ;main.c: 577: if(setwirespeed >= 220)
  2171  0A44  3000               	movlw	0
  2172  0A45  025B               	subwf	_setwirespeed+1,w
  2173  0A46  30DC               	movlw	220
  2174  0A47  1903               	skipnz
  2175  0A48  025A               	subwf	_setwirespeed,w
  2176  0A49  1C03               	skipc
  2177  0A4A  2A8A               	goto	l638
  2178                           
  2179                           ;main.c: 578: setwirespeed=220;
  2180  0A4B  30DC               	movlw	220
  2181  0A4C  2A87               	goto	L1
  2182  0A4D                     l5351:	
  2183                           ;main.c: 579: }
  2184                           
  2185                           
  2186                           ;main.c: 580: else if(encod1=='-')
  2187  0A4D  085D               	movf	_encod1,w
  2188  0A4E  3A2D               	xorlw	45
  2189  0A4F  1D03               	skipz
  2190  0A50  2A8A               	goto	l638
  2191                           
  2192                           ;main.c: 581: {
  2193                           ;main.c: 582: if(setwirespeed >= minuspara1)
  2194  0A51  0022               	movlb	2	; select bank2
  2195  0A52  0849               	movf	_minuspara1^(0+256),w
  2196  0A53  0021               	movlb	1	; select bank1
  2197  0A54  00ED               	movwf	??_main^(0+128)
  2198  0A55  01EE               	clrf	(??_main^(0+128)+1)
  2199  0A56  086E               	movf	(??_main+1)^(0+128),w
  2200  0A57  0020               	movlb	0	; select bank0
  2201  0A58  025B               	subwf	_setwirespeed+1,w
  2202  0A59  1D03               	skipz
  2203  0A5A  2A5F               	goto	u7575
  2204  0A5B  0021               	movlb	1	; select bank1
  2205  0A5C  086D               	movf	??_main^(0+128),w
  2206  0A5D  0020               	movlb	0	; select bank0
  2207  0A5E  025A               	subwf	_setwirespeed,w
  2208  0A5F                     u7575:	
  2209  0A5F  1C03               	skipc
  2210  0A60  2A77               	goto	l5357
  2211                           
  2212                           ;main.c: 583: setwirespeed=setwirespeed-minuspara1;
  2213  0A61  0022               	movlb	2	; select bank2
  2214  0A62  0849               	movf	_minuspara1^(0+256),w
  2215  0A63  0021               	movlb	1	; select bank1
  2216  0A64  00ED               	movwf	??_main^(0+128)
  2217  0A65  01EE               	clrf	(??_main^(0+128)+1)
  2218  0A66  09ED               	comf	??_main^(0+128),f
  2219  0A67  09EE               	comf	(??_main^(0+128)+1),f
  2220  0A68  0AED               	incf	??_main^(0+128),f
  2221  0A69  1903               	skipnz
  2222  0A6A  0AEE               	incf	(??_main^(0+128)+1),f
  2223  0A6B  0020               	movlb	0	; select bank0
  2224  0A6C  085A               	movf	_setwirespeed,w
  2225  0A6D  0021               	movlb	1	; select bank1
  2226  0A6E  076D               	addwf	??_main^(0+128),w
  2227  0A6F  0020               	movlb	0	; select bank0
  2228  0A70  00DA               	movwf	_setwirespeed
  2229  0A71  085B               	movf	_setwirespeed+1,w
  2230  0A72  0021               	movlb	1	; select bank1
  2231  0A73  3D6E               	addwfc	(??_main+1)^(0+128),w
  2232  0A74  0020               	movlb	0	; select bank0
  2233  0A75  00DB               	movwf	_setwirespeed+1
  2234  0A76  2A7F               	goto	l641
  2235  0A77                     l5357:	
  2236                           
  2237                           ;main.c: 585: setwirespeed=setwirespeed--;
  2238  0A77  085B               	movf	_setwirespeed+1,w
  2239  0A78  045A               	iorwf	_setwirespeed,w
  2240  0A79  1903               	skipnz
  2241  0A7A  2A7F               	goto	l641
  2242  0A7B  3001               	movlw	1
  2243  0A7C  02DA               	subwf	_setwirespeed,f
  2244  0A7D  3000               	movlw	0
  2245  0A7E  3BDB               	subwfb	_setwirespeed+1,f
  2246  0A7F                     l641:	
  2247                           
  2248                           ;main.c: 586: if(setwirespeed <= 1)
  2249  0A7F  3000               	movlw	0
  2250  0A80  025B               	subwf	_setwirespeed+1,w
  2251  0A81  3002               	movlw	2
  2252  0A82  1903               	skipnz
  2253  0A83  025A               	subwf	_setwirespeed,w
  2254  0A84  1803               	skipnc
  2255  0A85  2A8A               	goto	l638
  2256                           
  2257                           ;main.c: 587: setwirespeed=1;
  2258  0A86  3001               	movlw	1
  2259  0A87                     L1:	
  2260  0A87  00DA               	movwf	_setwirespeed
  2261  0A88  3000               	movlw	0
  2262  0A89  00DB               	movwf	_setwirespeed+1
  2263  0A8A                     l638:	
  2264                           
  2265                           ;main.c: 588: }
  2266                           ;main.c: 589: }
  2267                           ;main.c: 590: if(mili1_100<200)
  2268  0A8A  30C8               	movlw	200
  2269  0A8B  0022               	movlb	2	; select bank2
  2270  0A8C  0243               	subwf	_mili1_100^(0+256),w
  2271  0A8D  1803               	skipnc
  2272  0A8E  2AA7               	goto	l5371
  2273                           
  2274                           ;main.c: 591: {
  2275                           ;main.c: 592: if(encod1=='+')
  2276  0A8F  0020               	movlb	0	; select bank0
  2277  0A90  085D               	movf	_encod1,w
  2278  0A91  3A2B               	xorlw	43
  2279  0A92  1D03               	skipz
  2280  0A93  2A9B               	goto	l5367
  2281                           
  2282                           ;main.c: 593: pluscount1++;
  2283  0A94  3001               	movlw	1
  2284  0A95  0021               	movlb	1	; select bank1
  2285  0A96  00ED               	movwf	??_main^(0+128)
  2286  0A97  086D               	movf	??_main^(0+128),w
  2287  0A98  0022               	movlb	2	; select bank2
  2288  0A99  07CD               	addwf	_pluscount1^(0+256),f
  2289  0A9A  2AC6               	goto	l5389
  2290  0A9B                     l5367:	
  2291                           
  2292                           ;main.c: 594: else if(encod1=='-')
  2293  0A9B  0020               	movlb	0	; select bank0
  2294  0A9C  085D               	movf	_encod1,w
  2295  0A9D  3A2D               	xorlw	45
  2296  0A9E  1D03               	skipz
  2297  0A9F  2AC6               	goto	l5389
  2298                           
  2299                           ;main.c: 595: minuscount1++;
  2300  0AA0  3001               	movlw	1
  2301  0AA1  0021               	movlb	1	; select bank1
  2302  0AA2  00ED               	movwf	??_main^(0+128)
  2303  0AA3  086D               	movf	??_main^(0+128),w
  2304  0AA4  0022               	movlb	2	; select bank2
  2305  0AA5  07C7               	addwf	_minuscount1^(0+256),f
  2306                           
  2307                           ;main.c: 596: }
  2308  0AA6  2AC6               	goto	l5389
  2309  0AA7                     l5371:	
  2310                           
  2311                           ;main.c: 597: else if(mili1_100>=200)
  2312  0AA7  30C8               	movlw	200
  2313  0AA8  0243               	subwf	_mili1_100^(0+256),w
  2314  0AA9  1C03               	skipc
  2315  0AAA  2AC6               	goto	l5389
  2316                           
  2317                           ;main.c: 598: {
  2318                           ;main.c: 599: mili1_100=0;
  2319  0AAB  01C3               	clrf	_mili1_100^(0+256)
  2320                           
  2321                           ;main.c: 600: pluspara1=pluscount1>>1;
  2322  0AAC  364D               	lsrf	_pluscount1^(0+256),w
  2323  0AAD  0021               	movlb	1	; select bank1
  2324  0AAE  00ED               	movwf	??_main^(0+128)
  2325  0AAF  086D               	movf	??_main^(0+128),w
  2326  0AB0  0022               	movlb	2	; select bank2
  2327  0AB1  00CF               	movwf	_pluspara1^(0+256)
  2328                           
  2329                           ;main.c: 601: minuspara1=minuscount1>>1;
  2330  0AB2  3647               	lsrf	_minuscount1^(0+256),w
  2331  0AB3  0021               	movlb	1	; select bank1
  2332  0AB4  00ED               	movwf	??_main^(0+128)
  2333  0AB5  086D               	movf	??_main^(0+128),w
  2334  0AB6  0022               	movlb	2	; select bank2
  2335  0AB7  00C9               	movwf	_minuspara1^(0+256)
  2336                           
  2337                           ;main.c: 602: if(pluspara1<=1)
  2338  0AB8  3002               	movlw	2
  2339  0AB9  024F               	subwf	_pluspara1^(0+256),w
  2340  0ABA  1803               	skipnc
  2341  0ABB  2ABE               	goto	l5383
  2342                           
  2343                           ;main.c: 603: pluspara1=1;
  2344  0ABC  01CF               	clrf	_pluspara1^(0+256)
  2345  0ABD  0ACF               	incf	_pluspara1^(0+256),f
  2346  0ABE                     l5383:	
  2347                           
  2348                           ;main.c: 604: if(minuspara1<=1)
  2349  0ABE  3002               	movlw	2
  2350  0ABF  0249               	subwf	_minuspara1^(0+256),w
  2351  0AC0  1803               	skipnc
  2352  0AC1  2AC4               	goto	l5387
  2353                           
  2354                           ;main.c: 605: minuspara1=1;
  2355  0AC2  01C9               	clrf	_minuspara1^(0+256)
  2356  0AC3  0AC9               	incf	_minuspara1^(0+256),f
  2357  0AC4                     l5387:	
  2358                           
  2359                           ;main.c: 606: pluscount1=0;
  2360  0AC4  01CD               	clrf	_pluscount1^(0+256)
  2361                           
  2362                           ;main.c: 607: minuscount1=0;
  2363  0AC5  01C7               	clrf	_minuscount1^(0+256)
  2364  0AC6                     l5389:	
  2365                           
  2366                           ;main.c: 608: }
  2367                           ;main.c: 609: enccount++;
  2368  0AC6  3001               	movlw	1
  2369  0AC7  0021               	movlb	1	; select bank1
  2370  0AC8  00ED               	movwf	??_main^(0+128)
  2371  0AC9  086D               	movf	??_main^(0+128),w
  2372  0ACA  0022               	movlb	2	; select bank2
  2373  0ACB  07BD               	addwf	_enccount^(0+256),f	;volatile
  2374                           
  2375                           ;main.c: 610: }
  2376  0ACC  2BBF               	goto	l5477
  2377  0ACD                     l5391:	
  2378                           
  2379                           ;main.c: 611: else
  2380                           ;main.c: 612: {
  2381                           ;main.c: 613: mili2_100++;
  2382  0ACD  3001               	movlw	1
  2383  0ACE  0021               	movlb	1	; select bank1
  2384  0ACF  00ED               	movwf	??_main^(0+128)
  2385  0AD0  086D               	movf	??_main^(0+128),w
  2386  0AD1  0022               	movlb	2	; select bank2
  2387  0AD2  07C4               	addwf	_mili2_100^(0+256),f
  2388                           
  2389                           ;main.c: 614: encod2=SCANENCODER2();
  2390  0AD3  319C  24F1  3189   	fcall	_SCANENCODER2
  2391  0AD6  0021               	movlb	1	; select bank1
  2392  0AD7  00ED               	movwf	??_main^(0+128)
  2393  0AD8  086D               	movf	??_main^(0+128),w
  2394  0AD9  0020               	movlb	0	; select bank0
  2395  0ADA  00DE               	movwf	_encod2
  2396                           
  2397                           ;main.c: 615: if(TypeU.TypeS.vtg==1)
  2398  0ADB  1CE8               	btfss	_TypeU+1,1
  2399  0ADC  2B35               	goto	l653
  2400                           
  2401                           ;main.c: 616: {
  2402                           ;main.c: 617: if(encod2=='+')
  2403  0ADD  085E               	movf	_encod2,w
  2404  0ADE  3A2B               	xorlw	43
  2405  0ADF  1D03               	skipz
  2406  0AE0  2AF5               	goto	l5405
  2407                           
  2408                           ;main.c: 618: {
  2409                           ;main.c: 619: setvoltage=setvoltage+pluspara2;
  2410  0AE1  0022               	movlb	2	; select bank2
  2411  0AE2  0850               	movf	_pluspara2^(0+256),w
  2412  0AE3  0020               	movlb	0	; select bank0
  2413  0AE4  0758               	addwf	_setvoltage,w
  2414  0AE5  00D8               	movwf	_setvoltage
  2415  0AE6  0859               	movf	_setvoltage+1,w
  2416  0AE7  1803               	skipnc
  2417  0AE8  0A59               	incf	_setvoltage+1,w
  2418  0AE9  00D9               	movwf	_setvoltage+1
  2419                           
  2420                           ;main.c: 620: if(setvoltage>440)
  2421  0AEA  3001               	movlw	1
  2422  0AEB  0259               	subwf	_setvoltage+1,w
  2423  0AEC  30B9               	movlw	185
  2424  0AED  1903               	skipnz
  2425  0AEE  0258               	subwf	_setvoltage,w
  2426  0AEF  1C03               	skipc
  2427  0AF0  2B31               	goto	l5417
  2428                           
  2429                           ;main.c: 621: setvoltage=440;
  2430  0AF1  30B8               	movlw	184
  2431  0AF2  00D8               	movwf	_setvoltage
  2432  0AF3  3001               	movlw	1
  2433  0AF4  2B30               	goto	L5
  2434  0AF5                     l5405:	
  2435                           ;main.c: 623: }
  2436                           
  2437                           ;main.c: 622: cEditfg = 1;
  2438                           
  2439                           
  2440                           ;main.c: 624: else if(encod2=='-')
  2441  0AF5  0020               	movlb	0	; select bank0
  2442  0AF6  085E               	movf	_encod2,w
  2443  0AF7  3A2D               	xorlw	45
  2444  0AF8  1D03               	skipz
  2445  0AF9  2B7E               	goto	l5449
  2446                           
  2447                           ;main.c: 625: {
  2448                           ;main.c: 626: if(setvoltage>=minuspara2)
  2449  0AFA  0860               	movf	_minuspara2,w
  2450  0AFB  0021               	movlb	1	; select bank1
  2451  0AFC  00ED               	movwf	??_main^(0+128)
  2452  0AFD  01EE               	clrf	(??_main^(0+128)+1)
  2453  0AFE  086E               	movf	(??_main+1)^(0+128),w
  2454  0AFF  0020               	movlb	0	; select bank0
  2455  0B00  0259               	subwf	_setvoltage+1,w
  2456  0B01  1D03               	skipz
  2457  0B02  2B07               	goto	u7705
  2458  0B03  0021               	movlb	1	; select bank1
  2459  0B04  086D               	movf	??_main^(0+128),w
  2460  0B05  0020               	movlb	0	; select bank0
  2461  0B06  0258               	subwf	_setvoltage,w
  2462  0B07                     u7705:	
  2463  0B07  1C03               	skipc
  2464  0B08  2B1E               	goto	l5411
  2465                           
  2466                           ;main.c: 627: setvoltage=setvoltage-minuspara2;
  2467  0B09  0860               	movf	_minuspara2,w
  2468  0B0A  0021               	movlb	1	; select bank1
  2469  0B0B  00ED               	movwf	??_main^(0+128)
  2470  0B0C  01EE               	clrf	(??_main^(0+128)+1)
  2471  0B0D  09ED               	comf	??_main^(0+128),f
  2472  0B0E  09EE               	comf	(??_main^(0+128)+1),f
  2473  0B0F  0AED               	incf	??_main^(0+128),f
  2474  0B10  1903               	skipnz
  2475  0B11  0AEE               	incf	(??_main^(0+128)+1),f
  2476  0B12  0020               	movlb	0	; select bank0
  2477  0B13  0858               	movf	_setvoltage,w
  2478  0B14  0021               	movlb	1	; select bank1
  2479  0B15  076D               	addwf	??_main^(0+128),w
  2480  0B16  0020               	movlb	0	; select bank0
  2481  0B17  00D8               	movwf	_setvoltage
  2482  0B18  0859               	movf	_setvoltage+1,w
  2483  0B19  0021               	movlb	1	; select bank1
  2484  0B1A  3D6E               	addwfc	(??_main+1)^(0+128),w
  2485  0B1B  0020               	movlb	0	; select bank0
  2486  0B1C  00D9               	movwf	_setvoltage+1
  2487  0B1D  2B26               	goto	l659
  2488  0B1E                     l5411:	
  2489                           
  2490                           ;main.c: 629: setvoltage=setvoltage--;
  2491  0B1E  0859               	movf	_setvoltage+1,w
  2492  0B1F  0458               	iorwf	_setvoltage,w
  2493  0B20  1903               	skipnz
  2494  0B21  2B26               	goto	l659
  2495  0B22  3001               	movlw	1
  2496  0B23  02D8               	subwf	_setvoltage,f
  2497  0B24  3000               	movlw	0
  2498  0B25  3BD9               	subwfb	_setvoltage+1,f
  2499  0B26                     l659:	
  2500                           
  2501                           ;main.c: 631: if(setvoltage<=140)
  2502  0B26  3000               	movlw	0
  2503  0B27  0259               	subwf	_setvoltage+1,w
  2504  0B28  308D               	movlw	141
  2505  0B29  1903               	skipnz
  2506  0B2A  0258               	subwf	_setvoltage,w
  2507  0B2B  1803               	skipnc
  2508  0B2C  2B31               	goto	l5417
  2509                           
  2510                           ;main.c: 632: setvoltage=140;
  2511  0B2D  308C               	movlw	140
  2512  0B2E  00D8               	movwf	_setvoltage
  2513  0B2F  3000               	movlw	0
  2514  0B30                     L5:	
  2515  0B30  00D9               	movwf	_setvoltage+1
  2516  0B31                     l5417:	
  2517                           
  2518                           ;main.c: 633: cEditfg = 1;
  2519  0B31  0022               	movlb	2	; select bank2
  2520  0B32  01B3               	clrf	_cEditfg^(0+256)
  2521  0B33  0AB3               	incf	_cEditfg^(0+256),f
  2522                           
  2523                           ;main.c: 634: }
  2524                           ;main.c: 635: }
  2525  0B34  2B7E               	goto	l5449
  2526  0B35                     l653:	
  2527                           
  2528                           ;main.c: 636: else if(TypeU.TypeS.arclength==1)
  2529  0B35  1D67               	btfss	_TypeU,2
  2530  0B36  2B7E               	goto	l5449
  2531                           
  2532                           ;main.c: 637: {
  2533                           ;main.c: 638: if(encod2=='+')
  2534  0B37  085E               	movf	_encod2,w
  2535  0B38  3A2B               	xorlw	43
  2536  0B39  1D03               	skipz
  2537  0B3A  2B61               	goto	l5435
  2538                           
  2539                           ;main.c: 639: {
  2540                           ;main.c: 640: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength+pluspara2;
  2541  0B3B  0024               	movlb	4	; select bank4
  2542  0B3C  084B               	movf	(_pstowfstru^(0+512)+7),w
  2543  0B3D  0022               	movlb	2	; select bank2
  2544  0B3E  0750               	addwf	_pluspara2^(0+256),w
  2545  0B3F  0021               	movlb	1	; select bank1
  2546  0B40  00ED               	movwf	??_main^(0+128)
  2547  0B41  086D               	movf	??_main^(0+128),w
  2548  0B42  0024               	movlb	4	; select bank4
  2549  0B43  00CB               	movwf	(_pstowfstru^(0+512)+7)
  2550                           
  2551                           ;main.c: 642: if(weldmode=='P')
  2552  0B44  0020               	movlb	0	; select bank0
  2553  0B45  0866               	movf	_weldmode,w	;volatile
  2554  0B46  3A50               	xorlw	80
  2555  0B47  1D03               	skipz
  2556  0B48  2B50               	goto	l5429
  2557                           
  2558                           ;main.c: 643: {
  2559                           ;main.c: 644: if(pstowfstru.pstowfstrs.arclength>80)
  2560  0B49  3051               	movlw	81
  2561  0B4A  0024               	movlb	4	; select bank4
  2562  0B4B  024B               	subwf	(_pstowfstru^(0+512)+7),w
  2563  0B4C  1C03               	skipc
  2564  0B4D  2B7E               	goto	l5449
  2565                           
  2566                           ;main.c: 645: pstowfstru.pstowfstrs.arclength=80;
  2567  0B4E  3050               	movlw	80
  2568  0B4F  2B5B               	goto	L2
  2569  0B50                     l5429:	
  2570                           ;main.c: 646: }
  2571                           
  2572                           
  2573                           ;main.c: 647: else if(weldmode=='G')
  2574  0B50  0020               	movlb	0	; select bank0
  2575  0B51  0866               	movf	_weldmode,w	;volatile
  2576  0B52  3A47               	xorlw	71
  2577  0B53  1D03               	skipz
  2578  0B54  2B7E               	goto	l5449
  2579                           
  2580                           ;main.c: 648: {
  2581                           ;main.c: 649: if(pstowfstru.pstowfstrs.arclength>40)
  2582  0B55  3029               	movlw	41
  2583  0B56  0024               	movlb	4	; select bank4
  2584  0B57  024B               	subwf	(_pstowfstru^(0+512)+7),w
  2585  0B58  1C03               	skipc
  2586  0B59  2B7E               	goto	l5449
  2587                           
  2588                           ;main.c: 650: pstowfstru.pstowfstrs.arclength=40;
  2589  0B5A  3028               	movlw	40
  2590  0B5B                     L2:	
  2591  0B5B  0021               	movlb	1	; select bank1
  2592  0B5C  00ED               	movwf	??_main^(0+128)
  2593  0B5D  086D               	movf	??_main^(0+128),w
  2594  0B5E  0024               	movlb	4	; select bank4
  2595  0B5F  00CB               	movwf	(_pstowfstru^(0+512)+7)
  2596                           
  2597                           ;main.c: 651: }
  2598                           ;main.c: 655: }
  2599  0B60  2B7E               	goto	l5449
  2600  0B61                     l5435:	
  2601                           
  2602                           ;main.c: 656: else if(encod2=='-')
  2603  0B61  0020               	movlb	0	; select bank0
  2604  0B62  085E               	movf	_encod2,w
  2605  0B63  3A2D               	xorlw	45
  2606  0B64  1D03               	skipz
  2607  0B65  2B7E               	goto	l5449
  2608                           
  2609                           ;main.c: 657: {
  2610                           ;main.c: 658: if(pstowfstru.pstowfstrs.arclength>=minuspara2)
  2611  0B66  0860               	movf	_minuspara2,w
  2612  0B67  0024               	movlb	4	; select bank4
  2613  0B68  024B               	subwf	(_pstowfstru^(0+512)+7),w
  2614  0B69  1C03               	skipc
  2615  0B6A  2B76               	goto	l5441
  2616                           
  2617                           ;main.c: 659: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength-minuspara2
      +                          ;
  2618  0B6B  0020               	movlb	0	; select bank0
  2619  0B6C  0360               	decf	_minuspara2,w
  2620  0B6D  3AFF               	xorlw	255
  2621  0B6E  0024               	movlb	4	; select bank4
  2622  0B6F  074B               	addwf	(_pstowfstru^(0+512)+7),w
  2623  0B70  0021               	movlb	1	; select bank1
  2624  0B71  00ED               	movwf	??_main^(0+128)
  2625  0B72  086D               	movf	??_main^(0+128),w
  2626  0B73  0024               	movlb	4	; select bank4
  2627  0B74  00CB               	movwf	(_pstowfstru^(0+512)+7)
  2628  0B75  2B7B               	goto	l5445
  2629  0B76                     l5441:	
  2630                           
  2631                           ;main.c: 661: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength--;
  2632  0B76  084B               	movf	(_pstowfstru^(0+512)+7),w
  2633  0B77  1903               	btfsc	3,2
  2634  0B78  2B7B               	goto	l5445
  2635  0B79  3001               	movlw	1
  2636  0B7A  02CB               	subwf	(_pstowfstru^(0+512)+7),f
  2637  0B7B                     l5445:	
  2638                           
  2639                           ;main.c: 663: if(pstowfstru.pstowfstrs.arclength<=0)
  2640  0B7B  08CB               	movf	(_pstowfstru^(0+512)+7),f
  2641  0B7C  1903               	btfsc	3,2
  2642                           
  2643                           ;main.c: 664: pstowfstru.pstowfstrs.arclength=0;
  2644  0B7D  01CB               	clrf	(_pstowfstru^(0+512)+7)
  2645  0B7E                     l5449:	
  2646                           
  2647                           ;main.c: 665: }
  2648                           ;main.c: 666: }
  2649                           ;main.c: 667: if(mili2_100<200)
  2650  0B7E  30C8               	movlw	200
  2651  0B7F  0022               	movlb	2	; select bank2
  2652  0B80  0244               	subwf	_mili2_100^(0+256),w
  2653  0B81  1803               	skipnc
  2654  0B82  2B9B               	goto	l5459
  2655                           
  2656                           ;main.c: 668: {
  2657                           ;main.c: 669: if(encod2=='+')
  2658  0B83  0020               	movlb	0	; select bank0
  2659  0B84  085E               	movf	_encod2,w
  2660  0B85  3A2B               	xorlw	43
  2661  0B86  1D03               	skipz
  2662  0B87  2B8F               	goto	l5455
  2663                           
  2664                           ;main.c: 670: pluscount2++;
  2665  0B88  3001               	movlw	1
  2666  0B89  0021               	movlb	1	; select bank1
  2667  0B8A  00ED               	movwf	??_main^(0+128)
  2668  0B8B  086D               	movf	??_main^(0+128),w
  2669  0B8C  0022               	movlb	2	; select bank2
  2670  0B8D  07CE               	addwf	_pluscount2^(0+256),f
  2671  0B8E  2BBD               	goto	l680
  2672  0B8F                     l5455:	
  2673                           
  2674                           ;main.c: 671: else if(encod2=='-')
  2675  0B8F  0020               	movlb	0	; select bank0
  2676  0B90  085E               	movf	_encod2,w
  2677  0B91  3A2D               	xorlw	45
  2678  0B92  1D03               	skipz
  2679  0B93  2BBD               	goto	l680
  2680                           
  2681                           ;main.c: 672: minuscount2++;
  2682  0B94  3001               	movlw	1
  2683  0B95  0021               	movlb	1	; select bank1
  2684  0B96  00ED               	movwf	??_main^(0+128)
  2685  0B97  086D               	movf	??_main^(0+128),w
  2686  0B98  0022               	movlb	2	; select bank2
  2687  0B99  07C8               	addwf	_minuscount2^(0+256),f
  2688                           
  2689                           ;main.c: 673: }
  2690  0B9A  2BBD               	goto	l680
  2691  0B9B                     l5459:	
  2692                           
  2693                           ;main.c: 674: else if(mili2_100>=200)
  2694  0B9B  30C8               	movlw	200
  2695  0B9C  0244               	subwf	_mili2_100^(0+256),w
  2696  0B9D  1C03               	skipc
  2697  0B9E  2BBD               	goto	l680
  2698                           
  2699                           ;main.c: 675: {
  2700                           ;main.c: 676: mili2_100=0;
  2701  0B9F  01C4               	clrf	_mili2_100^(0+256)
  2702                           
  2703                           ;main.c: 677: pluspara2=pluscount2;
  2704  0BA0  084E               	movf	_pluscount2^(0+256),w
  2705  0BA1  0021               	movlb	1	; select bank1
  2706  0BA2  00ED               	movwf	??_main^(0+128)
  2707  0BA3  086D               	movf	??_main^(0+128),w
  2708  0BA4  0022               	movlb	2	; select bank2
  2709  0BA5  00D0               	movwf	_pluspara2^(0+256)
  2710                           
  2711                           ;main.c: 678: minuspara2=minuscount2;
  2712  0BA6  0848               	movf	_minuscount2^(0+256),w
  2713  0BA7  0021               	movlb	1	; select bank1
  2714  0BA8  00ED               	movwf	??_main^(0+128)
  2715  0BA9  086D               	movf	??_main^(0+128),w
  2716  0BAA  0020               	movlb	0	; select bank0
  2717  0BAB  00E0               	movwf	_minuspara2
  2718                           
  2719                           ;main.c: 679: if(pluspara2<=1)
  2720  0BAC  3002               	movlw	2
  2721  0BAD  0022               	movlb	2	; select bank2
  2722  0BAE  0250               	subwf	_pluspara2^(0+256),w
  2723  0BAF  1803               	skipnc
  2724  0BB0  2BB3               	goto	l5471
  2725                           
  2726                           ;main.c: 680: pluspara2=1;
  2727  0BB1  01D0               	clrf	_pluspara2^(0+256)
  2728  0BB2  0AD0               	incf	_pluspara2^(0+256),f
  2729  0BB3                     l5471:	
  2730                           
  2731                           ;main.c: 681: if(minuspara2<=1)
  2732  0BB3  3002               	movlw	2
  2733  0BB4  0020               	movlb	0	; select bank0
  2734  0BB5  0260               	subwf	_minuspara2,w
  2735  0BB6  1803               	skipnc
  2736  0BB7  2BBA               	goto	l5475
  2737                           
  2738                           ;main.c: 682: minuspara2=1;
  2739  0BB8  01E0               	clrf	_minuspara2
  2740  0BB9  0AE0               	incf	_minuspara2,f
  2741  0BBA                     l5475:	
  2742                           
  2743                           ;main.c: 683: pluscount2=0;
  2744  0BBA  0022               	movlb	2	; select bank2
  2745  0BBB  01CE               	clrf	_pluscount2^(0+256)
  2746                           
  2747                           ;main.c: 684: minuscount2=0;
  2748  0BBC  01C8               	clrf	_minuscount2^(0+256)
  2749  0BBD                     l680:	
  2750                           
  2751                           ;main.c: 685: }
  2752                           ;main.c: 686: enccount=0;
  2753  0BBD  0022               	movlb	2	; select bank2
  2754  0BBE  01BD               	clrf	_enccount^(0+256)	;volatile
  2755  0BBF                     l5477:	
  2756                           
  2757                           ;main.c: 687: }
  2758                           ;main.c: 688: }
  2759                           ;main.c: 692: if(prevkey!=key)
  2760  0BBF  086E               	movf	_prevkey^(0+256),w	;volatile
  2761  0BC0  0021               	movlb	1	; select bank1
  2762  0BC1  066F               	xorwf	_key^(0+128),w	;volatile
  2763  0BC2  1903               	skipnz
  2764  0BC3  2BDC               	goto	l5489
  2765                           
  2766                           ;main.c: 693: {
  2767                           ;main.c: 695: key_application(key);
  2768  0BC4  086F               	movf	_key^(0+128),w	;volatile
  2769  0BC5  3186  26B4  3189   	fcall	_key_application
  2770                           
  2771                           ;main.c: 696: if(key!=0)
  2772  0BC8  0021               	movlb	1	; select bank1
  2773  0BC9  086F               	movf	_key^(0+128),w	;volatile
  2774  0BCA  1903               	btfsc	3,2
  2775  0BCB  2BDC               	goto	l5489
  2776                           
  2777                           ;main.c: 697: {
  2778                           ;main.c: 698: count_1ms=0;
  2779  0BCC  0023               	movlb	3	; select bank3
  2780  0BCD  01B6               	clrf	_count_1ms^(0+384)	;volatile
  2781  0BCE  01B7               	clrf	(_count_1ms+1)^(0+384)	;volatile
  2782                           
  2783                           ;main.c: 699: onesecf=1;
  2784  0BCF  3001               	movlw	1
  2785  0BD0  0021               	movlb	1	; select bank1
  2786  0BD1  00ED               	movwf	??_main^(0+128)
  2787  0BD2  086D               	movf	??_main^(0+128),w
  2788  0BD3  0020               	movlb	0	; select bank0
  2789  0BD4  00E1               	movwf	_onesecf	;volatile
  2790                           
  2791                           ;main.c: 700: txonf=1;
  2792  0BD5  3001               	movlw	1
  2793  0BD6  0021               	movlb	1	; select bank1
  2794  0BD7  00ED               	movwf	??_main^(0+128)
  2795  0BD8  086D               	movf	??_main^(0+128),w
  2796  0BD9  0023               	movlb	3	; select bank3
  2797  0BDA  00DD               	movwf	_txonf^(0+384)	;volatile
  2798  0BDB  0021               	movlb	1	; select bank1
  2799  0BDC                     l5489:	
  2800                           
  2801                           ;main.c: 701: }
  2802                           ;main.c: 702: }
  2803                           ;main.c: 703: prevkey=key;
  2804  0BDC  0021               	movlb	1	; select bank1
  2805  0BDD  086F               	movf	_key^(0+128),w	;volatile
  2806  0BDE  00ED               	movwf	??_main^(0+128)
  2807  0BDF  086D               	movf	??_main^(0+128),w
  2808  0BE0  0022               	movlb	2	; select bank2
  2809  0BE1  00EE               	movwf	_prevkey^(0+256)	;volatile
  2810                           
  2811                           ;main.c: 707: if(psstatusu.psstatuss.weldoncyclestrt!=1)
  2812  0BE2  0020               	movlb	0	; select bank0
  2813  0BE3  196D               	btfsc	_psstatusu,2
  2814  0BE4  2D86               	goto	l686
  2815                           
  2816                           ;main.c: 708: {
  2817                           ;main.c: 709: if( (prevsetwirespeed!=setwirespeed) || (prevsetcurrent!=setcurrent) || di
      +                          spupdatef==1 )
  2818  0BE5  085B               	movf	_setwirespeed+1,w
  2819  0BE6  0023               	movlb	3	; select bank3
  2820  0BE7  0649               	xorwf	(_prevsetwirespeed+1)^(0+384),w
  2821  0BE8  1D03               	skipz
  2822  0BE9  2BEE               	goto	u7925
  2823  0BEA  0020               	movlb	0	; select bank0
  2824  0BEB  085A               	movf	_setwirespeed,w
  2825  0BEC  0023               	movlb	3	; select bank3
  2826  0BED  0648               	xorwf	_prevsetwirespeed^(0+384),w
  2827  0BEE                     u7925:	
  2828  0BEE  1D03               	skipz
  2829  0BEF  2C01               	goto	l5499
  2830  0BF0  0022               	movlb	2	; select bank2
  2831  0BF1  0829               	movf	(_setcurrent+1)^(0+256),w
  2832  0BF2  0023               	movlb	3	; select bank3
  2833  0BF3  0645               	xorwf	(_prevsetcurrent+1)^(0+384),w
  2834  0BF4  1D03               	skipz
  2835  0BF5  2BFA               	goto	u7935
  2836  0BF6  0022               	movlb	2	; select bank2
  2837  0BF7  0828               	movf	_setcurrent^(0+256),w
  2838  0BF8  0023               	movlb	3	; select bank3
  2839  0BF9  0644               	xorwf	_prevsetcurrent^(0+384),w
  2840  0BFA                     u7935:	
  2841  0BFA  1D03               	skipz
  2842  0BFB  2C01               	goto	l5499
  2843  0BFC  0020               	movlb	0	; select bank0
  2844  0BFD  086F               	movf	_dispupdatef,w	;volatile
  2845  0BFE  3A01               	xorlw	1
  2846  0BFF  1D03               	skipz
  2847  0C00  2C5D               	goto	l5523
  2848  0C01                     l5499:	
  2849                           
  2850                           ;main.c: 710: {
  2851                           ;main.c: 711: if(prevsetwirespeed!=setwirespeed)
  2852  0C01  0020               	movlb	0	; select bank0
  2853  0C02  085B               	movf	_setwirespeed+1,w
  2854  0C03  0023               	movlb	3	; select bank3
  2855  0C04  0649               	xorwf	(_prevsetwirespeed+1)^(0+384),w
  2856  0C05  1D03               	skipz
  2857  0C06  2C0B               	goto	u7955
  2858  0C07  0020               	movlb	0	; select bank0
  2859  0C08  085A               	movf	_setwirespeed,w
  2860  0C09  0023               	movlb	3	; select bank3
  2861  0C0A  0648               	xorwf	_prevsetwirespeed^(0+384),w
  2862  0C0B                     u7955:	
  2863  0C0B  1903               	skipnz
  2864  0C0C  2C10               	goto	l690
  2865                           
  2866                           ;main.c: 712: {
  2867                           ;main.c: 713: wfspeedchangef=1;
  2868  0C0D  0022               	movlb	2	; select bank2
  2869  0C0E  01EF               	clrf	_wfspeedchangef^(0+256)
  2870  0C0F  0AEF               	incf	_wfspeedchangef^(0+256),f
  2871  0C10                     l690:	
  2872                           
  2873                           ;main.c: 714: }
  2874                           ;main.c: 715: if(TypeU.TypeS.wirespeed==1)
  2875  0C10  0020               	movlb	0	; select bank0
  2876  0C11  1C67               	btfss	_TypeU,0
  2877  0C12  2C20               	goto	l691
  2878                           
  2879                           ;main.c: 716: {
  2880                           ;main.c: 717: TypeU.TypeS.wirespeed=1;
  2881  0C13  1467               	bsf	_TypeU,0
  2882                           
  2883                           ;main.c: 718: TypeU.TypeS.amp=0;
  2884  0C14  1068               	bcf	_TypeU+1,0
  2885                           
  2886                           ;main.c: 719: TypeU.TypeS.thickness=0;
  2887  0C15  10E7               	bcf	_TypeU,1
  2888                           
  2889                           ;main.c: 721: TypeDP.TypeD.digitdp1 =0;
  2890  0C16  106B               	bcf	_TypeDP,0
  2891                           
  2892                           ;main.c: 722: TypeDP.TypeD.digitdp2 =1;
  2893  0C17  14EB               	bsf	_TypeDP,1
  2894                           
  2895                           ;main.c: 723: TypeDP.TypeD.digitdp3 =0;
  2896  0C18  116B               	bcf	_TypeDP,2
  2897                           
  2898                           ;main.c: 724: disp_hex_window1(setwirespeed);
  2899  0C19  085B               	movf	_setwirespeed+1,w
  2900  0C1A  0021               	movlb	1	; select bank1
  2901  0C1B  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  2902  0C1C  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  2903  0C1D  0020               	movlb	0	; select bank0
  2904  0C1E  085A               	movf	_setwirespeed,w
  2905  0C1F  2C2F               	goto	L8
  2906  0C20                     l691:	
  2907                           ;main.c: 725: }
  2908                           
  2909                           
  2910                           ;main.c: 726: else if(TypeU.TypeS.amp==1)
  2911  0C20  1C68               	btfss	_TypeU+1,0
  2912  0C21  2C33               	goto	l693
  2913                           
  2914                           ;main.c: 727: {
  2915                           ;main.c: 728: TypeU.TypeS.wirespeed=0;
  2916  0C22  1067               	bcf	_TypeU,0
  2917                           
  2918                           ;main.c: 729: TypeU.TypeS.amp=1;
  2919  0C23  1468               	bsf	_TypeU+1,0
  2920                           
  2921                           ;main.c: 730: TypeU.TypeS.thickness=0;
  2922  0C24  10E7               	bcf	_TypeU,1
  2923                           
  2924                           ;main.c: 731: TypeDP.TypeD.digitdp1 =0;
  2925  0C25  106B               	bcf	_TypeDP,0
  2926                           
  2927                           ;main.c: 732: TypeDP.TypeD.digitdp2 =0;
  2928  0C26  10EB               	bcf	_TypeDP,1
  2929                           
  2930                           ;main.c: 733: TypeDP.TypeD.digitdp3 =0;
  2931  0C27  116B               	bcf	_TypeDP,2
  2932                           
  2933                           ;main.c: 734: disp_hex_window1(setcurrent);
  2934  0C28  0022               	movlb	2	; select bank2
  2935  0C29  0829               	movf	(_setcurrent+1)^(0+256),w
  2936  0C2A  0021               	movlb	1	; select bank1
  2937  0C2B  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  2938  0C2C  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  2939  0C2D  0022               	movlb	2	; select bank2
  2940  0C2E  0828               	movf	_setcurrent^(0+256),w
  2941  0C2F                     L8:	
  2942  0C2F  0021               	movlb	1	; select bank1
  2943  0C30  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  2944  0C31  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  2945  0C32  2C44               	goto	L6
  2946  0C33                     l693:	
  2947                           ;main.c: 735: }
  2948                           
  2949                           
  2950                           ;main.c: 736: else if(TypeU.TypeS.thickness==1)
  2951  0C33  1CE7               	btfss	_TypeU,1
  2952  0C34  2C47               	goto	l5515
  2953                           
  2954                           ;main.c: 737: {
  2955                           ;main.c: 738: TypeU.TypeS.wirespeed =0;
  2956  0C35  1067               	bcf	_TypeU,0
  2957                           
  2958                           ;main.c: 739: TypeU.TypeS.amp =0;
  2959  0C36  1068               	bcf	_TypeU+1,0
  2960                           
  2961                           ;main.c: 740: TypeU.TypeS.thickness =1;
  2962  0C37  14E7               	bsf	_TypeU,1
  2963                           
  2964                           ;main.c: 741: TypeDP.TypeD.digitdp1 =0;
  2965  0C38  106B               	bcf	_TypeDP,0
  2966                           
  2967                           ;main.c: 742: TypeDP.TypeD.digitdp2 =1;
  2968  0C39  14EB               	bsf	_TypeDP,1
  2969                           
  2970                           ;main.c: 743: TypeDP.TypeD.digitdp3 =0;
  2971  0C3A  116B               	bcf	_TypeDP,2
  2972                           
  2973                           ;main.c: 744: disp_hex_window1(pstowfstru.pstowfstrs.setthickness);
  2974  0C3B  0024               	movlb	4	; select bank4
  2975  0C3C  0848               	movf	(_pstowfstru^(0+512)+4),w
  2976  0C3D  0021               	movlb	1	; select bank1
  2977  0C3E  00ED               	movwf	??_main^(0+128)
  2978  0C3F  01EE               	clrf	(??_main^(0+128)+1)
  2979  0C40  086D               	movf	??_main^(0+128),w
  2980  0C41  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  2981  0C42  086E               	movf	(??_main+1)^(0+128),w
  2982  0C43  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  2983  0C44                     L6:	
  2984  0C44  319C  2427  3189   	fcall	_disp_hex_window1
  2985  0C47                     l5515:	
  2986                           
  2987                           ;main.c: 745: }
  2988                           ;main.c: 746: pstowfstru.pstowfstrs.setwspeed=setwirespeed;
  2989  0C47  0020               	movlb	0	; select bank0
  2990  0C48  085A               	movf	_setwirespeed,w
  2991  0C49  0021               	movlb	1	; select bank1
  2992  0C4A  00ED               	movwf	??_main^(0+128)
  2993  0C4B  086D               	movf	??_main^(0+128),w
  2994  0C4C  0024               	movlb	4	; select bank4
  2995  0C4D  00C5               	movwf	(_pstowfstru^(0+512)+1)
  2996                           
  2997                           ;main.c: 748: count_1ms=0;
  2998  0C4E  0023               	movlb	3	; select bank3
  2999  0C4F  01B6               	clrf	_count_1ms^(0+384)	;volatile
  3000  0C50  01B7               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3001                           
  3002                           ;main.c: 749: onesecf=1;
  3003  0C51  3001               	movlw	1
  3004  0C52  0021               	movlb	1	; select bank1
  3005  0C53  00ED               	movwf	??_main^(0+128)
  3006  0C54  086D               	movf	??_main^(0+128),w
  3007  0C55  0020               	movlb	0	; select bank0
  3008  0C56  00E1               	movwf	_onesecf	;volatile
  3009                           
  3010                           ;main.c: 750: txonf=1;
  3011  0C57  3001               	movlw	1
  3012  0C58  0021               	movlb	1	; select bank1
  3013  0C59  00ED               	movwf	??_main^(0+128)
  3014  0C5A  086D               	movf	??_main^(0+128),w
  3015  0C5B  0023               	movlb	3	; select bank3
  3016  0C5C  00DD               	movwf	_txonf^(0+384)	;volatile
  3017  0C5D                     l5523:	
  3018                           
  3019                           ;main.c: 751: }
  3020                           ;main.c: 752: prevsetwirespeed=setwirespeed;
  3021  0C5D  0020               	movlb	0	; select bank0
  3022  0C5E  085B               	movf	_setwirespeed+1,w
  3023  0C5F  0023               	movlb	3	; select bank3
  3024  0C60  01C9               	clrf	(_prevsetwirespeed+1)^(0+384)
  3025  0C61  07C9               	addwf	(_prevsetwirespeed+1)^(0+384),f
  3026  0C62  0020               	movlb	0	; select bank0
  3027  0C63  085A               	movf	_setwirespeed,w
  3028  0C64  0023               	movlb	3	; select bank3
  3029  0C65  01C8               	clrf	_prevsetwirespeed^(0+384)
  3030  0C66  07C8               	addwf	_prevsetwirespeed^(0+384),f
  3031                           
  3032                           ;main.c: 753: prevsetcurrent=setcurrent;
  3033  0C67  0022               	movlb	2	; select bank2
  3034  0C68  0829               	movf	(_setcurrent+1)^(0+256),w
  3035  0C69  0023               	movlb	3	; select bank3
  3036  0C6A  01C5               	clrf	(_prevsetcurrent+1)^(0+384)
  3037  0C6B  07C5               	addwf	(_prevsetcurrent+1)^(0+384),f
  3038  0C6C  0022               	movlb	2	; select bank2
  3039  0C6D  0828               	movf	_setcurrent^(0+256),w
  3040  0C6E  0023               	movlb	3	; select bank3
  3041  0C6F  01C4               	clrf	_prevsetcurrent^(0+384)
  3042  0C70  07C4               	addwf	_prevsetcurrent^(0+384),f
  3043                           
  3044                           ;main.c: 755: if(((prevsetvoltage!=setvoltage) || dispupdatef==1) && (TypeU.TypeS.vtg==1
      +                          ) )
  3045  0C71  0020               	movlb	0	; select bank0
  3046  0C72  0859               	movf	_setvoltage+1,w
  3047  0C73  0023               	movlb	3	; select bank3
  3048  0C74  0647               	xorwf	(_prevsetvoltage+1)^(0+384),w
  3049  0C75  1D03               	skipz
  3050  0C76  2C7B               	goto	u7995
  3051  0C77  0020               	movlb	0	; select bank0
  3052  0C78  0858               	movf	_setvoltage,w
  3053  0C79  0023               	movlb	3	; select bank3
  3054  0C7A  0646               	xorwf	_prevsetvoltage^(0+384),w
  3055  0C7B                     u7995:	
  3056  0C7B  1D03               	skipz
  3057  0C7C  2C82               	goto	l698
  3058  0C7D  0020               	movlb	0	; select bank0
  3059  0C7E  086F               	movf	_dispupdatef,w	;volatile
  3060  0C7F  3A01               	xorlw	1
  3061  0C80  1D03               	skipz
  3062  0C81  2CC3               	goto	l5549
  3063  0C82                     l698:	
  3064  0C82  0020               	movlb	0	; select bank0
  3065  0C83  1CE8               	btfss	_TypeU+1,1
  3066  0C84  2CC3               	goto	l5549
  3067                           
  3068                           ;main.c: 756: {
  3069                           ;main.c: 757: TypeDP.TypeD.digitdp4 =0;
  3070  0C85  11EB               	bcf	_TypeDP,3
  3071                           
  3072                           ;main.c: 758: TypeDP.TypeD.digitdp5 =1;
  3073  0C86  166B               	bsf	_TypeDP,4
  3074                           
  3075                           ;main.c: 759: TypeDP.TypeD.digitdp6 =0;
  3076  0C87  12EB               	bcf	_TypeDP,5
  3077                           
  3078                           ;main.c: 760: TypeU.TypeS.arclength =0;
  3079  0C88  1167               	bcf	_TypeU,2
  3080                           
  3081                           ;main.c: 761: TypeU.TypeS.vtg =1;
  3082  0C89  14E8               	bsf	_TypeU+1,1
  3083                           
  3084                           ;main.c: 762: TypeU.TypeS.sec =0;
  3085  0C8A  1168               	bcf	_TypeU+1,2
  3086                           
  3087                           ;main.c: 763: disp_hex_window2(setvoltage);
  3088  0C8B  0859               	movf	_setvoltage+1,w
  3089  0C8C  0021               	movlb	1	; select bank1
  3090  0C8D  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  3091  0C8E  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  3092  0C8F  0020               	movlb	0	; select bank0
  3093  0C90  0858               	movf	_setvoltage,w
  3094  0C91  0021               	movlb	1	; select bank1
  3095  0C92  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  3096  0C93  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  3097  0C94  319C  248B  3189   	fcall	_disp_hex_window2
  3098                           
  3099                           ;main.c: 764: pstowfstru.pstowfstrs.Lo_setvoltage=setvoltage;
  3100  0C97  0020               	movlb	0	; select bank0
  3101  0C98  0858               	movf	_setvoltage,w
  3102  0C99  0021               	movlb	1	; select bank1
  3103  0C9A  00ED               	movwf	??_main^(0+128)
  3104  0C9B  086D               	movf	??_main^(0+128),w
  3105  0C9C  0024               	movlb	4	; select bank4
  3106  0C9D  00CA               	movwf	(_pstowfstru^(0+512)+6)
  3107                           
  3108                           ;main.c: 765: pstowfstru.pstowfstrs.Hi_setvoltage=setvoltage >> 8;
  3109  0C9E  0020               	movlb	0	; select bank0
  3110  0C9F  0859               	movf	_setvoltage+1,w
  3111  0CA0  0021               	movlb	1	; select bank1
  3112  0CA1  00ED               	movwf	??_main^(0+128)
  3113  0CA2  086D               	movf	??_main^(0+128),w
  3114  0CA3  0024               	movlb	4	; select bank4
  3115  0CA4  00C9               	movwf	(_pstowfstru^(0+512)+5)
  3116                           
  3117                           ;main.c: 766: count_1ms=0;
  3118  0CA5  0023               	movlb	3	; select bank3
  3119  0CA6  01B6               	clrf	_count_1ms^(0+384)	;volatile
  3120  0CA7  01B7               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3121                           
  3122                           ;main.c: 767: onesecf=1;
  3123  0CA8  3001               	movlw	1
  3124  0CA9  0021               	movlb	1	; select bank1
  3125  0CAA  00ED               	movwf	??_main^(0+128)
  3126  0CAB  086D               	movf	??_main^(0+128),w
  3127  0CAC  0020               	movlb	0	; select bank0
  3128  0CAD  00E1               	movwf	_onesecf	;volatile
  3129                           
  3130                           ;main.c: 768: txonf=1;
  3131  0CAE  3001               	movlw	1
  3132  0CAF  0021               	movlb	1	; select bank1
  3133  0CB0  00ED               	movwf	??_main^(0+128)
  3134  0CB1  086D               	movf	??_main^(0+128),w
  3135  0CB2  0023               	movlb	3	; select bank3
  3136  0CB3  00DD               	movwf	_txonf^(0+384)	;volatile
  3137                           
  3138                           ;main.c: 769: prevsetvoltage=setvoltage;
  3139  0CB4  0020               	movlb	0	; select bank0
  3140  0CB5  0859               	movf	_setvoltage+1,w
  3141  0CB6  0023               	movlb	3	; select bank3
  3142  0CB7  01C7               	clrf	(_prevsetvoltage+1)^(0+384)
  3143  0CB8  07C7               	addwf	(_prevsetvoltage+1)^(0+384),f
  3144  0CB9  0020               	movlb	0	; select bank0
  3145  0CBA  0858               	movf	_setvoltage,w
  3146  0CBB  0023               	movlb	3	; select bank3
  3147  0CBC  01C6               	clrf	_prevsetvoltage^(0+384)
  3148  0CBD  07C6               	addwf	_prevsetvoltage^(0+384),f
  3149                           
  3150                           ;main.c: 770: parclength=100;
  3151  0CBE  3064               	movlw	100
  3152  0CBF  0024               	movlb	4	; select bank4
  3153  0CC0  00DC               	movwf	_parclength^(0+512)
  3154  0CC1  3000               	movlw	0
  3155  0CC2  00DD               	movwf	(_parclength^(0+512)+1)
  3156  0CC3                     l5549:	
  3157                           
  3158                           ;main.c: 771: }
  3159                           ;main.c: 775: if(((parclength!=pstowfstru.pstowfstrs.arclength) || dispupdatef==1) && (T
      +                          ypeU.TypeS.arclength==1))
  3160  0CC3  0024               	movlb	4	; select bank4
  3161  0CC4  084B               	movf	(_pstowfstru^(0+512)+7),w
  3162  0CC5  0021               	movlb	1	; select bank1
  3163  0CC6  00ED               	movwf	??_main^(0+128)
  3164  0CC7  01EE               	clrf	(??_main^(0+128)+1)
  3165  0CC8  0024               	movlb	4	; select bank4
  3166  0CC9  085D               	movf	(_parclength+1)^(0+512),w
  3167  0CCA  0021               	movlb	1	; select bank1
  3168  0CCB  066E               	xorwf	(??_main+1)^(0+128),w
  3169  0CCC  1D03               	skipz
  3170  0CCD  2CD2               	goto	u8025
  3171  0CCE  0024               	movlb	4	; select bank4
  3172  0CCF  085C               	movf	_parclength^(0+512),w
  3173  0CD0  0021               	movlb	1	; select bank1
  3174  0CD1  066D               	xorwf	??_main^(0+128),w
  3175  0CD2                     u8025:	
  3176  0CD2  1D03               	skipz
  3177  0CD3  2CD9               	goto	l701
  3178  0CD4  0020               	movlb	0	; select bank0
  3179  0CD5  086F               	movf	_dispupdatef,w	;volatile
  3180  0CD6  3A01               	xorlw	1
  3181  0CD7  1D03               	skipz
  3182  0CD8  2D53               	goto	l5597
  3183  0CD9                     l701:	
  3184  0CD9  0020               	movlb	0	; select bank0
  3185  0CDA  1D67               	btfss	_TypeU,2
  3186  0CDB  2D53               	goto	l5597
  3187                           
  3188                           ;main.c: 776: {
  3189                           ;main.c: 779: if(weldmode=='P')
  3190  0CDC  0866               	movf	_weldmode,w	;volatile
  3191  0CDD  3A50               	xorlw	80
  3192  0CDE  1D03               	skipz
  3193  0CDF  2CFF               	goto	l5561
  3194                           
  3195                           ;main.c: 780: {
  3196                           ;main.c: 781: if(pstowfstru.pstowfstrs.arclength>=40)
  3197  0CE0  3028               	movlw	40
  3198  0CE1  0024               	movlb	4	; select bank4
  3199  0CE2  024B               	subwf	(_pstowfstru^(0+512)+7),w
  3200  0CE3  1C03               	skipc
  3201  0CE4  2CED               	goto	l5559
  3202                           
  3203                           ;main.c: 782: disparclength=pstowfstru.pstowfstrs.arclength-40;
  3204  0CE5  084B               	movf	(_pstowfstru^(0+512)+7),w
  3205  0CE6  3ED8               	addlw	216
  3206  0CE7  00B8               	movwf	_disparclength^(0+512)
  3207  0CE8  30FF               	movlw	255
  3208  0CE9  1803               	skipnc
  3209  0CEA  3000               	movlw	0
  3210  0CEB  00B9               	movwf	(_disparclength^(0+512)+1)
  3211  0CEC  2CFF               	goto	l5561
  3212  0CED                     l5559:	
  3213                           
  3214                           ;main.c: 783: else
  3215                           ;main.c: 784: disparclength=40 - pstowfstru.pstowfstrs.arclength;
  3216  0CED  084B               	movf	(_pstowfstru^(0+512)+7),w
  3217  0CEE  0021               	movlb	1	; select bank1
  3218  0CEF  00ED               	movwf	??_main^(0+128)
  3219  0CF0  01EE               	clrf	(??_main^(0+128)+1)
  3220  0CF1  09ED               	comf	??_main^(0+128),f
  3221  0CF2  09EE               	comf	(??_main^(0+128)+1),f
  3222  0CF3  0AED               	incf	??_main^(0+128),f
  3223  0CF4  1903               	skipnz
  3224  0CF5  0AEE               	incf	(??_main^(0+128)+1),f
  3225  0CF6  086D               	movf	??_main^(0+128),w
  3226  0CF7  3E28               	addlw	40
  3227  0CF8  0024               	movlb	4	; select bank4
  3228  0CF9  00B8               	movwf	_disparclength^(0+512)
  3229  0CFA  3000               	movlw	0
  3230  0CFB  0021               	movlb	1	; select bank1
  3231  0CFC  3D6E               	addwfc	(??_main+1)^(0+128),w
  3232  0CFD  0024               	movlb	4	; select bank4
  3233  0CFE  00B9               	movwf	(_disparclength+1)^(0+512)
  3234  0CFF                     l5561:	
  3235                           
  3236                           ;main.c: 785: }
  3237                           ;main.c: 787: if(weldmode=='G')
  3238  0CFF  0020               	movlb	0	; select bank0
  3239  0D00  0866               	movf	_weldmode,w	;volatile
  3240  0D01  3A47               	xorlw	71
  3241  0D02  1D03               	skipz
  3242  0D03  2D10               	goto	l5565
  3243                           
  3244                           ;main.c: 788: {
  3245                           ;main.c: 789: disparclength=pstowfstru.pstowfstrs.arclength;
  3246  0D04  0024               	movlb	4	; select bank4
  3247  0D05  084B               	movf	(_pstowfstru^(0+512)+7),w
  3248  0D06  0021               	movlb	1	; select bank1
  3249  0D07  00ED               	movwf	??_main^(0+128)
  3250  0D08  01EE               	clrf	(??_main^(0+128)+1)
  3251  0D09  086D               	movf	??_main^(0+128),w
  3252  0D0A  0024               	movlb	4	; select bank4
  3253  0D0B  00B8               	movwf	_disparclength^(0+512)
  3254  0D0C  0021               	movlb	1	; select bank1
  3255  0D0D  086E               	movf	(??_main+1)^(0+128),w
  3256  0D0E  0024               	movlb	4	; select bank4
  3257  0D0F  00B9               	movwf	(_disparclength+1)^(0+512)
  3258  0D10                     l5565:	
  3259                           
  3260                           ;main.c: 790: }
  3261                           ;main.c: 792: TypeDP.TypeD.digitdp4 =0;
  3262  0D10  0020               	movlb	0	; select bank0
  3263  0D11  11EB               	bcf	_TypeDP,3
  3264                           
  3265                           ;main.c: 793: TypeDP.TypeD.digitdp5 =0;
  3266  0D12  126B               	bcf	_TypeDP,4
  3267                           
  3268                           ;main.c: 794: TypeDP.TypeD.digitdp6 =0;
  3269  0D13  12EB               	bcf	_TypeDP,5
  3270                           
  3271                           ;main.c: 795: TypeU.TypeS.arclength =1;
  3272  0D14  1567               	bsf	_TypeU,2
  3273                           
  3274                           ;main.c: 796: TypeU.TypeS.vtg =0;
  3275  0D15  10E8               	bcf	_TypeU+1,1
  3276                           
  3277                           ;main.c: 797: TypeU.TypeS.sec =0;
  3278  0D16  1168               	bcf	_TypeU+1,2
  3279                           
  3280                           ;main.c: 798: disp_hex_window2(disparclength);
  3281  0D17  0024               	movlb	4	; select bank4
  3282  0D18  0839               	movf	(_disparclength+1)^(0+512),w
  3283  0D19  0021               	movlb	1	; select bank1
  3284  0D1A  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  3285  0D1B  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  3286  0D1C  0024               	movlb	4	; select bank4
  3287  0D1D  0838               	movf	_disparclength^(0+512),w
  3288  0D1E  0021               	movlb	1	; select bank1
  3289  0D1F  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  3290  0D20  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  3291  0D21  319C  248B  3189   	fcall	_disp_hex_window2
  3292                           
  3293                           ;main.c: 801: if(weldmode=='P')
  3294  0D24  0020               	movlb	0	; select bank0
  3295  0D25  0866               	movf	_weldmode,w	;volatile
  3296  0D26  3A50               	xorlw	80
  3297  0D27  1D03               	skipz
  3298  0D28  2D30               	goto	l5587
  3299                           
  3300                           ;main.c: 802: {
  3301                           ;main.c: 803: if(pstowfstru.pstowfstrs.arclength>=40)
  3302  0D29  3028               	movlw	40
  3303  0D2A  0024               	movlb	4	; select bank4
  3304  0D2B  024B               	subwf	(_pstowfstru^(0+512)+7),w
  3305  0D2C  1803               	btfsc	3,0
  3306  0D2D  2D30               	goto	l5587
  3307                           
  3308                           ;main.c: 805: else
  3309                           ;main.c: 806: diswin1[3]=0x26;
  3310                           
  3311                           ;main.c: 804: diswin1[3]=0x25;
  3312  0D2E  3026               	movlw	38
  3313  0D2F  2D31               	goto	L4
  3314  0D30                     l5587:	
  3315                           ;main.c: 807: }
  3316                           
  3317                           
  3318                           ;main.c: 808: else
  3319                           ;main.c: 809: diswin1[3]=0x25;
  3320  0D30  3025               	movlw	37
  3321  0D31                     L4:	
  3322  0D31  0021               	movlb	1	; select bank1
  3323  0D32  00ED               	movwf	??_main^(0+128)
  3324  0D33  086D               	movf	??_main^(0+128),w
  3325  0D34  0022               	movlb	2	; select bank2
  3326  0D35  00E7               	movwf	(_diswin1^(0+256)+3)
  3327                           
  3328                           ;main.c: 812: count_1ms=0;
  3329  0D36  0023               	movlb	3	; select bank3
  3330  0D37  01B6               	clrf	_count_1ms^(0+384)	;volatile
  3331  0D38  01B7               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3332                           
  3333                           ;main.c: 813: onesecf=1;
  3334  0D39  3001               	movlw	1
  3335  0D3A  0021               	movlb	1	; select bank1
  3336  0D3B  00ED               	movwf	??_main^(0+128)
  3337  0D3C  086D               	movf	??_main^(0+128),w
  3338  0D3D  0020               	movlb	0	; select bank0
  3339  0D3E  00E1               	movwf	_onesecf	;volatile
  3340                           
  3341                           ;main.c: 814: txonf=1;
  3342  0D3F  3001               	movlw	1
  3343  0D40  0021               	movlb	1	; select bank1
  3344  0D41  00ED               	movwf	??_main^(0+128)
  3345  0D42  086D               	movf	??_main^(0+128),w
  3346  0D43  0023               	movlb	3	; select bank3
  3347  0D44  00DD               	movwf	_txonf^(0+384)	;volatile
  3348                           
  3349                           ;main.c: 815: prevsetvoltage=0;
  3350  0D45  01C6               	clrf	_prevsetvoltage^(0+384)
  3351  0D46  01C7               	clrf	(_prevsetvoltage+1)^(0+384)
  3352                           
  3353                           ;main.c: 816: parclength=pstowfstru.pstowfstrs.arclength;
  3354  0D47  0024               	movlb	4	; select bank4
  3355  0D48  084B               	movf	(_pstowfstru^(0+512)+7),w
  3356  0D49  0021               	movlb	1	; select bank1
  3357  0D4A  00ED               	movwf	??_main^(0+128)
  3358  0D4B  01EE               	clrf	(??_main^(0+128)+1)
  3359  0D4C  086D               	movf	??_main^(0+128),w
  3360  0D4D  0024               	movlb	4	; select bank4
  3361  0D4E  00DC               	movwf	_parclength^(0+512)
  3362  0D4F  0021               	movlb	1	; select bank1
  3363  0D50  086E               	movf	(??_main+1)^(0+128),w
  3364  0D51  0024               	movlb	4	; select bank4
  3365  0D52  00DD               	movwf	(_parclength+1)^(0+512)
  3366  0D53                     l5597:	
  3367                           
  3368                           ;main.c: 817: }
  3369                           ;main.c: 820: if((psstatusu.psstatuss.gasoncommand!=1)&&(gaschkfg == 0))
  3370  0D53  0020               	movlb	0	; select bank0
  3371  0D54  18ED               	btfsc	_psstatusu,1
  3372  0D55  2D5C               	goto	l710
  3373  0D56  0022               	movlb	2	; select bank2
  3374  0D57  08C1               	movf	_gaschkfg^(0+256),f
  3375  0D58  1D03               	skipz
  3376  0D59  2D5C               	goto	l710
  3377                           
  3378                           ;main.c: 821: PORTCbits.RC3 =0;
  3379  0D5A  0020               	movlb	0	; select bank0
  3380  0D5B  118E               	bcf	14,3	;volatile
  3381  0D5C                     l710:	
  3382                           
  3383                           ;main.c: 822: if(psstatusu.psstatuss.motoroncommand!=1)
  3384  0D5C  0020               	movlb	0	; select bank0
  3385  0D5D  19ED               	btfsc	_psstatusu,3
  3386  0D5E  2D79               	goto	l5605
  3387                           
  3388                           ;main.c: 823: Update_PWM(setwirespeed*0);
  3389  0D5F  085B               	movf	_setwirespeed+1,w
  3390  0D60  0021               	movlb	1	; select bank1
  3391  0D61  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3392  0D62  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3393  0D63  0020               	movlb	0	; select bank0
  3394  0D64  085A               	movf	_setwirespeed,w
  3395  0D65  0021               	movlb	1	; select bank1
  3396  0D66  01A0               	clrf	___wmul@multiplier^(0+128)
  3397  0D67  07A0               	addwf	___wmul@multiplier^(0+128),f
  3398  0D68  3000               	movlw	0
  3399  0D69  00A2               	movwf	___wmul@multiplicand^(0+128)
  3400  0D6A  3000               	movlw	0
  3401  0D6B  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  3402  0D6C  3199  2164  3189   	fcall	___wmul
  3403  0D6F  0021               	movlb	1	; select bank1
  3404  0D70  0821               	movf	(?___wmul+1)^(0+128),w
  3405  0D71  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3406  0D72  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3407  0D73  0820               	movf	?___wmul^(0+128),w
  3408  0D74  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3409  0D75  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3410  0D76  3199  21A4  3189   	fcall	_Update_PWM
  3411  0D79                     l5605:	
  3412                           
  3413                           ;main.c: 825: openloopcnt =0;
  3414  0D79  0024               	movlb	4	; select bank4
  3415  0D7A  01C0               	clrf	_openloopcnt^(0+512)
  3416  0D7B  01C1               	clrf	(_openloopcnt+1)^(0+512)
  3417                           
  3418                           ;main.c: 826: softstartf =0;
  3419  0D7C  0023               	movlb	3	; select bank3
  3420  0D7D  01DB               	clrf	_softstartf^(0+384)	;volatile
  3421                           
  3422                           ;main.c: 827: dispupdatef =0;
  3423  0D7E  0020               	movlb	0	; select bank0
  3424  0D7F  01EF               	clrf	_dispupdatef	;volatile
  3425                           
  3426                           ;main.c: 828: closeloopf=0;
  3427  0D80  0022               	movlb	2	; select bank2
  3428  0D81  01B6               	clrf	_closeloopf^(0+256)
  3429                           
  3430                           ;main.c: 829: cyclestrtf=0;
  3431  0D82  01BC               	clrf	_cyclestrtf^(0+256)
  3432                           
  3433                           ;main.c: 831: psstatusu.psstatuss.creepspeedon=1;
  3434  0D83  0020               	movlb	0	; select bank0
  3435  0D84  16ED               	bsf	_psstatusu,5
  3436                           
  3437                           ;main.c: 834: }
  3438  0D85  2FE6               	goto	l5711
  3439  0D86                     l686:	
  3440                           
  3441                           ;main.c: 836: else if(psstatusu.psstatuss.weldoncyclestrt==1)
  3442  0D86  1D6D               	btfss	_psstatusu,2
  3443  0D87  2FE6               	goto	l5711
  3444                           
  3445                           ;main.c: 837: {
  3446                           ;main.c: 838: if(psstatusu.psstatuss.gasoncommand==1)
  3447  0D88  1CED               	btfss	_psstatusu,1
  3448  0D89  2D8C               	goto	l714
  3449                           
  3450                           ;main.c: 839: {
  3451                           ;main.c: 840: PORTCbits.RC3 =1;
  3452  0D8A  158E               	bsf	14,3	;volatile
  3453                           
  3454                           ;main.c: 841: }
  3455  0D8B  2D8D               	goto	l715
  3456  0D8C                     l714:	
  3457                           
  3458                           ;main.c: 842: else
  3459                           ;main.c: 843: {
  3460                           ;main.c: 844: PORTCbits.RC3 =0;
  3461  0D8C  118E               	bcf	14,3	;volatile
  3462  0D8D                     l715:	
  3463                           
  3464                           ;main.c: 845: }
  3465                           ;main.c: 846: if(psstatusu.psstatuss.motoroncommand==1)
  3466  0D8D  1DED               	btfss	_psstatusu,3
  3467  0D8E  2F98               	goto	l716
  3468                           
  3469                           ;main.c: 847: {
  3470                           ;main.c: 848: if(psstatusu.psstatuss.creepspeedon==1)
  3471  0D8F  1EED               	btfss	_psstatusu,5
  3472  0D90  2E38               	goto	l717
  3473                           
  3474                           ;main.c: 849: {
  3475                           ;main.c: 850: cyclestrtf=0;
  3476  0D91  0022               	movlb	2	; select bank2
  3477  0D92  01BC               	clrf	_cyclestrtf^(0+256)
  3478                           
  3479                           ;main.c: 853: newsetwirespeed=setwirespeed*creep_speed*0.01;
  3480  0D93  0020               	movlb	0	; select bank0
  3481  0D94  085B               	movf	_setwirespeed+1,w
  3482  0D95  0021               	movlb	1	; select bank1
  3483  0D96  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  3484  0D97  07A3               	addwf	(___wmul@multiplicand+1)^(0+128),f
  3485  0D98  0020               	movlb	0	; select bank0
  3486  0D99  085A               	movf	_setwirespeed,w
  3487  0D9A  0021               	movlb	1	; select bank1
  3488  0D9B  01A2               	clrf	___wmul@multiplicand^(0+128)
  3489  0D9C  07A2               	addwf	___wmul@multiplicand^(0+128),f
  3490  0D9D  0022               	movlb	2	; select bank2
  3491  0D9E  083B               	movf	_creep_speed^(0+256),w	;volatile
  3492  0D9F  0021               	movlb	1	; select bank1
  3493  0DA0  00ED               	movwf	??_main^(0+128)
  3494  0DA1  01EE               	clrf	(??_main^(0+128)+1)
  3495  0DA2  086D               	movf	??_main^(0+128),w
  3496  0DA3  00A0               	movwf	___wmul@multiplier^(0+128)
  3497  0DA4  086E               	movf	(??_main+1)^(0+128),w
  3498  0DA5  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  3499  0DA6  3199  2164  3189   	fcall	___wmul
  3500  0DA9  0021               	movlb	1	; select bank1
  3501  0DAA  0821               	movf	(?___wmul+1)^(0+128),w
  3502  0DAB  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3503  0DAC  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3504  0DAD  0820               	movf	?___wmul^(0+128),w
  3505  0DAE  01A8               	clrf	___lwtoft@c^(0+128)
  3506  0DAF  07A8               	addwf	___lwtoft@c^(0+128),f
  3507  0DB0  3199  2124  3189   	fcall	___lwtoft
  3508  0DB3  0021               	movlb	1	; select bank1
  3509  0DB4  0828               	movf	?___lwtoft^(0+128),w
  3510  0DB5  00B8               	movwf	___ftmul@f2^(0+128)
  3511  0DB6  0829               	movf	(?___lwtoft+1)^(0+128),w
  3512  0DB7  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3513  0DB8  082A               	movf	(?___lwtoft+2)^(0+128),w
  3514  0DB9  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3515  0DBA  30D7               	movlw	215
  3516  0DBB  00B5               	movwf	___ftmul@f1^(0+128)
  3517  0DBC  3023               	movlw	35
  3518  0DBD  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3519  0DBE  303C               	movlw	60
  3520  0DBF  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3521  0DC0  3192  22C9  3189   	fcall	___ftmul
  3522  0DC3  0021               	movlb	1	; select bank1
  3523  0DC4  0835               	movf	?___ftmul^(0+128),w
  3524  0DC5  00C5               	movwf	___fttol@f1^(0+128)
  3525  0DC6  0836               	movf	(?___ftmul+1)^(0+128),w
  3526  0DC7  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3527  0DC8  0837               	movf	(?___ftmul+2)^(0+128),w
  3528  0DC9  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3529  0DCA  319F  2779  3189   	fcall	___fttol
  3530  0DCD  0021               	movlb	1	; select bank1
  3531  0DCE  0846               	movf	(?___fttol^(0+128)+1),w
  3532  0DCF  0020               	movlb	0	; select bank0
  3533  0DD0  01EA               	clrf	_newsetwirespeed+1
  3534  0DD1  07EA               	addwf	_newsetwirespeed+1,f
  3535  0DD2  0021               	movlb	1	; select bank1
  3536  0DD3  0845               	movf	?___fttol^(0+128),w
  3537  0DD4  0020               	movlb	0	; select bank0
  3538  0DD5  01E9               	clrf	_newsetwirespeed
  3539  0DD6  07E9               	addwf	_newsetwirespeed,f
  3540                           
  3541                           ;main.c: 855: if(newsetwirespeed<=20)
  3542  0DD7  3000               	movlw	0
  3543  0DD8  026A               	subwf	_newsetwirespeed+1,w
  3544  0DD9  3015               	movlw	21
  3545  0DDA  1903               	skipnz
  3546  0DDB  0269               	subwf	_newsetwirespeed,w
  3547  0DDC  1803               	skipnc
  3548  0DDD  2DE2               	goto	l718
  3549                           
  3550                           ;main.c: 856: newsetwirespeed=20;
  3551  0DDE  3014               	movlw	20
  3552  0DDF  00E9               	movwf	_newsetwirespeed
  3553  0DE0  3000               	movlw	0
  3554  0DE1  00EA               	movwf	_newsetwirespeed+1
  3555  0DE2                     l718:	
  3556                           
  3557                           ;main.c: 862: if(newsetwirespeed <= 60)
  3558  0DE2  3000               	movlw	0
  3559  0DE3  026A               	subwf	_newsetwirespeed+1,w
  3560  0DE4  303D               	movlw	61
  3561  0DE5  1903               	skipnz
  3562  0DE6  0269               	subwf	_newsetwirespeed,w
  3563  0DE7  1803               	skipnc
  3564  0DE8  2E02               	goto	l5633
  3565                           
  3566                           ;main.c: 863: {
  3567                           ;main.c: 864: Update_PWM(newsetwirespeed*3.6);
  3568  0DE9  086A               	movf	_newsetwirespeed+1,w
  3569  0DEA  0021               	movlb	1	; select bank1
  3570  0DEB  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3571  0DEC  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3572  0DED  0020               	movlb	0	; select bank0
  3573  0DEE  0869               	movf	_newsetwirespeed,w
  3574  0DEF  0021               	movlb	1	; select bank1
  3575  0DF0  01A8               	clrf	___lwtoft@c^(0+128)
  3576  0DF1  07A8               	addwf	___lwtoft@c^(0+128),f
  3577  0DF2  3199  2124  3189   	fcall	___lwtoft
  3578  0DF5  0021               	movlb	1	; select bank1
  3579  0DF6  0828               	movf	?___lwtoft^(0+128),w
  3580  0DF7  00B8               	movwf	___ftmul@f2^(0+128)
  3581  0DF8  0829               	movf	(?___lwtoft+1)^(0+128),w
  3582  0DF9  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3583  0DFA  082A               	movf	(?___lwtoft+2)^(0+128),w
  3584  0DFB  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3585  0DFC  3066               	movlw	102
  3586  0DFD  00B5               	movwf	___ftmul@f1^(0+128)
  3587  0DFE  3066               	movlw	102
  3588  0DFF  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3589  0E00  3040               	movlw	64
  3590  0E01  2E1B               	goto	L7
  3591  0E02                     l5633:	
  3592                           ;main.c: 865: }else
  3593                           
  3594                           
  3595                           ;main.c: 866: {
  3596                           ;main.c: 867: Update_PWM(newsetwirespeed*1.4);
  3597  0E02  0020               	movlb	0	; select bank0
  3598  0E03  086A               	movf	_newsetwirespeed+1,w
  3599  0E04  0021               	movlb	1	; select bank1
  3600  0E05  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3601  0E06  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3602  0E07  0020               	movlb	0	; select bank0
  3603  0E08  0869               	movf	_newsetwirespeed,w
  3604  0E09  0021               	movlb	1	; select bank1
  3605  0E0A  01A8               	clrf	___lwtoft@c^(0+128)
  3606  0E0B  07A8               	addwf	___lwtoft@c^(0+128),f
  3607  0E0C  3199  2124  3189   	fcall	___lwtoft
  3608  0E0F  0021               	movlb	1	; select bank1
  3609  0E10  0828               	movf	?___lwtoft^(0+128),w
  3610  0E11  00B8               	movwf	___ftmul@f2^(0+128)
  3611  0E12  0829               	movf	(?___lwtoft+1)^(0+128),w
  3612  0E13  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3613  0E14  082A               	movf	(?___lwtoft+2)^(0+128),w
  3614  0E15  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3615  0E16  3033               	movlw	51
  3616  0E17  00B5               	movwf	___ftmul@f1^(0+128)
  3617  0E18  30B3               	movlw	179
  3618  0E19  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3619  0E1A  303F               	movlw	63
  3620  0E1B                     L7:	
  3621  0E1B  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3622  0E1C  3192  22C9  3189   	fcall	___ftmul
  3623  0E1F  0021               	movlb	1	; select bank1
  3624  0E20  0835               	movf	?___ftmul^(0+128),w
  3625  0E21  00C5               	movwf	___fttol@f1^(0+128)
  3626  0E22  0836               	movf	(?___ftmul+1)^(0+128),w
  3627  0E23  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3628  0E24  0837               	movf	(?___ftmul+2)^(0+128),w
  3629  0E25  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3630  0E26  319F  2779  3189   	fcall	___fttol
  3631  0E29  0021               	movlb	1	; select bank1
  3632  0E2A  0846               	movf	(?___fttol^(0+128)+1),w
  3633  0E2B  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3634  0E2C  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3635  0E2D  0845               	movf	?___fttol^(0+128),w
  3636  0E2E  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3637  0E2F  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3638  0E30  3199  21A4  3189   	fcall	_Update_PWM
  3639                           
  3640                           ;main.c: 868: }
  3641                           ;main.c: 870: TRISAbits.TRISA5=0;
  3642  0E33  0021               	movlb	1	; select bank1
  3643  0E34  128C               	bcf	12,5	;volatile
  3644                           
  3645                           ;main.c: 871: PORTAbits.RA0=1;
  3646  0E35  0020               	movlb	0	; select bank0
  3647  0E36  140C               	bsf	12,0	;volatile
  3648                           
  3649                           ;main.c: 873: }
  3650  0E37  2EE3               	goto	l5671
  3651  0E38                     l717:	
  3652                           
  3653                           ;main.c: 874: else if(psstatusu.psstatuss.creepspeedon==0)
  3654  0E38  1AED               	btfsc	_psstatusu,5
  3655  0E39  2EE3               	goto	l5671
  3656                           
  3657                           ;main.c: 875: {
  3658                           ;main.c: 876: cyclestrtf=1;
  3659  0E3A  0022               	movlb	2	; select bank2
  3660  0E3B  01BC               	clrf	_cyclestrtf^(0+256)
  3661  0E3C  0ABC               	incf	_cyclestrtf^(0+256),f
  3662                           
  3663                           ;main.c: 877: newsetwirespeed=setwirespeed;
  3664  0E3D  0020               	movlb	0	; select bank0
  3665  0E3E  085B               	movf	_setwirespeed+1,w
  3666  0E3F  01EA               	clrf	_newsetwirespeed+1
  3667  0E40  07EA               	addwf	_newsetwirespeed+1,f
  3668  0E41  085A               	movf	_setwirespeed,w
  3669  0E42  01E9               	clrf	_newsetwirespeed
  3670  0E43  07E9               	addwf	_newsetwirespeed,f
  3671                           
  3672                           ;main.c: 878: if(closeloopf==0)
  3673  0E44  0022               	movlb	2	; select bank2
  3674  0E45  08B6               	movf	_closeloopf^(0+256),f
  3675  0E46  1D03               	skipz
  3676  0E47  2EDF               	goto	l5667
  3677                           
  3678                           ;main.c: 879: {
  3679                           ;main.c: 880: Update_PWM(newsetwirespeed*1.4);
  3680  0E48  0020               	movlb	0	; select bank0
  3681  0E49  086A               	movf	_newsetwirespeed+1,w
  3682  0E4A  0021               	movlb	1	; select bank1
  3683  0E4B  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3684  0E4C  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3685  0E4D  0020               	movlb	0	; select bank0
  3686  0E4E  0869               	movf	_newsetwirespeed,w
  3687  0E4F  0021               	movlb	1	; select bank1
  3688  0E50  01A8               	clrf	___lwtoft@c^(0+128)
  3689  0E51  07A8               	addwf	___lwtoft@c^(0+128),f
  3690  0E52  3199  2124  3189   	fcall	___lwtoft
  3691  0E55  0021               	movlb	1	; select bank1
  3692  0E56  0828               	movf	?___lwtoft^(0+128),w
  3693  0E57  00B8               	movwf	___ftmul@f2^(0+128)
  3694  0E58  0829               	movf	(?___lwtoft+1)^(0+128),w
  3695  0E59  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3696  0E5A  082A               	movf	(?___lwtoft+2)^(0+128),w
  3697  0E5B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3698  0E5C  3033               	movlw	51
  3699  0E5D  00B5               	movwf	___ftmul@f1^(0+128)
  3700  0E5E  30B3               	movlw	179
  3701  0E5F  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3702  0E60  303F               	movlw	63
  3703  0E61  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3704  0E62  3192  22C9  3189   	fcall	___ftmul
  3705  0E65  0021               	movlb	1	; select bank1
  3706  0E66  0835               	movf	?___ftmul^(0+128),w
  3707  0E67  00C5               	movwf	___fttol@f1^(0+128)
  3708  0E68  0836               	movf	(?___ftmul+1)^(0+128),w
  3709  0E69  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3710  0E6A  0837               	movf	(?___ftmul+2)^(0+128),w
  3711  0E6B  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3712  0E6C  319F  2779  3189   	fcall	___fttol
  3713  0E6F  0021               	movlb	1	; select bank1
  3714  0E70  0846               	movf	(?___fttol^(0+128)+1),w
  3715  0E71  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3716  0E72  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3717  0E73  0845               	movf	?___fttol^(0+128),w
  3718  0E74  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3719  0E75  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3720  0E76  3199  21A4  3189   	fcall	_Update_PWM
  3721                           
  3722                           ;main.c: 881: if(wfspeedchangef==1)
  3723  0E79  0022               	movlb	2	; select bank2
  3724  0E7A  086F               	movf	_wfspeedchangef^(0+256),w
  3725  0E7B  3A01               	xorlw	1
  3726  0E7C  1D03               	skipz
  3727  0E7D  2EDD               	goto	l5665
  3728                           
  3729                           ;main.c: 882: {
  3730                           ;main.c: 883: integral_old=newsetwirespeed*scalefactor2*1.4;
  3731  0E7E  3033               	movlw	51
  3732  0E7F  0021               	movlb	1	; select bank1
  3733  0E80  00B5               	movwf	___ftmul@f1^(0+128)
  3734  0E81  30B3               	movlw	179
  3735  0E82  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3736  0E83  303F               	movlw	63
  3737  0E84  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3738  0E85  0020               	movlb	0	; select bank0
  3739  0E86  086A               	movf	_newsetwirespeed+1,w
  3740  0E87  0021               	movlb	1	; select bank1
  3741  0E88  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3742  0E89  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3743  0E8A  0020               	movlb	0	; select bank0
  3744  0E8B  0869               	movf	_newsetwirespeed,w
  3745  0E8C  0021               	movlb	1	; select bank1
  3746  0E8D  01A0               	clrf	___wmul@multiplier^(0+128)
  3747  0E8E  07A0               	addwf	___wmul@multiplier^(0+128),f
  3748  0E8F  0023               	movlb	3	; select bank3
  3749  0E90  086C               	movf	(_scalefactor2+1)^(0+384),w
  3750  0E91  0021               	movlb	1	; select bank1
  3751  0E92  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  3752  0E93  07A3               	addwf	(___wmul@multiplicand+1)^(0+128),f
  3753  0E94  0023               	movlb	3	; select bank3
  3754  0E95  086B               	movf	_scalefactor2^(0+384),w
  3755  0E96  0021               	movlb	1	; select bank1
  3756  0E97  01A2               	clrf	___wmul@multiplicand^(0+128)
  3757  0E98  07A2               	addwf	___wmul@multiplicand^(0+128),f
  3758  0E99  3199  2164  3189   	fcall	___wmul
  3759  0E9C  0021               	movlb	1	; select bank1
  3760  0E9D  0821               	movf	(?___wmul+1)^(0+128),w
  3761  0E9E  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3762  0E9F  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3763  0EA0  0820               	movf	?___wmul^(0+128),w
  3764  0EA1  01A8               	clrf	___lwtoft@c^(0+128)
  3765  0EA2  07A8               	addwf	___lwtoft@c^(0+128),f
  3766  0EA3  3199  2124  3189   	fcall	___lwtoft
  3767  0EA6  0021               	movlb	1	; select bank1
  3768  0EA7  0828               	movf	?___lwtoft^(0+128),w
  3769  0EA8  00B8               	movwf	___ftmul@f2^(0+128)
  3770  0EA9  0829               	movf	(?___lwtoft+1)^(0+128),w
  3771  0EAA  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3772  0EAB  082A               	movf	(?___lwtoft+2)^(0+128),w
  3773  0EAC  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3774  0EAD  3192  22C9  3189   	fcall	___ftmul
  3775  0EB0  0021               	movlb	1	; select bank1
  3776  0EB1  0835               	movf	?___ftmul^(0+128),w
  3777  0EB2  0023               	movlb	3	; select bank3
  3778  0EB3  00A9               	movwf	_integral_old^(0+384)
  3779  0EB4  0021               	movlb	1	; select bank1
  3780  0EB5  0836               	movf	(?___ftmul+1)^(0+128),w
  3781  0EB6  0023               	movlb	3	; select bank3
  3782  0EB7  00AA               	movwf	(_integral_old+1)^(0+384)
  3783  0EB8  0021               	movlb	1	; select bank1
  3784  0EB9  0837               	movf	(?___ftmul+2)^(0+128),w
  3785  0EBA  0023               	movlb	3	; select bank3
  3786  0EBB  00AB               	movwf	(_integral_old+2)^(0+384)
  3787                           
  3788                           ;main.c: 885: wfspeedchangef=0;
  3789  0EBC  0022               	movlb	2	; select bank2
  3790  0EBD  01EF               	clrf	_wfspeedchangef^(0+256)
  3791                           
  3792                           ;main.c: 886: integral_new =0;
  3793  0EBE  3000               	movlw	0
  3794  0EBF  0023               	movlb	3	; select bank3
  3795  0EC0  00A6               	movwf	_integral_new^(0+384)
  3796  0EC1  3000               	movlw	0
  3797  0EC2  00A7               	movwf	(_integral_new+1)^(0+384)
  3798  0EC3  3000               	movlw	0
  3799  0EC4  00A8               	movwf	(_integral_new+2)^(0+384)
  3800                           
  3801                           ;main.c: 888: error_old =0;
  3802  0EC5  3000               	movlw	0
  3803  0EC6  00A3               	movwf	_error_old^(0+384)
  3804  0EC7  3000               	movlw	0
  3805  0EC8  00A4               	movwf	(_error_old+1)^(0+384)
  3806  0EC9  3000               	movlw	0
  3807  0ECA  00A5               	movwf	(_error_old+2)^(0+384)
  3808                           
  3809                           ;main.c: 889: error_new=0;
  3810  0ECB  3000               	movlw	0
  3811  0ECC  00A0               	movwf	_error_new^(0+384)
  3812  0ECD  3000               	movlw	0
  3813  0ECE  00A1               	movwf	(_error_new+1)^(0+384)
  3814  0ECF  3000               	movlw	0
  3815  0ED0  00A2               	movwf	(_error_new+2)^(0+384)
  3816                           
  3817                           ;main.c: 890: controller_out=0;
  3818  0ED1  3000               	movlw	0
  3819  0ED2  0024               	movlb	4	; select bank4
  3820  0ED3  00A4               	movwf	_controller_out^(0+512)
  3821  0ED4  3000               	movlw	0
  3822  0ED5  00A5               	movwf	(_controller_out+1)^(0+512)
  3823  0ED6  3000               	movlw	0
  3824  0ED7  00A6               	movwf	(_controller_out+2)^(0+512)
  3825                           
  3826                           ;main.c: 891: prevFltpfreq=0;
  3827  0ED8  01C2               	clrf	_prevFltpfreq^(0+512)
  3828  0ED9  01C3               	clrf	(_prevFltpfreq+1)^(0+512)
  3829                           
  3830                           ;main.c: 892: Fltpfreq=0;
  3831  0EDA  0022               	movlb	2	; select bank2
  3832  0EDB  01A0               	clrf	_Fltpfreq^(0+256)
  3833  0EDC  01A1               	clrf	(_Fltpfreq+1)^(0+256)
  3834  0EDD                     l5665:	
  3835                           
  3836                           ;main.c: 893: }
  3837                           ;main.c: 894: closeloopf=1;
  3838  0EDD  01B6               	clrf	_closeloopf^(0+256)
  3839  0EDE  0AB6               	incf	_closeloopf^(0+256),f
  3840  0EDF                     l5667:	
  3841                           
  3842                           ;main.c: 895: }
  3843                           ;main.c: 896: TRISAbits.TRISA5=0;
  3844  0EDF  0021               	movlb	1	; select bank1
  3845  0EE0  128C               	bcf	12,5	;volatile
  3846                           
  3847                           ;main.c: 897: PORTAbits.RA0=0;
  3848  0EE1  0020               	movlb	0	; select bank0
  3849  0EE2  100C               	bcf	12,0	;volatile
  3850  0EE3                     l5671:	
  3851                           
  3852                           ;main.c: 898: }
  3853                           ;main.c: 900: if(psstatusu.psstatuss.craterspeedon==1 && wfstatusu.wfstatuss.twotfourtmo
      +                          de1==1)
  3854  0EE3  1A6D               	btfsc	_psstatusu,4
  3855  0EE4  1C6E               	btfss	_wfstatusu,0
  3856  0EE5  2EF2               	goto	l725
  3857                           
  3858                           ;main.c: 901: newsetwirespeed=crater_speed;
  3859  0EE6  0022               	movlb	2	; select bank2
  3860  0EE7  083A               	movf	_crater_speed^(0+256),w	;volatile
  3861  0EE8  0021               	movlb	1	; select bank1
  3862  0EE9  00ED               	movwf	??_main^(0+128)
  3863  0EEA  01EE               	clrf	(??_main^(0+128)+1)
  3864  0EEB  086D               	movf	??_main^(0+128),w
  3865  0EEC  0020               	movlb	0	; select bank0
  3866  0EED  00E9               	movwf	_newsetwirespeed
  3867  0EEE  0021               	movlb	1	; select bank1
  3868  0EEF  086E               	movf	(??_main+1)^(0+128),w
  3869  0EF0  0020               	movlb	0	; select bank0
  3870  0EF1  00EA               	movwf	_newsetwirespeed+1
  3871  0EF2                     l725:	
  3872                           
  3873                           ;main.c: 903: if(newsetwirespeed > 10)
  3874  0EF2  3000               	movlw	0
  3875  0EF3  026A               	subwf	_newsetwirespeed+1,w
  3876  0EF4  300B               	movlw	11
  3877  0EF5  1903               	skipnz
  3878  0EF6  0269               	subwf	_newsetwirespeed,w
  3879  0EF7  1C03               	skipc
  3880  0EF8  2F29               	goto	l726
  3881                           
  3882                           ;main.c: 904: setpfreq=(3.6*newsetwirespeed);
  3883  0EF9  086A               	movf	_newsetwirespeed+1,w
  3884  0EFA  0021               	movlb	1	; select bank1
  3885  0EFB  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3886  0EFC  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3887  0EFD  0020               	movlb	0	; select bank0
  3888  0EFE  0869               	movf	_newsetwirespeed,w
  3889  0EFF  0021               	movlb	1	; select bank1
  3890  0F00  01A8               	clrf	___lwtoft@c^(0+128)
  3891  0F01  07A8               	addwf	___lwtoft@c^(0+128),f
  3892  0F02  3199  2124  3189   	fcall	___lwtoft
  3893  0F05  0021               	movlb	1	; select bank1
  3894  0F06  0828               	movf	?___lwtoft^(0+128),w
  3895  0F07  00B8               	movwf	___ftmul@f2^(0+128)
  3896  0F08  0829               	movf	(?___lwtoft+1)^(0+128),w
  3897  0F09  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3898  0F0A  082A               	movf	(?___lwtoft+2)^(0+128),w
  3899  0F0B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3900  0F0C  3066               	movlw	102
  3901  0F0D  00B5               	movwf	___ftmul@f1^(0+128)
  3902  0F0E  3066               	movlw	102
  3903  0F0F  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3904  0F10  3040               	movlw	64
  3905  0F11  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3906  0F12  3192  22C9  3189   	fcall	___ftmul
  3907  0F15  0021               	movlb	1	; select bank1
  3908  0F16  0835               	movf	?___ftmul^(0+128),w
  3909  0F17  00C5               	movwf	___fttol@f1^(0+128)
  3910  0F18  0836               	movf	(?___ftmul+1)^(0+128),w
  3911  0F19  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3912  0F1A  0837               	movf	(?___ftmul+2)^(0+128),w
  3913  0F1B  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3914  0F1C  319F  2779  3189   	fcall	___fttol
  3915  0F1F  0021               	movlb	1	; select bank1
  3916  0F20  0846               	movf	(?___fttol^(0+128)+1),w
  3917  0F21  0023               	movlb	3	; select bank3
  3918  0F22  01D1               	clrf	(_setpfreq+1)^(0+384)
  3919  0F23  07D1               	addwf	(_setpfreq+1)^(0+384),f
  3920  0F24  0021               	movlb	1	; select bank1
  3921  0F25  0845               	movf	?___fttol^(0+128),w
  3922  0F26  0023               	movlb	3	; select bank3
  3923  0F27  01D0               	clrf	_setpfreq^(0+384)
  3924  0F28  07D0               	addwf	_setpfreq^(0+384),f
  3925  0F29                     l726:	
  3926                           
  3927                           ;main.c: 907: Hi_setppwm=(newsetwirespeed+rel_wirespeed)*1.4;
  3928  0F29  0023               	movlb	3	; select bank3
  3929  0F2A  084C               	movf	_rel_wirespeed^(0+384),w
  3930  0F2B  0020               	movlb	0	; select bank0
  3931  0F2C  0769               	addwf	_newsetwirespeed,w
  3932  0F2D  0021               	movlb	1	; select bank1
  3933  0F2E  00A8               	movwf	___lwtoft@c^(0+128)
  3934  0F2F  0023               	movlb	3	; select bank3
  3935  0F30  084D               	movf	(_rel_wirespeed+1)^(0+384),w
  3936  0F31  0020               	movlb	0	; select bank0
  3937  0F32  3D6A               	addwfc	_newsetwirespeed+1,w
  3938  0F33  0021               	movlb	1	; select bank1
  3939  0F34  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  3940  0F35  3199  2124  3189   	fcall	___lwtoft
  3941  0F38  0021               	movlb	1	; select bank1
  3942  0F39  0828               	movf	?___lwtoft^(0+128),w
  3943  0F3A  00B8               	movwf	___ftmul@f2^(0+128)
  3944  0F3B  0829               	movf	(?___lwtoft+1)^(0+128),w
  3945  0F3C  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3946  0F3D  082A               	movf	(?___lwtoft+2)^(0+128),w
  3947  0F3E  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3948  0F3F  3033               	movlw	51
  3949  0F40  00B5               	movwf	___ftmul@f1^(0+128)
  3950  0F41  30B3               	movlw	179
  3951  0F42  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3952  0F43  303F               	movlw	63
  3953  0F44  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3954  0F45  3192  22C9  3189   	fcall	___ftmul
  3955  0F48  0021               	movlb	1	; select bank1
  3956  0F49  0835               	movf	?___ftmul^(0+128),w
  3957  0F4A  00C5               	movwf	___fttol@f1^(0+128)
  3958  0F4B  0836               	movf	(?___ftmul+1)^(0+128),w
  3959  0F4C  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3960  0F4D  0837               	movf	(?___ftmul+2)^(0+128),w
  3961  0F4E  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3962  0F4F  319F  2779  3189   	fcall	___fttol
  3963  0F52  0021               	movlb	1	; select bank1
  3964  0F53  0846               	movf	(?___fttol^(0+128)+1),w
  3965  0F54  0023               	movlb	3	; select bank3
  3966  0F55  01AD               	clrf	(_Hi_setppwm+1)^(0+384)
  3967  0F56  07AD               	addwf	(_Hi_setppwm+1)^(0+384),f
  3968  0F57  0021               	movlb	1	; select bank1
  3969  0F58  0845               	movf	?___fttol^(0+128),w
  3970  0F59  0023               	movlb	3	; select bank3
  3971  0F5A  01AC               	clrf	_Hi_setppwm^(0+384)
  3972  0F5B  07AC               	addwf	_Hi_setppwm^(0+384),f
  3973                           
  3974                           ;main.c: 908: Lo_setppwm=(newsetwirespeed-rel_wirespeed)*1.4;
  3975  0F5C  094C               	comf	_rel_wirespeed^(0+384),w
  3976  0F5D  0021               	movlb	1	; select bank1
  3977  0F5E  00ED               	movwf	??_main^(0+128)
  3978  0F5F  0023               	movlb	3	; select bank3
  3979  0F60  094D               	comf	(_rel_wirespeed+1)^(0+384),w
  3980  0F61  0021               	movlb	1	; select bank1
  3981  0F62  00EE               	movwf	(??_main^(0+128)+1)
  3982  0F63  0AED               	incf	??_main^(0+128),f
  3983  0F64  1903               	skipnz
  3984  0F65  0AEE               	incf	(??_main^(0+128)+1),f
  3985  0F66  0020               	movlb	0	; select bank0
  3986  0F67  0869               	movf	_newsetwirespeed,w
  3987  0F68  0021               	movlb	1	; select bank1
  3988  0F69  076D               	addwf	??_main^(0+128),w
  3989  0F6A  00A8               	movwf	___lwtoft@c^(0+128)
  3990  0F6B  0020               	movlb	0	; select bank0
  3991  0F6C  086A               	movf	_newsetwirespeed+1,w
  3992  0F6D  0021               	movlb	1	; select bank1
  3993  0F6E  3D6E               	addwfc	(??_main+1)^(0+128),w
  3994  0F6F  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  3995  0F70  3199  2124  3189   	fcall	___lwtoft
  3996  0F73  0021               	movlb	1	; select bank1
  3997  0F74  0828               	movf	?___lwtoft^(0+128),w
  3998  0F75  00B8               	movwf	___ftmul@f2^(0+128)
  3999  0F76  0829               	movf	(?___lwtoft+1)^(0+128),w
  4000  0F77  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4001  0F78  082A               	movf	(?___lwtoft+2)^(0+128),w
  4002  0F79  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4003  0F7A  3033               	movlw	51
  4004  0F7B  00B5               	movwf	___ftmul@f1^(0+128)
  4005  0F7C  30B3               	movlw	179
  4006  0F7D  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4007  0F7E  303F               	movlw	63
  4008  0F7F  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4009  0F80  3192  22C9  3189   	fcall	___ftmul
  4010  0F83  0021               	movlb	1	; select bank1
  4011  0F84  0835               	movf	?___ftmul^(0+128),w
  4012  0F85  00C5               	movwf	___fttol@f1^(0+128)
  4013  0F86  0836               	movf	(?___ftmul+1)^(0+128),w
  4014  0F87  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4015  0F88  0837               	movf	(?___ftmul+2)^(0+128),w
  4016  0F89  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4017  0F8A  319F  2779  3189   	fcall	___fttol
  4018  0F8D  0021               	movlb	1	; select bank1
  4019  0F8E  0846               	movf	(?___fttol^(0+128)+1),w
  4020  0F8F  0023               	movlb	3	; select bank3
  4021  0F90  01AF               	clrf	(_Lo_setppwm+1)^(0+384)
  4022  0F91  07AF               	addwf	(_Lo_setppwm+1)^(0+384),f
  4023  0F92  0021               	movlb	1	; select bank1
  4024  0F93  0845               	movf	?___fttol^(0+128),w
  4025  0F94  0023               	movlb	3	; select bank3
  4026  0F95  01AE               	clrf	_Lo_setppwm^(0+384)
  4027  0F96  07AE               	addwf	_Lo_setppwm^(0+384),f
  4028                           
  4029                           ;main.c: 909: }
  4030  0F97  2FBD               	goto	l5689
  4031  0F98                     l716:	
  4032                           
  4033                           ;main.c: 910: else if(psstatusu.psstatuss.motoroncommand!=1)
  4034  0F98  19ED               	btfsc	_psstatusu,3
  4035  0F99  2FBD               	goto	l5689
  4036                           
  4037                           ;main.c: 911: {
  4038                           ;main.c: 912: Update_PWM(setwirespeed*0);
  4039  0F9A  085B               	movf	_setwirespeed+1,w
  4040  0F9B  0021               	movlb	1	; select bank1
  4041  0F9C  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  4042  0F9D  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  4043  0F9E  0020               	movlb	0	; select bank0
  4044  0F9F  085A               	movf	_setwirespeed,w
  4045  0FA0  0021               	movlb	1	; select bank1
  4046  0FA1  01A0               	clrf	___wmul@multiplier^(0+128)
  4047  0FA2  07A0               	addwf	___wmul@multiplier^(0+128),f
  4048  0FA3  3000               	movlw	0
  4049  0FA4  00A2               	movwf	___wmul@multiplicand^(0+128)
  4050  0FA5  3000               	movlw	0
  4051  0FA6  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  4052  0FA7  3199  2164  3189   	fcall	___wmul
  4053  0FAA  0021               	movlb	1	; select bank1
  4054  0FAB  0821               	movf	(?___wmul+1)^(0+128),w
  4055  0FAC  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  4056  0FAD  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  4057  0FAE  0820               	movf	?___wmul^(0+128),w
  4058  0FAF  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  4059  0FB0  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  4060  0FB1  3199  21A4  3189   	fcall	_Update_PWM
  4061                           
  4062                           ;main.c: 913: openloopcnt =0;
  4063  0FB4  0024               	movlb	4	; select bank4
  4064  0FB5  01C0               	clrf	_openloopcnt^(0+512)
  4065  0FB6  01C1               	clrf	(_openloopcnt+1)^(0+512)
  4066                           
  4067                           ;main.c: 914: closeloopf =0;
  4068  0FB7  0022               	movlb	2	; select bank2
  4069  0FB8  01B6               	clrf	_closeloopf^(0+256)
  4070                           
  4071                           ;main.c: 915: closeloop1f =0;
  4072  0FB9  0023               	movlb	3	; select bank3
  4073  0FBA  01D4               	clrf	_closeloop1f^(0+384)
  4074                           
  4075                           ;main.c: 916: cyclestrtf=0;
  4076  0FBB  0022               	movlb	2	; select bank2
  4077  0FBC  01BC               	clrf	_cyclestrtf^(0+256)
  4078  0FBD                     l5689:	
  4079                           
  4080                           ;main.c: 918: }
  4081                           ;main.c: 919: TypeU.TypeS.wirespeed=0;
  4082  0FBD  0020               	movlb	0	; select bank0
  4083  0FBE  1067               	bcf	_TypeU,0
  4084                           
  4085                           ;main.c: 920: TypeU.TypeS.amp=1;
  4086  0FBF  1468               	bsf	_TypeU+1,0
  4087                           
  4088                           ;main.c: 921: TypeU.TypeS.thickness=0;
  4089  0FC0  10E7               	bcf	_TypeU,1
  4090                           
  4091                           ;main.c: 922: TypeU.TypeS.arclength =0;
  4092  0FC1  1167               	bcf	_TypeU,2
  4093                           
  4094                           ;main.c: 923: TypeU.TypeS.vtg =1;
  4095  0FC2  14E8               	bsf	_TypeU+1,1
  4096                           
  4097                           ;main.c: 924: TypeU.TypeS.sec =0;
  4098  0FC3  1168               	bcf	_TypeU+1,2
  4099                           
  4100                           ;main.c: 926: TypeDP.DPGROUP[0]=0x00;
  4101  0FC4  01EB               	clrf	_TypeDP
  4102                           
  4103                           ;main.c: 927: TypeDP.TypeD.digitdp5 =1;
  4104  0FC5  166B               	bsf	_TypeDP,4
  4105                           
  4106                           ;main.c: 928: disp_hex_window1(Actual_amp);
  4107  0FC6  0023               	movlb	3	; select bank3
  4108  0FC7  0864               	movf	(_Actual_amp+1)^(0+384),w
  4109  0FC8  0021               	movlb	1	; select bank1
  4110  0FC9  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  4111  0FCA  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  4112  0FCB  0023               	movlb	3	; select bank3
  4113  0FCC  0863               	movf	_Actual_amp^(0+384),w
  4114  0FCD  0021               	movlb	1	; select bank1
  4115  0FCE  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  4116  0FCF  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  4117  0FD0  319C  2427  3189   	fcall	_disp_hex_window1
  4118                           
  4119                           ;main.c: 929: disp_hex_window2(Actual_vtg);
  4120  0FD3  0023               	movlb	3	; select bank3
  4121  0FD4  0866               	movf	(_Actual_vtg+1)^(0+384),w
  4122  0FD5  0021               	movlb	1	; select bank1
  4123  0FD6  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  4124  0FD7  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  4125  0FD8  0023               	movlb	3	; select bank3
  4126  0FD9  0865               	movf	_Actual_vtg^(0+384),w
  4127  0FDA  0021               	movlb	1	; select bank1
  4128  0FDB  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  4129  0FDC  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  4130  0FDD  319C  248B  3189   	fcall	_disp_hex_window2
  4131                           
  4132                           ;main.c: 930: dispupdatef =1;
  4133  0FE0  3001               	movlw	1
  4134  0FE1  0021               	movlb	1	; select bank1
  4135  0FE2  00ED               	movwf	??_main^(0+128)
  4136  0FE3  086D               	movf	??_main^(0+128),w
  4137  0FE4  0020               	movlb	0	; select bank0
  4138  0FE5  00EF               	movwf	_dispupdatef	;volatile
  4139  0FE6                     l5711:	
  4140                           
  4141                           ;main.c: 932: }
  4142                           ;main.c: 933: }
  4143                           ;main.c: 935: if(universal_error_latch==1)
  4144  0FE6  0022               	movlb	2	; select bank2
  4145  0FE7  085C               	movf	_universal_error_latch^(0+256),w	;volatile
  4146  0FE8  3A01               	xorlw	1
  4147  0FE9  1D03               	skipz
  4148  0FEA  2FF3               	goto	l5717
  4149                           
  4150                           ;main.c: 936: {
  4151                           ;main.c: 937: dispupdatef=1;
  4152  0FEB  3001               	movlw	1
  4153  0FEC  0021               	movlb	1	; select bank1
  4154  0FED  00ED               	movwf	??_main^(0+128)
  4155  0FEE  086D               	movf	??_main^(0+128),w
  4156  0FEF  0020               	movlb	0	; select bank0
  4157  0FF0  00EF               	movwf	_dispupdatef	;volatile
  4158                           
  4159                           ;main.c: 938: universal_error_latch=0;
  4160  0FF1  0022               	movlb	2	; select bank2
  4161  0FF2  01DC               	clrf	_universal_error_latch^(0+256)	;volatile
  4162  0FF3                     l5717:	
  4163                           
  4164                           ;main.c: 939: }
  4165                           ;main.c: 940: if(( (weldmode=='P') || (weldmode=='G') ))
  4166  0FF3  0020               	movlb	0	; select bank0
  4167  0FF4  0866               	movf	_weldmode,w	;volatile
  4168  0FF5  3A50               	xorlw	80
  4169  0FF6  1903               	skipnz
  4170  0FF7  2FFC               	goto	l5721
  4171  0FF8  0866               	movf	_weldmode,w	;volatile
  4172  0FF9  3A47               	xorlw	71
  4173  0FFA  1D03               	skipz
  4174  0FFB  29E0               	goto	l5303
  4175  0FFC                     l5721:	
  4176                           
  4177                           ;main.c: 941: detect_display_error();
  4178  0FFC  3191  216B  3189   	fcall	_detect_display_error
  4179  0FFF  29E0               	goto	l5303
  4180  1000                     __end_of_main:	
  4181                           
  4182                           	psect	text1
  4183  1911                     __ptext1:	
  4184 ;; *************** function _uart_init *****************
  4185 ;; Defined at:
  4186 ;;		line 1178 in file "main.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;		None               void
  4193 ;; Registers used:
  4194 ;;		wreg
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;Total ram usage:        0 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    3
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_main
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           
  4215                           ;psect for function _uart_init
  4216  1911                     _uart_init:	
  4217                           
  4218                           ;main.c: 1180: RCSTAbits.SPEN=1;
  4219                           
  4220                           ;incstack = 0
  4221                           ; Regs used in _uart_init: [wreg]
  4222  1911  0023               	movlb	3	; select bank3
  4223  1912  179D               	bsf	29,7	;volatile
  4224                           
  4225                           ;main.c: 1181: TRISCbits.TRISC6=0;
  4226  1913  0021               	movlb	1	; select bank1
  4227  1914  130E               	bcf	14,6	;volatile
  4228                           
  4229                           ;main.c: 1182: TRISCbits.TRISC7=1;
  4230  1915  178E               	bsf	14,7	;volatile
  4231                           
  4232                           ;main.c: 1183: TXSTAbits.BRGH=0;
  4233  1916  0023               	movlb	3	; select bank3
  4234  1917  111E               	bcf	30,2	;volatile
  4235                           
  4236                           ;main.c: 1184: BAUDCTLbits.BRG16=0;
  4237  1918  119F               	bcf	31,3	;volatile
  4238                           
  4239                           ;main.c: 1185: TXSTAbits.SYNC=0;
  4240  1919  121E               	bcf	30,4	;volatile
  4241                           
  4242                           ;main.c: 1186: SPBRG=51;
  4243  191A  3033               	movlw	51
  4244  191B  009B               	movwf	27	;volatile
  4245                           
  4246                           ;main.c: 1187: TXSTA=0x20;
  4247  191C  3020               	movlw	32
  4248  191D  009E               	movwf	30	;volatile
  4249                           
  4250                           ;main.c: 1188: TXSTAbits.TXEN=0;
  4251  191E  129E               	bcf	30,5	;volatile
  4252                           
  4253                           ;main.c: 1189: RCSTAbits.CREN=0;
  4254  191F  121D               	bcf	29,4	;volatile
  4255                           
  4256                           ;main.c: 1190: PIE1bits.RCIE=0;
  4257  1920  0021               	movlb	1	; select bank1
  4258  1921  1291               	bcf	17,5	;volatile
  4259                           
  4260                           ;main.c: 1191: PIE1bits.TXIE=0;
  4261  1922  1211               	bcf	17,4	;volatile
  4262  1923  0008               	return
  4263  1924                     __end_of_uart_init:	
  4264                           
  4265                           	psect	text2
  4266  0808                     __ptext2:	
  4267 ;; *************** function _transmittops *****************
  4268 ;; Defined at:
  4269 ;;		line 1220 in file "main.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;		None               void
  4276 ;; Registers used:
  4277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;Total ram usage:        1 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    4
  4290 ;; This function calls:
  4291 ;;		_Send_Byte
  4292 ;; This function is called by:
  4293 ;;		_main
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           
  4298                           ;psect for function _transmittops
  4299  0808                     _transmittops:	
  4300                           
  4301                           ;main.c: 1222: chksum=0;
  4302                           
  4303                           ;incstack = 0
  4304                           ; Regs used in _transmittops: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4305  0808  0022               	movlb	2	; select bank2
  4306  0809  01B5               	clrf	_chksum^(0+256)
  4307                           
  4308                           ;main.c: 1223: pstowfstru.pstowfstrs.psstatusbyte=0xBB;
  4309  080A  30BB               	movlw	187
  4310  080B  0021               	movlb	1	; select bank1
  4311  080C  00A1               	movwf	??_transmittops^(0+128)
  4312  080D  0821               	movf	??_transmittops^(0+128),w
  4313  080E  0024               	movlb	4	; select bank4
  4314  080F  00D0               	movwf	(_pstowfstru^(0+512)+12)
  4315                           
  4316                           ;main.c: 1225: if(cWf2t4tmodefg == 1)
  4317  0810  0022               	movlb	2	; select bank2
  4318  0811  0834               	movf	_cWf2t4tmodefg^(0+256),w
  4319  0812  3A01               	xorlw	1
  4320  0813  1D03               	skipz
  4321  0814  2818               	goto	l795
  4322                           
  4323                           ;main.c: 1226: {
  4324                           ;main.c: 1227: wfstatusu.wfstatuss.twotfourtmode1 = 1;
  4325  0815  0020               	movlb	0	; select bank0
  4326  0816  146E               	bsf	_wfstatusu,0
  4327                           
  4328                           ;main.c: 1228: }
  4329  0817  281A               	goto	l4469
  4330  0818                     l795:	
  4331                           
  4332                           ;main.c: 1229: else
  4333                           ;main.c: 1230: {
  4334                           ;main.c: 1231: wfstatusu.wfstatuss.twotfourtmode1 = 0;
  4335  0818  0020               	movlb	0	; select bank0
  4336  0819  106E               	bcf	_wfstatusu,0
  4337  081A                     l4469:	
  4338                           
  4339                           ;main.c: 1232: }
  4340                           ;main.c: 1234: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4341  081A  086E               	movf	_wfstatusu,w
  4342  081B  0021               	movlb	1	; select bank1
  4343  081C  00A1               	movwf	??_transmittops^(0+128)
  4344  081D  0821               	movf	??_transmittops^(0+128),w
  4345  081E  0024               	movlb	4	; select bank4
  4346  081F  00D1               	movwf	(_pstowfstru^(0+512)+13)
  4347                           
  4348                           ;main.c: 1243: Tx_ptr=0;
  4349  0820  0023               	movlb	3	; select bank3
  4350  0821  01D2               	clrf	_Tx_ptr^(0+384)
  4351                           
  4352                           ;main.c: 1244: Send_Byte('@');
  4353  0822  3040               	movlw	64
  4354  0823  3198  2095  3188   	fcall	_Send_Byte
  4355                           
  4356                           ;main.c: 1245: for(lmn=0;lmn<=15;lmn++)
  4357  0826  0022               	movlb	2	; select bank2
  4358  0827  01A4               	clrf	_lmn^(0+256)
  4359  0828  01A5               	clrf	(_lmn+1)^(0+256)
  4360  0829  3000               	movlw	0
  4361  082A  0225               	subwf	(_lmn+1)^(0+256),w
  4362  082B  3010               	movlw	16
  4363  082C  1903               	skipnz
  4364  082D  0224               	subwf	_lmn^(0+256),w
  4365  082E  1803               	btfsc	3,0
  4366  082F  2851               	goto	l4489
  4367  0830                     l4481:	
  4368                           
  4369                           ;main.c: 1246: {
  4370                           ;main.c: 1247: chksum=chksum+pstowfstru.pstransarr[lmn];
  4371  0830  0824               	movf	_lmn^(0+256),w
  4372  0831  3E44               	addlw	_pstowfstru& (0+255)
  4373  0832  0086               	movwf	6
  4374  0833  3002               	movlw	2	; select bank4/5
  4375  0834  0087               	movwf	7
  4376  0835  0801               	movf	1,w
  4377  0836  0735               	addwf	_chksum^(0+256),w
  4378  0837  0021               	movlb	1	; select bank1
  4379  0838  00A1               	movwf	??_transmittops^(0+128)
  4380  0839  0821               	movf	??_transmittops^(0+128),w
  4381  083A  0022               	movlb	2	; select bank2
  4382  083B  00B5               	movwf	_chksum^(0+256)
  4383                           
  4384                           ;main.c: 1248: Send_Byte(pstowfstru.pstransarr[lmn]);
  4385  083C  0824               	movf	_lmn^(0+256),w
  4386  083D  3E44               	addlw	_pstowfstru& (0+255)
  4387  083E  0086               	movwf	6
  4388  083F  3002               	movlw	2	; select bank4/5
  4389  0840  0087               	movwf	7
  4390  0841  0801               	movf	1,w
  4391  0842  3198  2095  3188   	fcall	_Send_Byte
  4392  0845  3001               	movlw	1
  4393  0846  0022               	movlb	2	; select bank2
  4394  0847  07A4               	addwf	_lmn^(0+256),f
  4395  0848  3000               	movlw	0
  4396  0849  3DA5               	addwfc	(_lmn+1)^(0+256),f
  4397  084A  3000               	movlw	0
  4398  084B  0225               	subwf	(_lmn+1)^(0+256),w
  4399  084C  3010               	movlw	16
  4400  084D  1903               	skipnz
  4401  084E  0224               	subwf	_lmn^(0+256),w
  4402  084F  1C03               	skipc
  4403  0850  2830               	goto	l4481
  4404  0851                     l4489:	
  4405                           
  4406                           ;main.c: 1249: }
  4407                           ;main.c: 1250: pstowfstru.pstowfstrs.setthickness = chksum;
  4408  0851  0835               	movf	_chksum^(0+256),w
  4409  0852  0021               	movlb	1	; select bank1
  4410  0853  00A1               	movwf	??_transmittops^(0+128)
  4411  0854  0821               	movf	??_transmittops^(0+128),w
  4412  0855  0024               	movlb	4	; select bank4
  4413  0856  00C8               	movwf	(_pstowfstru^(0+512)+4)
  4414                           
  4415                           ;main.c: 1251: Send_Byte(chksum);
  4416  0857  0022               	movlb	2	; select bank2
  4417  0858  0835               	movf	_chksum^(0+256),w
  4418  0859  3198  2095         	fcall	_Send_Byte
  4419  085B  0008               	return
  4420  085C                     __end_of_transmittops:	
  4421                           
  4422                           	psect	text3
  4423  189F                     __ptext3:	
  4424 ;; *************** function _system_init *****************
  4425 ;; Defined at:
  4426 ;;		line 1085 in file "main.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;		None               void
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;Total ram usage:        0 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    3
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_main
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           
  4455                           ;psect for function _system_init
  4456  189F                     _system_init:	
  4457                           
  4458                           ;main.c: 1089: OSCCONbits.IRCF=14;
  4459                           
  4460                           ;incstack = 0
  4461                           ; Regs used in _system_init: [wreg+status,2+status,0]
  4462  189F  0021               	movlb	1	; select bank1
  4463  18A0  0819               	movf	25,w	;volatile
  4464  18A1  3987               	andlw	-121
  4465  18A2  3870               	iorlw	112
  4466  18A3  0099               	movwf	25	;volatile
  4467                           
  4468                           ;main.c: 1091: OSCCONbits.SCS=0;
  4469  18A4  30FC               	movlw	-4
  4470  18A5  0599               	andwf	25,f	;volatile
  4471                           
  4472                           ;main.c: 1092: OSCTUNEbits.TUN=0;
  4473  18A6  30C0               	movlw	-64
  4474  18A7  0598               	andwf	24,f	;volatile
  4475  18A8  0008               	return
  4476  18A9                     __end_of_system_init:	
  4477                           
  4478                           	psect	text4
  4479  1939                     __ptext4:	
  4480 ;; *************** function _send_status *****************
  4481 ;; Defined at:
  4482 ;;		line 1254 in file "main.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;		None
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;		None
  4487 ;; Return value:  Size  Location     Type
  4488 ;;		None               void
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0, pclath, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4498 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4499 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4500 ;;Total ram usage:        1 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    4
  4503 ;; This function calls:
  4504 ;;		_Send_Byte
  4505 ;; This function is called by:
  4506 ;;		_main
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function _send_status
  4512  1939                     _send_status:	
  4513                           
  4514                           ;main.c: 1256: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4515                           
  4516                           ;incstack = 0
  4517                           ; Regs used in _send_status: [wreg+status,2+status,0+pclath+cstack]
  4518  1939  0020               	movlb	0	; select bank0
  4519  193A  086E               	movf	_wfstatusu,w
  4520  193B  0021               	movlb	1	; select bank1
  4521  193C  00A1               	movwf	??_send_status^(0+128)
  4522  193D  0821               	movf	??_send_status^(0+128),w
  4523  193E  0024               	movlb	4	; select bank4
  4524  193F  00D1               	movwf	(_pstowfstru^(0+512)+13)
  4525                           
  4526                           ;main.c: 1257: Send_Byte('#');
  4527  1940  3023               	movlw	35
  4528  1941  3198  2095  3199   	fcall	_Send_Byte
  4529                           
  4530                           ;main.c: 1258: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4531  1944  0024               	movlb	4	; select bank4
  4532  1945  0851               	movf	(_pstowfstru^(0+512)+13),w
  4533  1946  3198  2095  3199   	fcall	_Send_Byte
  4534                           
  4535                           ;main.c: 1259: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4536  1949  0024               	movlb	4	; select bank4
  4537  194A  0851               	movf	(_pstowfstru^(0+512)+13),w
  4538  194B  3198  2095         	fcall	_Send_Byte
  4539  194D  0008               	return
  4540  194E                     __end_of_send_status:	
  4541                           
  4542                           	psect	text5
  4543  1895                     __ptext5:	
  4544 ;; *************** function _Send_Byte *****************
  4545 ;; Defined at:
  4546 ;;		line 1211 in file "main.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  transbyte       1    wreg     unsigned char 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  transbyte       1    0[BANK1 ] unsigned char 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;		None               void
  4553 ;; Registers used:
  4554 ;;		wreg
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4561 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;Total ram usage:        1 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    3
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_transmittops
  4571 ;;		_send_status
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           
  4576                           ;psect for function _Send_Byte
  4577  1895                     _Send_Byte:	
  4578                           
  4579                           ;incstack = 0
  4580                           ; Regs used in _Send_Byte: [wreg]
  4581                           ;Send_Byte@transbyte stored from wreg
  4582  1895  0021               	movlb	1	; select bank1
  4583  1896  00A0               	movwf	Send_Byte@transbyte^(0+128)
  4584  1897                     l789:	
  4585                           ;main.c: 1213: while(TXSTAbits.TRMT != 1);
  4586                           
  4587  1897  0023               	movlb	3	; select bank3
  4588  1898  1C9E               	btfss	30,1	;volatile
  4589  1899  2897               	goto	l789
  4590                           
  4591                           ;main.c: 1214: TXREG=transbyte;
  4592  189A  0021               	movlb	1	; select bank1
  4593  189B  0820               	movf	Send_Byte@transbyte^(0+128),w
  4594  189C  0023               	movlb	3	; select bank3
  4595  189D  009A               	movwf	26	;volatile
  4596  189E  0008               	return
  4597  189F                     __end_of_Send_Byte:	
  4598                           
  4599                           	psect	text6
  4600  194E                     __ptext6:	
  4601 ;; *************** function _portpin_init *****************
  4602 ;; Defined at:
  4603 ;;		line 1095 in file "main.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;		None
  4608 ;; Return value:  Size  Location     Type
  4609 ;;		None               void
  4610 ;; Registers used:
  4611 ;;		wreg, status,2
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;Total ram usage:        0 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    3
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_main
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           
  4632                           ;psect for function _portpin_init
  4633  194E                     _portpin_init:	
  4634                           
  4635                           ;main.c: 1097: TRISA=0x1F;
  4636                           
  4637                           ;incstack = 0
  4638                           ; Regs used in _portpin_init: [wreg+status,2]
  4639  194E  301F               	movlw	31
  4640  194F  0021               	movlb	1	; select bank1
  4641  1950  008C               	movwf	12	;volatile
  4642                           
  4643                           ;main.c: 1098: TRISB=0x00;
  4644  1951  018D               	clrf	13	;volatile
  4645                           
  4646                           ;main.c: 1099: TRISC=0x00;
  4647  1952  018E               	clrf	14	;volatile
  4648                           
  4649                           ;main.c: 1100: ANSELA=0X00;
  4650  1953  0023               	movlb	3	; select bank3
  4651  1954  018C               	clrf	12	;volatile
  4652                           
  4653                           ;main.c: 1101: ANSELB=0X00;
  4654  1955  018D               	clrf	13	;volatile
  4655                           
  4656                           ;main.c: 1104: PORTA=0X00;
  4657  1956  0020               	movlb	0	; select bank0
  4658  1957  018C               	clrf	12	;volatile
  4659                           
  4660                           ;main.c: 1105: PORTC=0X00;
  4661  1958  018E               	clrf	14	;volatile
  4662                           
  4663                           ;main.c: 1106: TRISAbits.TRISA1 =1;
  4664  1959  0021               	movlb	1	; select bank1
  4665  195A  148C               	bsf	12,1	;volatile
  4666                           
  4667                           ;main.c: 1107: TRISAbits.TRISA2 =1;
  4668  195B  150C               	bsf	12,2	;volatile
  4669                           
  4670                           ;main.c: 1108: TRISAbits.TRISA3 =1;
  4671  195C  158C               	bsf	12,3	;volatile
  4672                           
  4673                           ;main.c: 1109: TRISAbits.TRISA4 =1;
  4674  195D  160C               	bsf	12,4	;volatile
  4675                           
  4676                           ;main.c: 1110: TRISCbits.TRISC1 =1;
  4677  195E  148E               	bsf	14,1	;volatile
  4678                           
  4679                           ;main.c: 1111: TRISCbits.TRISC3=0;
  4680  195F  118E               	bcf	14,3	;volatile
  4681                           
  4682                           ;main.c: 1112: TRISAbits.TRISA5=0;
  4683  1960  128C               	bcf	12,5	;volatile
  4684                           
  4685                           ;main.c: 1113: TRISCbits.TRISC5=1;
  4686  1961  168E               	bsf	14,5	;volatile
  4687                           
  4688                           ;main.c: 1114: TRISAbits.TRISA0=0;
  4689  1962  100C               	bcf	12,0	;volatile
  4690  1963  0008               	return
  4691  1964                     __end_of_portpin_init:	
  4692                           
  4693                           	psect	text7
  4694  06B4                     __ptext7:	
  4695 ;; *************** function _key_application *****************
  4696 ;; Defined at:
  4697 ;;		line 945 in file "main.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  keypress        1    wreg     unsigned char 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  keypress        1   61[BANK1 ] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;		None               void
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0, pclath, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4714 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;Total ram usage:        3 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    5
  4718 ;; This function calls:
  4719 ;;		_Update_PWM
  4720 ;;		___wmul
  4721 ;;		_disp_hex_window2
  4722 ;; This function is called by:
  4723 ;;		_main
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           
  4728                           ;psect for function _key_application
  4729  06B4                     _key_application:	
  4730                           
  4731                           ;incstack = 0
  4732                           ; Regs used in _key_application: [wreg+status,2+status,0+pclath+cstack]
  4733                           ;key_application@keypress stored from wreg
  4734  06B4  0021               	movlb	1	; select bank1
  4735  06B5  00DD               	movwf	key_application@keypress^(0+128)
  4736                           
  4737                           ;main.c: 947: if(keypress==1)
  4738  06B6  085D               	movf	key_application@keypress^(0+128),w
  4739  06B7  3A01               	xorlw	1
  4740  06B8  1D03               	skipz
  4741  06B9  2EFE               	goto	l4509
  4742                           
  4743                           ;main.c: 948: {
  4744                           ;main.c: 965: if(gaschkfg == 0)
  4745  06BA  0022               	movlb	2	; select bank2
  4746  06BB  08C1               	movf	_gaschkfg^(0+256),f
  4747  06BC  1D03               	skipz
  4748  06BD  2EF4               	goto	l4505
  4749                           
  4750                           ;main.c: 966: {
  4751                           ;main.c: 967: igascntr=15;
  4752  06BE  300F               	movlw	15
  4753  06BF  0023               	movlb	3	; select bank3
  4754  06C0  00BC               	movwf	_igascntr^(0+384)
  4755  06C1  3000               	movlw	0
  4756  06C2  00BD               	movwf	(_igascntr^(0+384)+1)
  4757                           
  4758                           ;main.c: 968: gaschkfg=1;
  4759  06C3  0022               	movlb	2	; select bank2
  4760  06C4  01C1               	clrf	_gaschkfg^(0+256)
  4761  06C5  0AC1               	incf	_gaschkfg^(0+256),f
  4762                           
  4763                           ;main.c: 969: TypeU.TypeS.gason =1;
  4764  06C6  0020               	movlb	0	; select bank0
  4765  06C7  15E7               	bsf	_TypeU,3
  4766                           
  4767                           ;main.c: 970: PORTCbits.RC3 =1;
  4768  06C8  158E               	bsf	14,3	;volatile
  4769                           
  4770                           ;main.c: 971: diswin1[0]= 0x11;
  4771  06C9  3011               	movlw	17
  4772  06CA  0021               	movlb	1	; select bank1
  4773  06CB  00DB               	movwf	??_key_application^(0+128)
  4774  06CC  085B               	movf	??_key_application^(0+128),w
  4775  06CD  0022               	movlb	2	; select bank2
  4776  06CE  00E4               	movwf	_diswin1^(0+256)
  4777                           
  4778                           ;main.c: 972: diswin1[1]= 0x0B;
  4779  06CF  300B               	movlw	11
  4780  06D0  0021               	movlb	1	; select bank1
  4781  06D1  00DB               	movwf	??_key_application^(0+128)
  4782  06D2  085B               	movf	??_key_application^(0+128),w
  4783  06D3  0022               	movlb	2	; select bank2
  4784  06D4  00E5               	movwf	(_diswin1^(0+256)+1)
  4785                           
  4786                           ;main.c: 973: diswin1[2]= 0x1D;
  4787  06D5  301D               	movlw	29
  4788  06D6  0021               	movlb	1	; select bank1
  4789  06D7  00DB               	movwf	??_key_application^(0+128)
  4790  06D8  085B               	movf	??_key_application^(0+128),w
  4791  06D9  0022               	movlb	2	; select bank2
  4792  06DA  00E6               	movwf	(_diswin1^(0+256)+2)
  4793                           
  4794                           ;main.c: 975: diswin1[3]= 0x19;
  4795  06DB  3019               	movlw	25
  4796  06DC  0021               	movlb	1	; select bank1
  4797  06DD  00DB               	movwf	??_key_application^(0+128)
  4798  06DE  085B               	movf	??_key_application^(0+128),w
  4799  06DF  0022               	movlb	2	; select bank2
  4800  06E0  00E7               	movwf	(_diswin1^(0+256)+3)
  4801                           
  4802                           ;main.c: 976: diswin1[4]= 0x18;
  4803  06E1  3018               	movlw	24
  4804  06E2  0021               	movlb	1	; select bank1
  4805  06E3  00DB               	movwf	??_key_application^(0+128)
  4806  06E4  085B               	movf	??_key_application^(0+128),w
  4807  06E5  0022               	movlb	2	; select bank2
  4808  06E6  00E8               	movwf	(_diswin1^(0+256)+4)
  4809                           
  4810                           ;main.c: 977: diswin1[5]= 0x25;
  4811  06E7  3025               	movlw	37
  4812  06E8  0021               	movlb	1	; select bank1
  4813  06E9  00DB               	movwf	??_key_application^(0+128)
  4814  06EA  085B               	movf	??_key_application^(0+128),w
  4815  06EB  0022               	movlb	2	; select bank2
  4816  06EC  00E9               	movwf	(_diswin1^(0+256)+5)
  4817                           
  4818                           ;main.c: 978: dispupdatef =1;
  4819  06ED  3001               	movlw	1
  4820  06EE  0021               	movlb	1	; select bank1
  4821  06EF  00DB               	movwf	??_key_application^(0+128)
  4822  06F0  085B               	movf	??_key_application^(0+128),w
  4823  06F1  0020               	movlb	0	; select bank0
  4824  06F2  00EF               	movwf	_dispupdatef	;volatile
  4825                           
  4826                           ;main.c: 979: }
  4827  06F3  2EF7               	goto	l4507
  4828  06F4                     l4505:	
  4829                           
  4830                           ;main.c: 980: else
  4831                           ;main.c: 981: {
  4832                           ;main.c: 982: igascntr = 0;
  4833  06F4  0023               	movlb	3	; select bank3
  4834  06F5  01BC               	clrf	_igascntr^(0+384)
  4835  06F6  01BD               	clrf	(_igascntr+1)^(0+384)
  4836  06F7                     l4507:	
  4837                           
  4838                           ;main.c: 983: }
  4839                           ;main.c: 985: dispupdatef =1;
  4840  06F7  3001               	movlw	1
  4841  06F8  0021               	movlb	1	; select bank1
  4842  06F9  00DB               	movwf	??_key_application^(0+128)
  4843  06FA  085B               	movf	??_key_application^(0+128),w
  4844  06FB  0020               	movlb	0	; select bank0
  4845  06FC  00EF               	movwf	_dispupdatef	;volatile
  4846                           
  4847                           ;main.c: 987: }
  4848  06FD  0008               	return
  4849  06FE                     l4509:	
  4850                           
  4851                           ;main.c: 988: else if(keypress==2)
  4852  06FE  0021               	movlb	1	; select bank1
  4853  06FF  085D               	movf	key_application@keypress^(0+128),w
  4854  0700  3A02               	xorlw	2
  4855  0701  1D03               	skipz
  4856  0702  2F90               	goto	l4547
  4857                           
  4858                           ;main.c: 989: {
  4859                           ;main.c: 990: inchcnt=10;
  4860  0703  300A               	movlw	10
  4861  0704  00DB               	movwf	??_key_application^(0+128)
  4862  0705  085B               	movf	??_key_application^(0+128),w
  4863  0706  0020               	movlb	0	; select bank0
  4864  0707  00EC               	movwf	_inchcnt
  4865  0708                     l4537:	
  4866                           ;main.c: 991: while(key==2)
  4867                           
  4868  0708  0021               	movlb	1	; select bank1
  4869  0709  086F               	movf	_key^(0+128),w	;volatile
  4870  070A  3A02               	xorlw	2
  4871  070B  1D03               	btfss	3,2
  4872  070C  2F6C               	goto	l4539
  4873                           
  4874                           ;main.c: 992: {
  4875                           ;main.c: 993: TypeU.TypeS.inch =1;
  4876  070D  0020               	movlb	0	; select bank0
  4877  070E  15E8               	bsf	_TypeU+1,3
  4878                           
  4879                           ;main.c: 996: diswin1[0] =0x13;
  4880  070F  3013               	movlw	19
  4881  0710  0021               	movlb	1	; select bank1
  4882  0711  00DB               	movwf	??_key_application^(0+128)
  4883  0712  085B               	movf	??_key_application^(0+128),w
  4884  0713  0022               	movlb	2	; select bank2
  4885  0714  00E4               	movwf	_diswin1^(0+256)
  4886                           
  4887                           ;main.c: 997: diswin1[1] =0x18;
  4888  0715  3018               	movlw	24
  4889  0716  0021               	movlb	1	; select bank1
  4890  0717  00DB               	movwf	??_key_application^(0+128)
  4891  0718  085B               	movf	??_key_application^(0+128),w
  4892  0719  0022               	movlb	2	; select bank2
  4893  071A  00E5               	movwf	(_diswin1^(0+256)+1)
  4894                           
  4895                           ;main.c: 998: diswin1[2] =0x0D;
  4896  071B  300D               	movlw	13
  4897  071C  0021               	movlb	1	; select bank1
  4898  071D  00DB               	movwf	??_key_application^(0+128)
  4899  071E  085B               	movf	??_key_application^(0+128),w
  4900  071F  0022               	movlb	2	; select bank2
  4901  0720  00E6               	movwf	(_diswin1^(0+256)+2)
  4902                           
  4903                           ;main.c: 999: Update_PWM(inchcnt*4);
  4904  0721  0020               	movlb	0	; select bank0
  4905  0722  086C               	movf	_inchcnt,w
  4906  0723  0021               	movlb	1	; select bank1
  4907  0724  00DB               	movwf	??_key_application^(0+128)
  4908  0725  01DC               	clrf	(??_key_application^(0+128)+1)
  4909  0726  35DB               	lslf	??_key_application^(0+128),f
  4910  0727  0DDC               	rlf	(??_key_application^(0+128)+1),f
  4911  0728  35DB               	lslf	??_key_application^(0+128),f
  4912  0729  0DDC               	rlf	(??_key_application^(0+128)+1),f
  4913  072A  085B               	movf	??_key_application^(0+128),w
  4914  072B  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  4915  072C  085C               	movf	(??_key_application+1)^(0+128),w
  4916  072D  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  4917  072E  3199  21A4  3186   	fcall	_Update_PWM
  4918                           
  4919                           ;main.c: 1000: disp_hex_window2(inchcnt);
  4920  0731  0020               	movlb	0	; select bank0
  4921  0732  086C               	movf	_inchcnt,w
  4922  0733  0021               	movlb	1	; select bank1
  4923  0734  00DB               	movwf	??_key_application^(0+128)
  4924  0735  01DC               	clrf	(??_key_application^(0+128)+1)
  4925  0736  085B               	movf	??_key_application^(0+128),w
  4926  0737  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  4927  0738  085C               	movf	(??_key_application+1)^(0+128),w
  4928  0739  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  4929  073A  319C  248B  3186   	fcall	_disp_hex_window2
  4930                           
  4931                           ;main.c: 1001: if(inchcnt<100)
  4932  073D  3064               	movlw	100
  4933  073E  0020               	movlb	0	; select bank0
  4934  073F  026C               	subwf	_inchcnt,w
  4935  0740  1803               	skipnc
  4936  0741  2F08               	goto	l4537
  4937                           
  4938                           ;main.c: 1002: {
  4939                           ;main.c: 1003: inchcnt=inchcnt+10;
  4940  0742  086C               	movf	_inchcnt,w
  4941  0743  3E0A               	addlw	10
  4942  0744  0021               	movlb	1	; select bank1
  4943  0745  00DB               	movwf	??_key_application^(0+128)
  4944  0746  085B               	movf	??_key_application^(0+128),w
  4945  0747  0020               	movlb	0	; select bank0
  4946  0748  00EC               	movwf	_inchcnt
  4947                           
  4948                           ;main.c: 1004: for(delinch1=0;delinch1<5;delinch1++)
  4949  0749  0023               	movlb	3	; select bank3
  4950  074A  01BA               	clrf	_delinch1^(0+384)
  4951  074B  01BB               	clrf	(_delinch1+1)^(0+384)
  4952  074C                     L9:	
  4953  074C  3000               	movlw	0
  4954  074D  023B               	subwf	(_delinch1+1)^(0+384),w
  4955  074E  3005               	movlw	5
  4956  074F  1903               	skipnz
  4957  0750  023A               	subwf	_delinch1^(0+384),w
  4958  0751  1803               	btfsc	3,0
  4959  0752  2F08               	goto	l4537
  4960                           
  4961                           ;main.c: 1005: for(delinch=0;delinch<50000;delinch++);
  4962  0753  01B8               	clrf	_delinch^(0+384)
  4963  0754  01B9               	clrf	(_delinch+1)^(0+384)
  4964  0755  30C3               	movlw	195
  4965  0756  0239               	subwf	(_delinch+1)^(0+384),w
  4966  0757  3050               	movlw	80
  4967  0758  1903               	skipnz
  4968  0759  0238               	subwf	_delinch^(0+384),w
  4969  075A  1803               	btfsc	3,0
  4970  075B  2F67               	goto	l4535
  4971  075C                     l4533:	
  4972  075C  3001               	movlw	1
  4973  075D  07B8               	addwf	_delinch^(0+384),f
  4974  075E  3000               	movlw	0
  4975  075F  3DB9               	addwfc	(_delinch+1)^(0+384),f
  4976  0760  30C3               	movlw	195
  4977  0761  0239               	subwf	(_delinch+1)^(0+384),w
  4978  0762  3050               	movlw	80
  4979  0763  1903               	skipnz
  4980  0764  0238               	subwf	_delinch^(0+384),w
  4981  0765  1C03               	skipc
  4982  0766  2F5C               	goto	l4533
  4983  0767                     l4535:	
  4984  0767  3001               	movlw	1
  4985  0768  07BA               	addwf	_delinch1^(0+384),f
  4986  0769  3000               	movlw	0
  4987  076A  3DBB               	addwfc	(_delinch1+1)^(0+384),f
  4988  076B  2F4C               	goto	L9
  4989  076C                     l4539:	
  4990                           
  4991                           ;main.c: 1006: }
  4992                           ;main.c: 1007: }
  4993                           ;main.c: 1008: Update_PWM(inchcnt*0);
  4994  076C  0020               	movlb	0	; select bank0
  4995  076D  086C               	movf	_inchcnt,w
  4996  076E  0021               	movlb	1	; select bank1
  4997  076F  00DB               	movwf	??_key_application^(0+128)
  4998  0770  01DC               	clrf	(??_key_application^(0+128)+1)
  4999  0771  085B               	movf	??_key_application^(0+128),w
  5000  0772  00A0               	movwf	___wmul@multiplier^(0+128)
  5001  0773  085C               	movf	(??_key_application+1)^(0+128),w
  5002  0774  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  5003  0775  3000               	movlw	0
  5004  0776  00A2               	movwf	___wmul@multiplicand^(0+128)
  5005  0777  3000               	movlw	0
  5006  0778  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  5007  0779  3199  2164  3186   	fcall	___wmul
  5008  077C  0021               	movlb	1	; select bank1
  5009  077D  0821               	movf	(?___wmul+1)^(0+128),w
  5010  077E  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  5011  077F  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  5012  0780  0820               	movf	?___wmul^(0+128),w
  5013  0781  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  5014  0782  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  5015  0783  3199  21A4         	fcall	_Update_PWM
  5016                           
  5017                           ;main.c: 1009: TypeU.TypeS.inch =0;
  5018  0785  0020               	movlb	0	; select bank0
  5019  0786  11E8               	bcf	_TypeU+1,3
  5020                           
  5021                           ;main.c: 1011: inchkeyon =0;
  5022  0787  0023               	movlb	3	; select bank3
  5023  0788  01DA               	clrf	_inchkeyon^(0+384)
  5024                           
  5025                           ;main.c: 1012: dispupdatef =1;
  5026  0789  3001               	movlw	1
  5027  078A  0021               	movlb	1	; select bank1
  5028  078B  00DB               	movwf	??_key_application^(0+128)
  5029  078C  085B               	movf	??_key_application^(0+128),w
  5030  078D  0020               	movlb	0	; select bank0
  5031  078E  00EF               	movwf	_dispupdatef	;volatile
  5032                           
  5033                           ;main.c: 1013: }
  5034  078F  0008               	return
  5035  0790                     l4547:	
  5036                           
  5037                           ;main.c: 1014: else if(keypress==3)
  5038  0790  0021               	movlb	1	; select bank1
  5039  0791  085D               	movf	key_application@keypress^(0+128),w
  5040  0792  3A03               	xorlw	3
  5041  0793  1D03               	skipz
  5042  0794  2FAA               	goto	l4559
  5043                           
  5044                           ;main.c: 1015: {
  5045                           ;main.c: 1019: if(TypeU.TypeS.twot==1)
  5046  0795  0020               	movlb	0	; select bank0
  5047  0796  1E67               	btfss	_TypeU,4
  5048  0797  2F9F               	goto	l753
  5049                           
  5050                           ;main.c: 1020: {
  5051                           ;main.c: 1021: TypeU.TypeS.twot=0;
  5052  0798  1267               	bcf	_TypeU,4
  5053                           
  5054                           ;main.c: 1022: TypeU.TypeS.fourt=1;
  5055  0799  16E7               	bsf	_TypeU,5
  5056                           
  5057                           ;main.c: 1023: wfstatusu.wfstatuss.twotfourtmode1=1;
  5058  079A  146E               	bsf	_wfstatusu,0
  5059                           
  5060                           ;main.c: 1024: cWf2t4tmodefg = 1;
  5061  079B  0022               	movlb	2	; select bank2
  5062  079C  01B4               	clrf	_cWf2t4tmodefg^(0+256)
  5063  079D  0AB4               	incf	_cWf2t4tmodefg^(0+256),f
  5064                           
  5065                           ;main.c: 1025: }
  5066  079E  2FA6               	goto	l4557
  5067  079F                     l753:	
  5068                           
  5069                           ;main.c: 1026: else if(TypeU.TypeS.fourt==1)
  5070  079F  1EE7               	btfss	_TypeU,5
  5071  07A0  2FA6               	goto	l4557
  5072                           
  5073                           ;main.c: 1027: {
  5074                           ;main.c: 1028: TypeU.TypeS.fourt=0;
  5075  07A1  12E7               	bcf	_TypeU,5
  5076                           
  5077                           ;main.c: 1029: TypeU.TypeS.twot =1;
  5078  07A2  1667               	bsf	_TypeU,4
  5079                           
  5080                           ;main.c: 1030: wfstatusu.wfstatuss.twotfourtmode1=0;
  5081  07A3  106E               	bcf	_wfstatusu,0
  5082                           
  5083                           ;main.c: 1031: cWf2t4tmodefg = 0;
  5084  07A4  0022               	movlb	2	; select bank2
  5085  07A5  01B4               	clrf	_cWf2t4tmodefg^(0+256)
  5086  07A6                     l4557:	
  5087                           
  5088                           ;main.c: 1032: }
  5089                           ;main.c: 1033: cEditfg = 1;
  5090  07A6  0022               	movlb	2	; select bank2
  5091  07A7  01B3               	clrf	_cEditfg^(0+256)
  5092  07A8  0AB3               	incf	_cEditfg^(0+256),f
  5093                           
  5094                           ;main.c: 1034: }
  5095  07A9  0008               	return
  5096  07AA                     l4559:	
  5097                           
  5098                           ;main.c: 1035: else if(keypress==4)
  5099  07AA  0021               	movlb	1	; select bank1
  5100  07AB  085D               	movf	key_application@keypress^(0+128),w
  5101  07AC  3A04               	xorlw	4
  5102  07AD  1D03               	skipz
  5103  07AE  2FCC               	goto	l4587
  5104                           
  5105                           ;main.c: 1036: {
  5106                           ;main.c: 1038: if(TypeU.TypeS.wirespeed==1)
  5107  07AF  0020               	movlb	0	; select bank0
  5108  07B0  1C67               	btfss	_TypeU,0
  5109  07B1  2FB7               	goto	l758
  5110                           
  5111                           ;main.c: 1039: {
  5112                           ;main.c: 1042: TypeU.TypeS.wirespeed=0;
  5113  07B2  1067               	bcf	_TypeU,0
  5114                           
  5115                           ;main.c: 1043: TypeU.TypeS.amp=1;
  5116  07B3  1468               	bsf	_TypeU+1,0
  5117                           
  5118                           ;main.c: 1044: TypeU.TypeS.thickness=0;
  5119  07B4  10E7               	bcf	_TypeU,1
  5120                           
  5121                           ;main.c: 1045: TypeDP.DPGROUP[0]=0x00;
  5122  07B5  01EB               	clrf	_TypeDP
  5123  07B6  2FC4               	goto	l4583
  5124  07B7                     l758:	
  5125                           ;main.c: 1048: }
  5126                           
  5127                           ;main.c: 1046: TypeDP.TypeD.digitdp5 =1;
  5128                           
  5129                           
  5130                           ;main.c: 1049: else if(TypeU.TypeS.amp==1)
  5131  07B7  1C68               	btfss	_TypeU+1,0
  5132  07B8  2FBD               	goto	l760
  5133                           
  5134                           ;main.c: 1050: {
  5135                           ;main.c: 1053: TypeU.TypeS.wirespeed=0;
  5136  07B9  1067               	bcf	_TypeU,0
  5137                           
  5138                           ;main.c: 1054: TypeU.TypeS.amp=0;
  5139  07BA  1068               	bcf	_TypeU+1,0
  5140                           
  5141                           ;main.c: 1055: TypeU.TypeS.thickness=1;
  5142  07BB  14E7               	bsf	_TypeU,1
  5143  07BC  2FC2               	goto	L10
  5144  07BD                     l760:	
  5145                           ;main.c: 1060: }
  5146                           
  5147                           ;main.c: 1058: TypeDP.TypeD.digitdp5 =1;
  5148                           
  5149                           ;main.c: 1057: TypeDP.TypeD.digitdp2 =1;
  5150                           
  5151                           ;main.c: 1056: TypeDP.DPGROUP[0]=0x00;
  5152                           
  5153                           
  5154                           ;main.c: 1061: else if(TypeU.TypeS.thickness==1)
  5155  07BD  1CE7               	btfss	_TypeU,1
  5156  07BE  2FC5               	goto	l4585
  5157                           
  5158                           ;main.c: 1062: {
  5159                           ;main.c: 1065: TypeU.TypeS.wirespeed=1;
  5160  07BF  1467               	bsf	_TypeU,0
  5161                           
  5162                           ;main.c: 1066: TypeU.TypeS.amp=0;
  5163  07C0  1068               	bcf	_TypeU+1,0
  5164                           
  5165                           ;main.c: 1067: TypeU.TypeS.thickness=0;
  5166  07C1  10E7               	bcf	_TypeU,1
  5167  07C2                     L10:	
  5168                           
  5169                           ;main.c: 1068: TypeDP.DPGROUP[0]=0x00;
  5170  07C2  01EB               	clrf	_TypeDP
  5171                           
  5172                           ;main.c: 1069: TypeDP.TypeD.digitdp2 =1;
  5173  07C3  14EB               	bsf	_TypeDP,1
  5174  07C4                     l4583:	
  5175                           
  5176                           ;main.c: 1070: TypeDP.TypeD.digitdp5 =1;
  5177  07C4  166B               	bsf	_TypeDP,4
  5178  07C5                     l4585:	
  5179                           
  5180                           ;main.c: 1072: }
  5181                           ;main.c: 1073: dispupdatef =1;
  5182  07C5  3001               	movlw	1
  5183  07C6  0021               	movlb	1	; select bank1
  5184  07C7  00DB               	movwf	??_key_application^(0+128)
  5185  07C8  085B               	movf	??_key_application^(0+128),w
  5186  07C9  0020               	movlb	0	; select bank0
  5187  07CA  00EF               	movwf	_dispupdatef	;volatile
  5188                           
  5189                           ;main.c: 1074: }
  5190  07CB  0008               	return
  5191  07CC                     l4587:	
  5192                           
  5193                           ;main.c: 1075: else if(keypress==0)
  5194  07CC  0021               	movlb	1	; select bank1
  5195  07CD  08DD               	movf	key_application@keypress^(0+128),f
  5196  07CE  1D03               	skipz
  5197  07CF  0008               	return
  5198                           
  5199                           ;main.c: 1076: {
  5200                           ;main.c: 1077: TypeU.TypeS.gason =0;
  5201  07D0  0020               	movlb	0	; select bank0
  5202  07D1  11E7               	bcf	_TypeU,3
  5203                           
  5204                           ;main.c: 1078: TypeU.TypeS.inch =0;
  5205  07D2  11E8               	bcf	_TypeU+1,3
  5206                           
  5207                           ;main.c: 1082: inchkeyon =0;
  5208  07D3  0023               	movlb	3	; select bank3
  5209  07D4  01DA               	clrf	_inchkeyon^(0+384)
  5210  07D5  0008               	return
  5211  07D6                     __end_of_key_application:	
  5212                           
  5213                           	psect	text8
  5214  1C8B                     __ptext8:	
  5215 ;; *************** function _disp_hex_window2 *****************
  5216 ;; Defined at:
  5217 ;;		line 164 in file "DISPLAY.C"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  hex_data        2    8[BANK1 ] unsigned int 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;		None               void
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0, pclath, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5231 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5234 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;Total ram usage:        3 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    4
  5238 ;; This function calls:
  5239 ;;		___lwdiv
  5240 ;;		___lwmod
  5241 ;; This function is called by:
  5242 ;;		_main
  5243 ;;		_key_application
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           
  5248                           ;psect for function _disp_hex_window2
  5249  1C8B                     _disp_hex_window2:	
  5250                           
  5251                           ;DISPLAY.C: 166: diswin1[5]= hex_data % 10;
  5252                           
  5253                           ;incstack = 0
  5254                           ; Regs used in _disp_hex_window2: [wreg+status,2+status,0+pclath+cstack]
  5255  1C8B  300A               	movlw	10
  5256  1C8C  0021               	movlb	1	; select bank1
  5257  1C8D  00A0               	movwf	___lwmod@divisor^(0+128)
  5258  1C8E  3000               	movlw	0
  5259  1C8F  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5260  1C90  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5261  1C91  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5262  1C92  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5263  1C93  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5264  1C94  01A2               	clrf	___lwmod@dividend^(0+128)
  5265  1C95  07A2               	addwf	___lwmod@dividend^(0+128),f
  5266  1C96  3199  21CB  319C   	fcall	___lwmod
  5267  1C99  0021               	movlb	1	; select bank1
  5268  1C9A  0820               	movf	?___lwmod^(0+128),w
  5269  1C9B  00AA               	movwf	??_disp_hex_window2^(0+128)
  5270  1C9C  082A               	movf	??_disp_hex_window2^(0+128),w
  5271  1C9D  0022               	movlb	2	; select bank2
  5272  1C9E  00E9               	movwf	(_diswin1^(0+256)+5)
  5273                           
  5274                           ;DISPLAY.C: 167: hex_data /= 10;
  5275  1C9F  300A               	movlw	10
  5276  1CA0  0021               	movlb	1	; select bank1
  5277  1CA1  00A0               	movwf	___lwdiv@divisor^(0+128)
  5278  1CA2  3000               	movlw	0
  5279  1CA3  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5280  1CA4  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5281  1CA5  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  5282  1CA6  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5283  1CA7  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5284  1CA8  01A2               	clrf	___lwdiv@dividend^(0+128)
  5285  1CA9  07A2               	addwf	___lwdiv@dividend^(0+128),f
  5286  1CAA  3199  21FA  319C   	fcall	___lwdiv
  5287  1CAD  0021               	movlb	1	; select bank1
  5288  1CAE  0821               	movf	(?___lwdiv+1)^(0+128),w
  5289  1CAF  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  5290  1CB0  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  5291  1CB1  0820               	movf	?___lwdiv^(0+128),w
  5292  1CB2  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  5293  1CB3  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  5294                           
  5295                           ;DISPLAY.C: 168: diswin1[4]= hex_data % 10;
  5296  1CB4  300A               	movlw	10
  5297  1CB5  00A0               	movwf	___lwmod@divisor^(0+128)
  5298  1CB6  3000               	movlw	0
  5299  1CB7  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5300  1CB8  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5301  1CB9  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5302  1CBA  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5303  1CBB  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5304  1CBC  01A2               	clrf	___lwmod@dividend^(0+128)
  5305  1CBD  07A2               	addwf	___lwmod@dividend^(0+128),f
  5306  1CBE  3199  21CB  319C   	fcall	___lwmod
  5307  1CC1  0021               	movlb	1	; select bank1
  5308  1CC2  0820               	movf	?___lwmod^(0+128),w
  5309  1CC3  00AA               	movwf	??_disp_hex_window2^(0+128)
  5310  1CC4  082A               	movf	??_disp_hex_window2^(0+128),w
  5311  1CC5  0022               	movlb	2	; select bank2
  5312  1CC6  00E8               	movwf	(_diswin1^(0+256)+4)
  5313                           
  5314                           ;DISPLAY.C: 169: hex_data /= 10;
  5315  1CC7  300A               	movlw	10
  5316  1CC8  0021               	movlb	1	; select bank1
  5317  1CC9  00A0               	movwf	___lwdiv@divisor^(0+128)
  5318  1CCA  3000               	movlw	0
  5319  1CCB  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5320  1CCC  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5321  1CCD  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  5322  1CCE  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5323  1CCF  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5324  1CD0  01A2               	clrf	___lwdiv@dividend^(0+128)
  5325  1CD1  07A2               	addwf	___lwdiv@dividend^(0+128),f
  5326  1CD2  3199  21FA  319C   	fcall	___lwdiv
  5327  1CD5  0021               	movlb	1	; select bank1
  5328  1CD6  0821               	movf	(?___lwdiv+1)^(0+128),w
  5329  1CD7  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  5330  1CD8  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  5331  1CD9  0820               	movf	?___lwdiv^(0+128),w
  5332  1CDA  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  5333  1CDB  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  5334                           
  5335                           ;DISPLAY.C: 170: diswin1[3]= hex_data % 10;
  5336  1CDC  300A               	movlw	10
  5337  1CDD  00A0               	movwf	___lwmod@divisor^(0+128)
  5338  1CDE  3000               	movlw	0
  5339  1CDF  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5340  1CE0  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5341  1CE1  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5342  1CE2  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5343  1CE3  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5344  1CE4  01A2               	clrf	___lwmod@dividend^(0+128)
  5345  1CE5  07A2               	addwf	___lwmod@dividend^(0+128),f
  5346  1CE6  3199  21CB         	fcall	___lwmod
  5347  1CE8  0021               	movlb	1	; select bank1
  5348  1CE9  0820               	movf	?___lwmod^(0+128),w
  5349  1CEA  00AA               	movwf	??_disp_hex_window2^(0+128)
  5350  1CEB  082A               	movf	??_disp_hex_window2^(0+128),w
  5351  1CEC  0022               	movlb	2	; select bank2
  5352  1CED  00E7               	movwf	(_diswin1^(0+256)+3)
  5353                           
  5354                           ;DISPLAY.C: 171: diswin1[6]=0x00;
  5355  1CEE  01EA               	clrf	(_diswin1^(0+256)+6)
  5356                           
  5357                           ;DISPLAY.C: 172: diswin1[7]=0x00;
  5358  1CEF  01EB               	clrf	(_diswin1^(0+256)+7)
  5359  1CF0  0008               	return
  5360  1CF1                     __end_of_disp_hex_window2:	
  5361                           
  5362                           	psect	text9
  5363  1C27                     __ptext9:	
  5364 ;; *************** function _disp_hex_window1 *****************
  5365 ;; Defined at:
  5366 ;;		line 152 in file "DISPLAY.C"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  hex_data        2    8[BANK1 ] unsigned int 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;		None               void
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0, pclath, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5380 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5383 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5384 ;;Total ram usage:        3 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    4
  5387 ;; This function calls:
  5388 ;;		___lwdiv
  5389 ;;		___lwmod
  5390 ;; This function is called by:
  5391 ;;		_main
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           
  5396                           ;psect for function _disp_hex_window1
  5397  1C27                     _disp_hex_window1:	
  5398                           
  5399                           ;DISPLAY.C: 155: diswin1[2]= hex_data % 10;
  5400                           
  5401                           ;incstack = 0
  5402                           ; Regs used in _disp_hex_window1: [wreg+status,2+status,0+pclath+cstack]
  5403  1C27  300A               	movlw	10
  5404  1C28  0021               	movlb	1	; select bank1
  5405  1C29  00A0               	movwf	___lwmod@divisor^(0+128)
  5406  1C2A  3000               	movlw	0
  5407  1C2B  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5408  1C2C  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5409  1C2D  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5410  1C2E  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5411  1C2F  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5412  1C30  01A2               	clrf	___lwmod@dividend^(0+128)
  5413  1C31  07A2               	addwf	___lwmod@dividend^(0+128),f
  5414  1C32  3199  21CB  319C   	fcall	___lwmod
  5415  1C35  0021               	movlb	1	; select bank1
  5416  1C36  0820               	movf	?___lwmod^(0+128),w
  5417  1C37  00AA               	movwf	??_disp_hex_window1^(0+128)
  5418  1C38  082A               	movf	??_disp_hex_window1^(0+128),w
  5419  1C39  0022               	movlb	2	; select bank2
  5420  1C3A  00E6               	movwf	(_diswin1^(0+256)+2)
  5421                           
  5422                           ;DISPLAY.C: 156: hex_data /= 10;
  5423  1C3B  300A               	movlw	10
  5424  1C3C  0021               	movlb	1	; select bank1
  5425  1C3D  00A0               	movwf	___lwdiv@divisor^(0+128)
  5426  1C3E  3000               	movlw	0
  5427  1C3F  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5428  1C40  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5429  1C41  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  5430  1C42  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5431  1C43  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5432  1C44  01A2               	clrf	___lwdiv@dividend^(0+128)
  5433  1C45  07A2               	addwf	___lwdiv@dividend^(0+128),f
  5434  1C46  3199  21FA  319C   	fcall	___lwdiv
  5435  1C49  0021               	movlb	1	; select bank1
  5436  1C4A  0821               	movf	(?___lwdiv+1)^(0+128),w
  5437  1C4B  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  5438  1C4C  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  5439  1C4D  0820               	movf	?___lwdiv^(0+128),w
  5440  1C4E  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  5441  1C4F  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  5442                           
  5443                           ;DISPLAY.C: 157: diswin1[1]= hex_data % 10;
  5444  1C50  300A               	movlw	10
  5445  1C51  00A0               	movwf	___lwmod@divisor^(0+128)
  5446  1C52  3000               	movlw	0
  5447  1C53  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5448  1C54  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5449  1C55  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5450  1C56  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5451  1C57  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5452  1C58  01A2               	clrf	___lwmod@dividend^(0+128)
  5453  1C59  07A2               	addwf	___lwmod@dividend^(0+128),f
  5454  1C5A  3199  21CB  319C   	fcall	___lwmod
  5455  1C5D  0021               	movlb	1	; select bank1
  5456  1C5E  0820               	movf	?___lwmod^(0+128),w
  5457  1C5F  00AA               	movwf	??_disp_hex_window1^(0+128)
  5458  1C60  082A               	movf	??_disp_hex_window1^(0+128),w
  5459  1C61  0022               	movlb	2	; select bank2
  5460  1C62  00E5               	movwf	(_diswin1^(0+256)+1)
  5461                           
  5462                           ;DISPLAY.C: 158: hex_data /= 10;
  5463  1C63  300A               	movlw	10
  5464  1C64  0021               	movlb	1	; select bank1
  5465  1C65  00A0               	movwf	___lwdiv@divisor^(0+128)
  5466  1C66  3000               	movlw	0
  5467  1C67  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5468  1C68  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5469  1C69  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  5470  1C6A  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5471  1C6B  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5472  1C6C  01A2               	clrf	___lwdiv@dividend^(0+128)
  5473  1C6D  07A2               	addwf	___lwdiv@dividend^(0+128),f
  5474  1C6E  3199  21FA  319C   	fcall	___lwdiv
  5475  1C71  0021               	movlb	1	; select bank1
  5476  1C72  0821               	movf	(?___lwdiv+1)^(0+128),w
  5477  1C73  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  5478  1C74  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  5479  1C75  0820               	movf	?___lwdiv^(0+128),w
  5480  1C76  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  5481  1C77  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  5482                           
  5483                           ;DISPLAY.C: 159: diswin1[0]= hex_data % 10;
  5484  1C78  300A               	movlw	10
  5485  1C79  00A0               	movwf	___lwmod@divisor^(0+128)
  5486  1C7A  3000               	movlw	0
  5487  1C7B  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5488  1C7C  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5489  1C7D  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5490  1C7E  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5491  1C7F  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5492  1C80  01A2               	clrf	___lwmod@dividend^(0+128)
  5493  1C81  07A2               	addwf	___lwmod@dividend^(0+128),f
  5494  1C82  3199  21CB         	fcall	___lwmod
  5495  1C84  0021               	movlb	1	; select bank1
  5496  1C85  0820               	movf	?___lwmod^(0+128),w
  5497  1C86  00AA               	movwf	??_disp_hex_window1^(0+128)
  5498  1C87  082A               	movf	??_disp_hex_window1^(0+128),w
  5499  1C88  0022               	movlb	2	; select bank2
  5500  1C89  00E4               	movwf	_diswin1^(0+256)
  5501  1C8A  0008               	return
  5502  1C8B                     __end_of_disp_hex_window1:	
  5503                           
  5504                           	psect	text10
  5505  19CB                     __ptext10:	
  5506 ;; *************** function ___lwmod *****************
  5507 ;; Defined at:
  5508 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwmod.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  divisor         2    0[BANK1 ] unsigned int 
  5511 ;;  dividend        2    2[BANK1 ] unsigned int 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  counter         1    5[BANK1 ] unsigned char 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  2    0[BANK1 ] unsigned int 
  5516 ;; Registers used:
  5517 ;;		wreg, status,2, status,0
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5523 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;Total ram usage:        6 bytes
  5528 ;; Hardware stack levels used:    1
  5529 ;; Hardware stack levels required when called:    3
  5530 ;; This function calls:
  5531 ;;		Nothing
  5532 ;; This function is called by:
  5533 ;;		_disp_hex_window1
  5534 ;;		_disp_hex_window2
  5535 ;;		_disp_hex_window11
  5536 ;;		_disp_hex_window22
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           
  5541                           ;psect for function ___lwmod
  5542  19CB                     ___lwmod:	
  5543                           
  5544                           ;incstack = 0
  5545                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5546  19CB  0021               	movlb	1	; select bank1
  5547  19CC  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5548  19CD  0420               	iorwf	___lwmod@divisor^(0+128),w
  5549  19CE  1903               	skipnz
  5550  19CF  29F3               	goto	l3597
  5551  19D0  01A5               	clrf	___lwmod@counter^(0+128)
  5552  19D1  0AA5               	incf	___lwmod@counter^(0+128),f
  5553  19D2                     l3587:	
  5554  19D2  1BA1               	btfsc	(___lwmod@divisor+1)^(0+128),7
  5555  19D3  29DE               	goto	l3589
  5556  19D4  3001               	movlw	1
  5557  19D5                     u4345:	
  5558  19D5  35A0               	lslf	___lwmod@divisor^(0+128),f
  5559  19D6  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  5560  19D7  0B89               	decfsz	9,f
  5561  19D8  29D5               	goto	u4345
  5562  19D9  3001               	movlw	1
  5563  19DA  00A4               	movwf	??___lwmod^(0+128)
  5564  19DB  0824               	movf	??___lwmod^(0+128),w
  5565  19DC  07A5               	addwf	___lwmod@counter^(0+128),f
  5566  19DD  29D2               	goto	l3587
  5567  19DE                     l3589:	
  5568  19DE  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5569  19DF  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  5570  19E0  1D03               	skipz
  5571  19E1  29E4               	goto	u4365
  5572  19E2  0820               	movf	___lwmod@divisor^(0+128),w
  5573  19E3  0222               	subwf	___lwmod@dividend^(0+128),w
  5574  19E4                     u4365:	
  5575  19E4  1C03               	skipc
  5576  19E5  29EA               	goto	l3593
  5577  19E6  0820               	movf	___lwmod@divisor^(0+128),w
  5578  19E7  02A2               	subwf	___lwmod@dividend^(0+128),f
  5579  19E8  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5580  19E9  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
  5581  19EA                     l3593:	
  5582  19EA  3001               	movlw	1
  5583  19EB                     u4375:	
  5584  19EB  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
  5585  19EC  0CA0               	rrf	___lwmod@divisor^(0+128),f
  5586  19ED  0B89               	decfsz	9,f
  5587  19EE  29EB               	goto	u4375
  5588  19EF  3001               	movlw	1
  5589  19F0  02A5               	subwf	___lwmod@counter^(0+128),f
  5590  19F1  1D03               	btfss	3,2
  5591  19F2  29DE               	goto	l3589
  5592  19F3                     l3597:	
  5593  19F3  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  5594  19F4  01A1               	clrf	(?___lwmod+1)^(0+128)
  5595  19F5  07A1               	addwf	(?___lwmod+1)^(0+128),f
  5596  19F6  0822               	movf	___lwmod@dividend^(0+128),w
  5597  19F7  01A0               	clrf	?___lwmod^(0+128)
  5598  19F8  07A0               	addwf	?___lwmod^(0+128),f
  5599  19F9  0008               	return
  5600  19FA                     __end_of___lwmod:	
  5601                           
  5602                           	psect	text11
  5603  19FA                     __ptext11:	
  5604 ;; *************** function ___lwdiv *****************
  5605 ;; Defined at:
  5606 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  divisor         2    0[BANK1 ] unsigned int 
  5609 ;;  dividend        2    2[BANK1 ] unsigned int 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  quotient        2    5[BANK1 ] unsigned int 
  5612 ;;  counter         1    7[BANK1 ] unsigned char 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  2    0[BANK1 ] unsigned int 
  5615 ;; Registers used:
  5616 ;;		wreg, status,2, status,0
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5622 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5624 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5625 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;Total ram usage:        8 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    3
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_disp_hex_window1
  5633 ;;		_disp_hex_window2
  5634 ;;		_disp_hex_window11
  5635 ;;		_disp_hex_window22
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           
  5640                           ;psect for function ___lwdiv
  5641  19FA                     ___lwdiv:	
  5642                           
  5643                           ;incstack = 0
  5644                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5645  19FA  0021               	movlb	1	; select bank1
  5646  19FB  01A5               	clrf	___lwdiv@quotient^(0+128)
  5647  19FC  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  5648  19FD  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  5649  19FE  0420               	iorwf	___lwdiv@divisor^(0+128),w
  5650  19FF  1903               	skipnz
  5651  1A00  2A2A               	goto	l3575
  5652  1A01  01A7               	clrf	___lwdiv@counter^(0+128)
  5653  1A02  0AA7               	incf	___lwdiv@counter^(0+128),f
  5654  1A03                     l3563:	
  5655  1A03  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  5656  1A04  2A0F               	goto	l3565
  5657  1A05  3001               	movlw	1
  5658  1A06                     u4275:	
  5659  1A06  35A0               	lslf	___lwdiv@divisor^(0+128),f
  5660  1A07  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  5661  1A08  0B89               	decfsz	9,f
  5662  1A09  2A06               	goto	u4275
  5663  1A0A  3001               	movlw	1
  5664  1A0B  00A4               	movwf	??___lwdiv^(0+128)
  5665  1A0C  0824               	movf	??___lwdiv^(0+128),w
  5666  1A0D  07A7               	addwf	___lwdiv@counter^(0+128),f
  5667  1A0E  2A03               	goto	l3563
  5668  1A0F                     l3565:	
  5669  1A0F  3001               	movlw	1
  5670  1A10                     u4295:	
  5671  1A10  35A5               	lslf	___lwdiv@quotient^(0+128),f
  5672  1A11  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  5673  1A12  0B89               	decfsz	9,f
  5674  1A13  2A10               	goto	u4295
  5675  1A14  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  5676  1A15  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  5677  1A16  1D03               	skipz
  5678  1A17  2A1A               	goto	u4305
  5679  1A18  0820               	movf	___lwdiv@divisor^(0+128),w
  5680  1A19  0222               	subwf	___lwdiv@dividend^(0+128),w
  5681  1A1A                     u4305:	
  5682  1A1A  1C03               	skipc
  5683  1A1B  2A21               	goto	l3571
  5684  1A1C  0820               	movf	___lwdiv@divisor^(0+128),w
  5685  1A1D  02A2               	subwf	___lwdiv@dividend^(0+128),f
  5686  1A1E  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  5687  1A1F  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  5688  1A20  1425               	bsf	___lwdiv@quotient^(0+128),0
  5689  1A21                     l3571:	
  5690  1A21  3001               	movlw	1
  5691  1A22                     u4315:	
  5692  1A22  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  5693  1A23  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  5694  1A24  0B89               	decfsz	9,f
  5695  1A25  2A22               	goto	u4315
  5696  1A26  3001               	movlw	1
  5697  1A27  02A7               	subwf	___lwdiv@counter^(0+128),f
  5698  1A28  1D03               	btfss	3,2
  5699  1A29  2A0F               	goto	l3565
  5700  1A2A                     l3575:	
  5701  1A2A  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  5702  1A2B  01A1               	clrf	(?___lwdiv+1)^(0+128)
  5703  1A2C  07A1               	addwf	(?___lwdiv+1)^(0+128),f
  5704  1A2D  0825               	movf	___lwdiv@quotient^(0+128),w
  5705  1A2E  01A0               	clrf	?___lwdiv^(0+128)
  5706  1A2F  07A0               	addwf	?___lwdiv^(0+128),f
  5707  1A30  0008               	return
  5708  1A31                     __end_of___lwdiv:	
  5709                           
  5710                           	psect	text12
  5711  116B                     __ptext12:	
  5712 ;; *************** function _detect_display_error *****************
  5713 ;; Defined at:
  5714 ;;		line 1263 in file "main.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;		None
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;		None
  5719 ;; Return value:  Size  Location     Type
  5720 ;;		None               void
  5721 ;; Registers used:
  5722 ;;		wreg, status,2, status,0, pclath, cstack
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5730 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5731 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5732 ;;Total ram usage:        1 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; Hardware stack levels required when called:    4
  5735 ;; This function calls:
  5736 ;;		_Update_PWM
  5737 ;; This function is called by:
  5738 ;;		_main
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           
  5743                           ;psect for function _detect_display_error
  5744  116B                     _detect_display_error:	
  5745                           
  5746                           ;main.c: 1266: pstowfstru.pstowfstrs.error_code1=erroru.errorstatusbyte[0];
  5747                           
  5748                           ;incstack = 0
  5749                           ; Regs used in _detect_display_error: [wreg+status,2+status,0+pclath+cstack]
  5750  116B  0022               	movlb	2	; select bank2
  5751  116C  085F               	movf	_erroru^(0+256),w
  5752  116D  0021               	movlb	1	; select bank1
  5753  116E  00DB               	movwf	??_detect_display_error^(0+128)
  5754  116F  085B               	movf	??_detect_display_error^(0+128),w
  5755  1170  0024               	movlb	4	; select bank4
  5756  1171  00D4               	movwf	(_pstowfstru^(0+512)+16)
  5757                           
  5758                           ;main.c: 1267: pstowfstru.pstowfstrs.error_code2=erroru.errorstatusbyte[1];
  5759  1172  0022               	movlb	2	; select bank2
  5760  1173  0860               	movf	(_erroru^(0+256)+1),w
  5761  1174  0021               	movlb	1	; select bank1
  5762  1175  00DB               	movwf	??_detect_display_error^(0+128)
  5763  1176  085B               	movf	??_detect_display_error^(0+128),w
  5764  1177  0024               	movlb	4	; select bank4
  5765  1178  00D5               	movwf	(_pstowfstru^(0+512)+17)
  5766                           
  5767                           ;main.c: 1269: if(erroru.errors.uv_er1==1)
  5768  1179  0022               	movlb	2	; select bank2
  5769  117A  1C5F               	btfss	_erroru^(0+256),0
  5770  117B  2985               	goto	l805
  5771                           
  5772                           ;main.c: 1270: {
  5773                           ;main.c: 1271: universal_error=1;
  5774  117C  3001               	movlw	1
  5775  117D  0021               	movlb	1	; select bank1
  5776  117E  00DB               	movwf	??_detect_display_error^(0+128)
  5777  117F  085B               	movf	??_detect_display_error^(0+128),w
  5778  1180  0022               	movlb	2	; select bank2
  5779  1181  00DB               	movwf	_universal_error^(0+256)	;volatile
  5780                           
  5781                           ;main.c: 1272: diswin1[5]=1;
  5782  1182  01E9               	clrf	(_diswin1^(0+256)+5)
  5783  1183  0AE9               	incf	(_diswin1^(0+256)+5),f
  5784                           
  5785                           ;main.c: 1273: }
  5786  1184  29E9               	goto	l4629
  5787  1185                     l805:	
  5788                           
  5789                           ;main.c: 1274: else if(erroru.errors.ov_er2==1)
  5790  1185  1CDF               	btfss	_erroru^(0+256),1
  5791  1186  298F               	goto	l807
  5792                           
  5793                           ;main.c: 1275: {
  5794                           ;main.c: 1276: universal_error=1;
  5795  1187  3001               	movlw	1
  5796  1188  0021               	movlb	1	; select bank1
  5797  1189  00DB               	movwf	??_detect_display_error^(0+128)
  5798  118A  085B               	movf	??_detect_display_error^(0+128),w
  5799  118B  0022               	movlb	2	; select bank2
  5800  118C  00DB               	movwf	_universal_error^(0+256)	;volatile
  5801                           
  5802                           ;main.c: 1277: diswin1[5]=2;
  5803  118D  3002               	movlw	2
  5804  118E  29D6               	goto	L16
  5805  118F                     l807:	
  5806                           ;main.c: 1278: }
  5807                           
  5808                           
  5809                           ;main.c: 1279: else if(erroru.errors.th_er3==1)
  5810  118F  1D5F               	btfss	_erroru^(0+256),2
  5811  1190  2999               	goto	l809
  5812                           
  5813                           ;main.c: 1280: {
  5814                           ;main.c: 1281: universal_error=1;
  5815  1191  3001               	movlw	1
  5816  1192  0021               	movlb	1	; select bank1
  5817  1193  00DB               	movwf	??_detect_display_error^(0+128)
  5818  1194  085B               	movf	??_detect_display_error^(0+128),w
  5819  1195  0022               	movlb	2	; select bank2
  5820  1196  00DB               	movwf	_universal_error^(0+256)	;volatile
  5821                           
  5822                           ;main.c: 1282: diswin1[5]=3;
  5823  1197  3003               	movlw	3
  5824  1198  29D6               	goto	L16
  5825  1199                     l809:	
  5826                           ;main.c: 1283: }
  5827                           
  5828                           
  5829                           ;main.c: 1284: else if(erroru.errors.no_curr_er4==1)
  5830  1199  1DDF               	btfss	_erroru^(0+256),3
  5831  119A  29A3               	goto	l811
  5832                           
  5833                           ;main.c: 1285: {
  5834                           ;main.c: 1286: universal_error=1;
  5835  119B  3001               	movlw	1
  5836  119C  0021               	movlb	1	; select bank1
  5837  119D  00DB               	movwf	??_detect_display_error^(0+128)
  5838  119E  085B               	movf	??_detect_display_error^(0+128),w
  5839  119F  0022               	movlb	2	; select bank2
  5840  11A0  00DB               	movwf	_universal_error^(0+256)	;volatile
  5841                           
  5842                           ;main.c: 1287: diswin1[5]=4;
  5843  11A1  3004               	movlw	4
  5844  11A2  29D6               	goto	L16
  5845  11A3                     l811:	
  5846                           ;main.c: 1288: }
  5847                           
  5848                           
  5849                           ;main.c: 1289: else if(erroru.errors.motor_over_ld_er5==1)
  5850  11A3  1E5F               	btfss	_erroru^(0+256),4
  5851  11A4  29AD               	goto	l813
  5852                           
  5853                           ;main.c: 1290: {
  5854                           ;main.c: 1291: universal_error=1;
  5855  11A5  3001               	movlw	1
  5856  11A6  0021               	movlb	1	; select bank1
  5857  11A7  00DB               	movwf	??_detect_display_error^(0+128)
  5858  11A8  085B               	movf	??_detect_display_error^(0+128),w
  5859  11A9  0022               	movlb	2	; select bank2
  5860  11AA  00DB               	movwf	_universal_error^(0+256)	;volatile
  5861                           
  5862                           ;main.c: 1292: diswin1[5]=5;
  5863  11AB  3005               	movlw	5
  5864  11AC  29D6               	goto	L16
  5865  11AD                     l813:	
  5866                           ;main.c: 1293: }
  5867                           
  5868                           
  5869                           ;main.c: 1294: else if(erroru.errors.wirefdr_er6==1)
  5870  11AD  1EDF               	btfss	_erroru^(0+256),5
  5871  11AE  29B7               	goto	l815
  5872                           
  5873                           ;main.c: 1295: {
  5874                           ;main.c: 1296: universal_error=1;
  5875  11AF  3001               	movlw	1
  5876  11B0  0021               	movlb	1	; select bank1
  5877  11B1  00DB               	movwf	??_detect_display_error^(0+128)
  5878  11B2  085B               	movf	??_detect_display_error^(0+128),w
  5879  11B3  0022               	movlb	2	; select bank2
  5880  11B4  00DB               	movwf	_universal_error^(0+256)	;volatile
  5881                           
  5882                           ;main.c: 1297: diswin1[5]=6;
  5883  11B5  3006               	movlw	6
  5884  11B6  29D6               	goto	L16
  5885  11B7                     l815:	
  5886                           ;main.c: 1298: }
  5887                           
  5888                           
  5889                           ;main.c: 1299: else if(erroru.errors.water_press_er7==1 && ( (weldmode=='P') || (weldmod
      +                          e=='G') ) )
  5890  11B7  1F5F               	btfss	_erroru^(0+256),6
  5891  11B8  29CA               	goto	l4617
  5892  11B9  0020               	movlb	0	; select bank0
  5893  11BA  0866               	movf	_weldmode,w	;volatile
  5894  11BB  3A50               	xorlw	80
  5895  11BC  1903               	skipnz
  5896  11BD  29C2               	goto	l4615
  5897  11BE  0866               	movf	_weldmode,w	;volatile
  5898  11BF  3A47               	xorlw	71
  5899  11C0  1D03               	skipz
  5900  11C1  29CA               	goto	l4617
  5901  11C2                     l4615:	
  5902                           
  5903                           ;main.c: 1300: {
  5904                           ;main.c: 1301: universal_error=1;
  5905  11C2  3001               	movlw	1
  5906  11C3  0021               	movlb	1	; select bank1
  5907  11C4  00DB               	movwf	??_detect_display_error^(0+128)
  5908  11C5  085B               	movf	??_detect_display_error^(0+128),w
  5909  11C6  0022               	movlb	2	; select bank2
  5910  11C7  00DB               	movwf	_universal_error^(0+256)	;volatile
  5911                           
  5912                           ;main.c: 1302: diswin1[5]=7;
  5913  11C8  3007               	movlw	7
  5914  11C9  29D6               	goto	L16
  5915  11CA                     l4617:	
  5916                           ;main.c: 1303: }
  5917                           
  5918                           
  5919                           ;main.c: 1304: else if(error8==1)
  5920  11CA  0022               	movlb	2	; select bank2
  5921  11CB  083E               	movf	_error8^(0+256),w	;volatile
  5922  11CC  3A01               	xorlw	1
  5923  11CD  1D03               	skipz
  5924  11CE  29DC               	goto	l821
  5925                           
  5926                           ;main.c: 1305: {
  5927                           ;main.c: 1306: universal_error=1;
  5928  11CF  3001               	movlw	1
  5929  11D0  0021               	movlb	1	; select bank1
  5930  11D1  00DB               	movwf	??_detect_display_error^(0+128)
  5931  11D2  085B               	movf	??_detect_display_error^(0+128),w
  5932  11D3  0022               	movlb	2	; select bank2
  5933  11D4  00DB               	movwf	_universal_error^(0+256)	;volatile
  5934                           
  5935                           ;main.c: 1307: diswin1[5]=8;
  5936  11D5  3008               	movlw	8
  5937  11D6                     L16:	
  5938  11D6  0021               	movlb	1	; select bank1
  5939  11D7  00DB               	movwf	??_detect_display_error^(0+128)
  5940  11D8  085B               	movf	??_detect_display_error^(0+128),w
  5941  11D9  0022               	movlb	2	; select bank2
  5942  11DA  00E9               	movwf	(_diswin1^(0+256)+5)
  5943                           
  5944                           ;main.c: 1308: }
  5945  11DB  29E9               	goto	l4629
  5946  11DC                     l821:	
  5947                           
  5948                           ;main.c: 1309: else if(erroru.errors.motor_fb_err==1)
  5949  11DC  1D60               	btfss	(_erroru^(0+256)+1),2
  5950  11DD  29E8               	goto	l4627
  5951                           
  5952                           ;main.c: 1310: {
  5953                           ;main.c: 1311: universal_error=1;
  5954  11DE  3001               	movlw	1
  5955  11DF  0021               	movlb	1	; select bank1
  5956  11E0  00DB               	movwf	??_detect_display_error^(0+128)
  5957  11E1  085B               	movf	??_detect_display_error^(0+128),w
  5958  11E2  0022               	movlb	2	; select bank2
  5959  11E3  00DB               	movwf	_universal_error^(0+256)	;volatile
  5960                           
  5961                           ;main.c: 1312: diswin1[4]=1;
  5962  11E4  01E8               	clrf	(_diswin1^(0+256)+4)
  5963  11E5  0AE8               	incf	(_diswin1^(0+256)+4),f
  5964                           
  5965                           ;main.c: 1313: diswin1[5]=0;
  5966  11E6  01E9               	clrf	(_diswin1^(0+256)+5)
  5967                           
  5968                           ;main.c: 1314: }
  5969  11E7  29E9               	goto	l4629
  5970  11E8                     l4627:	
  5971                           
  5972                           ;main.c: 1315: else
  5973                           ;main.c: 1316: universal_error=0;
  5974  11E8  01DB               	clrf	_universal_error^(0+256)	;volatile
  5975  11E9                     l4629:	
  5976                           
  5977                           ;main.c: 1318: if(universal_error==1)
  5978  11E9  085B               	movf	_universal_error^(0+256),w	;volatile
  5979  11EA  3A01               	xorlw	1
  5980  11EB  1D03               	skipz
  5981  11EC  0008               	return
  5982                           
  5983                           ;main.c: 1319: {
  5984                           ;main.c: 1320: universal_error_latch=1;
  5985  11ED  3001               	movlw	1
  5986  11EE  0021               	movlb	1	; select bank1
  5987  11EF  00DB               	movwf	??_detect_display_error^(0+128)
  5988  11F0  085B               	movf	??_detect_display_error^(0+128),w
  5989  11F1  0022               	movlb	2	; select bank2
  5990  11F2  00DC               	movwf	_universal_error_latch^(0+256)	;volatile
  5991                           
  5992                           ;main.c: 1321: diswin1[0]=0x0F;
  5993  11F3  300F               	movlw	15
  5994  11F4  0021               	movlb	1	; select bank1
  5995  11F5  00DB               	movwf	??_detect_display_error^(0+128)
  5996  11F6  085B               	movf	??_detect_display_error^(0+128),w
  5997  11F7  0022               	movlb	2	; select bank2
  5998  11F8  00E4               	movwf	_diswin1^(0+256)
  5999                           
  6000                           ;main.c: 1322: diswin1[1]=0x1C;
  6001  11F9  301C               	movlw	28
  6002  11FA  0021               	movlb	1	; select bank1
  6003  11FB  00DB               	movwf	??_detect_display_error^(0+128)
  6004  11FC  085B               	movf	??_detect_display_error^(0+128),w
  6005  11FD  0022               	movlb	2	; select bank2
  6006  11FE  00E5               	movwf	(_diswin1^(0+256)+1)
  6007                           
  6008                           ;main.c: 1323: diswin1[2]=0x1C;
  6009  11FF  301C               	movlw	28
  6010  1200  0021               	movlb	1	; select bank1
  6011  1201  00DB               	movwf	??_detect_display_error^(0+128)
  6012  1202  085B               	movf	??_detect_display_error^(0+128),w
  6013  1203  0022               	movlb	2	; select bank2
  6014  1204  00E6               	movwf	(_diswin1^(0+256)+2)
  6015                           
  6016                           ;main.c: 1325: diswin1[3]=0;
  6017  1205  01E7               	clrf	(_diswin1^(0+256)+3)
  6018                           
  6019                           ;main.c: 1326: diswin1[4]=0;
  6020  1206  01E8               	clrf	(_diswin1^(0+256)+4)
  6021                           
  6022                           ;main.c: 1328: PORTCbits.RC3 =0;
  6023  1207  0020               	movlb	0	; select bank0
  6024  1208  118E               	bcf	14,3	;volatile
  6025                           
  6026                           ;main.c: 1329: Update_PWM(0);
  6027  1209  3000               	movlw	0
  6028  120A  0021               	movlb	1	; select bank1
  6029  120B  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  6030  120C  3000               	movlw	0
  6031  120D  00D4               	movwf	(Update_PWM@setwsduty^(0+128)+1)
  6032  120E  3199  21A4         	fcall	_Update_PWM
  6033                           
  6034                           ;main.c: 1330: TypeDP.DPGROUP[0]=0;
  6035  1210  0020               	movlb	0	; select bank0
  6036  1211  01EB               	clrf	_TypeDP
  6037                           
  6038                           ;main.c: 1331: erroru.errors.comm_er8=1;
  6039  1212  0022               	movlb	2	; select bank2
  6040  1213  17DF               	bsf	_erroru^(0+256),7
  6041  1214  0008               	return
  6042  1215                     __end_of_detect_display_error:	
  6043                           
  6044                           	psect	text13
  6045  18ED                     __ptext13:	
  6046 ;; *************** function _capture_init *****************
  6047 ;; Defined at:
  6048 ;;		line 1159 in file "main.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;		None
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;		None
  6053 ;; Return value:  Size  Location     Type
  6054 ;;		None               void
  6055 ;; Registers used:
  6056 ;;		wreg, status,2, status,0
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6066 ;;Total ram usage:        0 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    3
  6069 ;; This function calls:
  6070 ;;		Nothing
  6071 ;; This function is called by:
  6072 ;;		_main
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           
  6077                           ;psect for function _capture_init
  6078  18ED                     _capture_init:	
  6079                           
  6080                           ;main.c: 1161: TRISCbits.TRISC1 =1;
  6081                           
  6082                           ;incstack = 0
  6083                           ; Regs used in _capture_init: [wreg+status,2+status,0]
  6084  18ED  0021               	movlb	1	; select bank1
  6085  18EE  148E               	bsf	14,1	;volatile
  6086                           
  6087                           ;main.c: 1163: PIE2bits.CCP2IE = 1;
  6088  18EF  1412               	bsf	18,0	;volatile
  6089                           
  6090                           ;main.c: 1164: CCP2CONbits.CCP2M=0x05;
  6091  18F0  0025               	movlb	5	; select bank5
  6092  18F1  081A               	movf	26,w	;volatile
  6093  18F2  39F0               	andlw	-16
  6094  18F3  3805               	iorlw	5
  6095  18F4  009A               	movwf	26	;volatile
  6096                           
  6097                           ;main.c: 1165: TMR1H = 0x00;
  6098  18F5  0020               	movlb	0	; select bank0
  6099  18F6  0197               	clrf	23	;volatile
  6100                           
  6101                           ;main.c: 1166: TMR1L = 0x00;
  6102  18F7  0196               	clrf	22	;volatile
  6103                           
  6104                           ;main.c: 1167: PIR1 = 0x00;
  6105  18F8  0191               	clrf	17	;volatile
  6106                           
  6107                           ;main.c: 1169: T1CON = 0x21;
  6108  18F9  3021               	movlw	33
  6109  18FA  0098               	movwf	24	;volatile
  6110                           
  6111                           ;main.c: 1170: INTCONbits.GIE = 1;
  6112  18FB  178B               	bsf	11,7	;volatile
  6113                           
  6114                           ;main.c: 1171: INTCONbits.PEIE = 1;
  6115  18FC  170B               	bsf	11,6	;volatile
  6116  18FD  0008               	return
  6117  18FE                     __end_of_capture_init:	
  6118                           
  6119                           	psect	text14
  6120  18DC                     __ptext14:	
  6121 ;; *************** function _Timer0_init *****************
  6122 ;; Defined at:
  6123 ;;		line 1118 in file "main.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;		None
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;		None
  6128 ;; Return value:  Size  Location     Type
  6129 ;;		None               void
  6130 ;; Registers used:
  6131 ;;		wreg, status,2, status,0
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;Total ram usage:        0 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    3
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_main
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           
  6152                           ;psect for function _Timer0_init
  6153  18DC                     _Timer0_init:	
  6154                           
  6155                           ;main.c: 1120: TMR0=0;
  6156                           
  6157                           ;incstack = 0
  6158                           ; Regs used in _Timer0_init: [wreg+status,2+status,0]
  6159  18DC  0020               	movlb	0	; select bank0
  6160  18DD  0195               	clrf	21	;volatile
  6161                           
  6162                           ;main.c: 1121: OPTION_REGbits.PSA=0;
  6163  18DE  0021               	movlb	1	; select bank1
  6164  18DF  1195               	bcf	21,3	;volatile
  6165                           
  6166                           ;main.c: 1122: OPTION_REGbits.T0CS=0;
  6167  18E0  1295               	bcf	21,5	;volatile
  6168                           
  6169                           ;main.c: 1123: OPTION_REGbits.PS=5;
  6170  18E1  0815               	movf	21,w	;volatile
  6171  18E2  39F8               	andlw	-8
  6172  18E3  3805               	iorlw	5
  6173  18E4  0095               	movwf	21	;volatile
  6174                           
  6175                           ;main.c: 1124: INTCONbits.GIE=0;
  6176  18E5  138B               	bcf	11,7	;volatile
  6177                           
  6178                           ;main.c: 1125: INTCONbits.PEIE=0;
  6179  18E6  130B               	bcf	11,6	;volatile
  6180                           
  6181                           ;main.c: 1126: INTCONbits.T0IF=0;
  6182  18E7  110B               	bcf	11,2	;volatile
  6183                           
  6184                           ;main.c: 1132: TMR0=0x85;
  6185  18E8  3085               	movlw	133
  6186  18E9  0020               	movlb	0	; select bank0
  6187  18EA  0095               	movwf	21	;volatile
  6188                           
  6189                           ;main.c: 1133: INTCONbits.T0IE=1;
  6190  18EB  168B               	bsf	11,5	;volatile
  6191  18EC  0008               	return
  6192  18ED                     __end_of_Timer0_init:	
  6193                           
  6194                           	psect	text15
  6195  1CF1                     __ptext15:	
  6196 ;; *************** function _SCANENCODER2 *****************
  6197 ;; Defined at:
  6198 ;;		line 94 in file "ENCODER.C"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;		None
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  result          1    6[BANK1 ] unsigned char 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1    wreg      unsigned char 
  6205 ;; Registers used:
  6206 ;;		wreg, status,2, status,0, pclath, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;Total ram usage:        2 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    4
  6219 ;; This function calls:
  6220 ;;		_enc2_port
  6221 ;; This function is called by:
  6222 ;;		_main
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           
  6227                           ;psect for function _SCANENCODER2
  6228  1CF1                     _SCANENCODER2:	
  6229                           
  6230                           ;ENCODER.C: 96: unsigned char result=0;
  6231                           
  6232                           ;incstack = 0
  6233                           ; Regs used in _SCANENCODER2: [wreg+status,2+status,0+pclath+cstack]
  6234  1CF1  0021               	movlb	1	; select bank1
  6235  1CF2  01A6               	clrf	SCANENCODER2@result^(0+128)
  6236                           
  6237                           ;ENCODER.C: 97: if(enc2_port() == 1)
  6238  1CF3  319A  22AA  319C   	fcall	_enc2_port
  6239  1CF6  3A01               	xorlw	1
  6240  1CF7  1D03               	skipz
  6241  1CF8  2D6C               	goto	l4293
  6242                           
  6243                           ;ENCODER.C: 98: {
  6244                           ;ENCODER.C: 99: if(firstpulse2==0 && secondpulse2==0)
  6245  1CF9  0022               	movlb	2	; select bank2
  6246  1CFA  08C0               	movf	_firstpulse2^(0+256),f
  6247  1CFB  1D03               	skipz
  6248  1CFC  2D1E               	goto	l4255
  6249  1CFD  08D5               	movf	_secondpulse2^(0+256),f
  6250  1CFE  1D03               	skipz
  6251  1CFF  2D1E               	goto	l4255
  6252                           
  6253                           ;ENCODER.C: 100: {
  6254                           ;ENCODER.C: 101: if(new2==0x02)
  6255  1D00  3002               	movlw	2
  6256  1D01  0020               	movlb	0	; select bank0
  6257  1D02  0656               	xorwf	_new2,w
  6258  1D03  0457               	iorwf	_new2+1,w
  6259  1D04  1D03               	skipz
  6260  1D05  2D11               	goto	l4245
  6261                           
  6262                           ;ENCODER.C: 102: {
  6263                           ;ENCODER.C: 103: firstpulse2=1;
  6264  1D06  0022               	movlb	2	; select bank2
  6265  1D07  01C0               	clrf	_firstpulse2^(0+256)
  6266  1D08  0AC0               	incf	_firstpulse2^(0+256),f
  6267                           
  6268                           ;ENCODER.C: 104: secondpulse2=0;
  6269  1D09  01D5               	clrf	_secondpulse2^(0+256)
  6270                           
  6271                           ;ENCODER.C: 105: plus222=1;
  6272  1D0A  01CC               	clrf	_plus222^(0+256)
  6273  1D0B  0ACC               	incf	_plus222^(0+256),f
  6274                           
  6275                           ;ENCODER.C: 106: result='$';
  6276  1D0C  3024               	movlw	36
  6277  1D0D  0021               	movlb	1	; select bank1
  6278  1D0E  00A5               	movwf	??_SCANENCODER2^(0+128)
  6279  1D0F  0825               	movf	??_SCANENCODER2^(0+128),w
  6280  1D10  00A6               	movwf	SCANENCODER2@result^(0+128)
  6281  1D11                     l4245:	
  6282                           
  6283                           ;ENCODER.C: 107: }
  6284                           ;ENCODER.C: 108: if(new2==0x01)
  6285  1D11  3001               	movlw	1
  6286  1D12  0020               	movlb	0	; select bank0
  6287  1D13  0656               	xorwf	_new2,w
  6288  1D14  0457               	iorwf	_new2+1,w
  6289  1D15  1D03               	skipz
  6290  1D16  2D6C               	goto	l4293
  6291                           
  6292                           ;ENCODER.C: 109: {
  6293                           ;ENCODER.C: 110: firstpulse2=1;
  6294  1D17  0022               	movlb	2	; select bank2
  6295  1D18  01C0               	clrf	_firstpulse2^(0+256)
  6296  1D19  0AC0               	incf	_firstpulse2^(0+256),f
  6297                           
  6298                           ;ENCODER.C: 111: secondpulse2=0;
  6299  1D1A  01D5               	clrf	_secondpulse2^(0+256)
  6300                           
  6301                           ;ENCODER.C: 112: minus222=1;
  6302  1D1B  01C6               	clrf	_minus222^(0+256)
  6303  1D1C  0AC6               	incf	_minus222^(0+256),f
  6304  1D1D  2D67               	goto	l4291
  6305  1D1E                     l4255:	
  6306                           ;ENCODER.C: 114: }
  6307                           ;ENCODER.C: 115: }
  6308                           
  6309                           ;ENCODER.C: 113: result='$';
  6310                           
  6311                           
  6312                           ;ENCODER.C: 116: else if(firstpulse2==1 && secondpulse2==0)
  6313  1D1E  0022               	movlb	2	; select bank2
  6314  1D1F  0840               	movf	_firstpulse2^(0+256),w
  6315  1D20  3A01               	xorlw	1
  6316  1D21  1D03               	skipz
  6317  1D22  2D32               	goto	l4265
  6318  1D23  08D5               	movf	_secondpulse2^(0+256),f
  6319  1D24  1D03               	skipz
  6320  1D25  2D32               	goto	l4265
  6321                           
  6322                           ;ENCODER.C: 117: {
  6323                           ;ENCODER.C: 118: if(new2==0x03)
  6324  1D26  3003               	movlw	3
  6325  1D27  0020               	movlb	0	; select bank0
  6326  1D28  0656               	xorwf	_new2,w
  6327  1D29  0457               	iorwf	_new2+1,w
  6328  1D2A  1D03               	skipz
  6329  1D2B  2D6C               	goto	l4293
  6330                           
  6331                           ;ENCODER.C: 119: {
  6332                           ;ENCODER.C: 120: firstpulse2=1;
  6333  1D2C  0022               	movlb	2	; select bank2
  6334  1D2D  01C0               	clrf	_firstpulse2^(0+256)
  6335  1D2E  0AC0               	incf	_firstpulse2^(0+256),f
  6336                           
  6337                           ;ENCODER.C: 121: secondpulse2=1;
  6338  1D2F  01D5               	clrf	_secondpulse2^(0+256)
  6339  1D30  0AD5               	incf	_secondpulse2^(0+256),f
  6340  1D31  2D67               	goto	l4291
  6341  1D32                     l4265:	
  6342                           ;ENCODER.C: 123: }
  6343                           ;ENCODER.C: 124: }
  6344                           
  6345                           ;ENCODER.C: 122: result='$';
  6346                           
  6347                           
  6348                           ;ENCODER.C: 125: else if(firstpulse2==1 && secondpulse2==1)
  6349  1D32  0022               	movlb	2	; select bank2
  6350  1D33  0840               	movf	_firstpulse2^(0+256),w
  6351  1D34  3A01               	xorlw	1
  6352  1D35  1D03               	skipz
  6353  1D36  2D63               	goto	l4289
  6354  1D37  0855               	movf	_secondpulse2^(0+256),w
  6355  1D38  3A01               	xorlw	1
  6356  1D39  1D03               	skipz
  6357  1D3A  2D63               	goto	l4289
  6358                           
  6359                           ;ENCODER.C: 126: {
  6360                           ;ENCODER.C: 127: if(new2==0x01 && plus222==1)
  6361  1D3B  3001               	movlw	1
  6362  1D3C  0020               	movlb	0	; select bank0
  6363  1D3D  0656               	xorwf	_new2,w
  6364  1D3E  0457               	iorwf	_new2+1,w
  6365  1D3F  1D03               	skipz
  6366  1D40  2D4D               	goto	l4277
  6367  1D41  0022               	movlb	2	; select bank2
  6368  1D42  084C               	movf	_plus222^(0+256),w
  6369  1D43  3A01               	xorlw	1
  6370  1D44  1D03               	skipz
  6371  1D45  2D4D               	goto	l4277
  6372                           
  6373                           ;ENCODER.C: 128: {
  6374                           ;ENCODER.C: 129: firstpulse2=0;
  6375  1D46  01C0               	clrf	_firstpulse2^(0+256)
  6376                           
  6377                           ;ENCODER.C: 130: plus222=0;
  6378  1D47  01CC               	clrf	_plus222^(0+256)
  6379                           
  6380                           ;ENCODER.C: 131: result='+';
  6381  1D48  302B               	movlw	43
  6382  1D49  0021               	movlb	1	; select bank1
  6383  1D4A  00A5               	movwf	??_SCANENCODER2^(0+128)
  6384  1D4B  0825               	movf	??_SCANENCODER2^(0+128),w
  6385  1D4C  00A6               	movwf	SCANENCODER2@result^(0+128)
  6386  1D4D                     l4277:	
  6387                           
  6388                           ;ENCODER.C: 132: }
  6389                           ;ENCODER.C: 133: if(new2==0x02 && minus222==1)
  6390  1D4D  3002               	movlw	2
  6391  1D4E  0020               	movlb	0	; select bank0
  6392  1D4F  0656               	xorwf	_new2,w
  6393  1D50  0457               	iorwf	_new2+1,w
  6394  1D51  1D03               	skipz
  6395  1D52  2D5F               	goto	l4285
  6396  1D53  0022               	movlb	2	; select bank2
  6397  1D54  0846               	movf	_minus222^(0+256),w
  6398  1D55  3A01               	xorlw	1
  6399  1D56  1D03               	skipz
  6400  1D57  2D5F               	goto	l4285
  6401                           
  6402                           ;ENCODER.C: 134: {
  6403                           ;ENCODER.C: 135: firstpulse2=0;
  6404  1D58  01C0               	clrf	_firstpulse2^(0+256)
  6405                           
  6406                           ;ENCODER.C: 136: minus222=0;
  6407  1D59  01C6               	clrf	_minus222^(0+256)
  6408                           
  6409                           ;ENCODER.C: 137: result='-';
  6410  1D5A  302D               	movlw	45
  6411  1D5B  0021               	movlb	1	; select bank1
  6412  1D5C  00A5               	movwf	??_SCANENCODER2^(0+128)
  6413  1D5D  0825               	movf	??_SCANENCODER2^(0+128),w
  6414  1D5E  00A6               	movwf	SCANENCODER2@result^(0+128)
  6415  1D5F                     l4285:	
  6416                           
  6417                           ;ENCODER.C: 138: }
  6418                           ;ENCODER.C: 139: firstpulse2=0;
  6419  1D5F  0022               	movlb	2	; select bank2
  6420  1D60  01C0               	clrf	_firstpulse2^(0+256)
  6421                           
  6422                           ;ENCODER.C: 140: secondpulse2=0;
  6423  1D61  01D5               	clrf	_secondpulse2^(0+256)
  6424                           
  6425                           ;ENCODER.C: 141: }
  6426  1D62  2D6C               	goto	l4293
  6427  1D63                     l4289:	
  6428                           
  6429                           ;ENCODER.C: 142: else
  6430                           ;ENCODER.C: 143: {
  6431                           ;ENCODER.C: 144: plus222=0;
  6432  1D63  01CC               	clrf	_plus222^(0+256)
  6433                           
  6434                           ;ENCODER.C: 145: minus222=0;
  6435  1D64  01C6               	clrf	_minus222^(0+256)
  6436                           
  6437                           ;ENCODER.C: 146: firstpulse2=0;
  6438  1D65  01C0               	clrf	_firstpulse2^(0+256)
  6439                           
  6440                           ;ENCODER.C: 147: secondpulse2=0;
  6441  1D66  01D5               	clrf	_secondpulse2^(0+256)
  6442  1D67                     l4291:	
  6443                           
  6444                           ;ENCODER.C: 148: result='$';
  6445  1D67  3024               	movlw	36
  6446  1D68  0021               	movlb	1	; select bank1
  6447  1D69  00A5               	movwf	??_SCANENCODER2^(0+128)
  6448  1D6A  0825               	movf	??_SCANENCODER2^(0+128),w
  6449  1D6B  00A6               	movwf	SCANENCODER2@result^(0+128)
  6450  1D6C                     l4293:	
  6451                           
  6452                           ;ENCODER.C: 149: }
  6453                           ;ENCODER.C: 150: }
  6454                           ;ENCODER.C: 151: return(result);
  6455  1D6C  0021               	movlb	1	; select bank1
  6456  1D6D  0826               	movf	SCANENCODER2@result^(0+128),w
  6457  1D6E  0008               	return
  6458  1D6F                     __end_of_SCANENCODER2:	
  6459                           
  6460                           	psect	text16
  6461  1AAA                     __ptext16:	
  6462 ;; *************** function _enc2_port *****************
  6463 ;; Defined at:
  6464 ;;		line 154 in file "ENCODER.C"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;		None
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  portvalue       2    3[BANK1 ] unsigned int 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1    wreg      unsigned char 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6480 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6481 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6482 ;;Total ram usage:        5 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    3
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_SCANENCODER2
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           
  6493                           ;psect for function _enc2_port
  6494  1AAA                     _enc2_port:	
  6495                           
  6496                           ;ENCODER.C: 156: unsigned int portvalue=0x0000;
  6497                           
  6498                           ;incstack = 0
  6499                           ; Regs used in _enc2_port: [wreg+status,2+status,0]
  6500  1AAA  0021               	movlb	1	; select bank1
  6501  1AAB  01A3               	clrf	enc2_port@portvalue^(0+128)
  6502  1AAC  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6503                           
  6504                           ;ENCODER.C: 157: portvalue=0x0000;
  6505  1AAD  01A3               	clrf	enc2_port@portvalue^(0+128)
  6506  1AAE  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6507                           
  6508                           ;ENCODER.C: 158: portvalue=PORTAbits.RA2;
  6509  1AAF  0020               	movlb	0	; select bank0
  6510  1AB0  0C0C               	rrf	12,w	;volatile
  6511  1AB1  0C89               	rrf	9,f
  6512  1AB2  3901               	andlw	1
  6513  1AB3  0021               	movlb	1	; select bank1
  6514  1AB4  00A0               	movwf	??_enc2_port^(0+128)
  6515  1AB5  01A1               	clrf	(??_enc2_port^(0+128)+1)
  6516  1AB6  0820               	movf	??_enc2_port^(0+128),w
  6517  1AB7  00A3               	movwf	enc2_port@portvalue^(0+128)
  6518  1AB8  0821               	movf	(??_enc2_port+1)^(0+128),w
  6519  1AB9  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6520                           
  6521                           ;ENCODER.C: 159: portvalue=portvalue<<1;
  6522  1ABA  3523               	lslf	enc2_port@portvalue^(0+128),w
  6523  1ABB  00A3               	movwf	enc2_port@portvalue^(0+128)
  6524  1ABC  0D24               	rlf	(enc2_port@portvalue+1)^(0+128),w
  6525  1ABD  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6526                           
  6527                           ;ENCODER.C: 160: portvalue=portvalue|PORTAbits.RA1;
  6528  1ABE  0020               	movlb	0	; select bank0
  6529  1ABF  0C0C               	rrf	12,w	;volatile
  6530  1AC0  3901               	andlw	1
  6531  1AC1  0021               	movlb	1	; select bank1
  6532  1AC2  00A0               	movwf	??_enc2_port^(0+128)
  6533  1AC3  0823               	movf	enc2_port@portvalue^(0+128),w
  6534  1AC4  0420               	iorwf	??_enc2_port^(0+128),w
  6535  1AC5  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6536  1AC6  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6537  1AC7  00A2               	movwf	(??_enc2_port+2)^(0+128)
  6538  1AC8  0821               	movf	(??_enc2_port+1)^(0+128),w
  6539  1AC9  00A3               	movwf	enc2_port@portvalue^(0+128)
  6540  1ACA  0822               	movf	(??_enc2_port+2)^(0+128),w
  6541  1ACB  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6542                           
  6543                           ;ENCODER.C: 161: portvalue=(portvalue & 0X0003);
  6544  1ACC  3003               	movlw	3
  6545  1ACD  0523               	andwf	enc2_port@portvalue^(0+128),w
  6546  1ACE  00A3               	movwf	enc2_port@portvalue^(0+128)
  6547  1ACF  3000               	movlw	0
  6548  1AD0  0524               	andwf	(enc2_port@portvalue+1)^(0+128),w
  6549  1AD1  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6550                           
  6551                           ;ENCODER.C: 162: new2=portvalue;
  6552  1AD2  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6553  1AD3  0020               	movlb	0	; select bank0
  6554  1AD4  01D7               	clrf	_new2+1
  6555  1AD5  07D7               	addwf	_new2+1,f
  6556  1AD6  0021               	movlb	1	; select bank1
  6557  1AD7  0823               	movf	enc2_port@portvalue^(0+128),w
  6558  1AD8  0020               	movlb	0	; select bank0
  6559  1AD9  01D6               	clrf	_new2
  6560  1ADA  07D6               	addwf	_new2,f
  6561                           
  6562                           ;ENCODER.C: 163: temp=new2;
  6563  1ADB  0856               	movf	_new2,w
  6564  1ADC  0021               	movlb	1	; select bank1
  6565  1ADD  00A0               	movwf	??_enc2_port^(0+128)
  6566  1ADE  0820               	movf	??_enc2_port^(0+128),w
  6567  1ADF  0020               	movlb	0	; select bank0
  6568  1AE0  00E5               	movwf	_temp
  6569                           
  6570                           ;ENCODER.C: 164: if((temp ^ old2) !=0)
  6571  1AE1  0023               	movlb	3	; select bank3
  6572  1AE2  0840               	movf	_old2^(0+384),w
  6573  1AE3  0020               	movlb	0	; select bank0
  6574  1AE4  0665               	xorwf	_temp,w
  6575  1AE5  0021               	movlb	1	; select bank1
  6576  1AE6  00A0               	movwf	??_enc2_port^(0+128)
  6577  1AE7  0023               	movlb	3	; select bank3
  6578  1AE8  0841               	movf	(_old2+1)^(0+384),w
  6579  1AE9  0021               	movlb	1	; select bank1
  6580  1AEA  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6581  1AEB  0821               	movf	(??_enc2_port+1)^(0+128),w
  6582  1AEC  0420               	iorwf	??_enc2_port^(0+128),w
  6583  1AED  1903               	skipnz
  6584  1AEE  2AFB               	goto	l3661
  6585                           
  6586                           ;ENCODER.C: 165: {
  6587                           ;ENCODER.C: 166: old2=new2;
  6588  1AEF  0020               	movlb	0	; select bank0
  6589  1AF0  0857               	movf	_new2+1,w
  6590  1AF1  0023               	movlb	3	; select bank3
  6591  1AF2  01C1               	clrf	(_old2+1)^(0+384)
  6592  1AF3  07C1               	addwf	(_old2+1)^(0+384),f
  6593  1AF4  0020               	movlb	0	; select bank0
  6594  1AF5  0856               	movf	_new2,w
  6595  1AF6  0023               	movlb	3	; select bank3
  6596  1AF7  01C0               	clrf	_old2^(0+384)
  6597  1AF8  07C0               	addwf	_old2^(0+384),f
  6598                           
  6599                           ;ENCODER.C: 167: return 1;
  6600  1AF9  3001               	movlw	1
  6601                           
  6602                           ;ENCODER.C: 168: }
  6603  1AFA  0008               	return
  6604  1AFB                     l3661:	
  6605                           
  6606                           ;ENCODER.C: 169: else
  6607                           ;ENCODER.C: 170: {
  6608                           ;ENCODER.C: 171: old2=new2;
  6609  1AFB  0020               	movlb	0	; select bank0
  6610  1AFC  0857               	movf	_new2+1,w
  6611  1AFD  0023               	movlb	3	; select bank3
  6612  1AFE  01C1               	clrf	(_old2+1)^(0+384)
  6613  1AFF  07C1               	addwf	(_old2+1)^(0+384),f
  6614  1B00  0020               	movlb	0	; select bank0
  6615  1B01  0856               	movf	_new2,w
  6616  1B02  0023               	movlb	3	; select bank3
  6617  1B03  01C0               	clrf	_old2^(0+384)
  6618  1B04  07C0               	addwf	_old2^(0+384),f
  6619                           
  6620                           ;ENCODER.C: 172: return 0;
  6621  1B05  3000               	movlw	0
  6622  1B06  0008               	return
  6623  1B07                     __end_of_enc2_port:	
  6624                           
  6625                           	psect	text17
  6626  1D6F                     __ptext17:	
  6627 ;; *************** function _SCANENCODER1 *****************
  6628 ;; Defined at:
  6629 ;;		line 12 in file "ENCODER.C"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;		None
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;  result          1    7[BANK1 ] unsigned char 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1    wreg      unsigned char 
  6636 ;; Registers used:
  6637 ;;		wreg, status,2, status,0, pclath, cstack
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6644 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6645 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6646 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6647 ;;Total ram usage:        2 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:    4
  6650 ;; This function calls:
  6651 ;;		_enc1_port
  6652 ;; This function is called by:
  6653 ;;		_main
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           
  6658                           ;psect for function _SCANENCODER1
  6659  1D6F                     _SCANENCODER1:	
  6660                           
  6661                           ;ENCODER.C: 14: unsigned char result=0;
  6662                           
  6663                           ;incstack = 0
  6664                           ; Regs used in _SCANENCODER1: [wreg+status,2+status,0+pclath+cstack]
  6665  1D6F  0021               	movlb	1	; select bank1
  6666  1D70  01A7               	clrf	SCANENCODER1@result^(0+128)
  6667                           
  6668                           ;ENCODER.C: 15: if(enc1_port() == 1)
  6669  1D71  319B  2307  319D   	fcall	_enc1_port
  6670  1D74  3A01               	xorlw	1
  6671  1D75  1D03               	skipz
  6672  1D76  2DEB               	goto	l4223
  6673                           
  6674                           ;ENCODER.C: 16: {
  6675                           ;ENCODER.C: 17: if(firstpulse1==0 && secondpulse1==0)
  6676  1D77  0022               	movlb	2	; select bank2
  6677  1D78  08BF               	movf	_firstpulse1^(0+256),f
  6678  1D79  1D03               	skipz
  6679  1D7A  2D9C               	goto	l4183
  6680  1D7B  08D4               	movf	_secondpulse1^(0+256),f
  6681  1D7C  1D03               	skipz
  6682  1D7D  2D9C               	goto	l4183
  6683                           
  6684                           ;ENCODER.C: 18: {
  6685                           ;ENCODER.C: 19: if(new1==0x02)
  6686  1D7E  3002               	movlw	2
  6687  1D7F  0020               	movlb	0	; select bank0
  6688  1D80  0654               	xorwf	_new1,w
  6689  1D81  0455               	iorwf	_new1+1,w
  6690  1D82  1D03               	skipz
  6691  1D83  2D8F               	goto	l4173
  6692                           
  6693                           ;ENCODER.C: 20: {
  6694                           ;ENCODER.C: 21: firstpulse1=1;
  6695  1D84  0022               	movlb	2	; select bank2
  6696  1D85  01BF               	clrf	_firstpulse1^(0+256)
  6697  1D86  0ABF               	incf	_firstpulse1^(0+256),f
  6698                           
  6699                           ;ENCODER.C: 22: secondpulse1=0;
  6700  1D87  01D4               	clrf	_secondpulse1^(0+256)
  6701                           
  6702                           ;ENCODER.C: 23: plus111=1;
  6703  1D88  01CB               	clrf	_plus111^(0+256)
  6704  1D89  0ACB               	incf	_plus111^(0+256),f
  6705                           
  6706                           ;ENCODER.C: 24: result='$';
  6707  1D8A  3024               	movlw	36
  6708  1D8B  0021               	movlb	1	; select bank1
  6709  1D8C  00A6               	movwf	??_SCANENCODER1^(0+128)
  6710  1D8D  0826               	movf	??_SCANENCODER1^(0+128),w
  6711  1D8E  00A7               	movwf	SCANENCODER1@result^(0+128)
  6712  1D8F                     l4173:	
  6713                           
  6714                           ;ENCODER.C: 25: }
  6715                           ;ENCODER.C: 26: if(new1==0x01)
  6716  1D8F  3001               	movlw	1
  6717  1D90  0020               	movlb	0	; select bank0
  6718  1D91  0654               	xorwf	_new1,w
  6719  1D92  0455               	iorwf	_new1+1,w
  6720  1D93  1D03               	skipz
  6721  1D94  2DEB               	goto	l4223
  6722                           
  6723                           ;ENCODER.C: 27: {
  6724                           ;ENCODER.C: 28: firstpulse1=1;
  6725  1D95  0022               	movlb	2	; select bank2
  6726  1D96  01BF               	clrf	_firstpulse1^(0+256)
  6727  1D97  0ABF               	incf	_firstpulse1^(0+256),f
  6728                           
  6729                           ;ENCODER.C: 29: secondpulse1=0;
  6730  1D98  01D4               	clrf	_secondpulse1^(0+256)
  6731                           
  6732                           ;ENCODER.C: 30: minus111=1;
  6733  1D99  01C5               	clrf	_minus111^(0+256)
  6734  1D9A  0AC5               	incf	_minus111^(0+256),f
  6735  1D9B  2DE6               	goto	l4221
  6736  1D9C                     l4183:	
  6737                           ;ENCODER.C: 32: }
  6738                           ;ENCODER.C: 33: }
  6739                           
  6740                           ;ENCODER.C: 31: result='$';
  6741                           
  6742                           
  6743                           ;ENCODER.C: 34: else if(firstpulse1==1 && secondpulse1==0)
  6744  1D9C  0022               	movlb	2	; select bank2
  6745  1D9D  083F               	movf	_firstpulse1^(0+256),w
  6746  1D9E  3A01               	xorlw	1
  6747  1D9F  1D03               	skipz
  6748  1DA0  2DB0               	goto	l4193
  6749  1DA1  08D4               	movf	_secondpulse1^(0+256),f
  6750  1DA2  1D03               	skipz
  6751  1DA3  2DB0               	goto	l4193
  6752                           
  6753                           ;ENCODER.C: 35: {
  6754                           ;ENCODER.C: 36: if(new1==0x03)
  6755  1DA4  3003               	movlw	3
  6756  1DA5  0020               	movlb	0	; select bank0
  6757  1DA6  0654               	xorwf	_new1,w
  6758  1DA7  0455               	iorwf	_new1+1,w
  6759  1DA8  1D03               	skipz
  6760  1DA9  2DEB               	goto	l4223
  6761                           
  6762                           ;ENCODER.C: 37: {
  6763                           ;ENCODER.C: 38: firstpulse1=1;
  6764  1DAA  0022               	movlb	2	; select bank2
  6765  1DAB  01BF               	clrf	_firstpulse1^(0+256)
  6766  1DAC  0ABF               	incf	_firstpulse1^(0+256),f
  6767                           
  6768                           ;ENCODER.C: 39: secondpulse1=1;
  6769  1DAD  01D4               	clrf	_secondpulse1^(0+256)
  6770  1DAE  0AD4               	incf	_secondpulse1^(0+256),f
  6771  1DAF  2DE6               	goto	l4221
  6772  1DB0                     l4193:	
  6773                           ;ENCODER.C: 41: }
  6774                           ;ENCODER.C: 42: }
  6775                           
  6776                           ;ENCODER.C: 40: result='$';
  6777                           
  6778                           
  6779                           ;ENCODER.C: 43: else if(firstpulse1==1 && secondpulse1==1)
  6780  1DB0  0022               	movlb	2	; select bank2
  6781  1DB1  083F               	movf	_firstpulse1^(0+256),w
  6782  1DB2  3A01               	xorlw	1
  6783  1DB3  1D03               	skipz
  6784  1DB4  2DE2               	goto	l4219
  6785  1DB5  0854               	movf	_secondpulse1^(0+256),w
  6786  1DB6  3A01               	xorlw	1
  6787  1DB7  1D03               	skipz
  6788  1DB8  2DE2               	goto	l4219
  6789                           
  6790                           ;ENCODER.C: 44: {
  6791                           ;ENCODER.C: 45: if(new1==0x01 && plus111==1)
  6792  1DB9  3001               	movlw	1
  6793  1DBA  0020               	movlb	0	; select bank0
  6794  1DBB  0654               	xorwf	_new1,w
  6795  1DBC  0455               	iorwf	_new1+1,w
  6796  1DBD  1D03               	skipz
  6797  1DBE  2DCC               	goto	l4207
  6798  1DBF  0022               	movlb	2	; select bank2
  6799  1DC0  084B               	movf	_plus111^(0+256),w
  6800  1DC1  3A01               	xorlw	1
  6801  1DC2  1D03               	skipz
  6802  1DC3  2DCC               	goto	l4207
  6803                           
  6804                           ;ENCODER.C: 46: {
  6805                           ;ENCODER.C: 47: firstpulse1=1;
  6806  1DC4  01BF               	clrf	_firstpulse1^(0+256)
  6807  1DC5  0ABF               	incf	_firstpulse1^(0+256),f
  6808                           
  6809                           ;ENCODER.C: 48: plus111=0;
  6810  1DC6  01CB               	clrf	_plus111^(0+256)
  6811                           
  6812                           ;ENCODER.C: 49: result='+';
  6813  1DC7  302B               	movlw	43
  6814  1DC8  0021               	movlb	1	; select bank1
  6815  1DC9  00A6               	movwf	??_SCANENCODER1^(0+128)
  6816  1DCA  0826               	movf	??_SCANENCODER1^(0+128),w
  6817  1DCB  00A7               	movwf	SCANENCODER1@result^(0+128)
  6818  1DCC                     l4207:	
  6819                           
  6820                           ;ENCODER.C: 50: }
  6821                           ;ENCODER.C: 51: if(new1==0x02 && minus111==1)
  6822  1DCC  3002               	movlw	2
  6823  1DCD  0020               	movlb	0	; select bank0
  6824  1DCE  0654               	xorwf	_new1,w
  6825  1DCF  0455               	iorwf	_new1+1,w
  6826  1DD0  1D03               	skipz
  6827  1DD1  2DDE               	goto	l4215
  6828  1DD2  0022               	movlb	2	; select bank2
  6829  1DD3  0845               	movf	_minus111^(0+256),w
  6830  1DD4  3A01               	xorlw	1
  6831  1DD5  1D03               	skipz
  6832  1DD6  2DDE               	goto	l4215
  6833                           
  6834                           ;ENCODER.C: 52: {
  6835                           ;ENCODER.C: 53: firstpulse1=0;
  6836  1DD7  01BF               	clrf	_firstpulse1^(0+256)
  6837                           
  6838                           ;ENCODER.C: 54: minus111=0;
  6839  1DD8  01C5               	clrf	_minus111^(0+256)
  6840                           
  6841                           ;ENCODER.C: 55: result='-';
  6842  1DD9  302D               	movlw	45
  6843  1DDA  0021               	movlb	1	; select bank1
  6844  1DDB  00A6               	movwf	??_SCANENCODER1^(0+128)
  6845  1DDC  0826               	movf	??_SCANENCODER1^(0+128),w
  6846  1DDD  00A7               	movwf	SCANENCODER1@result^(0+128)
  6847  1DDE                     l4215:	
  6848                           
  6849                           ;ENCODER.C: 56: }
  6850                           ;ENCODER.C: 57: firstpulse1=0;
  6851  1DDE  0022               	movlb	2	; select bank2
  6852  1DDF  01BF               	clrf	_firstpulse1^(0+256)
  6853                           
  6854                           ;ENCODER.C: 58: secondpulse1=0;
  6855  1DE0  01D4               	clrf	_secondpulse1^(0+256)
  6856                           
  6857                           ;ENCODER.C: 59: }
  6858  1DE1  2DEB               	goto	l4223
  6859  1DE2                     l4219:	
  6860                           
  6861                           ;ENCODER.C: 60: else
  6862                           ;ENCODER.C: 61: {
  6863                           ;ENCODER.C: 62: plus111=0;
  6864  1DE2  01CB               	clrf	_plus111^(0+256)
  6865                           
  6866                           ;ENCODER.C: 63: minus111=0;
  6867  1DE3  01C5               	clrf	_minus111^(0+256)
  6868                           
  6869                           ;ENCODER.C: 64: firstpulse1=0;
  6870  1DE4  01BF               	clrf	_firstpulse1^(0+256)
  6871                           
  6872                           ;ENCODER.C: 65: secondpulse1=0;
  6873  1DE5  01D4               	clrf	_secondpulse1^(0+256)
  6874  1DE6                     l4221:	
  6875                           
  6876                           ;ENCODER.C: 66: result='$';
  6877  1DE6  3024               	movlw	36
  6878  1DE7  0021               	movlb	1	; select bank1
  6879  1DE8  00A6               	movwf	??_SCANENCODER1^(0+128)
  6880  1DE9  0826               	movf	??_SCANENCODER1^(0+128),w
  6881  1DEA  00A7               	movwf	SCANENCODER1@result^(0+128)
  6882  1DEB                     l4223:	
  6883                           
  6884                           ;ENCODER.C: 67: }
  6885                           ;ENCODER.C: 68: }
  6886                           ;ENCODER.C: 69: return(result);
  6887  1DEB  0021               	movlb	1	; select bank1
  6888  1DEC  0827               	movf	SCANENCODER1@result^(0+128),w
  6889  1DED  0008               	return
  6890  1DEE                     __end_of_SCANENCODER1:	
  6891                           
  6892                           	psect	text18
  6893  1B07                     __ptext18:	
  6894 ;; *************** function _enc1_port *****************
  6895 ;; Defined at:
  6896 ;;		line 72 in file "ENCODER.C"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;		None
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  portvalue       2    4[BANK1 ] unsigned int 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      unsigned char 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;Total ram usage:        6 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    3
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_SCANENCODER1
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           
  6925                           ;psect for function _enc1_port
  6926  1B07                     _enc1_port:	
  6927                           
  6928                           ;ENCODER.C: 74: unsigned int portvalue=0x0000;
  6929                           
  6930                           ;incstack = 0
  6931                           ; Regs used in _enc1_port: [wreg+status,2+status,0]
  6932  1B07  0021               	movlb	1	; select bank1
  6933  1B08  01A4               	clrf	enc1_port@portvalue^(0+128)
  6934  1B09  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  6935                           
  6936                           ;ENCODER.C: 75: portvalue=0x0000;
  6937  1B0A  01A4               	clrf	enc1_port@portvalue^(0+128)
  6938  1B0B  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  6939                           
  6940                           ;ENCODER.C: 76: portvalue=PORTAbits.RA4;
  6941  1B0C  0020               	movlb	0	; select bank0
  6942  1B0D  0E0C               	swapf	12,w	;volatile
  6943  1B0E  3901               	andlw	1
  6944  1B0F  0021               	movlb	1	; select bank1
  6945  1B10  00A0               	movwf	??_enc1_port^(0+128)
  6946  1B11  01A1               	clrf	(??_enc1_port^(0+128)+1)
  6947  1B12  0820               	movf	??_enc1_port^(0+128),w
  6948  1B13  00A4               	movwf	enc1_port@portvalue^(0+128)
  6949  1B14  0821               	movf	(??_enc1_port+1)^(0+128),w
  6950  1B15  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  6951                           
  6952                           ;ENCODER.C: 77: portvalue=portvalue<<1;
  6953  1B16  3524               	lslf	enc1_port@portvalue^(0+128),w
  6954  1B17  00A4               	movwf	enc1_port@portvalue^(0+128)
  6955  1B18  0D25               	rlf	(enc1_port@portvalue+1)^(0+128),w
  6956  1B19  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  6957                           
  6958                           ;ENCODER.C: 78: portvalue=portvalue|PORTAbits.RA3;
  6959  1B1A  0020               	movlb	0	; select bank0
  6960  1B1B  0C0C               	rrf	12,w	;volatile
  6961  1B1C  0021               	movlb	1	; select bank1
  6962  1B1D  00A0               	movwf	??_enc1_port^(0+128)
  6963  1B1E  0CA0               	rrf	??_enc1_port^(0+128),f
  6964  1B1F  0C20               	rrf	??_enc1_port^(0+128),w
  6965  1B20  3901               	andlw	1
  6966  1B21  00A1               	movwf	(??_enc1_port+1)^(0+128)
  6967  1B22  0824               	movf	enc1_port@portvalue^(0+128),w
  6968  1B23  0421               	iorwf	(??_enc1_port+1)^(0+128),w
  6969  1B24  00A2               	movwf	(??_enc1_port+2)^(0+128)
  6970  1B25  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  6971  1B26  00A3               	movwf	(??_enc1_port+3)^(0+128)
  6972  1B27  0822               	movf	(??_enc1_port+2)^(0+128),w
  6973  1B28  00A4               	movwf	enc1_port@portvalue^(0+128)
  6974  1B29  0823               	movf	(??_enc1_port+3)^(0+128),w
  6975  1B2A  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  6976                           
  6977                           ;ENCODER.C: 79: portvalue=(portvalue & 0X0003);
  6978  1B2B  3003               	movlw	3
  6979  1B2C  0524               	andwf	enc1_port@portvalue^(0+128),w
  6980  1B2D  00A4               	movwf	enc1_port@portvalue^(0+128)
  6981  1B2E  3000               	movlw	0
  6982  1B2F  0525               	andwf	(enc1_port@portvalue+1)^(0+128),w
  6983  1B30  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  6984                           
  6985                           ;ENCODER.C: 80: new1=portvalue;
  6986  1B31  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  6987  1B32  0020               	movlb	0	; select bank0
  6988  1B33  01D5               	clrf	_new1+1
  6989  1B34  07D5               	addwf	_new1+1,f
  6990  1B35  0021               	movlb	1	; select bank1
  6991  1B36  0824               	movf	enc1_port@portvalue^(0+128),w
  6992  1B37  0020               	movlb	0	; select bank0
  6993  1B38  01D4               	clrf	_new1
  6994  1B39  07D4               	addwf	_new1,f
  6995                           
  6996                           ;ENCODER.C: 81: temp=new1;
  6997  1B3A  0854               	movf	_new1,w
  6998  1B3B  0021               	movlb	1	; select bank1
  6999  1B3C  00A0               	movwf	??_enc1_port^(0+128)
  7000  1B3D  0820               	movf	??_enc1_port^(0+128),w
  7001  1B3E  0020               	movlb	0	; select bank0
  7002  1B3F  00E5               	movwf	_temp
  7003                           
  7004                           ;ENCODER.C: 82: if((temp ^ old1) !=0)
  7005  1B40  0023               	movlb	3	; select bank3
  7006  1B41  083E               	movf	_old1^(0+384),w
  7007  1B42  0020               	movlb	0	; select bank0
  7008  1B43  0665               	xorwf	_temp,w
  7009  1B44  0021               	movlb	1	; select bank1
  7010  1B45  00A0               	movwf	??_enc1_port^(0+128)
  7011  1B46  0023               	movlb	3	; select bank3
  7012  1B47  083F               	movf	(_old1+1)^(0+384),w
  7013  1B48  0021               	movlb	1	; select bank1
  7014  1B49  00A1               	movwf	(??_enc1_port+1)^(0+128)
  7015  1B4A  0821               	movf	(??_enc1_port+1)^(0+128),w
  7016  1B4B  0420               	iorwf	??_enc1_port^(0+128),w
  7017  1B4C  1903               	skipnz
  7018  1B4D  2B5A               	goto	l3631
  7019                           
  7020                           ;ENCODER.C: 83: {
  7021                           ;ENCODER.C: 84: old1=new1;
  7022  1B4E  0020               	movlb	0	; select bank0
  7023  1B4F  0855               	movf	_new1+1,w
  7024  1B50  0023               	movlb	3	; select bank3
  7025  1B51  01BF               	clrf	(_old1+1)^(0+384)
  7026  1B52  07BF               	addwf	(_old1+1)^(0+384),f
  7027  1B53  0020               	movlb	0	; select bank0
  7028  1B54  0854               	movf	_new1,w
  7029  1B55  0023               	movlb	3	; select bank3
  7030  1B56  01BE               	clrf	_old1^(0+384)
  7031  1B57  07BE               	addwf	_old1^(0+384),f
  7032                           
  7033                           ;ENCODER.C: 85: return 1;
  7034  1B58  3001               	movlw	1
  7035                           
  7036                           ;ENCODER.C: 86: }
  7037  1B59  0008               	return
  7038  1B5A                     l3631:	
  7039                           
  7040                           ;ENCODER.C: 87: else
  7041                           ;ENCODER.C: 88: {
  7042                           ;ENCODER.C: 89: old1=new1;
  7043  1B5A  0020               	movlb	0	; select bank0
  7044  1B5B  0855               	movf	_new1+1,w
  7045  1B5C  0023               	movlb	3	; select bank3
  7046  1B5D  01BF               	clrf	(_old1+1)^(0+384)
  7047  1B5E  07BF               	addwf	(_old1+1)^(0+384),f
  7048  1B5F  0020               	movlb	0	; select bank0
  7049  1B60  0854               	movf	_new1,w
  7050  1B61  0023               	movlb	3	; select bank3
  7051  1B62  01BE               	clrf	_old1^(0+384)
  7052  1B63  07BE               	addwf	_old1^(0+384),f
  7053                           
  7054                           ;ENCODER.C: 90: return 0;
  7055  1B64  3000               	movlw	0
  7056  1B65  0008               	return
  7057  1B66                     __end_of_enc1_port:	
  7058                           
  7059                           	psect	text19
  7060  1000                     __ptext19:	
  7061 ;; *************** function _PWM_init *****************
  7062 ;; Defined at:
  7063 ;;		line 1136 in file "main.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;		None
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;		None
  7068 ;; Return value:  Size  Location     Type
  7069 ;;		None               void
  7070 ;; Registers used:
  7071 ;;		wreg, status,2, status,0
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7081 ;;Total ram usage:        0 bytes
  7082 ;; Hardware stack levels used:    1
  7083 ;; Hardware stack levels required when called:    3
  7084 ;; This function calls:
  7085 ;;		Nothing
  7086 ;; This function is called by:
  7087 ;;		_main
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           
  7092                           ;psect for function _PWM_init
  7093  1000                     _PWM_init:	
  7094                           
  7095                           ;main.c: 1139: CCP1CONbits.CCP1M=13;
  7096                           
  7097                           ;incstack = 0
  7098                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
  7099  1000  0025               	movlb	5	; select bank5
  7100  1001  0813               	movf	19,w	;volatile
  7101  1002  39F0               	andlw	-16
  7102  1003  380D               	iorlw	13
  7103  1004  0093               	movwf	19	;volatile
  7104                           
  7105                           ;main.c: 1140: CCP1CONbits.DC1B=0;
  7106  1005  30CF               	movlw	-49
  7107  1006  0593               	andwf	19,f	;volatile
  7108                           
  7109                           ;main.c: 1141: CCPR1L=0;
  7110  1007  0191               	clrf	17	;volatile
  7111                           
  7112                           ;main.c: 1142: TRISCbits.TRISC2=0;
  7113  1008  0021               	movlb	1	; select bank1
  7114  1009  110E               	bcf	14,2	;volatile
  7115                           
  7116                           ;main.c: 1143: PR2=0xC7;
  7117  100A  30C7               	movlw	199
  7118  100B  0020               	movlb	0	; select bank0
  7119  100C  009B               	movwf	27	;volatile
  7120                           
  7121                           ;main.c: 1144: T2CONbits.T2CKPS=1;
  7122  100D  081C               	movf	28,w	;volatile
  7123  100E  39FC               	andlw	-4
  7124  100F  3801               	iorlw	1
  7125  1010  009C               	movwf	28	;volatile
  7126                           
  7127                           ;main.c: 1145: T2CONbits.T2OUTPS=0;
  7128  1011  3087               	movlw	-121
  7129  1012  059C               	andwf	28,f	;volatile
  7130                           
  7131                           ;main.c: 1146: PIR1bits.TMR2IF=0;
  7132  1013  1091               	bcf	17,1	;volatile
  7133                           
  7134                           ;main.c: 1147: PIE1bits.TMR2IE=1;
  7135  1014  0021               	movlb	1	; select bank1
  7136  1015  1491               	bsf	17,1	;volatile
  7137                           
  7138                           ;main.c: 1148: T2CONbits.TMR2ON=1;
  7139  1016  0020               	movlb	0	; select bank0
  7140  1017  151C               	bsf	28,2	;volatile
  7141  1018  0008               	return
  7142  1019                     __end_of_PWM_init:	
  7143                           
  7144                           	psect	text20
  7145  07D6                     __ptext20:	
  7146 ;; *************** function _Delayms *****************
  7147 ;; Defined at:
  7148 ;;		line 201 in file "DISPLAY.C"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  delay           2    0[BANK1 ] unsigned int 
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  yyy             2    4[BANK1 ] unsigned int 
  7153 ;;  xxx             2    2[BANK1 ] unsigned int 
  7154 ;; Return value:  Size  Location     Type
  7155 ;;		None               void
  7156 ;; Registers used:
  7157 ;;		wreg, status,2
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7163 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7164 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;Total ram usage:        6 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:    3
  7170 ;; This function calls:
  7171 ;;		Nothing
  7172 ;; This function is called by:
  7173 ;;		_main
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           
  7178                           ;psect for function _Delayms
  7179  07D6                     _Delayms:	
  7180                           
  7181                           ;DISPLAY.C: 204: unsigned int yyy=0,xxx=0;
  7182                           
  7183                           ;incstack = 0
  7184                           ; Regs used in _Delayms: [wreg+status,2]
  7185  07D6  0021               	movlb	1	; select bank1
  7186  07D7  01A4               	clrf	Delayms@yyy^(0+128)
  7187  07D8  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  7188  07D9  01A2               	clrf	Delayms@xxx^(0+128)
  7189  07DA  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  7190                           
  7191                           ;DISPLAY.C: 205: for(xxx=0;xxx<delay;xxx++)
  7192  07DB  01A2               	clrf	Delayms@xxx^(0+128)
  7193  07DC  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  7194  07DD                     l483:	
  7195  07DD  0821               	movf	(Delayms@delay+1)^(0+128),w
  7196  07DE  0223               	subwf	(Delayms@xxx+1)^(0+128),w
  7197  07DF  1D03               	skipz
  7198  07E0  2FE3               	goto	u5495
  7199  07E1  0820               	movf	Delayms@delay^(0+128),w
  7200  07E2  0222               	subwf	Delayms@xxx^(0+128),w
  7201  07E3                     u5495:	
  7202  07E3  1803               	btfsc	3,0
  7203  07E4  0008               	return
  7204                           
  7205                           ;DISPLAY.C: 206: {
  7206                           ;DISPLAY.C: 207: for(yyy=0;yyy<138;yyy++);
  7207  07E5  01A4               	clrf	Delayms@yyy^(0+128)
  7208  07E6  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  7209  07E7  3000               	movlw	0
  7210  07E8  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  7211  07E9  308A               	movlw	138
  7212  07EA  1903               	skipnz
  7213  07EB  0224               	subwf	Delayms@yyy^(0+128),w
  7214  07EC  1803               	btfsc	3,0
  7215  07ED  2FF9               	goto	l4153
  7216  07EE                     l4151:	
  7217  07EE  3001               	movlw	1
  7218  07EF  07A4               	addwf	Delayms@yyy^(0+128),f
  7219  07F0  3000               	movlw	0
  7220  07F1  3DA5               	addwfc	(Delayms@yyy+1)^(0+128),f
  7221  07F2  3000               	movlw	0
  7222  07F3  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  7223  07F4  308A               	movlw	138
  7224  07F5  1903               	skipnz
  7225  07F6  0224               	subwf	Delayms@yyy^(0+128),w
  7226  07F7  1C03               	skipc
  7227  07F8  2FEE               	goto	l4151
  7228  07F9                     l4153:	
  7229  07F9  3001               	movlw	1
  7230  07FA  07A2               	addwf	Delayms@xxx^(0+128),f
  7231  07FB  3000               	movlw	0
  7232  07FC  3DA3               	addwfc	(Delayms@xxx+1)^(0+128),f
  7233  07FD  2FDD               	goto	l483
  7234  07FE                     __end_of_Delayms:	
  7235                           
  7236                           	psect	text21
  7237  1473                     __ptext21:	
  7238 ;; *************** function _Adaptive_base_pid *****************
  7239 ;; Defined at:
  7240 ;;		line 34 in file "MOTORCONTROL.C"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;		None
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;		None
  7245 ;; Return value:  Size  Location     Type
  7246 ;;		None               void
  7247 ;; Registers used:
  7248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;Total ram usage:       18 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:    5
  7261 ;; This function calls:
  7262 ;;		_Update_PWM
  7263 ;;		___aldiv
  7264 ;;		___altoft
  7265 ;;		___ftadd
  7266 ;;		___ftdiv
  7267 ;;		___ftge
  7268 ;;		___ftmul
  7269 ;;		___ftneg
  7270 ;;		___fttol
  7271 ;;		___lwtoft
  7272 ;;		___wmul
  7273 ;; This function is called by:
  7274 ;;		_main
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           
  7279                           ;psect for function _Adaptive_base_pid
  7280  1473                     _Adaptive_base_pid:	
  7281                           
  7282                           ;MOTORCONTROL.C: 37: pidParams2.Kp2=2.0;
  7283                           
  7284                           ;incstack = 0
  7285                           ; Regs used in _Adaptive_base_pid: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7286  1473  3096               	movlw	150
  7287  1474  0086               	movwf	6
  7288  1475  3023               	movlw	35
  7289  1476  0087               	movwf	7
  7290  1477  3000               	movlw	0
  7291  1478  3FC0               	movwi [0]fsr1
  7292  1479  3000               	movlw	0
  7293  147A  3FC1               	movwi [1]fsr1
  7294  147B  3040               	movlw	64
  7295  147C  3FC2               	movwi [2]fsr1
  7296                           
  7297                           ;MOTORCONTROL.C: 38: pidParams2.Ki2=0.5;
  7298  147D  3096               	movlw	150
  7299  147E  0086               	movwf	6
  7300  147F  3023               	movlw	35
  7301  1480  0087               	movwf	7
  7302  1481  3143               	addfsr 1,3
  7303  1482  3000               	movlw	0
  7304  1483  3FC0               	movwi [0]fsr1
  7305  1484  3000               	movlw	0
  7306  1485  3FC1               	movwi [1]fsr1
  7307  1486  303F               	movlw	63
  7308  1487  3FC2               	movwi [2]fsr1
  7309                           
  7310                           ;MOTORCONTROL.C: 39: pidParams2.Kd2=0;
  7311  1488  3096               	movlw	150
  7312  1489  0086               	movwf	6
  7313  148A  3023               	movlw	35
  7314  148B  0087               	movwf	7
  7315  148C  3146               	addfsr 1,6
  7316  148D  3000               	movlw	0
  7317  148E  3FC0               	movwi [0]fsr1
  7318  148F  3000               	movlw	0
  7319  1490  3FC1               	movwi [1]fsr1
  7320  1491  3000               	movlw	0
  7321  1492  3FC2               	movwi [2]fsr1
  7322                           
  7323                           ;MOTORCONTROL.C: 41: pidParams2.ReferenceSetpoint2=setpfreq;
  7324  1493  0023               	movlb	3	; select bank3
  7325  1494  0850               	movf	_setpfreq^(0+384),w
  7326  1495  0021               	movlb	1	; select bank1
  7327  1496  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7328  1497  0023               	movlb	3	; select bank3
  7329  1498  0851               	movf	(_setpfreq+1)^(0+384),w
  7330  1499  0021               	movlb	1	; select bank1
  7331  149A  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7332  149B  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7333  149C  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7334  149D  30C4               	movlw	196
  7335  149E  0086               	movwf	6
  7336  149F  3023               	movlw	35
  7337  14A0  0087               	movwf	7
  7338  14A1  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7339  14A2  3FC0               	movwi [0]fsr1
  7340  14A3  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7341  14A4  3FC1               	movwi [1]fsr1
  7342  14A5  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7343  14A6  3FC2               	movwi [2]fsr1
  7344  14A7  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7345  14A8  3FC3               	movwi [3]fsr1
  7346                           
  7347                           ;MOTORCONTROL.C: 42: pidParams2.feedback2=Fltpfreq;
  7348  14A9  0022               	movlb	2	; select bank2
  7349  14AA  0820               	movf	_Fltpfreq^(0+256),w
  7350  14AB  0021               	movlb	1	; select bank1
  7351  14AC  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7352  14AD  0022               	movlb	2	; select bank2
  7353  14AE  0821               	movf	(_Fltpfreq+1)^(0+256),w
  7354  14AF  0021               	movlb	1	; select bank1
  7355  14B0  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7356  14B1  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7357  14B2  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7358  14B3  30C8               	movlw	200
  7359  14B4  0086               	movwf	6
  7360  14B5  3023               	movlw	35
  7361  14B6  0087               	movwf	7
  7362  14B7  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7363  14B8  3FC0               	movwi [0]fsr1
  7364  14B9  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7365  14BA  3FC1               	movwi [1]fsr1
  7366  14BB  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7367  14BC  3FC2               	movwi [2]fsr1
  7368  14BD  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7369  14BE  3FC3               	movwi [3]fsr1
  7370                           
  7371                           ;MOTORCONTROL.C: 43: disp1term=pidParams2.ReferenceSetpoint2;
  7372  14BF  30C4               	movlw	196
  7373  14C0  0086               	movwf	6
  7374  14C1  3023               	movlw	35
  7375  14C2  0087               	movwf	7
  7376  14C3  3F40               	moviw [0]fsr1
  7377  14C4  0024               	movlb	4	; select bank4
  7378  14C5  00B0               	movwf	_disp1term^(0+512)
  7379  14C6  3F41               	moviw [1]fsr1
  7380  14C7  00B1               	movwf	(_disp1term+1)^(0+512)
  7381                           
  7382                           ;MOTORCONTROL.C: 44: disp2term=pidParams2.feedback2;
  7383  14C8  30C8               	movlw	200
  7384  14C9  0086               	movwf	6
  7385  14CA  3023               	movlw	35
  7386  14CB  0087               	movwf	7
  7387  14CC  3F40               	moviw [0]fsr1
  7388  14CD  00B2               	movwf	_disp2term^(0+512)
  7389  14CE  3F41               	moviw [1]fsr1
  7390  14CF  00B3               	movwf	(_disp2term+1)^(0+512)
  7391                           
  7392                           ;MOTORCONTROL.C: 46: pidParams2.error2 = pidParams2.ReferenceSetpoint2 - pidParams2.feed
      +                          back2;
  7393  14D0  30C4               	movlw	196
  7394  14D1  0086               	movwf	6
  7395  14D2  3023               	movlw	35
  7396  14D3  0087               	movwf	7
  7397  14D4  3F40               	moviw [0]fsr1
  7398  14D5  0021               	movlb	1	; select bank1
  7399  14D6  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7400  14D7  3F41               	moviw [1]fsr1
  7401  14D8  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7402  14D9  3F42               	moviw [2]fsr1
  7403  14DA  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7404  14DB  3F43               	moviw [3]fsr1
  7405  14DC  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7406  14DD  30C8               	movlw	200
  7407  14DE  0086               	movwf	6
  7408  14DF  3023               	movlw	35
  7409  14E0  0087               	movwf	7
  7410  14E1  3F40               	moviw [0]fsr1
  7411  14E2  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  7412  14E3  3F41               	moviw [1]fsr1
  7413  14E4  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  7414  14E5  3F42               	moviw [2]fsr1
  7415  14E6  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  7416  14E7  3F43               	moviw [3]fsr1
  7417  14E8  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  7418  14E9  09DF               	comf	(??_Adaptive_base_pid+4)^(0+128),f
  7419  14EA  09E0               	comf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7420  14EB  09E1               	comf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7421  14EC  09E2               	comf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7422  14ED  0ADF               	incf	(??_Adaptive_base_pid+4)^(0+128),f
  7423  14EE  1903               	skipnz
  7424  14EF  0AE0               	incf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7425  14F0  1903               	skipnz
  7426  14F1  0AE1               	incf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7427  14F2  1903               	skipnz
  7428  14F3  0AE2               	incf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7429  14F4  085F               	movf	(??_Adaptive_base_pid+4)^(0+128),w
  7430  14F5  07DB               	addwf	??_Adaptive_base_pid^(0+128),f
  7431  14F6  0860               	movf	(??_Adaptive_base_pid+5)^(0+128),w
  7432  14F7  3DDC               	addwfc	(??_Adaptive_base_pid^(0+128)+1),f
  7433  14F8  0861               	movf	(??_Adaptive_base_pid+6)^(0+128),w
  7434  14F9  3DDD               	addwfc	(??_Adaptive_base_pid^(0+128)+2),f
  7435  14FA  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  7436  14FB  3DDE               	addwfc	(??_Adaptive_base_pid^(0+128)+3),f
  7437  14FC  3096               	movlw	150
  7438  14FD  0086               	movwf	6
  7439  14FE  3023               	movlw	35
  7440  14FF  0087               	movwf	7
  7441  1500  314C               	addfsr 1,12
  7442  1501  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7443  1502  3FC0               	movwi [0]fsr1
  7444  1503  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7445  1504  3FC1               	movwi [1]fsr1
  7446  1505  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7447  1506  3FC2               	movwi [2]fsr1
  7448  1507  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7449  1508  3FC3               	movwi [3]fsr1
  7450                           
  7451                           ;MOTORCONTROL.C: 47: pidParams2.feedback2=0;
  7452  1509  30C8               	movlw	200
  7453  150A  0086               	movwf	6
  7454  150B  3023               	movlw	35
  7455  150C  0087               	movwf	7
  7456  150D  3000               	movlw	0
  7457  150E  3FC0               	movwi [0]fsr1
  7458  150F  3FC1               	movwi [1]fsr1
  7459  1510  3FC2               	movwi [2]fsr1
  7460  1511  3FC3               	movwi [3]fsr1
  7461                           
  7462                           ;MOTORCONTROL.C: 48: pidParams2.outmax2=53000;
  7463  1512  30C0               	movlw	192
  7464  1513  0086               	movwf	6
  7465  1514  3023               	movlw	35
  7466  1515  0087               	movwf	7
  7467  1516  3008               	movlw	8
  7468  1517  3FC0               	movwi [0]fsr1
  7469  1518  30CF               	movlw	207
  7470  1519  3FC1               	movwi [1]fsr1
  7471  151A  3000               	movlw	0
  7472  151B  3FC2               	movwi [2]fsr1
  7473  151C  3000               	movlw	0
  7474  151D  3FC3               	movwi [3]fsr1
  7475                           
  7476                           ;MOTORCONTROL.C: 50: scalefactor2=66.0;
  7477  151E  3042               	movlw	66
  7478  151F  0023               	movlb	3	; select bank3
  7479  1520  00EB               	movwf	_scalefactor2^(0+384)
  7480  1521  3000               	movlw	0
  7481  1522  00EC               	movwf	(_scalefactor2^(0+384)+1)
  7482                           
  7483                           ;MOTORCONTROL.C: 53: {
  7484                           ;MOTORCONTROL.C: 54: error_new =pidParams2.error2;
  7485  1523  3096               	movlw	150
  7486  1524  0086               	movwf	6
  7487  1525  3023               	movlw	35
  7488  1526  0087               	movwf	7
  7489  1527  314C               	addfsr 1,12
  7490  1528  3F40               	moviw [0]fsr1
  7491  1529  0021               	movlb	1	; select bank1
  7492  152A  00A8               	movwf	___altoft@c^(0+128)
  7493  152B  3F41               	moviw [1]fsr1
  7494  152C  00A9               	movwf	(___altoft@c+1)^(0+128)
  7495  152D  3F42               	moviw [2]fsr1
  7496  152E  00AA               	movwf	(___altoft@c+2)^(0+128)
  7497  152F  3F43               	moviw [3]fsr1
  7498  1530  00AB               	movwf	(___altoft@c+3)^(0+128)
  7499  1531  319A  226D  3194   	fcall	___altoft
  7500  1534  0021               	movlb	1	; select bank1
  7501  1535  0828               	movf	?___altoft^(0+128),w
  7502  1536  0023               	movlb	3	; select bank3
  7503  1537  00A0               	movwf	_error_new^(0+384)
  7504  1538  0021               	movlb	1	; select bank1
  7505  1539  0829               	movf	(?___altoft+1)^(0+128),w
  7506  153A  0023               	movlb	3	; select bank3
  7507  153B  00A1               	movwf	(_error_new+1)^(0+384)
  7508  153C  0021               	movlb	1	; select bank1
  7509  153D  082A               	movf	(?___altoft+2)^(0+128),w
  7510  153E  0023               	movlb	3	; select bank3
  7511  153F  00A2               	movwf	(_error_new+2)^(0+384)
  7512                           
  7513                           ;MOTORCONTROL.C: 55: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7514  1540  3096               	movlw	150
  7515  1541  0086               	movwf	6
  7516  1542  3023               	movlw	35
  7517  1543  0087               	movwf	7
  7518  1544  3143               	addfsr 1,3
  7519  1545  3F40               	moviw [0]fsr1
  7520  1546  0021               	movlb	1	; select bank1
  7521  1547  00B5               	movwf	___ftmul@f1^(0+128)
  7522  1548  3F41               	moviw [1]fsr1
  7523  1549  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7524  154A  3F42               	moviw [2]fsr1
  7525  154B  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7526  154C  0023               	movlb	3	; select bank3
  7527  154D  0823               	movf	_error_old^(0+384),w
  7528  154E  0021               	movlb	1	; select bank1
  7529  154F  00A8               	movwf	___ftadd@f1^(0+128)
  7530  1550  0023               	movlb	3	; select bank3
  7531  1551  0824               	movf	(_error_old+1)^(0+384),w
  7532  1552  0021               	movlb	1	; select bank1
  7533  1553  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7534  1554  0023               	movlb	3	; select bank3
  7535  1555  0825               	movf	(_error_old+2)^(0+384),w
  7536  1556  0021               	movlb	1	; select bank1
  7537  1557  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7538  1558  0023               	movlb	3	; select bank3
  7539  1559  0820               	movf	_error_new^(0+384),w
  7540  155A  0021               	movlb	1	; select bank1
  7541  155B  00AB               	movwf	___ftadd@f2^(0+128)
  7542  155C  0023               	movlb	3	; select bank3
  7543  155D  0821               	movf	(_error_new+1)^(0+384),w
  7544  155E  0021               	movlb	1	; select bank1
  7545  155F  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7546  1560  0023               	movlb	3	; select bank3
  7547  1561  0822               	movf	(_error_new+2)^(0+384),w
  7548  1562  0021               	movlb	1	; select bank1
  7549  1563  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7550  1564  3188  205C  3194   	fcall	___ftadd
  7551  1567  0021               	movlb	1	; select bank1
  7552  1568  0828               	movf	?___ftadd^(0+128),w
  7553  1569  00B8               	movwf	___ftmul@f2^(0+128)
  7554  156A  0829               	movf	(?___ftadd+1)^(0+128),w
  7555  156B  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7556  156C  082A               	movf	(?___ftadd+2)^(0+128),w
  7557  156D  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7558  156E  3192  22C9  3194   	fcall	___ftmul
  7559  1571  0021               	movlb	1	; select bank1
  7560  1572  0835               	movf	?___ftmul^(0+128),w
  7561  1573  00E4               	movwf	_Adaptive_base_pid$1773^(0+128)
  7562  1574  0836               	movf	(?___ftmul+1)^(0+128),w
  7563  1575  00E5               	movwf	(_Adaptive_base_pid$1773+1)^(0+128)
  7564  1576  0837               	movf	(?___ftmul+2)^(0+128),w
  7565  1577  00E6               	movwf	(_Adaptive_base_pid$1773+2)^(0+128)
  7566                           
  7567                           ;MOTORCONTROL.C: 55: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7568  1578  0023               	movlb	3	; select bank3
  7569  1579  0829               	movf	_integral_old^(0+384),w
  7570  157A  0021               	movlb	1	; select bank1
  7571  157B  00A8               	movwf	___ftadd@f1^(0+128)
  7572  157C  0023               	movlb	3	; select bank3
  7573  157D  082A               	movf	(_integral_old+1)^(0+384),w
  7574  157E  0021               	movlb	1	; select bank1
  7575  157F  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7576  1580  0023               	movlb	3	; select bank3
  7577  1581  082B               	movf	(_integral_old+2)^(0+384),w
  7578  1582  0021               	movlb	1	; select bank1
  7579  1583  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7580  1584  3000               	movlw	0
  7581  1585  00C5               	movwf	___ftdiv@f2^(0+128)
  7582  1586  3000               	movlw	0
  7583  1587  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  7584  1588  3040               	movlw	64
  7585  1589  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  7586  158A  0023               	movlb	3	; select bank3
  7587  158B  0860               	movf	_Tsampling^(0+384),w
  7588  158C  0021               	movlb	1	; select bank1
  7589  158D  00B5               	movwf	___ftmul@f1^(0+128)
  7590  158E  0023               	movlb	3	; select bank3
  7591  158F  0861               	movf	(_Tsampling+1)^(0+384),w
  7592  1590  0021               	movlb	1	; select bank1
  7593  1591  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7594  1592  0023               	movlb	3	; select bank3
  7595  1593  0862               	movf	(_Tsampling+2)^(0+384),w
  7596  1594  0021               	movlb	1	; select bank1
  7597  1595  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7598  1596  0864               	movf	_Adaptive_base_pid$1773^(0+128),w
  7599  1597  00B8               	movwf	___ftmul@f2^(0+128)
  7600  1598  0865               	movf	(_Adaptive_base_pid$1773+1)^(0+128),w
  7601  1599  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7602  159A  0866               	movf	(_Adaptive_base_pid$1773+2)^(0+128),w
  7603  159B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7604  159C  3192  22C9  3194   	fcall	___ftmul
  7605  159F  0021               	movlb	1	; select bank1
  7606  15A0  0835               	movf	?___ftmul^(0+128),w
  7607  15A1  00C8               	movwf	___ftdiv@f1^(0+128)
  7608  15A2  0836               	movf	(?___ftmul+1)^(0+128),w
  7609  15A3  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  7610  15A4  0837               	movf	(?___ftmul+2)^(0+128),w
  7611  15A5  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  7612  15A6  3190  20C2  3194   	fcall	___ftdiv
  7613  15A9  0021               	movlb	1	; select bank1
  7614  15AA  0845               	movf	?___ftdiv^(0+128),w
  7615  15AB  00AB               	movwf	___ftadd@f2^(0+128)
  7616  15AC  0846               	movf	(?___ftdiv+1)^(0+128),w
  7617  15AD  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7618  15AE  0847               	movf	(?___ftdiv+2)^(0+128),w
  7619  15AF  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7620  15B0  3188  205C  3194   	fcall	___ftadd
  7621  15B3  0021               	movlb	1	; select bank1
  7622  15B4  0828               	movf	?___ftadd^(0+128),w
  7623  15B5  0023               	movlb	3	; select bank3
  7624  15B6  00A6               	movwf	_integral_new^(0+384)
  7625  15B7  0021               	movlb	1	; select bank1
  7626  15B8  0829               	movf	(?___ftadd+1)^(0+128),w
  7627  15B9  0023               	movlb	3	; select bank3
  7628  15BA  00A7               	movwf	(_integral_new+1)^(0+384)
  7629  15BB  0021               	movlb	1	; select bank1
  7630  15BC  082A               	movf	(?___ftadd+2)^(0+128),w
  7631  15BD  0023               	movlb	3	; select bank3
  7632  15BE  00A8               	movwf	(_integral_new+2)^(0+384)
  7633                           
  7634                           ;MOTORCONTROL.C: 57: if((integral_new > pidParams2.outmax2) || (integral_new < minoutmax
      +                          ))
  7635  15BF  30C0               	movlw	192
  7636  15C0  0086               	movwf	6
  7637  15C1  3023               	movlw	35
  7638  15C2  0087               	movwf	7
  7639  15C3  3F40               	moviw [0]fsr1
  7640  15C4  0021               	movlb	1	; select bank1
  7641  15C5  00A8               	movwf	___altoft@c^(0+128)
  7642  15C6  3F41               	moviw [1]fsr1
  7643  15C7  00A9               	movwf	(___altoft@c+1)^(0+128)
  7644  15C8  3F42               	moviw [2]fsr1
  7645  15C9  00AA               	movwf	(___altoft@c+2)^(0+128)
  7646  15CA  3F43               	moviw [3]fsr1
  7647  15CB  00AB               	movwf	(___altoft@c+3)^(0+128)
  7648  15CC  319A  226D  3194   	fcall	___altoft
  7649  15CF  0021               	movlb	1	; select bank1
  7650  15D0  0828               	movf	?___altoft^(0+128),w
  7651  15D1  00B0               	movwf	___ftge@ff1^(0+128)
  7652  15D2  0829               	movf	(?___altoft+1)^(0+128),w
  7653  15D3  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  7654  15D4  082A               	movf	(?___altoft+2)^(0+128),w
  7655  15D5  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  7656  15D6  0023               	movlb	3	; select bank3
  7657  15D7  0826               	movf	_integral_new^(0+384),w
  7658  15D8  0021               	movlb	1	; select bank1
  7659  15D9  00B3               	movwf	___ftge@ff2^(0+128)
  7660  15DA  0023               	movlb	3	; select bank3
  7661  15DB  0827               	movf	(_integral_new+1)^(0+384),w
  7662  15DC  0021               	movlb	1	; select bank1
  7663  15DD  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  7664  15DE  0023               	movlb	3	; select bank3
  7665  15DF  0828               	movf	(_integral_new+2)^(0+384),w
  7666  15E0  0021               	movlb	1	; select bank1
  7667  15E1  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  7668  15E2  319A  2231  3194   	fcall	___ftge
  7669  15E5  1C03               	btfss	3,0
  7670  15E6  2E04               	goto	l4311
  7671  15E7  0023               	movlb	3	; select bank3
  7672  15E8  0826               	movf	_integral_new^(0+384),w
  7673  15E9  0021               	movlb	1	; select bank1
  7674  15EA  00B0               	movwf	___ftge@ff1^(0+128)
  7675  15EB  0023               	movlb	3	; select bank3
  7676  15EC  0827               	movf	(_integral_new+1)^(0+384),w
  7677  15ED  0021               	movlb	1	; select bank1
  7678  15EE  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  7679  15EF  0023               	movlb	3	; select bank3
  7680  15F0  0828               	movf	(_integral_new+2)^(0+384),w
  7681  15F1  0021               	movlb	1	; select bank1
  7682  15F2  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  7683  15F3  0024               	movlb	4	; select bank4
  7684  15F4  0827               	movf	_minoutmax^(0+512),w
  7685  15F5  0021               	movlb	1	; select bank1
  7686  15F6  00B3               	movwf	___ftge@ff2^(0+128)
  7687  15F7  0024               	movlb	4	; select bank4
  7688  15F8  0828               	movf	(_minoutmax+1)^(0+512),w
  7689  15F9  0021               	movlb	1	; select bank1
  7690  15FA  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  7691  15FB  0024               	movlb	4	; select bank4
  7692  15FC  0829               	movf	(_minoutmax+2)^(0+512),w
  7693  15FD  0021               	movlb	1	; select bank1
  7694  15FE  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  7695  15FF  319A  2231  3194   	fcall	___ftge
  7696  1602  1803               	btfsc	3,0
  7697  1603  2E0B               	goto	l4313
  7698  1604                     l4311:	
  7699                           
  7700                           ;MOTORCONTROL.C: 58: integral_new = integral_old;
  7701  1604  0023               	movlb	3	; select bank3
  7702  1605  0829               	movf	_integral_old^(0+384),w
  7703  1606  00A6               	movwf	_integral_new^(0+384)
  7704  1607  082A               	movf	(_integral_old+1)^(0+384),w
  7705  1608  00A7               	movwf	(_integral_new+1)^(0+384)
  7706  1609  082B               	movf	(_integral_old+2)^(0+384),w
  7707  160A  00A8               	movwf	(_integral_new+2)^(0+384)
  7708  160B                     l4313:	
  7709                           
  7710                           ;MOTORCONTROL.C: 60: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7711  160B  0023               	movlb	3	; select bank3
  7712  160C  0860               	movf	_Tsampling^(0+384),w
  7713  160D  0021               	movlb	1	; select bank1
  7714  160E  00C5               	movwf	___ftdiv@f2^(0+128)
  7715  160F  0023               	movlb	3	; select bank3
  7716  1610  0861               	movf	(_Tsampling+1)^(0+384),w
  7717  1611  0021               	movlb	1	; select bank1
  7718  1612  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  7719  1613  0023               	movlb	3	; select bank3
  7720  1614  0862               	movf	(_Tsampling+2)^(0+384),w
  7721  1615  0021               	movlb	1	; select bank1
  7722  1616  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  7723  1617  3096               	movlw	150
  7724  1618  0086               	movwf	6
  7725  1619  3023               	movlw	35
  7726  161A  0087               	movwf	7
  7727  161B  3146               	addfsr 1,6
  7728  161C  3F40               	moviw [0]fsr1
  7729  161D  00B5               	movwf	___ftmul@f1^(0+128)
  7730  161E  3F41               	moviw [1]fsr1
  7731  161F  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7732  1620  3F42               	moviw [2]fsr1
  7733  1621  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7734  1622  0023               	movlb	3	; select bank3
  7735  1623  0820               	movf	_error_new^(0+384),w
  7736  1624  0021               	movlb	1	; select bank1
  7737  1625  00A8               	movwf	___ftadd@f1^(0+128)
  7738  1626  0023               	movlb	3	; select bank3
  7739  1627  0821               	movf	(_error_new+1)^(0+384),w
  7740  1628  0021               	movlb	1	; select bank1
  7741  1629  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7742  162A  0023               	movlb	3	; select bank3
  7743  162B  0822               	movf	(_error_new+2)^(0+384),w
  7744  162C  0021               	movlb	1	; select bank1
  7745  162D  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7746  162E  0023               	movlb	3	; select bank3
  7747  162F  0823               	movf	_error_old^(0+384),w
  7748  1630  0021               	movlb	1	; select bank1
  7749  1631  00A0               	movwf	___ftneg@f1^(0+128)
  7750  1632  0023               	movlb	3	; select bank3
  7751  1633  0824               	movf	(_error_old+1)^(0+384),w
  7752  1634  0021               	movlb	1	; select bank1
  7753  1635  00A1               	movwf	(___ftneg@f1+1)^(0+128)
  7754  1636  0023               	movlb	3	; select bank3
  7755  1637  0825               	movf	(_error_old+2)^(0+384),w
  7756  1638  0021               	movlb	1	; select bank1
  7757  1639  00A2               	movwf	(___ftneg@f1+2)^(0+128)
  7758  163A  3198  208C  3194   	fcall	___ftneg
  7759  163D  0021               	movlb	1	; select bank1
  7760  163E  0820               	movf	?___ftneg^(0+128),w
  7761  163F  00AB               	movwf	___ftadd@f2^(0+128)
  7762  1640  0821               	movf	(?___ftneg+1)^(0+128),w
  7763  1641  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7764  1642  0822               	movf	(?___ftneg+2)^(0+128),w
  7765  1643  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7766  1644  3188  205C  3194   	fcall	___ftadd
  7767  1647  0021               	movlb	1	; select bank1
  7768  1648  0828               	movf	?___ftadd^(0+128),w
  7769  1649  00B8               	movwf	___ftmul@f2^(0+128)
  7770  164A  0829               	movf	(?___ftadd+1)^(0+128),w
  7771  164B  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7772  164C  082A               	movf	(?___ftadd+2)^(0+128),w
  7773  164D  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7774  164E  3192  22C9  3194   	fcall	___ftmul
  7775  1651  0021               	movlb	1	; select bank1
  7776  1652  0835               	movf	?___ftmul^(0+128),w
  7777  1653  00C8               	movwf	___ftdiv@f1^(0+128)
  7778  1654  0836               	movf	(?___ftmul+1)^(0+128),w
  7779  1655  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  7780  1656  0837               	movf	(?___ftmul+2)^(0+128),w
  7781  1657  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  7782  1658  3190  20C2  3194   	fcall	___ftdiv
  7783  165B  0021               	movlb	1	; select bank1
  7784  165C  0845               	movf	?___ftdiv^(0+128),w
  7785  165D  00E7               	movwf	_Adaptive_base_pid$1774^(0+128)
  7786  165E  0846               	movf	(?___ftdiv+1)^(0+128),w
  7787  165F  00E8               	movwf	(_Adaptive_base_pid$1774+1)^(0+128)
  7788  1660  0847               	movf	(?___ftdiv+2)^(0+128),w
  7789  1661  00E9               	movwf	(_Adaptive_base_pid$1774+2)^(0+128)
  7790                           
  7791                           ;MOTORCONTROL.C: 60: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7792  1662  0867               	movf	_Adaptive_base_pid$1774^(0+128),w
  7793  1663  00A8               	movwf	___ftadd@f1^(0+128)
  7794  1664  0868               	movf	(_Adaptive_base_pid$1774+1)^(0+128),w
  7795  1665  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7796  1666  0869               	movf	(_Adaptive_base_pid$1774+2)^(0+128),w
  7797  1667  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7798  1668  0023               	movlb	3	; select bank3
  7799  1669  0820               	movf	_error_new^(0+384),w
  7800  166A  0021               	movlb	1	; select bank1
  7801  166B  00B5               	movwf	___ftmul@f1^(0+128)
  7802  166C  0023               	movlb	3	; select bank3
  7803  166D  0821               	movf	(_error_new+1)^(0+384),w
  7804  166E  0021               	movlb	1	; select bank1
  7805  166F  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7806  1670  0023               	movlb	3	; select bank3
  7807  1671  0822               	movf	(_error_new+2)^(0+384),w
  7808  1672  0021               	movlb	1	; select bank1
  7809  1673  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7810  1674  3096               	movlw	150
  7811  1675  0086               	movwf	6
  7812  1676  3023               	movlw	35
  7813  1677  0087               	movwf	7
  7814  1678  3F40               	moviw [0]fsr1
  7815  1679  00B8               	movwf	___ftmul@f2^(0+128)
  7816  167A  3F41               	moviw [1]fsr1
  7817  167B  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7818  167C  3F42               	moviw [2]fsr1
  7819  167D  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7820  167E  3192  22C9  3194   	fcall	___ftmul
  7821  1681  0021               	movlb	1	; select bank1
  7822  1682  0835               	movf	?___ftmul^(0+128),w
  7823  1683  00AB               	movwf	___ftadd@f2^(0+128)
  7824  1684  0836               	movf	(?___ftmul+1)^(0+128),w
  7825  1685  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7826  1686  0837               	movf	(?___ftmul+2)^(0+128),w
  7827  1687  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7828  1688  3188  205C  3194   	fcall	___ftadd
  7829  168B  0021               	movlb	1	; select bank1
  7830  168C  0828               	movf	?___ftadd^(0+128),w
  7831  168D  00EA               	movwf	_Adaptive_base_pid$1775^(0+128)
  7832  168E  0829               	movf	(?___ftadd+1)^(0+128),w
  7833  168F  00EB               	movwf	(_Adaptive_base_pid$1775+1)^(0+128)
  7834  1690  082A               	movf	(?___ftadd+2)^(0+128),w
  7835  1691  00EC               	movwf	(_Adaptive_base_pid$1775+2)^(0+128)
  7836                           
  7837                           ;MOTORCONTROL.C: 60: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7838  1692  0023               	movlb	3	; select bank3
  7839  1693  0826               	movf	_integral_new^(0+384),w
  7840  1694  0021               	movlb	1	; select bank1
  7841  1695  00A8               	movwf	___ftadd@f1^(0+128)
  7842  1696  0023               	movlb	3	; select bank3
  7843  1697  0827               	movf	(_integral_new+1)^(0+384),w
  7844  1698  0021               	movlb	1	; select bank1
  7845  1699  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7846  169A  0023               	movlb	3	; select bank3
  7847  169B  0828               	movf	(_integral_new+2)^(0+384),w
  7848  169C  0021               	movlb	1	; select bank1
  7849  169D  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7850  169E  086A               	movf	_Adaptive_base_pid$1775^(0+128),w
  7851  169F  00AB               	movwf	___ftadd@f2^(0+128)
  7852  16A0  086B               	movf	(_Adaptive_base_pid$1775+1)^(0+128),w
  7853  16A1  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7854  16A2  086C               	movf	(_Adaptive_base_pid$1775+2)^(0+128),w
  7855  16A3  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7856  16A4  3188  205C  3194   	fcall	___ftadd
  7857  16A7  0021               	movlb	1	; select bank1
  7858  16A8  0828               	movf	?___ftadd^(0+128),w
  7859  16A9  0024               	movlb	4	; select bank4
  7860  16AA  00A4               	movwf	_controller_out^(0+512)
  7861  16AB  0021               	movlb	1	; select bank1
  7862  16AC  0829               	movf	(?___ftadd+1)^(0+128),w
  7863  16AD  0024               	movlb	4	; select bank4
  7864  16AE  00A5               	movwf	(_controller_out+1)^(0+512)
  7865  16AF  0021               	movlb	1	; select bank1
  7866  16B0  082A               	movf	(?___ftadd+2)^(0+128),w
  7867  16B1  0024               	movlb	4	; select bank4
  7868  16B2  00A6               	movwf	(_controller_out+2)^(0+512)
  7869                           
  7870                           ;MOTORCONTROL.C: 61: integral_old = integral_new;
  7871  16B3  0023               	movlb	3	; select bank3
  7872  16B4  0826               	movf	_integral_new^(0+384),w
  7873  16B5  00A9               	movwf	_integral_old^(0+384)
  7874  16B6  0827               	movf	(_integral_new+1)^(0+384),w
  7875  16B7  00AA               	movwf	(_integral_old+1)^(0+384)
  7876  16B8  0828               	movf	(_integral_new+2)^(0+384),w
  7877  16B9  00AB               	movwf	(_integral_old+2)^(0+384)
  7878                           
  7879                           ;MOTORCONTROL.C: 62: error_old = error_new;
  7880  16BA  0820               	movf	_error_new^(0+384),w
  7881  16BB  00A3               	movwf	_error_old^(0+384)
  7882  16BC  0821               	movf	(_error_new+1)^(0+384),w
  7883  16BD  00A4               	movwf	(_error_old+1)^(0+384)
  7884  16BE  0822               	movf	(_error_new+2)^(0+384),w
  7885  16BF  00A5               	movwf	(_error_old+2)^(0+384)
  7886                           
  7887                           ;MOTORCONTROL.C: 63: pidParams2.pidoutput2=controller_out;
  7888  16C0  0024               	movlb	4	; select bank4
  7889  16C1  0824               	movf	_controller_out^(0+512),w
  7890  16C2  0021               	movlb	1	; select bank1
  7891  16C3  00C5               	movwf	___fttol@f1^(0+128)
  7892  16C4  0024               	movlb	4	; select bank4
  7893  16C5  0825               	movf	(_controller_out+1)^(0+512),w
  7894  16C6  0021               	movlb	1	; select bank1
  7895  16C7  00C6               	movwf	(___fttol@f1+1)^(0+128)
  7896  16C8  0024               	movlb	4	; select bank4
  7897  16C9  0826               	movf	(_controller_out+2)^(0+512),w
  7898  16CA  0021               	movlb	1	; select bank1
  7899  16CB  00C7               	movwf	(___fttol@f1+2)^(0+128)
  7900  16CC  319F  2779  3194   	fcall	___fttol
  7901  16CF  30E0               	movlw	224
  7902  16D0  0086               	movwf	6
  7903  16D1  3023               	movlw	35
  7904  16D2  0087               	movwf	7
  7905  16D3  0021               	movlb	1	; select bank1
  7906  16D4  0845               	movf	?___fttol^(0+128),w
  7907  16D5  3FC0               	movwi [0]fsr1
  7908  16D6  0846               	movf	(?___fttol+1)^(0+128),w
  7909  16D7  3FC1               	movwi [1]fsr1
  7910  16D8  0847               	movf	(?___fttol+2)^(0+128),w
  7911  16D9  3FC2               	movwi [2]fsr1
  7912  16DA  0848               	movf	(?___fttol+3)^(0+128),w
  7913  16DB  3FC3               	movwi [3]fsr1
  7914                           
  7915                           ;MOTORCONTROL.C: 66: if(pidParams2.pidoutput2<=0)
  7916  16DC  30E0               	movlw	224
  7917  16DD  0086               	movwf	6
  7918  16DE  3023               	movlw	35
  7919  16DF  0087               	movwf	7
  7920  16E0  3F40               	moviw [0]fsr1
  7921  16E1  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7922  16E2  3F41               	moviw [1]fsr1
  7923  16E3  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7924  16E4  3F42               	moviw [2]fsr1
  7925  16E5  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7926  16E6  3F43               	moviw [3]fsr1
  7927  16E7  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7928  16E8  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7929  16E9  3A80               	xorlw	128
  7930  16EA  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  7931  16EB  3000               	movlw	0
  7932  16EC  3A80               	xorlw	128
  7933  16ED  025F               	subwf	(??_Adaptive_base_pid+4)^(0+128),w
  7934  16EE  1D03               	skipz
  7935  16EF  2EFA               	goto	u5803
  7936  16F0  3000               	movlw	0
  7937  16F1  025D               	subwf	(??_Adaptive_base_pid+2)^(0+128),w
  7938  16F2  1D03               	skipz
  7939  16F3  2EFA               	goto	u5803
  7940  16F4  3000               	movlw	0
  7941  16F5  025C               	subwf	(??_Adaptive_base_pid+1)^(0+128),w
  7942  16F6  1D03               	skipz
  7943  16F7  2EFA               	goto	u5803
  7944  16F8  3001               	movlw	1
  7945  16F9  025B               	subwf	??_Adaptive_base_pid^(0+128),w
  7946  16FA                     u5803:	
  7947  16FA  1803               	skipnc
  7948  16FB  2F06               	goto	l4329
  7949                           
  7950                           ;MOTORCONTROL.C: 67: pidParams2.pidoutput2=0;
  7951  16FC  30E0               	movlw	224
  7952  16FD  0086               	movwf	6
  7953  16FE  3023               	movlw	35
  7954  16FF  0087               	movwf	7
  7955  1700  3000               	movlw	0
  7956  1701  3FC0               	movwi [0]fsr1
  7957  1702  3FC1               	movwi [1]fsr1
  7958  1703  3FC2               	movwi [2]fsr1
  7959  1704  3FC3               	movwi [3]fsr1
  7960  1705  2F4A               	goto	l540
  7961  1706                     l4329:	
  7962                           
  7963                           ;MOTORCONTROL.C: 68: else if(pidParams2.pidoutput2>pidParams2.outmax2)
  7964  1706  30E0               	movlw	224
  7965  1707  0086               	movwf	6
  7966  1708  3023               	movlw	35
  7967  1709  0087               	movwf	7
  7968  170A  3F40               	moviw [0]fsr1
  7969  170B  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7970  170C  3F41               	moviw [1]fsr1
  7971  170D  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7972  170E  3F42               	moviw [2]fsr1
  7973  170F  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7974  1710  3F43               	moviw [3]fsr1
  7975  1711  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7976  1712  30C0               	movlw	192
  7977  1713  0086               	movwf	6
  7978  1714  3023               	movlw	35
  7979  1715  0087               	movwf	7
  7980  1716  3F40               	moviw [0]fsr1
  7981  1717  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  7982  1718  3F41               	moviw [1]fsr1
  7983  1719  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  7984  171A  3F42               	moviw [2]fsr1
  7985  171B  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  7986  171C  3F43               	moviw [3]fsr1
  7987  171D  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  7988  171E  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  7989  171F  3A80               	xorlw	128
  7990  1720  00E3               	movwf	(??_Adaptive_base_pid+8)^(0+128)
  7991  1721  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7992  1722  3A80               	xorlw	128
  7993  1723  0263               	subwf	(??_Adaptive_base_pid+8)^(0+128),w
  7994  1724  1D03               	skipz
  7995  1725  2F30               	goto	u5813
  7996  1726  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7997  1727  0261               	subwf	(??_Adaptive_base_pid+6)^(0+128),w
  7998  1728  1D03               	skipz
  7999  1729  2F30               	goto	u5813
  8000  172A  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8001  172B  0260               	subwf	(??_Adaptive_base_pid+5)^(0+128),w
  8002  172C  1D03               	skipz
  8003  172D  2F30               	goto	u5813
  8004  172E  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8005  172F  025F               	subwf	(??_Adaptive_base_pid+4)^(0+128),w
  8006  1730                     u5813:	
  8007  1730  1803               	skipnc
  8008  1731  2F4A               	goto	l540
  8009                           
  8010                           ;MOTORCONTROL.C: 69: pidParams2.pidoutput2=pidParams2.outmax2;
  8011  1732  30C0               	movlw	192
  8012  1733  0086               	movwf	6
  8013  1734  3023               	movlw	35
  8014  1735  0087               	movwf	7
  8015  1736  3F40               	moviw [0]fsr1
  8016  1737  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8017  1738  3F41               	moviw [1]fsr1
  8018  1739  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8019  173A  3F42               	moviw [2]fsr1
  8020  173B  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8021  173C  3F43               	moviw [3]fsr1
  8022  173D  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8023  173E  30E0               	movlw	224
  8024  173F  0086               	movwf	6
  8025  1740  3023               	movlw	35
  8026  1741  0087               	movwf	7
  8027  1742  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8028  1743  3FC0               	movwi [0]fsr1
  8029  1744  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8030  1745  3FC1               	movwi [1]fsr1
  8031  1746  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8032  1747  3FC2               	movwi [2]fsr1
  8033  1748  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8034  1749  3FC3               	movwi [3]fsr1
  8035  174A                     l540:	
  8036                           
  8037                           ;MOTORCONTROL.C: 73: disp4term=pidParams2.pidoutput2;
  8038  174A  30E0               	movlw	224
  8039  174B  0086               	movwf	6
  8040  174C  3023               	movlw	35
  8041  174D  0087               	movwf	7
  8042  174E  3F40               	moviw [0]fsr1
  8043  174F  0024               	movlb	4	; select bank4
  8044  1750  00B6               	movwf	_disp4term^(0+512)
  8045  1751  3F41               	moviw [1]fsr1
  8046  1752  00B7               	movwf	(_disp4term+1)^(0+512)
  8047                           
  8048                           ;MOTORCONTROL.C: 74: scaled_baseval2=(pidParams2.pidoutput2/scalefactor2);
  8049  1753  0023               	movlb	3	; select bank3
  8050  1754  086B               	movf	_scalefactor2^(0+384),w
  8051  1755  0021               	movlb	1	; select bank1
  8052  1756  00A0               	movwf	___aldiv@divisor^(0+128)
  8053  1757  0023               	movlb	3	; select bank3
  8054  1758  086C               	movf	(_scalefactor2+1)^(0+384),w
  8055  1759  0021               	movlb	1	; select bank1
  8056  175A  00A1               	movwf	(___aldiv@divisor^(0+128)+1)
  8057  175B  01A2               	clrf	(___aldiv@divisor^(0+128)+2)
  8058  175C  01A3               	clrf	(___aldiv@divisor^(0+128)+3)
  8059  175D  30E0               	movlw	224
  8060  175E  0086               	movwf	6
  8061  175F  3023               	movlw	35
  8062  1760  0087               	movwf	7
  8063  1761  3F40               	moviw [0]fsr1
  8064  1762  00A4               	movwf	___aldiv@dividend^(0+128)
  8065  1763  3F41               	moviw [1]fsr1
  8066  1764  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  8067  1765  3F42               	moviw [2]fsr1
  8068  1766  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  8069  1767  3F43               	moviw [3]fsr1
  8070  1768  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  8071  1769  319E  2670  3194   	fcall	___aldiv
  8072  176C  0021               	movlb	1	; select bank1
  8073  176D  0821               	movf	(?___aldiv^(0+128)+1),w
  8074  176E  0023               	movlb	3	; select bank3
  8075  176F  01CF               	clrf	(_scaled_baseval2+1)^(0+384)
  8076  1770  07CF               	addwf	(_scaled_baseval2+1)^(0+384),f
  8077  1771  0021               	movlb	1	; select bank1
  8078  1772  0820               	movf	?___aldiv^(0+128),w
  8079  1773  0023               	movlb	3	; select bank3
  8080  1774  01CE               	clrf	_scaled_baseval2^(0+384)
  8081  1775  07CE               	addwf	_scaled_baseval2^(0+384),f
  8082                           
  8083                           ;MOTORCONTROL.C: 76: if(scaled_baseval2>maxfmspeed)
  8084  1776  084F               	movf	(_scaled_baseval2+1)^(0+384),w
  8085  1777  0268               	subwf	(_maxfmspeed+1)^(0+384),w
  8086  1778  1D03               	skipz
  8087  1779  2F7C               	goto	u5825
  8088  177A  084E               	movf	_scaled_baseval2^(0+384),w
  8089  177B  0267               	subwf	_maxfmspeed^(0+384),w
  8090  177C                     u5825:	
  8091  177C  1803               	skipnc
  8092  177D  2F83               	goto	l4339
  8093                           
  8094                           ;MOTORCONTROL.C: 77: {
  8095                           ;MOTORCONTROL.C: 78: scaled_baseval2=maxfmspeed;
  8096  177E  0868               	movf	(_maxfmspeed+1)^(0+384),w
  8097  177F  01CF               	clrf	(_scaled_baseval2+1)^(0+384)
  8098  1780  07CF               	addwf	(_scaled_baseval2+1)^(0+384),f
  8099  1781  0867               	movf	_maxfmspeed^(0+384),w
  8100  1782  2F8F               	goto	L17
  8101  1783                     l4339:	
  8102                           ;MOTORCONTROL.C: 79: }
  8103                           
  8104                           
  8105                           ;MOTORCONTROL.C: 80: else if(scaled_baseval2<minfmspeed)
  8106  1783  086A               	movf	(_minfmspeed+1)^(0+384),w
  8107  1784  024F               	subwf	(_scaled_baseval2+1)^(0+384),w
  8108  1785  1D03               	skipz
  8109  1786  2F89               	goto	u5835
  8110  1787  0869               	movf	_minfmspeed^(0+384),w
  8111  1788  024E               	subwf	_scaled_baseval2^(0+384),w
  8112  1789                     u5835:	
  8113  1789  1803               	skipnc
  8114  178A  2F91               	goto	l4343
  8115                           
  8116                           ;MOTORCONTROL.C: 81: {
  8117                           ;MOTORCONTROL.C: 82: scaled_baseval2=minfmspeed;
  8118  178B  086A               	movf	(_minfmspeed+1)^(0+384),w
  8119  178C  01CF               	clrf	(_scaled_baseval2+1)^(0+384)
  8120  178D  07CF               	addwf	(_scaled_baseval2+1)^(0+384),f
  8121  178E  0869               	movf	_minfmspeed^(0+384),w
  8122  178F                     L17:	
  8123  178F  01CE               	clrf	_scaled_baseval2^(0+384)
  8124  1790  07CE               	addwf	_scaled_baseval2^(0+384),f
  8125  1791                     l4343:	
  8126                           
  8127                           ;MOTORCONTROL.C: 83: }
  8128                           ;MOTORCONTROL.C: 84: if(cyclestrtf==1 && closeloopf==1)
  8129  1791  0022               	movlb	2	; select bank2
  8130  1792  083C               	movf	_cyclestrtf^(0+256),w
  8131  1793  3A01               	xorlw	1
  8132  1794  1D03               	skipz
  8133  1795  2FC7               	goto	l4349
  8134  1796  0836               	movf	_closeloopf^(0+256),w
  8135  1797  3A01               	xorlw	1
  8136  1798  1D03               	skipz
  8137  1799  2FC7               	goto	l4349
  8138                           
  8139                           ;MOTORCONTROL.C: 85: {
  8140                           ;MOTORCONTROL.C: 87: Update_PWM(3.6*newsetwirespeed);
  8141  179A  0020               	movlb	0	; select bank0
  8142  179B  086A               	movf	_newsetwirespeed+1,w
  8143  179C  0021               	movlb	1	; select bank1
  8144  179D  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  8145  179E  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  8146  179F  0020               	movlb	0	; select bank0
  8147  17A0  0869               	movf	_newsetwirespeed,w
  8148  17A1  0021               	movlb	1	; select bank1
  8149  17A2  01A8               	clrf	___lwtoft@c^(0+128)
  8150  17A3  07A8               	addwf	___lwtoft@c^(0+128),f
  8151  17A4  3199  2124  3194   	fcall	___lwtoft
  8152  17A7  0021               	movlb	1	; select bank1
  8153  17A8  0828               	movf	?___lwtoft^(0+128),w
  8154  17A9  00B8               	movwf	___ftmul@f2^(0+128)
  8155  17AA  0829               	movf	(?___lwtoft+1)^(0+128),w
  8156  17AB  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  8157  17AC  082A               	movf	(?___lwtoft+2)^(0+128),w
  8158  17AD  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  8159  17AE  3066               	movlw	102
  8160  17AF  00B5               	movwf	___ftmul@f1^(0+128)
  8161  17B0  3066               	movlw	102
  8162  17B1  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  8163  17B2  3040               	movlw	64
  8164  17B3  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  8165  17B4  3192  22C9  3194   	fcall	___ftmul
  8166  17B7  0021               	movlb	1	; select bank1
  8167  17B8  0835               	movf	?___ftmul^(0+128),w
  8168  17B9  00C5               	movwf	___fttol@f1^(0+128)
  8169  17BA  0836               	movf	(?___ftmul+1)^(0+128),w
  8170  17BB  00C6               	movwf	(___fttol@f1+1)^(0+128)
  8171  17BC  0837               	movf	(?___ftmul+2)^(0+128),w
  8172  17BD  00C7               	movwf	(___fttol@f1+2)^(0+128)
  8173  17BE  319F  2779  3194   	fcall	___fttol
  8174  17C1  0021               	movlb	1	; select bank1
  8175  17C2  0846               	movf	(?___fttol^(0+128)+1),w
  8176  17C3  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  8177  17C4  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  8178  17C5  0845               	movf	?___fttol^(0+128),w
  8179  17C6  2FE1               	goto	L18
  8180  17C7                     l4349:	
  8181                           ;MOTORCONTROL.C: 88: }
  8182                           
  8183                           
  8184                           ;MOTORCONTROL.C: 89: else if(cyclestrtf==0)
  8185  17C7  0022               	movlb	2	; select bank2
  8186  17C8  08BC               	movf	_cyclestrtf^(0+256),f
  8187  17C9  1D03               	skipz
  8188  17CA  2FE5               	goto	l4353
  8189                           
  8190                           ;MOTORCONTROL.C: 90: {
  8191                           ;MOTORCONTROL.C: 91: Update_PWM(scaled_baseval2*0);
  8192  17CB  0023               	movlb	3	; select bank3
  8193  17CC  084F               	movf	(_scaled_baseval2+1)^(0+384),w
  8194  17CD  0021               	movlb	1	; select bank1
  8195  17CE  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  8196  17CF  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  8197  17D0  0023               	movlb	3	; select bank3
  8198  17D1  084E               	movf	_scaled_baseval2^(0+384),w
  8199  17D2  0021               	movlb	1	; select bank1
  8200  17D3  01A0               	clrf	___wmul@multiplier^(0+128)
  8201  17D4  07A0               	addwf	___wmul@multiplier^(0+128),f
  8202  17D5  3000               	movlw	0
  8203  17D6  00A2               	movwf	___wmul@multiplicand^(0+128)
  8204  17D7  3000               	movlw	0
  8205  17D8  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  8206  17D9  3199  2164  3194   	fcall	___wmul
  8207  17DC  0021               	movlb	1	; select bank1
  8208  17DD  0821               	movf	(?___wmul+1)^(0+128),w
  8209  17DE  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  8210  17DF  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  8211  17E0  0820               	movf	?___wmul^(0+128),w
  8212  17E1                     L18:	
  8213  17E1  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  8214  17E2  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  8215  17E3  3199  21A4         	fcall	_Update_PWM
  8216  17E5                     l4353:	
  8217                           
  8218                           ;MOTORCONTROL.C: 92: }
  8219                           ;MOTORCONTROL.C: 93: }
  8220                           ;MOTORCONTROL.C: 94: pidParams2.previous_error2 = pidParams2.error2;
  8221  17E5  3096               	movlw	150
  8222  17E6  0086               	movwf	6
  8223  17E7  3023               	movlw	35
  8224  17E8  0087               	movwf	7
  8225  17E9  314C               	addfsr 1,12
  8226  17EA  3F40               	moviw [0]fsr1
  8227  17EB  0021               	movlb	1	; select bank1
  8228  17EC  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8229  17ED  3F41               	moviw [1]fsr1
  8230  17EE  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8231  17EF  3F42               	moviw [2]fsr1
  8232  17F0  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8233  17F1  3F43               	moviw [3]fsr1
  8234  17F2  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8235  17F3  30D4               	movlw	212
  8236  17F4  0086               	movwf	6
  8237  17F5  3023               	movlw	35
  8238  17F6  0087               	movwf	7
  8239  17F7  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8240  17F8  3FC0               	movwi [0]fsr1
  8241  17F9  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8242  17FA  3FC1               	movwi [1]fsr1
  8243  17FB  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8244  17FC  3FC2               	movwi [2]fsr1
  8245  17FD  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8246  17FE  3FC3               	movwi [3]fsr1
  8247  17FF  0008               	return
  8248  1800                     __end_of_Adaptive_base_pid:	
  8249                           
  8250                           	psect	text22
  8251  1964                     __ptext22:	
  8252 ;; *************** function ___wmul *****************
  8253 ;; Defined at:
  8254 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;  multiplier      2    0[BANK1 ] unsigned int 
  8257 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  product         2    4[BANK1 ] unsigned int 
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  2    0[BANK1 ] unsigned int 
  8262 ;; Registers used:
  8263 ;;		wreg, status,2, status,0
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8269 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8270 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;Total ram usage:        6 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; Hardware stack levels required when called:    3
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_Adaptive_base_pid
  8280 ;;		_main
  8281 ;;		_key_application
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           
  8286                           ;psect for function ___wmul
  8287  1964                     ___wmul:	
  8288                           
  8289                           ;incstack = 0
  8290                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8291  1964  0021               	movlb	1	; select bank1
  8292  1965  01A4               	clrf	___wmul@product^(0+128)
  8293  1966  01A5               	clrf	(___wmul@product+1)^(0+128)
  8294  1967                     l3683:	
  8295  1967  1C20               	btfss	___wmul@multiplier^(0+128),0
  8296  1968  296D               	goto	l910
  8297  1969  0822               	movf	___wmul@multiplicand^(0+128),w
  8298  196A  07A4               	addwf	___wmul@product^(0+128),f
  8299  196B  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  8300  196C  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  8301  196D                     l910:	
  8302  196D  3001               	movlw	1
  8303  196E                     u4435:	
  8304  196E  35A2               	lslf	___wmul@multiplicand^(0+128),f
  8305  196F  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  8306  1970  0B89               	decfsz	9,f
  8307  1971  296E               	goto	u4435
  8308  1972  3001               	movlw	1
  8309  1973                     u4445:	
  8310  1973  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  8311  1974  0CA0               	rrf	___wmul@multiplier^(0+128),f
  8312  1975  0B89               	decfsz	9,f
  8313  1976  2973               	goto	u4445
  8314  1977  0821               	movf	(___wmul@multiplier+1)^(0+128),w
  8315  1978  0420               	iorwf	___wmul@multiplier^(0+128),w
  8316  1979  1D03               	skipz
  8317  197A  2967               	goto	l3683
  8318  197B  0825               	movf	(___wmul@product+1)^(0+128),w
  8319  197C  01A1               	clrf	(?___wmul+1)^(0+128)
  8320  197D  07A1               	addwf	(?___wmul+1)^(0+128),f
  8321  197E  0824               	movf	___wmul@product^(0+128),w
  8322  197F  01A0               	clrf	?___wmul^(0+128)
  8323  1980  07A0               	addwf	?___wmul^(0+128),f
  8324  1981  0008               	return
  8325  1982                     __end_of___wmul:	
  8326                           
  8327                           	psect	text23
  8328  1924                     __ptext23:	
  8329 ;; *************** function ___lwtoft *****************
  8330 ;; Defined at:
  8331 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  c               2    8[BANK1 ] unsigned int 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  3    8[BANK1 ] float 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0, pclath, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8345 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;Total ram usage:        4 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:    4
  8352 ;; This function calls:
  8353 ;;		___ftpack
  8354 ;; This function is called by:
  8355 ;;		_Adaptive_base_pid
  8356 ;;		_main
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           
  8361                           ;psect for function ___lwtoft
  8362  1924                     ___lwtoft:	
  8363                           
  8364                           ;incstack = 0
  8365                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8366  1924  0021               	movlb	1	; select bank1
  8367  1925  0828               	movf	___lwtoft@c^(0+128),w
  8368  1926  00A0               	movwf	___ftpack@arg^(0+128)
  8369  1927  0829               	movf	(___lwtoft@c+1)^(0+128),w
  8370  1928  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  8371  1929  01A2               	clrf	(___ftpack@arg+2)^(0+128)
  8372  192A  308E               	movlw	142
  8373  192B  00AB               	movwf	??___lwtoft^(0+128)
  8374  192C  082B               	movf	??___lwtoft^(0+128),w
  8375  192D  00A3               	movwf	___ftpack@exp^(0+128)
  8376  192E  01A4               	clrf	___ftpack@sign^(0+128)
  8377  192F  319B  23C6         	fcall	___ftpack
  8378  1931  0021               	movlb	1	; select bank1
  8379  1932  0820               	movf	?___ftpack^(0+128),w
  8380  1933  00A8               	movwf	?___lwtoft^(0+128)
  8381  1934  0821               	movf	(?___ftpack+1)^(0+128),w
  8382  1935  00A9               	movwf	(?___lwtoft+1)^(0+128)
  8383  1936  0822               	movf	(?___ftpack+2)^(0+128),w
  8384  1937  00AA               	movwf	(?___lwtoft+2)^(0+128)
  8385  1938  0008               	return
  8386  1939                     __end_of___lwtoft:	
  8387                           
  8388                           	psect	text24
  8389  1F79                     __ptext24:	
  8390 ;; *************** function ___fttol *****************
  8391 ;; Defined at:
  8392 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;  f1              3   37[BANK1 ] float 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  lval            4   46[BANK1 ] unsigned long 
  8397 ;;  exp1            1   50[BANK1 ] unsigned char 
  8398 ;;  sign1           1   45[BANK1 ] unsigned char 
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  4   37[BANK1 ] long 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2, status,0
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8408 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;Total ram usage:       14 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    3
  8415 ;; This function calls:
  8416 ;;		Nothing
  8417 ;; This function is called by:
  8418 ;;		_Adaptive_base_pid
  8419 ;;		_main
  8420 ;; This function uses a non-reentrant model
  8421 ;;
  8422                           
  8423                           
  8424                           ;psect for function ___fttol
  8425  1F79                     ___fttol:	
  8426                           
  8427                           ;incstack = 0
  8428                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8429  1F79  0021               	movlb	1	; select bank1
  8430  1F7A  0845               	movf	___fttol@f1^(0+128),w
  8431  1F7B  00C9               	movwf	??___fttol^(0+128)
  8432  1F7C  0846               	movf	(___fttol@f1+1)^(0+128),w
  8433  1F7D  00CA               	movwf	(??___fttol^(0+128)+1)
  8434  1F7E  0847               	movf	(___fttol@f1+2)^(0+128),w
  8435  1F7F  00CB               	movwf	(??___fttol^(0+128)+2)
  8436  1F80  1003               	clrc
  8437  1F81  0D4A               	rlf	(??___fttol^(0+128)+1),w
  8438  1F82  0D4B               	rlf	(??___fttol^(0+128)+2),w
  8439  1F83  00CC               	movwf	(??___fttol+3)^(0+128)
  8440  1F84  084C               	movf	(??___fttol+3)^(0+128),w
  8441  1F85  00D2               	movwf	___fttol@exp1^(0+128)
  8442  1F86  08D2               	movf	___fttol@exp1^(0+128),f
  8443  1F87  1D03               	skipz
  8444  1F88  2F92               	goto	l3947
  8445  1F89  3000               	movlw	0
  8446  1F8A  00C8               	movwf	(?___fttol+3)^(0+128)
  8447  1F8B  3000               	movlw	0
  8448  1F8C  00C7               	movwf	(?___fttol+2)^(0+128)
  8449  1F8D  3000               	movlw	0
  8450  1F8E  00C6               	movwf	(?___fttol+1)^(0+128)
  8451  1F8F  3000               	movlw	0
  8452  1F90  00C5               	movwf	?___fttol^(0+128)
  8453  1F91  0008               	return
  8454  1F92                     l3947:	
  8455  1F92  0845               	movf	___fttol@f1^(0+128),w
  8456  1F93  00C9               	movwf	??___fttol^(0+128)
  8457  1F94  0846               	movf	(___fttol@f1+1)^(0+128),w
  8458  1F95  00CA               	movwf	(??___fttol^(0+128)+1)
  8459  1F96  0847               	movf	(___fttol@f1+2)^(0+128),w
  8460  1F97  00CB               	movwf	(??___fttol^(0+128)+2)
  8461  1F98  3017               	movlw	23
  8462  1F99                     u5075:	
  8463  1F99  36CB               	lsrf	(??___fttol^(0+128)+2),f
  8464  1F9A  0CCA               	rrf	(??___fttol^(0+128)+1),f
  8465  1F9B  0CC9               	rrf	??___fttol^(0+128),f
  8466  1F9C  0B89               	decfsz	9,f
  8467  1F9D  2F99               	goto	u5075
  8468  1F9E  0849               	movf	??___fttol^(0+128),w
  8469  1F9F  00CC               	movwf	(??___fttol+3)^(0+128)
  8470  1FA0  084C               	movf	(??___fttol+3)^(0+128),w
  8471  1FA1  00CD               	movwf	___fttol@sign1^(0+128)
  8472  1FA2  17C6               	bsf	(___fttol@f1^(0+128)+1),7
  8473  1FA3  30FF               	movlw	255
  8474  1FA4  05C5               	andwf	___fttol@f1^(0+128),f
  8475  1FA5  30FF               	movlw	255
  8476  1FA6  05C6               	andwf	(___fttol@f1+1)^(0+128),f
  8477  1FA7  3000               	movlw	0
  8478  1FA8  05C7               	andwf	(___fttol@f1+2)^(0+128),f
  8479  1FA9  0845               	movf	___fttol@f1^(0+128),w
  8480  1FAA  00CE               	movwf	___fttol@lval^(0+128)
  8481  1FAB  0846               	movf	(___fttol@f1+1)^(0+128),w
  8482  1FAC  00CF               	movwf	(___fttol@lval^(0+128)+1)
  8483  1FAD  0847               	movf	(___fttol@f1+2)^(0+128),w
  8484  1FAE  00D0               	movwf	(___fttol@lval^(0+128)+2)
  8485  1FAF  01D1               	clrf	(___fttol@lval^(0+128)+3)
  8486  1FB0  308E               	movlw	142
  8487  1FB1  02D2               	subwf	___fttol@exp1^(0+128),f
  8488  1FB2  1FD2               	btfss	___fttol@exp1^(0+128),7
  8489  1FB3  2FD0               	goto	l3967
  8490  1FB4  0852               	movf	___fttol@exp1^(0+128),w
  8491  1FB5  3A80               	xorlw	128
  8492  1FB6  3E8F               	addlw	143
  8493  1FB7  1803               	skipnc
  8494  1FB8  2FC2               	goto	l3965
  8495  1FB9  3000               	movlw	0
  8496  1FBA  00C8               	movwf	(?___fttol+3)^(0+128)
  8497  1FBB  3000               	movlw	0
  8498  1FBC  00C7               	movwf	(?___fttol+2)^(0+128)
  8499  1FBD  3000               	movlw	0
  8500  1FBE  00C6               	movwf	(?___fttol+1)^(0+128)
  8501  1FBF  3000               	movlw	0
  8502  1FC0  00C5               	movwf	?___fttol^(0+128)
  8503  1FC1  0008               	return
  8504  1FC2                     l3965:	
  8505  1FC2  3001               	movlw	1
  8506  1FC3                     u5105:	
  8507  1FC3  36D1               	lsrf	(___fttol@lval+3)^(0+128),f
  8508  1FC4  0CD0               	rrf	(___fttol@lval+2)^(0+128),f
  8509  1FC5  0CCF               	rrf	(___fttol@lval+1)^(0+128),f
  8510  1FC6  0CCE               	rrf	___fttol@lval^(0+128),f
  8511  1FC7  0B89               	decfsz	9,f
  8512  1FC8  2FC3               	goto	u5105
  8513  1FC9  3001               	movlw	1
  8514  1FCA  00C9               	movwf	??___fttol^(0+128)
  8515  1FCB  0849               	movf	??___fttol^(0+128),w
  8516  1FCC  07D2               	addwf	___fttol@exp1^(0+128),f
  8517  1FCD  1903               	btfsc	3,2
  8518  1FCE  2FE9               	goto	l3977
  8519  1FCF  2FC2               	goto	l3965
  8520  1FD0                     l3967:	
  8521  1FD0  3018               	movlw	24
  8522  1FD1  0252               	subwf	___fttol@exp1^(0+128),w
  8523  1FD2  1C03               	skipc
  8524  1FD3  2FE6               	goto	l3975
  8525  1FD4  3000               	movlw	0
  8526  1FD5  00C8               	movwf	(?___fttol+3)^(0+128)
  8527  1FD6  3000               	movlw	0
  8528  1FD7  00C7               	movwf	(?___fttol+2)^(0+128)
  8529  1FD8  3000               	movlw	0
  8530  1FD9  00C6               	movwf	(?___fttol+1)^(0+128)
  8531  1FDA  3000               	movlw	0
  8532  1FDB  00C5               	movwf	?___fttol^(0+128)
  8533  1FDC  0008               	return
  8534  1FDD                     l3973:	
  8535  1FDD  3001               	movlw	1
  8536  1FDE                     u5135:	
  8537  1FDE  35CE               	lslf	___fttol@lval^(0+128),f
  8538  1FDF  0DCF               	rlf	(___fttol@lval+1)^(0+128),f
  8539  1FE0  0DD0               	rlf	(___fttol@lval+2)^(0+128),f
  8540  1FE1  0DD1               	rlf	(___fttol@lval+3)^(0+128),f
  8541  1FE2  0B89               	decfsz	9,f
  8542  1FE3  2FDE               	goto	u5135
  8543  1FE4  3001               	movlw	1
  8544  1FE5  02D2               	subwf	___fttol@exp1^(0+128),f
  8545  1FE6                     l3975:	
  8546  1FE6  08D2               	movf	___fttol@exp1^(0+128),f
  8547  1FE7  1D03               	skipz
  8548  1FE8  2FDD               	goto	l3973
  8549  1FE9                     l3977:	
  8550  1FE9  084D               	movf	___fttol@sign1^(0+128),w
  8551  1FEA  1903               	btfsc	3,2
  8552  1FEB  2FF7               	goto	l3981
  8553  1FEC  09CE               	comf	___fttol@lval^(0+128),f
  8554  1FED  09CF               	comf	(___fttol@lval+1)^(0+128),f
  8555  1FEE  09D0               	comf	(___fttol@lval+2)^(0+128),f
  8556  1FEF  09D1               	comf	(___fttol@lval+3)^(0+128),f
  8557  1FF0  0ACE               	incf	___fttol@lval^(0+128),f
  8558  1FF1  1903               	skipnz
  8559  1FF2  0ACF               	incf	(___fttol@lval+1)^(0+128),f
  8560  1FF3  1903               	skipnz
  8561  1FF4  0AD0               	incf	(___fttol@lval+2)^(0+128),f
  8562  1FF5  1903               	skipnz
  8563  1FF6  0AD1               	incf	(___fttol@lval+3)^(0+128),f
  8564  1FF7                     l3981:	
  8565  1FF7  0851               	movf	(___fttol@lval+3)^(0+128),w
  8566  1FF8  00C8               	movwf	(?___fttol+3)^(0+128)
  8567  1FF9  0850               	movf	(___fttol@lval+2)^(0+128),w
  8568  1FFA  00C7               	movwf	(?___fttol+2)^(0+128)
  8569  1FFB  084F               	movf	(___fttol@lval+1)^(0+128),w
  8570  1FFC  00C6               	movwf	(?___fttol+1)^(0+128)
  8571  1FFD  084E               	movf	___fttol@lval^(0+128),w
  8572  1FFE  00C5               	movwf	?___fttol^(0+128)
  8573  1FFF  0008               	return
  8574  2000                     __end_of___fttol:	
  8575                           
  8576                           	psect	text25
  8577  188C                     __ptext25:	
  8578 ;; *************** function ___ftneg *****************
  8579 ;; Defined at:
  8580 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;  f1              3    0[BANK1 ] float 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  3    0[BANK1 ] float 
  8587 ;; Registers used:
  8588 ;;		wreg
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8594 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;Total ram usage:        3 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; Hardware stack levels required when called:    3
  8601 ;; This function calls:
  8602 ;;		Nothing
  8603 ;; This function is called by:
  8604 ;;		_Adaptive_base_pid
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           
  8609                           ;psect for function ___ftneg
  8610  188C                     ___ftneg:	
  8611                           
  8612                           ;incstack = 0
  8613                           ; Regs used in ___ftneg: [wreg]
  8614  188C  0021               	movlb	1	; select bank1
  8615  188D  0822               	movf	(___ftneg@f1+2)^(0+128),w
  8616  188E  0421               	iorwf	(___ftneg@f1+1)^(0+128),w
  8617  188F  0420               	iorwf	___ftneg@f1^(0+128),w
  8618  1890  1903               	skipnz
  8619  1891  0008               	return
  8620  1892  3080               	movlw	128
  8621  1893  06A2               	xorwf	(___ftneg@f1+2)^(0+128),f
  8622  1894  0008               	return
  8623  1895                     __end_of___ftneg:	
  8624                           
  8625                           	psect	text26
  8626  12C9                     __ptext26:	
  8627 ;; *************** function ___ftmul *****************
  8628 ;; Defined at:
  8629 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;  f1              3   21[BANK1 ] float 
  8632 ;;  f2              3   24[BANK1 ] float 
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;  f3_as_produc    3   32[BANK1 ] unsigned um
  8635 ;;  sign            1   36[BANK1 ] unsigned char 
  8636 ;;  cntr            1   35[BANK1 ] unsigned char 
  8637 ;;  exp             1   31[BANK1 ] unsigned char 
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  3   21[BANK1 ] float 
  8640 ;; Registers used:
  8641 ;;		wreg, status,2, status,0, pclath, cstack
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8647 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8648 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8649 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;Total ram usage:       16 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; Hardware stack levels required when called:    4
  8654 ;; This function calls:
  8655 ;;		___ftpack
  8656 ;; This function is called by:
  8657 ;;		_Adaptive_base_pid
  8658 ;;		_main
  8659 ;; This function uses a non-reentrant model
  8660 ;;
  8661                           
  8662                           
  8663                           ;psect for function ___ftmul
  8664  12C9                     ___ftmul:	
  8665                           
  8666                           ;incstack = 0
  8667                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8668  12C9  0021               	movlb	1	; select bank1
  8669  12CA  0835               	movf	___ftmul@f1^(0+128),w
  8670  12CB  00BB               	movwf	??___ftmul^(0+128)
  8671  12CC  0836               	movf	(___ftmul@f1+1)^(0+128),w
  8672  12CD  00BC               	movwf	(??___ftmul^(0+128)+1)
  8673  12CE  0837               	movf	(___ftmul@f1+2)^(0+128),w
  8674  12CF  00BD               	movwf	(??___ftmul^(0+128)+2)
  8675  12D0  1003               	clrc
  8676  12D1  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  8677  12D2  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  8678  12D3  00BE               	movwf	(??___ftmul+3)^(0+128)
  8679  12D4  083E               	movf	(??___ftmul+3)^(0+128),w
  8680  12D5  00BF               	movwf	___ftmul@exp^(0+128)
  8681  12D6  08BF               	movf	___ftmul@exp^(0+128),f
  8682  12D7  1D03               	skipz
  8683  12D8  2AE0               	goto	l3889
  8684  12D9  3000               	movlw	0
  8685  12DA  00B5               	movwf	?___ftmul^(0+128)
  8686  12DB  3000               	movlw	0
  8687  12DC  00B6               	movwf	(?___ftmul+1)^(0+128)
  8688  12DD  3000               	movlw	0
  8689  12DE  00B7               	movwf	(?___ftmul+2)^(0+128)
  8690  12DF  0008               	return
  8691  12E0                     l3889:	
  8692  12E0  0838               	movf	___ftmul@f2^(0+128),w
  8693  12E1  00BB               	movwf	??___ftmul^(0+128)
  8694  12E2  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8695  12E3  00BC               	movwf	(??___ftmul^(0+128)+1)
  8696  12E4  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8697  12E5  00BD               	movwf	(??___ftmul^(0+128)+2)
  8698  12E6  1003               	clrc
  8699  12E7  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  8700  12E8  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  8701  12E9  00BE               	movwf	(??___ftmul+3)^(0+128)
  8702  12EA  083E               	movf	(??___ftmul+3)^(0+128),w
  8703  12EB  00C4               	movwf	___ftmul@sign^(0+128)
  8704  12EC  08C4               	movf	___ftmul@sign^(0+128),f
  8705  12ED  1D03               	skipz
  8706  12EE  2AF6               	goto	l3895
  8707  12EF  3000               	movlw	0
  8708  12F0  00B5               	movwf	?___ftmul^(0+128)
  8709  12F1  3000               	movlw	0
  8710  12F2  00B6               	movwf	(?___ftmul+1)^(0+128)
  8711  12F3  3000               	movlw	0
  8712  12F4  00B7               	movwf	(?___ftmul+2)^(0+128)
  8713  12F5  0008               	return
  8714  12F6                     l3895:	
  8715  12F6  0844               	movf	___ftmul@sign^(0+128),w
  8716  12F7  3E7B               	addlw	123
  8717  12F8  00BB               	movwf	??___ftmul^(0+128)
  8718  12F9  083B               	movf	??___ftmul^(0+128),w
  8719  12FA  07BF               	addwf	___ftmul@exp^(0+128),f
  8720  12FB  0835               	movf	___ftmul@f1^(0+128),w
  8721  12FC  00BB               	movwf	??___ftmul^(0+128)
  8722  12FD  0836               	movf	(___ftmul@f1+1)^(0+128),w
  8723  12FE  00BC               	movwf	(??___ftmul^(0+128)+1)
  8724  12FF  0837               	movf	(___ftmul@f1+2)^(0+128),w
  8725  1300  00BD               	movwf	(??___ftmul^(0+128)+2)
  8726  1301  3010               	movlw	16
  8727  1302                     u4955:	
  8728  1302  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  8729  1303  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  8730  1304  0CBB               	rrf	??___ftmul^(0+128),f
  8731  1305  0B89               	decfsz	9,f
  8732  1306  2B02               	goto	u4955
  8733  1307  083B               	movf	??___ftmul^(0+128),w
  8734  1308  00BE               	movwf	(??___ftmul+3)^(0+128)
  8735  1309  083E               	movf	(??___ftmul+3)^(0+128),w
  8736  130A  00C4               	movwf	___ftmul@sign^(0+128)
  8737  130B  0838               	movf	___ftmul@f2^(0+128),w
  8738  130C  00BB               	movwf	??___ftmul^(0+128)
  8739  130D  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8740  130E  00BC               	movwf	(??___ftmul^(0+128)+1)
  8741  130F  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8742  1310  00BD               	movwf	(??___ftmul^(0+128)+2)
  8743  1311  3010               	movlw	16
  8744  1312                     u4965:	
  8745  1312  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  8746  1313  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  8747  1314  0CBB               	rrf	??___ftmul^(0+128),f
  8748  1315  0B89               	decfsz	9,f
  8749  1316  2B12               	goto	u4965
  8750  1317  083B               	movf	??___ftmul^(0+128),w
  8751  1318  00BE               	movwf	(??___ftmul+3)^(0+128)
  8752  1319  083E               	movf	(??___ftmul+3)^(0+128),w
  8753  131A  06C4               	xorwf	___ftmul@sign^(0+128),f
  8754  131B  3080               	movlw	128
  8755  131C  00BB               	movwf	??___ftmul^(0+128)
  8756  131D  083B               	movf	??___ftmul^(0+128),w
  8757  131E  05C4               	andwf	___ftmul@sign^(0+128),f
  8758  131F  17B6               	bsf	(___ftmul@f1^(0+128)+1),7
  8759  1320  17B9               	bsf	(___ftmul@f2^(0+128)+1),7
  8760  1321  30FF               	movlw	255
  8761  1322  05B8               	andwf	___ftmul@f2^(0+128),f
  8762  1323  30FF               	movlw	255
  8763  1324  05B9               	andwf	(___ftmul@f2+1)^(0+128),f
  8764  1325  3000               	movlw	0
  8765  1326  05BA               	andwf	(___ftmul@f2+2)^(0+128),f
  8766  1327  3000               	movlw	0
  8767  1328  00C0               	movwf	___ftmul@f3_as_product^(0+128)
  8768  1329  3000               	movlw	0
  8769  132A  00C1               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  8770  132B  3000               	movlw	0
  8771  132C  00C2               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  8772  132D  3007               	movlw	7
  8773  132E  00BB               	movwf	??___ftmul^(0+128)
  8774  132F  083B               	movf	??___ftmul^(0+128),w
  8775  1330  00C3               	movwf	___ftmul@cntr^(0+128)
  8776  1331                     l3907:	
  8777  1331  1C35               	btfss	___ftmul@f1^(0+128),0
  8778  1332  2B39               	goto	l3911
  8779  1333  0838               	movf	___ftmul@f2^(0+128),w
  8780  1334  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  8781  1335  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8782  1336  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8783  1337  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8784  1338  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8785  1339                     l3911:	
  8786  1339  3001               	movlw	1
  8787  133A                     u4985:	
  8788  133A  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  8789  133B  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  8790  133C  0CB5               	rrf	___ftmul@f1^(0+128),f
  8791  133D  0B89               	decfsz	9,f
  8792  133E  2B3A               	goto	u4985
  8793  133F  3001               	movlw	1
  8794  1340                     u4995:	
  8795  1340  35B8               	lslf	___ftmul@f2^(0+128),f
  8796  1341  0DB9               	rlf	(___ftmul@f2+1)^(0+128),f
  8797  1342  0DBA               	rlf	(___ftmul@f2+2)^(0+128),f
  8798  1343  0B89               	decfsz	9,f
  8799  1344  2B40               	goto	u4995
  8800  1345  3001               	movlw	1
  8801  1346  02C3               	subwf	___ftmul@cntr^(0+128),f
  8802  1347  1D03               	btfss	3,2
  8803  1348  2B31               	goto	l3907
  8804  1349  3009               	movlw	9
  8805  134A  00BB               	movwf	??___ftmul^(0+128)
  8806  134B  083B               	movf	??___ftmul^(0+128),w
  8807  134C  00C3               	movwf	___ftmul@cntr^(0+128)
  8808  134D                     l3919:	
  8809  134D  1C35               	btfss	___ftmul@f1^(0+128),0
  8810  134E  2B55               	goto	l3923
  8811  134F  0838               	movf	___ftmul@f2^(0+128),w
  8812  1350  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  8813  1351  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8814  1352  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8815  1353  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8816  1354  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8817  1355                     l3923:	
  8818  1355  3001               	movlw	1
  8819  1356                     u5025:	
  8820  1356  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  8821  1357  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  8822  1358  0CB5               	rrf	___ftmul@f1^(0+128),f
  8823  1359  0B89               	decfsz	9,f
  8824  135A  2B56               	goto	u5025
  8825  135B  3001               	movlw	1
  8826  135C                     u5035:	
  8827  135C  36C2               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  8828  135D  0CC1               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  8829  135E  0CC0               	rrf	___ftmul@f3_as_product^(0+128),f
  8830  135F  0B89               	decfsz	9,f
  8831  1360  2B5C               	goto	u5035
  8832  1361  3001               	movlw	1
  8833  1362  02C3               	subwf	___ftmul@cntr^(0+128),f
  8834  1363  1D03               	btfss	3,2
  8835  1364  2B4D               	goto	l3919
  8836  1365  0840               	movf	___ftmul@f3_as_product^(0+128),w
  8837  1366  00A0               	movwf	___ftpack@arg^(0+128)
  8838  1367  0841               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  8839  1368  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  8840  1369  0842               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  8841  136A  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  8842  136B  083F               	movf	___ftmul@exp^(0+128),w
  8843  136C  00BB               	movwf	??___ftmul^(0+128)
  8844  136D  083B               	movf	??___ftmul^(0+128),w
  8845  136E  00A3               	movwf	___ftpack@exp^(0+128)
  8846  136F  0844               	movf	___ftmul@sign^(0+128),w
  8847  1370  00BC               	movwf	(??___ftmul+1)^(0+128)
  8848  1371  083C               	movf	(??___ftmul+1)^(0+128),w
  8849  1372  00A4               	movwf	___ftpack@sign^(0+128)
  8850  1373  319B  23C6         	fcall	___ftpack
  8851  1375  0021               	movlb	1	; select bank1
  8852  1376  0820               	movf	?___ftpack^(0+128),w
  8853  1377  00B5               	movwf	?___ftmul^(0+128)
  8854  1378  0821               	movf	(?___ftpack+1)^(0+128),w
  8855  1379  00B6               	movwf	(?___ftmul+1)^(0+128)
  8856  137A  0822               	movf	(?___ftpack+2)^(0+128),w
  8857  137B  00B7               	movwf	(?___ftmul+2)^(0+128)
  8858  137C  0008               	return
  8859  137D                     __end_of___ftmul:	
  8860                           
  8861                           	psect	text27
  8862  1A31                     __ptext27:	
  8863 ;; *************** function ___ftge *****************
  8864 ;; Defined at:
  8865 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftge.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;  ff1             3   16[BANK1 ] float 
  8868 ;;  ff2             3   19[BANK1 ] float 
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;		None
  8871 ;; Return value:  Size  Location     Type
  8872 ;;		None               void
  8873 ;; Registers used:
  8874 ;;		wreg, status,2, status,0
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8880 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8882 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8883 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8884 ;;Total ram usage:        9 bytes
  8885 ;; Hardware stack levels used:    1
  8886 ;; Hardware stack levels required when called:    3
  8887 ;; This function calls:
  8888 ;;		Nothing
  8889 ;; This function is called by:
  8890 ;;		_Adaptive_base_pid
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894                           
  8895                           ;psect for function ___ftge
  8896  1A31                     ___ftge:	
  8897                           
  8898                           ;incstack = 0
  8899                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8900  1A31  0021               	movlb	1	; select bank1
  8901  1A32  1FB2               	btfss	(___ftge@ff1+2)^(0+128),7
  8902  1A33  2A48               	goto	l3867
  8903  1A34  0930               	comf	___ftge@ff1^(0+128),w
  8904  1A35  00B6               	movwf	??___ftge^(0+128)
  8905  1A36  0931               	comf	(___ftge@ff1+1)^(0+128),w
  8906  1A37  00B7               	movwf	(??___ftge^(0+128)+1)
  8907  1A38  0932               	comf	(___ftge@ff1+2)^(0+128),w
  8908  1A39  00B8               	movwf	(??___ftge^(0+128)+2)
  8909  1A3A  0AB6               	incf	??___ftge^(0+128),f
  8910  1A3B  1903               	skipnz
  8911  1A3C  0AB7               	incf	(??___ftge^(0+128)+1),f
  8912  1A3D  1903               	skipnz
  8913  1A3E  0AB8               	incf	(??___ftge^(0+128)+2),f
  8914  1A3F  3000               	movlw	0
  8915  1A40  0736               	addwf	??___ftge^(0+128),w
  8916  1A41  00B0               	movwf	___ftge@ff1^(0+128)
  8917  1A42  3000               	movlw	0
  8918  1A43  3D37               	addwfc	(??___ftge+1)^(0+128),w
  8919  1A44  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  8920  1A45  3080               	movlw	128
  8921  1A46  3D38               	addwfc	(??___ftge+2)^(0+128),w
  8922  1A47  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  8923  1A48                     l3867:	
  8924  1A48  1FB5               	btfss	(___ftge@ff2+2)^(0+128),7
  8925  1A49  2A5E               	goto	l3871
  8926  1A4A  0933               	comf	___ftge@ff2^(0+128),w
  8927  1A4B  00B6               	movwf	??___ftge^(0+128)
  8928  1A4C  0934               	comf	(___ftge@ff2+1)^(0+128),w
  8929  1A4D  00B7               	movwf	(??___ftge^(0+128)+1)
  8930  1A4E  0935               	comf	(___ftge@ff2+2)^(0+128),w
  8931  1A4F  00B8               	movwf	(??___ftge^(0+128)+2)
  8932  1A50  0AB6               	incf	??___ftge^(0+128),f
  8933  1A51  1903               	skipnz
  8934  1A52  0AB7               	incf	(??___ftge^(0+128)+1),f
  8935  1A53  1903               	skipnz
  8936  1A54  0AB8               	incf	(??___ftge^(0+128)+2),f
  8937  1A55  3000               	movlw	0
  8938  1A56  0736               	addwf	??___ftge^(0+128),w
  8939  1A57  00B3               	movwf	___ftge@ff2^(0+128)
  8940  1A58  3000               	movlw	0
  8941  1A59  3D37               	addwfc	(??___ftge+1)^(0+128),w
  8942  1A5A  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  8943  1A5B  3080               	movlw	128
  8944  1A5C  3D38               	addwfc	(??___ftge+2)^(0+128),w
  8945  1A5D  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  8946  1A5E                     l3871:	
  8947  1A5E  3080               	movlw	128
  8948  1A5F  06B2               	xorwf	(___ftge@ff1+2)^(0+128),f
  8949  1A60  3080               	movlw	128
  8950  1A61  06B5               	xorwf	(___ftge@ff2+2)^(0+128),f
  8951  1A62  0835               	movf	(___ftge@ff2+2)^(0+128),w
  8952  1A63  0232               	subwf	(___ftge@ff1+2)^(0+128),w
  8953  1A64  1D03               	skipz
  8954  1A65  0008               	return
  8955  1A66  0834               	movf	(___ftge@ff2+1)^(0+128),w
  8956  1A67  0231               	subwf	(___ftge@ff1+1)^(0+128),w
  8957  1A68  1D03               	skipz
  8958  1A69  0008               	return
  8959  1A6A  0833               	movf	___ftge@ff2^(0+128),w
  8960  1A6B  0230               	subwf	___ftge@ff1^(0+128),w
  8961  1A6C  0008               	return
  8962  1A6D                     __end_of___ftge:	
  8963                           
  8964                           	psect	text28
  8965  10C2                     __ptext28:	
  8966 ;; *************** function ___ftdiv *****************
  8967 ;; Defined at:
  8968 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;  f2              3   37[BANK1 ] float 
  8971 ;;  f1              3   40[BANK1 ] float 
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;  f3              3   48[BANK1 ] float 
  8974 ;;  sign            1   52[BANK1 ] unsigned char 
  8975 ;;  exp             1   51[BANK1 ] unsigned char 
  8976 ;;  cntr            1   47[BANK1 ] unsigned char 
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  3   37[BANK1 ] float 
  8979 ;; Registers used:
  8980 ;;		wreg, status,2, status,0, pclath, cstack
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8986 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8989 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8990 ;;Total ram usage:       16 bytes
  8991 ;; Hardware stack levels used:    1
  8992 ;; Hardware stack levels required when called:    4
  8993 ;; This function calls:
  8994 ;;		___ftpack
  8995 ;; This function is called by:
  8996 ;;		_Adaptive_base_pid
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           
  9001                           ;psect for function ___ftdiv
  9002  10C2                     ___ftdiv:	
  9003                           
  9004                           ;incstack = 0
  9005                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9006  10C2  0021               	movlb	1	; select bank1
  9007  10C3  0848               	movf	___ftdiv@f1^(0+128),w
  9008  10C4  00CB               	movwf	??___ftdiv^(0+128)
  9009  10C5  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  9010  10C6  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9011  10C7  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  9012  10C8  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9013  10C9  1003               	clrc
  9014  10CA  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  9015  10CB  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  9016  10CC  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9017  10CD  084E               	movf	(??___ftdiv+3)^(0+128),w
  9018  10CE  00D3               	movwf	___ftdiv@exp^(0+128)
  9019  10CF  08D3               	movf	___ftdiv@exp^(0+128),f
  9020  10D0  1D03               	skipz
  9021  10D1  28D9               	goto	l3827
  9022  10D2  3000               	movlw	0
  9023  10D3  00C5               	movwf	?___ftdiv^(0+128)
  9024  10D4  3000               	movlw	0
  9025  10D5  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9026  10D6  3000               	movlw	0
  9027  10D7  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9028  10D8  0008               	return
  9029  10D9                     l3827:	
  9030  10D9  0845               	movf	___ftdiv@f2^(0+128),w
  9031  10DA  00CB               	movwf	??___ftdiv^(0+128)
  9032  10DB  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9033  10DC  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9034  10DD  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9035  10DE  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9036  10DF  1003               	clrc
  9037  10E0  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  9038  10E1  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  9039  10E2  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9040  10E3  084E               	movf	(??___ftdiv+3)^(0+128),w
  9041  10E4  00D4               	movwf	___ftdiv@sign^(0+128)
  9042  10E5  08D4               	movf	___ftdiv@sign^(0+128),f
  9043  10E6  1D03               	skipz
  9044  10E7  28EF               	goto	l3833
  9045  10E8  3000               	movlw	0
  9046  10E9  00C5               	movwf	?___ftdiv^(0+128)
  9047  10EA  3000               	movlw	0
  9048  10EB  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9049  10EC  3000               	movlw	0
  9050  10ED  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9051  10EE  0008               	return
  9052  10EF                     l3833:	
  9053  10EF  3000               	movlw	0
  9054  10F0  00D0               	movwf	___ftdiv@f3^(0+128)
  9055  10F1  3000               	movlw	0
  9056  10F2  00D1               	movwf	(___ftdiv@f3+1)^(0+128)
  9057  10F3  3000               	movlw	0
  9058  10F4  00D2               	movwf	(___ftdiv@f3+2)^(0+128)
  9059  10F5  3089               	movlw	137
  9060  10F6  0754               	addwf	___ftdiv@sign^(0+128),w
  9061  10F7  00CB               	movwf	??___ftdiv^(0+128)
  9062  10F8  084B               	movf	??___ftdiv^(0+128),w
  9063  10F9  02D3               	subwf	___ftdiv@exp^(0+128),f
  9064  10FA  0848               	movf	___ftdiv@f1^(0+128),w
  9065  10FB  00CB               	movwf	??___ftdiv^(0+128)
  9066  10FC  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  9067  10FD  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9068  10FE  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  9069  10FF  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9070  1100  3010               	movlw	16
  9071  1101                     u4845:	
  9072  1101  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  9073  1102  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  9074  1103  0CCB               	rrf	??___ftdiv^(0+128),f
  9075  1104  0B89               	decfsz	9,f
  9076  1105  2901               	goto	u4845
  9077  1106  084B               	movf	??___ftdiv^(0+128),w
  9078  1107  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9079  1108  084E               	movf	(??___ftdiv+3)^(0+128),w
  9080  1109  00D4               	movwf	___ftdiv@sign^(0+128)
  9081  110A  0845               	movf	___ftdiv@f2^(0+128),w
  9082  110B  00CB               	movwf	??___ftdiv^(0+128)
  9083  110C  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9084  110D  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9085  110E  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9086  110F  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9087  1110  3010               	movlw	16
  9088  1111                     u4855:	
  9089  1111  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  9090  1112  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  9091  1113  0CCB               	rrf	??___ftdiv^(0+128),f
  9092  1114  0B89               	decfsz	9,f
  9093  1115  2911               	goto	u4855
  9094  1116  084B               	movf	??___ftdiv^(0+128),w
  9095  1117  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9096  1118  084E               	movf	(??___ftdiv+3)^(0+128),w
  9097  1119  06D4               	xorwf	___ftdiv@sign^(0+128),f
  9098  111A  3080               	movlw	128
  9099  111B  00CB               	movwf	??___ftdiv^(0+128)
  9100  111C  084B               	movf	??___ftdiv^(0+128),w
  9101  111D  05D4               	andwf	___ftdiv@sign^(0+128),f
  9102  111E  17C9               	bsf	(___ftdiv@f1^(0+128)+1),7
  9103  111F  30FF               	movlw	255
  9104  1120  05C8               	andwf	___ftdiv@f1^(0+128),f
  9105  1121  30FF               	movlw	255
  9106  1122  05C9               	andwf	(___ftdiv@f1+1)^(0+128),f
  9107  1123  3000               	movlw	0
  9108  1124  05CA               	andwf	(___ftdiv@f1+2)^(0+128),f
  9109  1125  17C6               	bsf	(___ftdiv@f2^(0+128)+1),7
  9110  1126  30FF               	movlw	255
  9111  1127  05C5               	andwf	___ftdiv@f2^(0+128),f
  9112  1128  30FF               	movlw	255
  9113  1129  05C6               	andwf	(___ftdiv@f2+1)^(0+128),f
  9114  112A  3000               	movlw	0
  9115  112B  05C7               	andwf	(___ftdiv@f2+2)^(0+128),f
  9116  112C  3018               	movlw	24
  9117  112D  00CB               	movwf	??___ftdiv^(0+128)
  9118  112E  084B               	movf	??___ftdiv^(0+128),w
  9119  112F  00CF               	movwf	___ftdiv@cntr^(0+128)
  9120  1130                     l3847:	
  9121  1130  3001               	movlw	1
  9122  1131                     u4865:	
  9123  1131  35D0               	lslf	___ftdiv@f3^(0+128),f
  9124  1132  0DD1               	rlf	(___ftdiv@f3+1)^(0+128),f
  9125  1133  0DD2               	rlf	(___ftdiv@f3+2)^(0+128),f
  9126  1134  0B89               	decfsz	9,f
  9127  1135  2931               	goto	u4865
  9128  1136  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9129  1137  024A               	subwf	(___ftdiv@f1+2)^(0+128),w
  9130  1138  1D03               	skipz
  9131  1139  2940               	goto	u4875
  9132  113A  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9133  113B  0249               	subwf	(___ftdiv@f1+1)^(0+128),w
  9134  113C  1D03               	skipz
  9135  113D  2940               	goto	u4875
  9136  113E  0845               	movf	___ftdiv@f2^(0+128),w
  9137  113F  0248               	subwf	___ftdiv@f1^(0+128),w
  9138  1140                     u4875:	
  9139  1140  1C03               	skipc
  9140  1141  2949               	goto	l3855
  9141  1142  0845               	movf	___ftdiv@f2^(0+128),w
  9142  1143  02C8               	subwf	___ftdiv@f1^(0+128),f
  9143  1144  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9144  1145  3BC9               	subwfb	(___ftdiv@f1+1)^(0+128),f
  9145  1146  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9146  1147  3BCA               	subwfb	(___ftdiv@f1+2)^(0+128),f
  9147  1148  1450               	bsf	___ftdiv@f3^(0+128),0
  9148  1149                     l3855:	
  9149  1149  3001               	movlw	1
  9150  114A                     u4885:	
  9151  114A  35C8               	lslf	___ftdiv@f1^(0+128),f
  9152  114B  0DC9               	rlf	(___ftdiv@f1+1)^(0+128),f
  9153  114C  0DCA               	rlf	(___ftdiv@f1+2)^(0+128),f
  9154  114D  0B89               	decfsz	9,f
  9155  114E  294A               	goto	u4885
  9156  114F  3001               	movlw	1
  9157  1150  02CF               	subwf	___ftdiv@cntr^(0+128),f
  9158  1151  1D03               	btfss	3,2
  9159  1152  2930               	goto	l3847
  9160  1153  0850               	movf	___ftdiv@f3^(0+128),w
  9161  1154  00A0               	movwf	___ftpack@arg^(0+128)
  9162  1155  0851               	movf	(___ftdiv@f3+1)^(0+128),w
  9163  1156  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9164  1157  0852               	movf	(___ftdiv@f3+2)^(0+128),w
  9165  1158  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9166  1159  0853               	movf	___ftdiv@exp^(0+128),w
  9167  115A  00CB               	movwf	??___ftdiv^(0+128)
  9168  115B  084B               	movf	??___ftdiv^(0+128),w
  9169  115C  00A3               	movwf	___ftpack@exp^(0+128)
  9170  115D  0854               	movf	___ftdiv@sign^(0+128),w
  9171  115E  00CC               	movwf	(??___ftdiv+1)^(0+128)
  9172  115F  084C               	movf	(??___ftdiv+1)^(0+128),w
  9173  1160  00A4               	movwf	___ftpack@sign^(0+128)
  9174  1161  319B  23C6         	fcall	___ftpack
  9175  1163  0021               	movlb	1	; select bank1
  9176  1164  0820               	movf	?___ftpack^(0+128),w
  9177  1165  00C5               	movwf	?___ftdiv^(0+128)
  9178  1166  0821               	movf	(?___ftpack+1)^(0+128),w
  9179  1167  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9180  1168  0822               	movf	(?___ftpack+2)^(0+128),w
  9181  1169  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9182  116A  0008               	return
  9183  116B                     __end_of___ftdiv:	
  9184                           
  9185                           	psect	text29
  9186  085C                     __ptext29:	
  9187 ;; *************** function ___ftadd *****************
  9188 ;; Defined at:
  9189 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
  9190 ;; Parameters:    Size  Location     Type
  9191 ;;  f1              3    8[BANK1 ] float 
  9192 ;;  f2              3   11[BANK1 ] float 
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;  exp1            1   20[BANK1 ] unsigned char 
  9195 ;;  exp2            1   19[BANK1 ] unsigned char 
  9196 ;;  sign            1   18[BANK1 ] unsigned char 
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  3    8[BANK1 ] float 
  9199 ;; Registers used:
  9200 ;;		wreg, status,2, status,0, pclath, cstack
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9206 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9207 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9210 ;;Total ram usage:       13 bytes
  9211 ;; Hardware stack levels used:    1
  9212 ;; Hardware stack levels required when called:    4
  9213 ;; This function calls:
  9214 ;;		___ftpack
  9215 ;; This function is called by:
  9216 ;;		_Adaptive_base_pid
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           
  9221                           ;psect for function ___ftadd
  9222  085C                     ___ftadd:	
  9223                           
  9224                           ;incstack = 0
  9225                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9226  085C  0021               	movlb	1	; select bank1
  9227  085D  0828               	movf	___ftadd@f1^(0+128),w
  9228  085E  00AE               	movwf	??___ftadd^(0+128)
  9229  085F  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9230  0860  00AF               	movwf	(??___ftadd^(0+128)+1)
  9231  0861  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9232  0862  00B0               	movwf	(??___ftadd^(0+128)+2)
  9233  0863  1003               	clrc
  9234  0864  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  9235  0865  0D30               	rlf	(??___ftadd^(0+128)+2),w
  9236  0866  00B1               	movwf	(??___ftadd+3)^(0+128)
  9237  0867  0831               	movf	(??___ftadd+3)^(0+128),w
  9238  0868  00B4               	movwf	___ftadd@exp1^(0+128)
  9239  0869  082B               	movf	___ftadd@f2^(0+128),w
  9240  086A  00AE               	movwf	??___ftadd^(0+128)
  9241  086B  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9242  086C  00AF               	movwf	(??___ftadd^(0+128)+1)
  9243  086D  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9244  086E  00B0               	movwf	(??___ftadd^(0+128)+2)
  9245  086F  1003               	clrc
  9246  0870  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  9247  0871  0D30               	rlf	(??___ftadd^(0+128)+2),w
  9248  0872  00B1               	movwf	(??___ftadd+3)^(0+128)
  9249  0873  0831               	movf	(??___ftadd+3)^(0+128),w
  9250  0874  00B3               	movwf	___ftadd@exp2^(0+128)
  9251  0875  0834               	movf	___ftadd@exp1^(0+128),w
  9252  0876  1903               	btfsc	3,2
  9253  0877  2884               	goto	l3757
  9254  0878  0833               	movf	___ftadd@exp2^(0+128),w
  9255  0879  0234               	subwf	___ftadd@exp1^(0+128),w
  9256  087A  1803               	skipnc
  9257  087B  288B               	goto	l3761
  9258  087C  0334               	decf	___ftadd@exp1^(0+128),w
  9259  087D  3AFF               	xorlw	255
  9260  087E  0733               	addwf	___ftadd@exp2^(0+128),w
  9261  087F  00AE               	movwf	??___ftadd^(0+128)
  9262  0880  3019               	movlw	25
  9263  0881  022E               	subwf	??___ftadd^(0+128),w
  9264  0882  1C03               	skipc
  9265  0883  288B               	goto	l3761
  9266  0884                     l3757:	
  9267  0884  082B               	movf	___ftadd@f2^(0+128),w
  9268  0885  00A8               	movwf	?___ftadd^(0+128)
  9269  0886  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9270  0887  00A9               	movwf	(?___ftadd+1)^(0+128)
  9271  0888  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9272  0889  00AA               	movwf	(?___ftadd+2)^(0+128)
  9273  088A  0008               	return
  9274  088B                     l3761:	
  9275  088B  0833               	movf	___ftadd@exp2^(0+128),w
  9276  088C  1903               	btfsc	3,2
  9277  088D  0008               	return
  9278  088E  0834               	movf	___ftadd@exp1^(0+128),w
  9279  088F  0233               	subwf	___ftadd@exp2^(0+128),w
  9280  0890  1803               	skipnc
  9281  0891  289A               	goto	l3767
  9282  0892  0333               	decf	___ftadd@exp2^(0+128),w
  9283  0893  3AFF               	xorlw	255
  9284  0894  0734               	addwf	___ftadd@exp1^(0+128),w
  9285  0895  00AE               	movwf	??___ftadd^(0+128)
  9286  0896  3019               	movlw	25
  9287  0897  022E               	subwf	??___ftadd^(0+128),w
  9288  0898  1803               	btfsc	3,0
  9289  0899  0008               	return
  9290  089A                     l3767:	
  9291  089A  3006               	movlw	6
  9292  089B  00AE               	movwf	??___ftadd^(0+128)
  9293  089C  082E               	movf	??___ftadd^(0+128),w
  9294  089D  00B2               	movwf	___ftadd@sign^(0+128)
  9295  089E  1BAA               	btfsc	(___ftadd@f1+2)^(0+128),7
  9296  089F  17B2               	bsf	___ftadd@sign^(0+128),7
  9297  08A0  1BAD               	btfsc	(___ftadd@f2+2)^(0+128),7
  9298  08A1  1732               	bsf	___ftadd@sign^(0+128),6
  9299  08A2  17A9               	bsf	(___ftadd@f1^(0+128)+1),7
  9300  08A3  30FF               	movlw	255
  9301  08A4  05A8               	andwf	___ftadd@f1^(0+128),f
  9302  08A5  30FF               	movlw	255
  9303  08A6  05A9               	andwf	(___ftadd@f1+1)^(0+128),f
  9304  08A7  3000               	movlw	0
  9305  08A8  05AA               	andwf	(___ftadd@f1+2)^(0+128),f
  9306  08A9  17AC               	bsf	(___ftadd@f2^(0+128)+1),7
  9307  08AA  30FF               	movlw	255
  9308  08AB  05AB               	andwf	___ftadd@f2^(0+128),f
  9309  08AC  30FF               	movlw	255
  9310  08AD  05AC               	andwf	(___ftadd@f2+1)^(0+128),f
  9311  08AE  3000               	movlw	0
  9312  08AF  05AD               	andwf	(___ftadd@f2+2)^(0+128),f
  9313  08B0  0833               	movf	___ftadd@exp2^(0+128),w
  9314  08B1  0234               	subwf	___ftadd@exp1^(0+128),w
  9315  08B2  1803               	skipnc
  9316  08B3  28D6               	goto	l3789
  9317  08B4                     l3779:	
  9318  08B4  3001               	movlw	1
  9319  08B5                     u4685:	
  9320  08B5  35AB               	lslf	___ftadd@f2^(0+128),f
  9321  08B6  0DAC               	rlf	(___ftadd@f2+1)^(0+128),f
  9322  08B7  0DAD               	rlf	(___ftadd@f2+2)^(0+128),f
  9323  08B8  0B89               	decfsz	9,f
  9324  08B9  28B5               	goto	u4685
  9325  08BA  3001               	movlw	1
  9326  08BB  02B3               	subwf	___ftadd@exp2^(0+128),f
  9327  08BC  0833               	movf	___ftadd@exp2^(0+128),w
  9328  08BD  0634               	xorwf	___ftadd@exp1^(0+128),w
  9329  08BE  1903               	skipnz
  9330  08BF  28D1               	goto	l3787
  9331  08C0  3001               	movlw	1
  9332  08C1  02B2               	subwf	___ftadd@sign^(0+128),f
  9333  08C2  0832               	movf	___ftadd@sign^(0+128),w
  9334  08C3  3907               	andlw	7
  9335  08C4  1903               	btfsc	3,2
  9336  08C5  28D1               	goto	l3787
  9337  08C6  28B4               	goto	l3779
  9338  08C7                     l3785:	
  9339  08C7  3001               	movlw	1
  9340  08C8                     u4715:	
  9341  08C8  36AA               	lsrf	(___ftadd@f1+2)^(0+128),f
  9342  08C9  0CA9               	rrf	(___ftadd@f1+1)^(0+128),f
  9343  08CA  0CA8               	rrf	___ftadd@f1^(0+128),f
  9344  08CB  0B89               	decfsz	9,f
  9345  08CC  28C8               	goto	u4715
  9346  08CD  3001               	movlw	1
  9347  08CE  00AE               	movwf	??___ftadd^(0+128)
  9348  08CF  082E               	movf	??___ftadd^(0+128),w
  9349  08D0  07B4               	addwf	___ftadd@exp1^(0+128),f
  9350  08D1                     l3787:	
  9351  08D1  0834               	movf	___ftadd@exp1^(0+128),w
  9352  08D2  0633               	xorwf	___ftadd@exp2^(0+128),w
  9353  08D3  1903               	btfsc	3,2
  9354  08D4  28FB               	goto	l1100
  9355  08D5  28C7               	goto	l3785
  9356  08D6                     l3789:	
  9357  08D6  0834               	movf	___ftadd@exp1^(0+128),w
  9358  08D7  0233               	subwf	___ftadd@exp2^(0+128),w
  9359  08D8  1803               	skipnc
  9360  08D9  28FB               	goto	l1100
  9361  08DA                     l3791:	
  9362  08DA  3001               	movlw	1
  9363  08DB                     u4745:	
  9364  08DB  35A8               	lslf	___ftadd@f1^(0+128),f
  9365  08DC  0DA9               	rlf	(___ftadd@f1+1)^(0+128),f
  9366  08DD  0DAA               	rlf	(___ftadd@f1+2)^(0+128),f
  9367  08DE  0B89               	decfsz	9,f
  9368  08DF  28DB               	goto	u4745
  9369  08E0  3001               	movlw	1
  9370  08E1  02B4               	subwf	___ftadd@exp1^(0+128),f
  9371  08E2  0833               	movf	___ftadd@exp2^(0+128),w
  9372  08E3  0634               	xorwf	___ftadd@exp1^(0+128),w
  9373  08E4  1903               	skipnz
  9374  08E5  28F7               	goto	l3799
  9375  08E6  3001               	movlw	1
  9376  08E7  02B2               	subwf	___ftadd@sign^(0+128),f
  9377  08E8  0832               	movf	___ftadd@sign^(0+128),w
  9378  08E9  3907               	andlw	7
  9379  08EA  1903               	btfsc	3,2
  9380  08EB  28F7               	goto	l3799
  9381  08EC  28DA               	goto	l3791
  9382  08ED                     l3797:	
  9383  08ED  3001               	movlw	1
  9384  08EE                     u4775:	
  9385  08EE  36AD               	lsrf	(___ftadd@f2+2)^(0+128),f
  9386  08EF  0CAC               	rrf	(___ftadd@f2+1)^(0+128),f
  9387  08F0  0CAB               	rrf	___ftadd@f2^(0+128),f
  9388  08F1  0B89               	decfsz	9,f
  9389  08F2  28EE               	goto	u4775
  9390  08F3  3001               	movlw	1
  9391  08F4  00AE               	movwf	??___ftadd^(0+128)
  9392  08F5  082E               	movf	??___ftadd^(0+128),w
  9393  08F6  07B3               	addwf	___ftadd@exp2^(0+128),f
  9394  08F7                     l3799:	
  9395  08F7  0834               	movf	___ftadd@exp1^(0+128),w
  9396  08F8  0633               	xorwf	___ftadd@exp2^(0+128),w
  9397  08F9  1D03               	skipz
  9398  08FA  28ED               	goto	l3797
  9399  08FB                     l1100:	
  9400  08FB  1FB2               	btfss	___ftadd@sign^(0+128),7
  9401  08FC  290D               	goto	l3803
  9402  08FD  30FF               	movlw	255
  9403  08FE  06A8               	xorwf	___ftadd@f1^(0+128),f
  9404  08FF  30FF               	movlw	255
  9405  0900  06A9               	xorwf	(___ftadd@f1+1)^(0+128),f
  9406  0901  30FF               	movlw	255
  9407  0902  06AA               	xorwf	(___ftadd@f1+2)^(0+128),f
  9408  0903  3001               	movlw	1
  9409  0904  07A8               	addwf	___ftadd@f1^(0+128),f
  9410  0905  3000               	movlw	0
  9411  0906  1803               	skipnc
  9412  0907  3001               	movlw	1
  9413  0908  07A9               	addwf	(___ftadd@f1+1)^(0+128),f
  9414  0909  3000               	movlw	0
  9415  090A  1803               	skipnc
  9416  090B  3001               	movlw	1
  9417  090C  07AA               	addwf	(___ftadd@f1+2)^(0+128),f
  9418  090D                     l3803:	
  9419  090D  1F32               	btfss	___ftadd@sign^(0+128),6
  9420  090E  291F               	goto	l3807
  9421  090F  30FF               	movlw	255
  9422  0910  06AB               	xorwf	___ftadd@f2^(0+128),f
  9423  0911  30FF               	movlw	255
  9424  0912  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9425  0913  30FF               	movlw	255
  9426  0914  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9427  0915  3001               	movlw	1
  9428  0916  07AB               	addwf	___ftadd@f2^(0+128),f
  9429  0917  3000               	movlw	0
  9430  0918  1803               	skipnc
  9431  0919  3001               	movlw	1
  9432  091A  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9433  091B  3000               	movlw	0
  9434  091C  1803               	skipnc
  9435  091D  3001               	movlw	1
  9436  091E  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9437  091F                     l3807:	
  9438  091F  01B2               	clrf	___ftadd@sign^(0+128)
  9439  0920  0828               	movf	___ftadd@f1^(0+128),w
  9440  0921  07AB               	addwf	___ftadd@f2^(0+128),f
  9441  0922  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9442  0923  3DAC               	addwfc	(___ftadd@f2+1)^(0+128),f
  9443  0924  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9444  0925  3DAD               	addwfc	(___ftadd@f2+2)^(0+128),f
  9445  0926  1FAD               	btfss	(___ftadd@f2+2)^(0+128),7
  9446  0927  293A               	goto	l3817
  9447  0928  30FF               	movlw	255
  9448  0929  06AB               	xorwf	___ftadd@f2^(0+128),f
  9449  092A  30FF               	movlw	255
  9450  092B  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9451  092C  30FF               	movlw	255
  9452  092D  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9453  092E  3001               	movlw	1
  9454  092F  07AB               	addwf	___ftadd@f2^(0+128),f
  9455  0930  3000               	movlw	0
  9456  0931  1803               	skipnc
  9457  0932  3001               	movlw	1
  9458  0933  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9459  0934  3000               	movlw	0
  9460  0935  1803               	skipnc
  9461  0936  3001               	movlw	1
  9462  0937  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9463  0938  01B2               	clrf	___ftadd@sign^(0+128)
  9464  0939  0AB2               	incf	___ftadd@sign^(0+128),f
  9465  093A                     l3817:	
  9466  093A  082B               	movf	___ftadd@f2^(0+128),w
  9467  093B  00A0               	movwf	___ftpack@arg^(0+128)
  9468  093C  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9469  093D  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9470  093E  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9471  093F  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9472  0940  0834               	movf	___ftadd@exp1^(0+128),w
  9473  0941  00AE               	movwf	??___ftadd^(0+128)
  9474  0942  082E               	movf	??___ftadd^(0+128),w
  9475  0943  00A3               	movwf	___ftpack@exp^(0+128)
  9476  0944  0832               	movf	___ftadd@sign^(0+128),w
  9477  0945  00AF               	movwf	(??___ftadd+1)^(0+128)
  9478  0946  082F               	movf	(??___ftadd+1)^(0+128),w
  9479  0947  00A4               	movwf	___ftpack@sign^(0+128)
  9480  0948  319B  23C6         	fcall	___ftpack
  9481  094A  0021               	movlb	1	; select bank1
  9482  094B  0820               	movf	?___ftpack^(0+128),w
  9483  094C  00A8               	movwf	?___ftadd^(0+128)
  9484  094D  0821               	movf	(?___ftpack+1)^(0+128),w
  9485  094E  00A9               	movwf	(?___ftadd+1)^(0+128)
  9486  094F  0822               	movf	(?___ftpack+2)^(0+128),w
  9487  0950  00AA               	movwf	(?___ftadd+2)^(0+128)
  9488  0951  0008               	return
  9489  0952                     __end_of___ftadd:	
  9490                           
  9491                           	psect	text30
  9492  1A6D                     __ptext30:	
  9493 ;; *************** function ___altoft *****************
  9494 ;; Defined at:
  9495 ;;		line 42 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\altoft.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  c               4    8[BANK1 ] long 
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;  sign            1   15[BANK1 ] unsigned char 
  9500 ;;  exp             1   14[BANK1 ] unsigned char 
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  3    8[BANK1 ] float 
  9503 ;; Registers used:
  9504 ;;		wreg, status,2, status,0, pclath, cstack
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9510 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;Total ram usage:        8 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; Hardware stack levels required when called:    4
  9517 ;; This function calls:
  9518 ;;		___ftpack
  9519 ;; This function is called by:
  9520 ;;		_Adaptive_base_pid
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           
  9525                           ;psect for function ___altoft
  9526  1A6D                     ___altoft:	
  9527                           
  9528                           ;incstack = 0
  9529                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  9530  1A6D  0021               	movlb	1	; select bank1
  9531  1A6E  01AF               	clrf	___altoft@sign^(0+128)
  9532  1A6F  308E               	movlw	142
  9533  1A70  00AC               	movwf	??___altoft^(0+128)
  9534  1A71  082C               	movf	??___altoft^(0+128),w
  9535  1A72  00AE               	movwf	___altoft@exp^(0+128)
  9536  1A73  1FAB               	btfss	(___altoft@c+3)^(0+128),7
  9537  1A74  2A82               	goto	l3743
  9538  1A75  09A8               	comf	___altoft@c^(0+128),f
  9539  1A76  09A9               	comf	(___altoft@c+1)^(0+128),f
  9540  1A77  09AA               	comf	(___altoft@c+2)^(0+128),f
  9541  1A78  09AB               	comf	(___altoft@c+3)^(0+128),f
  9542  1A79  0AA8               	incf	___altoft@c^(0+128),f
  9543  1A7A  1903               	skipnz
  9544  1A7B  0AA9               	incf	(___altoft@c+1)^(0+128),f
  9545  1A7C  1903               	skipnz
  9546  1A7D  0AAA               	incf	(___altoft@c+2)^(0+128),f
  9547  1A7E  1903               	skipnz
  9548  1A7F  0AAB               	incf	(___altoft@c+3)^(0+128),f
  9549  1A80  01AF               	clrf	___altoft@sign^(0+128)
  9550  1A81  0AAF               	incf	___altoft@sign^(0+128),f
  9551  1A82                     l3743:	
  9552  1A82  30FF               	movlw	255
  9553  1A83  052B               	andwf	(___altoft@c+3)^(0+128),w
  9554  1A84  1903               	btfsc	3,2
  9555  1A85  2A92               	goto	l3745
  9556  1A86  3001               	movlw	1
  9557  1A87                     u4575:	
  9558  1A87  36AB               	lsrf	(___altoft@c+3)^(0+128),f
  9559  1A88  0CAA               	rrf	(___altoft@c+2)^(0+128),f
  9560  1A89  0CA9               	rrf	(___altoft@c+1)^(0+128),f
  9561  1A8A  0CA8               	rrf	___altoft@c^(0+128),f
  9562  1A8B  0B89               	decfsz	9,f
  9563  1A8C  2A87               	goto	u4575
  9564  1A8D  3001               	movlw	1
  9565  1A8E  00AC               	movwf	??___altoft^(0+128)
  9566  1A8F  082C               	movf	??___altoft^(0+128),w
  9567  1A90  07AE               	addwf	___altoft@exp^(0+128),f
  9568  1A91  2A82               	goto	l3743
  9569  1A92                     l3745:	
  9570  1A92  0828               	movf	___altoft@c^(0+128),w
  9571  1A93  00A0               	movwf	___ftpack@arg^(0+128)
  9572  1A94  0829               	movf	(___altoft@c+1)^(0+128),w
  9573  1A95  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9574  1A96  082A               	movf	(___altoft@c+2)^(0+128),w
  9575  1A97  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9576  1A98  082E               	movf	___altoft@exp^(0+128),w
  9577  1A99  00AC               	movwf	??___altoft^(0+128)
  9578  1A9A  082C               	movf	??___altoft^(0+128),w
  9579  1A9B  00A3               	movwf	___ftpack@exp^(0+128)
  9580  1A9C  082F               	movf	___altoft@sign^(0+128),w
  9581  1A9D  00AD               	movwf	(??___altoft+1)^(0+128)
  9582  1A9E  082D               	movf	(??___altoft+1)^(0+128),w
  9583  1A9F  00A4               	movwf	___ftpack@sign^(0+128)
  9584  1AA0  319B  23C6         	fcall	___ftpack
  9585  1AA2  0021               	movlb	1	; select bank1
  9586  1AA3  0820               	movf	?___ftpack^(0+128),w
  9587  1AA4  00A8               	movwf	?___altoft^(0+128)
  9588  1AA5  0821               	movf	(?___ftpack+1)^(0+128),w
  9589  1AA6  00A9               	movwf	(?___altoft+1)^(0+128)
  9590  1AA7  0822               	movf	(?___ftpack+2)^(0+128),w
  9591  1AA8  00AA               	movwf	(?___altoft+2)^(0+128)
  9592  1AA9  0008               	return
  9593  1AAA                     __end_of___altoft:	
  9594                           
  9595                           	psect	text31
  9596  1BC6                     __ptext31:	
  9597 ;; *************** function ___ftpack *****************
  9598 ;; Defined at:
  9599 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  arg             3    0[BANK1 ] unsigned um
  9602 ;;  exp             1    3[BANK1 ] unsigned char 
  9603 ;;  sign            1    4[BANK1 ] unsigned char 
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;		None
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  3    0[BANK1 ] float 
  9608 ;; Registers used:
  9609 ;;		wreg, status,2, status,0
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9615 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;Total ram usage:        8 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; Hardware stack levels required when called:    3
  9622 ;; This function calls:
  9623 ;;		Nothing
  9624 ;; This function is called by:
  9625 ;;		___altoft
  9626 ;;		___ftadd
  9627 ;;		___ftdiv
  9628 ;;		___ftmul
  9629 ;;		___lwtoft
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           
  9634                           ;psect for function ___ftpack
  9635  1BC6                     ___ftpack:	
  9636                           
  9637                           ;incstack = 0
  9638                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9639  1BC6  0021               	movlb	1	; select bank1
  9640  1BC7  0823               	movf	___ftpack@exp^(0+128),w
  9641  1BC8  1903               	btfsc	3,2
  9642  1BC9  2BCF               	goto	l3527
  9643  1BCA  0822               	movf	(___ftpack@arg+2)^(0+128),w
  9644  1BCB  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  9645  1BCC  0420               	iorwf	___ftpack@arg^(0+128),w
  9646  1BCD  1D03               	skipz
  9647  1BCE  2BE0               	goto	l3533
  9648  1BCF                     l3527:	
  9649  1BCF  3000               	movlw	0
  9650  1BD0  00A0               	movwf	?___ftpack^(0+128)
  9651  1BD1  3000               	movlw	0
  9652  1BD2  00A1               	movwf	(?___ftpack+1)^(0+128)
  9653  1BD3  3000               	movlw	0
  9654  1BD4  00A2               	movwf	(?___ftpack+2)^(0+128)
  9655  1BD5  0008               	return
  9656  1BD6                     l3531:	
  9657  1BD6  3001               	movlw	1
  9658  1BD7  00A5               	movwf	??___ftpack^(0+128)
  9659  1BD8  0825               	movf	??___ftpack^(0+128),w
  9660  1BD9  07A3               	addwf	___ftpack@exp^(0+128),f
  9661  1BDA  3001               	movlw	1
  9662  1BDB                     u4175:	
  9663  1BDB  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  9664  1BDC  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  9665  1BDD  0CA0               	rrf	___ftpack@arg^(0+128),f
  9666  1BDE  0B89               	decfsz	9,f
  9667  1BDF  2BDB               	goto	u4175
  9668  1BE0                     l3533:	
  9669  1BE0  30FE               	movlw	254
  9670  1BE1  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  9671  1BE2  1903               	btfsc	3,2
  9672  1BE3  2BF9               	goto	l1071
  9673  1BE4  2BD6               	goto	l3531
  9674  1BE5                     l3535:	
  9675  1BE5  3001               	movlw	1
  9676  1BE6  00A5               	movwf	??___ftpack^(0+128)
  9677  1BE7  0825               	movf	??___ftpack^(0+128),w
  9678  1BE8  07A3               	addwf	___ftpack@exp^(0+128),f
  9679  1BE9  3001               	movlw	1
  9680  1BEA  07A0               	addwf	___ftpack@arg^(0+128),f
  9681  1BEB  3000               	movlw	0
  9682  1BEC  1803               	skipnc
  9683  1BED  3001               	movlw	1
  9684  1BEE  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  9685  1BEF  3000               	movlw	0
  9686  1BF0  1803               	skipnc
  9687  1BF1  3001               	movlw	1
  9688  1BF2  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  9689  1BF3  3001               	movlw	1
  9690  1BF4                     u4195:	
  9691  1BF4  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  9692  1BF5  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  9693  1BF6  0CA0               	rrf	___ftpack@arg^(0+128),f
  9694  1BF7  0B89               	decfsz	9,f
  9695  1BF8  2BF4               	goto	u4195
  9696  1BF9                     l1071:	
  9697  1BF9  30FF               	movlw	255
  9698  1BFA  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  9699  1BFB  1903               	btfsc	3,2
  9700  1BFC  2C06               	goto	l3543
  9701  1BFD  2BE5               	goto	l3535
  9702  1BFE                     l3541:	
  9703  1BFE  3001               	movlw	1
  9704  1BFF  02A3               	subwf	___ftpack@exp^(0+128),f
  9705  1C00  3001               	movlw	1
  9706  1C01                     u4215:	
  9707  1C01  35A0               	lslf	___ftpack@arg^(0+128),f
  9708  1C02  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  9709  1C03  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  9710  1C04  0B89               	decfsz	9,f
  9711  1C05  2C01               	goto	u4215
  9712  1C06                     l3543:	
  9713  1C06  1FA1               	btfss	(___ftpack@arg+1)^(0+128),7
  9714  1C07  2BFE               	goto	l3541
  9715  1C08  1823               	btfsc	___ftpack@exp^(0+128),0
  9716  1C09  2C10               	goto	l1077
  9717  1C0A  30FF               	movlw	255
  9718  1C0B  05A0               	andwf	___ftpack@arg^(0+128),f
  9719  1C0C  307F               	movlw	127
  9720  1C0D  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  9721  1C0E  30FF               	movlw	255
  9722  1C0F  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  9723  1C10                     l1077:	
  9724  1C10  1003               	clrc
  9725  1C11  0CA3               	rrf	___ftpack@exp^(0+128),f
  9726  1C12  0823               	movf	___ftpack@exp^(0+128),w
  9727  1C13  00A5               	movwf	??___ftpack^(0+128)
  9728  1C14  01A6               	clrf	(??___ftpack^(0+128)+1)
  9729  1C15  01A7               	clrf	(??___ftpack^(0+128)+2)
  9730  1C16  3010               	movlw	16
  9731  1C17                     u4245:	
  9732  1C17  35A5               	lslf	??___ftpack^(0+128),f
  9733  1C18  0DA6               	rlf	(??___ftpack^(0+128)+1),f
  9734  1C19  0DA7               	rlf	(??___ftpack^(0+128)+2),f
  9735  1C1A  0B89               	decfsz	9,f
  9736  1C1B  2C17               	goto	u4245
  9737  1C1C  0825               	movf	??___ftpack^(0+128),w
  9738  1C1D  04A0               	iorwf	___ftpack@arg^(0+128),f
  9739  1C1E  0826               	movf	(??___ftpack+1)^(0+128),w
  9740  1C1F  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  9741  1C20  0827               	movf	(??___ftpack+2)^(0+128),w
  9742  1C21  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  9743  1C22  0824               	movf	___ftpack@sign^(0+128),w
  9744  1C23  1903               	btfsc	3,2
  9745  1C24  0008               	return
  9746  1C25  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  9747  1C26  0008               	return
  9748  1C27                     __end_of___ftpack:	
  9749                           
  9750                           	psect	text32
  9751  1E70                     __ptext32:	
  9752 ;; *************** function ___aldiv *****************
  9753 ;; Defined at:
  9754 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\aldiv.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;  divisor         4    0[BANK1 ] long 
  9757 ;;  dividend        4    4[BANK1 ] long 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;  quotient        4   11[BANK1 ] long 
  9760 ;;  sign            1   10[BANK1 ] unsigned char 
  9761 ;;  counter         1    9[BANK1 ] unsigned char 
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  4    0[BANK1 ] long 
  9764 ;; Registers used:
  9765 ;;		wreg, status,2, status,0
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9771 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9772 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9773 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9774 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  9775 ;;Total ram usage:       15 bytes
  9776 ;; Hardware stack levels used:    1
  9777 ;; Hardware stack levels required when called:    3
  9778 ;; This function calls:
  9779 ;;		Nothing
  9780 ;; This function is called by:
  9781 ;;		_Adaptive_base_pid
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           
  9786                           ;psect for function ___aldiv
  9787  1E70                     ___aldiv:	
  9788                           
  9789                           ;incstack = 0
  9790                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9791  1E70  0021               	movlb	1	; select bank1
  9792  1E71  01AA               	clrf	___aldiv@sign^(0+128)
  9793  1E72  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
  9794  1E73  2E81               	goto	l965
  9795  1E74  09A0               	comf	___aldiv@divisor^(0+128),f
  9796  1E75  09A1               	comf	(___aldiv@divisor+1)^(0+128),f
  9797  1E76  09A2               	comf	(___aldiv@divisor+2)^(0+128),f
  9798  1E77  09A3               	comf	(___aldiv@divisor+3)^(0+128),f
  9799  1E78  0AA0               	incf	___aldiv@divisor^(0+128),f
  9800  1E79  1903               	skipnz
  9801  1E7A  0AA1               	incf	(___aldiv@divisor+1)^(0+128),f
  9802  1E7B  1903               	skipnz
  9803  1E7C  0AA2               	incf	(___aldiv@divisor+2)^(0+128),f
  9804  1E7D  1903               	skipnz
  9805  1E7E  0AA3               	incf	(___aldiv@divisor+3)^(0+128),f
  9806  1E7F  01AA               	clrf	___aldiv@sign^(0+128)
  9807  1E80  0AAA               	incf	___aldiv@sign^(0+128),f
  9808  1E81                     l965:	
  9809  1E81  1FA7               	btfss	(___aldiv@dividend+3)^(0+128),7
  9810  1E82  2E92               	goto	l3703
  9811  1E83  09A4               	comf	___aldiv@dividend^(0+128),f
  9812  1E84  09A5               	comf	(___aldiv@dividend+1)^(0+128),f
  9813  1E85  09A6               	comf	(___aldiv@dividend+2)^(0+128),f
  9814  1E86  09A7               	comf	(___aldiv@dividend+3)^(0+128),f
  9815  1E87  0AA4               	incf	___aldiv@dividend^(0+128),f
  9816  1E88  1903               	skipnz
  9817  1E89  0AA5               	incf	(___aldiv@dividend+1)^(0+128),f
  9818  1E8A  1903               	skipnz
  9819  1E8B  0AA6               	incf	(___aldiv@dividend+2)^(0+128),f
  9820  1E8C  1903               	skipnz
  9821  1E8D  0AA7               	incf	(___aldiv@dividend+3)^(0+128),f
  9822  1E8E  3001               	movlw	1
  9823  1E8F  00A8               	movwf	??___aldiv^(0+128)
  9824  1E90  0828               	movf	??___aldiv^(0+128),w
  9825  1E91  06AA               	xorwf	___aldiv@sign^(0+128),f
  9826  1E92                     l3703:	
  9827  1E92  3000               	movlw	0
  9828  1E93  00AE               	movwf	(___aldiv@quotient+3)^(0+128)
  9829  1E94  3000               	movlw	0
  9830  1E95  00AD               	movwf	(___aldiv@quotient+2)^(0+128)
  9831  1E96  3000               	movlw	0
  9832  1E97  00AC               	movwf	(___aldiv@quotient+1)^(0+128)
  9833  1E98  3000               	movlw	0
  9834  1E99  00AB               	movwf	___aldiv@quotient^(0+128)
  9835  1E9A  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  9836  1E9B  0422               	iorwf	(___aldiv@divisor+2)^(0+128),w
  9837  1E9C  0421               	iorwf	(___aldiv@divisor+1)^(0+128),w
  9838  1E9D  0420               	iorwf	___aldiv@divisor^(0+128),w
  9839  1E9E  1903               	skipnz
  9840  1E9F  2EDB               	goto	l3725
  9841  1EA0  01A9               	clrf	___aldiv@counter^(0+128)
  9842  1EA1  0AA9               	incf	___aldiv@counter^(0+128),f
  9843  1EA2                     l3711:	
  9844  1EA2  1BA3               	btfsc	(___aldiv@divisor+3)^(0+128),7
  9845  1EA3  2EB0               	goto	l3713
  9846  1EA4  3001               	movlw	1
  9847  1EA5                     u4495:	
  9848  1EA5  35A0               	lslf	___aldiv@divisor^(0+128),f
  9849  1EA6  0DA1               	rlf	(___aldiv@divisor+1)^(0+128),f
  9850  1EA7  0DA2               	rlf	(___aldiv@divisor+2)^(0+128),f
  9851  1EA8  0DA3               	rlf	(___aldiv@divisor+3)^(0+128),f
  9852  1EA9  0B89               	decfsz	9,f
  9853  1EAA  2EA5               	goto	u4495
  9854  1EAB  3001               	movlw	1
  9855  1EAC  00A8               	movwf	??___aldiv^(0+128)
  9856  1EAD  0828               	movf	??___aldiv^(0+128),w
  9857  1EAE  07A9               	addwf	___aldiv@counter^(0+128),f
  9858  1EAF  2EA2               	goto	l3711
  9859  1EB0                     l3713:	
  9860  1EB0  3001               	movlw	1
  9861  1EB1                     u4515:	
  9862  1EB1  35AB               	lslf	___aldiv@quotient^(0+128),f
  9863  1EB2  0DAC               	rlf	(___aldiv@quotient+1)^(0+128),f
  9864  1EB3  0DAD               	rlf	(___aldiv@quotient+2)^(0+128),f
  9865  1EB4  0DAE               	rlf	(___aldiv@quotient+3)^(0+128),f
  9866  1EB5  0B89               	decfsz	9,f
  9867  1EB6  2EB1               	goto	u4515
  9868  1EB7  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  9869  1EB8  0227               	subwf	(___aldiv@dividend+3)^(0+128),w
  9870  1EB9  1D03               	skipz
  9871  1EBA  2EC5               	goto	u4525
  9872  1EBB  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  9873  1EBC  0226               	subwf	(___aldiv@dividend+2)^(0+128),w
  9874  1EBD  1D03               	skipz
  9875  1EBE  2EC5               	goto	u4525
  9876  1EBF  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  9877  1EC0  0225               	subwf	(___aldiv@dividend+1)^(0+128),w
  9878  1EC1  1D03               	skipz
  9879  1EC2  2EC5               	goto	u4525
  9880  1EC3  0820               	movf	___aldiv@divisor^(0+128),w
  9881  1EC4  0224               	subwf	___aldiv@dividend^(0+128),w
  9882  1EC5                     u4525:	
  9883  1EC5  1C03               	skipc
  9884  1EC6  2ED0               	goto	l3721
  9885  1EC7  0820               	movf	___aldiv@divisor^(0+128),w
  9886  1EC8  02A4               	subwf	___aldiv@dividend^(0+128),f
  9887  1EC9  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  9888  1ECA  3BA5               	subwfb	(___aldiv@dividend+1)^(0+128),f
  9889  1ECB  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  9890  1ECC  3BA6               	subwfb	(___aldiv@dividend+2)^(0+128),f
  9891  1ECD  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  9892  1ECE  3BA7               	subwfb	(___aldiv@dividend+3)^(0+128),f
  9893  1ECF  142B               	bsf	___aldiv@quotient^(0+128),0
  9894  1ED0                     l3721:	
  9895  1ED0  3001               	movlw	1
  9896  1ED1                     u4535:	
  9897  1ED1  36A3               	lsrf	(___aldiv@divisor+3)^(0+128),f
  9898  1ED2  0CA2               	rrf	(___aldiv@divisor+2)^(0+128),f
  9899  1ED3  0CA1               	rrf	(___aldiv@divisor+1)^(0+128),f
  9900  1ED4  0CA0               	rrf	___aldiv@divisor^(0+128),f
  9901  1ED5  0B89               	decfsz	9,f
  9902  1ED6  2ED1               	goto	u4535
  9903  1ED7  3001               	movlw	1
  9904  1ED8  02A9               	subwf	___aldiv@counter^(0+128),f
  9905  1ED9  1D03               	btfss	3,2
  9906  1EDA  2EB0               	goto	l3713
  9907  1EDB                     l3725:	
  9908  1EDB  082A               	movf	___aldiv@sign^(0+128),w
  9909  1EDC  1903               	btfsc	3,2
  9910  1EDD  2EE9               	goto	l3729
  9911  1EDE  09AB               	comf	___aldiv@quotient^(0+128),f
  9912  1EDF  09AC               	comf	(___aldiv@quotient+1)^(0+128),f
  9913  1EE0  09AD               	comf	(___aldiv@quotient+2)^(0+128),f
  9914  1EE1  09AE               	comf	(___aldiv@quotient+3)^(0+128),f
  9915  1EE2  0AAB               	incf	___aldiv@quotient^(0+128),f
  9916  1EE3  1903               	skipnz
  9917  1EE4  0AAC               	incf	(___aldiv@quotient+1)^(0+128),f
  9918  1EE5  1903               	skipnz
  9919  1EE6  0AAD               	incf	(___aldiv@quotient+2)^(0+128),f
  9920  1EE7  1903               	skipnz
  9921  1EE8  0AAE               	incf	(___aldiv@quotient+3)^(0+128),f
  9922  1EE9                     l3729:	
  9923  1EE9  082E               	movf	(___aldiv@quotient+3)^(0+128),w
  9924  1EEA  00A3               	movwf	(?___aldiv+3)^(0+128)
  9925  1EEB  082D               	movf	(___aldiv@quotient+2)^(0+128),w
  9926  1EEC  00A2               	movwf	(?___aldiv+2)^(0+128)
  9927  1EED  082C               	movf	(___aldiv@quotient+1)^(0+128),w
  9928  1EEE  00A1               	movwf	(?___aldiv+1)^(0+128)
  9929  1EEF  082B               	movf	___aldiv@quotient^(0+128),w
  9930  1EF0  00A0               	movwf	?___aldiv^(0+128)
  9931  1EF1  0008               	return
  9932  1EF2                     __end_of___aldiv:	
  9933                           
  9934                           	psect	text33
  9935  19A4                     __ptext33:	
  9936 ;; *************** function _Update_PWM *****************
  9937 ;; Defined at:
  9938 ;;		line 1150 in file "main.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;  setwsduty       2   51[BANK1 ] unsigned int 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;  Dutycnt         2   57[BANK1 ] unsigned int 
  9943 ;;  Temp1           2   55[BANK1 ] unsigned int 
  9944 ;; Return value:  Size  Location     Type
  9945 ;;		None               void
  9946 ;; Registers used:
  9947 ;;		wreg, status,2, status,0
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9953 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9954 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9955 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9956 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9957 ;;Total ram usage:        8 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    3
  9960 ;; This function calls:
  9961 ;;		Nothing
  9962 ;; This function is called by:
  9963 ;;		_Adaptive_base_pid
  9964 ;;		_main
  9965 ;;		_key_application
  9966 ;;		_detect_display_error
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           
  9971                           ;psect for function _Update_PWM
  9972  19A4                     _Update_PWM:	
  9973                           
  9974                           ;main.c: 1152: unsigned int Temp1=0x00, Dutycnt=0;
  9975                           
  9976                           ;incstack = 0
  9977                           ; Regs used in _Update_PWM: [wreg+status,2+status,0]
  9978  19A4  0021               	movlb	1	; select bank1
  9979  19A5  01D7               	clrf	Update_PWM@Temp1^(0+128)
  9980  19A6  01D8               	clrf	(Update_PWM@Temp1+1)^(0+128)
  9981  19A7  01D9               	clrf	Update_PWM@Dutycnt^(0+128)
  9982  19A8  01DA               	clrf	(Update_PWM@Dutycnt+1)^(0+128)
  9983                           
  9984                           ;main.c: 1153: Dutycnt=setwsduty;
  9985  19A9  0854               	movf	(Update_PWM@setwsduty+1)^(0+128),w
  9986  19AA  01DA               	clrf	(Update_PWM@Dutycnt+1)^(0+128)
  9987  19AB  07DA               	addwf	(Update_PWM@Dutycnt+1)^(0+128),f
  9988  19AC  0853               	movf	Update_PWM@setwsduty^(0+128),w
  9989  19AD  01D9               	clrf	Update_PWM@Dutycnt^(0+128)
  9990  19AE  07D9               	addwf	Update_PWM@Dutycnt^(0+128),f
  9991                           
  9992                           ;main.c: 1154: CCP1CONbits.DC1B=Dutycnt;
  9993  19AF  0859               	movf	Update_PWM@Dutycnt^(0+128),w
  9994  19B0  00D5               	movwf	??_Update_PWM^(0+128)
  9995  19B1  0ED5               	swapf	??_Update_PWM^(0+128),f
  9996  19B2  0025               	movlb	5	; select bank5
  9997  19B3  0813               	movf	19,w	;volatile
  9998  19B4  0021               	movlb	1	; select bank1
  9999  19B5  0655               	xorwf	??_Update_PWM^(0+128),w
 10000  19B6  39CF               	andlw	-49
 10001  19B7  0655               	xorwf	??_Update_PWM^(0+128),w
 10002  19B8  0025               	movlb	5	; select bank5
 10003  19B9  0093               	movwf	19	;volatile
 10004                           
 10005                           ;main.c: 1155: Temp1=Dutycnt >> 2;
 10006  19BA  0021               	movlb	1	; select bank1
 10007  19BB  085A               	movf	(Update_PWM@Dutycnt+1)^(0+128),w
 10008  19BC  00D6               	movwf	(??_Update_PWM^(0+128)+1)
 10009  19BD  0859               	movf	Update_PWM@Dutycnt^(0+128),w
 10010  19BE  00D5               	movwf	??_Update_PWM^(0+128)
 10011  19BF  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
 10012  19C0  0CD5               	rrf	??_Update_PWM^(0+128),f
 10013  19C1  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
 10014  19C2  0CD5               	rrf	??_Update_PWM^(0+128),f
 10015  19C3  0855               	movf	??_Update_PWM^(0+128),w
 10016  19C4  00D7               	movwf	Update_PWM@Temp1^(0+128)
 10017  19C5  0856               	movf	(??_Update_PWM+1)^(0+128),w
 10018  19C6  00D8               	movwf	(Update_PWM@Temp1+1)^(0+128)
 10019                           
 10020                           ;main.c: 1156: CCPR1L=Temp1;
 10021  19C7  0857               	movf	Update_PWM@Temp1^(0+128),w
 10022  19C8  0025               	movlb	5	; select bank5
 10023  19C9  0091               	movwf	17	;volatile
 10024  19CA  0008               	return
 10025  19CB                     __end_of_Update_PWM:	
 10026                           
 10027                           	psect	intentry
 10028  0004                     __pintentry:	
 10029 ;; *************** function _ISR_Function *****************
 10030 ;; Defined at:
 10031 ;;		line 41 in file "main.c"
 10032 ;; Parameters:    Size  Location     Type
 10033 ;;		None
 10034 ;; Auto vars:     Size  Location     Type
 10035 ;;		None
 10036 ;; Return value:  Size  Location     Type
 10037 ;;		None               void
 10038 ;; Registers used:
 10039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10040 ;; Tracked objects:
 10041 ;;		On entry : 0/0
 10042 ;;		On exit  : 0/0
 10043 ;;		Unchanged: 0/0
 10044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10047 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10048 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10049 ;;Total ram usage:       11 bytes
 10050 ;; Hardware stack levels used:    1
 10051 ;; Hardware stack levels required when called:    2
 10052 ;; This function calls:
 10053 ;;		_Display
 10054 ;;		i1_Update_PWM
 10055 ;;		i1___aldiv
 10056 ;;		i1___ftadd
 10057 ;;		i1___ftdiv
 10058 ;;		i1___ftmul
 10059 ;;		i1___fttol
 10060 ;;		i1___lwtoft
 10061 ;; This function is called by:
 10062 ;;		Interrupt level 1
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           
 10066  0004                     _ISR_Function:	
 10067                           
 10068                           ;incstack = 0
 10069                           ; Regs used in _ISR_Function: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10070  0004  147E               	bsf	126,0	;set compiler interrupt flag
 10071  0005  3180               	pagesel	$
 10072  0006  0020               	movlb	0	; select bank0
 10073  0007  087F               	movf	127,w
 10074  0008  00D3               	movwf	??_ISR_Function+8
 10075                           
 10076                           ;main.c: 43: if(INTCONbits.TMR0IF==1)
 10077  0009  1D0B               	btfss	11,2	;volatile
 10078  000A  28EF               	goto	i1l5019
 10079                           
 10080                           ;main.c: 44: {
 10081                           ;main.c: 45: INTCONbits.TMR0IF=0;
 10082  000B  110B               	bcf	11,2	;volatile
 10083                           
 10084                           ;main.c: 46: TMR0=0x00;
 10085  000C  0195               	clrf	21	;volatile
 10086                           
 10087                           ;main.c: 47: updatedispf=0;
 10088  000D  0023               	movlb	3	; select bank3
 10089  000E  01DE               	clrf	_updatedispf^(0+384)	;volatile
 10090                           
 10091                           ;main.c: 48: Display();
 10092  000F  3185  2571  3180   	fcall	_Display
 10093                           
 10094                           ;main.c: 49: count_1ms++;
 10095  0012  3001               	movlw	1
 10096  0013  0023               	movlb	3	; select bank3
 10097  0014  07B6               	addwf	_count_1ms^(0+384),f	;volatile
 10098  0015  3000               	movlw	0
 10099  0016  3DB7               	addwfc	(_count_1ms+1)^(0+384),f	;volatile
 10100                           
 10101                           ;main.c: 50: count_2ms++;
 10102  0017  3001               	movlw	1
 10103  0018  0020               	movlb	0	; select bank0
 10104  0019  00CB               	movwf	??_ISR_Function
 10105  001A  084B               	movf	??_ISR_Function,w
 10106  001B  0022               	movlb	2	; select bank2
 10107  001C  07B9               	addwf	_count_2ms^(0+256),f	;volatile
 10108                           
 10109                           ;main.c: 51: count_1msec++;
 10110  001D  3001               	movlw	1
 10111  001E  0020               	movlb	0	; select bank0
 10112  001F  00CB               	movwf	??_ISR_Function
 10113  0020  084B               	movf	??_ISR_Function,w
 10114  0021  0022               	movlb	2	; select bank2
 10115  0022  07B8               	addwf	_count_1msec^(0+256),f
 10116                           
 10117                           ;main.c: 52: count_pid++;
 10118  0023  3001               	movlw	1
 10119  0024  0020               	movlb	0	; select bank0
 10120  0025  00CB               	movwf	??_ISR_Function
 10121  0026  084B               	movf	??_ISR_Function,w
 10122  0027  0023               	movlb	3	; select bank3
 10123  0028  07D5               	addwf	_count_pid^(0+384),f	;volatile
 10124                           
 10125                           ;main.c: 53: count_transms++;
 10126  0029  3001               	movlw	1
 10127  002A  0024               	movlb	4	; select bank4
 10128  002B  07AA               	addwf	_count_transms^(0+512),f	;volatile
 10129  002C  3000               	movlw	0
 10130  002D  3DAB               	addwfc	(_count_transms+1)^(0+512),f	;volatile
 10131                           
 10132                           ;main.c: 57: if(RCSTAbits.FERR==1 || RCSTAbits.OERR==1)
 10133  002E  0023               	movlb	3	; select bank3
 10134  002F  191D               	btfsc	29,2	;volatile
 10135  0030  2833               	goto	i1l554
 10136  0031  1C9D               	btfss	29,1	;volatile
 10137  0032  2837               	goto	i1l4937
 10138  0033                     i1l554:	
 10139                           
 10140                           ;main.c: 58: {
 10141                           ;main.c: 59: RCSTAbits.SPEN=0;
 10142  0033  139D               	bcf	29,7	;volatile
 10143                           
 10144                           ;main.c: 60: RCSTAbits.CREN=0;
 10145  0034  121D               	bcf	29,4	;volatile
 10146                           
 10147                           ;main.c: 61: RCSTAbits.SPEN=1;
 10148  0035  179D               	bsf	29,7	;volatile
 10149                           
 10150                           ;main.c: 62: RCSTAbits.CREN=1;
 10151  0036  161D               	bsf	29,4	;volatile
 10152  0037                     i1l4937:	
 10153                           
 10154                           ;main.c: 63: }
 10155                           ;main.c: 64: if(count_1ms>=500)
 10156  0037  3001               	movlw	1
 10157  0038  0237               	subwf	(_count_1ms+1)^(0+384),w	;volatile
 10158  0039  30F4               	movlw	244
 10159  003A  1903               	skipnz
 10160  003B  0236               	subwf	_count_1ms^(0+384),w	;volatile
 10161  003C  1C03               	skipc
 10162  003D  2897               	goto	i1l4985
 10163                           
 10164                           ;main.c: 65: {
 10165                           ;main.c: 66: count_1ms=0;
 10166  003E  01B6               	clrf	_count_1ms^(0+384)	;volatile
 10167  003F  01B7               	clrf	(_count_1ms+1)^(0+384)	;volatile
 10168                           
 10169                           ;main.c: 67: comm_error_count++;
 10170  0040  3001               	movlw	1
 10171  0041  0020               	movlb	0	; select bank0
 10172  0042  00CB               	movwf	??_ISR_Function
 10173  0043  084B               	movf	??_ISR_Function,w
 10174  0044  0022               	movlb	2	; select bank2
 10175  0045  07B7               	addwf	_comm_error_count^(0+256),f	;volatile
 10176                           
 10177                           ;main.c: 69: if(gaschkfg == 1)
 10178  0046  0841               	movf	_gaschkfg^(0+256),w
 10179  0047  3A01               	xorlw	1
 10180  0048  1D03               	skipz
 10181  0049  2877               	goto	i1l4973
 10182                           
 10183                           ;main.c: 70: {
 10184                           ;main.c: 71: if(igascntr != 0)
 10185  004A  0023               	movlb	3	; select bank3
 10186  004B  083D               	movf	(_igascntr+1)^(0+384),w
 10187  004C  043C               	iorwf	_igascntr^(0+384),w
 10188  004D  1903               	skipnz
 10189  004E  2854               	goto	i1l4949
 10190                           
 10191                           ;main.c: 72: {
 10192                           ;main.c: 73: igascntr--;
 10193  004F  3001               	movlw	1
 10194  0050  02BC               	subwf	_igascntr^(0+384),f
 10195  0051  3000               	movlw	0
 10196  0052  3BBD               	subwfb	(_igascntr+1)^(0+384),f
 10197                           
 10198                           ;main.c: 74: }else
 10199  0053  2865               	goto	i1l4967
 10200  0054                     i1l4949:	
 10201                           
 10202                           ;main.c: 75: {
 10203                           ;main.c: 76: igascntr = 0;
 10204  0054  01BC               	clrf	_igascntr^(0+384)
 10205  0055  01BD               	clrf	(_igascntr+1)^(0+384)
 10206                           
 10207                           ;main.c: 77: gaschkfg = 0;
 10208  0056  0022               	movlb	2	; select bank2
 10209  0057  01C1               	clrf	_gaschkfg^(0+256)
 10210                           
 10211                           ;main.c: 78: TypeU.TypeS.gason =0;
 10212  0058  0020               	movlb	0	; select bank0
 10213  0059  11E7               	bcf	_TypeU,3
 10214                           
 10215                           ;main.c: 79: PORTCbits.RC3 =0;
 10216  005A  118E               	bcf	14,3	;volatile
 10217                           
 10218                           ;main.c: 80: TypeU.TypeS.wirespeed=1;
 10219  005B  1467               	bsf	_TypeU,0
 10220                           
 10221                           ;main.c: 81: TypeU.TypeS.amp=0;
 10222  005C  1068               	bcf	_TypeU+1,0
 10223                           
 10224                           ;main.c: 82: TypeU.TypeS.thickness=0;
 10225  005D  10E7               	bcf	_TypeU,1
 10226                           
 10227                           ;main.c: 83: TypeDP.DPGROUP[0]=0x00;
 10228  005E  01EB               	clrf	_TypeDP
 10229                           
 10230                           ;main.c: 84: TypeDP.TypeD.digitdp2 =1;
 10231  005F  14EB               	bsf	_TypeDP,1
 10232                           
 10233                           ;main.c: 85: TypeDP.TypeD.digitdp5 =1;
 10234  0060  166B               	bsf	_TypeDP,4
 10235                           
 10236                           ;main.c: 86: dispupdatef =1;
 10237  0061  3001               	movlw	1
 10238  0062  00CB               	movwf	??_ISR_Function
 10239  0063  084B               	movf	??_ISR_Function,w
 10240  0064  00EF               	movwf	_dispupdatef	;volatile
 10241  0065                     i1l4967:	
 10242                           
 10243                           ;main.c: 87: }
 10244                           ;main.c: 88: diswin1[0]= 0x11;
 10245  0065  3011               	movlw	17
 10246  0066  0020               	movlb	0	; select bank0
 10247  0067  00CB               	movwf	??_ISR_Function
 10248  0068  084B               	movf	??_ISR_Function,w
 10249  0069  0022               	movlb	2	; select bank2
 10250  006A  00E4               	movwf	_diswin1^(0+256)
 10251                           
 10252                           ;main.c: 89: diswin1[1]= 0x0B;
 10253  006B  300B               	movlw	11
 10254  006C  0020               	movlb	0	; select bank0
 10255  006D  00CB               	movwf	??_ISR_Function
 10256  006E  084B               	movf	??_ISR_Function,w
 10257  006F  0022               	movlb	2	; select bank2
 10258  0070  00E5               	movwf	(_diswin1^(0+256)+1)
 10259                           
 10260                           ;main.c: 90: diswin1[2]= 0x1D;
 10261  0071  301D               	movlw	29
 10262  0072  0020               	movlb	0	; select bank0
 10263  0073  00CB               	movwf	??_ISR_Function
 10264  0074  084B               	movf	??_ISR_Function,w
 10265  0075  0022               	movlb	2	; select bank2
 10266  0076  00E6               	movwf	(_diswin1^(0+256)+2)
 10267  0077                     i1l4973:	
 10268                           
 10269                           ;main.c: 91: }
 10270                           ;main.c: 93: if(weldmode=='P' || weldmode=='G')
 10271  0077  0020               	movlb	0	; select bank0
 10272  0078  0866               	movf	_weldmode,w	;volatile
 10273  0079  3A50               	xorlw	80
 10274  007A  1903               	skipnz
 10275  007B  2880               	goto	i1l4977
 10276  007C  0866               	movf	_weldmode,w	;volatile
 10277  007D  3A47               	xorlw	71
 10278  007E  1D03               	skipz
 10279  007F  2894               	goto	i1l4983
 10280  0080                     i1l4977:	
 10281                           
 10282                           ;main.c: 94: {
 10283                           ;main.c: 95: if(comm_error_count>3)
 10284  0080  3004               	movlw	4
 10285  0081  0022               	movlb	2	; select bank2
 10286  0082  0237               	subwf	_comm_error_count^(0+256),w	;volatile
 10287  0083  1C03               	skipc
 10288  0084  2892               	goto	i1l4981
 10289                           
 10290                           ;main.c: 96: {
 10291                           ;main.c: 97: error8=1;
 10292  0085  3001               	movlw	1
 10293  0086  0020               	movlb	0	; select bank0
 10294  0087  00CB               	movwf	??_ISR_Function
 10295  0088  084B               	movf	??_ISR_Function,w
 10296  0089  0022               	movlb	2	; select bank2
 10297  008A  00BE               	movwf	_error8^(0+256)	;volatile
 10298                           
 10299                           ;main.c: 98: comm_error_count=4;
 10300  008B  3004               	movlw	4
 10301  008C  0020               	movlb	0	; select bank0
 10302  008D  00CB               	movwf	??_ISR_Function
 10303  008E  084B               	movf	??_ISR_Function,w
 10304  008F  0022               	movlb	2	; select bank2
 10305  0090  00B7               	movwf	_comm_error_count^(0+256)	;volatile
 10306                           
 10307                           ;main.c: 99: }
 10308  0091  2897               	goto	i1l4985
 10309  0092                     i1l4981:	
 10310                           
 10311                           ;main.c: 100: else
 10312                           ;main.c: 101: error8=0;
 10313  0092  01BE               	clrf	_error8^(0+256)	;volatile
 10314                           
 10315                           ;main.c: 102: }
 10316  0093  2897               	goto	i1l4985
 10317  0094                     i1l4983:	
 10318                           
 10319                           ;main.c: 103: else
 10320                           ;main.c: 104: {
 10321                           ;main.c: 105: error8=0;
 10322  0094  0022               	movlb	2	; select bank2
 10323  0095  01BE               	clrf	_error8^(0+256)	;volatile
 10324                           
 10325                           ;main.c: 106: comm_error_count=0;
 10326  0096  01B7               	clrf	_comm_error_count^(0+256)	;volatile
 10327  0097                     i1l4985:	
 10328                           
 10329                           ;main.c: 107: }
 10330                           ;main.c: 123: }
 10331                           ;main.c: 124: if(count_2ms >=1)
 10332  0097  0022               	movlb	2	; select bank2
 10333  0098  0839               	movf	_count_2ms^(0+256),w	;volatile
 10334  0099  1903               	btfsc	3,2
 10335  009A  28A2               	goto	i1l4991
 10336                           
 10337                           ;main.c: 125: {
 10338                           ;main.c: 126: count_2ms=0;
 10339  009B  01B9               	clrf	_count_2ms^(0+256)	;volatile
 10340                           
 10341                           ;main.c: 127: read_enc1f=1;
 10342  009C  3001               	movlw	1
 10343  009D  0020               	movlb	0	; select bank0
 10344  009E  00CB               	movwf	??_ISR_Function
 10345  009F  084B               	movf	??_ISR_Function,w
 10346  00A0  0022               	movlb	2	; select bank2
 10347  00A1  00D2               	movwf	_read_enc1f^(0+256)	;volatile
 10348  00A2                     i1l4991:	
 10349                           
 10350                           ;main.c: 128: }
 10351                           ;main.c: 130: if(count_1msec >= 10)
 10352  00A2  300A               	movlw	10
 10353  00A3  0238               	subwf	_count_1msec^(0+256),w
 10354  00A4  1C03               	skipc
 10355  00A5  28EF               	goto	i1l5019
 10356                           
 10357                           ;main.c: 131: {
 10358                           ;main.c: 132: count_1msec=0;
 10359  00A6  01B8               	clrf	_count_1msec^(0+256)
 10360                           
 10361                           ;main.c: 133: if(kpressread==0)
 10362  00A7  08C2               	movf	_kpressread^(0+256),f
 10363  00A8  1D03               	skipz
 10364  00A9  28B3               	goto	i1l5001
 10365                           
 10366                           ;main.c: 134: {
 10367                           ;main.c: 135: torchstatus1=PORTCbits.RC5;
 10368  00AA  3000               	movlw	0
 10369  00AB  0020               	movlb	0	; select bank0
 10370  00AC  1A8E               	btfsc	14,5	;volatile
 10371  00AD  3001               	movlw	1
 10372  00AE  0022               	movlb	2	; select bank2
 10373  00AF  00D8               	movwf	_torchstatus1^(0+256)
 10374                           
 10375                           ;main.c: 136: kpressread=1;
 10376  00B0  01C2               	clrf	_kpressread^(0+256)
 10377  00B1  0AC2               	incf	_kpressread^(0+256),f
 10378                           
 10379                           ;main.c: 137: }
 10380  00B2  28EF               	goto	i1l5019
 10381  00B3                     i1l5001:	
 10382                           
 10383                           ;main.c: 138: else
 10384                           ;main.c: 139: {
 10385                           ;main.c: 140: kpressread=0;
 10386  00B3  01C2               	clrf	_kpressread^(0+256)
 10387                           
 10388                           ;main.c: 141: torchstatus2=PORTCbits.RC5;
 10389  00B4  3000               	movlw	0
 10390  00B5  0020               	movlb	0	; select bank0
 10391  00B6  1A8E               	btfsc	14,5	;volatile
 10392  00B7  3001               	movlw	1
 10393  00B8  0022               	movlb	2	; select bank2
 10394  00B9  00D9               	movwf	_torchstatus2^(0+256)
 10395                           
 10396                           ;main.c: 142: tans =(torchstatus1 == torchstatus2 ? 1:0);
 10397  00BA  0858               	movf	_torchstatus1^(0+256),w
 10398  00BB  0659               	xorwf	_torchstatus2^(0+256),w
 10399  00BC  3000               	movlw	0
 10400  00BD  1903               	skipnz
 10401  00BE  3001               	movlw	1
 10402  00BF  0020               	movlb	0	; select bank0
 10403  00C0  00CB               	movwf	??_ISR_Function
 10404  00C1  084B               	movf	??_ISR_Function,w
 10405  00C2  0022               	movlb	2	; select bank2
 10406  00C3  00D7               	movwf	_tans^(0+256)
 10407                           
 10408                           ;main.c: 143: if(tans==1)
 10409  00C4  0857               	movf	_tans^(0+256),w
 10410  00C5  3A01               	xorlw	1
 10411  00C6  1D03               	skipz
 10412  00C7  28E0               	goto	i1l5013
 10413                           
 10414                           ;main.c: 144: {
 10415                           ;main.c: 145: TORCH=(torchstatus2 == 0 ? 'P':'X');
 10416  00C8  0859               	movf	_torchstatus2^(0+256),w
 10417  00C9  1903               	btfsc	3,2
 10418  00CA  28CD               	goto	i1l5009
 10419  00CB  3058               	movlw	88
 10420  00CC  28CE               	goto	L20
 10421  00CD                     i1l5009:	
 10422  00CD  3050               	movlw	80
 10423  00CE                     L20:	
 10424  00CE  00FC               	movwf	_ISR_Function$1180
 10425  00CF  3000               	movlw	0
 10426  00D0  00FD               	movwf	_ISR_Function$1180+1
 10427  00D1  087C               	movf	_ISR_Function$1180,w
 10428  00D2  0020               	movlb	0	; select bank0
 10429  00D3  00CB               	movwf	??_ISR_Function
 10430  00D4  084B               	movf	??_ISR_Function,w
 10431  00D5  0022               	movlb	2	; select bank2
 10432  00D6  00EC               	movwf	_TORCH^(0+256)
 10433                           
 10434                           ;main.c: 146: if(TORCH=='P')
 10435  00D7  086C               	movf	_TORCH^(0+256),w
 10436  00D8  3A50               	xorlw	80
 10437  00D9  1D03               	skipz
 10438  00DA  28DE               	goto	i1l574
 10439                           
 10440                           ;main.c: 147: {
 10441                           ;main.c: 148: wfstatusu.wfstatuss.torchonstatus=1;
 10442  00DB  0020               	movlb	0	; select bank0
 10443  00DC  14EE               	bsf	_wfstatusu,1
 10444                           
 10445                           ;main.c: 149: }
 10446  00DD  28E0               	goto	i1l5013
 10447  00DE                     i1l574:	
 10448                           
 10449                           ;main.c: 150: else
 10450                           ;main.c: 151: {
 10451                           ;main.c: 152: wfstatusu.wfstatuss.torchonstatus=0;
 10452  00DE  0020               	movlb	0	; select bank0
 10453  00DF  10EE               	bcf	_wfstatusu,1
 10454  00E0                     i1l5013:	
 10455                           
 10456                           ;main.c: 153: }
 10457                           ;main.c: 154: }
 10458                           ;main.c: 155: if(prevTORCH != TORCH)
 10459  00E0  0022               	movlb	2	; select bank2
 10460  00E1  086D               	movf	_prevTORCH^(0+256),w
 10461  00E2  066C               	xorwf	_TORCH^(0+256),w
 10462  00E3  1903               	skipnz
 10463  00E4  28E8               	goto	i1l5017
 10464                           
 10465                           ;main.c: 156: {
 10466                           ;main.c: 157: count_1ms=0;
 10467  00E5  0023               	movlb	3	; select bank3
 10468  00E6  01B6               	clrf	_count_1ms^(0+384)	;volatile
 10469  00E7  01B7               	clrf	(_count_1ms+1)^(0+384)	;volatile
 10470  00E8                     i1l5017:	
 10471                           
 10472                           ;main.c: 160: }
 10473                           ;main.c: 161: prevTORCH = TORCH;
 10474  00E8  0022               	movlb	2	; select bank2
 10475  00E9  086C               	movf	_TORCH^(0+256),w
 10476  00EA  0020               	movlb	0	; select bank0
 10477  00EB  00CB               	movwf	??_ISR_Function
 10478  00EC  084B               	movf	??_ISR_Function,w
 10479  00ED  0022               	movlb	2	; select bank2
 10480  00EE  00ED               	movwf	_prevTORCH^(0+256)
 10481  00EF                     i1l5019:	
 10482                           
 10483                           ;main.c: 162: }
 10484                           ;main.c: 163: }
 10485                           ;main.c: 164: }
 10486                           ;main.c: 166: if(PIE1bits.TMR2IE & PIR1bits.TMR2IF)
 10487  00EF  0020               	movlb	0	; select bank0
 10488  00F0  0C11               	rrf	17,w	;volatile
 10489  00F1  3901               	andlw	1
 10490  00F2  00CB               	movwf	??_ISR_Function
 10491  00F3  0021               	movlb	1	; select bank1
 10492  00F4  0C11               	rrf	17,w	;volatile
 10493  00F5  3901               	andlw	1
 10494  00F6  0020               	movlb	0	; select bank0
 10495  00F7  054B               	andwf	??_ISR_Function,w
 10496  00F8  1903               	btfsc	3,2
 10497  00F9  28FC               	goto	i1l5023
 10498                           
 10499                           ;main.c: 167: {
 10500                           ;main.c: 168: PIR1bits.TMR2IF=0;
 10501  00FA  1091               	bcf	17,1	;volatile
 10502                           
 10503                           ;main.c: 169: return;
 10504  00FB  2CE7               	goto	i1l578
 10505  00FC                     i1l5023:	
 10506                           
 10507                           ;main.c: 170: }
 10508                           ;main.c: 171: if(PIE1bits.TXIE & PIR1bits.TXIF)
 10509  00FC  0E11               	swapf	17,w	;volatile
 10510  00FD  3901               	andlw	1
 10511  00FE  00CB               	movwf	??_ISR_Function
 10512  00FF  0021               	movlb	1	; select bank1
 10513  0100  0E11               	swapf	17,w	;volatile
 10514  0101  3901               	andlw	1
 10515  0102  0020               	movlb	0	; select bank0
 10516  0103  054B               	andwf	??_ISR_Function,w
 10517  0104  1903               	btfsc	3,2
 10518  0105  2908               	goto	i1l5027
 10519                           
 10520                           ;main.c: 172: {
 10521                           ;main.c: 173: PIR1bits.TXIF=0;
 10522  0106  1211               	bcf	17,4	;volatile
 10523                           
 10524                           ;main.c: 174: return;
 10525  0107  2CE7               	goto	i1l578
 10526  0108                     i1l5027:	
 10527                           
 10528                           ;main.c: 175: }
 10529                           ;main.c: 177: if(PIE2bits.CCP2IE & PIR2bits.CCP2IF)
 10530  0108  0812               	movf	18,w	;volatile
 10531  0109  3901               	andlw	1
 10532  010A  00CB               	movwf	??_ISR_Function
 10533  010B  0021               	movlb	1	; select bank1
 10534  010C  0812               	movf	18,w	;volatile
 10535  010D  3901               	andlw	1
 10536  010E  0020               	movlb	0	; select bank0
 10537  010F  054B               	andwf	??_ISR_Function,w
 10538  0110  1903               	btfsc	3,2
 10539  0111  2AD3               	goto	i1l5109
 10540                           
 10541                           ;main.c: 178: {
 10542                           ;main.c: 179: PIR2bits.CCP2IF =0;
 10543  0112  1012               	bcf	18,0	;volatile
 10544                           
 10545                           ;main.c: 180: if(Count == 0)
 10546  0113  0022               	movlb	2	; select bank2
 10547  0114  08AC               	movf	_Count^(0+256),f	;volatile
 10548  0115  1D03               	skipz
 10549  0116  292C               	goto	i1l5035
 10550                           
 10551                           ;main.c: 181: {
 10552                           ;main.c: 182: OneH = CCPR2H;
 10553  0117  0025               	movlb	5	; select bank5
 10554  0118  0819               	movf	25,w	;volatile
 10555  0119  0020               	movlb	0	; select bank0
 10556  011A  00CB               	movwf	??_ISR_Function
 10557  011B  084B               	movf	??_ISR_Function,w
 10558  011C  0022               	movlb	2	; select bank2
 10559  011D  00AD               	movwf	_OneH^(0+256)	;volatile
 10560                           
 10561                           ;main.c: 183: OneL = CCPR2L;
 10562  011E  0025               	movlb	5	; select bank5
 10563  011F  0818               	movf	24,w	;volatile
 10564  0120  0020               	movlb	0	; select bank0
 10565  0121  00CB               	movwf	??_ISR_Function
 10566  0122  084B               	movf	??_ISR_Function,w
 10567  0123  0022               	movlb	2	; select bank2
 10568  0124  00AE               	movwf	_OneL^(0+256)	;volatile
 10569                           
 10570                           ;main.c: 184: Count = 1;
 10571  0125  3001               	movlw	1
 10572  0126  0020               	movlb	0	; select bank0
 10573  0127  00CB               	movwf	??_ISR_Function
 10574  0128  084B               	movf	??_ISR_Function,w
 10575  0129  0022               	movlb	2	; select bank2
 10576  012A  00AC               	movwf	_Count^(0+256)	;volatile
 10577                           
 10578                           ;main.c: 185: }
 10579  012B  2AD3               	goto	i1l5109
 10580  012C                     i1l5035:	
 10581                           
 10582                           ;main.c: 186: else
 10583                           ;main.c: 187: {
 10584                           ;main.c: 188: TwoH = CCPR2H;
 10585  012C  0025               	movlb	5	; select bank5
 10586  012D  0819               	movf	25,w	;volatile
 10587  012E  0020               	movlb	0	; select bank0
 10588  012F  00CB               	movwf	??_ISR_Function
 10589  0130  084B               	movf	??_ISR_Function,w
 10590  0131  0022               	movlb	2	; select bank2
 10591  0132  00AF               	movwf	_TwoH^(0+256)	;volatile
 10592                           
 10593                           ;main.c: 189: TwoL = CCPR2L;
 10594  0133  0025               	movlb	5	; select bank5
 10595  0134  0818               	movf	24,w	;volatile
 10596  0135  0020               	movlb	0	; select bank0
 10597  0136  00CB               	movwf	??_ISR_Function
 10598  0137  084B               	movf	??_ISR_Function,w
 10599  0138  0022               	movlb	2	; select bank2
 10600  0139  00B0               	movwf	_TwoL^(0+256)	;volatile
 10601                           
 10602                           ;main.c: 190: TMR1H = 0x00;
 10603  013A  0020               	movlb	0	; select bank0
 10604  013B  0197               	clrf	23	;volatile
 10605                           
 10606                           ;main.c: 191: TMR1L = 0x00;
 10607  013C  0196               	clrf	22	;volatile
 10608                           
 10609                           ;main.c: 192: Count = 0;
 10610  013D  0022               	movlb	2	; select bank2
 10611  013E  01AC               	clrf	_Count^(0+256)	;volatile
 10612                           
 10613                           ;main.c: 193: Two = TwoH;
 10614  013F  082F               	movf	_TwoH^(0+256),w	;volatile
 10615  0140  0020               	movlb	0	; select bank0
 10616  0141  00CB               	movwf	??_ISR_Function
 10617  0142  01CC               	clrf	??_ISR_Function+1
 10618  0143  084B               	movf	??_ISR_Function,w
 10619  0144  0023               	movlb	3	; select bank3
 10620  0145  00B4               	movwf	_Two^(0+384)	;volatile
 10621  0146  0020               	movlb	0	; select bank0
 10622  0147  084C               	movf	??_ISR_Function+1,w
 10623  0148  0023               	movlb	3	; select bank3
 10624  0149  00B5               	movwf	(_Two+1)^(0+384)	;volatile
 10625                           
 10626                           ;main.c: 194: Two <<= 8;
 10627  014A  3008               	movlw	8
 10628  014B                     u702_25:	
 10629  014B  35B4               	lslf	_Two^(0+384),f	;volatile
 10630  014C  0DB5               	rlf	(_Two+1)^(0+384),f	;volatile
 10631  014D  0B89               	decfsz	9,f
 10632  014E  294B               	goto	u702_25
 10633                           
 10634                           ;main.c: 195: Two |= TwoL;
 10635  014F  0022               	movlb	2	; select bank2
 10636  0150  0830               	movf	_TwoL^(0+256),w	;volatile
 10637  0151  0020               	movlb	0	; select bank0
 10638  0152  00CB               	movwf	??_ISR_Function
 10639  0153  01CC               	clrf	??_ISR_Function+1
 10640  0154  084B               	movf	??_ISR_Function,w
 10641  0155  0023               	movlb	3	; select bank3
 10642  0156  04B4               	iorwf	_Two^(0+384),f	;volatile
 10643  0157  0020               	movlb	0	; select bank0
 10644  0158  084C               	movf	??_ISR_Function+1,w
 10645  0159  0023               	movlb	3	; select bank3
 10646  015A  04B5               	iorwf	(_Two+1)^(0+384),f	;volatile
 10647                           
 10648                           ;main.c: 196: One = OneH;
 10649  015B  0022               	movlb	2	; select bank2
 10650  015C  082D               	movf	_OneH^(0+256),w	;volatile
 10651  015D  0020               	movlb	0	; select bank0
 10652  015E  00CB               	movwf	??_ISR_Function
 10653  015F  01CC               	clrf	??_ISR_Function+1
 10654  0160  084B               	movf	??_ISR_Function,w
 10655  0161  0023               	movlb	3	; select bank3
 10656  0162  00B0               	movwf	_One^(0+384)	;volatile
 10657  0163  0020               	movlb	0	; select bank0
 10658  0164  084C               	movf	??_ISR_Function+1,w
 10659  0165  0023               	movlb	3	; select bank3
 10660  0166  00B1               	movwf	(_One+1)^(0+384)	;volatile
 10661                           
 10662                           ;main.c: 197: One <<= 8;
 10663  0167  3008               	movlw	8
 10664  0168                     u703_25:	
 10665  0168  35B0               	lslf	_One^(0+384),f	;volatile
 10666  0169  0DB1               	rlf	(_One+1)^(0+384),f	;volatile
 10667  016A  0B89               	decfsz	9,f
 10668  016B  2968               	goto	u703_25
 10669                           
 10670                           ;main.c: 198: One |= OneL;
 10671  016C  0022               	movlb	2	; select bank2
 10672  016D  082E               	movf	_OneL^(0+256),w	;volatile
 10673  016E  0020               	movlb	0	; select bank0
 10674  016F  00CB               	movwf	??_ISR_Function
 10675  0170  01CC               	clrf	??_ISR_Function+1
 10676  0171  084B               	movf	??_ISR_Function,w
 10677  0172  0023               	movlb	3	; select bank3
 10678  0173  04B0               	iorwf	_One^(0+384),f	;volatile
 10679  0174  0020               	movlb	0	; select bank0
 10680  0175  084C               	movf	??_ISR_Function+1,w
 10681  0176  0023               	movlb	3	; select bank3
 10682  0177  04B1               	iorwf	(_One+1)^(0+384),f	;volatile
 10683                           
 10684                           ;main.c: 199: Total_Count = Two - One;
 10685  0178  0930               	comf	_One^(0+384),w	;volatile
 10686  0179  0020               	movlb	0	; select bank0
 10687  017A  00CB               	movwf	??_ISR_Function
 10688  017B  0023               	movlb	3	; select bank3
 10689  017C  0931               	comf	(_One+1)^(0+384),w	;volatile
 10690  017D  0020               	movlb	0	; select bank0
 10691  017E  00CC               	movwf	??_ISR_Function+1
 10692  017F  0ACB               	incf	??_ISR_Function,f
 10693  0180  1903               	skipnz
 10694  0181  0ACC               	incf	??_ISR_Function+1,f
 10695  0182  0023               	movlb	3	; select bank3
 10696  0183  0834               	movf	_Two^(0+384),w	;volatile
 10697  0184  0020               	movlb	0	; select bank0
 10698  0185  074B               	addwf	??_ISR_Function,w
 10699  0186  0023               	movlb	3	; select bank3
 10700  0187  00B2               	movwf	_Total_Count^(0+384)	;volatile
 10701  0188  0835               	movf	(_Two+1)^(0+384),w	;volatile
 10702  0189  0020               	movlb	0	; select bank0
 10703  018A  3D4C               	addwfc	??_ISR_Function+1,w
 10704  018B  0023               	movlb	3	; select bank3
 10705  018C  00B3               	movwf	(_Total_Count+1)^(0+384)	;volatile
 10706                           
 10707                           ;main.c: 201: pperiod=Total_Count;
 10708  018D  0833               	movf	(_Total_Count+1)^(0+384),w	;volatile
 10709  018E  01C3               	clrf	(_pperiod+1)^(0+384)	;volatile
 10710  018F  07C3               	addwf	(_pperiod+1)^(0+384),f	;volatile
 10711  0190  0832               	movf	_Total_Count^(0+384),w	;volatile
 10712  0191  01C2               	clrf	_pperiod^(0+384)	;volatile
 10713  0192  07C2               	addwf	_pperiod^(0+384),f	;volatile
 10714                           
 10715                           ;main.c: 202: Total_Period=Total_Period+pperiod;
 10716  0193  0024               	movlb	4	; select bank4
 10717  0194  0820               	movf	_Total_Period^(0+512),w
 10718  0195  0020               	movlb	0	; select bank0
 10719  0196  00CB               	movwf	??_ISR_Function
 10720  0197  0024               	movlb	4	; select bank4
 10721  0198  0821               	movf	(_Total_Period+1)^(0+512),w
 10722  0199  0020               	movlb	0	; select bank0
 10723  019A  00CC               	movwf	??_ISR_Function+1
 10724  019B  0024               	movlb	4	; select bank4
 10725  019C  0822               	movf	(_Total_Period+2)^(0+512),w
 10726  019D  0020               	movlb	0	; select bank0
 10727  019E  00CD               	movwf	??_ISR_Function+2
 10728  019F  0024               	movlb	4	; select bank4
 10729  01A0  0823               	movf	(_Total_Period+3)^(0+512),w
 10730  01A1  0020               	movlb	0	; select bank0
 10731  01A2  00CE               	movwf	??_ISR_Function+3
 10732  01A3  0023               	movlb	3	; select bank3
 10733  01A4  0842               	movf	_pperiod^(0+384),w	;volatile
 10734  01A5  0020               	movlb	0	; select bank0
 10735  01A6  00CF               	movwf	??_ISR_Function+4
 10736  01A7  0023               	movlb	3	; select bank3
 10737  01A8  0843               	movf	(_pperiod+1)^(0+384),w	;volatile
 10738  01A9  0020               	movlb	0	; select bank0
 10739  01AA  00D0               	movwf	??_ISR_Function+5
 10740  01AB  01D1               	clrf	??_ISR_Function+6
 10741  01AC  01D2               	clrf	??_ISR_Function+7
 10742  01AD  084F               	movf	??_ISR_Function+4,w
 10743  01AE  07CB               	addwf	??_ISR_Function,f
 10744  01AF  0850               	movf	??_ISR_Function+5,w
 10745  01B0  3DCC               	addwfc	??_ISR_Function+1,f
 10746  01B1  0851               	movf	??_ISR_Function+6,w
 10747  01B2  3DCD               	addwfc	??_ISR_Function+2,f
 10748  01B3  0852               	movf	??_ISR_Function+7,w
 10749  01B4  3DCE               	addwfc	??_ISR_Function+3,f
 10750  01B5  084E               	movf	??_ISR_Function+3,w
 10751  01B6  0024               	movlb	4	; select bank4
 10752  01B7  00A3               	movwf	(_Total_Period+3)^(0+512)
 10753  01B8  0020               	movlb	0	; select bank0
 10754  01B9  084D               	movf	??_ISR_Function+2,w
 10755  01BA  0024               	movlb	4	; select bank4
 10756  01BB  00A2               	movwf	(_Total_Period+2)^(0+512)
 10757  01BC  0020               	movlb	0	; select bank0
 10758  01BD  084C               	movf	??_ISR_Function+1,w
 10759  01BE  0024               	movlb	4	; select bank4
 10760  01BF  00A1               	movwf	(_Total_Period+1)^(0+512)
 10761  01C0  0020               	movlb	0	; select bank0
 10762  01C1  084B               	movf	??_ISR_Function,w
 10763  01C2  0024               	movlb	4	; select bank4
 10764  01C3  00A0               	movwf	_Total_Period^(0+512)
 10765                           
 10766                           ;main.c: 203: pcount++;
 10767  01C4  3001               	movlw	1
 10768  01C5  0020               	movlb	0	; select bank0
 10769  01C6  00CB               	movwf	??_ISR_Function
 10770  01C7  084B               	movf	??_ISR_Function,w
 10771  01C8  0022               	movlb	2	; select bank2
 10772  01C9  07CA               	addwf	_pcount^(0+256),f
 10773                           
 10774                           ;main.c: 204: if(pcount>=8)
 10775  01CA  3008               	movlw	8
 10776  01CB  024A               	subwf	_pcount^(0+256),w
 10777  01CC  1C03               	skipc
 10778  01CD  2AD3               	goto	i1l5109
 10779                           
 10780                           ;main.c: 205: {
 10781                           ;main.c: 206: pcount=0;
 10782  01CE  01CA               	clrf	_pcount^(0+256)
 10783                           
 10784                           ;main.c: 207: avgpperiod=Total_Period>>4;
 10785  01CF  0024               	movlb	4	; select bank4
 10786  01D0  0820               	movf	_Total_Period^(0+512),w
 10787  01D1  0020               	movlb	0	; select bank0
 10788  01D2  00CB               	movwf	??_ISR_Function
 10789  01D3  0024               	movlb	4	; select bank4
 10790  01D4  0821               	movf	(_Total_Period+1)^(0+512),w
 10791  01D5  0020               	movlb	0	; select bank0
 10792  01D6  00CC               	movwf	??_ISR_Function+1
 10793  01D7  0024               	movlb	4	; select bank4
 10794  01D8  0822               	movf	(_Total_Period+2)^(0+512),w
 10795  01D9  0020               	movlb	0	; select bank0
 10796  01DA  00CD               	movwf	??_ISR_Function+2
 10797  01DB  0024               	movlb	4	; select bank4
 10798  01DC  0823               	movf	(_Total_Period+3)^(0+512),w
 10799  01DD  0020               	movlb	0	; select bank0
 10800  01DE  00CE               	movwf	??_ISR_Function+3
 10801  01DF  3004               	movlw	4
 10802  01E0                     u705_25:	
 10803  01E0  36CE               	lsrf	??_ISR_Function+3,f
 10804  01E1  0CCD               	rrf	??_ISR_Function+2,f
 10805  01E2  0CCC               	rrf	??_ISR_Function+1,f
 10806  01E3  0CCB               	rrf	??_ISR_Function,f
 10807  01E4  0B89               	decfsz	9,f
 10808  01E5  29E0               	goto	u705_25
 10809  01E6  084C               	movf	??_ISR_Function+1,w
 10810  01E7  0022               	movlb	2	; select bank2
 10811  01E8  01DE               	clrf	(_avgpperiod+1)^(0+256)	;volatile
 10812  01E9  07DE               	addwf	(_avgpperiod+1)^(0+256),f	;volatile
 10813  01EA  0020               	movlb	0	; select bank0
 10814  01EB  084B               	movf	??_ISR_Function,w
 10815  01EC  0022               	movlb	2	; select bank2
 10816  01ED  01DD               	clrf	_avgpperiod^(0+256)	;volatile
 10817  01EE  07DD               	addwf	_avgpperiod^(0+256),f	;volatile
 10818                           
 10819                           ;main.c: 208: pfreq=1000000/avgpperiod;
 10820  01EF  085D               	movf	_avgpperiod^(0+256),w	;volatile
 10821  01F0  00F0               	movwf	i1___aldiv@divisor
 10822  01F1  085E               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 10823  01F2  00F1               	movwf	i1___aldiv@divisor+1
 10824  01F3  01F2               	clrf	i1___aldiv@divisor+2
 10825  01F4  01F3               	clrf	i1___aldiv@divisor+3
 10826  01F5  3000               	movlw	0
 10827  01F6  00F7               	movwf	i1___aldiv@dividend+3
 10828  01F7  300F               	movlw	15
 10829  01F8  00F6               	movwf	i1___aldiv@dividend+2
 10830  01F9  3042               	movlw	66
 10831  01FA  00F5               	movwf	i1___aldiv@dividend+1
 10832  01FB  3040               	movlw	64
 10833  01FC  00F4               	movwf	i1___aldiv@dividend
 10834  01FD  319D  25EE  3180   	fcall	i1___aldiv
 10835  0200  0871               	movf	?i1___aldiv+1,w
 10836  0201  0022               	movlb	2	; select bank2
 10837  0202  01E2               	clrf	(_pfreq+1)^(0+256)	;volatile
 10838  0203  07E2               	addwf	(_pfreq+1)^(0+256),f	;volatile
 10839  0204  0870               	movf	?i1___aldiv,w
 10840  0205  01E1               	clrf	_pfreq^(0+256)	;volatile
 10841  0206  07E1               	addwf	_pfreq^(0+256),f	;volatile
 10842                           
 10843                           ;main.c: 209: Total_Period=0;
 10844  0207  3000               	movlw	0
 10845  0208  0024               	movlb	4	; select bank4
 10846  0209  00A3               	movwf	(_Total_Period+3)^(0+512)
 10847  020A  3000               	movlw	0
 10848  020B  00A2               	movwf	(_Total_Period+2)^(0+512)
 10849  020C  3000               	movlw	0
 10850  020D  00A1               	movwf	(_Total_Period+1)^(0+512)
 10851  020E  3000               	movlw	0
 10852  020F  00A0               	movwf	_Total_Period^(0+512)
 10853                           
 10854                           ;main.c: 211: Tsampling =avgpperiod/1000.0;
 10855  0210  3000               	movlw	0
 10856  0211  0020               	movlb	0	; select bank0
 10857  0212  00A0               	movwf	i1___ftdiv@f2
 10858  0213  307A               	movlw	122
 10859  0214  00A1               	movwf	i1___ftdiv@f2+1
 10860  0215  3044               	movlw	68
 10861  0216  00A2               	movwf	i1___ftdiv@f2+2
 10862  0217  0022               	movlb	2	; select bank2
 10863  0218  085E               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 10864  0219  01F9               	clrf	i1___lwtoft@c+1
 10865  021A  07F9               	addwf	i1___lwtoft@c+1,f
 10866  021B  085D               	movf	_avgpperiod^(0+256),w	;volatile
 10867  021C  01F8               	clrf	i1___lwtoft@c
 10868  021D  07F8               	addwf	i1___lwtoft@c,f
 10869  021E  3198  20FE  3180   	fcall	i1___lwtoft
 10870  0221  0878               	movf	?i1___lwtoft,w
 10871  0222  0020               	movlb	0	; select bank0
 10872  0223  00A3               	movwf	i1___ftdiv@f1
 10873  0224  0879               	movf	?i1___lwtoft+1,w
 10874  0225  00A4               	movwf	i1___ftdiv@f1+1
 10875  0226  087A               	movf	?i1___lwtoft+2,w
 10876  0227  00A5               	movwf	i1___ftdiv@f1+2
 10877  0228  3190  2019  3180   	fcall	i1___ftdiv
 10878  022B  0020               	movlb	0	; select bank0
 10879  022C  0820               	movf	?i1___ftdiv,w
 10880  022D  0023               	movlb	3	; select bank3
 10881  022E  00E0               	movwf	_Tsampling^(0+384)
 10882  022F  0020               	movlb	0	; select bank0
 10883  0230  0821               	movf	?i1___ftdiv+1,w
 10884  0231  0023               	movlb	3	; select bank3
 10885  0232  00E1               	movwf	(_Tsampling+1)^(0+384)
 10886  0233  0020               	movlb	0	; select bank0
 10887  0234  0822               	movf	?i1___ftdiv+2,w
 10888  0235  0023               	movlb	3	; select bank3
 10889  0236  00E2               	movwf	(_Tsampling+2)^(0+384)
 10890                           
 10891                           ;main.c: 213: if(pfreq>=999)
 10892  0237  3003               	movlw	3
 10893  0238  0022               	movlb	2	; select bank2
 10894  0239  0262               	subwf	(_pfreq+1)^(0+256),w	;volatile
 10895  023A  30E7               	movlw	231
 10896  023B  1903               	skipnz
 10897  023C  0261               	subwf	_pfreq^(0+256),w	;volatile
 10898  023D  1C03               	skipc
 10899  023E  2A44               	goto	i1l5079
 10900                           
 10901                           ;main.c: 214: pfreq=999;
 10902  023F  30E7               	movlw	231
 10903  0240  00E1               	movwf	_pfreq^(0+256)	;volatile
 10904  0241  3003               	movlw	3
 10905  0242  00E2               	movwf	(_pfreq^(0+256)+1)	;volatile
 10906  0243  2A4A               	goto	i1l5083
 10907  0244                     i1l5079:	
 10908                           
 10909                           ;main.c: 215: else if(pfreq<=0)
 10910  0244  0862               	movf	(_pfreq+1)^(0+256),w	;volatile
 10911  0245  0461               	iorwf	_pfreq^(0+256),w	;volatile
 10912  0246  1D03               	skipz
 10913  0247  2A4A               	goto	i1l5083
 10914                           
 10915                           ;main.c: 216: pfreq=0;
 10916  0248  01E1               	clrf	_pfreq^(0+256)	;volatile
 10917  0249  01E2               	clrf	(_pfreq+1)^(0+256)	;volatile
 10918  024A                     i1l5083:	
 10919                           
 10920                           ;main.c: 218: Fltpfreq=(0.2*pfreq)+(0.8)*prevFltpfreq;
 10921  024A  0862               	movf	(_pfreq+1)^(0+256),w	;volatile
 10922  024B  01F9               	clrf	i1___lwtoft@c+1
 10923  024C  07F9               	addwf	i1___lwtoft@c+1,f
 10924  024D  0861               	movf	_pfreq^(0+256),w	;volatile
 10925  024E  01F8               	clrf	i1___lwtoft@c
 10926  024F  07F8               	addwf	i1___lwtoft@c,f
 10927  0250  3198  20FE  3180   	fcall	i1___lwtoft
 10928  0253  0878               	movf	?i1___lwtoft,w
 10929  0254  0020               	movlb	0	; select bank0
 10930  0255  00A3               	movwf	i1___ftmul@f2
 10931  0256  0879               	movf	?i1___lwtoft+1,w
 10932  0257  00A4               	movwf	i1___ftmul@f2+1
 10933  0258  087A               	movf	?i1___lwtoft+2,w
 10934  0259  00A5               	movwf	i1___ftmul@f2+2
 10935  025A  30CD               	movlw	205
 10936  025B  00A0               	movwf	i1___ftmul@f1
 10937  025C  304C               	movlw	76
 10938  025D  00A1               	movwf	i1___ftmul@f1+1
 10939  025E  303E               	movlw	62
 10940  025F  00A2               	movwf	i1___ftmul@f1+2
 10941  0260  3192  2215  3180   	fcall	i1___ftmul
 10942  0263  0020               	movlb	0	; select bank0
 10943  0264  0820               	movf	?i1___ftmul,w
 10944  0265  00B3               	movwf	i1___ftadd@f2
 10945  0266  0821               	movf	?i1___ftmul+1,w
 10946  0267  00B4               	movwf	i1___ftadd@f2+1
 10947  0268  0822               	movf	?i1___ftmul+2,w
 10948  0269  00B5               	movwf	i1___ftadd@f2+2
 10949  026A  0024               	movlb	4	; select bank4
 10950  026B  0843               	movf	(_prevFltpfreq+1)^(0+512),w
 10951  026C  01F9               	clrf	i1___lwtoft@c+1
 10952  026D  07F9               	addwf	i1___lwtoft@c+1,f
 10953  026E  0842               	movf	_prevFltpfreq^(0+512),w
 10954  026F  01F8               	clrf	i1___lwtoft@c
 10955  0270  07F8               	addwf	i1___lwtoft@c,f
 10956  0271  3198  20FE  3180   	fcall	i1___lwtoft
 10957  0274  0878               	movf	?i1___lwtoft,w
 10958  0275  0020               	movlb	0	; select bank0
 10959  0276  00A3               	movwf	i1___ftmul@f2
 10960  0277  0879               	movf	?i1___lwtoft+1,w
 10961  0278  00A4               	movwf	i1___ftmul@f2+1
 10962  0279  087A               	movf	?i1___lwtoft+2,w
 10963  027A  00A5               	movwf	i1___ftmul@f2+2
 10964  027B  30CD               	movlw	205
 10965  027C  00A0               	movwf	i1___ftmul@f1
 10966  027D  304C               	movlw	76
 10967  027E  00A1               	movwf	i1___ftmul@f1+1
 10968  027F  303F               	movlw	63
 10969  0280  00A2               	movwf	i1___ftmul@f1+2
 10970  0281  3192  2215  3180   	fcall	i1___ftmul
 10971  0284  0020               	movlb	0	; select bank0
 10972  0285  0820               	movf	?i1___ftmul,w
 10973  0286  00B0               	movwf	i1___ftadd@f1
 10974  0287  0821               	movf	?i1___ftmul+1,w
 10975  0288  00B1               	movwf	i1___ftadd@f1+1
 10976  0289  0822               	movf	?i1___ftmul+2,w
 10977  028A  00B2               	movwf	i1___ftadd@f1+2
 10978  028B  3193  237D  3180   	fcall	i1___ftadd
 10979  028E  0020               	movlb	0	; select bank0
 10980  028F  0830               	movf	?i1___ftadd,w
 10981  0290  00BD               	movwf	i1___fttol@f1
 10982  0291  0831               	movf	?i1___ftadd+1,w
 10983  0292  00BE               	movwf	i1___fttol@f1+1
 10984  0293  0832               	movf	?i1___ftadd+2,w
 10985  0294  00BF               	movwf	i1___fttol@f1+2
 10986  0295  319E  26F2  3180   	fcall	i1___fttol
 10987  0298  0020               	movlb	0	; select bank0
 10988  0299  083E               	movf	?i1___fttol+1,w
 10989  029A  0022               	movlb	2	; select bank2
 10990  029B  01A1               	clrf	(_Fltpfreq+1)^(0+256)
 10991  029C  07A1               	addwf	(_Fltpfreq+1)^(0+256),f
 10992  029D  0020               	movlb	0	; select bank0
 10993  029E  083D               	movf	?i1___fttol,w
 10994  029F  0022               	movlb	2	; select bank2
 10995  02A0  01A0               	clrf	_Fltpfreq^(0+256)
 10996  02A1  07A0               	addwf	_Fltpfreq^(0+256),f
 10997                           
 10998                           ;main.c: 220: if(Fltpfreq>=999)
 10999  02A2  3003               	movlw	3
 11000  02A3  0221               	subwf	(_Fltpfreq+1)^(0+256),w
 11001  02A4  30E7               	movlw	231
 11002  02A5  1903               	skipnz
 11003  02A6  0220               	subwf	_Fltpfreq^(0+256),w
 11004  02A7  1C03               	skipc
 11005  02A8  2AAE               	goto	i1l5089
 11006                           
 11007                           ;main.c: 221: Fltpfreq=999;
 11008  02A9  30E7               	movlw	231
 11009  02AA  00A0               	movwf	_Fltpfreq^(0+256)
 11010  02AB  3003               	movlw	3
 11011  02AC  00A1               	movwf	(_Fltpfreq^(0+256)+1)
 11012  02AD  2AB4               	goto	i1l5093
 11013  02AE                     i1l5089:	
 11014                           
 11015                           ;main.c: 222: else if(Fltpfreq<=0)
 11016  02AE  0821               	movf	(_Fltpfreq+1)^(0+256),w
 11017  02AF  0420               	iorwf	_Fltpfreq^(0+256),w
 11018  02B0  1D03               	skipz
 11019  02B1  2AB4               	goto	i1l5093
 11020                           
 11021                           ;main.c: 223: Fltpfreq=0;
 11022  02B2  01A0               	clrf	_Fltpfreq^(0+256)
 11023  02B3  01A1               	clrf	(_Fltpfreq+1)^(0+256)
 11024  02B4                     i1l5093:	
 11025                           
 11026                           ;main.c: 225: prevFltpfreq=Fltpfreq;
 11027  02B4  0821               	movf	(_Fltpfreq+1)^(0+256),w
 11028  02B5  0024               	movlb	4	; select bank4
 11029  02B6  01C3               	clrf	(_prevFltpfreq+1)^(0+512)
 11030  02B7  07C3               	addwf	(_prevFltpfreq+1)^(0+512),f
 11031  02B8  0022               	movlb	2	; select bank2
 11032  02B9  0820               	movf	_Fltpfreq^(0+256),w
 11033  02BA  0024               	movlb	4	; select bank4
 11034  02BB  01C2               	clrf	_prevFltpfreq^(0+512)
 11035  02BC  07C2               	addwf	_prevFltpfreq^(0+512),f
 11036                           
 11037                           ;main.c: 226: capintervalf=1;
 11038  02BD  3001               	movlw	1
 11039  02BE  0020               	movlb	0	; select bank0
 11040  02BF  00CB               	movwf	??_ISR_Function
 11041  02C0  084B               	movf	??_ISR_Function,w
 11042  02C1  0023               	movlb	3	; select bank3
 11043  02C2  00D3               	movwf	_capintervalf^(0+384)	;volatile
 11044                           
 11045                           ;main.c: 227: fixintervalf=0;
 11046  02C3  01D9               	clrf	_fixintervalf^(0+384)	;volatile
 11047                           
 11048                           ;main.c: 228: count_pid=0;
 11049  02C4  01D5               	clrf	_count_pid^(0+384)	;volatile
 11050                           
 11051                           ;main.c: 231: if(cyclestrtf==1 && psstatusu.psstatuss.twinpulseon==0)
 11052  02C5  0022               	movlb	2	; select bank2
 11053  02C6  083C               	movf	_cyclestrtf^(0+256),w
 11054  02C7  3A01               	xorlw	1
 11055  02C8  1D03               	skipz
 11056  02C9  2AD1               	goto	i1l5107
 11057  02CA  0020               	movlb	0	; select bank0
 11058  02CB  1B6D               	btfsc	_psstatusu,6
 11059  02CC  2AD1               	goto	i1l5107
 11060                           
 11061                           ;main.c: 232: adaptivepidf=1;
 11062  02CD  0022               	movlb	2	; select bank2
 11063  02CE  01B1               	clrf	_adaptivepidf^(0+256)
 11064  02CF  0AB1               	incf	_adaptivepidf^(0+256),f
 11065  02D0  2AD3               	goto	i1l5109
 11066  02D1                     i1l5107:	
 11067                           
 11068                           ;main.c: 233: else
 11069                           ;main.c: 234: adaptivepidf=0;
 11070  02D1  0022               	movlb	2	; select bank2
 11071  02D2  01B1               	clrf	_adaptivepidf^(0+256)
 11072  02D3                     i1l5109:	
 11073                           
 11074                           ;main.c: 236: }
 11075                           ;main.c: 237: }
 11076                           ;main.c: 238: }
 11077                           ;main.c: 240: if(PIE1bits.RCIE & PIR1bits.RCIF)
 11078  02D3  0020               	movlb	0	; select bank0
 11079  02D4  0E11               	swapf	17,w	;volatile
 11080  02D5  0C89               	rrf	9,f
 11081  02D6  3901               	andlw	1
 11082  02D7  00CB               	movwf	??_ISR_Function
 11083  02D8  0021               	movlb	1	; select bank1
 11084  02D9  0E11               	swapf	17,w	;volatile
 11085  02DA  0C89               	rrf	9,f
 11086  02DB  3901               	andlw	1
 11087  02DC  0020               	movlb	0	; select bank0
 11088  02DD  054B               	andwf	??_ISR_Function,w
 11089  02DE  1903               	btfsc	3,2
 11090  02DF  2CE7               	goto	i1l578
 11091                           
 11092                           ;main.c: 241: {
 11093                           ;main.c: 242: PIR1bits.RCIF=0;
 11094  02E0  1291               	bcf	17,5	;volatile
 11095                           
 11096                           ;main.c: 243: rxdata= RCREG;
 11097  02E1  0023               	movlb	3	; select bank3
 11098  02E2  0819               	movf	25,w	;volatile
 11099  02E3  0020               	movlb	0	; select bank0
 11100  02E4  00CB               	movwf	??_ISR_Function
 11101  02E5  084B               	movf	??_ISR_Function,w
 11102  02E6  00E3               	movwf	_rxdata	;volatile
 11103                           
 11104                           ;main.c: 245: if(RCSTAbits.FERR)
 11105  02E7  0023               	movlb	3	; select bank3
 11106  02E8  1D1D               	btfss	29,2	;volatile
 11107  02E9  2AEC               	goto	i1l593
 11108                           
 11109                           ;main.c: 246: {
 11110                           ;main.c: 247: RCSTAbits.SPEN=0;
 11111  02EA  139D               	bcf	29,7	;volatile
 11112                           
 11113                           ;main.c: 248: RCSTAbits.SPEN=1;
 11114  02EB  179D               	bsf	29,7	;volatile
 11115  02EC                     i1l593:	
 11116                           
 11117                           ;main.c: 249: }
 11118                           ;main.c: 250: if(RCSTAbits.OERR)
 11119  02EC  1C9D               	btfss	29,1	;volatile
 11120  02ED  2AF2               	goto	i1l5121
 11121                           
 11122                           ;main.c: 251: {
 11123                           ;main.c: 252: RCSTAbits.CREN=0;
 11124  02EE  121D               	bcf	29,4	;volatile
 11125                           
 11126                           ;main.c: 253: RCSTAbits.CREN=1;
 11127  02EF  161D               	bsf	29,4	;volatile
 11128                           
 11129                           ;main.c: 254: RCSTAbits.SPEN=0;
 11130  02F0  139D               	bcf	29,7	;volatile
 11131                           
 11132                           ;main.c: 255: RCSTAbits.SPEN=1;
 11133  02F1  179D               	bsf	29,7	;volatile
 11134  02F2                     i1l5121:	
 11135                           
 11136                           ;main.c: 256: }
 11137                           ;main.c: 258: {
 11138                           ;main.c: 259: if(rxdata=='@' && startptr1==0 && statusptr1==0 )
 11139  02F2  0020               	movlb	0	; select bank0
 11140  02F3  0863               	movf	_rxdata,w	;volatile
 11141  02F4  3A40               	xorlw	64
 11142  02F5  1D03               	skipz
 11143  02F6  2B07               	goto	i1l5131
 11144  02F7  08E4               	movf	_startptr1,f
 11145  02F8  1D03               	skipz
 11146  02F9  2B07               	goto	i1l5131
 11147  02FA  0022               	movlb	2	; select bank2
 11148  02FB  082B               	movf	(_statusptr1+1)^(0+256),w
 11149  02FC  042A               	iorwf	_statusptr1^(0+256),w
 11150  02FD  1D03               	skipz
 11151  02FE  2B07               	goto	i1l5131
 11152                           
 11153                           ;main.c: 260: {
 11154                           ;main.c: 262: startptr1 =1;
 11155  02FF  0020               	movlb	0	; select bank0
 11156  0300  01E4               	clrf	_startptr1
 11157  0301  0AE4               	incf	_startptr1,f
 11158                           
 11159                           ;main.c: 263: arrptr =0;
 11160  0302  0022               	movlb	2	; select bank2
 11161  0303  01B2               	clrf	_arrptr^(0+256)
 11162                           
 11163                           ;main.c: 264: statusptr1 =0;
 11164  0304  01AA               	clrf	_statusptr1^(0+256)
 11165  0305  01AB               	clrf	(_statusptr1+1)^(0+256)
 11166  0306  2CE6               	goto	L22
 11167  0307                     i1l5131:	
 11168                           ;main.c: 266: }
 11169                           
 11170                           ;main.c: 265: recchksum =0;
 11171                           
 11172                           
 11173                           ;main.c: 267: else if(rxdata=='#' && startptr1==0 && statusptr1==0)
 11174  0307  0020               	movlb	0	; select bank0
 11175  0308  0863               	movf	_rxdata,w	;volatile
 11176  0309  3A23               	xorlw	35
 11177  030A  1D03               	skipz
 11178  030B  2B1C               	goto	i1l5145
 11179  030C  08E4               	movf	_startptr1,f
 11180  030D  1D03               	skipz
 11181  030E  2B1C               	goto	i1l5145
 11182  030F  0022               	movlb	2	; select bank2
 11183  0310  082B               	movf	(_statusptr1+1)^(0+256),w
 11184  0311  042A               	iorwf	_statusptr1^(0+256),w
 11185  0312  1D03               	skipz
 11186  0313  2B1C               	goto	i1l5145
 11187                           
 11188                           ;main.c: 268: {
 11189                           ;main.c: 270: startptr1 =0;
 11190  0314  0020               	movlb	0	; select bank0
 11191  0315  01E4               	clrf	_startptr1
 11192                           
 11193                           ;main.c: 271: statusptr1 =1;
 11194  0316  3001               	movlw	1
 11195  0317  0022               	movlb	2	; select bank2
 11196  0318  00AA               	movwf	_statusptr1^(0+256)
 11197  0319  3000               	movlw	0
 11198  031A  00AB               	movwf	(_statusptr1^(0+256)+1)
 11199  031B  2CE5               	goto	L24
 11200  031C                     i1l5145:	
 11201                           ;main.c: 274: }
 11202                           
 11203                           ;main.c: 273: recchksum =0;
 11204                           
 11205                           ;main.c: 272: arrptr =0;
 11206                           
 11207                           
 11208                           ;main.c: 275: else if(startptr1==0 && statusptr1==1)
 11209  031C  0020               	movlb	0	; select bank0
 11210  031D  08E4               	movf	_startptr1,f
 11211  031E  1D03               	skipz
 11212  031F  2B92               	goto	i1l5189
 11213  0320  3001               	movlw	1
 11214  0321  0022               	movlb	2	; select bank2
 11215  0322  062A               	xorwf	_statusptr1^(0+256),w
 11216  0323  042B               	iorwf	(_statusptr1+1)^(0+256),w
 11217  0324  1D03               	skipz
 11218  0325  2B92               	goto	i1l5189
 11219                           
 11220                           ;main.c: 276: {
 11221                           ;main.c: 277: if(recstatus==0)
 11222  0326  0023               	movlb	3	; select bank3
 11223  0327  084B               	movf	(_recstatus+1)^(0+384),w
 11224  0328  044A               	iorwf	_recstatus^(0+384),w
 11225  0329  1D03               	skipz
 11226  032A  2B3C               	goto	i1l5153
 11227                           
 11228                           ;main.c: 278: {
 11229                           ;main.c: 279: recpsstatus=rxdata;
 11230  032B  0020               	movlb	0	; select bank0
 11231  032C  0863               	movf	_rxdata,w	;volatile
 11232  032D  00CB               	movwf	??_ISR_Function
 11233  032E  01CC               	clrf	??_ISR_Function+1
 11234  032F  084B               	movf	??_ISR_Function,w
 11235  0330  0022               	movlb	2	; select bank2
 11236  0331  00A6               	movwf	_recpsstatus^(0+256)
 11237  0332  0020               	movlb	0	; select bank0
 11238  0333  084C               	movf	??_ISR_Function+1,w
 11239  0334  0022               	movlb	2	; select bank2
 11240  0335  00A7               	movwf	(_recpsstatus+1)^(0+256)
 11241                           
 11242                           ;main.c: 280: recstatus=1;
 11243  0336  3001               	movlw	1
 11244  0337  0023               	movlb	3	; select bank3
 11245  0338  00CA               	movwf	_recstatus^(0+384)
 11246  0339  3000               	movlw	0
 11247  033A  00CB               	movwf	(_recstatus^(0+384)+1)
 11248                           
 11249                           ;main.c: 281: }
 11250  033B  2CE7               	goto	i1l578
 11251  033C                     i1l5153:	
 11252                           
 11253                           ;main.c: 282: else if(recstatus==1)
 11254  033C  3001               	movlw	1
 11255  033D  064A               	xorwf	_recstatus^(0+384),w
 11256  033E  044B               	iorwf	(_recstatus+1)^(0+384),w
 11257  033F  1D03               	skipz
 11258  0340  2CE7               	goto	i1l578
 11259                           
 11260                           ;main.c: 283: {
 11261                           ;main.c: 284: if(rxdata==recpsstatus)
 11262  0341  0020               	movlb	0	; select bank0
 11263  0342  0863               	movf	_rxdata,w	;volatile
 11264  0343  00CB               	movwf	??_ISR_Function
 11265  0344  01CC               	clrf	??_ISR_Function+1
 11266  0345  0022               	movlb	2	; select bank2
 11267  0346  0827               	movf	(_recpsstatus+1)^(0+256),w
 11268  0347  0020               	movlb	0	; select bank0
 11269  0348  064C               	xorwf	??_ISR_Function+1,w
 11270  0349  1D03               	skipz
 11271  034A  2B4F               	goto	u725_25
 11272  034B  0022               	movlb	2	; select bank2
 11273  034C  0826               	movf	_recpsstatus^(0+256),w
 11274  034D  0020               	movlb	0	; select bank0
 11275  034E  064B               	xorwf	??_ISR_Function,w
 11276  034F                     u725_25:	
 11277  034F  1D03               	skipz
 11278  0350  2CDD               	goto	i1l5241
 11279                           
 11280                           ;main.c: 285: {
 11281                           ;main.c: 287: comm_error_count=0;
 11282  0351  0022               	movlb	2	; select bank2
 11283  0352  01B7               	clrf	_comm_error_count^(0+256)	;volatile
 11284                           
 11285                           ;main.c: 288: psstatusu.psstatusbyte[0]=recpsstatus;
 11286  0353  0826               	movf	_recpsstatus^(0+256),w
 11287  0354  0020               	movlb	0	; select bank0
 11288  0355  00CB               	movwf	??_ISR_Function
 11289  0356  084B               	movf	??_ISR_Function,w
 11290  0357  00ED               	movwf	_psstatusu
 11291                           
 11292                           ;main.c: 289: pstowfstru.pstowfstrs.psstatusbyte=recpsstatus;
 11293  0358  0022               	movlb	2	; select bank2
 11294  0359  0826               	movf	_recpsstatus^(0+256),w
 11295  035A  0020               	movlb	0	; select bank0
 11296  035B  00CB               	movwf	??_ISR_Function
 11297  035C  084B               	movf	??_ISR_Function,w
 11298  035D  0024               	movlb	4	; select bank4
 11299  035E  00D0               	movwf	(_pstowfstru^(0+512)+12)
 11300                           
 11301                           ;main.c: 291: if(psstatusu.psstatuss.motoroncommand==1 && psstatusu.psstatuss.twinpulseo
      +                          n==1 )
 11302  035F  0020               	movlb	0	; select bank0
 11303  0360  19ED               	btfsc	_psstatusu,3
 11304  0361  1F6D               	btfss	_psstatusu,6
 11305  0362  2B85               	goto	i1l5175
 11306                           
 11307                           ;main.c: 292: {
 11308                           ;main.c: 293: if(psstatusu.psstatuss.Hi_speedon==1)
 11309  0363  1FED               	btfss	_psstatusu,7
 11310  0364  2B73               	goto	i1l605
 11311                           
 11312                           ;main.c: 294: {
 11313                           ;main.c: 295: TRISAbits.TRISA0=0;
 11314  0365  0021               	movlb	1	; select bank1
 11315  0366  100C               	bcf	12,0	;volatile
 11316                           
 11317                           ;main.c: 296: PORTAbits.RA0=1;
 11318  0367  0020               	movlb	0	; select bank0
 11319  0368  140C               	bsf	12,0	;volatile
 11320                           
 11321                           ;main.c: 297: TRISAbits.TRISA5=0;
 11322  0369  0021               	movlb	1	; select bank1
 11323  036A  128C               	bcf	12,5	;volatile
 11324                           
 11325                           ;main.c: 298: PORTAbits.RA5= 1;
 11326  036B  0020               	movlb	0	; select bank0
 11327  036C  168C               	bsf	12,5	;volatile
 11328                           
 11329                           ;main.c: 299: Update_PWM(Hi_setppwm);
 11330  036D  0023               	movlb	3	; select bank3
 11331  036E  082D               	movf	(_Hi_setppwm+1)^(0+384),w
 11332  036F  01F1               	clrf	i1Update_PWM@setwsduty+1
 11333  0370  07F1               	addwf	i1Update_PWM@setwsduty+1,f
 11334  0371  082C               	movf	_Hi_setppwm^(0+384),w
 11335  0372  2B80               	goto	L23
 11336  0373                     i1l605:	
 11337                           ;main.c: 300: }
 11338                           
 11339                           
 11340                           ;main.c: 301: else
 11341                           ;main.c: 302: {
 11342                           ;main.c: 303: TRISAbits.TRISA0=0;
 11343  0373  0021               	movlb	1	; select bank1
 11344  0374  100C               	bcf	12,0	;volatile
 11345                           
 11346                           ;main.c: 304: PORTAbits.RA0=0;
 11347  0375  0020               	movlb	0	; select bank0
 11348  0376  100C               	bcf	12,0	;volatile
 11349                           
 11350                           ;main.c: 305: TRISAbits.TRISA5=0;
 11351  0377  0021               	movlb	1	; select bank1
 11352  0378  128C               	bcf	12,5	;volatile
 11353                           
 11354                           ;main.c: 306: PORTAbits.RA5= 0;
 11355  0379  0020               	movlb	0	; select bank0
 11356  037A  128C               	bcf	12,5	;volatile
 11357                           
 11358                           ;main.c: 307: Update_PWM(Lo_setppwm);
 11359  037B  0023               	movlb	3	; select bank3
 11360  037C  082F               	movf	(_Lo_setppwm+1)^(0+384),w
 11361  037D  01F1               	clrf	i1Update_PWM@setwsduty+1
 11362  037E  07F1               	addwf	i1Update_PWM@setwsduty+1,f
 11363  037F  082E               	movf	_Lo_setppwm^(0+384),w
 11364  0380                     L23:	
 11365  0380  01F0               	clrf	i1Update_PWM@setwsduty
 11366  0381  07F0               	addwf	i1Update_PWM@setwsduty,f
 11367  0382  3199  2182  3180   	fcall	i1_Update_PWM
 11368  0385                     i1l5175:	
 11369                           
 11370                           ;main.c: 308: }
 11371                           ;main.c: 309: }
 11372                           ;main.c: 321: recstatus=0;
 11373  0385  0023               	movlb	3	; select bank3
 11374  0386  01CA               	clrf	_recstatus^(0+384)
 11375  0387  01CB               	clrf	(_recstatus+1)^(0+384)
 11376                           
 11377                           ;main.c: 322: startptr1=0;
 11378  0388  0020               	movlb	0	; select bank0
 11379  0389  01E4               	clrf	_startptr1
 11380                           
 11381                           ;main.c: 323: statusptr1=0;
 11382  038A  0022               	movlb	2	; select bank2
 11383  038B  01AA               	clrf	_statusptr1^(0+256)
 11384  038C  01AB               	clrf	(_statusptr1+1)^(0+256)
 11385                           
 11386                           ;main.c: 324: arrptr=0;
 11387  038D  01B2               	clrf	_arrptr^(0+256)
 11388                           
 11389                           ;main.c: 325: recchksum=0;
 11390  038E  01D3               	clrf	_recchksum^(0+256)
 11391                           
 11392                           ;main.c: 326: send_statusf=1;
 11393  038F  01D6               	clrf	_send_statusf^(0+256)
 11394  0390  0AD6               	incf	_send_statusf^(0+256),f
 11395                           
 11396                           ;main.c: 328: }
 11397  0391  2CE7               	goto	i1l578
 11398  0392                     i1l5189:	
 11399                           ;main.c: 336: }
 11400                           ;main.c: 337: }
 11401                           ;main.c: 338: }
 11402                           
 11403                           ;main.c: 335: recchksum=0;
 11404                           
 11405                           ;main.c: 334: arrptr=0;
 11406                           
 11407                           ;main.c: 333: statusptr1=0;
 11408                           
 11409                           ;main.c: 332: startptr1=0;
 11410                           
 11411                           ;main.c: 329: else
 11412                           ;main.c: 330: {
 11413                           ;main.c: 331: recstatus=0;
 11414                           
 11415                           
 11416                           ;main.c: 339: else if(startptr1==1 && statusptr1==0)
 11417  0392  0020               	movlb	0	; select bank0
 11418  0393  0864               	movf	_startptr1,w
 11419  0394  3A01               	xorlw	1
 11420  0395  1D03               	skipz
 11421  0396  2CE7               	goto	i1l578
 11422  0397  0022               	movlb	2	; select bank2
 11423  0398  082B               	movf	(_statusptr1+1)^(0+256),w
 11424  0399  042A               	iorwf	_statusptr1^(0+256),w
 11425  039A  1D03               	skipz
 11426  039B  2CE7               	goto	i1l578
 11427                           
 11428                           ;main.c: 340: {
 11429                           ;main.c: 341: if(arrptr<=21)
 11430  039C  3016               	movlw	22
 11431  039D  0232               	subwf	_arrptr^(0+256),w
 11432  039E  1803               	skipnc
 11433  039F  2BBB               	goto	i1l5201
 11434                           
 11435                           ;main.c: 342: {
 11436                           ;main.c: 343: rec_arr[arrptr]=rxdata;
 11437  03A0  0020               	movlb	0	; select bank0
 11438  03A1  0863               	movf	_rxdata,w	;volatile
 11439  03A2  00CB               	movwf	??_ISR_Function
 11440  03A3  0022               	movlb	2	; select bank2
 11441  03A4  0832               	movf	_arrptr^(0+256),w
 11442  03A5  3EA0               	addlw	_rec_arr& (0+255)
 11443  03A6  0086               	movwf	6
 11444  03A7  3002               	movlw	2	; select bank5/6
 11445  03A8  0087               	movwf	7
 11446  03A9  0020               	movlb	0	; select bank0
 11447  03AA  084B               	movf	??_ISR_Function,w
 11448  03AB  0081               	movwf	1
 11449                           
 11450                           ;main.c: 344: recchksum=recchksum+rxdata;
 11451  03AC  0022               	movlb	2	; select bank2
 11452  03AD  0853               	movf	_recchksum^(0+256),w
 11453  03AE  0020               	movlb	0	; select bank0
 11454  03AF  0763               	addwf	_rxdata,w	;volatile
 11455  03B0  00CB               	movwf	??_ISR_Function
 11456  03B1  084B               	movf	??_ISR_Function,w
 11457  03B2  0022               	movlb	2	; select bank2
 11458  03B3  00D3               	movwf	_recchksum^(0+256)
 11459                           
 11460                           ;main.c: 345: arrptr++;
 11461  03B4  3001               	movlw	1
 11462  03B5  0020               	movlb	0	; select bank0
 11463  03B6  00CB               	movwf	??_ISR_Function
 11464  03B7  084B               	movf	??_ISR_Function,w
 11465  03B8  0022               	movlb	2	; select bank2
 11466  03B9  07B2               	addwf	_arrptr^(0+256),f
 11467                           
 11468                           ;main.c: 346: }
 11469  03BA  2CE7               	goto	i1l578
 11470  03BB                     i1l5201:	
 11471                           
 11472                           ;main.c: 347: else if(recchksum==rxdata)
 11473  03BB  0853               	movf	_recchksum^(0+256),w
 11474  03BC  0020               	movlb	0	; select bank0
 11475  03BD  0663               	xorwf	_rxdata,w	;volatile
 11476  03BE  1D03               	skipz
 11477  03BF  2CDD               	goto	i1l5241
 11478                           
 11479                           ;main.c: 349: {
 11480                           ;main.c: 363: comm_error_count=0;
 11481  03C0  0022               	movlb	2	; select bank2
 11482  03C1  01B7               	clrf	_comm_error_count^(0+256)	;volatile
 11483                           
 11484                           ;main.c: 364: for(ijk=0;ijk<=21;ijk++)
 11485  03C2  01A2               	clrf	_ijk^(0+256)
 11486  03C3  01A3               	clrf	(_ijk+1)^(0+256)
 11487  03C4  3000               	movlw	0
 11488  03C5  0223               	subwf	(_ijk+1)^(0+256),w
 11489  03C6  3016               	movlw	22
 11490  03C7  1903               	skipnz
 11491  03C8  0222               	subwf	_ijk^(0+256),w
 11492  03C9  1803               	btfsc	3,0
 11493  03CA  2BE8               	goto	i1l5215
 11494  03CB                     i1l5209:	
 11495                           
 11496                           ;main.c: 365: {
 11497                           ;main.c: 366: pstowfstru.pstransarr[ijk]=rec_arr[ijk];
 11498  03CB  0822               	movf	_ijk^(0+256),w
 11499  03CC  3EA0               	addlw	_rec_arr& (0+255)
 11500  03CD  0086               	movwf	6
 11501  03CE  3002               	movlw	2	; select bank5/6
 11502  03CF  0087               	movwf	7
 11503  03D0  0801               	movf	1,w
 11504  03D1  0020               	movlb	0	; select bank0
 11505  03D2  00CB               	movwf	??_ISR_Function
 11506  03D3  0022               	movlb	2	; select bank2
 11507  03D4  0822               	movf	_ijk^(0+256),w
 11508  03D5  3E44               	addlw	_pstowfstru& (0+255)
 11509  03D6  0086               	movwf	6
 11510  03D7  3002               	movlw	2	; select bank4/5
 11511  03D8  0087               	movwf	7
 11512  03D9  0020               	movlb	0	; select bank0
 11513  03DA  084B               	movf	??_ISR_Function,w
 11514  03DB  0081               	movwf	1
 11515  03DC  3001               	movlw	1
 11516  03DD  0022               	movlb	2	; select bank2
 11517  03DE  07A2               	addwf	_ijk^(0+256),f
 11518  03DF  3000               	movlw	0
 11519  03E0  3DA3               	addwfc	(_ijk+1)^(0+256),f
 11520  03E1  3000               	movlw	0
 11521  03E2  0223               	subwf	(_ijk+1)^(0+256),w
 11522  03E3  3016               	movlw	22
 11523  03E4  1903               	skipnz
 11524  03E5  0222               	subwf	_ijk^(0+256),w
 11525  03E6  1C03               	skipc
 11526  03E7  2BCB               	goto	i1l5209
 11527  03E8                     i1l5215:	
 11528                           
 11529                           ;main.c: 367: }
 11530                           ;main.c: 368: weldmode=pstowfstru.pstowfstrs.weldmode;
 11531  03E8  0024               	movlb	4	; select bank4
 11532  03E9  0844               	movf	_pstowfstru^(0+512),w
 11533  03EA  0020               	movlb	0	; select bank0
 11534  03EB  00CB               	movwf	??_ISR_Function
 11535  03EC  084B               	movf	??_ISR_Function,w
 11536  03ED  00E6               	movwf	_weldmode	;volatile
 11537                           
 11538                           ;main.c: 369: setwirespeed=pstowfstru.pstowfstrs.setwspeed;
 11539  03EE  0024               	movlb	4	; select bank4
 11540  03EF  0845               	movf	(_pstowfstru^(0+512)+1),w
 11541  03F0  0020               	movlb	0	; select bank0
 11542  03F1  00CB               	movwf	??_ISR_Function
 11543  03F2  01CC               	clrf	??_ISR_Function+1
 11544  03F3  084B               	movf	??_ISR_Function,w
 11545  03F4  00DA               	movwf	_setwirespeed
 11546  03F5  084C               	movf	??_ISR_Function+1,w
 11547  03F6  00DB               	movwf	_setwirespeed+1
 11548                           
 11549                           ;main.c: 370: wfstatusu.wfstatusbyte[0]=pstowfstru.pstowfstrs.wfstatusbyte;
 11550  03F7  0024               	movlb	4	; select bank4
 11551  03F8  0851               	movf	(_pstowfstru^(0+512)+13),w
 11552  03F9  0020               	movlb	0	; select bank0
 11553  03FA  00CB               	movwf	??_ISR_Function
 11554  03FB  084B               	movf	??_ISR_Function,w
 11555  03FC  00EE               	movwf	_wfstatusu
 11556                           
 11557                           ;main.c: 371: if(wfstatusu.wfstatuss.twotfourtmode1==1)
 11558  03FD  1C6E               	btfss	_wfstatusu,0
 11559  03FE  2C02               	goto	i1l615
 11560                           
 11561                           ;main.c: 372: {
 11562                           ;main.c: 373: TypeU.TypeS.twot=0;
 11563  03FF  1267               	bcf	_TypeU,4
 11564                           
 11565                           ;main.c: 374: TypeU.TypeS.fourt=1;
 11566  0400  16E7               	bsf	_TypeU,5
 11567                           
 11568                           ;main.c: 375: }
 11569  0401  2C04               	goto	i1l5221
 11570  0402                     i1l615:	
 11571                           
 11572                           ;main.c: 376: else
 11573                           ;main.c: 377: {
 11574                           ;main.c: 378: TypeU.TypeS.twot=1;
 11575  0402  1667               	bsf	_TypeU,4
 11576                           
 11577                           ;main.c: 379: TypeU.TypeS.fourt=0;
 11578  0403  12E7               	bcf	_TypeU,5
 11579  0404                     i1l5221:	
 11580                           
 11581                           ;main.c: 380: }
 11582                           ;main.c: 381: if(cEditfg == 0)
 11583  0404  0022               	movlb	2	; select bank2
 11584  0405  08B3               	movf	_cEditfg^(0+256),f
 11585  0406  1D03               	skipz
 11586  0407  2C1F               	goto	i1l617
 11587                           
 11588                           ;main.c: 382: {
 11589                           ;main.c: 383: setvoltage=pstowfstru.pstowfstrs.Hi_setvoltage;
 11590  0408  0024               	movlb	4	; select bank4
 11591  0409  0849               	movf	(_pstowfstru^(0+512)+5),w
 11592  040A  0020               	movlb	0	; select bank0
 11593  040B  00CB               	movwf	??_ISR_Function
 11594  040C  01CC               	clrf	??_ISR_Function+1
 11595  040D  084B               	movf	??_ISR_Function,w
 11596  040E  00D8               	movwf	_setvoltage
 11597  040F  084C               	movf	??_ISR_Function+1,w
 11598  0410  00D9               	movwf	_setvoltage+1
 11599                           
 11600                           ;main.c: 384: setvoltage<<=8;
 11601  0411  3008               	movlw	8
 11602  0412                     u737_25:	
 11603  0412  35D8               	lslf	_setvoltage,f
 11604  0413  0DD9               	rlf	_setvoltage+1,f
 11605  0414  0B89               	decfsz	9,f
 11606  0415  2C12               	goto	u737_25
 11607                           
 11608                           ;main.c: 385: setvoltage|=pstowfstru.pstowfstrs.Lo_setvoltage;
 11609  0416  0024               	movlb	4	; select bank4
 11610  0417  084A               	movf	(_pstowfstru^(0+512)+6),w
 11611  0418  0020               	movlb	0	; select bank0
 11612  0419  00CB               	movwf	??_ISR_Function
 11613  041A  01CC               	clrf	??_ISR_Function+1
 11614  041B  084B               	movf	??_ISR_Function,w
 11615  041C  04D8               	iorwf	_setvoltage,f
 11616  041D  084C               	movf	??_ISR_Function+1,w
 11617  041E  04D9               	iorwf	_setvoltage+1,f
 11618  041F                     i1l617:	
 11619                           
 11620                           ;main.c: 386: }
 11621                           ;main.c: 388: setcurrent=pstowfstru.pstowfstrs.Hi_setcurrent;
 11622  041F  0024               	movlb	4	; select bank4
 11623  0420  0846               	movf	(_pstowfstru^(0+512)+2),w
 11624  0421  0020               	movlb	0	; select bank0
 11625  0422  00CB               	movwf	??_ISR_Function
 11626  0423  01CC               	clrf	??_ISR_Function+1
 11627  0424  084B               	movf	??_ISR_Function,w
 11628  0425  0022               	movlb	2	; select bank2
 11629  0426  00A8               	movwf	_setcurrent^(0+256)
 11630  0427  0020               	movlb	0	; select bank0
 11631  0428  084C               	movf	??_ISR_Function+1,w
 11632  0429  0022               	movlb	2	; select bank2
 11633  042A  00A9               	movwf	(_setcurrent+1)^(0+256)
 11634                           
 11635                           ;main.c: 389: setcurrent<<=8;
 11636  042B  3008               	movlw	8
 11637  042C                     u738_25:	
 11638  042C  35A8               	lslf	_setcurrent^(0+256),f
 11639  042D  0DA9               	rlf	(_setcurrent+1)^(0+256),f
 11640  042E  0B89               	decfsz	9,f
 11641  042F  2C2C               	goto	u738_25
 11642                           
 11643                           ;main.c: 390: setcurrent|=pstowfstru.pstowfstrs.Lo_setcurrent;
 11644  0430  0024               	movlb	4	; select bank4
 11645  0431  0847               	movf	(_pstowfstru^(0+512)+3),w
 11646  0432  0020               	movlb	0	; select bank0
 11647  0433  00CB               	movwf	??_ISR_Function
 11648  0434  01CC               	clrf	??_ISR_Function+1
 11649  0435  084B               	movf	??_ISR_Function,w
 11650  0436  0022               	movlb	2	; select bank2
 11651  0437  04A8               	iorwf	_setcurrent^(0+256),f
 11652  0438  0020               	movlb	0	; select bank0
 11653  0439  084C               	movf	??_ISR_Function+1,w
 11654  043A  0022               	movlb	2	; select bank2
 11655  043B  04A9               	iorwf	(_setcurrent+1)^(0+256),f
 11656                           
 11657                           ;main.c: 393: Actual_amp=pstowfstru.pstowfstrs.Hi_actualcurrent;
 11658  043C  0024               	movlb	4	; select bank4
 11659  043D  084C               	movf	(_pstowfstru^(0+512)+8),w
 11660  043E  0020               	movlb	0	; select bank0
 11661  043F  00CB               	movwf	??_ISR_Function
 11662  0440  01CC               	clrf	??_ISR_Function+1
 11663  0441  084B               	movf	??_ISR_Function,w
 11664  0442  0023               	movlb	3	; select bank3
 11665  0443  00E3               	movwf	_Actual_amp^(0+384)
 11666  0444  0020               	movlb	0	; select bank0
 11667  0445  084C               	movf	??_ISR_Function+1,w
 11668  0446  0023               	movlb	3	; select bank3
 11669  0447  00E4               	movwf	(_Actual_amp+1)^(0+384)
 11670                           
 11671                           ;main.c: 394: Actual_amp<<=8;
 11672  0448  3008               	movlw	8
 11673  0449                     u739_25:	
 11674  0449  35E3               	lslf	_Actual_amp^(0+384),f
 11675  044A  0DE4               	rlf	(_Actual_amp+1)^(0+384),f
 11676  044B  0B89               	decfsz	9,f
 11677  044C  2C49               	goto	u739_25
 11678                           
 11679                           ;main.c: 395: Actual_amp|=pstowfstru.pstowfstrs.Lo_actualcurrent;
 11680  044D  0024               	movlb	4	; select bank4
 11681  044E  084D               	movf	(_pstowfstru^(0+512)+9),w
 11682  044F  0020               	movlb	0	; select bank0
 11683  0450  00CB               	movwf	??_ISR_Function
 11684  0451  01CC               	clrf	??_ISR_Function+1
 11685  0452  084B               	movf	??_ISR_Function,w
 11686  0453  0023               	movlb	3	; select bank3
 11687  0454  04E3               	iorwf	_Actual_amp^(0+384),f
 11688  0455  0020               	movlb	0	; select bank0
 11689  0456  084C               	movf	??_ISR_Function+1,w
 11690  0457  0023               	movlb	3	; select bank3
 11691  0458  04E4               	iorwf	(_Actual_amp+1)^(0+384),f
 11692                           
 11693                           ;main.c: 402: Actual_vtg=pstowfstru.pstowfstrs.Hi_actualvoltage;
 11694  0459  0024               	movlb	4	; select bank4
 11695  045A  084E               	movf	(_pstowfstru^(0+512)+10),w
 11696  045B  0020               	movlb	0	; select bank0
 11697  045C  00CB               	movwf	??_ISR_Function
 11698  045D  01CC               	clrf	??_ISR_Function+1
 11699  045E  084B               	movf	??_ISR_Function,w
 11700  045F  0023               	movlb	3	; select bank3
 11701  0460  00E5               	movwf	_Actual_vtg^(0+384)
 11702  0461  0020               	movlb	0	; select bank0
 11703  0462  084C               	movf	??_ISR_Function+1,w
 11704  0463  0023               	movlb	3	; select bank3
 11705  0464  00E6               	movwf	(_Actual_vtg+1)^(0+384)
 11706                           
 11707                           ;main.c: 403: Actual_vtg<<=8;
 11708  0465  3008               	movlw	8
 11709  0466                     u740_25:	
 11710  0466  35E5               	lslf	_Actual_vtg^(0+384),f
 11711  0467  0DE6               	rlf	(_Actual_vtg+1)^(0+384),f
 11712  0468  0B89               	decfsz	9,f
 11713  0469  2C66               	goto	u740_25
 11714                           
 11715                           ;main.c: 404: Actual_vtg|=pstowfstru.pstowfstrs.Lo_actualvoltage;
 11716  046A  0024               	movlb	4	; select bank4
 11717  046B  084F               	movf	(_pstowfstru^(0+512)+11),w
 11718  046C  0020               	movlb	0	; select bank0
 11719  046D  00CB               	movwf	??_ISR_Function
 11720  046E  01CC               	clrf	??_ISR_Function+1
 11721  046F  084B               	movf	??_ISR_Function,w
 11722  0470  0023               	movlb	3	; select bank3
 11723  0471  04E5               	iorwf	_Actual_vtg^(0+384),f
 11724  0472  0020               	movlb	0	; select bank0
 11725  0473  084C               	movf	??_ISR_Function+1,w
 11726  0474  0023               	movlb	3	; select bank3
 11727  0475  04E6               	iorwf	(_Actual_vtg+1)^(0+384),f
 11728                           
 11729                           ;main.c: 406: rel_wirespeed=pstowfstru.pstowfstrs.rel_wirespeed;
 11730  0476  0024               	movlb	4	; select bank4
 11731  0477  0852               	movf	(_pstowfstru^(0+512)+14),w
 11732  0478  0020               	movlb	0	; select bank0
 11733  0479  00CB               	movwf	??_ISR_Function
 11734  047A  01CC               	clrf	??_ISR_Function+1
 11735  047B  084B               	movf	??_ISR_Function,w
 11736  047C  0023               	movlb	3	; select bank3
 11737  047D  00CC               	movwf	_rel_wirespeed^(0+384)
 11738  047E  0020               	movlb	0	; select bank0
 11739  047F  084C               	movf	??_ISR_Function+1,w
 11740  0480  0023               	movlb	3	; select bank3
 11741  0481  00CD               	movwf	(_rel_wirespeed+1)^(0+384)
 11742                           
 11743                           ;main.c: 408: crater_speed=pstowfstru.pstowfstrs.crater_speed;
 11744  0482  0024               	movlb	4	; select bank4
 11745  0483  0856               	movf	(_pstowfstru^(0+512)+18),w
 11746  0484  0020               	movlb	0	; select bank0
 11747  0485  00CB               	movwf	??_ISR_Function
 11748  0486  084B               	movf	??_ISR_Function,w
 11749  0487  0022               	movlb	2	; select bank2
 11750  0488  00BA               	movwf	_crater_speed^(0+256)	;volatile
 11751                           
 11752                           ;main.c: 410: if(cEditfg == 0)
 11753  0489  08B3               	movf	_cEditfg^(0+256),f
 11754  048A  1D03               	skipz
 11755  048B  2C92               	goto	i1l618
 11756                           
 11757                           ;main.c: 411: {
 11758                           ;main.c: 412: psstatusu.psstatusbyte[0]=pstowfstru.pstowfstrs.psstatusbyte;
 11759  048C  0024               	movlb	4	; select bank4
 11760  048D  0850               	movf	(_pstowfstru^(0+512)+12),w
 11761  048E  0020               	movlb	0	; select bank0
 11762  048F  00CB               	movwf	??_ISR_Function
 11763  0490  084B               	movf	??_ISR_Function,w
 11764  0491  00ED               	movwf	_psstatusu
 11765  0492                     i1l618:	
 11766                           
 11767                           ;main.c: 413: }
 11768                           ;main.c: 414: error_code1=pstowfstru.pstowfstrs.error_code1;
 11769  0492  0024               	movlb	4	; select bank4
 11770  0493  0854               	movf	(_pstowfstru^(0+512)+16),w
 11771  0494  0020               	movlb	0	; select bank0
 11772  0495  00CB               	movwf	??_ISR_Function
 11773  0496  084B               	movf	??_ISR_Function,w
 11774  0497  0023               	movlb	3	; select bank3
 11775  0498  00D7               	movwf	_error_code1^(0+384)	;volatile
 11776                           
 11777                           ;main.c: 415: error_code2=pstowfstru.pstowfstrs.error_code2;
 11778  0499  0024               	movlb	4	; select bank4
 11779  049A  0855               	movf	(_pstowfstru^(0+512)+17),w
 11780  049B  0020               	movlb	0	; select bank0
 11781  049C  00CB               	movwf	??_ISR_Function
 11782  049D  084B               	movf	??_ISR_Function,w
 11783  049E  0023               	movlb	3	; select bank3
 11784  049F  00D8               	movwf	_error_code2^(0+384)	;volatile
 11785                           
 11786                           ;main.c: 417: commandu.commandbyte[0]=pstowfstru.pstowfstrs.command_to_wf;
 11787  04A0  0024               	movlb	4	; select bank4
 11788  04A1  0858               	movf	(_pstowfstru^(0+512)+20),w
 11789  04A2  0020               	movlb	0	; select bank0
 11790  04A3  00CB               	movwf	??_ISR_Function
 11791  04A4  084B               	movf	??_ISR_Function,w
 11792  04A5  0022               	movlb	2	; select bank2
 11793  04A6  00E3               	movwf	_commandu^(0+256)
 11794                           
 11795                           ;main.c: 418: erroru.errorstatusbyte[0]=pstowfstru.pstowfstrs.error_code1;;
 11796  04A7  0024               	movlb	4	; select bank4
 11797  04A8  0854               	movf	(_pstowfstru^(0+512)+16),w
 11798  04A9  0020               	movlb	0	; select bank0
 11799  04AA  00CB               	movwf	??_ISR_Function
 11800  04AB  084B               	movf	??_ISR_Function,w
 11801  04AC  0022               	movlb	2	; select bank2
 11802  04AD  00DF               	movwf	_erroru^(0+256)
 11803                           
 11804                           ;main.c: 419: erroru.errorstatusbyte[1]=pstowfstru.pstowfstrs.error_code2;
 11805  04AE  0024               	movlb	4	; select bank4
 11806  04AF  0855               	movf	(_pstowfstru^(0+512)+17),w
 11807  04B0  0020               	movlb	0	; select bank0
 11808  04B1  00CB               	movwf	??_ISR_Function
 11809  04B2  084B               	movf	??_ISR_Function,w
 11810  04B3  0022               	movlb	2	; select bank2
 11811  04B4  00E0               	movwf	(_erroru^(0+256)+1)
 11812                           
 11813                           ;main.c: 421: creep_speed=pstowfstru.pstowfstrs.creep_speed;
 11814  04B5  0024               	movlb	4	; select bank4
 11815  04B6  0857               	movf	(_pstowfstru^(0+512)+19),w
 11816  04B7  0020               	movlb	0	; select bank0
 11817  04B8  00CB               	movwf	??_ISR_Function
 11818  04B9  084B               	movf	??_ISR_Function,w
 11819  04BA  0022               	movlb	2	; select bank2
 11820  04BB  00BB               	movwf	_creep_speed^(0+256)	;volatile
 11821                           
 11822                           ;main.c: 423: if(commandu.commands.volt_or_arc==1)
 11823  04BC  1C63               	btfss	_commandu^(0+256),0
 11824  04BD  2CC1               	goto	i1l619
 11825                           
 11826                           ;main.c: 425: {
 11827                           ;main.c: 426: TypeU.TypeS.arclength=0;
 11828  04BE  0020               	movlb	0	; select bank0
 11829  04BF  1167               	bcf	_TypeU,2
 11830                           
 11831                           ;main.c: 427: TypeU.TypeS.vtg =1;
 11832  04C0  14E8               	bsf	_TypeU+1,1
 11833  04C1                     i1l619:	
 11834                           
 11835                           ;main.c: 428: }
 11836                           ;main.c: 437: if(wfstatusu.wfstatuss.twotfourtmode1 == 1)
 11837  04C1  0020               	movlb	0	; select bank0
 11838  04C2  1C6E               	btfss	_wfstatusu,0
 11839  04C3  2CC8               	goto	i1l5235
 11840                           
 11841                           ;main.c: 438: {
 11842                           ;main.c: 439: cWf2t4tmodefg = 1;
 11843  04C4  0022               	movlb	2	; select bank2
 11844  04C5  01B4               	clrf	_cWf2t4tmodefg^(0+256)
 11845  04C6  0AB4               	incf	_cWf2t4tmodefg^(0+256),f
 11846                           
 11847                           ;main.c: 440: }
 11848  04C7  2CCA               	goto	i1l621
 11849  04C8                     i1l5235:	
 11850                           
 11851                           ;main.c: 441: else
 11852                           ;main.c: 442: {
 11853                           ;main.c: 443: cWf2t4tmodefg = 0;
 11854  04C8  0022               	movlb	2	; select bank2
 11855  04C9  01B4               	clrf	_cWf2t4tmodefg^(0+256)
 11856  04CA                     i1l621:	
 11857                           
 11858                           ;main.c: 444: }
 11859                           ;main.c: 449: startptr1=0;
 11860  04CA  0020               	movlb	0	; select bank0
 11861  04CB  01E4               	clrf	_startptr1
 11862                           
 11863                           ;main.c: 450: arrptr=0;
 11864  04CC  0022               	movlb	2	; select bank2
 11865  04CD  01B2               	clrf	_arrptr^(0+256)
 11866                           
 11867                           ;main.c: 451: recchksum=0;
 11868  04CE  01D3               	clrf	_recchksum^(0+256)
 11869                           
 11870                           ;main.c: 452: recstatus=0;
 11871  04CF  0023               	movlb	3	; select bank3
 11872  04D0  01CA               	clrf	_recstatus^(0+384)
 11873  04D1  01CB               	clrf	(_recstatus+1)^(0+384)
 11874                           
 11875                           ;main.c: 453: statusptr1=0;
 11876  04D2  0022               	movlb	2	; select bank2
 11877  04D3  01AA               	clrf	_statusptr1^(0+256)
 11878  04D4  01AB               	clrf	(_statusptr1+1)^(0+256)
 11879                           
 11880                           ;main.c: 454: transmitonf=1;
 11881  04D5  01DA               	clrf	_transmitonf^(0+256)
 11882  04D6  0ADA               	incf	_transmitonf^(0+256),f
 11883                           
 11884                           ;main.c: 455: onesecf=1;
 11885  04D7  3001               	movlw	1
 11886  04D8  0020               	movlb	0	; select bank0
 11887  04D9  00CB               	movwf	??_ISR_Function
 11888  04DA  084B               	movf	??_ISR_Function,w
 11889  04DB  00E1               	movwf	_onesecf	;volatile
 11890                           
 11891                           ;main.c: 457: }
 11892  04DC  2CE7               	goto	i1l578
 11893  04DD                     i1l5241:	
 11894                           
 11895                           ;main.c: 458: else
 11896                           ;main.c: 459: {
 11897                           ;main.c: 460: recstatus=0;
 11898  04DD  0023               	movlb	3	; select bank3
 11899  04DE  01CA               	clrf	_recstatus^(0+384)
 11900  04DF  01CB               	clrf	(_recstatus+1)^(0+384)
 11901                           
 11902                           ;main.c: 461: startptr1=0;
 11903  04E0  0020               	movlb	0	; select bank0
 11904  04E1  01E4               	clrf	_startptr1
 11905                           
 11906                           ;main.c: 462: statusptr1=0;
 11907  04E2  0022               	movlb	2	; select bank2
 11908  04E3  01AA               	clrf	_statusptr1^(0+256)
 11909  04E4  01AB               	clrf	(_statusptr1+1)^(0+256)
 11910  04E5                     L24:	
 11911                           
 11912                           ;main.c: 463: arrptr=0;
 11913  04E5  01B2               	clrf	_arrptr^(0+256)
 11914  04E6                     L22:	
 11915                           
 11916                           ;main.c: 464: recchksum=0;
 11917  04E6  01D3               	clrf	_recchksum^(0+256)
 11918  04E7                     i1l578:	
 11919  04E7  0020               	movlb	0	; select bank0
 11920  04E8  0853               	movf	??_ISR_Function+8,w
 11921  04E9  00FF               	movwf	127
 11922  04EA  107E               	bcf	126,0	;clear compiler interrupt flag
 11923  04EB  0009               	retfie
 11924  04EC                     __end_of_ISR_Function:	
 11925                           
 11926                           	psect	text35
 11927  18FE                     __ptext35:	
 11928 ;; *************** function i1___lwtoft *****************
 11929 ;; Defined at:
 11930 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;  c               2    8[COMMON] unsigned int 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;		None
 11935 ;; Return value:  Size  Location     Type
 11936 ;;                  3    8[COMMON] float 
 11937 ;; Registers used:
 11938 ;;		wreg, status,2, status,0, pclath, cstack
 11939 ;; Tracked objects:
 11940 ;;		On entry : 0/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11944 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;Total ram usage:        4 bytes
 11949 ;; Hardware stack levels used:    1
 11950 ;; Hardware stack levels required when called:    1
 11951 ;; This function calls:
 11952 ;;		i1___ftpack
 11953 ;; This function is called by:
 11954 ;;		_ISR_Function
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958                           
 11959                           ;psect for function i1___lwtoft
 11960  18FE                     i1___lwtoft:	
 11961                           
 11962                           ;incstack = 0
 11963                           ; Regs used in i1___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 11964  18FE  0878               	movf	i1___lwtoft@c,w
 11965  18FF  00F0               	movwf	i1___ftpack@arg
 11966  1900  0879               	movf	i1___lwtoft@c+1,w
 11967  1901  00F1               	movwf	i1___ftpack@arg+1
 11968  1902  01F2               	clrf	i1___ftpack@arg+2
 11969  1903  308E               	movlw	142
 11970  1904  00FB               	movwf	??i1___lwtoft
 11971  1905  087B               	movf	??i1___lwtoft,w
 11972  1906  00F3               	movwf	i1___ftpack@exp
 11973  1907  01F4               	clrf	i1___ftpack@sign
 11974  1908  319B  2366         	fcall	i1___ftpack
 11975  190A  0870               	movf	?i1___ftpack,w
 11976  190B  00F8               	movwf	?i1___lwtoft
 11977  190C  0871               	movf	?i1___ftpack+1,w
 11978  190D  00F9               	movwf	?i1___lwtoft+1
 11979  190E  0872               	movf	?i1___ftpack+2,w
 11980  190F  00FA               	movwf	?i1___lwtoft+2
 11981  1910  0008               	return
 11982  1911                     __end_ofi1___lwtoft:	
 11983                           
 11984                           	psect	text36
 11985  1EF2                     __ptext36:	
 11986 ;; *************** function i1___fttol *****************
 11987 ;; Defined at:
 11988 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
 11989 ;; Parameters:    Size  Location     Type
 11990 ;;  f1              3   29[BANK0 ] float 
 11991 ;; Auto vars:     Size  Location     Type
 11992 ;;  __fttol         4   38[BANK0 ] unsigned long 
 11993 ;;  __fttol         1   42[BANK0 ] unsigned char 
 11994 ;;  __fttol         1   37[BANK0 ] unsigned char 
 11995 ;; Return value:  Size  Location     Type
 11996 ;;                  4   29[BANK0 ] long 
 11997 ;; Registers used:
 11998 ;;		wreg, status,2, status,0
 11999 ;; Tracked objects:
 12000 ;;		On entry : 0/0
 12001 ;;		On exit  : 0/0
 12002 ;;		Unchanged: 0/0
 12003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12004 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12005 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12006 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12007 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12008 ;;Total ram usage:       14 bytes
 12009 ;; Hardware stack levels used:    1
 12010 ;; This function calls:
 12011 ;;		Nothing
 12012 ;; This function is called by:
 12013 ;;		_ISR_Function
 12014 ;; This function uses a non-reentrant model
 12015 ;;
 12016                           
 12017                           
 12018                           ;psect for function i1___fttol
 12019  1EF2                     i1___fttol:	
 12020                           
 12021                           ;incstack = 0
 12022                           ; Regs used in i1___fttol: [wreg+status,2+status,0]
 12023  1EF2  0020               	movlb	0	; select bank0
 12024  1EF3  083D               	movf	i1___fttol@f1,w
 12025  1EF4  00C1               	movwf	??i1___fttol
 12026  1EF5  083E               	movf	i1___fttol@f1+1,w
 12027  1EF6  00C2               	movwf	??i1___fttol+1
 12028  1EF7  083F               	movf	i1___fttol@f1+2,w
 12029  1EF8  00C3               	movwf	??i1___fttol+2
 12030  1EF9  1003               	clrc
 12031  1EFA  0D42               	rlf	??i1___fttol+1,w
 12032  1EFB  0D43               	rlf	??i1___fttol+2,w
 12033  1EFC  00C4               	movwf	??i1___fttol+3
 12034  1EFD  0844               	movf	??i1___fttol+3,w
 12035  1EFE  00CA               	movwf	i1___fttol@exp1
 12036  1EFF  08CA               	movf	i1___fttol@exp1,f
 12037  1F00  1D03               	skipz
 12038  1F01  2F0B               	goto	i1l4865
 12039  1F02  3000               	movlw	0
 12040  1F03  00C0               	movwf	?i1___fttol+3
 12041  1F04  3000               	movlw	0
 12042  1F05  00BF               	movwf	?i1___fttol+2
 12043  1F06  3000               	movlw	0
 12044  1F07  00BE               	movwf	?i1___fttol+1
 12045  1F08  3000               	movlw	0
 12046  1F09  00BD               	movwf	?i1___fttol
 12047  1F0A  0008               	return
 12048  1F0B                     i1l4865:	
 12049  1F0B  083D               	movf	i1___fttol@f1,w
 12050  1F0C  00C1               	movwf	??i1___fttol
 12051  1F0D  083E               	movf	i1___fttol@f1+1,w
 12052  1F0E  00C2               	movwf	??i1___fttol+1
 12053  1F0F  083F               	movf	i1___fttol@f1+2,w
 12054  1F10  00C3               	movwf	??i1___fttol+2
 12055  1F11  3017               	movlw	23
 12056  1F12                     u673_25:	
 12057  1F12  36C3               	lsrf	??i1___fttol+2,f
 12058  1F13  0CC2               	rrf	??i1___fttol+1,f
 12059  1F14  0CC1               	rrf	??i1___fttol,f
 12060  1F15  0B89               	decfsz	9,f
 12061  1F16  2F12               	goto	u673_25
 12062  1F17  0841               	movf	??i1___fttol,w
 12063  1F18  00C4               	movwf	??i1___fttol+3
 12064  1F19  0844               	movf	??i1___fttol+3,w
 12065  1F1A  00C5               	movwf	i1___fttol@sign1
 12066  1F1B  17BE               	bsf	i1___fttol@f1+1,7
 12067  1F1C  30FF               	movlw	255
 12068  1F1D  05BD               	andwf	i1___fttol@f1,f
 12069  1F1E  30FF               	movlw	255
 12070  1F1F  05BE               	andwf	i1___fttol@f1+1,f
 12071  1F20  3000               	movlw	0
 12072  1F21  05BF               	andwf	i1___fttol@f1+2,f
 12073  1F22  083D               	movf	i1___fttol@f1,w
 12074  1F23  00C6               	movwf	i1___fttol@lval
 12075  1F24  083E               	movf	i1___fttol@f1+1,w
 12076  1F25  00C7               	movwf	i1___fttol@lval+1
 12077  1F26  083F               	movf	i1___fttol@f1+2,w
 12078  1F27  00C8               	movwf	i1___fttol@lval+2
 12079  1F28  01C9               	clrf	i1___fttol@lval+3
 12080  1F29  308E               	movlw	142
 12081  1F2A  02CA               	subwf	i1___fttol@exp1,f
 12082  1F2B  1FCA               	btfss	i1___fttol@exp1,7
 12083  1F2C  2F49               	goto	i1l4885
 12084  1F2D  084A               	movf	i1___fttol@exp1,w
 12085  1F2E  3A80               	xorlw	128
 12086  1F2F  3E8F               	addlw	143
 12087  1F30  1803               	skipnc
 12088  1F31  2F3B               	goto	i1l4883
 12089  1F32  3000               	movlw	0
 12090  1F33  00C0               	movwf	?i1___fttol+3
 12091  1F34  3000               	movlw	0
 12092  1F35  00BF               	movwf	?i1___fttol+2
 12093  1F36  3000               	movlw	0
 12094  1F37  00BE               	movwf	?i1___fttol+1
 12095  1F38  3000               	movlw	0
 12096  1F39  00BD               	movwf	?i1___fttol
 12097  1F3A  0008               	return
 12098  1F3B                     i1l4883:	
 12099  1F3B  3001               	movlw	1
 12100  1F3C                     u676_25:	
 12101  1F3C  36C9               	lsrf	i1___fttol@lval+3,f
 12102  1F3D  0CC8               	rrf	i1___fttol@lval+2,f
 12103  1F3E  0CC7               	rrf	i1___fttol@lval+1,f
 12104  1F3F  0CC6               	rrf	i1___fttol@lval,f
 12105  1F40  0B89               	decfsz	9,f
 12106  1F41  2F3C               	goto	u676_25
 12107  1F42  3001               	movlw	1
 12108  1F43  00C1               	movwf	??i1___fttol
 12109  1F44  0841               	movf	??i1___fttol,w
 12110  1F45  07CA               	addwf	i1___fttol@exp1,f
 12111  1F46  1903               	btfsc	3,2
 12112  1F47  2F62               	goto	i1l4895
 12113  1F48  2F3B               	goto	i1l4883
 12114  1F49                     i1l4885:	
 12115  1F49  3018               	movlw	24
 12116  1F4A  024A               	subwf	i1___fttol@exp1,w
 12117  1F4B  1C03               	skipc
 12118  1F4C  2F5F               	goto	i1l4893
 12119  1F4D  3000               	movlw	0
 12120  1F4E  00C0               	movwf	?i1___fttol+3
 12121  1F4F  3000               	movlw	0
 12122  1F50  00BF               	movwf	?i1___fttol+2
 12123  1F51  3000               	movlw	0
 12124  1F52  00BE               	movwf	?i1___fttol+1
 12125  1F53  3000               	movlw	0
 12126  1F54  00BD               	movwf	?i1___fttol
 12127  1F55  0008               	return
 12128  1F56                     i1l4891:	
 12129  1F56  3001               	movlw	1
 12130  1F57                     u679_25:	
 12131  1F57  35C6               	lslf	i1___fttol@lval,f
 12132  1F58  0DC7               	rlf	i1___fttol@lval+1,f
 12133  1F59  0DC8               	rlf	i1___fttol@lval+2,f
 12134  1F5A  0DC9               	rlf	i1___fttol@lval+3,f
 12135  1F5B  0B89               	decfsz	9,f
 12136  1F5C  2F57               	goto	u679_25
 12137  1F5D  3001               	movlw	1
 12138  1F5E  02CA               	subwf	i1___fttol@exp1,f
 12139  1F5F                     i1l4893:	
 12140  1F5F  08CA               	movf	i1___fttol@exp1,f
 12141  1F60  1D03               	skipz
 12142  1F61  2F56               	goto	i1l4891
 12143  1F62                     i1l4895:	
 12144  1F62  0845               	movf	i1___fttol@sign1,w
 12145  1F63  1903               	btfsc	3,2
 12146  1F64  2F70               	goto	i1l4899
 12147  1F65  09C6               	comf	i1___fttol@lval,f
 12148  1F66  09C7               	comf	i1___fttol@lval+1,f
 12149  1F67  09C8               	comf	i1___fttol@lval+2,f
 12150  1F68  09C9               	comf	i1___fttol@lval+3,f
 12151  1F69  0AC6               	incf	i1___fttol@lval,f
 12152  1F6A  1903               	skipnz
 12153  1F6B  0AC7               	incf	i1___fttol@lval+1,f
 12154  1F6C  1903               	skipnz
 12155  1F6D  0AC8               	incf	i1___fttol@lval+2,f
 12156  1F6E  1903               	skipnz
 12157  1F6F  0AC9               	incf	i1___fttol@lval+3,f
 12158  1F70                     i1l4899:	
 12159  1F70  0849               	movf	i1___fttol@lval+3,w
 12160  1F71  00C0               	movwf	?i1___fttol+3
 12161  1F72  0848               	movf	i1___fttol@lval+2,w
 12162  1F73  00BF               	movwf	?i1___fttol+2
 12163  1F74  0847               	movf	i1___fttol@lval+1,w
 12164  1F75  00BE               	movwf	?i1___fttol+1
 12165  1F76  0846               	movf	i1___fttol@lval,w
 12166  1F77  00BD               	movwf	?i1___fttol
 12167  1F78  0008               	return
 12168  1F79                     __end_ofi1___fttol:	
 12169                           
 12170                           	psect	text37
 12171  1215                     __ptext37:	
 12172 ;; *************** function i1___ftmul *****************
 12173 ;; Defined at:
 12174 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
 12175 ;; Parameters:    Size  Location     Type
 12176 ;;  f1              3    0[BANK0 ] float 
 12177 ;;  f2              3    3[BANK0 ] float 
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;  __ftmul         3   11[BANK0 ] unsigned um
 12180 ;;  __ftmul         1   15[BANK0 ] unsigned char 
 12181 ;;  __ftmul         1   14[BANK0 ] unsigned char 
 12182 ;;  __ftmul         1   10[BANK0 ] unsigned char 
 12183 ;; Return value:  Size  Location     Type
 12184 ;;                  3    0[BANK0 ] float 
 12185 ;; Registers used:
 12186 ;;		wreg, status,2, status,0, pclath, cstack
 12187 ;; Tracked objects:
 12188 ;;		On entry : 0/0
 12189 ;;		On exit  : 0/0
 12190 ;;		Unchanged: 0/0
 12191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12192 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12193 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12194 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;Total ram usage:       16 bytes
 12197 ;; Hardware stack levels used:    1
 12198 ;; Hardware stack levels required when called:    1
 12199 ;; This function calls:
 12200 ;;		i1___ftpack
 12201 ;; This function is called by:
 12202 ;;		_ISR_Function
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           
 12207                           ;psect for function i1___ftmul
 12208  1215                     i1___ftmul:	
 12209                           
 12210                           ;incstack = 0
 12211                           ; Regs used in i1___ftmul: [wreg+status,2+status,0+pclath+cstack]
 12212  1215  0020               	movlb	0	; select bank0
 12213  1216  0820               	movf	i1___ftmul@f1,w
 12214  1217  00A6               	movwf	??i1___ftmul
 12215  1218  0821               	movf	i1___ftmul@f1+1,w
 12216  1219  00A7               	movwf	??i1___ftmul+1
 12217  121A  0822               	movf	i1___ftmul@f1+2,w
 12218  121B  00A8               	movwf	??i1___ftmul+2
 12219  121C  1003               	clrc
 12220  121D  0D27               	rlf	??i1___ftmul+1,w
 12221  121E  0D28               	rlf	??i1___ftmul+2,w
 12222  121F  00A9               	movwf	??i1___ftmul+3
 12223  1220  0829               	movf	??i1___ftmul+3,w
 12224  1221  00AA               	movwf	i1___ftmul@exp
 12225  1222  08AA               	movf	i1___ftmul@exp,f
 12226  1223  1D03               	skipz
 12227  1224  2A2C               	goto	i1l4815
 12228  1225  3000               	movlw	0
 12229  1226  00A0               	movwf	?i1___ftmul
 12230  1227  3000               	movlw	0
 12231  1228  00A1               	movwf	?i1___ftmul+1
 12232  1229  3000               	movlw	0
 12233  122A  00A2               	movwf	?i1___ftmul+2
 12234  122B  0008               	return
 12235  122C                     i1l4815:	
 12236  122C  0823               	movf	i1___ftmul@f2,w
 12237  122D  00A6               	movwf	??i1___ftmul
 12238  122E  0824               	movf	i1___ftmul@f2+1,w
 12239  122F  00A7               	movwf	??i1___ftmul+1
 12240  1230  0825               	movf	i1___ftmul@f2+2,w
 12241  1231  00A8               	movwf	??i1___ftmul+2
 12242  1232  1003               	clrc
 12243  1233  0D27               	rlf	??i1___ftmul+1,w
 12244  1234  0D28               	rlf	??i1___ftmul+2,w
 12245  1235  00A9               	movwf	??i1___ftmul+3
 12246  1236  0829               	movf	??i1___ftmul+3,w
 12247  1237  00AF               	movwf	i1___ftmul@sign
 12248  1238  08AF               	movf	i1___ftmul@sign,f
 12249  1239  1D03               	skipz
 12250  123A  2A42               	goto	i1l4821
 12251  123B  3000               	movlw	0
 12252  123C  00A0               	movwf	?i1___ftmul
 12253  123D  3000               	movlw	0
 12254  123E  00A1               	movwf	?i1___ftmul+1
 12255  123F  3000               	movlw	0
 12256  1240  00A2               	movwf	?i1___ftmul+2
 12257  1241  0008               	return
 12258  1242                     i1l4821:	
 12259  1242  082F               	movf	i1___ftmul@sign,w
 12260  1243  3E7B               	addlw	123
 12261  1244  00A6               	movwf	??i1___ftmul
 12262  1245  0826               	movf	??i1___ftmul,w
 12263  1246  07AA               	addwf	i1___ftmul@exp,f
 12264  1247  0820               	movf	i1___ftmul@f1,w
 12265  1248  00A6               	movwf	??i1___ftmul
 12266  1249  0821               	movf	i1___ftmul@f1+1,w
 12267  124A  00A7               	movwf	??i1___ftmul+1
 12268  124B  0822               	movf	i1___ftmul@f1+2,w
 12269  124C  00A8               	movwf	??i1___ftmul+2
 12270  124D  3010               	movlw	16
 12271  124E                     u662_25:	
 12272  124E  36A8               	lsrf	??i1___ftmul+2,f
 12273  124F  0CA7               	rrf	??i1___ftmul+1,f
 12274  1250  0CA6               	rrf	??i1___ftmul,f
 12275  1251  0B89               	decfsz	9,f
 12276  1252  2A4E               	goto	u662_25
 12277  1253  0826               	movf	??i1___ftmul,w
 12278  1254  00A9               	movwf	??i1___ftmul+3
 12279  1255  0829               	movf	??i1___ftmul+3,w
 12280  1256  00AF               	movwf	i1___ftmul@sign
 12281  1257  0823               	movf	i1___ftmul@f2,w
 12282  1258  00A6               	movwf	??i1___ftmul
 12283  1259  0824               	movf	i1___ftmul@f2+1,w
 12284  125A  00A7               	movwf	??i1___ftmul+1
 12285  125B  0825               	movf	i1___ftmul@f2+2,w
 12286  125C  00A8               	movwf	??i1___ftmul+2
 12287  125D  3010               	movlw	16
 12288  125E                     u663_25:	
 12289  125E  36A8               	lsrf	??i1___ftmul+2,f
 12290  125F  0CA7               	rrf	??i1___ftmul+1,f
 12291  1260  0CA6               	rrf	??i1___ftmul,f
 12292  1261  0B89               	decfsz	9,f
 12293  1262  2A5E               	goto	u663_25
 12294  1263  0826               	movf	??i1___ftmul,w
 12295  1264  00A9               	movwf	??i1___ftmul+3
 12296  1265  0829               	movf	??i1___ftmul+3,w
 12297  1266  06AF               	xorwf	i1___ftmul@sign,f
 12298  1267  3080               	movlw	128
 12299  1268  00A6               	movwf	??i1___ftmul
 12300  1269  0826               	movf	??i1___ftmul,w
 12301  126A  05AF               	andwf	i1___ftmul@sign,f
 12302  126B  17A1               	bsf	i1___ftmul@f1+1,7
 12303  126C  17A4               	bsf	i1___ftmul@f2+1,7
 12304  126D  30FF               	movlw	255
 12305  126E  05A3               	andwf	i1___ftmul@f2,f
 12306  126F  30FF               	movlw	255
 12307  1270  05A4               	andwf	i1___ftmul@f2+1,f
 12308  1271  3000               	movlw	0
 12309  1272  05A5               	andwf	i1___ftmul@f2+2,f
 12310  1273  3000               	movlw	0
 12311  1274  00AB               	movwf	i1___ftmul@f3_as_product
 12312  1275  3000               	movlw	0
 12313  1276  00AC               	movwf	i1___ftmul@f3_as_product+1
 12314  1277  3000               	movlw	0
 12315  1278  00AD               	movwf	i1___ftmul@f3_as_product+2
 12316  1279  3007               	movlw	7
 12317  127A  00A6               	movwf	??i1___ftmul
 12318  127B  0826               	movf	??i1___ftmul,w
 12319  127C  00AE               	movwf	i1___ftmul@cntr
 12320  127D                     i1l4833:	
 12321  127D  1C20               	btfss	i1___ftmul@f1,0
 12322  127E  2A85               	goto	i1l4837
 12323  127F  0823               	movf	i1___ftmul@f2,w
 12324  1280  07AB               	addwf	i1___ftmul@f3_as_product,f
 12325  1281  0824               	movf	i1___ftmul@f2+1,w
 12326  1282  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12327  1283  0825               	movf	i1___ftmul@f2+2,w
 12328  1284  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12329  1285                     i1l4837:	
 12330  1285  3001               	movlw	1
 12331  1286                     u665_25:	
 12332  1286  36A2               	lsrf	i1___ftmul@f1+2,f
 12333  1287  0CA1               	rrf	i1___ftmul@f1+1,f
 12334  1288  0CA0               	rrf	i1___ftmul@f1,f
 12335  1289  0B89               	decfsz	9,f
 12336  128A  2A86               	goto	u665_25
 12337  128B  3001               	movlw	1
 12338  128C                     u666_25:	
 12339  128C  35A3               	lslf	i1___ftmul@f2,f
 12340  128D  0DA4               	rlf	i1___ftmul@f2+1,f
 12341  128E  0DA5               	rlf	i1___ftmul@f2+2,f
 12342  128F  0B89               	decfsz	9,f
 12343  1290  2A8C               	goto	u666_25
 12344  1291  3001               	movlw	1
 12345  1292  02AE               	subwf	i1___ftmul@cntr,f
 12346  1293  1D03               	btfss	3,2
 12347  1294  2A7D               	goto	i1l4833
 12348  1295  3009               	movlw	9
 12349  1296  00A6               	movwf	??i1___ftmul
 12350  1297  0826               	movf	??i1___ftmul,w
 12351  1298  00AE               	movwf	i1___ftmul@cntr
 12352  1299                     i1l4845:	
 12353  1299  1C20               	btfss	i1___ftmul@f1,0
 12354  129A  2AA1               	goto	i1l4849
 12355  129B  0823               	movf	i1___ftmul@f2,w
 12356  129C  07AB               	addwf	i1___ftmul@f3_as_product,f
 12357  129D  0824               	movf	i1___ftmul@f2+1,w
 12358  129E  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12359  129F  0825               	movf	i1___ftmul@f2+2,w
 12360  12A0  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12361  12A1                     i1l4849:	
 12362  12A1  3001               	movlw	1
 12363  12A2                     u669_25:	
 12364  12A2  36A2               	lsrf	i1___ftmul@f1+2,f
 12365  12A3  0CA1               	rrf	i1___ftmul@f1+1,f
 12366  12A4  0CA0               	rrf	i1___ftmul@f1,f
 12367  12A5  0B89               	decfsz	9,f
 12368  12A6  2AA2               	goto	u669_25
 12369  12A7  3001               	movlw	1
 12370  12A8                     u670_25:	
 12371  12A8  36AD               	lsrf	i1___ftmul@f3_as_product+2,f
 12372  12A9  0CAC               	rrf	i1___ftmul@f3_as_product+1,f
 12373  12AA  0CAB               	rrf	i1___ftmul@f3_as_product,f
 12374  12AB  0B89               	decfsz	9,f
 12375  12AC  2AA8               	goto	u670_25
 12376  12AD  3001               	movlw	1
 12377  12AE  02AE               	subwf	i1___ftmul@cntr,f
 12378  12AF  1D03               	btfss	3,2
 12379  12B0  2A99               	goto	i1l4845
 12380  12B1  082B               	movf	i1___ftmul@f3_as_product,w
 12381  12B2  00F0               	movwf	i1___ftpack@arg
 12382  12B3  082C               	movf	i1___ftmul@f3_as_product+1,w
 12383  12B4  00F1               	movwf	i1___ftpack@arg+1
 12384  12B5  082D               	movf	i1___ftmul@f3_as_product+2,w
 12385  12B6  00F2               	movwf	i1___ftpack@arg+2
 12386  12B7  082A               	movf	i1___ftmul@exp,w
 12387  12B8  00A6               	movwf	??i1___ftmul
 12388  12B9  0826               	movf	??i1___ftmul,w
 12389  12BA  00F3               	movwf	i1___ftpack@exp
 12390  12BB  082F               	movf	i1___ftmul@sign,w
 12391  12BC  00A7               	movwf	??i1___ftmul+1
 12392  12BD  0827               	movf	??i1___ftmul+1,w
 12393  12BE  00F4               	movwf	i1___ftpack@sign
 12394  12BF  319B  2366         	fcall	i1___ftpack
 12395  12C1  0870               	movf	?i1___ftpack,w
 12396  12C2  0020               	movlb	0	; select bank0
 12397  12C3  00A0               	movwf	?i1___ftmul
 12398  12C4  0871               	movf	?i1___ftpack+1,w
 12399  12C5  00A1               	movwf	?i1___ftmul+1
 12400  12C6  0872               	movf	?i1___ftpack+2,w
 12401  12C7  00A2               	movwf	?i1___ftmul+2
 12402  12C8  0008               	return
 12403  12C9                     __end_ofi1___ftmul:	
 12404                           
 12405                           	psect	text38
 12406  1019                     __ptext38:	
 12407 ;; *************** function i1___ftdiv *****************
 12408 ;; Defined at:
 12409 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
 12410 ;; Parameters:    Size  Location     Type
 12411 ;;  f2              3    0[BANK0 ] float 
 12412 ;;  f1              3    3[BANK0 ] float 
 12413 ;; Auto vars:     Size  Location     Type
 12414 ;;  __ftdiv         3   11[BANK0 ] float 
 12415 ;;  __ftdiv         1   15[BANK0 ] unsigned char 
 12416 ;;  __ftdiv         1   14[BANK0 ] unsigned char 
 12417 ;;  __ftdiv         1   10[BANK0 ] unsigned char 
 12418 ;; Return value:  Size  Location     Type
 12419 ;;                  3    0[BANK0 ] float 
 12420 ;; Registers used:
 12421 ;;		wreg, status,2, status,0, pclath, cstack
 12422 ;; Tracked objects:
 12423 ;;		On entry : 0/0
 12424 ;;		On exit  : 0/0
 12425 ;;		Unchanged: 0/0
 12426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12427 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;Total ram usage:       16 bytes
 12432 ;; Hardware stack levels used:    1
 12433 ;; Hardware stack levels required when called:    1
 12434 ;; This function calls:
 12435 ;;		i1___ftpack
 12436 ;; This function is called by:
 12437 ;;		_ISR_Function
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441                           
 12442                           ;psect for function i1___ftdiv
 12443  1019                     i1___ftdiv:	
 12444                           
 12445                           ;incstack = 0
 12446                           ; Regs used in i1___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 12447  1019  0020               	movlb	0	; select bank0
 12448  101A  0823               	movf	i1___ftdiv@f1,w
 12449  101B  00A6               	movwf	??i1___ftdiv
 12450  101C  0824               	movf	i1___ftdiv@f1+1,w
 12451  101D  00A7               	movwf	??i1___ftdiv+1
 12452  101E  0825               	movf	i1___ftdiv@f1+2,w
 12453  101F  00A8               	movwf	??i1___ftdiv+2
 12454  1020  1003               	clrc
 12455  1021  0D27               	rlf	??i1___ftdiv+1,w
 12456  1022  0D28               	rlf	??i1___ftdiv+2,w
 12457  1023  00A9               	movwf	??i1___ftdiv+3
 12458  1024  0829               	movf	??i1___ftdiv+3,w
 12459  1025  00AE               	movwf	i1___ftdiv@exp
 12460  1026  08AE               	movf	i1___ftdiv@exp,f
 12461  1027  1D03               	skipz
 12462  1028  2830               	goto	i1l4773
 12463  1029  3000               	movlw	0
 12464  102A  00A0               	movwf	?i1___ftdiv
 12465  102B  3000               	movlw	0
 12466  102C  00A1               	movwf	?i1___ftdiv+1
 12467  102D  3000               	movlw	0
 12468  102E  00A2               	movwf	?i1___ftdiv+2
 12469  102F  0008               	return
 12470  1030                     i1l4773:	
 12471  1030  0820               	movf	i1___ftdiv@f2,w
 12472  1031  00A6               	movwf	??i1___ftdiv
 12473  1032  0821               	movf	i1___ftdiv@f2+1,w
 12474  1033  00A7               	movwf	??i1___ftdiv+1
 12475  1034  0822               	movf	i1___ftdiv@f2+2,w
 12476  1035  00A8               	movwf	??i1___ftdiv+2
 12477  1036  1003               	clrc
 12478  1037  0D27               	rlf	??i1___ftdiv+1,w
 12479  1038  0D28               	rlf	??i1___ftdiv+2,w
 12480  1039  00A9               	movwf	??i1___ftdiv+3
 12481  103A  0829               	movf	??i1___ftdiv+3,w
 12482  103B  00AF               	movwf	i1___ftdiv@sign
 12483  103C  08AF               	movf	i1___ftdiv@sign,f
 12484  103D  1D03               	skipz
 12485  103E  2846               	goto	i1l4779
 12486  103F  3000               	movlw	0
 12487  1040  00A0               	movwf	?i1___ftdiv
 12488  1041  3000               	movlw	0
 12489  1042  00A1               	movwf	?i1___ftdiv+1
 12490  1043  3000               	movlw	0
 12491  1044  00A2               	movwf	?i1___ftdiv+2
 12492  1045  0008               	return
 12493  1046                     i1l4779:	
 12494  1046  3000               	movlw	0
 12495  1047  00AB               	movwf	i1___ftdiv@f3
 12496  1048  3000               	movlw	0
 12497  1049  00AC               	movwf	i1___ftdiv@f3+1
 12498  104A  3000               	movlw	0
 12499  104B  00AD               	movwf	i1___ftdiv@f3+2
 12500  104C  3089               	movlw	137
 12501  104D  072F               	addwf	i1___ftdiv@sign,w
 12502  104E  00A6               	movwf	??i1___ftdiv
 12503  104F  0826               	movf	??i1___ftdiv,w
 12504  1050  02AE               	subwf	i1___ftdiv@exp,f
 12505  1051  0823               	movf	i1___ftdiv@f1,w
 12506  1052  00A6               	movwf	??i1___ftdiv
 12507  1053  0824               	movf	i1___ftdiv@f1+1,w
 12508  1054  00A7               	movwf	??i1___ftdiv+1
 12509  1055  0825               	movf	i1___ftdiv@f1+2,w
 12510  1056  00A8               	movwf	??i1___ftdiv+2
 12511  1057  3010               	movlw	16
 12512  1058                     u654_25:	
 12513  1058  36A8               	lsrf	??i1___ftdiv+2,f
 12514  1059  0CA7               	rrf	??i1___ftdiv+1,f
 12515  105A  0CA6               	rrf	??i1___ftdiv,f
 12516  105B  0B89               	decfsz	9,f
 12517  105C  2858               	goto	u654_25
 12518  105D  0826               	movf	??i1___ftdiv,w
 12519  105E  00A9               	movwf	??i1___ftdiv+3
 12520  105F  0829               	movf	??i1___ftdiv+3,w
 12521  1060  00AF               	movwf	i1___ftdiv@sign
 12522  1061  0820               	movf	i1___ftdiv@f2,w
 12523  1062  00A6               	movwf	??i1___ftdiv
 12524  1063  0821               	movf	i1___ftdiv@f2+1,w
 12525  1064  00A7               	movwf	??i1___ftdiv+1
 12526  1065  0822               	movf	i1___ftdiv@f2+2,w
 12527  1066  00A8               	movwf	??i1___ftdiv+2
 12528  1067  3010               	movlw	16
 12529  1068                     u655_25:	
 12530  1068  36A8               	lsrf	??i1___ftdiv+2,f
 12531  1069  0CA7               	rrf	??i1___ftdiv+1,f
 12532  106A  0CA6               	rrf	??i1___ftdiv,f
 12533  106B  0B89               	decfsz	9,f
 12534  106C  2868               	goto	u655_25
 12535  106D  0826               	movf	??i1___ftdiv,w
 12536  106E  00A9               	movwf	??i1___ftdiv+3
 12537  106F  0829               	movf	??i1___ftdiv+3,w
 12538  1070  06AF               	xorwf	i1___ftdiv@sign,f
 12539  1071  3080               	movlw	128
 12540  1072  00A6               	movwf	??i1___ftdiv
 12541  1073  0826               	movf	??i1___ftdiv,w
 12542  1074  05AF               	andwf	i1___ftdiv@sign,f
 12543  1075  17A4               	bsf	i1___ftdiv@f1+1,7
 12544  1076  30FF               	movlw	255
 12545  1077  05A3               	andwf	i1___ftdiv@f1,f
 12546  1078  30FF               	movlw	255
 12547  1079  05A4               	andwf	i1___ftdiv@f1+1,f
 12548  107A  3000               	movlw	0
 12549  107B  05A5               	andwf	i1___ftdiv@f1+2,f
 12550  107C  17A1               	bsf	i1___ftdiv@f2+1,7
 12551  107D  30FF               	movlw	255
 12552  107E  05A0               	andwf	i1___ftdiv@f2,f
 12553  107F  30FF               	movlw	255
 12554  1080  05A1               	andwf	i1___ftdiv@f2+1,f
 12555  1081  3000               	movlw	0
 12556  1082  05A2               	andwf	i1___ftdiv@f2+2,f
 12557  1083  3018               	movlw	24
 12558  1084  00A6               	movwf	??i1___ftdiv
 12559  1085  0826               	movf	??i1___ftdiv,w
 12560  1086  00AA               	movwf	i1___ftdiv@cntr
 12561  1087                     i1l4793:	
 12562  1087  3001               	movlw	1
 12563  1088                     u656_25:	
 12564  1088  35AB               	lslf	i1___ftdiv@f3,f
 12565  1089  0DAC               	rlf	i1___ftdiv@f3+1,f
 12566  108A  0DAD               	rlf	i1___ftdiv@f3+2,f
 12567  108B  0B89               	decfsz	9,f
 12568  108C  2888               	goto	u656_25
 12569  108D  0822               	movf	i1___ftdiv@f2+2,w
 12570  108E  0225               	subwf	i1___ftdiv@f1+2,w
 12571  108F  1D03               	skipz
 12572  1090  2897               	goto	u657_25
 12573  1091  0821               	movf	i1___ftdiv@f2+1,w
 12574  1092  0224               	subwf	i1___ftdiv@f1+1,w
 12575  1093  1D03               	skipz
 12576  1094  2897               	goto	u657_25
 12577  1095  0820               	movf	i1___ftdiv@f2,w
 12578  1096  0223               	subwf	i1___ftdiv@f1,w
 12579  1097                     u657_25:	
 12580  1097  1C03               	skipc
 12581  1098  28A0               	goto	i1l4801
 12582  1099  0820               	movf	i1___ftdiv@f2,w
 12583  109A  02A3               	subwf	i1___ftdiv@f1,f
 12584  109B  0821               	movf	i1___ftdiv@f2+1,w
 12585  109C  3BA4               	subwfb	i1___ftdiv@f1+1,f
 12586  109D  0822               	movf	i1___ftdiv@f2+2,w
 12587  109E  3BA5               	subwfb	i1___ftdiv@f1+2,f
 12588  109F  142B               	bsf	i1___ftdiv@f3,0
 12589  10A0                     i1l4801:	
 12590  10A0  3001               	movlw	1
 12591  10A1                     u658_25:	
 12592  10A1  35A3               	lslf	i1___ftdiv@f1,f
 12593  10A2  0DA4               	rlf	i1___ftdiv@f1+1,f
 12594  10A3  0DA5               	rlf	i1___ftdiv@f1+2,f
 12595  10A4  0B89               	decfsz	9,f
 12596  10A5  28A1               	goto	u658_25
 12597  10A6  3001               	movlw	1
 12598  10A7  02AA               	subwf	i1___ftdiv@cntr,f
 12599  10A8  1D03               	btfss	3,2
 12600  10A9  2887               	goto	i1l4793
 12601  10AA  082B               	movf	i1___ftdiv@f3,w
 12602  10AB  00F0               	movwf	i1___ftpack@arg
 12603  10AC  082C               	movf	i1___ftdiv@f3+1,w
 12604  10AD  00F1               	movwf	i1___ftpack@arg+1
 12605  10AE  082D               	movf	i1___ftdiv@f3+2,w
 12606  10AF  00F2               	movwf	i1___ftpack@arg+2
 12607  10B0  082E               	movf	i1___ftdiv@exp,w
 12608  10B1  00A6               	movwf	??i1___ftdiv
 12609  10B2  0826               	movf	??i1___ftdiv,w
 12610  10B3  00F3               	movwf	i1___ftpack@exp
 12611  10B4  082F               	movf	i1___ftdiv@sign,w
 12612  10B5  00A7               	movwf	??i1___ftdiv+1
 12613  10B6  0827               	movf	??i1___ftdiv+1,w
 12614  10B7  00F4               	movwf	i1___ftpack@sign
 12615  10B8  319B  2366         	fcall	i1___ftpack
 12616  10BA  0870               	movf	?i1___ftpack,w
 12617  10BB  0020               	movlb	0	; select bank0
 12618  10BC  00A0               	movwf	?i1___ftdiv
 12619  10BD  0871               	movf	?i1___ftpack+1,w
 12620  10BE  00A1               	movwf	?i1___ftdiv+1
 12621  10BF  0872               	movf	?i1___ftpack+2,w
 12622  10C0  00A2               	movwf	?i1___ftdiv+2
 12623  10C1  0008               	return
 12624  10C2                     __end_ofi1___ftdiv:	
 12625                           
 12626                           	psect	text39
 12627  137D                     __ptext39:	
 12628 ;; *************** function i1___ftadd *****************
 12629 ;; Defined at:
 12630 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
 12631 ;; Parameters:    Size  Location     Type
 12632 ;;  f1              3   16[BANK0 ] float 
 12633 ;;  f2              3   19[BANK0 ] float 
 12634 ;; Auto vars:     Size  Location     Type
 12635 ;;  __ftadd         1   28[BANK0 ] unsigned char 
 12636 ;;  __ftadd         1   27[BANK0 ] unsigned char 
 12637 ;;  __ftadd         1   26[BANK0 ] unsigned char 
 12638 ;; Return value:  Size  Location     Type
 12639 ;;                  3   16[BANK0 ] float 
 12640 ;; Registers used:
 12641 ;;		wreg, status,2, status,0, pclath, cstack
 12642 ;; Tracked objects:
 12643 ;;		On entry : 0/0
 12644 ;;		On exit  : 0/0
 12645 ;;		Unchanged: 0/0
 12646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12647 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12649 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12650 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12651 ;;Total ram usage:       13 bytes
 12652 ;; Hardware stack levels used:    1
 12653 ;; Hardware stack levels required when called:    1
 12654 ;; This function calls:
 12655 ;;		i1___ftpack
 12656 ;; This function is called by:
 12657 ;;		_ISR_Function
 12658 ;; This function uses a non-reentrant model
 12659 ;;
 12660                           
 12661                           
 12662                           ;psect for function i1___ftadd
 12663  137D                     i1___ftadd:	
 12664                           
 12665                           ;incstack = 0
 12666                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
 12667  137D  0020               	movlb	0	; select bank0
 12668  137E  0830               	movf	i1___ftadd@f1,w
 12669  137F  00B6               	movwf	??i1___ftadd
 12670  1380  0831               	movf	i1___ftadd@f1+1,w
 12671  1381  00B7               	movwf	??i1___ftadd+1
 12672  1382  0832               	movf	i1___ftadd@f1+2,w
 12673  1383  00B8               	movwf	??i1___ftadd+2
 12674  1384  1003               	clrc
 12675  1385  0D37               	rlf	??i1___ftadd+1,w
 12676  1386  0D38               	rlf	??i1___ftadd+2,w
 12677  1387  00B9               	movwf	??i1___ftadd+3
 12678  1388  0839               	movf	??i1___ftadd+3,w
 12679  1389  00BC               	movwf	i1___ftadd@exp1
 12680  138A  0833               	movf	i1___ftadd@f2,w
 12681  138B  00B6               	movwf	??i1___ftadd
 12682  138C  0834               	movf	i1___ftadd@f2+1,w
 12683  138D  00B7               	movwf	??i1___ftadd+1
 12684  138E  0835               	movf	i1___ftadd@f2+2,w
 12685  138F  00B8               	movwf	??i1___ftadd+2
 12686  1390  1003               	clrc
 12687  1391  0D37               	rlf	??i1___ftadd+1,w
 12688  1392  0D38               	rlf	??i1___ftadd+2,w
 12689  1393  00B9               	movwf	??i1___ftadd+3
 12690  1394  0839               	movf	??i1___ftadd+3,w
 12691  1395  00BB               	movwf	i1___ftadd@exp2
 12692  1396  083C               	movf	i1___ftadd@exp1,w
 12693  1397  1903               	btfsc	3,2
 12694  1398  2BA5               	goto	i1l4703
 12695  1399  083B               	movf	i1___ftadd@exp2,w
 12696  139A  023C               	subwf	i1___ftadd@exp1,w
 12697  139B  1803               	skipnc
 12698  139C  2BAC               	goto	i1l4707
 12699  139D  033C               	decf	i1___ftadd@exp1,w
 12700  139E  3AFF               	xorlw	255
 12701  139F  073B               	addwf	i1___ftadd@exp2,w
 12702  13A0  00B6               	movwf	??i1___ftadd
 12703  13A1  3019               	movlw	25
 12704  13A2  0236               	subwf	??i1___ftadd,w
 12705  13A3  1C03               	skipc
 12706  13A4  2BAC               	goto	i1l4707
 12707  13A5                     i1l4703:	
 12708  13A5  0833               	movf	i1___ftadd@f2,w
 12709  13A6  00B0               	movwf	?i1___ftadd
 12710  13A7  0834               	movf	i1___ftadd@f2+1,w
 12711  13A8  00B1               	movwf	?i1___ftadd+1
 12712  13A9  0835               	movf	i1___ftadd@f2+2,w
 12713  13AA  00B2               	movwf	?i1___ftadd+2
 12714  13AB  0008               	return
 12715  13AC                     i1l4707:	
 12716  13AC  083B               	movf	i1___ftadd@exp2,w
 12717  13AD  1903               	btfsc	3,2
 12718  13AE  0008               	return
 12719  13AF  083C               	movf	i1___ftadd@exp1,w
 12720  13B0  023B               	subwf	i1___ftadd@exp2,w
 12721  13B1  1803               	skipnc
 12722  13B2  2BBB               	goto	i1l4713
 12723  13B3  033B               	decf	i1___ftadd@exp2,w
 12724  13B4  3AFF               	xorlw	255
 12725  13B5  073C               	addwf	i1___ftadd@exp1,w
 12726  13B6  00B6               	movwf	??i1___ftadd
 12727  13B7  3019               	movlw	25
 12728  13B8  0236               	subwf	??i1___ftadd,w
 12729  13B9  1803               	btfsc	3,0
 12730  13BA  0008               	return
 12731  13BB                     i1l4713:	
 12732  13BB  3006               	movlw	6
 12733  13BC  00B6               	movwf	??i1___ftadd
 12734  13BD  0836               	movf	??i1___ftadd,w
 12735  13BE  00BA               	movwf	i1___ftadd@sign
 12736  13BF  1BB2               	btfsc	i1___ftadd@f1+2,7
 12737  13C0  17BA               	bsf	i1___ftadd@sign,7
 12738  13C1  1BB5               	btfsc	i1___ftadd@f2+2,7
 12739  13C2  173A               	bsf	i1___ftadd@sign,6
 12740  13C3  17B1               	bsf	i1___ftadd@f1+1,7
 12741  13C4  30FF               	movlw	255
 12742  13C5  05B0               	andwf	i1___ftadd@f1,f
 12743  13C6  30FF               	movlw	255
 12744  13C7  05B1               	andwf	i1___ftadd@f1+1,f
 12745  13C8  3000               	movlw	0
 12746  13C9  05B2               	andwf	i1___ftadd@f1+2,f
 12747  13CA  17B4               	bsf	i1___ftadd@f2+1,7
 12748  13CB  30FF               	movlw	255
 12749  13CC  05B3               	andwf	i1___ftadd@f2,f
 12750  13CD  30FF               	movlw	255
 12751  13CE  05B4               	andwf	i1___ftadd@f2+1,f
 12752  13CF  3000               	movlw	0
 12753  13D0  05B5               	andwf	i1___ftadd@f2+2,f
 12754  13D1  083B               	movf	i1___ftadd@exp2,w
 12755  13D2  023C               	subwf	i1___ftadd@exp1,w
 12756  13D3  1803               	skipnc
 12757  13D4  2BF7               	goto	i1l4735
 12758  13D5                     i1l4725:	
 12759  13D5  3001               	movlw	1
 12760  13D6                     u638_25:	
 12761  13D6  35B3               	lslf	i1___ftadd@f2,f
 12762  13D7  0DB4               	rlf	i1___ftadd@f2+1,f
 12763  13D8  0DB5               	rlf	i1___ftadd@f2+2,f
 12764  13D9  0B89               	decfsz	9,f
 12765  13DA  2BD6               	goto	u638_25
 12766  13DB  3001               	movlw	1
 12767  13DC  02BB               	subwf	i1___ftadd@exp2,f
 12768  13DD  083B               	movf	i1___ftadd@exp2,w
 12769  13DE  063C               	xorwf	i1___ftadd@exp1,w
 12770  13DF  1903               	skipnz
 12771  13E0  2BF2               	goto	i1l4733
 12772  13E1  3001               	movlw	1
 12773  13E2  02BA               	subwf	i1___ftadd@sign,f
 12774  13E3  083A               	movf	i1___ftadd@sign,w
 12775  13E4  3907               	andlw	7
 12776  13E5  1903               	btfsc	3,2
 12777  13E6  2BF2               	goto	i1l4733
 12778  13E7  2BD5               	goto	i1l4725
 12779  13E8                     i1l4731:	
 12780  13E8  3001               	movlw	1
 12781  13E9                     u641_25:	
 12782  13E9  36B2               	lsrf	i1___ftadd@f1+2,f
 12783  13EA  0CB1               	rrf	i1___ftadd@f1+1,f
 12784  13EB  0CB0               	rrf	i1___ftadd@f1,f
 12785  13EC  0B89               	decfsz	9,f
 12786  13ED  2BE9               	goto	u641_25
 12787  13EE  3001               	movlw	1
 12788  13EF  00B6               	movwf	??i1___ftadd
 12789  13F0  0836               	movf	??i1___ftadd,w
 12790  13F1  07BC               	addwf	i1___ftadd@exp1,f
 12791  13F2                     i1l4733:	
 12792  13F2  083C               	movf	i1___ftadd@exp1,w
 12793  13F3  063B               	xorwf	i1___ftadd@exp2,w
 12794  13F4  1903               	btfsc	3,2
 12795  13F5  2C1C               	goto	i1l1100
 12796  13F6  2BE8               	goto	i1l4731
 12797  13F7                     i1l4735:	
 12798  13F7  083C               	movf	i1___ftadd@exp1,w
 12799  13F8  023B               	subwf	i1___ftadd@exp2,w
 12800  13F9  1803               	skipnc
 12801  13FA  2C1C               	goto	i1l1100
 12802  13FB                     i1l4737:	
 12803  13FB  3001               	movlw	1
 12804  13FC                     u644_25:	
 12805  13FC  35B0               	lslf	i1___ftadd@f1,f
 12806  13FD  0DB1               	rlf	i1___ftadd@f1+1,f
 12807  13FE  0DB2               	rlf	i1___ftadd@f1+2,f
 12808  13FF  0B89               	decfsz	9,f
 12809  1400  2BFC               	goto	u644_25
 12810  1401  3001               	movlw	1
 12811  1402  02BC               	subwf	i1___ftadd@exp1,f
 12812  1403  083B               	movf	i1___ftadd@exp2,w
 12813  1404  063C               	xorwf	i1___ftadd@exp1,w
 12814  1405  1903               	skipnz
 12815  1406  2C18               	goto	i1l4745
 12816  1407  3001               	movlw	1
 12817  1408  02BA               	subwf	i1___ftadd@sign,f
 12818  1409  083A               	movf	i1___ftadd@sign,w
 12819  140A  3907               	andlw	7
 12820  140B  1903               	btfsc	3,2
 12821  140C  2C18               	goto	i1l4745
 12822  140D  2BFB               	goto	i1l4737
 12823  140E                     i1l4743:	
 12824  140E  3001               	movlw	1
 12825  140F                     u647_25:	
 12826  140F  36B5               	lsrf	i1___ftadd@f2+2,f
 12827  1410  0CB4               	rrf	i1___ftadd@f2+1,f
 12828  1411  0CB3               	rrf	i1___ftadd@f2,f
 12829  1412  0B89               	decfsz	9,f
 12830  1413  2C0F               	goto	u647_25
 12831  1414  3001               	movlw	1
 12832  1415  00B6               	movwf	??i1___ftadd
 12833  1416  0836               	movf	??i1___ftadd,w
 12834  1417  07BB               	addwf	i1___ftadd@exp2,f
 12835  1418                     i1l4745:	
 12836  1418  083C               	movf	i1___ftadd@exp1,w
 12837  1419  063B               	xorwf	i1___ftadd@exp2,w
 12838  141A  1D03               	skipz
 12839  141B  2C0E               	goto	i1l4743
 12840  141C                     i1l1100:	
 12841  141C  1FBA               	btfss	i1___ftadd@sign,7
 12842  141D  2C2E               	goto	i1l4749
 12843  141E  30FF               	movlw	255
 12844  141F  06B0               	xorwf	i1___ftadd@f1,f
 12845  1420  30FF               	movlw	255
 12846  1421  06B1               	xorwf	i1___ftadd@f1+1,f
 12847  1422  30FF               	movlw	255
 12848  1423  06B2               	xorwf	i1___ftadd@f1+2,f
 12849  1424  3001               	movlw	1
 12850  1425  07B0               	addwf	i1___ftadd@f1,f
 12851  1426  3000               	movlw	0
 12852  1427  1803               	skipnc
 12853  1428  3001               	movlw	1
 12854  1429  07B1               	addwf	i1___ftadd@f1+1,f
 12855  142A  3000               	movlw	0
 12856  142B  1803               	skipnc
 12857  142C  3001               	movlw	1
 12858  142D  07B2               	addwf	i1___ftadd@f1+2,f
 12859  142E                     i1l4749:	
 12860  142E  1F3A               	btfss	i1___ftadd@sign,6
 12861  142F  2C40               	goto	i1l4753
 12862  1430  30FF               	movlw	255
 12863  1431  06B3               	xorwf	i1___ftadd@f2,f
 12864  1432  30FF               	movlw	255
 12865  1433  06B4               	xorwf	i1___ftadd@f2+1,f
 12866  1434  30FF               	movlw	255
 12867  1435  06B5               	xorwf	i1___ftadd@f2+2,f
 12868  1436  3001               	movlw	1
 12869  1437  07B3               	addwf	i1___ftadd@f2,f
 12870  1438  3000               	movlw	0
 12871  1439  1803               	skipnc
 12872  143A  3001               	movlw	1
 12873  143B  07B4               	addwf	i1___ftadd@f2+1,f
 12874  143C  3000               	movlw	0
 12875  143D  1803               	skipnc
 12876  143E  3001               	movlw	1
 12877  143F  07B5               	addwf	i1___ftadd@f2+2,f
 12878  1440                     i1l4753:	
 12879  1440  01BA               	clrf	i1___ftadd@sign
 12880  1441  0830               	movf	i1___ftadd@f1,w
 12881  1442  07B3               	addwf	i1___ftadd@f2,f
 12882  1443  0831               	movf	i1___ftadd@f1+1,w
 12883  1444  3DB4               	addwfc	i1___ftadd@f2+1,f
 12884  1445  0832               	movf	i1___ftadd@f1+2,w
 12885  1446  3DB5               	addwfc	i1___ftadd@f2+2,f
 12886  1447  1FB5               	btfss	i1___ftadd@f2+2,7
 12887  1448  2C5B               	goto	i1l4763
 12888  1449  30FF               	movlw	255
 12889  144A  06B3               	xorwf	i1___ftadd@f2,f
 12890  144B  30FF               	movlw	255
 12891  144C  06B4               	xorwf	i1___ftadd@f2+1,f
 12892  144D  30FF               	movlw	255
 12893  144E  06B5               	xorwf	i1___ftadd@f2+2,f
 12894  144F  3001               	movlw	1
 12895  1450  07B3               	addwf	i1___ftadd@f2,f
 12896  1451  3000               	movlw	0
 12897  1452  1803               	skipnc
 12898  1453  3001               	movlw	1
 12899  1454  07B4               	addwf	i1___ftadd@f2+1,f
 12900  1455  3000               	movlw	0
 12901  1456  1803               	skipnc
 12902  1457  3001               	movlw	1
 12903  1458  07B5               	addwf	i1___ftadd@f2+2,f
 12904  1459  01BA               	clrf	i1___ftadd@sign
 12905  145A  0ABA               	incf	i1___ftadd@sign,f
 12906  145B                     i1l4763:	
 12907  145B  0833               	movf	i1___ftadd@f2,w
 12908  145C  00F0               	movwf	i1___ftpack@arg
 12909  145D  0834               	movf	i1___ftadd@f2+1,w
 12910  145E  00F1               	movwf	i1___ftpack@arg+1
 12911  145F  0835               	movf	i1___ftadd@f2+2,w
 12912  1460  00F2               	movwf	i1___ftpack@arg+2
 12913  1461  083C               	movf	i1___ftadd@exp1,w
 12914  1462  00B6               	movwf	??i1___ftadd
 12915  1463  0836               	movf	??i1___ftadd,w
 12916  1464  00F3               	movwf	i1___ftpack@exp
 12917  1465  083A               	movf	i1___ftadd@sign,w
 12918  1466  00B7               	movwf	??i1___ftadd+1
 12919  1467  0837               	movf	??i1___ftadd+1,w
 12920  1468  00F4               	movwf	i1___ftpack@sign
 12921  1469  319B  2366         	fcall	i1___ftpack
 12922  146B  0870               	movf	?i1___ftpack,w
 12923  146C  0020               	movlb	0	; select bank0
 12924  146D  00B0               	movwf	?i1___ftadd
 12925  146E  0871               	movf	?i1___ftpack+1,w
 12926  146F  00B1               	movwf	?i1___ftadd+1
 12927  1470  0872               	movf	?i1___ftpack+2,w
 12928  1471  00B2               	movwf	?i1___ftadd+2
 12929  1472  0008               	return
 12930  1473                     __end_ofi1___ftadd:	
 12931                           
 12932                           	psect	text40
 12933  1B66                     __ptext40:	
 12934 ;; *************** function i1___ftpack *****************
 12935 ;; Defined at:
 12936 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
 12937 ;; Parameters:    Size  Location     Type
 12938 ;;  arg             3    0[COMMON] unsigned um
 12939 ;;  exp             1    3[COMMON] unsigned char 
 12940 ;;  sign            1    4[COMMON] unsigned char 
 12941 ;; Auto vars:     Size  Location     Type
 12942 ;;		None
 12943 ;; Return value:  Size  Location     Type
 12944 ;;                  3    0[COMMON] float 
 12945 ;; Registers used:
 12946 ;;		wreg, status,2, status,0
 12947 ;; Tracked objects:
 12948 ;;		On entry : 0/0
 12949 ;;		On exit  : 0/0
 12950 ;;		Unchanged: 0/0
 12951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12952 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12954 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12955 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12956 ;;Total ram usage:        8 bytes
 12957 ;; Hardware stack levels used:    1
 12958 ;; This function calls:
 12959 ;;		Nothing
 12960 ;; This function is called by:
 12961 ;;		i1___ftadd
 12962 ;;		i1___ftdiv
 12963 ;;		i1___ftmul
 12964 ;;		i1___lwtoft
 12965 ;; This function uses a non-reentrant model
 12966 ;;
 12967                           
 12968                           
 12969                           ;psect for function i1___ftpack
 12970  1B66                     i1___ftpack:	
 12971                           
 12972                           ;incstack = 0
 12973                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
 12974  1B66  0873               	movf	i1___ftpack@exp,w
 12975  1B67  1903               	btfsc	3,2
 12976  1B68  2B6E               	goto	i1l3993
 12977  1B69  0872               	movf	i1___ftpack@arg+2,w
 12978  1B6A  0471               	iorwf	i1___ftpack@arg+1,w
 12979  1B6B  0470               	iorwf	i1___ftpack@arg,w
 12980  1B6C  1D03               	skipz
 12981  1B6D  2B7F               	goto	i1l3999
 12982  1B6E                     i1l3993:	
 12983  1B6E  3000               	movlw	0
 12984  1B6F  00F0               	movwf	?i1___ftpack
 12985  1B70  3000               	movlw	0
 12986  1B71  00F1               	movwf	?i1___ftpack+1
 12987  1B72  3000               	movlw	0
 12988  1B73  00F2               	movwf	?i1___ftpack+2
 12989  1B74  0008               	return
 12990  1B75                     i1l3997:	
 12991  1B75  3001               	movlw	1
 12992  1B76  00F5               	movwf	??i1___ftpack
 12993  1B77  0875               	movf	??i1___ftpack,w
 12994  1B78  07F3               	addwf	i1___ftpack@exp,f
 12995  1B79  3001               	movlw	1
 12996  1B7A                     u518_25:	
 12997  1B7A  36F2               	lsrf	i1___ftpack@arg+2,f
 12998  1B7B  0CF1               	rrf	i1___ftpack@arg+1,f
 12999  1B7C  0CF0               	rrf	i1___ftpack@arg,f
 13000  1B7D  0B89               	decfsz	9,f
 13001  1B7E  2B7A               	goto	u518_25
 13002  1B7F                     i1l3999:	
 13003  1B7F  30FE               	movlw	254
 13004  1B80  0572               	andwf	i1___ftpack@arg+2,w
 13005  1B81  1903               	btfsc	3,2
 13006  1B82  2B98               	goto	i1l1071
 13007  1B83  2B75               	goto	i1l3997
 13008  1B84                     i1l4001:	
 13009  1B84  3001               	movlw	1
 13010  1B85  00F5               	movwf	??i1___ftpack
 13011  1B86  0875               	movf	??i1___ftpack,w
 13012  1B87  07F3               	addwf	i1___ftpack@exp,f
 13013  1B88  3001               	movlw	1
 13014  1B89  07F0               	addwf	i1___ftpack@arg,f
 13015  1B8A  3000               	movlw	0
 13016  1B8B  1803               	skipnc
 13017  1B8C  3001               	movlw	1
 13018  1B8D  07F1               	addwf	i1___ftpack@arg+1,f
 13019  1B8E  3000               	movlw	0
 13020  1B8F  1803               	skipnc
 13021  1B90  3001               	movlw	1
 13022  1B91  07F2               	addwf	i1___ftpack@arg+2,f
 13023  1B92  3001               	movlw	1
 13024  1B93                     u520_25:	
 13025  1B93  36F2               	lsrf	i1___ftpack@arg+2,f
 13026  1B94  0CF1               	rrf	i1___ftpack@arg+1,f
 13027  1B95  0CF0               	rrf	i1___ftpack@arg,f
 13028  1B96  0B89               	decfsz	9,f
 13029  1B97  2B93               	goto	u520_25
 13030  1B98                     i1l1071:	
 13031  1B98  30FF               	movlw	255
 13032  1B99  0572               	andwf	i1___ftpack@arg+2,w
 13033  1B9A  1903               	btfsc	3,2
 13034  1B9B  2BA5               	goto	i1l4009
 13035  1B9C  2B84               	goto	i1l4001
 13036  1B9D                     i1l4007:	
 13037  1B9D  3001               	movlw	1
 13038  1B9E  02F3               	subwf	i1___ftpack@exp,f
 13039  1B9F  3001               	movlw	1
 13040  1BA0                     u522_25:	
 13041  1BA0  35F0               	lslf	i1___ftpack@arg,f
 13042  1BA1  0DF1               	rlf	i1___ftpack@arg+1,f
 13043  1BA2  0DF2               	rlf	i1___ftpack@arg+2,f
 13044  1BA3  0B89               	decfsz	9,f
 13045  1BA4  2BA0               	goto	u522_25
 13046  1BA5                     i1l4009:	
 13047  1BA5  1FF1               	btfss	i1___ftpack@arg+1,7
 13048  1BA6  2B9D               	goto	i1l4007
 13049  1BA7  1873               	btfsc	i1___ftpack@exp,0
 13050  1BA8  2BAF               	goto	i1l1077
 13051  1BA9  30FF               	movlw	255
 13052  1BAA  05F0               	andwf	i1___ftpack@arg,f
 13053  1BAB  307F               	movlw	127
 13054  1BAC  05F1               	andwf	i1___ftpack@arg+1,f
 13055  1BAD  30FF               	movlw	255
 13056  1BAE  05F2               	andwf	i1___ftpack@arg+2,f
 13057  1BAF                     i1l1077:	
 13058  1BAF  1003               	clrc
 13059  1BB0  0CF3               	rrf	i1___ftpack@exp,f
 13060  1BB1  0873               	movf	i1___ftpack@exp,w
 13061  1BB2  00F5               	movwf	??i1___ftpack
 13062  1BB3  01F6               	clrf	??i1___ftpack+1
 13063  1BB4  01F7               	clrf	??i1___ftpack+2
 13064  1BB5  3010               	movlw	16
 13065  1BB6                     u525_25:	
 13066  1BB6  35F5               	lslf	??i1___ftpack,f
 13067  1BB7  0DF6               	rlf	??i1___ftpack+1,f
 13068  1BB8  0DF7               	rlf	??i1___ftpack+2,f
 13069  1BB9  0B89               	decfsz	9,f
 13070  1BBA  2BB6               	goto	u525_25
 13071  1BBB  0875               	movf	??i1___ftpack,w
 13072  1BBC  04F0               	iorwf	i1___ftpack@arg,f
 13073  1BBD  0876               	movf	??i1___ftpack+1,w
 13074  1BBE  04F1               	iorwf	i1___ftpack@arg+1,f
 13075  1BBF  0877               	movf	??i1___ftpack+2,w
 13076  1BC0  04F2               	iorwf	i1___ftpack@arg+2,f
 13077  1BC1  0874               	movf	i1___ftpack@sign,w
 13078  1BC2  1903               	btfsc	3,2
 13079  1BC3  0008               	return
 13080  1BC4  17F2               	bsf	i1___ftpack@arg+2,7
 13081  1BC5  0008               	return
 13082  1BC6                     __end_ofi1___ftpack:	
 13083                           
 13084                           	psect	text41
 13085  1DEE                     __ptext41:	
 13086 ;; *************** function i1___aldiv *****************
 13087 ;; Defined at:
 13088 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\aldiv.c"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;  divisor         4    0[COMMON] long 
 13091 ;;  dividend        4    4[COMMON] long 
 13092 ;; Auto vars:     Size  Location     Type
 13093 ;;  __aldiv         4    2[BANK0 ] long 
 13094 ;;  __aldiv         1    1[BANK0 ] unsigned char 
 13095 ;;  __aldiv         1    0[BANK0 ] unsigned char 
 13096 ;; Return value:  Size  Location     Type
 13097 ;;                  4    0[COMMON] long 
 13098 ;; Registers used:
 13099 ;;		wreg, status,2, status,0
 13100 ;; Tracked objects:
 13101 ;;		On entry : 0/0
 13102 ;;		On exit  : 0/0
 13103 ;;		Unchanged: 0/0
 13104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13105 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13106 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13108 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13109 ;;Total ram usage:       15 bytes
 13110 ;; Hardware stack levels used:    1
 13111 ;; This function calls:
 13112 ;;		Nothing
 13113 ;; This function is called by:
 13114 ;;		_ISR_Function
 13115 ;; This function uses a non-reentrant model
 13116 ;;
 13117                           
 13118                           
 13119                           ;psect for function i1___aldiv
 13120  1DEE                     i1___aldiv:	
 13121                           
 13122                           ;incstack = 0
 13123                           ; Regs used in i1___aldiv: [wreg+status,2+status,0]
 13124  1DEE  0020               	movlb	0	; select bank0
 13125  1DEF  01A1               	clrf	i1___aldiv@sign
 13126  1DF0  1FF3               	btfss	i1___aldiv@divisor+3,7
 13127  1DF1  2DFF               	goto	i1l965
 13128  1DF2  09F0               	comf	i1___aldiv@divisor,f
 13129  1DF3  09F1               	comf	i1___aldiv@divisor+1,f
 13130  1DF4  09F2               	comf	i1___aldiv@divisor+2,f
 13131  1DF5  09F3               	comf	i1___aldiv@divisor+3,f
 13132  1DF6  0AF0               	incf	i1___aldiv@divisor,f
 13133  1DF7  1903               	skipnz
 13134  1DF8  0AF1               	incf	i1___aldiv@divisor+1,f
 13135  1DF9  1903               	skipnz
 13136  1DFA  0AF2               	incf	i1___aldiv@divisor+2,f
 13137  1DFB  1903               	skipnz
 13138  1DFC  0AF3               	incf	i1___aldiv@divisor+3,f
 13139  1DFD  01A1               	clrf	i1___aldiv@sign
 13140  1DFE  0AA1               	incf	i1___aldiv@sign,f
 13141  1DFF                     i1l965:	
 13142  1DFF  1FF7               	btfss	i1___aldiv@dividend+3,7
 13143  1E00  2E10               	goto	i1l4665
 13144  1E01  09F4               	comf	i1___aldiv@dividend,f
 13145  1E02  09F5               	comf	i1___aldiv@dividend+1,f
 13146  1E03  09F6               	comf	i1___aldiv@dividend+2,f
 13147  1E04  09F7               	comf	i1___aldiv@dividend+3,f
 13148  1E05  0AF4               	incf	i1___aldiv@dividend,f
 13149  1E06  1903               	skipnz
 13150  1E07  0AF5               	incf	i1___aldiv@dividend+1,f
 13151  1E08  1903               	skipnz
 13152  1E09  0AF6               	incf	i1___aldiv@dividend+2,f
 13153  1E0A  1903               	skipnz
 13154  1E0B  0AF7               	incf	i1___aldiv@dividend+3,f
 13155  1E0C  3001               	movlw	1
 13156  1E0D  00F8               	movwf	??i1___aldiv
 13157  1E0E  0878               	movf	??i1___aldiv,w
 13158  1E0F  06A1               	xorwf	i1___aldiv@sign,f
 13159  1E10                     i1l4665:	
 13160  1E10  3000               	movlw	0
 13161  1E11  00A5               	movwf	i1___aldiv@quotient+3
 13162  1E12  3000               	movlw	0
 13163  1E13  00A4               	movwf	i1___aldiv@quotient+2
 13164  1E14  3000               	movlw	0
 13165  1E15  00A3               	movwf	i1___aldiv@quotient+1
 13166  1E16  3000               	movlw	0
 13167  1E17  00A2               	movwf	i1___aldiv@quotient
 13168  1E18  0873               	movf	i1___aldiv@divisor+3,w
 13169  1E19  0472               	iorwf	i1___aldiv@divisor+2,w
 13170  1E1A  0471               	iorwf	i1___aldiv@divisor+1,w
 13171  1E1B  0470               	iorwf	i1___aldiv@divisor,w
 13172  1E1C  1903               	skipnz
 13173  1E1D  2E59               	goto	i1l4687
 13174  1E1E  01A0               	clrf	i1___aldiv@counter
 13175  1E1F  0AA0               	incf	i1___aldiv@counter,f
 13176  1E20                     i1l4673:	
 13177  1E20  1BF3               	btfsc	i1___aldiv@divisor+3,7
 13178  1E21  2E2E               	goto	i1l4675
 13179  1E22  3001               	movlw	1
 13180  1E23                     u622_25:	
 13181  1E23  35F0               	lslf	i1___aldiv@divisor,f
 13182  1E24  0DF1               	rlf	i1___aldiv@divisor+1,f
 13183  1E25  0DF2               	rlf	i1___aldiv@divisor+2,f
 13184  1E26  0DF3               	rlf	i1___aldiv@divisor+3,f
 13185  1E27  0B89               	decfsz	9,f
 13186  1E28  2E23               	goto	u622_25
 13187  1E29  3001               	movlw	1
 13188  1E2A  00F8               	movwf	??i1___aldiv
 13189  1E2B  0878               	movf	??i1___aldiv,w
 13190  1E2C  07A0               	addwf	i1___aldiv@counter,f
 13191  1E2D  2E20               	goto	i1l4673
 13192  1E2E                     i1l4675:	
 13193  1E2E  3001               	movlw	1
 13194  1E2F                     u624_25:	
 13195  1E2F  35A2               	lslf	i1___aldiv@quotient,f
 13196  1E30  0DA3               	rlf	i1___aldiv@quotient+1,f
 13197  1E31  0DA4               	rlf	i1___aldiv@quotient+2,f
 13198  1E32  0DA5               	rlf	i1___aldiv@quotient+3,f
 13199  1E33  0B89               	decfsz	9,f
 13200  1E34  2E2F               	goto	u624_25
 13201  1E35  0873               	movf	i1___aldiv@divisor+3,w
 13202  1E36  0277               	subwf	i1___aldiv@dividend+3,w
 13203  1E37  1D03               	skipz
 13204  1E38  2E43               	goto	u625_25
 13205  1E39  0872               	movf	i1___aldiv@divisor+2,w
 13206  1E3A  0276               	subwf	i1___aldiv@dividend+2,w
 13207  1E3B  1D03               	skipz
 13208  1E3C  2E43               	goto	u625_25
 13209  1E3D  0871               	movf	i1___aldiv@divisor+1,w
 13210  1E3E  0275               	subwf	i1___aldiv@dividend+1,w
 13211  1E3F  1D03               	skipz
 13212  1E40  2E43               	goto	u625_25
 13213  1E41  0870               	movf	i1___aldiv@divisor,w
 13214  1E42  0274               	subwf	i1___aldiv@dividend,w
 13215  1E43                     u625_25:	
 13216  1E43  1C03               	skipc
 13217  1E44  2E4E               	goto	i1l4683
 13218  1E45  0870               	movf	i1___aldiv@divisor,w
 13219  1E46  02F4               	subwf	i1___aldiv@dividend,f
 13220  1E47  0871               	movf	i1___aldiv@divisor+1,w
 13221  1E48  3BF5               	subwfb	i1___aldiv@dividend+1,f
 13222  1E49  0872               	movf	i1___aldiv@divisor+2,w
 13223  1E4A  3BF6               	subwfb	i1___aldiv@dividend+2,f
 13224  1E4B  0873               	movf	i1___aldiv@divisor+3,w
 13225  1E4C  3BF7               	subwfb	i1___aldiv@dividend+3,f
 13226  1E4D  1422               	bsf	i1___aldiv@quotient,0
 13227  1E4E                     i1l4683:	
 13228  1E4E  3001               	movlw	1
 13229  1E4F                     u626_25:	
 13230  1E4F  36F3               	lsrf	i1___aldiv@divisor+3,f
 13231  1E50  0CF2               	rrf	i1___aldiv@divisor+2,f
 13232  1E51  0CF1               	rrf	i1___aldiv@divisor+1,f
 13233  1E52  0CF0               	rrf	i1___aldiv@divisor,f
 13234  1E53  0B89               	decfsz	9,f
 13235  1E54  2E4F               	goto	u626_25
 13236  1E55  3001               	movlw	1
 13237  1E56  02A0               	subwf	i1___aldiv@counter,f
 13238  1E57  1D03               	btfss	3,2
 13239  1E58  2E2E               	goto	i1l4675
 13240  1E59                     i1l4687:	
 13241  1E59  0821               	movf	i1___aldiv@sign,w
 13242  1E5A  1903               	btfsc	3,2
 13243  1E5B  2E67               	goto	i1l4691
 13244  1E5C  09A2               	comf	i1___aldiv@quotient,f
 13245  1E5D  09A3               	comf	i1___aldiv@quotient+1,f
 13246  1E5E  09A4               	comf	i1___aldiv@quotient+2,f
 13247  1E5F  09A5               	comf	i1___aldiv@quotient+3,f
 13248  1E60  0AA2               	incf	i1___aldiv@quotient,f
 13249  1E61  1903               	skipnz
 13250  1E62  0AA3               	incf	i1___aldiv@quotient+1,f
 13251  1E63  1903               	skipnz
 13252  1E64  0AA4               	incf	i1___aldiv@quotient+2,f
 13253  1E65  1903               	skipnz
 13254  1E66  0AA5               	incf	i1___aldiv@quotient+3,f
 13255  1E67                     i1l4691:	
 13256  1E67  0825               	movf	i1___aldiv@quotient+3,w
 13257  1E68  00F3               	movwf	?i1___aldiv+3
 13258  1E69  0824               	movf	i1___aldiv@quotient+2,w
 13259  1E6A  00F2               	movwf	?i1___aldiv+2
 13260  1E6B  0823               	movf	i1___aldiv@quotient+1,w
 13261  1E6C  00F1               	movwf	?i1___aldiv+1
 13262  1E6D  0822               	movf	i1___aldiv@quotient,w
 13263  1E6E  00F0               	movwf	?i1___aldiv
 13264  1E6F  0008               	return
 13265  1E70                     __end_ofi1___aldiv:	
 13266                           
 13267                           	psect	text42
 13268  1982                     __ptext42:	
 13269 ;; *************** function i1_Update_PWM *****************
 13270 ;; Defined at:
 13271 ;;		line 1150 in file "main.c"
 13272 ;; Parameters:    Size  Location     Type
 13273 ;;  setwsduty       2    0[COMMON] unsigned int 
 13274 ;; Auto vars:     Size  Location     Type
 13275 ;;  Update_PWM      2    6[COMMON] unsigned int 
 13276 ;;  Update_PWM      2    4[COMMON] unsigned int 
 13277 ;; Return value:  Size  Location     Type
 13278 ;;		None               void
 13279 ;; Registers used:
 13280 ;;		wreg, status,2, status,0
 13281 ;; Tracked objects:
 13282 ;;		On entry : 0/0
 13283 ;;		On exit  : 0/0
 13284 ;;		Unchanged: 0/0
 13285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13287 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13289 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13290 ;;Total ram usage:        8 bytes
 13291 ;; Hardware stack levels used:    1
 13292 ;; This function calls:
 13293 ;;		Nothing
 13294 ;; This function is called by:
 13295 ;;		_ISR_Function
 13296 ;; This function uses a non-reentrant model
 13297 ;;
 13298                           
 13299                           
 13300                           ;psect for function i1_Update_PWM
 13301  1982                     i1_Update_PWM:	
 13302                           
 13303                           ;main.c: 1152: unsigned int Temp1=0x00, Dutycnt=0;
 13304                           
 13305                           ;incstack = 0
 13306                           ; Regs used in i1_Update_PWM: [wreg+status,2+status,0]
 13307  1982  01F4               	clrf	i1Update_PWM@Temp1
 13308  1983  01F5               	clrf	i1Update_PWM@Temp1+1
 13309  1984  01F6               	clrf	i1Update_PWM@Dutycnt
 13310  1985  01F7               	clrf	i1Update_PWM@Dutycnt+1
 13311                           
 13312                           ;main.c: 1153: Dutycnt=setwsduty;
 13313  1986  0871               	movf	i1Update_PWM@setwsduty+1,w
 13314  1987  01F7               	clrf	i1Update_PWM@Dutycnt+1
 13315  1988  07F7               	addwf	i1Update_PWM@Dutycnt+1,f
 13316  1989  0870               	movf	i1Update_PWM@setwsduty,w
 13317  198A  01F6               	clrf	i1Update_PWM@Dutycnt
 13318  198B  07F6               	addwf	i1Update_PWM@Dutycnt,f
 13319                           
 13320                           ;main.c: 1154: CCP1CONbits.DC1B=Dutycnt;
 13321  198C  0876               	movf	i1Update_PWM@Dutycnt,w
 13322  198D  00F2               	movwf	??i1_Update_PWM
 13323  198E  0EF2               	swapf	??i1_Update_PWM,f
 13324  198F  0025               	movlb	5	; select bank5
 13325  1990  0813               	movf	19,w	;volatile
 13326  1991  0672               	xorwf	??i1_Update_PWM,w
 13327  1992  39CF               	andlw	-49
 13328  1993  0672               	xorwf	??i1_Update_PWM,w
 13329  1994  0093               	movwf	19	;volatile
 13330                           
 13331                           ;main.c: 1155: Temp1=Dutycnt >> 2;
 13332  1995  0877               	movf	i1Update_PWM@Dutycnt+1,w
 13333  1996  00F3               	movwf	??i1_Update_PWM+1
 13334  1997  0876               	movf	i1Update_PWM@Dutycnt,w
 13335  1998  00F2               	movwf	??i1_Update_PWM
 13336  1999  36F3               	lsrf	??i1_Update_PWM+1,f
 13337  199A  0CF2               	rrf	??i1_Update_PWM,f
 13338  199B  36F3               	lsrf	??i1_Update_PWM+1,f
 13339  199C  0CF2               	rrf	??i1_Update_PWM,f
 13340  199D  0872               	movf	??i1_Update_PWM,w
 13341  199E  00F4               	movwf	i1Update_PWM@Temp1
 13342  199F  0873               	movf	??i1_Update_PWM+1,w
 13343  19A0  00F5               	movwf	i1Update_PWM@Temp1+1
 13344                           
 13345                           ;main.c: 1156: CCPR1L=Temp1;
 13346  19A1  0874               	movf	i1Update_PWM@Temp1,w
 13347  19A2  0091               	movwf	17	;volatile
 13348  19A3  0008               	return
 13349  19A4                     __end_ofi1_Update_PWM:	
 13350                           
 13351                           	psect	text43
 13352  0571                     __ptext43:	
 13353 ;; *************** function _Display *****************
 13354 ;; Defined at:
 13355 ;;		line 8 in file "DISPLAY.C"
 13356 ;; Parameters:    Size  Location     Type
 13357 ;;		None
 13358 ;; Auto vars:     Size  Location     Type
 13359 ;;		None
 13360 ;; Return value:  Size  Location     Type
 13361 ;;		None               void
 13362 ;; Registers used:
 13363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13364 ;; Tracked objects:
 13365 ;;		On entry : 0/0
 13366 ;;		On exit  : 0/0
 13367 ;;		Unchanged: 0/0
 13368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13373 ;;Total ram usage:        2 bytes
 13374 ;; Hardware stack levels used:    1
 13375 ;; This function calls:
 13376 ;;		Nothing
 13377 ;; This function is called by:
 13378 ;;		_ISR_Function
 13379 ;; This function uses a non-reentrant model
 13380 ;;
 13381                           
 13382                           
 13383                           ;psect for function _Display
 13384  0571                     _Display:	
 13385                           
 13386                           ;DISPLAY.C: 10: PORTB=0x00;
 13387                           
 13388                           ;incstack = 0
 13389                           ; Regs used in _Display: [wreg-fsr1h+status,2+status,0+pclath]
 13390  0571  0020               	movlb	0	; select bank0
 13391  0572  018D               	clrf	13	;volatile
 13392                           
 13393                           ;DISPLAY.C: 11: if(digit<=5)
 13394  0573  3006               	movlw	6
 13395  0574  025C               	subwf	_digit,w
 13396  0575  1C03               	btfss	3,0
 13397  0576  2E25               	goto	i1l4063
 13398  0577  2E31               	goto	i1l4065
 13399  0578                     i1l427:	
 13400                           ;DISPLAY.C: 14: {
 13401                           ;DISPLAY.C: 15: case 0:
 13402                           
 13403                           ;DISPLAY.C: 12: {
 13404                           ;DISPLAY.C: 13: switch(digit)
 13405                           
 13406                           
 13407                           ;DISPLAY.C: 16: LATCbits.LATC4=0;
 13408  0578  0022               	movlb	2	; select bank2
 13409  0579  120E               	bcf	14,4	;volatile
 13410                           
 13411                           ;DISPLAY.C: 17: LATAbits.LATA6=0;
 13412  057A  130C               	bcf	12,6	;volatile
 13413                           
 13414                           ;DISPLAY.C: 18: LATAbits.LATA7=0;
 13415  057B  138C               	bcf	12,7	;volatile
 13416                           
 13417                           ;DISPLAY.C: 19: LATB=lookup_table[diswin1[digit]];
 13418  057C  0020               	movlb	0	; select bank0
 13419  057D  085C               	movf	_digit,w
 13420  057E  3E64               	addlw	_diswin1& (0+255)
 13421  057F  0086               	movwf	6
 13422  0580  3001               	movlw	1	; select bank2/3
 13423  0581  0087               	movwf	7
 13424  0582  0801               	movf	1,w
 13425  0583  00F0               	movwf	??_Display
 13426  0584  01F1               	clrf	??_Display+1
 13427  0585  35F0               	lslf	??_Display,f
 13428  0586  0DF1               	rlf	??_Display+1,f
 13429  0587  3000               	movlw	low (_lookup_table| (0+32768))
 13430  0588  0770               	addwf	??_Display,w
 13431  0589  0084               	movwf	4
 13432  058A  3098               	movlw	high (_lookup_table| (0+32768))
 13433  058B  3D71               	addwfc	??_Display+1,w
 13434  058C  0085               	movwf	5
 13435  058D  0800               	movf	0,w	;code access
 13436  058E  0022               	movlb	2	; select bank2
 13437  058F  008D               	movwf	13	;volatile
 13438                           
 13439                           ;DISPLAY.C: 20: if(TypeDP.TypeD.digitdp1==1)
 13440  0590  0020               	movlb	0	; select bank0
 13441  0591  1C6B               	btfss	_TypeDP,0
 13442  0592  2E22               	goto	i1l444
 13443  0593  2E1F               	goto	i1l4059
 13444  0594                     i1l431:	
 13445                           ;DISPLAY.C: 25: case 1:
 13446                           
 13447                           ;DISPLAY.C: 24: break;
 13448                           
 13449                           ;DISPLAY.C: 22: else
 13450                           ;DISPLAY.C: 23: LATBbits.LATB7=0;
 13451                           
 13452                           ;DISPLAY.C: 21: LATBbits.LATB7=1;
 13453                           
 13454                           
 13455                           ;DISPLAY.C: 26: LATCbits.LATC4=1;
 13456  0594  0022               	movlb	2	; select bank2
 13457  0595  160E               	bsf	14,4	;volatile
 13458                           
 13459                           ;DISPLAY.C: 27: LATAbits.LATA6=0;
 13460  0596  130C               	bcf	12,6	;volatile
 13461                           
 13462                           ;DISPLAY.C: 28: LATAbits.LATA7=0;
 13463  0597  138C               	bcf	12,7	;volatile
 13464                           
 13465                           ;DISPLAY.C: 29: LATB=lookup_table[diswin1[digit]];
 13466  0598  0020               	movlb	0	; select bank0
 13467  0599  085C               	movf	_digit,w
 13468  059A  3E64               	addlw	_diswin1& (0+255)
 13469  059B  0086               	movwf	6
 13470  059C  3001               	movlw	1	; select bank2/3
 13471  059D  0087               	movwf	7
 13472  059E  0801               	movf	1,w
 13473  059F  00F0               	movwf	??_Display
 13474  05A0  01F1               	clrf	??_Display+1
 13475  05A1  35F0               	lslf	??_Display,f
 13476  05A2  0DF1               	rlf	??_Display+1,f
 13477  05A3  3000               	movlw	low (_lookup_table| (0+32768))
 13478  05A4  0770               	addwf	??_Display,w
 13479  05A5  0084               	movwf	4
 13480  05A6  3098               	movlw	high (_lookup_table| (0+32768))
 13481  05A7  3D71               	addwfc	??_Display+1,w
 13482  05A8  0085               	movwf	5
 13483  05A9  0800               	movf	0,w	;code access
 13484  05AA  0022               	movlb	2	; select bank2
 13485  05AB  008D               	movwf	13	;volatile
 13486                           
 13487                           ;DISPLAY.C: 30: if(TypeDP.TypeD.digitdp2==1)
 13488  05AC  0020               	movlb	0	; select bank0
 13489  05AD  1CEB               	btfss	_TypeDP,1
 13490  05AE  2E22               	goto	i1l444
 13491  05AF  2E1F               	goto	i1l4059
 13492  05B0                     i1l434:	
 13493                           ;DISPLAY.C: 35: case 2:
 13494                           
 13495                           ;DISPLAY.C: 34: break;
 13496                           
 13497                           ;DISPLAY.C: 32: else
 13498                           ;DISPLAY.C: 33: LATBbits.LATB7=0;
 13499                           
 13500                           ;DISPLAY.C: 31: LATBbits.LATB7=1;
 13501                           
 13502                           
 13503                           ;DISPLAY.C: 36: LATCbits.LATC4=0;
 13504  05B0  0022               	movlb	2	; select bank2
 13505  05B1  120E               	bcf	14,4	;volatile
 13506                           
 13507                           ;DISPLAY.C: 37: LATAbits.LATA6=1;
 13508  05B2  170C               	bsf	12,6	;volatile
 13509                           
 13510                           ;DISPLAY.C: 38: LATAbits.LATA7=0;
 13511  05B3  138C               	bcf	12,7	;volatile
 13512                           
 13513                           ;DISPLAY.C: 39: LATB=lookup_table[diswin1[digit]];
 13514  05B4  0020               	movlb	0	; select bank0
 13515  05B5  085C               	movf	_digit,w
 13516  05B6  3E64               	addlw	_diswin1& (0+255)
 13517  05B7  0086               	movwf	6
 13518  05B8  3001               	movlw	1	; select bank2/3
 13519  05B9  0087               	movwf	7
 13520  05BA  0801               	movf	1,w
 13521  05BB  00F0               	movwf	??_Display
 13522  05BC  01F1               	clrf	??_Display+1
 13523  05BD  35F0               	lslf	??_Display,f
 13524  05BE  0DF1               	rlf	??_Display+1,f
 13525  05BF  3000               	movlw	low (_lookup_table| (0+32768))
 13526  05C0  0770               	addwf	??_Display,w
 13527  05C1  0084               	movwf	4
 13528  05C2  3098               	movlw	high (_lookup_table| (0+32768))
 13529  05C3  3D71               	addwfc	??_Display+1,w
 13530  05C4  0085               	movwf	5
 13531  05C5  0800               	movf	0,w	;code access
 13532  05C6  0022               	movlb	2	; select bank2
 13533  05C7  008D               	movwf	13	;volatile
 13534                           
 13535                           ;DISPLAY.C: 40: if(TypeDP.TypeD.digitdp3==1)
 13536  05C8  0020               	movlb	0	; select bank0
 13537  05C9  1D6B               	btfss	_TypeDP,2
 13538  05CA  2E22               	goto	i1l444
 13539  05CB  2E1F               	goto	i1l4059
 13540  05CC                     i1l437:	
 13541                           ;DISPLAY.C: 45: case 3:
 13542                           
 13543                           ;DISPLAY.C: 44: break;
 13544                           
 13545                           ;DISPLAY.C: 42: else
 13546                           ;DISPLAY.C: 43: LATBbits.LATB7=0;
 13547                           
 13548                           ;DISPLAY.C: 41: LATBbits.LATB7=1;
 13549                           
 13550                           
 13551                           ;DISPLAY.C: 46: LATCbits.LATC4=1;
 13552  05CC  0022               	movlb	2	; select bank2
 13553  05CD  160E               	bsf	14,4	;volatile
 13554                           
 13555                           ;DISPLAY.C: 47: LATAbits.LATA6=1;
 13556  05CE  170C               	bsf	12,6	;volatile
 13557                           
 13558                           ;DISPLAY.C: 48: LATAbits.LATA7=0;
 13559  05CF  138C               	bcf	12,7	;volatile
 13560                           
 13561                           ;DISPLAY.C: 49: LATB=lookup_table[diswin1[digit]];
 13562  05D0  0020               	movlb	0	; select bank0
 13563  05D1  085C               	movf	_digit,w
 13564  05D2  3E64               	addlw	_diswin1& (0+255)
 13565  05D3  0086               	movwf	6
 13566  05D4  3001               	movlw	1	; select bank2/3
 13567  05D5  0087               	movwf	7
 13568  05D6  0801               	movf	1,w
 13569  05D7  00F0               	movwf	??_Display
 13570  05D8  01F1               	clrf	??_Display+1
 13571  05D9  35F0               	lslf	??_Display,f
 13572  05DA  0DF1               	rlf	??_Display+1,f
 13573  05DB  3000               	movlw	low (_lookup_table| (0+32768))
 13574  05DC  0770               	addwf	??_Display,w
 13575  05DD  0084               	movwf	4
 13576  05DE  3098               	movlw	high (_lookup_table| (0+32768))
 13577  05DF  3D71               	addwfc	??_Display+1,w
 13578  05E0  0085               	movwf	5
 13579  05E1  0800               	movf	0,w	;code access
 13580  05E2  0022               	movlb	2	; select bank2
 13581  05E3  008D               	movwf	13	;volatile
 13582                           
 13583                           ;DISPLAY.C: 50: if(TypeDP.TypeD.digitdp4==1)
 13584  05E4  0020               	movlb	0	; select bank0
 13585  05E5  1DEB               	btfss	_TypeDP,3
 13586  05E6  2E22               	goto	i1l444
 13587  05E7  2E1F               	goto	i1l4059
 13588  05E8                     i1l440:	
 13589                           ;DISPLAY.C: 55: case 4:
 13590                           
 13591                           ;DISPLAY.C: 54: break;
 13592                           
 13593                           ;DISPLAY.C: 52: else
 13594                           ;DISPLAY.C: 53: LATBbits.LATB7=0;
 13595                           
 13596                           ;DISPLAY.C: 51: LATBbits.LATB7=1;
 13597                           
 13598                           
 13599                           ;DISPLAY.C: 56: LATCbits.LATC4=0;
 13600  05E8  0022               	movlb	2	; select bank2
 13601  05E9  120E               	bcf	14,4	;volatile
 13602                           
 13603                           ;DISPLAY.C: 57: LATAbits.LATA6=0;
 13604  05EA  130C               	bcf	12,6	;volatile
 13605                           
 13606                           ;DISPLAY.C: 58: LATAbits.LATA7=1;
 13607  05EB  178C               	bsf	12,7	;volatile
 13608                           
 13609                           ;DISPLAY.C: 59: LATB=lookup_table[diswin1[digit]];
 13610  05EC  0020               	movlb	0	; select bank0
 13611  05ED  085C               	movf	_digit,w
 13612  05EE  3E64               	addlw	_diswin1& (0+255)
 13613  05EF  0086               	movwf	6
 13614  05F0  3001               	movlw	1	; select bank2/3
 13615  05F1  0087               	movwf	7
 13616  05F2  0801               	movf	1,w
 13617  05F3  00F0               	movwf	??_Display
 13618  05F4  01F1               	clrf	??_Display+1
 13619  05F5  35F0               	lslf	??_Display,f
 13620  05F6  0DF1               	rlf	??_Display+1,f
 13621  05F7  3000               	movlw	low (_lookup_table| (0+32768))
 13622  05F8  0770               	addwf	??_Display,w
 13623  05F9  0084               	movwf	4
 13624  05FA  3098               	movlw	high (_lookup_table| (0+32768))
 13625  05FB  3D71               	addwfc	??_Display+1,w
 13626  05FC  0085               	movwf	5
 13627  05FD  0800               	movf	0,w	;code access
 13628  05FE  0022               	movlb	2	; select bank2
 13629  05FF  008D               	movwf	13	;volatile
 13630                           
 13631                           ;DISPLAY.C: 60: if(TypeDP.TypeD.digitdp5==1)
 13632  0600  0020               	movlb	0	; select bank0
 13633  0601  1E6B               	btfss	_TypeDP,4
 13634  0602  2E22               	goto	i1l444
 13635  0603  2E1F               	goto	i1l4059
 13636  0604                     i1l443:	
 13637                           ;DISPLAY.C: 65: case 5:
 13638                           
 13639                           ;DISPLAY.C: 64: break;
 13640                           
 13641                           ;DISPLAY.C: 62: else
 13642                           ;DISPLAY.C: 63: LATBbits.LATB7=0;
 13643                           
 13644                           ;DISPLAY.C: 61: LATBbits.LATB7=1;
 13645                           
 13646                           
 13647                           ;DISPLAY.C: 66: LATCbits.LATC4=1;
 13648  0604  0022               	movlb	2	; select bank2
 13649  0605  160E               	bsf	14,4	;volatile
 13650                           
 13651                           ;DISPLAY.C: 67: LATAbits.LATA6=0;
 13652  0606  130C               	bcf	12,6	;volatile
 13653                           
 13654                           ;DISPLAY.C: 68: LATAbits.LATA7=1;
 13655  0607  178C               	bsf	12,7	;volatile
 13656                           
 13657                           ;DISPLAY.C: 69: LATB=lookup_table[diswin1[digit]];
 13658  0608  0020               	movlb	0	; select bank0
 13659  0609  085C               	movf	_digit,w
 13660  060A  3E64               	addlw	_diswin1& (0+255)
 13661  060B  0086               	movwf	6
 13662  060C  3001               	movlw	1	; select bank2/3
 13663  060D  0087               	movwf	7
 13664  060E  0801               	movf	1,w
 13665  060F  00F0               	movwf	??_Display
 13666  0610  01F1               	clrf	??_Display+1
 13667  0611  35F0               	lslf	??_Display,f
 13668  0612  0DF1               	rlf	??_Display+1,f
 13669  0613  3000               	movlw	low (_lookup_table| (0+32768))
 13670  0614  0770               	addwf	??_Display,w
 13671  0615  0084               	movwf	4
 13672  0616  3098               	movlw	high (_lookup_table| (0+32768))
 13673  0617  3D71               	addwfc	??_Display+1,w
 13674  0618  0085               	movwf	5
 13675  0619  0800               	movf	0,w	;code access
 13676  061A  0022               	movlb	2	; select bank2
 13677  061B  008D               	movwf	13	;volatile
 13678                           
 13679                           ;DISPLAY.C: 70: if(TypeDP.TypeD.digitdp6==1)
 13680  061C  0020               	movlb	0	; select bank0
 13681  061D  1EEB               	btfss	_TypeDP,5
 13682  061E  2E22               	goto	i1l444
 13683  061F                     i1l4059:	
 13684                           
 13685                           ;DISPLAY.C: 71: LATBbits.LATB7=1;
 13686  061F  0022               	movlb	2	; select bank2
 13687  0620  178D               	bsf	13,7	;volatile
 13688  0621  2EA9               	goto	i1l4133
 13689  0622                     i1l444:	
 13690                           
 13691                           ;DISPLAY.C: 72: else
 13692                           ;DISPLAY.C: 73: LATBbits.LATB7=0;
 13693  0622  0022               	movlb	2	; select bank2
 13694  0623  138D               	bcf	13,7	;volatile
 13695                           
 13696                           ;DISPLAY.C: 77: }
 13697                           
 13698                           ;DISPLAY.C: 76: break;
 13699                           
 13700                           ;DISPLAY.C: 75: default:
 13701                           
 13702                           ;DISPLAY.C: 74: break;
 13703  0624  2EA9               	goto	i1l4133
 13704  0625                     i1l4063:	
 13705  0625  0020               	movlb	0	; select bank0
 13706  0626  085C               	movf	_digit,w
 13707                           
 13708                           ; Switch size 1, requested type "space"
 13709                           ; Number of cases is 6, Range of values is 0 to 5
 13710                           ; switch strategies available:
 13711                           ; Name         Instructions Cycles
 13712                           ; direct_byte           18     6 (fixed)
 13713                           ; simple_byte           19    10 (average)
 13714                           ; jumptable            260     6 (fixed)
 13715                           ;	Chosen strategy is direct_byte
 13716  0627  0084               	movwf	4
 13717  0628  3006               	movlw	6
 13718  0629  0204               	subwf	4,w
 13719  062A  1803               	skipnc
 13720  062B  2EA9               	goto	i1l4133
 13721  062C  3198               	movlp	high i1S5743
 13722  062D  3504               	lslf	4,w
 13723  062E  3E6E               	addlw	low i1S5743
 13724  062F  0082               	movwf	2
 13725                           
 13726                           ;DISPLAY.C: 78: }
 13727  0630  2EA9               	goto	i1l4133
 13728  0631                     i1l4065:	
 13729                           
 13730                           ;DISPLAY.C: 79: else if(digit == 6)
 13731  0631  085C               	movf	_digit,w
 13732  0632  3A06               	xorlw	6
 13733  0633  1D03               	skipz
 13734  0634  2E3C               	goto	i1l4071
 13735                           
 13736                           ;DISPLAY.C: 80: {
 13737                           ;DISPLAY.C: 81: LATCbits.LATC4=0;
 13738  0635  0022               	movlb	2	; select bank2
 13739  0636  120E               	bcf	14,4	;volatile
 13740                           
 13741                           ;DISPLAY.C: 82: LATAbits.LATA6=1;
 13742  0637  170C               	bsf	12,6	;volatile
 13743                           
 13744                           ;DISPLAY.C: 83: LATAbits.LATA7=1;
 13745  0638  178C               	bsf	12,7	;volatile
 13746                           
 13747                           ;DISPLAY.C: 85: LATB=TypeU.LEDGROUP[0];
 13748  0639  0020               	movlb	0	; select bank0
 13749  063A  0867               	movf	_TypeU,w
 13750  063B  2E47               	goto	L25
 13751  063C                     i1l4071:	
 13752                           ;DISPLAY.C: 86: }
 13753                           
 13754                           
 13755                           ;DISPLAY.C: 87: else if(digit == 7)
 13756  063C  0020               	movlb	0	; select bank0
 13757  063D  085C               	movf	_digit,w
 13758  063E  3A07               	xorlw	7
 13759  063F  1D03               	skipz
 13760  0640  2E4A               	goto	i1l4077
 13761                           
 13762                           ;DISPLAY.C: 88: {
 13763                           ;DISPLAY.C: 89: LATCbits.LATC4=1;
 13764  0641  0022               	movlb	2	; select bank2
 13765  0642  160E               	bsf	14,4	;volatile
 13766                           
 13767                           ;DISPLAY.C: 90: LATAbits.LATA6=1;
 13768  0643  170C               	bsf	12,6	;volatile
 13769                           
 13770                           ;DISPLAY.C: 91: LATAbits.LATA7=1;
 13771  0644  178C               	bsf	12,7	;volatile
 13772                           
 13773                           ;DISPLAY.C: 93: LATB=TypeU.LEDGROUP[1];
 13774  0645  0020               	movlb	0	; select bank0
 13775  0646  0868               	movf	_TypeU+1,w
 13776  0647                     L25:	
 13777  0647  0022               	movlb	2	; select bank2
 13778  0648  008D               	movwf	13	;volatile
 13779                           
 13780                           ;DISPLAY.C: 95: }
 13781  0649  2EA9               	goto	i1l4133
 13782  064A                     i1l4077:	
 13783                           
 13784                           ;DISPLAY.C: 96: else if(digit == 8)
 13785  064A  0020               	movlb	0	; select bank0
 13786  064B  085C               	movf	_digit,w
 13787  064C  3A08               	xorlw	8
 13788  064D  1D03               	skipz
 13789  064E  2EA9               	goto	i1l4133
 13790                           
 13791                           ;DISPLAY.C: 97: {
 13792                           ;DISPLAY.C: 98: TRISB=0X0F;
 13793  064F  300F               	movlw	15
 13794  0650  0021               	movlb	1	; select bank1
 13795  0651  008D               	movwf	13	;volatile
 13796                           
 13797                           ;DISPLAY.C: 99: for(i=0;i>=100;i++);
 13798  0652  0020               	movlb	0	; select bank0
 13799  0653  01DF               	clrf	_i
 13800  0654  3064               	movlw	100
 13801  0655  025F               	subwf	_i,w
 13802  0656  1C03               	btfss	3,0
 13803  0657  2E60               	goto	i1l4091
 13804  0658                     i1l4087:	
 13805  0658  3001               	movlw	1
 13806  0659  00F0               	movwf	??_Display
 13807  065A  0870               	movf	??_Display,w
 13808  065B  07DF               	addwf	_i,f
 13809  065C  3064               	movlw	100
 13810  065D  025F               	subwf	_i,w
 13811  065E  1803               	skipnc
 13812  065F  2E58               	goto	i1l4087
 13813  0660                     i1l4091:	
 13814                           
 13815                           ;DISPLAY.C: 100: portbstatus=PORTB;
 13816  0660  080D               	movf	13,w	;volatile
 13817  0661  00F0               	movwf	??_Display
 13818  0662  0870               	movf	??_Display,w
 13819  0663  00E2               	movwf	_portbstatus	;volatile
 13820                           
 13821                           ;DISPLAY.C: 101: for(i=0;i>=200;i++);
 13822  0664  01DF               	clrf	_i
 13823  0665  30C8               	movlw	200
 13824  0666  025F               	subwf	_i,w
 13825  0667  1C03               	btfss	3,0
 13826  0668  2E71               	goto	i1l4103
 13827  0669                     i1l4099:	
 13828  0669  3001               	movlw	1
 13829  066A  00F0               	movwf	??_Display
 13830  066B  0870               	movf	??_Display,w
 13831  066C  07DF               	addwf	_i,f
 13832  066D  30C8               	movlw	200
 13833  066E  025F               	subwf	_i,w
 13834  066F  1803               	skipnc
 13835  0670  2E69               	goto	i1l4099
 13836  0671                     i1l4103:	
 13837                           
 13838                           ;DISPLAY.C: 102: if(pportb==portbstatus)
 13839  0671  0022               	movlb	2	; select bank2
 13840  0672  0851               	movf	_pportb^(0+256),w	;volatile
 13841  0673  0020               	movlb	0	; select bank0
 13842  0674  0662               	xorwf	_portbstatus,w	;volatile
 13843  0675  1D03               	skipz
 13844  0676  2E9F               	goto	i1l4127
 13845                           
 13846                           ;DISPLAY.C: 103: {
 13847                           ;DISPLAY.C: 104: temp=portbstatus;
 13848  0677  0862               	movf	_portbstatus,w	;volatile
 13849  0678  00F0               	movwf	??_Display
 13850  0679  0870               	movf	??_Display,w
 13851  067A  00E5               	movwf	_temp
 13852                           
 13853                           ;DISPLAY.C: 105: temp=(temp & 0x0F);
 13854  067B  0865               	movf	_temp,w
 13855  067C  390F               	andlw	15
 13856  067D  00F0               	movwf	??_Display
 13857  067E  0870               	movf	??_Display,w
 13858  067F  00E5               	movwf	_temp
 13859                           
 13860                           ;DISPLAY.C: 106: if(temp==0x01)
 13861  0680  0865               	movf	_temp,w
 13862  0681  3A01               	xorlw	1
 13863  0682  1D03               	skipz
 13864  0683  2E86               	goto	i1l4113
 13865                           
 13866                           ;DISPLAY.C: 107: key=1;
 13867  0684  3001               	movlw	1
 13868  0685  2E9A               	goto	L28
 13869  0686                     i1l4113:	
 13870                           
 13871                           ;DISPLAY.C: 108: else if(temp==0x02)
 13872  0686  0020               	movlb	0	; select bank0
 13873  0687  0865               	movf	_temp,w
 13874  0688  3A02               	xorlw	2
 13875  0689  1D03               	skipz
 13876  068A  2E8D               	goto	i1l4117
 13877                           
 13878                           ;DISPLAY.C: 109: key=2;
 13879  068B  3002               	movlw	2
 13880  068C  2E9A               	goto	L28
 13881  068D                     i1l4117:	
 13882                           
 13883                           ;DISPLAY.C: 110: else if(temp==0x04)
 13884  068D  0020               	movlb	0	; select bank0
 13885  068E  0865               	movf	_temp,w
 13886  068F  3A04               	xorlw	4
 13887  0690  1D03               	skipz
 13888  0691  2E94               	goto	i1l4121
 13889                           
 13890                           ;DISPLAY.C: 111: key=3;
 13891  0692  3003               	movlw	3
 13892  0693  2E9A               	goto	L28
 13893  0694                     i1l4121:	
 13894                           
 13895                           ;DISPLAY.C: 112: else if(temp==0x08)
 13896  0694  0020               	movlb	0	; select bank0
 13897  0695  0865               	movf	_temp,w
 13898  0696  3A08               	xorlw	8
 13899  0697  1D03               	skipz
 13900  0698  2E9F               	goto	i1l4127
 13901                           
 13902                           ;DISPLAY.C: 113: key=4;
 13903  0699  3004               	movlw	4
 13904  069A                     L28:	
 13905  069A  00F0               	movwf	??_Display
 13906  069B  0870               	movf	??_Display,w
 13907  069C  0021               	movlb	1	; select bank1
 13908  069D  00EF               	movwf	_key^(0+128)	;volatile
 13909  069E  2EA1               	goto	i1l4129
 13910  069F                     i1l4127:	
 13911                           ;DISPLAY.C: 116: }
 13912                           
 13913                           ;DISPLAY.C: 114: else
 13914                           ;DISPLAY.C: 115: key=0;
 13915                           
 13916                           
 13917                           ;DISPLAY.C: 117: else
 13918                           ;DISPLAY.C: 118: {
 13919                           ;DISPLAY.C: 119: key=0;
 13920  069F  0021               	movlb	1	; select bank1
 13921  06A0  01EF               	clrf	_key^(0+128)	;volatile
 13922  06A1                     i1l4129:	
 13923                           
 13924                           ;DISPLAY.C: 120: }
 13925                           ;DISPLAY.C: 121: pportb=portbstatus;
 13926  06A1  0020               	movlb	0	; select bank0
 13927  06A2  0862               	movf	_portbstatus,w	;volatile
 13928  06A3  00F0               	movwf	??_Display
 13929  06A4  0870               	movf	??_Display,w
 13930  06A5  0022               	movlb	2	; select bank2
 13931  06A6  00D1               	movwf	_pportb^(0+256)	;volatile
 13932                           
 13933                           ;DISPLAY.C: 122: TRISB=0X00;
 13934  06A7  0021               	movlb	1	; select bank1
 13935  06A8  018D               	clrf	13	;volatile
 13936  06A9                     i1l4133:	
 13937                           
 13938                           ;DISPLAY.C: 123: }
 13939                           ;DISPLAY.C: 124: if(++digit >=9)
 13940  06A9  3001               	movlw	1
 13941  06AA  00F0               	movwf	??_Display
 13942  06AB  0870               	movf	??_Display,w
 13943  06AC  0020               	movlb	0	; select bank0
 13944  06AD  07DC               	addwf	_digit,f
 13945  06AE  3009               	movlw	9
 13946  06AF  025C               	subwf	_digit,w
 13947  06B0  1C03               	skipc
 13948  06B1  0008               	return
 13949                           
 13950                           ;DISPLAY.C: 125: digit=0;
 13951  06B2  01DC               	clrf	_digit
 13952  06B3  0008               	return
 13953  06B4                     __end_of_Display:	
 13954  007E                     btemp	set	126	;btemp
 13955  007E                     pic14e$flags	set	126
 13956  007E                     wtemp	set	126
 13957  007E                     wtemp0	set	126
 13958  0080                     wtemp1	set	128
 13959  0082                     wtemp2	set	130
 13960  0084                     wtemp3	set	132
 13961  0086                     wtemp4	set	134
 13962  0088                     wtemp5	set	136
 13963  007F                     wtemp6	set	127
 13964  007E                     ttemp	set	126
 13965  007E                     ttemp0	set	126
 13966  0081                     ttemp1	set	129
 13967  0084                     ttemp2	set	132
 13968  0087                     ttemp3	set	135
 13969  007F                     ttemp4	set	127
 13970  007E                     ltemp	set	126
 13971  007E                     ltemp0	set	126
 13972  0082                     ltemp1	set	130
 13973  0086                     ltemp2	set	134
 13974  0080                     ltemp3	set	128
 13975  2396                     
 13976                           	psect	swtext1
 13977  186E                     __pswtext1:	
 13978  186E                     i1S5743:	
 13979  186E  3185  2D78         	ljmp	i1l427
 13980  1870  3185  2D94         	ljmp	i1l431
 13981  1872  3185  2DB0         	ljmp	i1l434
 13982  1874  3185  2DCC         	ljmp	i1l437
 13983  1876  3185  2DE8         	ljmp	i1l440
 13984  1878  3186  2E04         	ljmp	i1l443


Data Sizes:
    Strings     0
    Constant    110
    Data        33
    BSS         314
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      80
    BANK1            80     79      80
    BANK2            80      0      80
    BANK3            80      0      79
    BANK4            80      0      62
    BANK5            80      0      24
    BANK6            80      0      73
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           38      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_Function in COMMON

    _ISR_Function->i1___lwtoft
    i1___lwtoft->i1___ftpack
    i1___fttol->i1___lwtoft
    i1___ftmul->i1___lwtoft
    i1___ftdiv->i1___lwtoft
    i1___ftadd->i1___lwtoft

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_Function in BANK0

    _ISR_Function->i1___fttol
    i1___fttol->i1___ftadd
    i1___ftadd->i1___ftmul

Critical Paths under _main in BANK1

    _main->_Adaptive_base_pid
    _transmittops->_Send_Byte
    _send_status->_Send_Byte
    _key_application->_Update_PWM
    _disp_hex_window2->___lwdiv
    _disp_hex_window1->___lwdiv
    _detect_display_error->_Update_PWM
    _SCANENCODER2->_enc2_port
    _SCANENCODER1->_enc1_port
    _Adaptive_base_pid->_Update_PWM
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftadd
    ___ftge->___altoft
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _Update_PWM->___fttol

Critical Paths under _ISR_Function in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Function in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   42224
                                             77 BANK1      2     2      0
                  _Adaptive_base_pid
                            _Delayms
                           _PWM_init
                       _SCANENCODER1
                       _SCANENCODER2
                        _Timer0_init
                         _Update_PWM
                            ___ftmul
                            ___fttol
                           ___lwtoft
                             ___wmul
                       _capture_init
               _detect_display_error
                   _disp_hex_window1
                   _disp_hex_window2
                    _key_application
                       _portpin_init
                        _send_status
                        _system_init
                       _transmittops
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _transmittops                                         1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status                                          1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Send_Byte                                            1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _portpin_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_application                                      3     3      0    5155
                                             59 BANK1      3     3      0
                         _Update_PWM
                             ___wmul
                   _disp_hex_window2
 ---------------------------------------------------------------------------------
 (2) _disp_hex_window2                                     3     1      2    3377
                                              8 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window1                                     3     1      2    3313
                                              8 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1695
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1186
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _detect_display_error                                 1     1      0     808
                                             59 BANK1      1     1      0
                         _Update_PWM
 ---------------------------------------------------------------------------------
 (1) _capture_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER2                                         2     2      0     123
                                              5 BANK1      2     2      0
                          _enc2_port
 ---------------------------------------------------------------------------------
 (2) _enc2_port                                            5     5      0      94
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER1                                         2     2      0     123
                                              6 BANK1      2     2      0
                          _enc1_port
 ---------------------------------------------------------------------------------
 (2) _enc1_port                                            6     6      0      94
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delayms                                              6     4      2     286
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Adaptive_base_pid                                   18    18      0   19433
                                             59 BANK1     18    18      0
                         _Update_PWM
                            ___aldiv
                           ___altoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     860
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2799
                                              8 BANK1      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     866
                                             37 BANK1     14    10      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    4229
                                             21 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     392
                                             16 BANK1      9     3      6
                           ___altoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2699
                                             37 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3745
                                              8 BANK1     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    2353
                                              8 BANK1      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2087
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     504
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (2) _Update_PWM                                           8     6      2     808
                                             51 BANK1      8     6      2
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Function                                        11    11      0    4636
                                             12 COMMON     2     2      0
                                             43 BANK0      9     9      0
                            _Display
                       i1_Update_PWM
                          i1___aldiv
                          i1___ftadd
                          i1___ftdiv
                          i1___ftmul
                          i1___fttol
                         i1___lwtoft
 ---------------------------------------------------------------------------------
 (5) i1___lwtoft                                           4     1      3     621
                                              8 COMMON     4     1      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (5) i1___fttol                                           14    10      4     278
                                             29 BANK0     14    10      4
                          i1___ftadd (ARG)
                          i1___ftmul (ARG)
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftmul                                           16    10      6     951
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftdiv                                           16    10      6     853
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftadd                                           13     7      6    1413
                                             16 BANK0     13     7      6
                          i1___ftmul (ARG)
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___ftpack                                           8     3      5     521
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) i1___aldiv                                           15     7      8     352
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) i1_Update_PWM                                         8     6      2     144
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Display                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adaptive_base_pid
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___aldiv
     ___altoft
       ___ftpack
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
       ___altoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftneg
     ___fttol
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft
       ___ftpack
       ___wmul (ARG)
     ___wmul
   _Delayms
   _PWM_init
   _SCANENCODER1
     _enc1_port
   _SCANENCODER2
     _enc2_port
   _Timer0_init
   _Update_PWM
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___ftmul
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___fttol
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
     ___wmul (ARG)
   ___wmul
   _capture_init
   _detect_display_error
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
   _disp_hex_window1
     ___lwdiv
     ___lwmod
   _disp_hex_window2
     ___lwdiv
     ___lwmod
   _key_application
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _disp_hex_window2
       ___lwdiv
       ___lwmod
   _portpin_init
   _send_status
     _Send_Byte
   _system_init
   _transmittops
     _Send_Byte
   _uart_init

 _ISR_Function (ROOT)
   _Display
   i1_Update_PWM
   i1___aldiv
   i1___ftadd
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftpack (ARG)
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftdiv
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftmul
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___fttol
     i1___ftadd (ARG)
       i1___ftmul (ARG)
         i1___ftpack
         i1___lwtoft (ARG)
           i1___ftpack
       i1___ftpack (ARG)
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___lwtoft
     i1___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      3E      13       77.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      18      15       30.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      49      17       91.3%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1EC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              26      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1EC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Jan 02 10:40:58 2020

          Update_PWM@setwsduty 00D3                    _portbstatus 0062                    _updatedispf 01DE  
                 ___altoft@exp 00AE                     __CFG_CP$ON 0000                              _i 005F  
                            pc 0002                     i1___ftpack 1B66                  ___altoft@sign 00AF  
    __end_of_Adaptive_base_pid 1800                    __CFG_CPD$ON 0000                     i1___lwtoft 18FE  
          ___wmul@multiplicand 00A2                   _portpin_init 194E            __end_of_system_init 18A9  
                 ___ftadd@exp1 00B4                   ___ftadd@exp2 00B3                    __CFG_LVP$ON 0000  
                 ___ftadd@sign 00B2                            l540 174A                            l701 0CD9  
                          l710 0D5C                            l641 0A7F                            l625 0955  
                          l714 0D8C                            l483 07DD                            l811 11A3  
                          l715 0D8D                            l716 0F98                            l821 11DC  
                          l813 11AD                            l805 1185                            l725 0EF2  
                          l717 0E38                            l653 0B35                            l910 196D  
                          l726 0F29                            l718 0DE2                            l638 0A8A  
                          l815 11B7                            l807 118F                            l760 07BD  
                          l680 0BBD                            l809 1199                            l753 079F  
                          l690 0C10                            l691 0C20                            l659 0B26  
                          l693 0C33                            l758 07B7                            l686 0D86  
                 i1___ftadd@f1 0030                            l698 0C82                   i1___ftadd@f2 0033  
                          l795 0818                            l965 1E81                            l789 1897  
                          _PR2 001B                    _transmitonf 015A                            _One 01B0  
                          _Two 01B4                            _iii 023E                            _ijk 0122  
                          _key 00EF                            _lmn 0124                   i1___ftdiv@f1 0023  
                 i1___ftdiv@f2 0020                   i1___ftdiv@f3 002B                   __CFG_BORV$LO 0000  
                          wreg 0009                   i1___ftmul@f1 0020                   i1___ftmul@f2 0023  
                 i1___fttol@f1 003D                _key_application 06B4                 i1___aldiv@sign 0021  
                 ___ftdiv@cntr 00CF                   ___ftdiv@sign 00D4                           l1100 08FB  
                         l1071 1BF9                           l1077 1C10                           l4221 1DE6  
                         l4311 1604                           l4151 07EE                           l4215 1DDE  
                         l4207 1DCC                           l4223 1DEB                           l4313 160B  
                         l4153 07F9                           l3531 1BD6                           l4219 1DE2  
                         l3541 1BFE                           l3533 1BE0                           l4173 1D8F  
                         l4245 1D11                           l3711 1EA2                           l3703 1E92  
                         l3543 1C06                           l3535 1BE5                           l3527 1BCF  
                         l4343 1791                           l3631 1B5A                           l4183 1D9C  
                         l4255 1D1E                           l5311 09EE                           l5303 09E0  
                         l3721 1ED0                           l3713 1EB0                           l4353 17E5  
                         l4329 1706                           l4193 1DB0                           l4265 1D32  
                         l4505 06F4                           l3803 090D                           l4339 1783  
                         l4291 1D67                           l3571 1A21                           l3563 1A03  
                         l4507 06F7                           l5411 0B1E                           l5323 0A01  
                         l3725 1EDB                           l4349 17C7                           l3661 1AFB  
                         l4285 1D5F                           l4277 1D4D                           l4293 1D6C  
                         l3565 1A0F                           l4533 075C                           l4509 06FE  
                         l5405 0AF5                           l3743 1A82                           l3807 091F  
                         l3911 1339                           l4615 11C2                           l3575 1A2A  
                         l4535 0767                           l5351 0A4D                           l5335 0A1F  
                         l5327 0A13                           l5247 0963                           l3729 1EE9  
                         l3745 1A92                           l3817 093A                           l3761 088B  
                         l3833 10EF                           l4289 1D63                           l4617 11CA  
                         l3593 19EA                           l4537 0708                           l4481 0830  
                         l5441 0B76                           l5417 0B31                           l3827 10D9  
                         l3923 1355                           l3907 1331                           l3683 1967  
                         l4627 11E8                           l3587 19D2                           l4539 076C  
                         l4547 0790                           l5515 0C47                           l5523 0C5D  
                         l5435 0B61                           l5371 0AA7                           l3757 0884  
                         l4629 11E9                           l3589 19DE                           l3597 19F3  
                         l4557 07A6                           l4469 081A                           l5605 0D79  
                         l5445 0B7B                           l5429 0B50                           l5357 0A77  
                         l3791 08DA                           l3767 089A                           l3855 1149  
                         l3847 1130                           l3871 1A5E                           l3919 134D  
                         l4583 07C4                           l4559 07AA                           l5471 0BB3  
                         l5455 0B8F                           l5383 0ABE                           l5367 0A9B  
                         l5391 0ACD                           l5711 0FE6                           l3785 08C7  
                         l4585 07C5                           l4489 0851                           l5721 0FFC  
                         l5633 0E02                           l5561 0CFF                           l5449 0B7E  
                         l3787 08D1                           l3779 08B4                           l3867 1A48  
                         l3947 1F92                           l4587 07CC                           l5475 0BBA  
                         l5459 0B9B                           l5387 0AC4                           l3797 08ED  
                         l3789 08D6                           l3981 1FF7                           l3973 1FDD  
                         l3965 1FC2                           l5717 0FF3                           l5565 0D10  
                         l5549 0CC3                           l5389 0AC6                           l5477 0BBF  
                         l3799 08F7                           l3895 12F6                           l3975 1FE6  
                         l3967 1FD0                           l5671 0EE3                           l5559 0CED  
                         l3889 12E0                           l3977 1FE9                           l5665 0EDD  
                         l5489 0BDC                           l5667 0EDF                           l5587 0D30  
                         l5499 0C01                           l5597 0D53                           l5689 0FBD  
                         _LATB 010D                           u4215 1C01                           u5025 1356  
                         u5105 1FC3                           u4305 1A1A                           u5035 135C  
                         u4315 1A22                           u4245 1C17                           u4175 1BDB  
                         u5135 1FDE                           u4345 19D5                           u4515 1EB1  
                         u4195 1BF4                           u5075 1F99                           u4435 196E  
                         u4275 1A06                           u4525 1EC5                           u4445 1973  
                         u4365 19E4                           u4535 1ED1                           u4295 1A10  
                         u4375 19EB                           u4715 08C8                           u4495 1EA5  
                         u4575 1A87                           u4745 08DB                           u8025 0CD2  
                         _PIR1 0011                           u5803 16FA                           u4685 08B5  
                         u4845 1101                           u5813 1730                           u4775 08EE  
                         u4855 1111                           u5495 07E3                           u4865 1131  
                         u5825 177C                           u4875 1140                           u4955 1302  
                         u5835 1789                           u4885 114A                           u4965 1312  
                         u4985 133A                           u7705 0B07                           u4995 1340  
                         u7575 0A5F                           u7925 0BEE                           u7935 0BFA  
                         u7955 0C0B                           u7995 0C7B                           _TMR0 0015  
                         _OneH 012D                           _OneL 012E                   __CFG_WRT$OFF 0000  
                         _TwoH 012F                           _TwoL 0130                   _transmittops 0808  
                   _Actual_amp 01E3                           _old1 01BE                           _old2 01C0  
                         _new1 0054                           _new2 0056                           _main 0952  
                 ___ftpack@arg 00A0                     _Actual_vtg 01E5                   ___ftpack@exp 00A3  
                         _tans 0157                           _temp 0065                   i1___lwtoft@c 0078  
                         fsr0h 0005                           fsr1h 0007                           fsr0l 0004  
                         indf0 0000                           indf1 0001                           fsr1l 0006  
                         btemp 007E                  i1___ftdiv@exp 002E                           ltemp 007E  
                         start 04EC                           ttemp 007E                           wtemp 007E  
                __CFG_IESO$OFF 0000                __end_of_Delayms 07FE       disp_hex_window1@hex_data 00A8  
       ??_detect_display_error 00DB                  __CFG_MCLRE$ON 0000                   ___ftmul@cntr 00C3  
              __end_of_Display 06B4                   ___ftmul@sign 00C4                  i1___ftmul@exp 002A  
     disp_hex_window2@hex_data 00A8                   ___fttol@exp1 00D2                   ___fttol@lval 00CE  
                __CFG_PLLEN$ON 0000                   _torchstatus1 0158                   _torchstatus2 0159  
      i1___ftmul@f3_as_product 002B             enc2_port@portvalue 00A3                __end_of___aldiv 1EF2  
                        ?_main 0070                __end_of___ftadd 0952                  __CFG_WDTE$OFF 0000  
              __end_of___ftdiv 116B                __end_of___ftneg 1895                __end_of___ftmul 137D  
                        _T1CON 0018                __end_of___fttol 2000                __end_of___lwdiv 1A31  
                        i1l431 0594                          i1l440 05E8                __end_of___lwmod 19FA  
                        i1l434 05B0                          i1l443 0604                          i1l427 0578  
                        i1l444 0622                          i1l437 05CC                          i1l621 04CA  
                        i1l605 0373                          i1l615 0402                          i1l617 041F  
                        i1l618 0492                          i1l554 0033                          i1l619 04C1  
                        i1l574 00DE                          i1l593 02EC                          i1l578 04E7  
                        i1l965 1DFF                          _RCREG 0199                  ?_SCANENCODER1 0070  
                ?_SCANENCODER2 0070                          _TMR1H 0017                          _TMR1L 0016  
                        _SPBRG 019B                          _PORTA 000C                          _PORTB 000D  
                        _PORTC 000E                 i1___ftadd@exp1 003C                 i1___ftadd@exp2 003B  
                        _TORCH 016C                          _TRISA 008C                          _TRISB 008D  
                        _TRISC 008E                          _TXREG 019A                 i1___ftadd@sign 003A  
                        _TXSTA 019E                          _Count 012C                     _Hi_setppwm 01AC  
               __CFG_FCMEN$OFF 0000                   _wfstatusbyte 01DF                          _TypeU 0067  
                   _Displayarr 1858                          _iTest 023C                          _delay 022E  
                        _digit 005C           __end_of_capture_init 18FE                          _pfreq 0161  
                ___ftpack@sign 00A4                          _txonf 01DD                 __CFG_BOREN$OFF 0000  
                        ltemp0 007E                          ltemp1 0082                          ltemp2 0086  
                        ltemp3 0080                 i1___ftdiv@cntr 002A                 i1___ftdiv@sign 002F  
             __end_of_PWM_init 1019                          ttemp0 007E                          ttemp1 0081  
                        ttemp2 0084                          ttemp3 0087                          ttemp4 007F  
                        status 0003             __size_ofi1___aldiv 0082                          wtemp0 007E  
                        wtemp1 0080                          wtemp2 0082                          wtemp3 0084  
                        wtemp4 0086                          wtemp5 0088                          wtemp6 007F  
           __size_ofi1___ftadd 00F6             __size_ofi1___ftdiv 00A9             __size_ofi1___ftmul 00B4  
           __size_ofi1___fttol 0087                 i1___ftpack@arg 0070                 i1___ftpack@exp 0073  
              __initialization 04EE                    _system_init 189F                   __end_of_main 1000  
        _universal_error_latch 015C                    ?i1___ftpack 0070                 i1___ftmul@cntr 002E  
               i1___ftmul@sign 002F     __size_of_Adaptive_base_pid 038D                 __CFG_LPBOR$OFF 0000  
                  ?i1___lwtoft 0078                 i1___fttol@exp1 004A                 i1___fttol@lval 0046  
                       ??_main 00ED                  ___fttol@sign1 00CD        __end_of_key_application 07D6  
               ??_SCANENCODER1 00A6                 ??_SCANENCODER2 00A5                     _Lo_setppwm 01AE  
                _count_transms 022A               __end_of___altoft 1AAA                         i1S5743 186E  
                       _CCPR2H 0299                         _CCPR1L 0291                         _CCPR2L 0298  
                       _ANSELA 018C                         _ANSELB 018D               __end_of___ftpack 1C27  
                 _adaptivepidf 0131                         i1l1100 141C                         i1l1071 1B98  
                       i1l1077 1BAF                         i1l4001 1B84                         i1l4103 0671  
                       i1l4007 1B9D                         i1l4121 0694                         i1l4113 0686  
                       i1l4009 1BA5                         i1l5001 00B3                         i1l4117 068D  
                       i1l4133 06A9                         i1l5013 00E0                         i1l4127 069F  
                       i1l4071 063C                         i1l4063 0625                         i1l5023 00FC  
                       i1l4129 06A1                         i1l4065 0631                         i1l5201 03BB  
                       i1l5121 02F2                         i1l5017 00E8                         i1l5009 00CD  
                       i1l4091 0660                         i1l4059 061F                         i1l5131 0307  
                       i1l5107 02D1                         i1l5035 012C                         i1l5027 0108  
                       i1l5019 00EF                         i1l4077 064A                         i1l5221 0404  
                       i1l5109 02D3                         i1l4087 0658                         i1l5215 03E8  
                       i1l5209 03CB                         i1l5241 04DD                         i1l5153 033C  
                       i1l5145 031C                         i1l4099 0669                         i1l5235 04C8  
                       i1l5083 024A                         i1l5093 02B4                         i1l4703 13A5  
                       i1l5175 0385                         i1l5079 0244                         i1l4713 13BB  
                       i1l4801 10A0                         i1l5089 02AE                         i1l4731 13E8  
                       i1l4707 13AC                         i1l4733 13F2                         i1l4725 13D5  
                       i1l4821 1242                         i1l5189 0392                         i1l4743 140E  
                       i1l4735 13F7                         i1l4815 122C                         i1l4673 1E20  
                       i1l4665 1E10                         i1l4753 1440                         i1l4745 1418  
                       i1l4737 13FB                         i1l4833 127D                         i1l4691 1E67  
                       i1l4683 1E4E                         i1l4675 1E2E                         i1l4763 145B  
                       i1l4749 142E                         i1l4773 1030                         i1l4845 1299  
                       i1l4837 1285                         i1l4687 1E59                         i1l3993 1B6E  
                       i1l4793 1087                         i1l4849 12A1                         i1l4865 1F0B  
                       i1l4937 0037                         i1l4779 1046                         i1l4891 1F56  
                       i1l4883 1F3B                         i1l3997 1B75                         i1l4893 1F5F  
                       i1l4885 1F49                         i1l4981 0092                         i1l4949 0054  
                       i1l4973 0077                   ?_send_status 0070                         i1l3999 1B7F  
                       i1l4895 1F62                         i1l4991 00A2                         i1l4983 0094  
                       i1l4967 0065                         i1l4977 0080                         i1l4985 0097  
                       i1l4899 1F70                         u520_25 1B93               __end_of___lwtoft 1939  
                       u522_25 1BA0                         u525_25 1BB6                         u622_25 1E23  
                       u518_25 1B7A                         u702_25 014B                      ??_Delayms 00A2  
                       u703_25 0168                         u624_25 1E2F                         u625_25 1E43  
                       u641_25 13E9                         u705_25 01E0                         u626_25 1E4F  
                       u644_25 13FC                         u740_25 0466                         u725_25 034F  
                       u638_25 13D6                         u654_25 1058                         u670_25 12A8  
                       u662_25 124E                         u647_25 140F                         u655_25 1068  
                       u663_25 125E                         u656_25 1088                         u657_25 1097  
                       u665_25 1286                         u673_25 1F12                         u737_25 0412  
                       u658_25 10A1                         u666_25 128C                         u738_25 042C  
                       u739_25 0449                         u676_25 1F3C                         u669_25 12A2  
                       u679_25 1F57                      ??_Display 0070                 __CFG_PWRTE$OFF 0000  
                ??_Timer0_init 00A0                         _TypeDP 006B                         ___ftge 1A31  
                       _Tx_ptr 01D2                      ??___aldiv 00A8             __size_of_Send_Byte 000A  
                       ___wmul 1964              i1Update_PWM@Temp1 0074                      ??___ftadd 00AE  
               __CFG_STVREN$ON 0000                      ??___ftdiv 00CB                      ??___ftneg 00A3  
                    ??___ftmul 00BB                      ??___fttol 00C9                         _encod1 005D  
                       _encod2 005E                         _chksum 0135                      ??___lwdiv 00A4  
                    ??___lwmod 00A4                         _arrptr 0132                         _error4 01D6  
                       _error8 013E                         _erroru 015F                         _pcount 014A  
                       _pportb 0151                         _rxdata 0063              __end_ofi1___aldiv 1E70  
        ___ftmul@f3_as_product 00C0              __end_ofi1___ftadd 1473              __end_ofi1___ftdiv 10C2  
            __end_ofi1___ftmul 12C9              __end_ofi1___fttol 1F79                     _Update_PWM 19A4  
               _controller_out 0224            __size_ofi1___ftpack 0060                 _wfspeedchangef 016F  
      __end_of__initialization 056D                     ___altoft@c 00A8            __size_ofi1___lwtoft 0013  
                   ___ftadd@f1 00A8                     ___ftadd@f2 00AB                     ___ftge@ff1 00B0  
                   ___ftge@ff2 00B3                i1___ftpack@sign 0074                     ___ftdiv@f1 00C8  
                   ___ftdiv@f2 00C5                     ___ftdiv@f3 00D0                     ___ftneg@f1 00A0  
    __size_of_disp_hex_window1 0064      __size_of_disp_hex_window2 0066                     ___ftmul@f1 00B5  
                   ___ftmul@f2 00B8                     ___fttol@f1 00C5             __size_of_enc1_port 005F  
           __size_of_enc2_port 005D                 __pcstackCOMMON 0070              _ISR_Function$1180 007C  
                 __pidataBANK0 07FE                   __pidataBANK1 07FF                   __pidataBANK2 18C1  
                 __pidataBANK3 18CD                   __pidataBANK4 0804            __end_of_Timer0_init 18ED  
                   ___lwtoft@c 00A8                   _capintervalf 01D3               ?_key_application 0070  
        __size_of_capture_init 0011                      ?_PWM_init 0070                 _OPTION_REGbits 0095  
              i1___fttol@sign1 0045              __end_of_Send_Byte 189F              i1___aldiv@divisor 0070  
            i1___aldiv@counter 0020                     __pbssBANK0 0054                     __pbssBANK2 0120  
                   __pbssBANK3 01A0                     __pbssBANK4 0220                     __pbssBANK5 02A0  
                   __pbssBANK6 0320                __CFG_VCAPEN$OFF 0000                  ?_ISR_Function 0070  
         __end_of_SCANENCODER1 1DEE           __end_of_SCANENCODER2 1D6F                     __pmaintext 0952  
                      ?___ftge 00B0                        ?___wmul 00A0                   _capture_init 18ED  
                   __pintentry 0004                      ?___altoft 00A8                      ?___ftpack 00A0  
           SCANENCODER1@result 00A7             SCANENCODER2@result 00A6                      ?___lwtoft 00A8  
                   ??_PWM_init 00A0             __size_of_uart_init 0013                    ?_Update_PWM 00D3  
                   _creepspeed 022C              __end_of_enc1_port 1B66              __end_of_enc2_port 1B07  
                   _closeloopf 0136                     _displayonf 01ED                     _avgpperiod 015D  
                      _Delayms 07D6                 ??_ISR_Function 004B                        _Display 0571  
         __size_of_send_status 0015                     _cyclestrtf 013C                        _cEditfg 0133  
                  _Timer0_init 18DC                   ?_system_init 0070                     _pidParams2 2396  
                      ___aldiv 1E70                __size_of___ftge 003C  __size_of_detect_display_error 00AA  
                 ??i1___ftpack 0075                        ___ftadd 085C                        ___ftdiv 10C2  
                      ___ftneg 188C                __size_of___wmul 001E                        ___ftmul 12C9  
                      ___fttol 1F79                        ___lwdiv 19FA                        ___lwmod 19CB  
                 ??i1___lwtoft 007B                     ??___altoft 00AC                     _read_enc1f 0152  
                   ??___ftpack 00A5                        _delinch 01B8                        _gapfreq 023A  
                      __ptext1 1911                        __ptext2 0808                        __ptext3 189F  
                      __ptext4 1939                        __ptext5 1895                        __ptext6 194E  
                      __ptext7 06B4                        __ptext8 1C8B                        __ptext9 1C27  
                   _maxfmspeed 01E7                     ??___lwtoft 00AB                        _diswin1 0164  
                      _inchcnt 006C                     _parclength 025C                      _T2CONbits 001C  
                      _rec_arr 02A0                        _plus111 014B               ___aldiv@dividend 00A4  
                      _plus222 014C                        _onesecf 0061                     _minfmspeed 01E9  
                      _pperiod 01C2                        _prevkey 016E                        clrloop0 18B6  
         end_of_initialization 056D                     _minuspara1 0149                     _minuspara2 0060  
           __end_ofi1___ftpack 1BC6                        init_ram 18A9                        initloop 18AA  
           __end_ofi1___lwtoft 1911                     _kpressread 0142              Update_PWM@Dutycnt 00D9  
            __end_of_uart_init 1924               _disp_hex_window1 1C27               _disp_hex_window2 1C8B  
       _Adaptive_base_pid$1773 00E4         _Adaptive_base_pid$1774 00E7         _Adaptive_base_pid$1775 00EA  
          __size_of_Update_PWM 0027          i1Update_PWM@setwsduty 0070                   _crater_speed 013A  
                    _RCSTAbits 019D               ___aldiv@quotient 00AB                   __pstringtext 1800  
                   _setcurrent 0128                      _PORTAbits 000C                    _Total_Count 01B2  
                    _PORTCbits 000E                     _pluscount1 014D                     _pluscount2 014E  
             __CFG_FOSC$INTOSC 0000                     _setvoltage 0058                      _TRISAbits 008C  
                    _TRISCbits 008E                  _cWf2t4tmodefg 0134                      i1___aldiv 1DEE  
                    i1___ftadd 137D                      i1___ftdiv 1019                      i1___ftmul 1215  
                    i1___fttol 1EF2                     _softstartf 01DB          __size_of_SCANENCODER1 007F  
        __size_of_SCANENCODER2 007E                    _CCP1CONbits 0293                    ___ftdiv@exp 00D3  
                   _statusptr1 012A                    _CCP2CONbits 029A                      _TXSTAbits 019E  
                   _pstowfstru 0244                  ?i1_Update_PWM 0070                _newsetwirespeed 0069  
                  ___ftmul@exp 00BF             enc1_port@portvalue 00A4             __end_of_Displayarr 186E  
               __end_of___ftge 1A6D                 __end_of___wmul 1982                    _BAUDCTLbits 019F  
                ?_portpin_init 0070           __end_of_ISR_Function 04EC                   _SCANENCODER1 1D6F  
                 _SCANENCODER2 1CF1            start_initialization 04EE              __size_of_PWM_init 0019  
                   ?i1___aldiv 0070                     ?i1___ftadd 0030                     ?i1___ftdiv 0020  
                   ?i1___ftmul 0020                     ?i1___fttol 003D                  ?_transmittops 0070  
             _comm_error_count 0137                      _Send_Byte 1895                 ??i1_Update_PWM 0072  
                 _fixintervalf 01D9                  _rel_wirespeed 01CC           __end_of_lookup_table 1858  
                     ??___ftge 00B6                       ??___wmul 00A4                    __pdataBANK0 006F  
                  __pdataBANK1 00EF                    __pdataBANK2 0164                    __pdataBANK3 01E0  
                  __pdataBANK4 025A           __size_of_system_init 000A                 ??_portpin_init 00A0  
           i1___aldiv@dividend 0074                Update_PWM@Temp1 00D7                      _Tsampling 01E0  
              _scaled_baseval2 01CE              __size_of___altoft 003D                   Delayms@delay 00A0  
            __size_of___ftpack 0061                   ??_Update_PWM 00D5                    __pbssBIGRAM 2396  
                    ___latbits 0002        key_application@keypress 00DD              __size_of___lwtoft 0015  
                __pcstackBANK0 0020                  __pcstackBANK1 00A0       __size_of_key_application 0122  
               ??_transmittops 00A1                      _enc1_port 1B07                       ?_Delayms 00A0  
                    _enc2_port 1AAA             i1___aldiv@quotient 0022                     ?_Send_Byte 0070  
                     ?_Display 0070               ___lwdiv@dividend 00A2                   ?_Timer0_init 0070  
           __end_of_Update_PWM 19CB                       ?___aldiv 00A0                      _disp1term 0230  
                    _disp2term 0232                      _disp3term 0234                      _disp4term 0236  
                     ?___ftadd 00A8                       ?___ftdiv 00C5               _prevsetwirespeed 01C8  
                     ?___ftneg 00A0                       ?___ftmul 00B5                       ?___fttol 00C5  
                     ?___lwdiv 00A0                       ?___lwmod 00A0                      __pswtext1 186E  
                    _mili1_100 0143                      _mili2_100 0144                      _count_1ms 01B6  
                    _count_2ms 0139       __end_of_disp_hex_window1 1C8B       __end_of_disp_hex_window2 1CF1  
                    _count_pid 01D5                      _inchkeyon 01DA                    ??i1___aldiv 0078  
 __end_of_detect_display_error 1215                    ??i1___ftadd 0036                    ??i1___ftdiv 0026  
                 _integral_old 01A9                   _integral_new 01A6                    ??i1___ftmul 0026  
                  ??i1___fttol 0041               ___lwdiv@quotient 00A5                   _scalefactor2 01EB  
                    _error_old 01A3                      _error_new 01A0                  ??_send_status 00A1  
                    _recchksum 0153                     ?_enc1_port 0070                ___aldiv@divisor 00A0  
                   ?_enc2_port 0070                ___aldiv@counter 00A9                 ___wmul@product 00A4  
                     _LATAbits 010C                       _LATBbits 010D                       _LATCbits 010E  
                    _minoutmax 0227                      clear_ram0 18B5                      _recstatus 01CA  
                     _PIE1bits 0091                    _creep_speed 013B                       _PIE2bits 0092  
                    _prevTORCH 016D                       _PIR1bits 0011                       _PIR2bits 0012  
              _universal_error 015B                    _closeloop1f 01D4                      _uart_init 1911  
        __size_of_ISR_Function 04E8                      _pluspara1 014F                      _pluspara2 0150  
                    _togglepin 01EE              ___wmul@multiplier 00A0                       _PWM_init 1000  
                  _dispupdatef 006F                      _startptr1 0064                      _psstatusu 006D  
         __end_ofi1_Update_PWM 19A4                      _wfstatusu 006E                    _mahesh_test 025A  
                  _count_1msec 0138           __end_of_portpin_init 1964                       _Fltpfreq 0120  
                  ??_Send_Byte 00A0               __size_of_Delayms 0028                   _ISR_Function 0004  
             __size_of_Display 0143              ??_key_application 00DB            __end_of_send_status 194E  
                  _firstpulse1 013F                    _firstpulse2 0140                   _secondpulse1 0154  
                 _secondpulse2 0155                     ?_uart_init 0070               __size_of___aldiv 0082  
             __size_of___ftadd 00F6               __size_of___ftdiv 00A9               __size_of___ftneg 0009  
                     ___altoft 1A6D               __size_of___ftmul 00B4               __size_of___fttol 0087  
             __size_of___lwdiv 0037               __size_of___lwmod 002F           __end_of_transmittops 085C  
                     ___ftpack 1BC6                       ___lwtoft 1924            i1Update_PWM@Dutycnt 0076  
                 _send_statusf 0156                    _error_code1 01D7                    _error_code2 01D8  
                     _delinch1 01BA                   _lookup_table 1800                ___lwdiv@divisor 00A0  
              ___lwdiv@counter 00A7                       _gaschkfg 0141                       __ptext10 19CB  
                     __ptext11 19FA                       __ptext20 07D6                       __ptext12 116B  
                     __ptext21 1473                       __ptext13 18ED                       __ptext30 1A6D  
                     __ptext22 1964                       __ptext14 18DC                       __ptext31 1BC6  
                     __ptext23 1924                       __ptext15 1CF1                       __ptext40 1B66  
                     __ptext32 1E70                       __ptext24 1F79                       __ptext16 1AAA  
                     __ptext41 1DEE                       __ptext33 19A4                       __ptext25 188C  
                     __ptext17 1D6F                       __ptext42 1982                       __ptext26 12C9  
                     __ptext18 1B07                       __ptext43 0571                       __ptext35 18FE  
                     __ptext27 1A31                       __ptext19 1000                       __ptext36 1EF2  
                     __ptext28 10C2                       __ptext37 1215                       __ptext29 085C  
                     __ptext38 1019                       __ptext39 137D                       _enccount 013D  
                     _commandu 0163                       _igascntr 01BC             Send_Byte@transbyte 00A0  
                  ??_enc1_port 00A0                    ??_enc2_port 00A0                  __size_of_main 06AE  
                     _minus111 0145                       _minus222 0146                       _setpfreq 01D0  
                ?_capture_init 0070                       _weldmode 0066           _detect_display_error 116B  
         __size_of_Timer0_init 0011                       _torchonf 01DC                   _prevFltpfreq 0242  
                  _OSCTUNEbits 0098                     _INTCONbits 000B                    _PID_sParams 0320  
                  _minuscount1 0147                    _minuscount2 0148                    _recpsstatus 0126  
               _prevsetcurrent 01C4                    pic14e$flags 007E                     Delayms@xxx 00A2  
                   Delayms@yyy 00A4                       intlevel1 0000                    _send_status 1939  
             ___lwmod@dividend 00A2                 _prevsetvoltage 01C6              __CFG_CLKOUTEN$OFF 0000  
                   _OSCCONbits 0099                    _openloopcnt 0240                  ??_system_init 00A0  
               ??_capture_init 00A0          ?_detect_display_error 0070                    ??_uart_init 00A0  
        __size_ofi1_Update_PWM 0022              _Adaptive_base_pid 1473                  _disparclength 0238  
              ___lwmod@divisor 00A0             ?_Adaptive_base_pid 0070                ___lwmod@counter 00A5  
            ?_disp_hex_window1 00A8              ?_disp_hex_window2 00A8                   ___aldiv@sign 00AA  
        __size_of_portpin_init 0016             ??_disp_hex_window1 00AA             ??_disp_hex_window2 00AA  
                 _Total_Period 0220                   _setwirespeed 005A            ??_Adaptive_base_pid 00DB  
                 i1_Update_PWM 1982          __size_of_transmittops 0054  
