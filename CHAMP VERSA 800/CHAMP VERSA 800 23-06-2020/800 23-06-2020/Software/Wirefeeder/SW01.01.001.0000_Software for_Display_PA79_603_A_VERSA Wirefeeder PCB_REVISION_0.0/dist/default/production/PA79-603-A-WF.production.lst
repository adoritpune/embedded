

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jun 12 14:39:12 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	idataBANK4,global,class=CODE,delta=2
     9                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	psect	text42,local,class=CODE,merge=1,delta=2
    69                           	psect	text43,local,class=CODE,merge=1,delta=2
    70                           	psect	text44,local,class=CODE,merge=1,delta=2
    71                           	psect	text45,local,class=CODE,merge=1,delta=2
    72                           	psect	swtext1,local,class=CONST,delta=2
    73                           	dabs	1,0x620,48
    74                           	dabs	1,0x5CA,38
    75                           	dabs	1,0x239A,0,_pidParams2
    76                           	dabs	1,0x7E,2
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0113                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0118                     	;# 
   137  0119                     	;# 
   138  011A                     	;# 
   139  011B                     	;# 
   140  011C                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011E                     	;# 
   145  011F                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0191                     	;# 
   149  0191                     	;# 
   150  0192                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0194                     	;# 
   155  0195                     	;# 
   156  0196                     	;# 
   157  0197                     	;# 
   158  0199                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019D                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176  019E                     	;# 
   177  019E                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  020C                     	;# 
   184  020D                     	;# 
   185  020E                     	;# 
   186  0210                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0213                     	;# 
   193  0214                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0216                     	;# 
   201  0217                     	;# 
   202  0217                     	;# 
   203  028C                     	;# 
   204  028D                     	;# 
   205  028E                     	;# 
   206  0291                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0293                     	;# 
   210  0298                     	;# 
   211  0298                     	;# 
   212  0299                     	;# 
   213  029A                     	;# 
   214  030C                     	;# 
   215  030D                     	;# 
   216  030E                     	;# 
   217  0311                     	;# 
   218  0311                     	;# 
   219  0312                     	;# 
   220  0313                     	;# 
   221  038C                     	;# 
   222  038D                     	;# 
   223  038E                     	;# 
   224  0390                     	;# 
   225  0391                     	;# 
   226  0392                     	;# 
   227  0393                     	;# 
   228  0394                     	;# 
   229  0395                     	;# 
   230  0396                     	;# 
   231  0397                     	;# 
   232  0398                     	;# 
   233  0399                     	;# 
   234  039D                     	;# 
   235  039E                     	;# 
   236  039F                     	;# 
   237  0511                     	;# 
   238  0513                     	;# 
   239  051A                     	;# 
   240  0811                     	;# 
   241  0812                     	;# 
   242  0813                     	;# 
   243  0814                     	;# 
   244  0815                     	;# 
   245  0816                     	;# 
   246  0817                     	;# 
   247  0818                     	;# 
   248  0819                     	;# 
   249  081A                     	;# 
   250  081B                     	;# 
   251  081C                     	;# 
   252  081D                     	;# 
   253  081E                     	;# 
   254  081F                     	;# 
   255  0820                     	;# 
   256  0821                     	;# 
   257  0821                     	;# 
   258  0822                     	;# 
   259  0823                     	;# 
   260  0823                     	;# 
   261  0824                     	;# 
   262  0825                     	;# 
   263  0825                     	;# 
   264  0826                     	;# 
   265  0827                     	;# 
   266  0827                     	;# 
   267  0828                     	;# 
   268  0829                     	;# 
   269  082A                     	;# 
   270  082B                     	;# 
   271  082C                     	;# 
   272  082D                     	;# 
   273  082E                     	;# 
   274  082F                     	;# 
   275  0831                     	;# 
   276  0832                     	;# 
   277  0833                     	;# 
   278  0834                     	;# 
   279  0835                     	;# 
   280  0836                     	;# 
   281  0837                     	;# 
   282  0838                     	;# 
   283  0839                     	;# 
   284  083A                     	;# 
   285  083B                     	;# 
   286  083C                     	;# 
   287  083D                     	;# 
   288  083E                     	;# 
   289  083F                     	;# 
   290  0840                     	;# 
   291  0841                     	;# 
   292  0841                     	;# 
   293  0842                     	;# 
   294  0843                     	;# 
   295  0843                     	;# 
   296  0844                     	;# 
   297  0845                     	;# 
   298  0845                     	;# 
   299  0846                     	;# 
   300  0847                     	;# 
   301  0847                     	;# 
   302  0848                     	;# 
   303  0849                     	;# 
   304  084A                     	;# 
   305  084B                     	;# 
   306  084C                     	;# 
   307  084D                     	;# 
   308  084E                     	;# 
   309  084F                     	;# 
   310  0851                     	;# 
   311  0852                     	;# 
   312  0853                     	;# 
   313  0854                     	;# 
   314  0855                     	;# 
   315  0856                     	;# 
   316  0857                     	;# 
   317  0858                     	;# 
   318  0859                     	;# 
   319  085A                     	;# 
   320  085B                     	;# 
   321  085C                     	;# 
   322  085D                     	;# 
   323  085E                     	;# 
   324  085F                     	;# 
   325  0860                     	;# 
   326  0861                     	;# 
   327  0861                     	;# 
   328  0862                     	;# 
   329  0863                     	;# 
   330  0863                     	;# 
   331  0864                     	;# 
   332  0865                     	;# 
   333  0865                     	;# 
   334  0866                     	;# 
   335  0867                     	;# 
   336  0867                     	;# 
   337  0868                     	;# 
   338  0869                     	;# 
   339  086A                     	;# 
   340  086B                     	;# 
   341  086C                     	;# 
   342  086D                     	;# 
   343  086E                     	;# 
   344  086F                     	;# 
   345  0FE4                     	;# 
   346  0FE5                     	;# 
   347  0FE6                     	;# 
   348  0FE7                     	;# 
   349  0FE8                     	;# 
   350  0FE9                     	;# 
   351  0FEA                     	;# 
   352  0FEB                     	;# 
   353  0FED                     	;# 
   354  0FEE                     	;# 
   355  0FEF                     	;_pidParams2
   356                           
   357                           	psect	idataBANK0
   358  0003                     __pidataBANK0:	
   359                           
   360                           ;initializer for _dispupdatef
   361  0003  3401               	retlw	1
   362                           
   363                           	psect	idataBANK1
   364  0002                     __pidataBANK1:	
   365                           
   366                           ;initializer for _key
   367  0002  3458               	retlw	88
   368                           
   369                           	psect	idataBANK2
   370  18C8                     __pidataBANK2:	
   371                           
   372                           ;initializer for _diswin1
   373  18C8  3430               	retlw	48
   374  18C9  3430               	retlw	48
   375  18CA  3430               	retlw	48
   376  18CB  3430               	retlw	48
   377  18CC  3430               	retlw	48
   378  18CD  3430               	retlw	48
   379  18CE  3430               	retlw	48
   380  18CF  3430               	retlw	48
   381                           
   382                           ;initializer for _TORCH
   383  18D0  3458               	retlw	88
   384                           
   385                           ;initializer for _prevTORCH
   386  18D1  34FF               	retlw	255
   387                           
   388                           ;initializer for _prevkey
   389  18D2  345A               	retlw	90
   390                           
   391                           ;initializer for _wfspeedchangef
   392  18D3  3401               	retlw	1
   393                           
   394                           	psect	idataBANK3
   395  18D4                     __pidataBANK3:	
   396                           
   397                           ;initializer for _Tsampling
   398  18D4  3400               	retlw	0
   399  18D5  3480               	retlw	128
   400  18D6  343F               	retlw	63
   401                           
   402                           ;initializer for _Actual_amp
   403  18D7  34FF               	retlw	255
   404  18D8  34FF               	retlw	255
   405                           
   406                           ;initializer for _Actual_vtg
   407  18D9  34FF               	retlw	255
   408  18DA  34FF               	retlw	255
   409                           
   410                           ;initializer for _maxfmspeed
   411  18DB  3420               	retlw	32
   412  18DC  3403               	retlw	3
   413                           
   414                           ;initializer for _minfmspeed
   415  18DD  3432               	retlw	50
   416  18DE  3400               	retlw	0
   417                           
   418                           ;initializer for _scalefactor2
   419  18DF  3447               	retlw	71
   420  18E0  3400               	retlw	0
   421                           
   422                           ;initializer for _displayonf
   423  18E1  3401               	retlw	1
   424                           
   425                           ;initializer for _togglepin
   426  18E2  3401               	retlw	1
   427                           
   428                           	psect	idataBANK4
   429  188F                     __pidataBANK4:	
   430                           
   431                           ;initializer for _mahesh_test
   432  188F  3432               	retlw	50
   433  1890  3400               	retlw	0
   434                           
   435                           ;initializer for _parclength
   436  1891  34FF               	retlw	255
   437  1892  34FF               	retlw	255
   438                           
   439                           	psect	stringtext
   440  1800                     __pstringtext:	
   441  1800                     _lookup_table:	
   442  1800  343F               	retlw	63
   443  1801  3400               	retlw	0
   444  1802  3406               	retlw	6
   445  1803  3400               	retlw	0
   446  1804  345B               	retlw	91
   447  1805  3400               	retlw	0
   448  1806  344F               	retlw	79
   449  1807  3400               	retlw	0
   450  1808  3466               	retlw	102
   451  1809  3400               	retlw	0
   452  180A  346D               	retlw	109
   453  180B  3400               	retlw	0
   454  180C  347D               	retlw	125
   455  180D  3400               	retlw	0
   456  180E  3407               	retlw	7
   457  180F  3400               	retlw	0
   458  1810  347F               	retlw	127
   459  1811  3400               	retlw	0
   460  1812  346F               	retlw	111
   461  1813  3400               	retlw	0
   462  1814  3480               	retlw	128
   463  1815  3400               	retlw	0
   464  1816  3477               	retlw	119
   465  1817  3400               	retlw	0
   466  1818  347C               	retlw	124
   467  1819  3400               	retlw	0
   468  181A  3439               	retlw	57
   469  181B  3400               	retlw	0
   470  181C  345E               	retlw	94
   471  181D  3400               	retlw	0
   472  181E  3479               	retlw	121
   473  181F  3400               	retlw	0
   474  1820  3471               	retlw	113
   475  1821  3400               	retlw	0
   476  1822  343D               	retlw	61
   477  1823  3400               	retlw	0
   478  1824  3476               	retlw	118
   479  1825  3400               	retlw	0
   480  1826  3406               	retlw	6
   481  1827  3400               	retlw	0
   482  1828  341E               	retlw	30
   483  1829  3400               	retlw	0
   484  182A  3470               	retlw	112
   485  182B  3400               	retlw	0
   486  182C  3438               	retlw	56
   487  182D  3400               	retlw	0
   488  182E  3455               	retlw	85
   489  182F  3400               	retlw	0
   490  1830  3454               	retlw	84
   491  1831  3400               	retlw	0
   492  1832  343F               	retlw	63
   493  1833  3400               	retlw	0
   494  1834  3473               	retlw	115
   495  1835  3400               	retlw	0
   496  1836  3467               	retlw	103
   497  1837  3400               	retlw	0
   498  1838  3450               	retlw	80
   499  1839  3400               	retlw	0
   500  183A  346D               	retlw	109
   501  183B  3400               	retlw	0
   502  183C  3478               	retlw	120
   503  183D  3400               	retlw	0
   504  183E  341C               	retlw	28
   505  183F  3400               	retlw	0
   506  1840  343E               	retlw	62
   507  1841  3400               	retlw	0
   508  1842  346A               	retlw	106
   509  1843  3400               	retlw	0
   510  1844  3468               	retlw	104
   511  1845  3400               	retlw	0
   512  1846  346E               	retlw	110
   513  1847  3400               	retlw	0
   514  1848  3489               	retlw	137
   515  1849  3400               	retlw	0
   516  184A  3400               	retlw	0
   517  184B  3400               	retlw	0
   518  184C  3440               	retlw	64
   519  184D  3400               	retlw	0
   520  184E  34FF               	retlw	255
   521  184F  3400               	retlw	0
   522  1850  3400               	retlw	0
   523  1851  3400               	retlw	0
   524  1852  3400               	retlw	0
   525  1853  3400               	retlw	0
   526  1854  3400               	retlw	0
   527  1855  3400               	retlw	0
   528  1856  3400               	retlw	0
   529  1857  3400               	retlw	0
   530  1858                     __end_of_lookup_table:	
   531  000B                     _INTCONbits	set	11
   532  0011                     _PIR1	set	17
   533  0011                     _PIR1bits	set	17
   534  0012                     _PIR2bits	set	18
   535  000C                     _PORTA	set	12
   536  000C                     _PORTAbits	set	12
   537  000D                     _PORTB	set	13
   538  000E                     _PORTC	set	14
   539  000E                     _PORTCbits	set	14
   540  001B                     _PR2	set	27
   541  0018                     _T1CON	set	24
   542  001C                     _T2CONbits	set	28
   543  0015                     _TMR0	set	21
   544  0017                     _TMR1H	set	23
   545  0016                     _TMR1L	set	22
   546  0095                     _OPTION_REGbits	set	149
   547  0099                     _OSCCONbits	set	153
   548  0098                     _OSCTUNEbits	set	152
   549  0091                     _PIE1bits	set	145
   550  0092                     _PIE2bits	set	146
   551  008C                     _TRISA	set	140
   552  008C                     _TRISAbits	set	140
   553  008D                     _TRISB	set	141
   554  008E                     _TRISC	set	142
   555  008E                     _TRISCbits	set	142
   556  010C                     _LATAbits	set	268
   557  010D                     _LATB	set	269
   558  010D                     _LATBbits	set	269
   559  010E                     _LATCbits	set	270
   560  018C                     _ANSELA	set	396
   561  018D                     _ANSELB	set	397
   562  019F                     _BAUDCTLbits	set	415
   563  0199                     _RCREG	set	409
   564  019D                     _RCSTAbits	set	413
   565  019B                     _SPBRG	set	411
   566  019A                     _TXREG	set	410
   567  019E                     _TXSTA	set	414
   568  019E                     _TXSTAbits	set	414
   569  0293                     _CCP1CONbits	set	659
   570  029A                     _CCP2CONbits	set	666
   571  0291                     _CCPR1L	set	657
   572  0299                     _CCPR2H	set	665
   573  0298                     _CCPR2L	set	664
   574                           
   575                           ; #config settings
   576  0000                     
   577                           	psect	cinit
   578  04FA                     start_initialization:	
   579  04FA                     __initialization:		;BIGRAM
   580                           
   581                           ; Clear objects allocated to BIGRAM
   582  04FA  309A               	movlw	low (0+9114)
   583  04FB  0084               	movwf	4
   584  04FC  3023               	movlw	high (0+9114)
   585  04FD  0085               	movwf	5
   586  04FE  3056               	movlw	86
   587  04FF  00FE               	movwf	btemp
   588  0500  3000               	movlw	0
   589  0501  00FF               	movwf	btemp+1
   590  0502  3198  20BC  3184   	fcall	clear_ram0
   591                           
   592                           ; Clear objects allocated to BANK0
   593  0505  3054               	movlw	low __pbssBANK0
   594  0506  0084               	movwf	4
   595  0507  3000               	movlw	high __pbssBANK0
   596  0508  0085               	movwf	5
   597  0509  301B               	movlw	27
   598  050A  00FE               	movwf	btemp
   599  050B  3000               	movlw	0
   600  050C  00FF               	movwf	btemp+1
   601  050D  3198  20BC  3184   	fcall	clear_ram0
   602                           
   603                           ; Clear objects allocated to BANK2
   604  0510  3020               	movlw	low __pbssBANK2
   605  0511  0084               	movwf	4
   606  0512  3001               	movlw	high __pbssBANK2
   607  0513  0085               	movwf	5
   608  0514  3044               	movlw	68
   609  0515  00FE               	movwf	btemp
   610  0516  3000               	movlw	0
   611  0517  00FF               	movwf	btemp+1
   612  0518  3198  20BC  3184   	fcall	clear_ram0
   613                           
   614                           ; Clear objects allocated to BANK3
   615  051B  30A0               	movlw	low __pbssBANK3
   616  051C  0084               	movwf	4
   617  051D  3001               	movlw	high __pbssBANK3
   618  051E  0085               	movwf	5
   619  051F  3040               	movlw	64
   620  0520  00FE               	movwf	btemp
   621  0521  3000               	movlw	0
   622  0522  00FF               	movwf	btemp+1
   623  0523  3198  20BC  3184   	fcall	clear_ram0
   624                           
   625                           ; Clear objects allocated to BANK4
   626  0526  3020               	movlw	low __pbssBANK4
   627  0527  0084               	movwf	4
   628  0528  3002               	movlw	high __pbssBANK4
   629  0529  0085               	movwf	5
   630  052A  3038               	movlw	56
   631  052B  00FE               	movwf	btemp
   632  052C  3000               	movlw	0
   633  052D  00FF               	movwf	btemp+1
   634  052E  3198  20BC  3184   	fcall	clear_ram0
   635                           
   636                           ; Clear objects allocated to BANK5
   637  0531  30A0               	movlw	low __pbssBANK5
   638  0532  0084               	movwf	4
   639  0533  3002               	movlw	high __pbssBANK5
   640  0534  0085               	movwf	5
   641  0535  3018               	movlw	24
   642  0536  00FE               	movwf	btemp
   643  0537  3000               	movlw	0
   644  0538  00FF               	movwf	btemp+1
   645  0539  3198  20BC  3184   	fcall	clear_ram0
   646                           
   647                           ; Initialize objects allocated to BANK0
   648  053C  3180  2003  3184   	fcall	__pidataBANK0	;fetch initializer
   649  053F  00EF               	movwf	__pdataBANK0& (0+127)
   650                           
   651                           ; Initialize objects allocated to BANK1
   652  0540  0021               	movlb	1	; select bank1
   653  0541  3180  2002  3184   	fcall	__pidataBANK1	;fetch initializer
   654  0544  00EF               	movwf	__pdataBANK1& (0+127)
   655                           
   656                           ; Initialize objects allocated to BANK2
   657  0545  30C8               	movlw	low __pidataBANK2
   658  0546  0084               	movwf	4
   659  0547  3098               	movlw	(high __pidataBANK2)| (0+128)
   660  0548  0085               	movwf	5
   661  0549  3064               	movlw	low __pdataBANK2
   662  054A  0086               	movwf	6
   663  054B  3001               	movlw	high __pdataBANK2
   664  054C  0087               	movwf	7
   665  054D  3000               	movlw	0
   666  054E  00FF               	movwf	btemp+1
   667  054F  300C               	movlw	12
   668  0550  3198  20B0  3184   	fcall	init_ram
   669                           
   670                           ; Initialize objects allocated to BANK3
   671  0553  30D4               	movlw	low __pidataBANK3
   672  0554  0084               	movwf	4
   673  0555  3098               	movlw	(high __pidataBANK3)| (0+128)
   674  0556  0085               	movwf	5
   675  0557  30E0               	movlw	low __pdataBANK3
   676  0558  0086               	movwf	6
   677  0559  3001               	movlw	high __pdataBANK3
   678  055A  0087               	movwf	7
   679  055B  3000               	movlw	0
   680  055C  00FF               	movwf	btemp+1
   681  055D  300F               	movlw	15
   682  055E  3198  20B0  3184   	fcall	init_ram
   683                           
   684                           ; Initialize objects allocated to BANK4
   685  0561  308F               	movlw	low __pidataBANK4
   686  0562  0084               	movwf	4
   687  0563  3098               	movlw	(high __pidataBANK4)| (0+128)
   688  0564  0085               	movwf	5
   689  0565  3058               	movlw	low __pdataBANK4
   690  0566  0086               	movwf	6
   691  0567  3002               	movlw	high __pdataBANK4
   692  0568  0087               	movwf	7
   693  0569  3000               	movlw	0
   694  056A  00FF               	movwf	btemp+1
   695  056B  3004               	movlw	4
   696  056C  3198  20B0         	fcall	init_ram
   697  056E                     end_of_initialization:	
   698                           ;End of C runtime variable initialization code
   699                           
   700  056E                     __end_of__initialization:	
   701  056E  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   702  056F  0020               	movlb	0
   703  0570  318A  2A05         	ljmp	_main	;jump to C main() function
   704                           
   705                           	psect	bssBANK0
   706  0054                     __pbssBANK0:	
   707  0054                     _new1:	
   708  0054                     	ds	2
   709  0056                     _new2:	
   710  0056                     	ds	2
   711  0058                     _newsetwirespeed:	
   712  0058                     	ds	2
   713  005A                     _setvoltage:	
   714  005A                     	ds	2
   715  005C                     _setwirespeed:	
   716  005C                     	ds	2
   717  005E                     _cEditfg:	
   718  005E                     	ds	1
   719  005F                     _digit:	
   720  005F                     	ds	1
   721  0060                     _encod1:	
   722  0060                     	ds	1
   723  0061                     _encod2:	
   724  0061                     	ds	1
   725  0062                     _i:	
   726  0062                     	ds	1
   727  0063                     _onesecf:	
   728  0063                     	ds	1
   729  0064                     _portbstatus:	
   730  0064                     	ds	1
   731  0065                     _rxdata:	
   732  0065                     	ds	1
   733  0066                     _startptr1:	
   734  0066                     	ds	1
   735  0067                     _temp:	
   736  0067                     	ds	1
   737  0068                     _weldmode:	
   738  0068                     	ds	1
   739  0069                     _TypeU:	
   740  0069                     	ds	2
   741  006B                     _TypeDP:	
   742  006B                     	ds	1
   743  006C                     _inchcnt:	
   744  006C                     	ds	1
   745  006D                     _psstatusu:	
   746  006D                     	ds	1
   747  006E                     _wfstatusu:	
   748  006E                     	ds	1
   749                           
   750                           	psect	dataBANK0
   751  006F                     __pdataBANK0:	
   752  006F                     _dispupdatef:	
   753  006F                     	ds	1
   754                           
   755                           	psect	dataBANK1
   756  00EF                     __pdataBANK1:	
   757  00EF                     _key:	
   758  00EF                     	ds	1
   759                           
   760                           	psect	bssBANK2
   761  0120                     __pbssBANK2:	
   762  0120                     _Fltpfreq:	
   763  0120                     	ds	2
   764  0122                     _ijk:	
   765  0122                     	ds	2
   766  0124                     _lmn:	
   767  0124                     	ds	2
   768  0126                     _scaled_baseval2:	
   769  0126                     	ds	2
   770  0128                     _setcurrent:	
   771  0128                     	ds	2
   772  012A                     _statusptr1:	
   773  012A                     	ds	2
   774  012C                     _Count:	
   775  012C                     	ds	1
   776  012D                     _OneH:	
   777  012D                     	ds	1
   778  012E                     _OneL:	
   779  012E                     	ds	1
   780  012F                     _TwoH:	
   781  012F                     	ds	1
   782  0130                     _TwoL:	
   783  0130                     	ds	1
   784  0131                     _adaptivepidf:	
   785  0131                     	ds	1
   786  0132                     _arrptr:	
   787  0132                     	ds	1
   788  0133                     _cWf2t4tmodefg:	
   789  0133                     	ds	1
   790  0134                     _chksum:	
   791  0134                     	ds	1
   792  0135                     _closeloopf:	
   793  0135                     	ds	1
   794  0136                     _comm_error_count:	
   795  0136                     	ds	1
   796  0137                     _count_1msec:	
   797  0137                     	ds	1
   798  0138                     _count_2ms:	
   799  0138                     	ds	1
   800  0139                     _crater_speed:	
   801  0139                     	ds	1
   802  013A                     _creep_speed:	
   803  013A                     	ds	1
   804  013B                     _cyclestrtf:	
   805  013B                     	ds	1
   806  013C                     _enccount:	
   807  013C                     	ds	1
   808  013D                     _error8:	
   809  013D                     	ds	1
   810  013E                     _firstpulse1:	
   811  013E                     	ds	1
   812  013F                     _firstpulse2:	
   813  013F                     	ds	1
   814  0140                     _gaschkfg:	
   815  0140                     	ds	1
   816  0141                     _kpressread:	
   817  0141                     	ds	1
   818  0142                     _mili1_100:	
   819  0142                     	ds	1
   820  0143                     _mili2_100:	
   821  0143                     	ds	1
   822  0144                     _minus111:	
   823  0144                     	ds	1
   824  0145                     _minus222:	
   825  0145                     	ds	1
   826  0146                     _minuscount1:	
   827  0146                     	ds	1
   828  0147                     _minuscount2:	
   829  0147                     	ds	1
   830  0148                     _minuspara1:	
   831  0148                     	ds	1
   832  0149                     _minuspara2:	
   833  0149                     	ds	1
   834  014A                     _motor_acceleratefg:	
   835  014A                     	ds	1
   836  014B                     _pcount:	
   837  014B                     	ds	1
   838  014C                     _plus111:	
   839  014C                     	ds	1
   840  014D                     _plus222:	
   841  014D                     	ds	1
   842  014E                     _pluscount1:	
   843  014E                     	ds	1
   844  014F                     _pluscount2:	
   845  014F                     	ds	1
   846  0150                     _pluspara1:	
   847  0150                     	ds	1
   848  0151                     _pluspara2:	
   849  0151                     	ds	1
   850  0152                     _pportb:	
   851  0152                     	ds	1
   852  0153                     _read_enc1f:	
   853  0153                     	ds	1
   854  0154                     _recchksum:	
   855  0154                     	ds	1
   856  0155                     _secondpulse1:	
   857  0155                     	ds	1
   858  0156                     _secondpulse2:	
   859  0156                     	ds	1
   860  0157                     _send_statusf:	
   861  0157                     	ds	1
   862  0158                     _tans:	
   863  0158                     	ds	1
   864  0159                     _torchstatus1:	
   865  0159                     	ds	1
   866  015A                     _torchstatus2:	
   867  015A                     	ds	1
   868  015B                     _transmitonf:	
   869  015B                     	ds	1
   870  015C                     _universal_error:	
   871  015C                     	ds	1
   872  015D                     _universal_error_latch:	
   873  015D                     	ds	1
   874  015E                     _avgpperiod:	
   875  015E                     	ds	2
   876  0160                     _erroru:	
   877  0160                     	ds	2
   878  0162                     _pfreq:	
   879  0162                     	ds	2
   880                           
   881                           	psect	dataBANK2
   882  0164                     __pdataBANK2:	
   883  0164                     _diswin1:	
   884  0164                     	ds	8
   885  016C                     _TORCH:	
   886  016C                     	ds	1
   887  016D                     _prevTORCH:	
   888  016D                     	ds	1
   889  016E                     _prevkey:	
   890  016E                     	ds	1
   891  016F                     _wfspeedchangef:	
   892  016F                     	ds	1
   893                           
   894                           	psect	bssBANK3
   895  01A0                     __pbssBANK3:	
   896  01A0                     _error_new:	
   897  01A0                     	ds	3
   898  01A3                     _error_old:	
   899  01A3                     	ds	3
   900  01A6                     _integral_new:	
   901  01A6                     	ds	3
   902  01A9                     _integral_old:	
   903  01A9                     	ds	3
   904  01AC                     _One:	
   905  01AC                     	ds	2
   906  01AE                     _Total_Count:	
   907  01AE                     	ds	2
   908  01B0                     _Two:	
   909  01B0                     	ds	2
   910  01B2                     _count_1ms:	
   911  01B2                     	ds	2
   912  01B4                     _delay:	
   913  01B4                     	ds	2
   914  01B6                     _delinch:	
   915  01B6                     	ds	2
   916  01B8                     _delinch1:	
   917  01B8                     	ds	2
   918  01BA                     _igascntr:	
   919  01BA                     	ds	2
   920  01BC                     _old1:	
   921  01BC                     	ds	2
   922  01BE                     _old2:	
   923  01BE                     	ds	2
   924  01C0                     _pperiod:	
   925  01C0                     	ds	2
   926  01C2                     _prevsetcurrent:	
   927  01C2                     	ds	2
   928  01C4                     _prevsetvoltage:	
   929  01C4                     	ds	2
   930  01C6                     _prevsetwirespeed:	
   931  01C6                     	ds	2
   932  01C8                     _recpsstatus:	
   933  01C8                     	ds	2
   934  01CA                     _recstatus:	
   935  01CA                     	ds	2
   936  01CC                     _rel_wirespeed:	
   937  01CC                     	ds	2
   938  01CE                     _setpfreq:	
   939  01CE                     	ds	2
   940  01D0                     _up_count_motor:	
   941  01D0                     	ds	2
   942  01D2                     _Tx_ptr:	
   943  01D2                     	ds	1
   944  01D3                     _cWeldStopfg:	
   945  01D3                     	ds	1
   946  01D4                     _closeloop1f:	
   947  01D4                     	ds	1
   948  01D5                     _error4:	
   949  01D5                     	ds	1
   950  01D6                     _error_code1:	
   951  01D6                     	ds	1
   952  01D7                     _error_code2:	
   953  01D7                     	ds	1
   954  01D8                     _inchkeyon:	
   955  01D8                     	ds	1
   956  01D9                     _motor_continuefg:	
   957  01D9                     	ds	1
   958  01DA                     _softstartf:	
   959  01DA                     	ds	1
   960  01DB                     _torchonf:	
   961  01DB                     	ds	1
   962  01DC                     _txonf:	
   963  01DC                     	ds	1
   964  01DD                     _updatedispf:	
   965  01DD                     	ds	1
   966  01DE                     _wfstatusbyte:	
   967  01DE                     	ds	1
   968  01DF                     _commandu:	
   969  01DF                     	ds	1
   970                           
   971                           	psect	dataBANK3
   972  01E0                     __pdataBANK3:	
   973  01E0                     _Tsampling:	
   974  01E0                     	ds	3
   975  01E3                     _Actual_amp:	
   976  01E3                     	ds	2
   977  01E5                     _Actual_vtg:	
   978  01E5                     	ds	2
   979  01E7                     _maxfmspeed:	
   980  01E7                     	ds	2
   981  01E9                     _minfmspeed:	
   982  01E9                     	ds	2
   983  01EB                     _scalefactor2:	
   984  01EB                     	ds	2
   985  01ED                     _displayonf:	
   986  01ED                     	ds	1
   987  01EE                     _togglepin:	
   988  01EE                     	ds	1
   989                           
   990                           	psect	bssBANK4
   991  0220                     __pbssBANK4:	
   992  0220                     _Total_Period:	
   993  0220                     	ds	4
   994  0224                     _controller_out:	
   995  0224                     	ds	3
   996  0227                     _minoutmax:	
   997  0227                     	ds	3
   998  022A                     _Hi_setppwm:	
   999  022A                     	ds	2
  1000  022C                     _Lo_setppwm:	
  1001  022C                     	ds	2
  1002  022E                     _creepspeed:	
  1003  022E                     	ds	2
  1004  0230                     _disp1term:	
  1005  0230                     	ds	2
  1006  0232                     _disp2term:	
  1007  0232                     	ds	2
  1008  0234                     _disp3term:	
  1009  0234                     	ds	2
  1010  0236                     _disp4term:	
  1011  0236                     	ds	2
  1012  0238                     _disparclength:	
  1013  0238                     	ds	2
  1014  023A                     _gapfreq:	
  1015  023A                     	ds	2
  1016  023C                     _iii:	
  1017  023C                     	ds	2
  1018  023E                     _openloopcnt:	
  1019  023E                     	ds	2
  1020  0240                     _prevFltpfreq:	
  1021  0240                     	ds	2
  1022  0242                     _pstowfstru:	
  1023  0242                     	ds	22
  1024                           
  1025                           	psect	dataBANK4
  1026  0258                     __pdataBANK4:	
  1027  0258                     _mahesh_test:	
  1028  0258                     	ds	2
  1029  025A                     _parclength:	
  1030  025A                     	ds	2
  1031                           
  1032                           	psect	bssBANK5
  1033  02A0                     __pbssBANK5:	
  1034  02A0                     _rec_arr:	
  1035  02A0                     	ds	24
  1036                           
  1037                           	psect	clrtext
  1038  18BC                     clear_ram0:	
  1039                           ;	Called with FSR0 containing the base address, and
  1040                           ;	btemp/btemp+1 has the size to clear
  1041                           
  1042  18BC  0064               	clrwdt	;clear the watchdog before getting into this loop
  1043  18BD                     clrloop0:	
  1044  18BD  0180               	clrf	0	;clear RAM location pointed to by FSR
  1045  18BE  3101               	addfsr 0,1
  1046  18BF  3001               	movlw	1
  1047  18C0  02FE               	subwf	126,f
  1048  18C1  3000               	movlw	0
  1049  18C2  3BFF               	subwfb	127,f
  1050  18C3  087F               	movf	127,w
  1051  18C4  047E               	iorwf	126,w
  1052  18C5  1903               	btfsc	3,2
  1053  18C6  3400               	retlw	0	;all done for this memory range, return
  1054  18C7  28BD               	goto	clrloop0	;have we reached the end yet?
  1055                           
  1056                           	psect	inittext
  1057  18B0                     init_ram:	
  1058  18B0  00FE               	movwf	126
  1059  18B1                     initloop:	
  1060  18B1  0012               	moviw fsr0++
  1061  18B2  001E               	movwi fsr1++
  1062  18B3  3001               	movlw	1
  1063  18B4  02FE               	subwf	126,f
  1064  18B5  3000               	movlw	0
  1065  18B6  3BFF               	subwfb	127,f
  1066  18B7  087F               	movf	127,w
  1067  18B8  047E               	iorwf	126,w
  1068  18B9  1903               	btfsc	3,2
  1069  18BA  3400               	retlw	0
  1070  18BB  28B1               	goto	initloop
  1071                           
  1072                           	psect	cstackBANK1
  1073  00A0                     __pcstackBANK1:	
  1074  00A0                     ??_enc1_port:	
  1075  00A0                     ??_enc2_port:	
  1076                           ; 0 bytes @ 0x0
  1077                           
  1078  00A0                     ??_system_init:	
  1079                           ; 0 bytes @ 0x0
  1080                           
  1081  00A0                     ??_portpin_init:	
  1082                           ; 0 bytes @ 0x0
  1083                           
  1084  00A0                     ??_Timer0_init:	
  1085                           ; 0 bytes @ 0x0
  1086                           
  1087  00A0                     ??_PWM_init:	
  1088                           ; 0 bytes @ 0x0
  1089                           
  1090  00A0                     ??_capture_init:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  00A0                     ??_uart_init:	
  1094                           ; 0 bytes @ 0x0
  1095                           
  1096  00A0                     ?_Delayms:	
  1097                           ; 0 bytes @ 0x0
  1098                           
  1099  00A0                     ??_Send_Byte:	
  1100                           ; 0 bytes @ 0x0
  1101                           
  1102  00A0                     ?___wmul:	
  1103                           ; 0 bytes @ 0x0
  1104                           
  1105  00A0                     ?___lwmod:	
  1106                           ; 2 bytes @ 0x0
  1107                           
  1108  00A0                     ?___ftpack:	
  1109                           ; 2 bytes @ 0x0
  1110                           
  1111  00A0                     ?___ftneg:	
  1112                           ; 3 bytes @ 0x0
  1113                           
  1114  00A0                     ?___aldiv:	
  1115                           ; 3 bytes @ 0x0
  1116                           
  1117  00A0                     Send_Byte@transbyte:	
  1118                           ; 4 bytes @ 0x0
  1119                           
  1120  00A0                     Delayms@delay:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  00A0                     ___wmul@multiplier:	
  1124                           ; 2 bytes @ 0x0
  1125                           
  1126  00A0                     ___lwmod@divisor:	
  1127                           ; 2 bytes @ 0x0
  1128                           
  1129  00A0                     ___ftpack@arg:	
  1130                           ; 2 bytes @ 0x0
  1131                           
  1132  00A0                     ___ftneg@f1:	
  1133                           ; 3 bytes @ 0x0
  1134                           
  1135  00A0                     ___aldiv@divisor:	
  1136                           ; 3 bytes @ 0x0
  1137                           
  1138                           
  1139                           ; 4 bytes @ 0x0
  1140  00A0                     	ds	1
  1141  00A1                     ??_send_status:	
  1142  00A1                     ??_transmittops:	
  1143                           ; 0 bytes @ 0x1
  1144                           
  1145                           
  1146                           ; 0 bytes @ 0x1
  1147  00A1                     	ds	1
  1148  00A2                     ??_Delayms:	
  1149  00A2                     Delayms@xxx:	
  1150                           ; 0 bytes @ 0x2
  1151                           
  1152  00A2                     ___wmul@multiplicand:	
  1153                           ; 2 bytes @ 0x2
  1154                           
  1155  00A2                     ___lwmod@dividend:	
  1156                           ; 2 bytes @ 0x2
  1157                           
  1158                           
  1159                           ; 2 bytes @ 0x2
  1160  00A2                     	ds	1
  1161  00A3                     ??___ftneg:	
  1162  00A3                     ___ftpack@exp:	
  1163                           ; 0 bytes @ 0x3
  1164                           
  1165  00A3                     enc2_port@portvalue:	
  1166                           ; 1 bytes @ 0x3
  1167                           
  1168                           
  1169                           ; 2 bytes @ 0x3
  1170  00A3                     	ds	1
  1171  00A4                     ??___wmul:	
  1172  00A4                     ??___lwmod:	
  1173                           ; 0 bytes @ 0x4
  1174                           
  1175  00A4                     ___ftpack@sign:	
  1176                           ; 0 bytes @ 0x4
  1177                           
  1178  00A4                     Delayms@yyy:	
  1179                           ; 1 bytes @ 0x4
  1180                           
  1181  00A4                     enc1_port@portvalue:	
  1182                           ; 2 bytes @ 0x4
  1183                           
  1184  00A4                     ___wmul@product:	
  1185                           ; 2 bytes @ 0x4
  1186                           
  1187  00A4                     ___aldiv@dividend:	
  1188                           ; 2 bytes @ 0x4
  1189                           
  1190                           
  1191                           ; 4 bytes @ 0x4
  1192  00A4                     	ds	1
  1193  00A5                     ??___ftpack:	
  1194  00A5                     ??_SCANENCODER2:	
  1195                           ; 0 bytes @ 0x5
  1196                           
  1197  00A5                     ___lwmod@counter:	
  1198                           ; 0 bytes @ 0x5
  1199                           
  1200                           
  1201                           ; 1 bytes @ 0x5
  1202  00A5                     	ds	1
  1203  00A6                     ??_SCANENCODER1:	
  1204  00A6                     ?___lwdiv:	
  1205                           ; 0 bytes @ 0x6
  1206                           
  1207  00A6                     SCANENCODER2@result:	
  1208                           ; 2 bytes @ 0x6
  1209                           
  1210  00A6                     ___lwdiv@divisor:	
  1211                           ; 1 bytes @ 0x6
  1212                           
  1213                           
  1214                           ; 2 bytes @ 0x6
  1215  00A6                     	ds	1
  1216  00A7                     SCANENCODER1@result:	
  1217                           
  1218                           ; 1 bytes @ 0x7
  1219  00A7                     	ds	1
  1220  00A8                     ??___aldiv:	
  1221  00A8                     ?___altoft:	
  1222                           ; 0 bytes @ 0x8
  1223                           
  1224  00A8                     ?___ftadd:	
  1225                           ; 3 bytes @ 0x8
  1226                           
  1227  00A8                     ?___lwtoft:	
  1228                           ; 3 bytes @ 0x8
  1229                           
  1230  00A8                     ___lwdiv@dividend:	
  1231                           ; 3 bytes @ 0x8
  1232                           
  1233  00A8                     ___lwtoft@c:	
  1234                           ; 2 bytes @ 0x8
  1235                           
  1236  00A8                     ___ftadd@f1:	
  1237                           ; 2 bytes @ 0x8
  1238                           
  1239  00A8                     ___altoft@c:	
  1240                           ; 3 bytes @ 0x8
  1241                           
  1242                           
  1243                           ; 4 bytes @ 0x8
  1244  00A8                     	ds	1
  1245  00A9                     ___aldiv@counter:	
  1246                           
  1247                           ; 1 bytes @ 0x9
  1248  00A9                     	ds	1
  1249  00AA                     ??___lwdiv:	
  1250  00AA                     ___aldiv@sign:	
  1251                           ; 0 bytes @ 0xA
  1252                           
  1253                           
  1254                           ; 1 bytes @ 0xA
  1255  00AA                     	ds	1
  1256  00AB                     ??___lwtoft:	
  1257  00AB                     ___lwdiv@quotient:	
  1258                           ; 0 bytes @ 0xB
  1259                           
  1260  00AB                     ___ftadd@f2:	
  1261                           ; 2 bytes @ 0xB
  1262                           
  1263  00AB                     ___aldiv@quotient:	
  1264                           ; 3 bytes @ 0xB
  1265                           
  1266                           
  1267                           ; 4 bytes @ 0xB
  1268  00AB                     	ds	1
  1269  00AC                     ??___altoft:	
  1270                           
  1271                           ; 0 bytes @ 0xC
  1272  00AC                     	ds	1
  1273  00AD                     ___lwdiv@counter:	
  1274                           
  1275                           ; 1 bytes @ 0xD
  1276  00AD                     	ds	1
  1277  00AE                     ?_disp_hex_window1:	
  1278  00AE                     ?_disp_hex_window2:	
  1279                           ; 0 bytes @ 0xE
  1280                           
  1281  00AE                     ??___ftadd:	
  1282                           ; 0 bytes @ 0xE
  1283                           
  1284  00AE                     ___altoft@exp:	
  1285                           ; 0 bytes @ 0xE
  1286                           
  1287  00AE                     disp_hex_window1@hex_data:	
  1288                           ; 1 bytes @ 0xE
  1289                           
  1290  00AE                     disp_hex_window2@hex_data:	
  1291                           ; 2 bytes @ 0xE
  1292                           
  1293                           
  1294                           ; 2 bytes @ 0xE
  1295  00AE                     	ds	1
  1296  00AF                     ___altoft@sign:	
  1297                           
  1298                           ; 1 bytes @ 0xF
  1299  00AF                     	ds	1
  1300  00B0                     ??_disp_hex_window1:	
  1301  00B0                     ??_disp_hex_window2:	
  1302                           ; 0 bytes @ 0x10
  1303                           
  1304  00B0                     ?___ftge:	
  1305                           ; 0 bytes @ 0x10
  1306                           
  1307  00B0                     ___ftge@ff1:	
  1308                           ; 1 bit 
  1309                           
  1310                           
  1311                           ; 3 bytes @ 0x10
  1312  00B0                     	ds	2
  1313  00B2                     ___ftadd@sign:	
  1314                           
  1315                           ; 1 bytes @ 0x12
  1316  00B2                     	ds	1
  1317  00B3                     ___ftadd@exp2:	
  1318  00B3                     ___ftge@ff2:	
  1319                           ; 1 bytes @ 0x13
  1320                           
  1321                           
  1322                           ; 3 bytes @ 0x13
  1323  00B3                     	ds	1
  1324  00B4                     ___ftadd@exp1:	
  1325                           
  1326                           ; 1 bytes @ 0x14
  1327  00B4                     	ds	1
  1328  00B5                     ?___ftmul:	
  1329  00B5                     ___ftmul@f1:	
  1330                           ; 3 bytes @ 0x15
  1331                           
  1332                           
  1333                           ; 3 bytes @ 0x15
  1334  00B5                     	ds	1
  1335  00B6                     ??___ftge:	
  1336                           
  1337                           ; 0 bytes @ 0x16
  1338  00B6                     	ds	2
  1339  00B8                     ___ftmul@f2:	
  1340                           
  1341                           ; 3 bytes @ 0x18
  1342  00B8                     	ds	3
  1343  00BB                     ??___ftmul:	
  1344                           
  1345                           ; 0 bytes @ 0x1B
  1346  00BB                     	ds	4
  1347  00BF                     ___ftmul@exp:	
  1348                           
  1349                           ; 1 bytes @ 0x1F
  1350  00BF                     	ds	1
  1351  00C0                     ___ftmul@f3_as_product:	
  1352                           
  1353                           ; 3 bytes @ 0x20
  1354  00C0                     	ds	3
  1355  00C3                     ___ftmul@cntr:	
  1356                           
  1357                           ; 1 bytes @ 0x23
  1358  00C3                     	ds	1
  1359  00C4                     ___ftmul@sign:	
  1360                           
  1361                           ; 1 bytes @ 0x24
  1362  00C4                     	ds	1
  1363  00C5                     ?___ftdiv:	
  1364  00C5                     ?___fttol:	
  1365                           ; 3 bytes @ 0x25
  1366                           
  1367  00C5                     ___ftdiv@f2:	
  1368                           ; 4 bytes @ 0x25
  1369                           
  1370  00C5                     ___fttol@f1:	
  1371                           ; 3 bytes @ 0x25
  1372                           
  1373                           
  1374                           ; 3 bytes @ 0x25
  1375  00C5                     	ds	3
  1376  00C8                     ___ftdiv@f1:	
  1377                           
  1378                           ; 3 bytes @ 0x28
  1379  00C8                     	ds	1
  1380  00C9                     ??___fttol:	
  1381                           
  1382                           ; 0 bytes @ 0x29
  1383  00C9                     	ds	2
  1384  00CB                     ??___ftdiv:	
  1385                           
  1386                           ; 0 bytes @ 0x2B
  1387  00CB                     	ds	2
  1388  00CD                     ___fttol@sign1:	
  1389                           
  1390                           ; 1 bytes @ 0x2D
  1391  00CD                     	ds	1
  1392  00CE                     ___fttol@lval:	
  1393                           
  1394                           ; 4 bytes @ 0x2E
  1395  00CE                     	ds	1
  1396  00CF                     ___ftdiv@cntr:	
  1397                           
  1398                           ; 1 bytes @ 0x2F
  1399  00CF                     	ds	1
  1400  00D0                     ___ftdiv@f3:	
  1401                           
  1402                           ; 3 bytes @ 0x30
  1403  00D0                     	ds	2
  1404  00D2                     ___fttol@exp1:	
  1405                           
  1406                           ; 1 bytes @ 0x32
  1407  00D2                     	ds	1
  1408  00D3                     ?_Update_PWM:	
  1409  00D3                     ?_Wirespeed:	
  1410                           ; 0 bytes @ 0x33
  1411                           
  1412  00D3                     ___ftdiv@exp:	
  1413                           ; 2 bytes @ 0x33
  1414                           
  1415  00D3                     Update_PWM@setwsduty:	
  1416                           ; 1 bytes @ 0x33
  1417                           
  1418  00D3                     Wirespeed@wireSpeed:	
  1419                           ; 2 bytes @ 0x33
  1420                           
  1421                           
  1422                           ; 2 bytes @ 0x33
  1423  00D3                     	ds	1
  1424  00D4                     ___ftdiv@sign:	
  1425                           
  1426                           ; 1 bytes @ 0x34
  1427  00D4                     	ds	1
  1428  00D5                     ??_Update_PWM:	
  1429  00D5                     ??_Wirespeed:	
  1430                           ; 0 bytes @ 0x35
  1431                           
  1432  00D5                     Wirespeed@iFreq:	
  1433                           ; 0 bytes @ 0x35
  1434                           
  1435                           
  1436                           ; 2 bytes @ 0x35
  1437  00D5                     	ds	2
  1438  00D7                     Update_PWM@Temp1:	
  1439                           
  1440                           ; 2 bytes @ 0x37
  1441  00D7                     	ds	2
  1442  00D9                     Update_PWM@Dutycnt:	
  1443                           
  1444                           ; 2 bytes @ 0x39
  1445  00D9                     	ds	2
  1446  00DB                     ??_key_application:	
  1447  00DB                     ??_Adaptive_base_pid:	
  1448                           ; 0 bytes @ 0x3B
  1449                           
  1450                           
  1451                           ; 0 bytes @ 0x3B
  1452  00DB                     	ds	2
  1453  00DD                     key_application@keypress:	
  1454                           
  1455                           ; 1 bytes @ 0x3D
  1456  00DD                     	ds	7
  1457  00E4                     _Adaptive_base_pid$1736:	
  1458                           
  1459                           ; 3 bytes @ 0x44
  1460  00E4                     	ds	3
  1461  00E7                     _Adaptive_base_pid$1737:	
  1462                           
  1463                           ; 3 bytes @ 0x47
  1464  00E7                     	ds	3
  1465  00EA                     _Adaptive_base_pid$1738:	
  1466                           
  1467                           ; 3 bytes @ 0x4A
  1468  00EA                     	ds	3
  1469  00ED                     ??_main:	
  1470                           
  1471                           ; 0 bytes @ 0x4D
  1472  00ED                     	ds	2
  1473                           
  1474                           	psect	cstackCOMMON
  1475  0070                     __pcstackCOMMON:	
  1476  0070                     ?_system_init:	
  1477  0070                     ?_portpin_init:	
  1478                           ; 0 bytes @ 0x0
  1479                           
  1480  0070                     ?_Timer0_init:	
  1481                           ; 0 bytes @ 0x0
  1482                           
  1483  0070                     ?_PWM_init:	
  1484                           ; 0 bytes @ 0x0
  1485                           
  1486  0070                     ?_capture_init:	
  1487                           ; 0 bytes @ 0x0
  1488                           
  1489  0070                     ?_uart_init:	
  1490                           ; 0 bytes @ 0x0
  1491                           
  1492  0070                     ?_send_status:	
  1493                           ; 0 bytes @ 0x0
  1494                           
  1495  0070                     ?_transmittops:	
  1496                           ; 0 bytes @ 0x0
  1497                           
  1498  0070                     ?_key_application:	
  1499                           ; 0 bytes @ 0x0
  1500                           
  1501  0070                     ?_Display:	
  1502                           ; 0 bytes @ 0x0
  1503                           
  1504  0070                     ??_Display:	
  1505                           ; 0 bytes @ 0x0
  1506                           
  1507  0070                     ?_Adaptive_base_pid:	
  1508                           ; 0 bytes @ 0x0
  1509                           
  1510  0070                     ?_ISR_Function:	
  1511                           ; 0 bytes @ 0x0
  1512                           
  1513  0070                     ?_main:	
  1514                           ; 0 bytes @ 0x0
  1515                           
  1516  0070                     ?_Send_Byte:	
  1517                           ; 0 bytes @ 0x0
  1518                           
  1519  0070                     ?_enc1_port:	
  1520                           ; 0 bytes @ 0x0
  1521                           
  1522  0070                     ?_enc2_port:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_SCANENCODER1:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_SCANENCODER2:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ?i1___lwdiv:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?i1___lwmod:	
  1535                           ; 2 bytes @ 0x0
  1536                           
  1537  0070                     ?i1___ftpack:	
  1538                           ; 2 bytes @ 0x0
  1539                           
  1540  0070                     ?i1___aldiv:	
  1541                           ; 3 bytes @ 0x0
  1542                           
  1543  0070                     i1___lwdiv@divisor:	
  1544                           ; 4 bytes @ 0x0
  1545                           
  1546  0070                     i1___lwmod@divisor:	
  1547                           ; 2 bytes @ 0x0
  1548                           
  1549  0070                     i1___ftpack@arg:	
  1550                           ; 2 bytes @ 0x0
  1551                           
  1552  0070                     i1___aldiv@divisor:	
  1553                           ; 3 bytes @ 0x0
  1554                           
  1555                           
  1556                           ; 4 bytes @ 0x0
  1557  0070                     	ds	2
  1558  0072                     i1___lwdiv@dividend:	
  1559  0072                     i1___lwmod@dividend:	
  1560                           ; 2 bytes @ 0x2
  1561                           
  1562                           
  1563                           ; 2 bytes @ 0x2
  1564  0072                     	ds	1
  1565  0073                     i1___ftpack@exp:	
  1566                           
  1567                           ; 1 bytes @ 0x3
  1568  0073                     	ds	1
  1569  0074                     ??i1___lwdiv:	
  1570  0074                     ??i1___lwmod:	
  1571                           ; 0 bytes @ 0x4
  1572                           
  1573  0074                     i1___ftpack@sign:	
  1574                           ; 0 bytes @ 0x4
  1575                           
  1576  0074                     i1___aldiv@dividend:	
  1577                           ; 1 bytes @ 0x4
  1578                           
  1579                           
  1580                           ; 4 bytes @ 0x4
  1581  0074                     	ds	1
  1582  0075                     ??i1___ftpack:	
  1583  0075                     i1___lwmod@counter:	
  1584                           ; 0 bytes @ 0x5
  1585                           
  1586  0075                     i1___lwdiv@quotient:	
  1587                           ; 1 bytes @ 0x5
  1588                           
  1589                           
  1590                           ; 2 bytes @ 0x5
  1591  0075                     	ds	2
  1592  0077                     i1___lwdiv@counter:	
  1593                           
  1594                           ; 1 bytes @ 0x7
  1595  0077                     	ds	1
  1596  0078                     ?i1_disp_hex_window1:	
  1597  0078                     ??i1___aldiv:	
  1598                           ; 0 bytes @ 0x8
  1599                           
  1600  0078                     ?i1___lwtoft:	
  1601                           ; 0 bytes @ 0x8
  1602                           
  1603  0078                     i1disp_hex_window1@hex_data:	
  1604                           ; 3 bytes @ 0x8
  1605                           
  1606  0078                     i1___lwtoft@c:	
  1607                           ; 2 bytes @ 0x8
  1608                           
  1609                           
  1610                           ; 2 bytes @ 0x8
  1611  0078                     	ds	2
  1612  007A                     ??i1_disp_hex_window1:	
  1613                           
  1614                           ; 0 bytes @ 0xA
  1615  007A                     	ds	1
  1616  007B                     ??i1___lwtoft:	
  1617                           
  1618                           ; 0 bytes @ 0xB
  1619  007B                     	ds	1
  1620  007C                     _ISR_Function$1129:	
  1621                           
  1622                           ; 2 bytes @ 0xC
  1623  007C                     	ds	2
  1624                           
  1625                           	psect	cstackBANK0
  1626  0020                     __pcstackBANK0:	
  1627  0020                     ?i1___ftdiv:	
  1628  0020                     ?i1___ftmul:	
  1629                           ; 3 bytes @ 0x0
  1630                           
  1631  0020                     i1___aldiv@counter:	
  1632                           ; 3 bytes @ 0x0
  1633                           
  1634  0020                     i1___ftdiv@f2:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0020                     i1___ftmul@f1:	
  1638                           ; 3 bytes @ 0x0
  1639                           
  1640                           
  1641                           ; 3 bytes @ 0x0
  1642  0020                     	ds	1
  1643  0021                     i1___aldiv@sign:	
  1644                           
  1645                           ; 1 bytes @ 0x1
  1646  0021                     	ds	1
  1647  0022                     i1___aldiv@quotient:	
  1648                           
  1649                           ; 4 bytes @ 0x2
  1650  0022                     	ds	1
  1651  0023                     i1___ftdiv@f1:	
  1652  0023                     i1___ftmul@f2:	
  1653                           ; 3 bytes @ 0x3
  1654                           
  1655                           
  1656                           ; 3 bytes @ 0x3
  1657  0023                     	ds	3
  1658  0026                     ??i1___ftdiv:	
  1659  0026                     ??i1___ftmul:	
  1660                           ; 0 bytes @ 0x6
  1661                           
  1662                           
  1663                           ; 0 bytes @ 0x6
  1664  0026                     	ds	4
  1665  002A                     i1___ftdiv@cntr:	
  1666  002A                     i1___ftmul@exp:	
  1667                           ; 1 bytes @ 0xA
  1668                           
  1669                           
  1670                           ; 1 bytes @ 0xA
  1671  002A                     	ds	1
  1672  002B                     i1___ftdiv@f3:	
  1673  002B                     i1___ftmul@f3_as_product:	
  1674                           ; 3 bytes @ 0xB
  1675                           
  1676                           
  1677                           ; 3 bytes @ 0xB
  1678  002B                     	ds	3
  1679  002E                     i1___ftdiv@exp:	
  1680  002E                     i1___ftmul@cntr:	
  1681                           ; 1 bytes @ 0xE
  1682                           
  1683                           
  1684                           ; 1 bytes @ 0xE
  1685  002E                     	ds	1
  1686  002F                     i1___ftdiv@sign:	
  1687  002F                     i1___ftmul@sign:	
  1688                           ; 1 bytes @ 0xF
  1689                           
  1690                           
  1691                           ; 1 bytes @ 0xF
  1692  002F                     	ds	1
  1693  0030                     ?i1___ftadd:	
  1694  0030                     i1___ftadd@f1:	
  1695                           ; 3 bytes @ 0x10
  1696                           
  1697                           
  1698                           ; 3 bytes @ 0x10
  1699  0030                     	ds	3
  1700  0033                     i1___ftadd@f2:	
  1701                           
  1702                           ; 3 bytes @ 0x13
  1703  0033                     	ds	3
  1704  0036                     ??i1___ftadd:	
  1705                           
  1706                           ; 0 bytes @ 0x16
  1707  0036                     	ds	4
  1708  003A                     i1___ftadd@sign:	
  1709                           
  1710                           ; 1 bytes @ 0x1A
  1711  003A                     	ds	1
  1712  003B                     i1___ftadd@exp2:	
  1713                           
  1714                           ; 1 bytes @ 0x1B
  1715  003B                     	ds	1
  1716  003C                     i1___ftadd@exp1:	
  1717                           
  1718                           ; 1 bytes @ 0x1C
  1719  003C                     	ds	1
  1720  003D                     ?i1___fttol:	
  1721  003D                     i1___fttol@f1:	
  1722                           ; 4 bytes @ 0x1D
  1723                           
  1724                           
  1725                           ; 3 bytes @ 0x1D
  1726  003D                     	ds	4
  1727  0041                     ??i1___fttol:	
  1728                           
  1729                           ; 0 bytes @ 0x21
  1730  0041                     	ds	4
  1731  0045                     i1___fttol@sign1:	
  1732                           
  1733                           ; 1 bytes @ 0x25
  1734  0045                     	ds	1
  1735  0046                     i1___fttol@lval:	
  1736                           
  1737                           ; 4 bytes @ 0x26
  1738  0046                     	ds	4
  1739  004A                     i1___fttol@exp1:	
  1740                           
  1741                           ; 1 bytes @ 0x2A
  1742  004A                     	ds	1
  1743  004B                     ??_ISR_Function:	
  1744                           
  1745                           ; 0 bytes @ 0x2B
  1746  004B                     	ds	9
  1747                           
  1748                           	psect	maintext
  1749  0A05                     __pmaintext:	
  1750 ;;
  1751 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1752 ;;
  1753 ;; *************** function _main *****************
  1754 ;; Defined at:
  1755 ;;		line 513 in file "main.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;		None               void
  1762 ;; Registers used:
  1763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 17F/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1772 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1773 ;;Total ram usage:        2 bytes
  1774 ;; Hardware stack levels required when called:    6
  1775 ;; This function calls:
  1776 ;;		_Adaptive_base_pid
  1777 ;;		_Delayms
  1778 ;;		_PWM_init
  1779 ;;		_SCANENCODER1
  1780 ;;		_SCANENCODER2
  1781 ;;		_Timer0_init
  1782 ;;		_Update_PWM
  1783 ;;		_Wirespeed
  1784 ;;		___ftmul
  1785 ;;		___fttol
  1786 ;;		___lwdiv
  1787 ;;		___lwtoft
  1788 ;;		___wmul
  1789 ;;		_capture_init
  1790 ;;		_disp_hex_window1
  1791 ;;		_disp_hex_window2
  1792 ;;		_key_application
  1793 ;;		_portpin_init
  1794 ;;		_send_status
  1795 ;;		_system_init
  1796 ;;		_transmittops
  1797 ;;		_uart_init
  1798 ;; This function is called by:
  1799 ;;		Startup code after reset
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _main
  1805  0A05                     _main:	
  1806                           
  1807                           ;main.c: 516: system_init();
  1808                           
  1809                           ;incstack = 0
  1810                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1811  0A05  3198  20A6  318A   	fcall	_system_init
  1812  0A08                     l622:	
  1813  0A08  3013               	movlw	19
  1814  0A09  0023               	movlb	3	; select bank3
  1815  0A0A  0235               	subwf	(_delay+1)^(0+384),w
  1816  0A0B  3088               	movlw	136
  1817  0A0C  1903               	skipnz
  1818  0A0D  0234               	subwf	_delay^(0+384),w
  1819  0A0E  1803               	btfsc	3,0
  1820  0A0F  2A16               	goto	l5312
  1821  0A10  3001               	movlw	1
  1822  0A11  0023               	movlb	3	; select bank3
  1823  0A12  07B4               	addwf	_delay^(0+384),f
  1824  0A13  3000               	movlw	0
  1825  0A14  3DB5               	addwfc	(_delay+1)^(0+384),f
  1826  0A15  2A08               	goto	l622
  1827  0A16                     l5312:	
  1828                           
  1829                           ;main.c: 518: Delayms(1000);
  1830  0A16  30E8               	movlw	232
  1831  0A17  0021               	movlb	1	; select bank1
  1832  0A18  00A0               	movwf	Delayms@delay^(0+128)
  1833  0A19  3003               	movlw	3
  1834  0A1A  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1835  0A1B  3199  219F  318A   	fcall	_Delayms
  1836                           
  1837                           ;main.c: 519: portpin_init();
  1838  0A1E  3199  2144  318A   	fcall	_portpin_init
  1839                           
  1840                           ;main.c: 520: Timer0_init();
  1841  0A21  3198  20E3  318A   	fcall	_Timer0_init
  1842                           
  1843                           ;main.c: 521: PWM_init();
  1844  0A24  3188  2000  318A   	fcall	_PWM_init
  1845                           
  1846                           ;main.c: 522: capture_init();
  1847  0A27  3190  2000  318A   	fcall	_capture_init
  1848                           
  1849                           ;main.c: 523: uart_init();
  1850  0A2A  3199  2107  318A   	fcall	_uart_init
  1851                           
  1852                           ;main.c: 524: INTCONbits.GIE =1;
  1853  0A2D  178B               	bsf	11,7	;volatile
  1854                           
  1855                           ;main.c: 525: INTCONbits.PEIE =1;
  1856  0A2E  170B               	bsf	11,6	;volatile
  1857                           
  1858                           ;main.c: 528: PORTCbits.RC3=0;
  1859  0A2F  0020               	movlb	0	; select bank0
  1860  0A30  118E               	bcf	14,3	;volatile
  1861                           
  1862                           ;main.c: 530: diswin1[0]=0x0B;
  1863  0A31  300B               	movlw	11
  1864  0A32  0021               	movlb	1	; select bank1
  1865  0A33  00ED               	movwf	??_main^(0+128)
  1866  0A34  086D               	movf	??_main^(0+128),w
  1867  0A35  0022               	movlb	2	; select bank2
  1868  0A36  00E4               	movwf	_diswin1^(0+256)
  1869                           
  1870                           ;main.c: 531: diswin1[1]=0x0E;
  1871  0A37  300E               	movlw	14
  1872  0A38  0021               	movlb	1	; select bank1
  1873  0A39  00ED               	movwf	??_main^(0+128)
  1874  0A3A  086D               	movf	??_main^(0+128),w
  1875  0A3B  0022               	movlb	2	; select bank2
  1876  0A3C  00E5               	movwf	(_diswin1^(0+256)+1)
  1877                           
  1878                           ;main.c: 532: diswin1[2]=0x1C;
  1879  0A3D  301C               	movlw	28
  1880  0A3E  0021               	movlb	1	; select bank1
  1881  0A3F  00ED               	movwf	??_main^(0+128)
  1882  0A40  086D               	movf	??_main^(0+128),w
  1883  0A41  0022               	movlb	2	; select bank2
  1884  0A42  00E6               	movwf	(_diswin1^(0+256)+2)
  1885                           
  1886                           ;main.c: 533: diswin1[3]=0x1C;
  1887  0A43  301C               	movlw	28
  1888  0A44  0021               	movlb	1	; select bank1
  1889  0A45  00ED               	movwf	??_main^(0+128)
  1890  0A46  086D               	movf	??_main^(0+128),w
  1891  0A47  0022               	movlb	2	; select bank2
  1892  0A48  00E7               	movwf	(_diswin1^(0+256)+3)
  1893                           
  1894                           ;main.c: 534: diswin1[4]='1'-0x30;
  1895  0A49  01E8               	clrf	(_diswin1^(0+256)+4)
  1896  0A4A  0AE8               	incf	(_diswin1^(0+256)+4),f
  1897                           
  1898                           ;main.c: 535: diswin1[5]='0'-0x30;
  1899  0A4B  01E9               	clrf	(_diswin1^(0+256)+5)
  1900                           
  1901                           ;main.c: 536: TypeDP.TypeD.digitdp5=1;
  1902  0A4C  0020               	movlb	0	; select bank0
  1903  0A4D  166B               	bsf	_TypeDP,4
  1904                           
  1905                           ;main.c: 538: Delayms(2000);
  1906  0A4E  30D0               	movlw	208
  1907  0A4F  0021               	movlb	1	; select bank1
  1908  0A50  00A0               	movwf	Delayms@delay^(0+128)
  1909  0A51  3007               	movlw	7
  1910  0A52  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1911  0A53  3199  219F  318A   	fcall	_Delayms
  1912                           
  1913                           ;main.c: 540: LATCbits.LATC0=0;
  1914  0A56  0022               	movlb	2	; select bank2
  1915  0A57  100E               	bcf	14,0	;volatile
  1916                           
  1917                           ;main.c: 541: TypeDP.TypeD.digitdp5=0;
  1918  0A58  0020               	movlb	0	; select bank0
  1919  0A59  126B               	bcf	_TypeDP,4
  1920                           
  1921                           ;main.c: 542: TypeU.LEDGROUP[0] =0x00;
  1922  0A5A  01E9               	clrf	_TypeU
  1923                           
  1924                           ;main.c: 543: TypeU.LEDGROUP[1] =0x00;
  1925  0A5B  01EA               	clrf	_TypeU+1
  1926                           
  1927                           ;main.c: 544: TypeU.TypeS.wirespeed =1;
  1928  0A5C  1469               	bsf	_TypeU,0
  1929                           
  1930                           ;main.c: 545: TypeU.TypeS.vtg =1;
  1931  0A5D  14EA               	bsf	_TypeU+1,1
  1932                           
  1933                           ;main.c: 546: TypeU.TypeS.twot =1;
  1934  0A5E  1669               	bsf	_TypeU,4
  1935                           
  1936                           ;main.c: 547: TypeDP.DPGROUP[0] =0x00;
  1937  0A5F  01EB               	clrf	_TypeDP
  1938                           
  1939                           ;main.c: 548: TypeDP.TypeD.digitdp2 =1;
  1940  0A60  14EB               	bsf	_TypeDP,1
  1941                           
  1942                           ;main.c: 549: TypeDP.TypeD.digitdp5 =1;
  1943  0A61  166B               	bsf	_TypeDP,4
  1944                           
  1945                           ;main.c: 551: psstatusu.psstatusbyte[0]=0x00;
  1946  0A62  01ED               	clrf	_psstatusu
  1947                           
  1948                           ;main.c: 554: setcurrent=0;
  1949  0A63  0022               	movlb	2	; select bank2
  1950  0A64  01A8               	clrf	_setcurrent^(0+256)
  1951  0A65  01A9               	clrf	(_setcurrent+1)^(0+256)
  1952                           
  1953                           ;main.c: 555: setvoltage=0;
  1954  0A66  0020               	movlb	0	; select bank0
  1955  0A67  01DA               	clrf	_setvoltage
  1956  0A68  01DB               	clrf	_setvoltage+1
  1957                           
  1958                           ;main.c: 556: disp_hex_window1(setcurrent);
  1959  0A69  0022               	movlb	2	; select bank2
  1960  0A6A  0829               	movf	(_setcurrent+1)^(0+256),w
  1961  0A6B  0021               	movlb	1	; select bank1
  1962  0A6C  01AF               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  1963  0A6D  07AF               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  1964  0A6E  0022               	movlb	2	; select bank2
  1965  0A6F  0828               	movf	_setcurrent^(0+256),w
  1966  0A70  0021               	movlb	1	; select bank1
  1967  0A71  01AE               	clrf	disp_hex_window1@hex_data^(0+128)
  1968  0A72  07AE               	addwf	disp_hex_window1@hex_data^(0+128),f
  1969  0A73  319D  2514  318A   	fcall	_disp_hex_window1
  1970                           
  1971                           ;main.c: 557: disp_hex_window2(setvoltage);
  1972  0A76  0020               	movlb	0	; select bank0
  1973  0A77  085B               	movf	_setvoltage+1,w
  1974  0A78  0021               	movlb	1	; select bank1
  1975  0A79  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  1976  0A7A  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  1977  0A7B  0020               	movlb	0	; select bank0
  1978  0A7C  085A               	movf	_setvoltage,w
  1979  0A7D  0021               	movlb	1	; select bank1
  1980  0A7E  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  1981  0A7F  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  1982  0A80  3190  2011  318A   	fcall	_disp_hex_window2
  1983                           
  1984                           ;main.c: 558: TXSTAbits.TXEN =1;
  1985  0A83  0023               	movlb	3	; select bank3
  1986  0A84  169E               	bsf	30,5	;volatile
  1987                           
  1988                           ;main.c: 559: RCSTAbits.CREN =1;
  1989  0A85  161D               	bsf	29,4	;volatile
  1990                           
  1991                           ;main.c: 560: PIE1bits.RCIE =1;
  1992  0A86  0021               	movlb	1	; select bank1
  1993  0A87  1691               	bsf	17,5	;volatile
  1994                           
  1995                           ;main.c: 561: INTCONbits.GIE =1;
  1996  0A88  178B               	bsf	11,7	;volatile
  1997                           
  1998                           ;main.c: 562: INTCONbits.PEIE =1;
  1999  0A89  170B               	bsf	11,6	;volatile
  2000                           
  2001                           ;main.c: 563: Delayms(5000);
  2002  0A8A  3088               	movlw	136
  2003  0A8B  00A0               	movwf	Delayms@delay^(0+128)
  2004  0A8C  3013               	movlw	19
  2005  0A8D  00A1               	movwf	(Delayms@delay^(0+128)+1)
  2006  0A8E  3199  219F  318A   	fcall	_Delayms
  2007                           
  2008                           ;main.c: 564: PIE1bits.TXIE =0;
  2009  0A91  0021               	movlb	1	; select bank1
  2010  0A92  1211               	bcf	17,4	;volatile
  2011  0A93                     l5368:	
  2012                           ;main.c: 565: while(1)
  2013                           
  2014                           
  2015                           ;main.c: 566: {
  2016                           ;main.c: 568: if(send_statusf==1 && onesecf==0)
  2017  0A93  0022               	movlb	2	; select bank2
  2018  0A94  0857               	movf	_send_statusf^(0+256),w
  2019  0A95  3A01               	xorlw	1
  2020  0A96  1D03               	skipz
  2021  0A97  2AA1               	goto	l5376
  2022  0A98  0020               	movlb	0	; select bank0
  2023  0A99  08E3               	movf	_onesecf,f	;volatile
  2024  0A9A  1D03               	skipz
  2025  0A9B  2AA1               	goto	l5376
  2026                           
  2027                           ;main.c: 569: {
  2028                           ;main.c: 570: send_statusf=0;
  2029  0A9C  0022               	movlb	2	; select bank2
  2030  0A9D  01D7               	clrf	_send_statusf^(0+256)
  2031                           
  2032                           ;main.c: 571: send_status();
  2033  0A9E  3199  212F  318A   	fcall	_send_status
  2034  0AA1                     l5376:	
  2035                           
  2036                           ;main.c: 572: }
  2037                           ;main.c: 573: if(onesecf==1 && transmitonf==1)
  2038  0AA1  0020               	movlb	0	; select bank0
  2039  0AA2  0863               	movf	_onesecf,w	;volatile
  2040  0AA3  3A01               	xorlw	1
  2041  0AA4  1D03               	skipz
  2042  0AA5  2AB4               	goto	l5388
  2043  0AA6  0022               	movlb	2	; select bank2
  2044  0AA7  085B               	movf	_transmitonf^(0+256),w
  2045  0AA8  3A01               	xorlw	1
  2046  0AA9  1D03               	skipz
  2047  0AAA  2AB4               	goto	l5388
  2048                           
  2049                           ;main.c: 574: {
  2050                           ;main.c: 575: onesecf=0;
  2051  0AAB  0020               	movlb	0	; select bank0
  2052  0AAC  01E3               	clrf	_onesecf	;volatile
  2053                           
  2054                           ;main.c: 576: transmittops();
  2055  0AAD  319C  2453  318A   	fcall	_transmittops
  2056                           
  2057                           ;main.c: 577: txonf=0;
  2058  0AB0  0023               	movlb	3	; select bank3
  2059  0AB1  01DC               	clrf	_txonf^(0+384)	;volatile
  2060                           
  2061                           ;main.c: 578: cEditfg = 0;
  2062  0AB2  0020               	movlb	0	; select bank0
  2063  0AB3  01DE               	clrf	_cEditfg
  2064  0AB4                     l5388:	
  2065                           
  2066                           ;main.c: 579: }
  2067                           ;main.c: 582: if(gaschkfg == 1)
  2068  0AB4  0022               	movlb	2	; select bank2
  2069  0AB5  0840               	movf	_gaschkfg^(0+256),w
  2070  0AB6  3A01               	xorlw	1
  2071  0AB7  1D03               	skipz
  2072  0AB8  2AC6               	goto	l5392
  2073                           
  2074                           ;main.c: 583: {
  2075                           ;main.c: 584: disp_hex_window2(igascntr);
  2076  0AB9  0023               	movlb	3	; select bank3
  2077  0ABA  083B               	movf	(_igascntr+1)^(0+384),w
  2078  0ABB  0021               	movlb	1	; select bank1
  2079  0ABC  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  2080  0ABD  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  2081  0ABE  0023               	movlb	3	; select bank3
  2082  0ABF  083A               	movf	_igascntr^(0+384),w
  2083  0AC0  0021               	movlb	1	; select bank1
  2084  0AC1  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  2085  0AC2  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  2086  0AC3  3190  2011  318A   	fcall	_disp_hex_window2
  2087  0AC6                     l5392:	
  2088                           
  2089                           ;main.c: 585: }
  2090                           ;main.c: 587: if(universal_error==0)
  2091  0AC6  0022               	movlb	2	; select bank2
  2092  0AC7  08DC               	movf	_universal_error^(0+256),f	;volatile
  2093  0AC8  1D03               	skipz
  2094  0AC9  2FF2               	goto	l5716
  2095                           
  2096                           ;main.c: 588: {
  2097                           ;main.c: 592: if(adaptivepidf==1)
  2098  0ACA  0831               	movf	_adaptivepidf^(0+256),w
  2099  0ACB  3A01               	xorlw	1
  2100  0ACC  1D03               	skipz
  2101  0ACD  2AD2               	goto	l5400
  2102                           
  2103                           ;main.c: 593: {
  2104                           ;main.c: 594: adaptivepidf=0;
  2105  0ACE  01B1               	clrf	_adaptivepidf^(0+256)
  2106                           
  2107                           ;main.c: 595: Adaptive_base_pid();
  2108  0ACF  3194  248D  318A   	fcall	_Adaptive_base_pid
  2109  0AD2                     l5400:	
  2110                           
  2111                           ;main.c: 596: }
  2112                           ;main.c: 598: if(read_enc1f==1)
  2113  0AD2  0022               	movlb	2	; select bank2
  2114  0AD3  0853               	movf	_read_enc1f^(0+256),w	;volatile
  2115  0AD4  3A01               	xorlw	1
  2116  0AD5  1D03               	skipz
  2117  0AD6  2C42               	goto	l5520
  2118                           
  2119                           ;main.c: 599: {
  2120                           ;main.c: 600: read_enc1f=0;
  2121  0AD7  01D3               	clrf	_read_enc1f^(0+256)	;volatile
  2122                           
  2123                           ;main.c: 601: if(enccount==0)
  2124  0AD8  08BC               	movf	_enccount^(0+256),f	;volatile
  2125  0AD9  1D03               	skipz
  2126  0ADA  2B8C               	goto	l5460
  2127                           
  2128                           ;main.c: 602: {
  2129                           ;main.c: 603: encod1=SCANENCODER1();
  2130  0ADB  319D  25F6  318A   	fcall	_SCANENCODER1
  2131  0ADE  0021               	movlb	1	; select bank1
  2132  0ADF  00ED               	movwf	??_main^(0+128)
  2133  0AE0  086D               	movf	??_main^(0+128),w
  2134  0AE1  0020               	movlb	0	; select bank0
  2135  0AE2  00E0               	movwf	_encod1
  2136                           
  2137                           ;main.c: 604: mili1_100++;
  2138  0AE3  3001               	movlw	1
  2139  0AE4  0021               	movlb	1	; select bank1
  2140  0AE5  00ED               	movwf	??_main^(0+128)
  2141  0AE6  086D               	movf	??_main^(0+128),w
  2142  0AE7  0022               	movlb	2	; select bank2
  2143  0AE8  07C2               	addwf	_mili1_100^(0+256),f
  2144                           
  2145                           ;main.c: 605: {
  2146                           ;main.c: 606: if(encod1=='+')
  2147  0AE9  0020               	movlb	0	; select bank0
  2148  0AEA  0860               	movf	_encod1,w
  2149  0AEB  3A2B               	xorlw	43
  2150  0AEC  1D03               	skipz
  2151  0AED  2B00               	goto	l5418
  2152                           
  2153                           ;main.c: 607: {
  2154                           ;main.c: 608: setwirespeed=setwirespeed+pluspara1;
  2155  0AEE  0022               	movlb	2	; select bank2
  2156  0AEF  0850               	movf	_pluspara1^(0+256),w
  2157  0AF0  0020               	movlb	0	; select bank0
  2158  0AF1  075C               	addwf	_setwirespeed,w
  2159  0AF2  00DC               	movwf	_setwirespeed
  2160  0AF3  085D               	movf	_setwirespeed+1,w
  2161  0AF4  1803               	skipnc
  2162  0AF5  0A5D               	incf	_setwirespeed+1,w
  2163  0AF6  00DD               	movwf	_setwirespeed+1
  2164                           
  2165                           ;main.c: 609: if(setwirespeed >= 220)
  2166  0AF7  3000               	movlw	0
  2167  0AF8  025D               	subwf	_setwirespeed+1,w
  2168  0AF9  30DC               	movlw	220
  2169  0AFA  1903               	skipnz
  2170  0AFB  025C               	subwf	_setwirespeed,w
  2171  0AFC  1C03               	skipc
  2172  0AFD  2B41               	goto	l5430
  2173                           
  2174                           ;main.c: 610: setwirespeed=220;
  2175  0AFE  30DC               	movlw	220
  2176  0AFF  2B3E               	goto	L2
  2177  0B00                     l5418:	
  2178                           ;main.c: 613: }
  2179                           
  2180                           ;main.c: 612: pstowfstru.pstowfstrs.setwspeed = setwirespeed;
  2181                           
  2182                           ;main.c: 611: cEditfg = 1;
  2183                           
  2184                           
  2185                           ;main.c: 614: else if(encod1=='-')
  2186  0B00  0020               	movlb	0	; select bank0
  2187  0B01  0860               	movf	_encod1,w
  2188  0B02  3A2D               	xorlw	45
  2189  0B03  1D03               	skipz
  2190  0B04  2B49               	goto	l635
  2191                           
  2192                           ;main.c: 615: {
  2193                           ;main.c: 616: if(setwirespeed >= minuspara1)
  2194  0B05  0022               	movlb	2	; select bank2
  2195  0B06  0848               	movf	_minuspara1^(0+256),w
  2196  0B07  0021               	movlb	1	; select bank1
  2197  0B08  00ED               	movwf	??_main^(0+128)
  2198  0B09  01EE               	clrf	(??_main^(0+128)+1)
  2199  0B0A  086E               	movf	(??_main+1)^(0+128),w
  2200  0B0B  0020               	movlb	0	; select bank0
  2201  0B0C  025D               	subwf	_setwirespeed+1,w
  2202  0B0D  1D03               	skipz
  2203  0B0E  2B13               	goto	u7875
  2204  0B0F  0021               	movlb	1	; select bank1
  2205  0B10  086D               	movf	??_main^(0+128),w
  2206  0B11  0020               	movlb	0	; select bank0
  2207  0B12  025C               	subwf	_setwirespeed,w
  2208  0B13                     u7875:	
  2209  0B13  1C03               	skipc
  2210  0B14  2B2B               	goto	l5424
  2211                           
  2212                           ;main.c: 617: setwirespeed=setwirespeed-minuspara1;
  2213  0B15  0022               	movlb	2	; select bank2
  2214  0B16  0848               	movf	_minuspara1^(0+256),w
  2215  0B17  0021               	movlb	1	; select bank1
  2216  0B18  00ED               	movwf	??_main^(0+128)
  2217  0B19  01EE               	clrf	(??_main^(0+128)+1)
  2218  0B1A  09ED               	comf	??_main^(0+128),f
  2219  0B1B  09EE               	comf	(??_main^(0+128)+1),f
  2220  0B1C  0AED               	incf	??_main^(0+128),f
  2221  0B1D  1903               	skipnz
  2222  0B1E  0AEE               	incf	(??_main^(0+128)+1),f
  2223  0B1F  0020               	movlb	0	; select bank0
  2224  0B20  085C               	movf	_setwirespeed,w
  2225  0B21  0021               	movlb	1	; select bank1
  2226  0B22  076D               	addwf	??_main^(0+128),w
  2227  0B23  0020               	movlb	0	; select bank0
  2228  0B24  00DC               	movwf	_setwirespeed
  2229  0B25  085D               	movf	_setwirespeed+1,w
  2230  0B26  0021               	movlb	1	; select bank1
  2231  0B27  3D6E               	addwfc	(??_main+1)^(0+128),w
  2232  0B28  0020               	movlb	0	; select bank0
  2233  0B29  00DD               	movwf	_setwirespeed+1
  2234  0B2A  2B36               	goto	l638
  2235  0B2B                     l5424:	
  2236                           
  2237                           ;main.c: 619: setwirespeed=setwirespeed--;
  2238  0B2B  3000               	movlw	0
  2239  0B2C  025D               	subwf	_setwirespeed+1,w
  2240  0B2D  3014               	movlw	20
  2241  0B2E  1903               	skipnz
  2242  0B2F  025C               	subwf	_setwirespeed,w
  2243  0B30  1C03               	skipc
  2244  0B31  2B36               	goto	l638
  2245  0B32  3001               	movlw	1
  2246  0B33  02DC               	subwf	_setwirespeed,f
  2247  0B34  3000               	movlw	0
  2248  0B35  3BDD               	subwfb	_setwirespeed+1,f
  2249  0B36                     l638:	
  2250                           
  2251                           ;main.c: 620: if(setwirespeed <= 20)
  2252  0B36  3000               	movlw	0
  2253  0B37  025D               	subwf	_setwirespeed+1,w
  2254  0B38  3015               	movlw	21
  2255  0B39  1903               	skipnz
  2256  0B3A  025C               	subwf	_setwirespeed,w
  2257  0B3B  1803               	skipnc
  2258  0B3C  2B41               	goto	l5430
  2259                           
  2260                           ;main.c: 621: setwirespeed=20;
  2261  0B3D  3014               	movlw	20
  2262  0B3E                     L2:	
  2263  0B3E  00DC               	movwf	_setwirespeed
  2264  0B3F  3000               	movlw	0
  2265  0B40  00DD               	movwf	_setwirespeed+1
  2266  0B41                     l5430:	
  2267                           
  2268                           ;main.c: 622: cEditfg = 1;
  2269  0B41  01DE               	clrf	_cEditfg
  2270  0B42  0ADE               	incf	_cEditfg,f
  2271                           
  2272                           ;main.c: 623: pstowfstru.pstowfstrs.setwspeed = setwirespeed;
  2273  0B43  085C               	movf	_setwirespeed,w
  2274  0B44  0021               	movlb	1	; select bank1
  2275  0B45  00ED               	movwf	??_main^(0+128)
  2276  0B46  086D               	movf	??_main^(0+128),w
  2277  0B47  0024               	movlb	4	; select bank4
  2278  0B48  00C3               	movwf	(_pstowfstru^(0+512)+1)
  2279  0B49                     l635:	
  2280                           
  2281                           ;main.c: 624: }
  2282                           ;main.c: 625: }
  2283                           ;main.c: 626: if(mili1_100<200)
  2284  0B49  30C8               	movlw	200
  2285  0B4A  0022               	movlb	2	; select bank2
  2286  0B4B  0242               	subwf	_mili1_100^(0+256),w
  2287  0B4C  1803               	skipnc
  2288  0B4D  2B66               	goto	l5440
  2289                           
  2290                           ;main.c: 627: {
  2291                           ;main.c: 628: if(encod1=='+')
  2292  0B4E  0020               	movlb	0	; select bank0
  2293  0B4F  0860               	movf	_encod1,w
  2294  0B50  3A2B               	xorlw	43
  2295  0B51  1D03               	skipz
  2296  0B52  2B5A               	goto	l5436
  2297                           
  2298                           ;main.c: 629: pluscount1++;
  2299  0B53  3001               	movlw	1
  2300  0B54  0021               	movlb	1	; select bank1
  2301  0B55  00ED               	movwf	??_main^(0+128)
  2302  0B56  086D               	movf	??_main^(0+128),w
  2303  0B57  0022               	movlb	2	; select bank2
  2304  0B58  07CE               	addwf	_pluscount1^(0+256),f
  2305  0B59  2B85               	goto	l5458
  2306  0B5A                     l5436:	
  2307                           
  2308                           ;main.c: 630: else if(encod1=='-')
  2309  0B5A  0020               	movlb	0	; select bank0
  2310  0B5B  0860               	movf	_encod1,w
  2311  0B5C  3A2D               	xorlw	45
  2312  0B5D  1D03               	skipz
  2313  0B5E  2B85               	goto	l5458
  2314                           
  2315                           ;main.c: 631: minuscount1++;
  2316  0B5F  3001               	movlw	1
  2317  0B60  0021               	movlb	1	; select bank1
  2318  0B61  00ED               	movwf	??_main^(0+128)
  2319  0B62  086D               	movf	??_main^(0+128),w
  2320  0B63  0022               	movlb	2	; select bank2
  2321  0B64  07C6               	addwf	_minuscount1^(0+256),f
  2322                           
  2323                           ;main.c: 632: }
  2324  0B65  2B85               	goto	l5458
  2325  0B66                     l5440:	
  2326                           
  2327                           ;main.c: 633: else if(mili1_100>=200)
  2328  0B66  30C8               	movlw	200
  2329  0B67  0242               	subwf	_mili1_100^(0+256),w
  2330  0B68  1C03               	skipc
  2331  0B69  2B85               	goto	l5458
  2332                           
  2333                           ;main.c: 634: {
  2334                           ;main.c: 635: mili1_100=0;
  2335  0B6A  01C2               	clrf	_mili1_100^(0+256)
  2336                           
  2337                           ;main.c: 636: pluspara1=pluscount1>>1;
  2338  0B6B  364E               	lsrf	_pluscount1^(0+256),w
  2339  0B6C  0021               	movlb	1	; select bank1
  2340  0B6D  00ED               	movwf	??_main^(0+128)
  2341  0B6E  086D               	movf	??_main^(0+128),w
  2342  0B6F  0022               	movlb	2	; select bank2
  2343  0B70  00D0               	movwf	_pluspara1^(0+256)
  2344                           
  2345                           ;main.c: 637: minuspara1=minuscount1>>1;
  2346  0B71  3646               	lsrf	_minuscount1^(0+256),w
  2347  0B72  0021               	movlb	1	; select bank1
  2348  0B73  00ED               	movwf	??_main^(0+128)
  2349  0B74  086D               	movf	??_main^(0+128),w
  2350  0B75  0022               	movlb	2	; select bank2
  2351  0B76  00C8               	movwf	_minuspara1^(0+256)
  2352                           
  2353                           ;main.c: 638: if(pluspara1<=1)
  2354  0B77  3002               	movlw	2
  2355  0B78  0250               	subwf	_pluspara1^(0+256),w
  2356  0B79  1803               	skipnc
  2357  0B7A  2B7D               	goto	l5452
  2358                           
  2359                           ;main.c: 639: pluspara1=1;
  2360  0B7B  01D0               	clrf	_pluspara1^(0+256)
  2361  0B7C  0AD0               	incf	_pluspara1^(0+256),f
  2362  0B7D                     l5452:	
  2363                           
  2364                           ;main.c: 640: if(minuspara1<=1)
  2365  0B7D  3002               	movlw	2
  2366  0B7E  0248               	subwf	_minuspara1^(0+256),w
  2367  0B7F  1803               	skipnc
  2368  0B80  2B83               	goto	l5456
  2369                           
  2370                           ;main.c: 641: minuspara1=1;
  2371  0B81  01C8               	clrf	_minuspara1^(0+256)
  2372  0B82  0AC8               	incf	_minuspara1^(0+256),f
  2373  0B83                     l5456:	
  2374                           
  2375                           ;main.c: 642: pluscount1=0;
  2376  0B83  01CE               	clrf	_pluscount1^(0+256)
  2377                           
  2378                           ;main.c: 643: minuscount1=0;
  2379  0B84  01C6               	clrf	_minuscount1^(0+256)
  2380  0B85                     l5458:	
  2381                           
  2382                           ;main.c: 644: }
  2383                           ;main.c: 645: enccount++;
  2384  0B85  3001               	movlw	1
  2385  0B86  0021               	movlb	1	; select bank1
  2386  0B87  00ED               	movwf	??_main^(0+128)
  2387  0B88  086D               	movf	??_main^(0+128),w
  2388  0B89  0022               	movlb	2	; select bank2
  2389  0B8A  07BC               	addwf	_enccount^(0+256),f	;volatile
  2390                           
  2391                           ;main.c: 646: }
  2392  0B8B  2C42               	goto	l5520
  2393  0B8C                     l5460:	
  2394                           
  2395                           ;main.c: 647: else
  2396                           ;main.c: 648: {
  2397                           ;main.c: 649: mili2_100++;
  2398  0B8C  3001               	movlw	1
  2399  0B8D  0021               	movlb	1	; select bank1
  2400  0B8E  00ED               	movwf	??_main^(0+128)
  2401  0B8F  086D               	movf	??_main^(0+128),w
  2402  0B90  0022               	movlb	2	; select bank2
  2403  0B91  07C3               	addwf	_mili2_100^(0+256),f
  2404                           
  2405                           ;main.c: 650: encod2=SCANENCODER2();
  2406  0B92  319D  2578  318A   	fcall	_SCANENCODER2
  2407  0B95  0021               	movlb	1	; select bank1
  2408  0B96  00ED               	movwf	??_main^(0+128)
  2409  0B97  086D               	movf	??_main^(0+128),w
  2410  0B98  0020               	movlb	0	; select bank0
  2411  0B99  00E1               	movwf	_encod2
  2412                           
  2413                           ;main.c: 651: if(TypeU.TypeS.vtg==1)
  2414  0B9A  1CEA               	btfss	_TypeU+1,1
  2415  0B9B  2C04               	goto	l5492
  2416                           
  2417                           ;main.c: 652: {
  2418                           ;main.c: 653: if(encod2=='+')
  2419  0B9C  0861               	movf	_encod2,w
  2420  0B9D  3A2B               	xorlw	43
  2421  0B9E  1D03               	skipz
  2422  0B9F  2BB4               	goto	l5476
  2423                           
  2424                           ;main.c: 654: {
  2425                           ;main.c: 655: setvoltage=setvoltage+pluspara2;
  2426  0BA0  0022               	movlb	2	; select bank2
  2427  0BA1  0851               	movf	_pluspara2^(0+256),w
  2428  0BA2  0020               	movlb	0	; select bank0
  2429  0BA3  075A               	addwf	_setvoltage,w
  2430  0BA4  00DA               	movwf	_setvoltage
  2431  0BA5  085B               	movf	_setvoltage+1,w
  2432  0BA6  1803               	skipnc
  2433  0BA7  0A5B               	incf	_setvoltage+1,w
  2434  0BA8  00DB               	movwf	_setvoltage+1
  2435                           
  2436                           ;main.c: 656: if(setvoltage>440)
  2437  0BA9  3001               	movlw	1
  2438  0BAA  025B               	subwf	_setvoltage+1,w
  2439  0BAB  30B9               	movlw	185
  2440  0BAC  1903               	skipnz
  2441  0BAD  025A               	subwf	_setvoltage,w
  2442  0BAE  1C03               	skipc
  2443  0BAF  2BF5               	goto	l5488
  2444                           
  2445                           ;main.c: 657: setvoltage=440;
  2446  0BB0  30B8               	movlw	184
  2447  0BB1  00DA               	movwf	_setvoltage
  2448  0BB2  3001               	movlw	1
  2449  0BB3  2BF4               	goto	L5
  2450  0BB4                     l5476:	
  2451                           ;main.c: 662: }
  2452                           
  2453                           ;main.c: 661: pstowfstru.pstowfstrs.Hi_setvoltage = setvoltage >> 8;
  2454                           
  2455                           ;main.c: 660: pstowfstru.pstowfstrs.Lo_setvoltage = setvoltage;
  2456                           
  2457                           ;main.c: 658: cEditfg = 1;
  2458                           
  2459                           
  2460                           ;main.c: 663: else if(encod2=='-')
  2461  0BB4  0020               	movlb	0	; select bank0
  2462  0BB5  0861               	movf	_encod2,w
  2463  0BB6  3A2D               	xorlw	45
  2464  0BB7  1D03               	skipz
  2465  0BB8  2C04               	goto	l5492
  2466                           
  2467                           ;main.c: 664: {
  2468                           ;main.c: 665: if(setvoltage>=minuspara2)
  2469  0BB9  0022               	movlb	2	; select bank2
  2470  0BBA  0849               	movf	_minuspara2^(0+256),w
  2471  0BBB  0021               	movlb	1	; select bank1
  2472  0BBC  00ED               	movwf	??_main^(0+128)
  2473  0BBD  01EE               	clrf	(??_main^(0+128)+1)
  2474  0BBE  086E               	movf	(??_main+1)^(0+128),w
  2475  0BBF  0020               	movlb	0	; select bank0
  2476  0BC0  025B               	subwf	_setvoltage+1,w
  2477  0BC1  1D03               	skipz
  2478  0BC2  2BC7               	goto	u8005
  2479  0BC3  0021               	movlb	1	; select bank1
  2480  0BC4  086D               	movf	??_main^(0+128),w
  2481  0BC5  0020               	movlb	0	; select bank0
  2482  0BC6  025A               	subwf	_setvoltage,w
  2483  0BC7                     u8005:	
  2484  0BC7  1C03               	skipc
  2485  0BC8  2BDF               	goto	l5482
  2486                           
  2487                           ;main.c: 666: setvoltage=setvoltage-minuspara2;
  2488  0BC9  0022               	movlb	2	; select bank2
  2489  0BCA  0849               	movf	_minuspara2^(0+256),w
  2490  0BCB  0021               	movlb	1	; select bank1
  2491  0BCC  00ED               	movwf	??_main^(0+128)
  2492  0BCD  01EE               	clrf	(??_main^(0+128)+1)
  2493  0BCE  09ED               	comf	??_main^(0+128),f
  2494  0BCF  09EE               	comf	(??_main^(0+128)+1),f
  2495  0BD0  0AED               	incf	??_main^(0+128),f
  2496  0BD1  1903               	skipnz
  2497  0BD2  0AEE               	incf	(??_main^(0+128)+1),f
  2498  0BD3  0020               	movlb	0	; select bank0
  2499  0BD4  085A               	movf	_setvoltage,w
  2500  0BD5  0021               	movlb	1	; select bank1
  2501  0BD6  076D               	addwf	??_main^(0+128),w
  2502  0BD7  0020               	movlb	0	; select bank0
  2503  0BD8  00DA               	movwf	_setvoltage
  2504  0BD9  085B               	movf	_setvoltage+1,w
  2505  0BDA  0021               	movlb	1	; select bank1
  2506  0BDB  3D6E               	addwfc	(??_main+1)^(0+128),w
  2507  0BDC  0020               	movlb	0	; select bank0
  2508  0BDD  00DB               	movwf	_setvoltage+1
  2509  0BDE  2BEA               	goto	l656
  2510  0BDF                     l5482:	
  2511                           
  2512                           ;main.c: 668: setvoltage=setvoltage--;
  2513  0BDF  3000               	movlw	0
  2514  0BE0  025B               	subwf	_setvoltage+1,w
  2515  0BE1  308C               	movlw	140
  2516  0BE2  1903               	skipnz
  2517  0BE3  025A               	subwf	_setvoltage,w
  2518  0BE4  1C03               	skipc
  2519  0BE5  2BEA               	goto	l656
  2520  0BE6  3001               	movlw	1
  2521  0BE7  02DA               	subwf	_setvoltage,f
  2522  0BE8  3000               	movlw	0
  2523  0BE9  3BDB               	subwfb	_setvoltage+1,f
  2524  0BEA                     l656:	
  2525                           
  2526                           ;main.c: 670: if(setvoltage<=140)
  2527  0BEA  3000               	movlw	0
  2528  0BEB  025B               	subwf	_setvoltage+1,w
  2529  0BEC  308D               	movlw	141
  2530  0BED  1903               	skipnz
  2531  0BEE  025A               	subwf	_setvoltage,w
  2532  0BEF  1803               	skipnc
  2533  0BF0  2BF5               	goto	l5488
  2534                           
  2535                           ;main.c: 671: setvoltage=140;
  2536  0BF1  308C               	movlw	140
  2537  0BF2  00DA               	movwf	_setvoltage
  2538  0BF3  3000               	movlw	0
  2539  0BF4                     L5:	
  2540  0BF4  00DB               	movwf	_setvoltage+1
  2541  0BF5                     l5488:	
  2542                           
  2543                           ;main.c: 672: cEditfg = 1;
  2544  0BF5  01DE               	clrf	_cEditfg
  2545  0BF6  0ADE               	incf	_cEditfg,f
  2546                           
  2547                           ;main.c: 673: pstowfstru.pstowfstrs.Lo_setvoltage = setvoltage;
  2548  0BF7  085A               	movf	_setvoltage,w
  2549  0BF8  0021               	movlb	1	; select bank1
  2550  0BF9  00ED               	movwf	??_main^(0+128)
  2551  0BFA  086D               	movf	??_main^(0+128),w
  2552  0BFB  0024               	movlb	4	; select bank4
  2553  0BFC  00C8               	movwf	(_pstowfstru^(0+512)+6)
  2554                           
  2555                           ;main.c: 674: pstowfstru.pstowfstrs.Hi_setvoltage = setvoltage >> 8;
  2556  0BFD  0020               	movlb	0	; select bank0
  2557  0BFE  085B               	movf	_setvoltage+1,w
  2558  0BFF  0021               	movlb	1	; select bank1
  2559  0C00  00ED               	movwf	??_main^(0+128)
  2560  0C01  086D               	movf	??_main^(0+128),w
  2561  0C02  0024               	movlb	4	; select bank4
  2562  0C03  00C7               	movwf	(_pstowfstru^(0+512)+5)
  2563  0C04                     l5492:	
  2564                           
  2565                           ;main.c: 675: }
  2566                           ;main.c: 676: }
  2567                           ;main.c: 710: if(mili2_100<200)
  2568  0C04  30C8               	movlw	200
  2569  0C05  0022               	movlb	2	; select bank2
  2570  0C06  0243               	subwf	_mili2_100^(0+256),w
  2571  0C07  1803               	skipnc
  2572  0C08  2C21               	goto	l5502
  2573                           
  2574                           ;main.c: 711: {
  2575                           ;main.c: 712: if(encod2=='+')
  2576  0C09  0020               	movlb	0	; select bank0
  2577  0C0A  0861               	movf	_encod2,w
  2578  0C0B  3A2B               	xorlw	43
  2579  0C0C  1D03               	skipz
  2580  0C0D  2C15               	goto	l5498
  2581                           
  2582                           ;main.c: 713: pluscount2++;
  2583  0C0E  3001               	movlw	1
  2584  0C0F  0021               	movlb	1	; select bank1
  2585  0C10  00ED               	movwf	??_main^(0+128)
  2586  0C11  086D               	movf	??_main^(0+128),w
  2587  0C12  0022               	movlb	2	; select bank2
  2588  0C13  07CF               	addwf	_pluscount2^(0+256),f
  2589  0C14  2C40               	goto	l663
  2590  0C15                     l5498:	
  2591                           
  2592                           ;main.c: 714: else if(encod2=='-')
  2593  0C15  0020               	movlb	0	; select bank0
  2594  0C16  0861               	movf	_encod2,w
  2595  0C17  3A2D               	xorlw	45
  2596  0C18  1D03               	skipz
  2597  0C19  2C40               	goto	l663
  2598                           
  2599                           ;main.c: 715: minuscount2++;
  2600  0C1A  3001               	movlw	1
  2601  0C1B  0021               	movlb	1	; select bank1
  2602  0C1C  00ED               	movwf	??_main^(0+128)
  2603  0C1D  086D               	movf	??_main^(0+128),w
  2604  0C1E  0022               	movlb	2	; select bank2
  2605  0C1F  07C7               	addwf	_minuscount2^(0+256),f
  2606                           
  2607                           ;main.c: 716: }
  2608  0C20  2C40               	goto	l663
  2609  0C21                     l5502:	
  2610                           
  2611                           ;main.c: 717: else if(mili2_100>=200)
  2612  0C21  30C8               	movlw	200
  2613  0C22  0243               	subwf	_mili2_100^(0+256),w
  2614  0C23  1C03               	skipc
  2615  0C24  2C40               	goto	l663
  2616                           
  2617                           ;main.c: 718: {
  2618                           ;main.c: 719: mili2_100=0;
  2619  0C25  01C3               	clrf	_mili2_100^(0+256)
  2620                           
  2621                           ;main.c: 720: pluspara2=pluscount2;
  2622  0C26  084F               	movf	_pluscount2^(0+256),w
  2623  0C27  0021               	movlb	1	; select bank1
  2624  0C28  00ED               	movwf	??_main^(0+128)
  2625  0C29  086D               	movf	??_main^(0+128),w
  2626  0C2A  0022               	movlb	2	; select bank2
  2627  0C2B  00D1               	movwf	_pluspara2^(0+256)
  2628                           
  2629                           ;main.c: 721: minuspara2=minuscount2;
  2630  0C2C  0847               	movf	_minuscount2^(0+256),w
  2631  0C2D  0021               	movlb	1	; select bank1
  2632  0C2E  00ED               	movwf	??_main^(0+128)
  2633  0C2F  086D               	movf	??_main^(0+128),w
  2634  0C30  0022               	movlb	2	; select bank2
  2635  0C31  00C9               	movwf	_minuspara2^(0+256)
  2636                           
  2637                           ;main.c: 722: if(pluspara2<=1)
  2638  0C32  3002               	movlw	2
  2639  0C33  0251               	subwf	_pluspara2^(0+256),w
  2640  0C34  1803               	skipnc
  2641  0C35  2C38               	goto	l5514
  2642                           
  2643                           ;main.c: 723: pluspara2=1;
  2644  0C36  01D1               	clrf	_pluspara2^(0+256)
  2645  0C37  0AD1               	incf	_pluspara2^(0+256),f
  2646  0C38                     l5514:	
  2647                           
  2648                           ;main.c: 724: if(minuspara2<=1)
  2649  0C38  3002               	movlw	2
  2650  0C39  0249               	subwf	_minuspara2^(0+256),w
  2651  0C3A  1803               	skipnc
  2652  0C3B  2C3E               	goto	l5518
  2653                           
  2654                           ;main.c: 725: minuspara2=1;
  2655  0C3C  01C9               	clrf	_minuspara2^(0+256)
  2656  0C3D  0AC9               	incf	_minuspara2^(0+256),f
  2657  0C3E                     l5518:	
  2658                           
  2659                           ;main.c: 726: pluscount2=0;
  2660  0C3E  01CF               	clrf	_pluscount2^(0+256)
  2661                           
  2662                           ;main.c: 727: minuscount2=0;
  2663  0C3F  01C7               	clrf	_minuscount2^(0+256)
  2664  0C40                     l663:	
  2665                           
  2666                           ;main.c: 728: }
  2667                           ;main.c: 729: enccount=0;
  2668  0C40  0022               	movlb	2	; select bank2
  2669  0C41  01BC               	clrf	_enccount^(0+256)	;volatile
  2670  0C42                     l5520:	
  2671                           
  2672                           ;main.c: 730: }
  2673                           ;main.c: 731: }
  2674                           ;main.c: 735: if(prevkey!=key)
  2675  0C42  086E               	movf	_prevkey^(0+256),w	;volatile
  2676  0C43  0021               	movlb	1	; select bank1
  2677  0C44  066F               	xorwf	_key^(0+128),w	;volatile
  2678  0C45  1903               	skipnz
  2679  0C46  2C5F               	goto	l5532
  2680                           
  2681                           ;main.c: 736: {
  2682                           ;main.c: 738: key_application(key);
  2683  0C47  086F               	movf	_key^(0+128),w	;volatile
  2684  0C48  3186  26B5  318A   	fcall	_key_application
  2685                           
  2686                           ;main.c: 739: if(key!=0)
  2687  0C4B  0021               	movlb	1	; select bank1
  2688  0C4C  086F               	movf	_key^(0+128),w	;volatile
  2689  0C4D  1903               	btfsc	3,2
  2690  0C4E  2C5F               	goto	l5532
  2691                           
  2692                           ;main.c: 740: {
  2693                           ;main.c: 741: count_1ms=0;
  2694  0C4F  0023               	movlb	3	; select bank3
  2695  0C50  01B2               	clrf	_count_1ms^(0+384)	;volatile
  2696  0C51  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  2697                           
  2698                           ;main.c: 742: onesecf=1;
  2699  0C52  3001               	movlw	1
  2700  0C53  0021               	movlb	1	; select bank1
  2701  0C54  00ED               	movwf	??_main^(0+128)
  2702  0C55  086D               	movf	??_main^(0+128),w
  2703  0C56  0020               	movlb	0	; select bank0
  2704  0C57  00E3               	movwf	_onesecf	;volatile
  2705                           
  2706                           ;main.c: 743: txonf=1;
  2707  0C58  3001               	movlw	1
  2708  0C59  0021               	movlb	1	; select bank1
  2709  0C5A  00ED               	movwf	??_main^(0+128)
  2710  0C5B  086D               	movf	??_main^(0+128),w
  2711  0C5C  0023               	movlb	3	; select bank3
  2712  0C5D  00DC               	movwf	_txonf^(0+384)	;volatile
  2713  0C5E  0021               	movlb	1	; select bank1
  2714  0C5F                     l5532:	
  2715                           
  2716                           ;main.c: 744: }
  2717                           ;main.c: 745: }
  2718                           ;main.c: 746: prevkey=key;
  2719  0C5F  0021               	movlb	1	; select bank1
  2720  0C60  086F               	movf	_key^(0+128),w	;volatile
  2721  0C61  00ED               	movwf	??_main^(0+128)
  2722  0C62  086D               	movf	??_main^(0+128),w
  2723  0C63  0022               	movlb	2	; select bank2
  2724  0C64  00EE               	movwf	_prevkey^(0+256)	;volatile
  2725                           
  2726                           ;main.c: 750: if(psstatusu.psstatuss.weldoncyclestrt!=1)
  2727  0C65  0020               	movlb	0	; select bank0
  2728  0C66  196D               	btfsc	_psstatusu,2
  2729  0C67  2D67               	goto	l669
  2730                           
  2731                           ;main.c: 751: {
  2732                           ;main.c: 752: if( (prevsetwirespeed!=setwirespeed) || (prevsetcurrent!=setcurrent) || di
      +                          spupdatef==1 )
  2733  0C68  085D               	movf	_setwirespeed+1,w
  2734  0C69  0023               	movlb	3	; select bank3
  2735  0C6A  0647               	xorwf	(_prevsetwirespeed+1)^(0+384),w
  2736  0C6B  1D03               	skipz
  2737  0C6C  2C71               	goto	u8125
  2738  0C6D  0020               	movlb	0	; select bank0
  2739  0C6E  085C               	movf	_setwirespeed,w
  2740  0C6F  0023               	movlb	3	; select bank3
  2741  0C70  0646               	xorwf	_prevsetwirespeed^(0+384),w
  2742  0C71                     u8125:	
  2743  0C71  1D03               	skipz
  2744  0C72  2C84               	goto	l5542
  2745  0C73  0022               	movlb	2	; select bank2
  2746  0C74  0829               	movf	(_setcurrent+1)^(0+256),w
  2747  0C75  0023               	movlb	3	; select bank3
  2748  0C76  0643               	xorwf	(_prevsetcurrent+1)^(0+384),w
  2749  0C77  1D03               	skipz
  2750  0C78  2C7D               	goto	u8135
  2751  0C79  0022               	movlb	2	; select bank2
  2752  0C7A  0828               	movf	_setcurrent^(0+256),w
  2753  0C7B  0023               	movlb	3	; select bank3
  2754  0C7C  0642               	xorwf	_prevsetcurrent^(0+384),w
  2755  0C7D                     u8135:	
  2756  0C7D  1D03               	skipz
  2757  0C7E  2C84               	goto	l5542
  2758  0C7F  0020               	movlb	0	; select bank0
  2759  0C80  086F               	movf	_dispupdatef,w	;volatile
  2760  0C81  3A01               	xorlw	1
  2761  0C82  1D03               	skipz
  2762  0C83  2CCE               	goto	l5562
  2763  0C84                     l5542:	
  2764                           
  2765                           ;main.c: 753: {
  2766                           ;main.c: 754: if(prevsetwirespeed!=setwirespeed)
  2767  0C84  0020               	movlb	0	; select bank0
  2768  0C85  085D               	movf	_setwirespeed+1,w
  2769  0C86  0023               	movlb	3	; select bank3
  2770  0C87  0647               	xorwf	(_prevsetwirespeed+1)^(0+384),w
  2771  0C88  1D03               	skipz
  2772  0C89  2C8E               	goto	u8155
  2773  0C8A  0020               	movlb	0	; select bank0
  2774  0C8B  085C               	movf	_setwirespeed,w
  2775  0C8C  0023               	movlb	3	; select bank3
  2776  0C8D  0646               	xorwf	_prevsetwirespeed^(0+384),w
  2777  0C8E                     u8155:	
  2778  0C8E  1903               	skipnz
  2779  0C8F  2C93               	goto	l673
  2780                           
  2781                           ;main.c: 755: {
  2782                           ;main.c: 756: wfspeedchangef=1;
  2783  0C90  0022               	movlb	2	; select bank2
  2784  0C91  01EF               	clrf	_wfspeedchangef^(0+256)
  2785  0C92  0AEF               	incf	_wfspeedchangef^(0+256),f
  2786  0C93                     l673:	
  2787                           
  2788                           ;main.c: 757: }
  2789                           ;main.c: 758: if(TypeU.TypeS.wirespeed==1)
  2790  0C93  0020               	movlb	0	; select bank0
  2791  0C94  1C69               	btfss	_TypeU,0
  2792  0C95  2CA3               	goto	l674
  2793                           
  2794                           ;main.c: 759: {
  2795                           ;main.c: 760: TypeU.TypeS.wirespeed=1;
  2796  0C96  1469               	bsf	_TypeU,0
  2797                           
  2798                           ;main.c: 761: TypeU.TypeS.amp=0;
  2799  0C97  106A               	bcf	_TypeU+1,0
  2800                           
  2801                           ;main.c: 762: TypeU.TypeS.thickness=0;
  2802  0C98  10E9               	bcf	_TypeU,1
  2803                           
  2804                           ;main.c: 764: TypeDP.TypeD.digitdp1 =0;
  2805  0C99  106B               	bcf	_TypeDP,0
  2806                           
  2807                           ;main.c: 765: TypeDP.TypeD.digitdp2 =1;
  2808  0C9A  14EB               	bsf	_TypeDP,1
  2809                           
  2810                           ;main.c: 766: TypeDP.TypeD.digitdp3 =0;
  2811  0C9B  116B               	bcf	_TypeDP,2
  2812                           
  2813                           ;main.c: 767: disp_hex_window1(setwirespeed);
  2814  0C9C  085D               	movf	_setwirespeed+1,w
  2815  0C9D  0021               	movlb	1	; select bank1
  2816  0C9E  01AF               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  2817  0C9F  07AF               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  2818  0CA0  0020               	movlb	0	; select bank0
  2819  0CA1  085C               	movf	_setwirespeed,w
  2820  0CA2  2CB2               	goto	L3
  2821  0CA3                     l674:	
  2822                           ;main.c: 768: }
  2823                           
  2824                           
  2825                           ;main.c: 769: else if(TypeU.TypeS.amp==1)
  2826  0CA3  1C6A               	btfss	_TypeU+1,0
  2827  0CA4  2CB8               	goto	l5554
  2828                           
  2829                           ;main.c: 770: {
  2830                           ;main.c: 771: TypeU.TypeS.wirespeed=0;
  2831  0CA5  1069               	bcf	_TypeU,0
  2832                           
  2833                           ;main.c: 772: TypeU.TypeS.amp=1;
  2834  0CA6  146A               	bsf	_TypeU+1,0
  2835                           
  2836                           ;main.c: 773: TypeU.TypeS.thickness=0;
  2837  0CA7  10E9               	bcf	_TypeU,1
  2838                           
  2839                           ;main.c: 774: TypeDP.TypeD.digitdp1 =0;
  2840  0CA8  106B               	bcf	_TypeDP,0
  2841                           
  2842                           ;main.c: 775: TypeDP.TypeD.digitdp2 =0;
  2843  0CA9  10EB               	bcf	_TypeDP,1
  2844                           
  2845                           ;main.c: 776: TypeDP.TypeD.digitdp3 =0;
  2846  0CAA  116B               	bcf	_TypeDP,2
  2847                           
  2848                           ;main.c: 777: disp_hex_window1(setcurrent);
  2849  0CAB  0022               	movlb	2	; select bank2
  2850  0CAC  0829               	movf	(_setcurrent+1)^(0+256),w
  2851  0CAD  0021               	movlb	1	; select bank1
  2852  0CAE  01AF               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  2853  0CAF  07AF               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  2854  0CB0  0022               	movlb	2	; select bank2
  2855  0CB1  0828               	movf	_setcurrent^(0+256),w
  2856  0CB2                     L3:	
  2857  0CB2  0021               	movlb	1	; select bank1
  2858  0CB3  01AE               	clrf	disp_hex_window1@hex_data^(0+128)
  2859  0CB4  07AE               	addwf	disp_hex_window1@hex_data^(0+128),f
  2860  0CB5  319D  2514  318A   	fcall	_disp_hex_window1
  2861  0CB8                     l5554:	
  2862                           
  2863                           ;main.c: 778: }
  2864                           ;main.c: 791: pstowfstru.pstowfstrs.setwspeed=setwirespeed;
  2865  0CB8  0020               	movlb	0	; select bank0
  2866  0CB9  085C               	movf	_setwirespeed,w
  2867  0CBA  0021               	movlb	1	; select bank1
  2868  0CBB  00ED               	movwf	??_main^(0+128)
  2869  0CBC  086D               	movf	??_main^(0+128),w
  2870  0CBD  0024               	movlb	4	; select bank4
  2871  0CBE  00C3               	movwf	(_pstowfstru^(0+512)+1)
  2872                           
  2873                           ;main.c: 793: count_1ms=0;
  2874  0CBF  0023               	movlb	3	; select bank3
  2875  0CC0  01B2               	clrf	_count_1ms^(0+384)	;volatile
  2876  0CC1  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  2877                           
  2878                           ;main.c: 794: onesecf=1;
  2879  0CC2  3001               	movlw	1
  2880  0CC3  0021               	movlb	1	; select bank1
  2881  0CC4  00ED               	movwf	??_main^(0+128)
  2882  0CC5  086D               	movf	??_main^(0+128),w
  2883  0CC6  0020               	movlb	0	; select bank0
  2884  0CC7  00E3               	movwf	_onesecf	;volatile
  2885                           
  2886                           ;main.c: 795: txonf=1;
  2887  0CC8  3001               	movlw	1
  2888  0CC9  0021               	movlb	1	; select bank1
  2889  0CCA  00ED               	movwf	??_main^(0+128)
  2890  0CCB  086D               	movf	??_main^(0+128),w
  2891  0CCC  0023               	movlb	3	; select bank3
  2892  0CCD  00DC               	movwf	_txonf^(0+384)	;volatile
  2893  0CCE                     l5562:	
  2894                           
  2895                           ;main.c: 796: }
  2896                           ;main.c: 797: prevsetwirespeed=setwirespeed;
  2897  0CCE  0020               	movlb	0	; select bank0
  2898  0CCF  085D               	movf	_setwirespeed+1,w
  2899  0CD0  0023               	movlb	3	; select bank3
  2900  0CD1  01C7               	clrf	(_prevsetwirespeed+1)^(0+384)
  2901  0CD2  07C7               	addwf	(_prevsetwirespeed+1)^(0+384),f
  2902  0CD3  0020               	movlb	0	; select bank0
  2903  0CD4  085C               	movf	_setwirespeed,w
  2904  0CD5  0023               	movlb	3	; select bank3
  2905  0CD6  01C6               	clrf	_prevsetwirespeed^(0+384)
  2906  0CD7  07C6               	addwf	_prevsetwirespeed^(0+384),f
  2907                           
  2908                           ;main.c: 798: prevsetcurrent=setcurrent;
  2909  0CD8  0022               	movlb	2	; select bank2
  2910  0CD9  0829               	movf	(_setcurrent+1)^(0+256),w
  2911  0CDA  0023               	movlb	3	; select bank3
  2912  0CDB  01C3               	clrf	(_prevsetcurrent+1)^(0+384)
  2913  0CDC  07C3               	addwf	(_prevsetcurrent+1)^(0+384),f
  2914  0CDD  0022               	movlb	2	; select bank2
  2915  0CDE  0828               	movf	_setcurrent^(0+256),w
  2916  0CDF  0023               	movlb	3	; select bank3
  2917  0CE0  01C2               	clrf	_prevsetcurrent^(0+384)
  2918  0CE1  07C2               	addwf	_prevsetcurrent^(0+384),f
  2919                           
  2920                           ;main.c: 800: if(((prevsetvoltage!=setvoltage) || dispupdatef==1) && (TypeU.TypeS.vtg==1
      +                          ) )
  2921  0CE2  0020               	movlb	0	; select bank0
  2922  0CE3  085B               	movf	_setvoltage+1,w
  2923  0CE4  0023               	movlb	3	; select bank3
  2924  0CE5  0645               	xorwf	(_prevsetvoltage+1)^(0+384),w
  2925  0CE6  1D03               	skipz
  2926  0CE7  2CEC               	goto	u8185
  2927  0CE8  0020               	movlb	0	; select bank0
  2928  0CE9  085A               	movf	_setvoltage,w
  2929  0CEA  0023               	movlb	3	; select bank3
  2930  0CEB  0644               	xorwf	_prevsetvoltage^(0+384),w
  2931  0CEC                     u8185:	
  2932  0CEC  1D03               	skipz
  2933  0CED  2CF3               	goto	l679
  2934  0CEE  0020               	movlb	0	; select bank0
  2935  0CEF  086F               	movf	_dispupdatef,w	;volatile
  2936  0CF0  3A01               	xorlw	1
  2937  0CF1  1D03               	skipz
  2938  0CF2  2D34               	goto	l5588
  2939  0CF3                     l679:	
  2940  0CF3  0020               	movlb	0	; select bank0
  2941  0CF4  1CEA               	btfss	_TypeU+1,1
  2942  0CF5  2D34               	goto	l5588
  2943                           
  2944                           ;main.c: 801: {
  2945                           ;main.c: 802: TypeDP.TypeD.digitdp4 =0;
  2946  0CF6  11EB               	bcf	_TypeDP,3
  2947                           
  2948                           ;main.c: 803: TypeDP.TypeD.digitdp5 =1;
  2949  0CF7  166B               	bsf	_TypeDP,4
  2950                           
  2951                           ;main.c: 804: TypeDP.TypeD.digitdp6 =0;
  2952  0CF8  12EB               	bcf	_TypeDP,5
  2953                           
  2954                           ;main.c: 805: TypeU.TypeS.arclength =0;
  2955  0CF9  1169               	bcf	_TypeU,2
  2956                           
  2957                           ;main.c: 806: TypeU.TypeS.vtg =1;
  2958  0CFA  14EA               	bsf	_TypeU+1,1
  2959                           
  2960                           ;main.c: 807: TypeU.TypeS.sec =0;
  2961  0CFB  116A               	bcf	_TypeU+1,2
  2962                           
  2963                           ;main.c: 808: disp_hex_window2(setvoltage);
  2964  0CFC  085B               	movf	_setvoltage+1,w
  2965  0CFD  0021               	movlb	1	; select bank1
  2966  0CFE  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  2967  0CFF  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  2968  0D00  0020               	movlb	0	; select bank0
  2969  0D01  085A               	movf	_setvoltage,w
  2970  0D02  0021               	movlb	1	; select bank1
  2971  0D03  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  2972  0D04  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  2973  0D05  3190  2011  318A   	fcall	_disp_hex_window2
  2974                           
  2975                           ;main.c: 809: pstowfstru.pstowfstrs.Lo_setvoltage=setvoltage;
  2976  0D08  0020               	movlb	0	; select bank0
  2977  0D09  085A               	movf	_setvoltage,w
  2978  0D0A  0021               	movlb	1	; select bank1
  2979  0D0B  00ED               	movwf	??_main^(0+128)
  2980  0D0C  086D               	movf	??_main^(0+128),w
  2981  0D0D  0024               	movlb	4	; select bank4
  2982  0D0E  00C8               	movwf	(_pstowfstru^(0+512)+6)
  2983                           
  2984                           ;main.c: 810: pstowfstru.pstowfstrs.Hi_setvoltage=setvoltage >> 8;
  2985  0D0F  0020               	movlb	0	; select bank0
  2986  0D10  085B               	movf	_setvoltage+1,w
  2987  0D11  0021               	movlb	1	; select bank1
  2988  0D12  00ED               	movwf	??_main^(0+128)
  2989  0D13  086D               	movf	??_main^(0+128),w
  2990  0D14  0024               	movlb	4	; select bank4
  2991  0D15  00C7               	movwf	(_pstowfstru^(0+512)+5)
  2992                           
  2993                           ;main.c: 811: count_1ms=0;
  2994  0D16  0023               	movlb	3	; select bank3
  2995  0D17  01B2               	clrf	_count_1ms^(0+384)	;volatile
  2996  0D18  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  2997                           
  2998                           ;main.c: 812: onesecf=1;
  2999  0D19  3001               	movlw	1
  3000  0D1A  0021               	movlb	1	; select bank1
  3001  0D1B  00ED               	movwf	??_main^(0+128)
  3002  0D1C  086D               	movf	??_main^(0+128),w
  3003  0D1D  0020               	movlb	0	; select bank0
  3004  0D1E  00E3               	movwf	_onesecf	;volatile
  3005                           
  3006                           ;main.c: 813: txonf=1;
  3007  0D1F  3001               	movlw	1
  3008  0D20  0021               	movlb	1	; select bank1
  3009  0D21  00ED               	movwf	??_main^(0+128)
  3010  0D22  086D               	movf	??_main^(0+128),w
  3011  0D23  0023               	movlb	3	; select bank3
  3012  0D24  00DC               	movwf	_txonf^(0+384)	;volatile
  3013                           
  3014                           ;main.c: 814: prevsetvoltage=setvoltage;
  3015  0D25  0020               	movlb	0	; select bank0
  3016  0D26  085B               	movf	_setvoltage+1,w
  3017  0D27  0023               	movlb	3	; select bank3
  3018  0D28  01C5               	clrf	(_prevsetvoltage+1)^(0+384)
  3019  0D29  07C5               	addwf	(_prevsetvoltage+1)^(0+384),f
  3020  0D2A  0020               	movlb	0	; select bank0
  3021  0D2B  085A               	movf	_setvoltage,w
  3022  0D2C  0023               	movlb	3	; select bank3
  3023  0D2D  01C4               	clrf	_prevsetvoltage^(0+384)
  3024  0D2E  07C4               	addwf	_prevsetvoltage^(0+384),f
  3025                           
  3026                           ;main.c: 815: parclength=100;
  3027  0D2F  3064               	movlw	100
  3028  0D30  0024               	movlb	4	; select bank4
  3029  0D31  00DA               	movwf	_parclength^(0+512)
  3030  0D32  3000               	movlw	0
  3031  0D33  00DB               	movwf	(_parclength^(0+512)+1)
  3032  0D34                     l5588:	
  3033                           
  3034                           ;main.c: 816: }
  3035                           ;main.c: 865: if((psstatusu.psstatuss.gasoncommand!=1)&&(gaschkfg == 0))
  3036  0D34  0020               	movlb	0	; select bank0
  3037  0D35  18ED               	btfsc	_psstatusu,1
  3038  0D36  2D3D               	goto	l680
  3039  0D37  0022               	movlb	2	; select bank2
  3040  0D38  08C0               	movf	_gaschkfg^(0+256),f
  3041  0D39  1D03               	skipz
  3042  0D3A  2D3D               	goto	l680
  3043                           
  3044                           ;main.c: 866: PORTCbits.RC3 =0;
  3045  0D3B  0020               	movlb	0	; select bank0
  3046  0D3C  118E               	bcf	14,3	;volatile
  3047  0D3D                     l680:	
  3048                           
  3049                           ;main.c: 867: if(psstatusu.psstatuss.motoroncommand!=1)
  3050  0D3D  0020               	movlb	0	; select bank0
  3051  0D3E  19ED               	btfsc	_psstatusu,3
  3052  0D3F  2D5A               	goto	l5596
  3053                           
  3054                           ;main.c: 868: Update_PWM(setwirespeed*0);
  3055  0D40  085D               	movf	_setwirespeed+1,w
  3056  0D41  0021               	movlb	1	; select bank1
  3057  0D42  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3058  0D43  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3059  0D44  0020               	movlb	0	; select bank0
  3060  0D45  085C               	movf	_setwirespeed,w
  3061  0D46  0021               	movlb	1	; select bank1
  3062  0D47  01A0               	clrf	___wmul@multiplier^(0+128)
  3063  0D48  07A0               	addwf	___wmul@multiplier^(0+128),f
  3064  0D49  3000               	movlw	0
  3065  0D4A  00A2               	movwf	___wmul@multiplicand^(0+128)
  3066  0D4B  3000               	movlw	0
  3067  0D4C  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  3068  0D4D  3199  215A  318A   	fcall	___wmul
  3069  0D50  0021               	movlb	1	; select bank1
  3070  0D51  0821               	movf	(?___wmul+1)^(0+128),w
  3071  0D52  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3072  0D53  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3073  0D54  0820               	movf	?___wmul^(0+128),w
  3074  0D55  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3075  0D56  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3076  0D57  3199  2178  318A   	fcall	_Update_PWM
  3077  0D5A                     l5596:	
  3078                           
  3079                           ;main.c: 870: openloopcnt =0;
  3080  0D5A  0024               	movlb	4	; select bank4
  3081  0D5B  01BE               	clrf	_openloopcnt^(0+512)
  3082  0D5C  01BF               	clrf	(_openloopcnt+1)^(0+512)
  3083                           
  3084                           ;main.c: 871: softstartf =0;
  3085  0D5D  0023               	movlb	3	; select bank3
  3086  0D5E  01DA               	clrf	_softstartf^(0+384)	;volatile
  3087                           
  3088                           ;main.c: 872: dispupdatef =0;
  3089  0D5F  0020               	movlb	0	; select bank0
  3090  0D60  01EF               	clrf	_dispupdatef	;volatile
  3091                           
  3092                           ;main.c: 873: closeloopf=0;
  3093  0D61  0022               	movlb	2	; select bank2
  3094  0D62  01B5               	clrf	_closeloopf^(0+256)
  3095                           
  3096                           ;main.c: 874: cyclestrtf=0;
  3097  0D63  01BB               	clrf	_cyclestrtf^(0+256)
  3098                           
  3099                           ;main.c: 876: psstatusu.psstatuss.creepspeedon=1;
  3100  0D64  0020               	movlb	0	; select bank0
  3101  0D65  16ED               	bsf	_psstatusu,5
  3102                           
  3103                           ;main.c: 879: }
  3104  0D66  2FF2               	goto	l5716
  3105  0D67                     l669:	
  3106                           
  3107                           ;main.c: 881: else if(psstatusu.psstatuss.weldoncyclestrt==1)
  3108  0D67  1D6D               	btfss	_psstatusu,2
  3109  0D68  2FF2               	goto	l5716
  3110                           
  3111                           ;main.c: 882: {
  3112                           ;main.c: 883: if(psstatusu.psstatuss.gasoncommand==1)
  3113  0D69  1CED               	btfss	_psstatusu,1
  3114  0D6A  2D6D               	goto	l684
  3115                           
  3116                           ;main.c: 884: {
  3117                           ;main.c: 885: PORTCbits.RC3 =1;
  3118  0D6B  158E               	bsf	14,3	;volatile
  3119                           
  3120                           ;main.c: 886: }
  3121  0D6C  2D6E               	goto	l685
  3122  0D6D                     l684:	
  3123                           
  3124                           ;main.c: 887: else
  3125                           ;main.c: 888: {
  3126                           ;main.c: 889: PORTCbits.RC3 =0;
  3127  0D6D  118E               	bcf	14,3	;volatile
  3128  0D6E                     l685:	
  3129                           
  3130                           ;main.c: 890: }
  3131                           ;main.c: 891: if(psstatusu.psstatuss.motoroncommand==1)
  3132  0D6E  1DED               	btfss	_psstatusu,3
  3133  0D6F  2FA4               	goto	l686
  3134                           
  3135                           ;main.c: 892: {
  3136                           ;main.c: 893: if(psstatusu.psstatuss.creepspeedon==1)
  3137  0D70  1EED               	btfss	_psstatusu,5
  3138  0D71  2DF8               	goto	l687
  3139                           
  3140                           ;main.c: 894: {
  3141                           ;main.c: 895: cyclestrtf=0;
  3142  0D72  0022               	movlb	2	; select bank2
  3143  0D73  01BB               	clrf	_cyclestrtf^(0+256)
  3144                           
  3145                           ;main.c: 898: newsetwirespeed=setwirespeed*creep_speed*0.01;
  3146  0D74  0020               	movlb	0	; select bank0
  3147  0D75  085D               	movf	_setwirespeed+1,w
  3148  0D76  0021               	movlb	1	; select bank1
  3149  0D77  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  3150  0D78  07A3               	addwf	(___wmul@multiplicand+1)^(0+128),f
  3151  0D79  0020               	movlb	0	; select bank0
  3152  0D7A  085C               	movf	_setwirespeed,w
  3153  0D7B  0021               	movlb	1	; select bank1
  3154  0D7C  01A2               	clrf	___wmul@multiplicand^(0+128)
  3155  0D7D  07A2               	addwf	___wmul@multiplicand^(0+128),f
  3156  0D7E  0022               	movlb	2	; select bank2
  3157  0D7F  083A               	movf	_creep_speed^(0+256),w	;volatile
  3158  0D80  0021               	movlb	1	; select bank1
  3159  0D81  00ED               	movwf	??_main^(0+128)
  3160  0D82  01EE               	clrf	(??_main^(0+128)+1)
  3161  0D83  086D               	movf	??_main^(0+128),w
  3162  0D84  00A0               	movwf	___wmul@multiplier^(0+128)
  3163  0D85  086E               	movf	(??_main+1)^(0+128),w
  3164  0D86  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  3165  0D87  3199  215A  318A   	fcall	___wmul
  3166  0D8A  0021               	movlb	1	; select bank1
  3167  0D8B  0821               	movf	(?___wmul+1)^(0+128),w
  3168  0D8C  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3169  0D8D  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3170  0D8E  0820               	movf	?___wmul^(0+128),w
  3171  0D8F  01A8               	clrf	___lwtoft@c^(0+128)
  3172  0D90  07A8               	addwf	___lwtoft@c^(0+128),f
  3173  0D91  3199  211A  318A   	fcall	___lwtoft
  3174  0D94  0021               	movlb	1	; select bank1
  3175  0D95  0828               	movf	?___lwtoft^(0+128),w
  3176  0D96  00B8               	movwf	___ftmul@f2^(0+128)
  3177  0D97  0829               	movf	(?___lwtoft+1)^(0+128),w
  3178  0D98  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3179  0D99  082A               	movf	(?___lwtoft+2)^(0+128),w
  3180  0D9A  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3181  0D9B  30D7               	movlw	215
  3182  0D9C  00B5               	movwf	___ftmul@f1^(0+128)
  3183  0D9D  3023               	movlw	35
  3184  0D9E  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3185  0D9F  303C               	movlw	60
  3186  0DA0  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3187  0DA1  3193  2304  318A   	fcall	___ftmul
  3188  0DA4  0021               	movlb	1	; select bank1
  3189  0DA5  0835               	movf	?___ftmul^(0+128),w
  3190  0DA6  00C5               	movwf	___fttol@f1^(0+128)
  3191  0DA7  0836               	movf	(?___ftmul+1)^(0+128),w
  3192  0DA8  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3193  0DA9  0837               	movf	(?___ftmul+2)^(0+128),w
  3194  0DAA  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3195  0DAB  3190  2077  318A   	fcall	___fttol
  3196  0DAE  0021               	movlb	1	; select bank1
  3197  0DAF  0846               	movf	(?___fttol^(0+128)+1),w
  3198  0DB0  0020               	movlb	0	; select bank0
  3199  0DB1  01D9               	clrf	_newsetwirespeed+1
  3200  0DB2  07D9               	addwf	_newsetwirespeed+1,f
  3201  0DB3  0021               	movlb	1	; select bank1
  3202  0DB4  0845               	movf	?___fttol^(0+128),w
  3203  0DB5  0020               	movlb	0	; select bank0
  3204  0DB6  01D8               	clrf	_newsetwirespeed
  3205  0DB7  07D8               	addwf	_newsetwirespeed,f
  3206                           
  3207                           ;main.c: 900: if(newsetwirespeed<=20)
  3208  0DB8  3000               	movlw	0
  3209  0DB9  0259               	subwf	_newsetwirespeed+1,w
  3210  0DBA  3015               	movlw	21
  3211  0DBB  1903               	skipnz
  3212  0DBC  0258               	subwf	_newsetwirespeed,w
  3213  0DBD  1803               	skipnc
  3214  0DBE  2DC3               	goto	l5622
  3215                           
  3216                           ;main.c: 901: newsetwirespeed=20;
  3217  0DBF  3014               	movlw	20
  3218  0DC0  00D8               	movwf	_newsetwirespeed
  3219  0DC1  3000               	movlw	0
  3220  0DC2  00D9               	movwf	_newsetwirespeed+1
  3221  0DC3                     l5622:	
  3222                           
  3223                           ;main.c: 906: Update_PWM(newsetwirespeed*2.8);
  3224  0DC3  0859               	movf	_newsetwirespeed+1,w
  3225  0DC4  0021               	movlb	1	; select bank1
  3226  0DC5  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3227  0DC6  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3228  0DC7  0020               	movlb	0	; select bank0
  3229  0DC8  0858               	movf	_newsetwirespeed,w
  3230  0DC9  0021               	movlb	1	; select bank1
  3231  0DCA  01A8               	clrf	___lwtoft@c^(0+128)
  3232  0DCB  07A8               	addwf	___lwtoft@c^(0+128),f
  3233  0DCC  3199  211A  318A   	fcall	___lwtoft
  3234  0DCF  0021               	movlb	1	; select bank1
  3235  0DD0  0828               	movf	?___lwtoft^(0+128),w
  3236  0DD1  00B8               	movwf	___ftmul@f2^(0+128)
  3237  0DD2  0829               	movf	(?___lwtoft+1)^(0+128),w
  3238  0DD3  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3239  0DD4  082A               	movf	(?___lwtoft+2)^(0+128),w
  3240  0DD5  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3241  0DD6  3033               	movlw	51
  3242  0DD7  00B5               	movwf	___ftmul@f1^(0+128)
  3243  0DD8  3033               	movlw	51
  3244  0DD9  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3245  0DDA  3040               	movlw	64
  3246  0DDB  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3247  0DDC  3193  2304  318A   	fcall	___ftmul
  3248  0DDF  0021               	movlb	1	; select bank1
  3249  0DE0  0835               	movf	?___ftmul^(0+128),w
  3250  0DE1  00C5               	movwf	___fttol@f1^(0+128)
  3251  0DE2  0836               	movf	(?___ftmul+1)^(0+128),w
  3252  0DE3  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3253  0DE4  0837               	movf	(?___ftmul+2)^(0+128),w
  3254  0DE5  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3255  0DE6  3190  2077  318A   	fcall	___fttol
  3256  0DE9  0021               	movlb	1	; select bank1
  3257  0DEA  0846               	movf	(?___fttol^(0+128)+1),w
  3258  0DEB  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3259  0DEC  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3260  0DED  0845               	movf	?___fttol^(0+128),w
  3261  0DEE  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3262  0DEF  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3263  0DF0  3199  2178  318A   	fcall	_Update_PWM
  3264                           
  3265                           ;main.c: 916: TRISCbits.TRISC4=0;
  3266  0DF3  0021               	movlb	1	; select bank1
  3267  0DF4  120E               	bcf	14,4	;volatile
  3268                           
  3269                           ;main.c: 917: PORTAbits.RA0=1;
  3270  0DF5  0020               	movlb	0	; select bank0
  3271  0DF6  140C               	bsf	12,0	;volatile
  3272                           
  3273                           ;main.c: 919: }
  3274  0DF7  2EA3               	goto	l5660
  3275  0DF8                     l687:	
  3276                           
  3277                           ;main.c: 920: else if(psstatusu.psstatuss.creepspeedon==0)
  3278  0DF8  1AED               	btfsc	_psstatusu,5
  3279  0DF9  2EA3               	goto	l5660
  3280                           
  3281                           ;main.c: 921: {
  3282                           ;main.c: 922: cyclestrtf=1;
  3283  0DFA  0022               	movlb	2	; select bank2
  3284  0DFB  01BB               	clrf	_cyclestrtf^(0+256)
  3285  0DFC  0ABB               	incf	_cyclestrtf^(0+256),f
  3286                           
  3287                           ;main.c: 923: newsetwirespeed=setwirespeed;
  3288  0DFD  0020               	movlb	0	; select bank0
  3289  0DFE  085D               	movf	_setwirespeed+1,w
  3290  0DFF  01D9               	clrf	_newsetwirespeed+1
  3291  0E00  07D9               	addwf	_newsetwirespeed+1,f
  3292  0E01  085C               	movf	_setwirespeed,w
  3293  0E02  01D8               	clrf	_newsetwirespeed
  3294  0E03  07D8               	addwf	_newsetwirespeed,f
  3295                           
  3296                           ;main.c: 924: if(closeloopf==0)
  3297  0E04  0022               	movlb	2	; select bank2
  3298  0E05  08B5               	movf	_closeloopf^(0+256),f
  3299  0E06  1D03               	skipz
  3300  0E07  2E9F               	goto	l5656
  3301                           
  3302                           ;main.c: 925: {
  3303                           ;main.c: 926: Update_PWM(newsetwirespeed*2.8);
  3304  0E08  0020               	movlb	0	; select bank0
  3305  0E09  0859               	movf	_newsetwirespeed+1,w
  3306  0E0A  0021               	movlb	1	; select bank1
  3307  0E0B  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3308  0E0C  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3309  0E0D  0020               	movlb	0	; select bank0
  3310  0E0E  0858               	movf	_newsetwirespeed,w
  3311  0E0F  0021               	movlb	1	; select bank1
  3312  0E10  01A8               	clrf	___lwtoft@c^(0+128)
  3313  0E11  07A8               	addwf	___lwtoft@c^(0+128),f
  3314  0E12  3199  211A  318A   	fcall	___lwtoft
  3315  0E15  0021               	movlb	1	; select bank1
  3316  0E16  0828               	movf	?___lwtoft^(0+128),w
  3317  0E17  00B8               	movwf	___ftmul@f2^(0+128)
  3318  0E18  0829               	movf	(?___lwtoft+1)^(0+128),w
  3319  0E19  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3320  0E1A  082A               	movf	(?___lwtoft+2)^(0+128),w
  3321  0E1B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3322  0E1C  3033               	movlw	51
  3323  0E1D  00B5               	movwf	___ftmul@f1^(0+128)
  3324  0E1E  3033               	movlw	51
  3325  0E1F  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3326  0E20  3040               	movlw	64
  3327  0E21  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3328  0E22  3193  2304  318A   	fcall	___ftmul
  3329  0E25  0021               	movlb	1	; select bank1
  3330  0E26  0835               	movf	?___ftmul^(0+128),w
  3331  0E27  00C5               	movwf	___fttol@f1^(0+128)
  3332  0E28  0836               	movf	(?___ftmul+1)^(0+128),w
  3333  0E29  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3334  0E2A  0837               	movf	(?___ftmul+2)^(0+128),w
  3335  0E2B  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3336  0E2C  3190  2077  318A   	fcall	___fttol
  3337  0E2F  0021               	movlb	1	; select bank1
  3338  0E30  0846               	movf	(?___fttol^(0+128)+1),w
  3339  0E31  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3340  0E32  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3341  0E33  0845               	movf	?___fttol^(0+128),w
  3342  0E34  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3343  0E35  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3344  0E36  3199  2178  318A   	fcall	_Update_PWM
  3345                           
  3346                           ;main.c: 927: if(wfspeedchangef==1)
  3347  0E39  0022               	movlb	2	; select bank2
  3348  0E3A  086F               	movf	_wfspeedchangef^(0+256),w
  3349  0E3B  3A01               	xorlw	1
  3350  0E3C  1D03               	skipz
  3351  0E3D  2E9D               	goto	l5654
  3352                           
  3353                           ;main.c: 928: {
  3354                           ;main.c: 929: integral_old=newsetwirespeed*scalefactor2*2.8;
  3355  0E3E  3033               	movlw	51
  3356  0E3F  0021               	movlb	1	; select bank1
  3357  0E40  00B5               	movwf	___ftmul@f1^(0+128)
  3358  0E41  3033               	movlw	51
  3359  0E42  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3360  0E43  3040               	movlw	64
  3361  0E44  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3362  0E45  0020               	movlb	0	; select bank0
  3363  0E46  0859               	movf	_newsetwirespeed+1,w
  3364  0E47  0021               	movlb	1	; select bank1
  3365  0E48  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3366  0E49  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3367  0E4A  0020               	movlb	0	; select bank0
  3368  0E4B  0858               	movf	_newsetwirespeed,w
  3369  0E4C  0021               	movlb	1	; select bank1
  3370  0E4D  01A0               	clrf	___wmul@multiplier^(0+128)
  3371  0E4E  07A0               	addwf	___wmul@multiplier^(0+128),f
  3372  0E4F  0023               	movlb	3	; select bank3
  3373  0E50  086C               	movf	(_scalefactor2+1)^(0+384),w
  3374  0E51  0021               	movlb	1	; select bank1
  3375  0E52  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  3376  0E53  07A3               	addwf	(___wmul@multiplicand+1)^(0+128),f
  3377  0E54  0023               	movlb	3	; select bank3
  3378  0E55  086B               	movf	_scalefactor2^(0+384),w
  3379  0E56  0021               	movlb	1	; select bank1
  3380  0E57  01A2               	clrf	___wmul@multiplicand^(0+128)
  3381  0E58  07A2               	addwf	___wmul@multiplicand^(0+128),f
  3382  0E59  3199  215A  318A   	fcall	___wmul
  3383  0E5C  0021               	movlb	1	; select bank1
  3384  0E5D  0821               	movf	(?___wmul+1)^(0+128),w
  3385  0E5E  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3386  0E5F  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3387  0E60  0820               	movf	?___wmul^(0+128),w
  3388  0E61  01A8               	clrf	___lwtoft@c^(0+128)
  3389  0E62  07A8               	addwf	___lwtoft@c^(0+128),f
  3390  0E63  3199  211A  318A   	fcall	___lwtoft
  3391  0E66  0021               	movlb	1	; select bank1
  3392  0E67  0828               	movf	?___lwtoft^(0+128),w
  3393  0E68  00B8               	movwf	___ftmul@f2^(0+128)
  3394  0E69  0829               	movf	(?___lwtoft+1)^(0+128),w
  3395  0E6A  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3396  0E6B  082A               	movf	(?___lwtoft+2)^(0+128),w
  3397  0E6C  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3398  0E6D  3193  2304  318A   	fcall	___ftmul
  3399  0E70  0021               	movlb	1	; select bank1
  3400  0E71  0835               	movf	?___ftmul^(0+128),w
  3401  0E72  0023               	movlb	3	; select bank3
  3402  0E73  00A9               	movwf	_integral_old^(0+384)
  3403  0E74  0021               	movlb	1	; select bank1
  3404  0E75  0836               	movf	(?___ftmul+1)^(0+128),w
  3405  0E76  0023               	movlb	3	; select bank3
  3406  0E77  00AA               	movwf	(_integral_old+1)^(0+384)
  3407  0E78  0021               	movlb	1	; select bank1
  3408  0E79  0837               	movf	(?___ftmul+2)^(0+128),w
  3409  0E7A  0023               	movlb	3	; select bank3
  3410  0E7B  00AB               	movwf	(_integral_old+2)^(0+384)
  3411                           
  3412                           ;main.c: 931: wfspeedchangef=0;
  3413  0E7C  0022               	movlb	2	; select bank2
  3414  0E7D  01EF               	clrf	_wfspeedchangef^(0+256)
  3415                           
  3416                           ;main.c: 932: integral_new =0;
  3417  0E7E  3000               	movlw	0
  3418  0E7F  0023               	movlb	3	; select bank3
  3419  0E80  00A6               	movwf	_integral_new^(0+384)
  3420  0E81  3000               	movlw	0
  3421  0E82  00A7               	movwf	(_integral_new+1)^(0+384)
  3422  0E83  3000               	movlw	0
  3423  0E84  00A8               	movwf	(_integral_new+2)^(0+384)
  3424                           
  3425                           ;main.c: 934: error_old =0;
  3426  0E85  3000               	movlw	0
  3427  0E86  00A3               	movwf	_error_old^(0+384)
  3428  0E87  3000               	movlw	0
  3429  0E88  00A4               	movwf	(_error_old+1)^(0+384)
  3430  0E89  3000               	movlw	0
  3431  0E8A  00A5               	movwf	(_error_old+2)^(0+384)
  3432                           
  3433                           ;main.c: 935: error_new=0;
  3434  0E8B  3000               	movlw	0
  3435  0E8C  00A0               	movwf	_error_new^(0+384)
  3436  0E8D  3000               	movlw	0
  3437  0E8E  00A1               	movwf	(_error_new+1)^(0+384)
  3438  0E8F  3000               	movlw	0
  3439  0E90  00A2               	movwf	(_error_new+2)^(0+384)
  3440                           
  3441                           ;main.c: 936: controller_out=0;
  3442  0E91  3000               	movlw	0
  3443  0E92  0024               	movlb	4	; select bank4
  3444  0E93  00A4               	movwf	_controller_out^(0+512)
  3445  0E94  3000               	movlw	0
  3446  0E95  00A5               	movwf	(_controller_out+1)^(0+512)
  3447  0E96  3000               	movlw	0
  3448  0E97  00A6               	movwf	(_controller_out+2)^(0+512)
  3449                           
  3450                           ;main.c: 937: prevFltpfreq=0;
  3451  0E98  01C0               	clrf	_prevFltpfreq^(0+512)
  3452  0E99  01C1               	clrf	(_prevFltpfreq+1)^(0+512)
  3453                           
  3454                           ;main.c: 938: Fltpfreq=0;
  3455  0E9A  0022               	movlb	2	; select bank2
  3456  0E9B  01A0               	clrf	_Fltpfreq^(0+256)
  3457  0E9C  01A1               	clrf	(_Fltpfreq+1)^(0+256)
  3458  0E9D                     l5654:	
  3459                           
  3460                           ;main.c: 939: }
  3461                           ;main.c: 940: closeloopf=1;
  3462  0E9D  01B5               	clrf	_closeloopf^(0+256)
  3463  0E9E  0AB5               	incf	_closeloopf^(0+256),f
  3464  0E9F                     l5656:	
  3465                           
  3466                           ;main.c: 941: }
  3467                           ;main.c: 942: TRISCbits.TRISC4=0;
  3468  0E9F  0021               	movlb	1	; select bank1
  3469  0EA0  120E               	bcf	14,4	;volatile
  3470                           
  3471                           ;main.c: 943: PORTAbits.RA0=0;
  3472  0EA1  0020               	movlb	0	; select bank0
  3473  0EA2  100C               	bcf	12,0	;volatile
  3474  0EA3                     l5660:	
  3475                           
  3476                           ;main.c: 944: }
  3477                           ;main.c: 945: if(up_count_motor==0)
  3478  0EA3  0023               	movlb	3	; select bank3
  3479  0EA4  0851               	movf	(_up_count_motor+1)^(0+384),w
  3480  0EA5  0450               	iorwf	_up_count_motor^(0+384),w
  3481  0EA6  1D03               	skipz
  3482  0EA7  2F00               	goto	l5674
  3483                           
  3484                           ;main.c: 946: {
  3485                           ;main.c: 947: if((newsetwirespeed >= 20) && (newsetwirespeed <= 60))
  3486  0EA8  3000               	movlw	0
  3487  0EA9  0020               	movlb	0	; select bank0
  3488  0EAA  0259               	subwf	_newsetwirespeed+1,w
  3489  0EAB  3014               	movlw	20
  3490  0EAC  1903               	skipnz
  3491  0EAD  0258               	subwf	_newsetwirespeed,w
  3492  0EAE  1C03               	skipc
  3493  0EAF  2EC8               	goto	l5668
  3494  0EB0  3000               	movlw	0
  3495  0EB1  0259               	subwf	_newsetwirespeed+1,w
  3496  0EB2  303D               	movlw	61
  3497  0EB3  1903               	skipnz
  3498  0EB4  0258               	subwf	_newsetwirespeed,w
  3499  0EB5  1803               	skipnc
  3500  0EB6  2EC8               	goto	l5668
  3501                           
  3502                           ;main.c: 948: newsetwirespeed=(setwirespeed*14) / 10;
  3503  0EB7  300A               	movlw	10
  3504  0EB8  0021               	movlb	1	; select bank1
  3505  0EB9  00A6               	movwf	___lwdiv@divisor^(0+128)
  3506  0EBA  3000               	movlw	0
  3507  0EBB  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  3508  0EBC  0020               	movlb	0	; select bank0
  3509  0EBD  085D               	movf	_setwirespeed+1,w
  3510  0EBE  0021               	movlb	1	; select bank1
  3511  0EBF  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3512  0EC0  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3513  0EC1  0020               	movlb	0	; select bank0
  3514  0EC2  085C               	movf	_setwirespeed,w
  3515  0EC3  0021               	movlb	1	; select bank1
  3516  0EC4  01A0               	clrf	___wmul@multiplier^(0+128)
  3517  0EC5  07A0               	addwf	___wmul@multiplier^(0+128),f
  3518  0EC6  300E               	movlw	14
  3519  0EC7  2EE6               	goto	L4
  3520  0EC8                     l5668:	
  3521                           
  3522                           ;main.c: 949: else if((newsetwirespeed > 60) && (newsetwirespeed <= 120))
  3523  0EC8  3000               	movlw	0
  3524  0EC9  0259               	subwf	_newsetwirespeed+1,w
  3525  0ECA  303D               	movlw	61
  3526  0ECB  1903               	skipnz
  3527  0ECC  0258               	subwf	_newsetwirespeed,w
  3528  0ECD  1C03               	skipc
  3529  0ECE  2F00               	goto	l5674
  3530  0ECF  3000               	movlw	0
  3531  0ED0  0259               	subwf	_newsetwirespeed+1,w
  3532  0ED1  3079               	movlw	121
  3533  0ED2  1903               	skipnz
  3534  0ED3  0258               	subwf	_newsetwirespeed,w
  3535  0ED4  1803               	skipnc
  3536  0ED5  2F00               	goto	l5674
  3537                           
  3538                           ;main.c: 950: newsetwirespeed=(setwirespeed*12) / 10;
  3539  0ED6  300A               	movlw	10
  3540  0ED7  0021               	movlb	1	; select bank1
  3541  0ED8  00A6               	movwf	___lwdiv@divisor^(0+128)
  3542  0ED9  3000               	movlw	0
  3543  0EDA  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  3544  0EDB  0020               	movlb	0	; select bank0
  3545  0EDC  085D               	movf	_setwirespeed+1,w
  3546  0EDD  0021               	movlb	1	; select bank1
  3547  0EDE  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3548  0EDF  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3549  0EE0  0020               	movlb	0	; select bank0
  3550  0EE1  085C               	movf	_setwirespeed,w
  3551  0EE2  0021               	movlb	1	; select bank1
  3552  0EE3  01A0               	clrf	___wmul@multiplier^(0+128)
  3553  0EE4  07A0               	addwf	___wmul@multiplier^(0+128),f
  3554  0EE5  300C               	movlw	12
  3555  0EE6                     L4:	
  3556  0EE6  00A2               	movwf	___wmul@multiplicand^(0+128)
  3557  0EE7  3000               	movlw	0
  3558  0EE8  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  3559  0EE9  3199  215A  318A   	fcall	___wmul
  3560  0EEC  0021               	movlb	1	; select bank1
  3561  0EED  0821               	movf	(?___wmul+1)^(0+128),w
  3562  0EEE  01A9               	clrf	(___lwdiv@dividend+1)^(0+128)
  3563  0EEF  07A9               	addwf	(___lwdiv@dividend+1)^(0+128),f
  3564  0EF0  0820               	movf	?___wmul^(0+128),w
  3565  0EF1  01A8               	clrf	___lwdiv@dividend^(0+128)
  3566  0EF2  07A8               	addwf	___lwdiv@dividend^(0+128),f
  3567  0EF3  319A  222B  318A   	fcall	___lwdiv
  3568  0EF6  0021               	movlb	1	; select bank1
  3569  0EF7  0827               	movf	(?___lwdiv+1)^(0+128),w
  3570  0EF8  0020               	movlb	0	; select bank0
  3571  0EF9  01D9               	clrf	_newsetwirespeed+1
  3572  0EFA  07D9               	addwf	_newsetwirespeed+1,f
  3573  0EFB  0021               	movlb	1	; select bank1
  3574  0EFC  0826               	movf	?___lwdiv^(0+128),w
  3575  0EFD  0020               	movlb	0	; select bank0
  3576  0EFE  01D8               	clrf	_newsetwirespeed
  3577  0EFF  07D8               	addwf	_newsetwirespeed,f
  3578  0F00                     l5674:	
  3579                           
  3580                           ;main.c: 951: }
  3581                           ;main.c: 953: if(psstatusu.psstatuss.craterspeedon==1 && wfstatusu.wfstatuss.twotfourtmo
      +                          de1==1)
  3582  0F00  0020               	movlb	0	; select bank0
  3583  0F01  1A6D               	btfsc	_psstatusu,4
  3584  0F02  1C6E               	btfss	_wfstatusu,0
  3585  0F03  2F10               	goto	l697
  3586                           
  3587                           ;main.c: 954: newsetwirespeed=crater_speed;
  3588  0F04  0022               	movlb	2	; select bank2
  3589  0F05  0839               	movf	_crater_speed^(0+256),w	;volatile
  3590  0F06  0021               	movlb	1	; select bank1
  3591  0F07  00ED               	movwf	??_main^(0+128)
  3592  0F08  01EE               	clrf	(??_main^(0+128)+1)
  3593  0F09  086D               	movf	??_main^(0+128),w
  3594  0F0A  0020               	movlb	0	; select bank0
  3595  0F0B  00D8               	movwf	_newsetwirespeed
  3596  0F0C  0021               	movlb	1	; select bank1
  3597  0F0D  086E               	movf	(??_main+1)^(0+128),w
  3598  0F0E  0020               	movlb	0	; select bank0
  3599  0F0F  00D9               	movwf	_newsetwirespeed+1
  3600  0F10                     l697:	
  3601                           
  3602                           ;main.c: 959: if ((newsetwirespeed >= 20) && (newsetwirespeed <= 220))
  3603  0F10  3000               	movlw	0
  3604  0F11  0259               	subwf	_newsetwirespeed+1,w
  3605  0F12  3014               	movlw	20
  3606  0F13  1903               	skipnz
  3607  0F14  0258               	subwf	_newsetwirespeed,w
  3608  0F15  1C03               	skipc
  3609  0F16  2F34               	goto	l698
  3610  0F17  3000               	movlw	0
  3611  0F18  0259               	subwf	_newsetwirespeed+1,w
  3612  0F19  30DD               	movlw	221
  3613  0F1A  1903               	skipnz
  3614  0F1B  0258               	subwf	_newsetwirespeed,w
  3615  0F1C  1803               	skipnc
  3616  0F1D  2F34               	goto	l698
  3617                           
  3618                           ;main.c: 960: {
  3619                           ;main.c: 961: setpfreq= Wirespeed(newsetwirespeed);
  3620  0F1E  0859               	movf	_newsetwirespeed+1,w
  3621  0F1F  0021               	movlb	1	; select bank1
  3622  0F20  01D4               	clrf	(Wirespeed@wireSpeed+1)^(0+128)
  3623  0F21  07D4               	addwf	(Wirespeed@wireSpeed+1)^(0+128),f
  3624  0F22  0020               	movlb	0	; select bank0
  3625  0F23  0858               	movf	_newsetwirespeed,w
  3626  0F24  0021               	movlb	1	; select bank1
  3627  0F25  01D3               	clrf	Wirespeed@wireSpeed^(0+128)
  3628  0F26  07D3               	addwf	Wirespeed@wireSpeed^(0+128),f
  3629  0F27  3193  23B8  318A   	fcall	_Wirespeed
  3630  0F2A  0021               	movlb	1	; select bank1
  3631  0F2B  0854               	movf	(?_Wirespeed+1)^(0+128),w
  3632  0F2C  0023               	movlb	3	; select bank3
  3633  0F2D  01CF               	clrf	(_setpfreq+1)^(0+384)
  3634  0F2E  07CF               	addwf	(_setpfreq+1)^(0+384),f
  3635  0F2F  0021               	movlb	1	; select bank1
  3636  0F30  0853               	movf	?_Wirespeed^(0+128),w
  3637  0F31  0023               	movlb	3	; select bank3
  3638  0F32  01CE               	clrf	_setpfreq^(0+384)
  3639  0F33  07CE               	addwf	_setpfreq^(0+384),f
  3640  0F34                     l698:	
  3641                           
  3642                           ;main.c: 962: }
  3643                           ;main.c: 964: Hi_setppwm=(newsetwirespeed+rel_wirespeed)*2.8;
  3644  0F34  0023               	movlb	3	; select bank3
  3645  0F35  084C               	movf	_rel_wirespeed^(0+384),w
  3646  0F36  0020               	movlb	0	; select bank0
  3647  0F37  0758               	addwf	_newsetwirespeed,w
  3648  0F38  0021               	movlb	1	; select bank1
  3649  0F39  00A8               	movwf	___lwtoft@c^(0+128)
  3650  0F3A  0023               	movlb	3	; select bank3
  3651  0F3B  084D               	movf	(_rel_wirespeed+1)^(0+384),w
  3652  0F3C  0020               	movlb	0	; select bank0
  3653  0F3D  3D59               	addwfc	_newsetwirespeed+1,w
  3654  0F3E  0021               	movlb	1	; select bank1
  3655  0F3F  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  3656  0F40  3199  211A  318A   	fcall	___lwtoft
  3657  0F43  0021               	movlb	1	; select bank1
  3658  0F44  0828               	movf	?___lwtoft^(0+128),w
  3659  0F45  00B8               	movwf	___ftmul@f2^(0+128)
  3660  0F46  0829               	movf	(?___lwtoft+1)^(0+128),w
  3661  0F47  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3662  0F48  082A               	movf	(?___lwtoft+2)^(0+128),w
  3663  0F49  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3664  0F4A  3033               	movlw	51
  3665  0F4B  00B5               	movwf	___ftmul@f1^(0+128)
  3666  0F4C  3033               	movlw	51
  3667  0F4D  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3668  0F4E  3040               	movlw	64
  3669  0F4F  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3670  0F50  3193  2304  318A   	fcall	___ftmul
  3671  0F53  0021               	movlb	1	; select bank1
  3672  0F54  0835               	movf	?___ftmul^(0+128),w
  3673  0F55  00C5               	movwf	___fttol@f1^(0+128)
  3674  0F56  0836               	movf	(?___ftmul+1)^(0+128),w
  3675  0F57  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3676  0F58  0837               	movf	(?___ftmul+2)^(0+128),w
  3677  0F59  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3678  0F5A  3190  2077  318A   	fcall	___fttol
  3679  0F5D  0021               	movlb	1	; select bank1
  3680  0F5E  0846               	movf	(?___fttol^(0+128)+1),w
  3681  0F5F  0024               	movlb	4	; select bank4
  3682  0F60  01AB               	clrf	(_Hi_setppwm+1)^(0+512)
  3683  0F61  07AB               	addwf	(_Hi_setppwm+1)^(0+512),f
  3684  0F62  0021               	movlb	1	; select bank1
  3685  0F63  0845               	movf	?___fttol^(0+128),w
  3686  0F64  0024               	movlb	4	; select bank4
  3687  0F65  01AA               	clrf	_Hi_setppwm^(0+512)
  3688  0F66  07AA               	addwf	_Hi_setppwm^(0+512),f
  3689                           
  3690                           ;main.c: 965: Lo_setppwm=(newsetwirespeed-rel_wirespeed)*2.8;
  3691  0F67  0023               	movlb	3	; select bank3
  3692  0F68  094C               	comf	_rel_wirespeed^(0+384),w
  3693  0F69  0021               	movlb	1	; select bank1
  3694  0F6A  00ED               	movwf	??_main^(0+128)
  3695  0F6B  0023               	movlb	3	; select bank3
  3696  0F6C  094D               	comf	(_rel_wirespeed+1)^(0+384),w
  3697  0F6D  0021               	movlb	1	; select bank1
  3698  0F6E  00EE               	movwf	(??_main^(0+128)+1)
  3699  0F6F  0AED               	incf	??_main^(0+128),f
  3700  0F70  1903               	skipnz
  3701  0F71  0AEE               	incf	(??_main^(0+128)+1),f
  3702  0F72  0020               	movlb	0	; select bank0
  3703  0F73  0858               	movf	_newsetwirespeed,w
  3704  0F74  0021               	movlb	1	; select bank1
  3705  0F75  076D               	addwf	??_main^(0+128),w
  3706  0F76  00A8               	movwf	___lwtoft@c^(0+128)
  3707  0F77  0020               	movlb	0	; select bank0
  3708  0F78  0859               	movf	_newsetwirespeed+1,w
  3709  0F79  0021               	movlb	1	; select bank1
  3710  0F7A  3D6E               	addwfc	(??_main+1)^(0+128),w
  3711  0F7B  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  3712  0F7C  3199  211A  318A   	fcall	___lwtoft
  3713  0F7F  0021               	movlb	1	; select bank1
  3714  0F80  0828               	movf	?___lwtoft^(0+128),w
  3715  0F81  00B8               	movwf	___ftmul@f2^(0+128)
  3716  0F82  0829               	movf	(?___lwtoft+1)^(0+128),w
  3717  0F83  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3718  0F84  082A               	movf	(?___lwtoft+2)^(0+128),w
  3719  0F85  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3720  0F86  3033               	movlw	51
  3721  0F87  00B5               	movwf	___ftmul@f1^(0+128)
  3722  0F88  3033               	movlw	51
  3723  0F89  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3724  0F8A  3040               	movlw	64
  3725  0F8B  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3726  0F8C  3193  2304  318A   	fcall	___ftmul
  3727  0F8F  0021               	movlb	1	; select bank1
  3728  0F90  0835               	movf	?___ftmul^(0+128),w
  3729  0F91  00C5               	movwf	___fttol@f1^(0+128)
  3730  0F92  0836               	movf	(?___ftmul+1)^(0+128),w
  3731  0F93  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3732  0F94  0837               	movf	(?___ftmul+2)^(0+128),w
  3733  0F95  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3734  0F96  3190  2077  318A   	fcall	___fttol
  3735  0F99  0021               	movlb	1	; select bank1
  3736  0F9A  0846               	movf	(?___fttol^(0+128)+1),w
  3737  0F9B  0024               	movlb	4	; select bank4
  3738  0F9C  01AD               	clrf	(_Lo_setppwm+1)^(0+512)
  3739  0F9D  07AD               	addwf	(_Lo_setppwm+1)^(0+512),f
  3740  0F9E  0021               	movlb	1	; select bank1
  3741  0F9F  0845               	movf	?___fttol^(0+128),w
  3742  0FA0  0024               	movlb	4	; select bank4
  3743  0FA1  01AC               	clrf	_Lo_setppwm^(0+512)
  3744  0FA2  07AC               	addwf	_Lo_setppwm^(0+512),f
  3745                           
  3746                           ;main.c: 966: }
  3747  0FA3  2FC9               	goto	l5694
  3748  0FA4                     l686:	
  3749                           
  3750                           ;main.c: 967: else if(psstatusu.psstatuss.motoroncommand!=1)
  3751  0FA4  19ED               	btfsc	_psstatusu,3
  3752  0FA5  2FC9               	goto	l5694
  3753                           
  3754                           ;main.c: 968: {
  3755                           ;main.c: 969: Update_PWM(setwirespeed*0);
  3756  0FA6  085D               	movf	_setwirespeed+1,w
  3757  0FA7  0021               	movlb	1	; select bank1
  3758  0FA8  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3759  0FA9  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3760  0FAA  0020               	movlb	0	; select bank0
  3761  0FAB  085C               	movf	_setwirespeed,w
  3762  0FAC  0021               	movlb	1	; select bank1
  3763  0FAD  01A0               	clrf	___wmul@multiplier^(0+128)
  3764  0FAE  07A0               	addwf	___wmul@multiplier^(0+128),f
  3765  0FAF  3000               	movlw	0
  3766  0FB0  00A2               	movwf	___wmul@multiplicand^(0+128)
  3767  0FB1  3000               	movlw	0
  3768  0FB2  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  3769  0FB3  3199  215A  318A   	fcall	___wmul
  3770  0FB6  0021               	movlb	1	; select bank1
  3771  0FB7  0821               	movf	(?___wmul+1)^(0+128),w
  3772  0FB8  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3773  0FB9  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3774  0FBA  0820               	movf	?___wmul^(0+128),w
  3775  0FBB  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3776  0FBC  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3777  0FBD  3199  2178  318A   	fcall	_Update_PWM
  3778                           
  3779                           ;main.c: 970: openloopcnt =0;
  3780  0FC0  0024               	movlb	4	; select bank4
  3781  0FC1  01BE               	clrf	_openloopcnt^(0+512)
  3782  0FC2  01BF               	clrf	(_openloopcnt+1)^(0+512)
  3783                           
  3784                           ;main.c: 971: closeloopf =0;
  3785  0FC3  0022               	movlb	2	; select bank2
  3786  0FC4  01B5               	clrf	_closeloopf^(0+256)
  3787                           
  3788                           ;main.c: 972: closeloop1f =0;
  3789  0FC5  0023               	movlb	3	; select bank3
  3790  0FC6  01D4               	clrf	_closeloop1f^(0+384)
  3791                           
  3792                           ;main.c: 973: cyclestrtf=0;
  3793  0FC7  0022               	movlb	2	; select bank2
  3794  0FC8  01BB               	clrf	_cyclestrtf^(0+256)
  3795  0FC9                     l5694:	
  3796                           
  3797                           ;main.c: 975: }
  3798                           ;main.c: 976: TypeU.TypeS.wirespeed=0;
  3799  0FC9  0020               	movlb	0	; select bank0
  3800  0FCA  1069               	bcf	_TypeU,0
  3801                           
  3802                           ;main.c: 977: TypeU.TypeS.amp=1;
  3803  0FCB  146A               	bsf	_TypeU+1,0
  3804                           
  3805                           ;main.c: 978: TypeU.TypeS.thickness=0;
  3806  0FCC  10E9               	bcf	_TypeU,1
  3807                           
  3808                           ;main.c: 979: TypeU.TypeS.arclength =0;
  3809  0FCD  1169               	bcf	_TypeU,2
  3810                           
  3811                           ;main.c: 980: TypeU.TypeS.vtg =1;
  3812  0FCE  14EA               	bsf	_TypeU+1,1
  3813                           
  3814                           ;main.c: 981: TypeU.TypeS.sec =0;
  3815  0FCF  116A               	bcf	_TypeU+1,2
  3816                           
  3817                           ;main.c: 983: TypeDP.DPGROUP[0]=0x00;
  3818  0FD0  01EB               	clrf	_TypeDP
  3819                           
  3820                           ;main.c: 984: TypeDP.TypeD.digitdp5 =1;
  3821  0FD1  166B               	bsf	_TypeDP,4
  3822                           
  3823                           ;main.c: 985: disp_hex_window1(Actual_amp);
  3824  0FD2  0023               	movlb	3	; select bank3
  3825  0FD3  0864               	movf	(_Actual_amp+1)^(0+384),w
  3826  0FD4  0021               	movlb	1	; select bank1
  3827  0FD5  01AF               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  3828  0FD6  07AF               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  3829  0FD7  0023               	movlb	3	; select bank3
  3830  0FD8  0863               	movf	_Actual_amp^(0+384),w
  3831  0FD9  0021               	movlb	1	; select bank1
  3832  0FDA  01AE               	clrf	disp_hex_window1@hex_data^(0+128)
  3833  0FDB  07AE               	addwf	disp_hex_window1@hex_data^(0+128),f
  3834  0FDC  319D  2514  318A   	fcall	_disp_hex_window1
  3835                           
  3836                           ;main.c: 986: disp_hex_window2(Actual_vtg);
  3837  0FDF  0023               	movlb	3	; select bank3
  3838  0FE0  0866               	movf	(_Actual_vtg+1)^(0+384),w
  3839  0FE1  0021               	movlb	1	; select bank1
  3840  0FE2  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  3841  0FE3  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  3842  0FE4  0023               	movlb	3	; select bank3
  3843  0FE5  0865               	movf	_Actual_vtg^(0+384),w
  3844  0FE6  0021               	movlb	1	; select bank1
  3845  0FE7  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  3846  0FE8  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  3847  0FE9  3190  2011  318A   	fcall	_disp_hex_window2
  3848                           
  3849                           ;main.c: 987: dispupdatef =1;
  3850  0FEC  3001               	movlw	1
  3851  0FED  0021               	movlb	1	; select bank1
  3852  0FEE  00ED               	movwf	??_main^(0+128)
  3853  0FEF  086D               	movf	??_main^(0+128),w
  3854  0FF0  0020               	movlb	0	; select bank0
  3855  0FF1  00EF               	movwf	_dispupdatef	;volatile
  3856  0FF2                     l5716:	
  3857                           
  3858                           ;main.c: 989: }
  3859                           ;main.c: 990: }
  3860                           ;main.c: 992: if(universal_error_latch==1)
  3861  0FF2  0022               	movlb	2	; select bank2
  3862  0FF3  085D               	movf	_universal_error_latch^(0+256),w	;volatile
  3863  0FF4  3A01               	xorlw	1
  3864  0FF5  1D03               	skipz
  3865  0FF6  2A93               	goto	l5368
  3866                           
  3867                           ;main.c: 993: {
  3868                           ;main.c: 994: dispupdatef=1;
  3869  0FF7  3001               	movlw	1
  3870  0FF8  0021               	movlb	1	; select bank1
  3871  0FF9  00ED               	movwf	??_main^(0+128)
  3872  0FFA  086D               	movf	??_main^(0+128),w
  3873  0FFB  0020               	movlb	0	; select bank0
  3874  0FFC  00EF               	movwf	_dispupdatef	;volatile
  3875                           
  3876                           ;main.c: 995: universal_error_latch=0;
  3877  0FFD  0022               	movlb	2	; select bank2
  3878  0FFE  01DD               	clrf	_universal_error_latch^(0+256)	;volatile
  3879  0FFF  2A93               	goto	l5368
  3880  1000                     __end_of_main:	
  3881                           
  3882                           	psect	text1
  3883  1907                     __ptext1:	
  3884 ;; *************** function _uart_init *****************
  3885 ;; Defined at:
  3886 ;;		line 1259 in file "main.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;		None
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;		None
  3891 ;; Return value:  Size  Location     Type
  3892 ;;		None               void
  3893 ;; Registers used:
  3894 ;;		wreg
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;Total ram usage:        0 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    3
  3907 ;; This function calls:
  3908 ;;		Nothing
  3909 ;; This function is called by:
  3910 ;;		_main
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           
  3915                           ;psect for function _uart_init
  3916  1907                     _uart_init:	
  3917                           
  3918                           ;main.c: 1261: RCSTAbits.SPEN=1;
  3919                           
  3920                           ;incstack = 0
  3921                           ; Regs used in _uart_init: [wreg]
  3922  1907  0023               	movlb	3	; select bank3
  3923  1908  179D               	bsf	29,7	;volatile
  3924                           
  3925                           ;main.c: 1262: TRISCbits.TRISC6=0;
  3926  1909  0021               	movlb	1	; select bank1
  3927  190A  130E               	bcf	14,6	;volatile
  3928                           
  3929                           ;main.c: 1263: TRISCbits.TRISC7=1;
  3930  190B  178E               	bsf	14,7	;volatile
  3931                           
  3932                           ;main.c: 1264: TXSTAbits.BRGH=0;
  3933  190C  0023               	movlb	3	; select bank3
  3934  190D  111E               	bcf	30,2	;volatile
  3935                           
  3936                           ;main.c: 1265: BAUDCTLbits.BRG16=0;
  3937  190E  119F               	bcf	31,3	;volatile
  3938                           
  3939                           ;main.c: 1266: TXSTAbits.SYNC=0;
  3940  190F  121E               	bcf	30,4	;volatile
  3941                           
  3942                           ;main.c: 1267: SPBRG=51;
  3943  1910  3033               	movlw	51
  3944  1911  009B               	movwf	27	;volatile
  3945                           
  3946                           ;main.c: 1268: TXSTA=0x20;
  3947  1912  3020               	movlw	32
  3948  1913  009E               	movwf	30	;volatile
  3949                           
  3950                           ;main.c: 1269: TXSTAbits.TXEN=0;
  3951  1914  129E               	bcf	30,5	;volatile
  3952                           
  3953                           ;main.c: 1270: RCSTAbits.CREN=0;
  3954  1915  121D               	bcf	29,4	;volatile
  3955                           
  3956                           ;main.c: 1271: PIE1bits.RCIE=0;
  3957  1916  0021               	movlb	1	; select bank1
  3958  1917  1291               	bcf	17,5	;volatile
  3959                           
  3960                           ;main.c: 1272: PIE1bits.TXIE=0;
  3961  1918  1211               	bcf	17,4	;volatile
  3962  1919  0008               	return
  3963  191A                     __end_of_uart_init:	
  3964                           
  3965                           	psect	text2
  3966  1C53                     __ptext2:	
  3967 ;; *************** function _transmittops *****************
  3968 ;; Defined at:
  3969 ;;		line 1301 in file "main.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;		None
  3974 ;; Return value:  Size  Location     Type
  3975 ;;		None               void
  3976 ;; Registers used:
  3977 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;Total ram usage:        1 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    4
  3990 ;; This function calls:
  3991 ;;		_Send_Byte
  3992 ;; This function is called by:
  3993 ;;		_main
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           
  3998                           ;psect for function _transmittops
  3999  1C53                     _transmittops:	
  4000                           
  4001                           ;main.c: 1303: chksum=0;
  4002                           
  4003                           ;incstack = 0
  4004                           ; Regs used in _transmittops: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4005  1C53  0022               	movlb	2	; select bank2
  4006  1C54  01B4               	clrf	_chksum^(0+256)
  4007                           
  4008                           ;main.c: 1304: pstowfstru.pstowfstrs.psstatusbyte=0xBB;
  4009  1C55  30BB               	movlw	187
  4010  1C56  0021               	movlb	1	; select bank1
  4011  1C57  00A1               	movwf	??_transmittops^(0+128)
  4012  1C58  0821               	movf	??_transmittops^(0+128),w
  4013  1C59  0024               	movlb	4	; select bank4
  4014  1C5A  00CE               	movwf	(_pstowfstru^(0+512)+12)
  4015                           
  4016                           ;main.c: 1306: if(cWf2t4tmodefg == 1)
  4017  1C5B  0022               	movlb	2	; select bank2
  4018  1C5C  0833               	movf	_cWf2t4tmodefg^(0+256),w
  4019  1C5D  3A01               	xorlw	1
  4020  1C5E  1D03               	skipz
  4021  1C5F  2C63               	goto	l776
  4022                           
  4023                           ;main.c: 1307: {
  4024                           ;main.c: 1308: wfstatusu.wfstatuss.twotfourtmode1 = 1;
  4025  1C60  0020               	movlb	0	; select bank0
  4026  1C61  146E               	bsf	_wfstatusu,0
  4027                           
  4028                           ;main.c: 1309: }
  4029  1C62  2C65               	goto	l4534
  4030  1C63                     l776:	
  4031                           
  4032                           ;main.c: 1310: else
  4033                           ;main.c: 1311: {
  4034                           ;main.c: 1312: wfstatusu.wfstatuss.twotfourtmode1 = 0;
  4035  1C63  0020               	movlb	0	; select bank0
  4036  1C64  106E               	bcf	_wfstatusu,0
  4037  1C65                     l4534:	
  4038                           
  4039                           ;main.c: 1313: }
  4040                           ;main.c: 1315: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4041  1C65  086E               	movf	_wfstatusu,w
  4042  1C66  0021               	movlb	1	; select bank1
  4043  1C67  00A1               	movwf	??_transmittops^(0+128)
  4044  1C68  0821               	movf	??_transmittops^(0+128),w
  4045  1C69  0024               	movlb	4	; select bank4
  4046  1C6A  00CF               	movwf	(_pstowfstru^(0+512)+13)
  4047                           
  4048                           ;main.c: 1324: Tx_ptr=0;
  4049  1C6B  0023               	movlb	3	; select bank3
  4050  1C6C  01D2               	clrf	_Tx_ptr^(0+384)
  4051                           
  4052                           ;main.c: 1325: Send_Byte('@');
  4053  1C6D  3040               	movlw	64
  4054  1C6E  3198  209C  319C   	fcall	_Send_Byte
  4055                           
  4056                           ;main.c: 1326: for(lmn=0;lmn<=15;lmn++)
  4057  1C71  0022               	movlb	2	; select bank2
  4058  1C72  01A4               	clrf	_lmn^(0+256)
  4059  1C73  01A5               	clrf	(_lmn+1)^(0+256)
  4060  1C74  3000               	movlw	0
  4061  1C75  0225               	subwf	(_lmn+1)^(0+256),w
  4062  1C76  3010               	movlw	16
  4063  1C77  1903               	skipnz
  4064  1C78  0224               	subwf	_lmn^(0+256),w
  4065  1C79  1803               	btfsc	3,0
  4066  1C7A  2C9C               	goto	l4554
  4067  1C7B                     l4546:	
  4068                           
  4069                           ;main.c: 1327: {
  4070                           ;main.c: 1328: chksum=chksum+pstowfstru.pstransarr[lmn];
  4071  1C7B  0824               	movf	_lmn^(0+256),w
  4072  1C7C  3E42               	addlw	_pstowfstru& (0+255)
  4073  1C7D  0086               	movwf	6
  4074  1C7E  3002               	movlw	2	; select bank4/5
  4075  1C7F  0087               	movwf	7
  4076  1C80  0801               	movf	1,w
  4077  1C81  0734               	addwf	_chksum^(0+256),w
  4078  1C82  0021               	movlb	1	; select bank1
  4079  1C83  00A1               	movwf	??_transmittops^(0+128)
  4080  1C84  0821               	movf	??_transmittops^(0+128),w
  4081  1C85  0022               	movlb	2	; select bank2
  4082  1C86  00B4               	movwf	_chksum^(0+256)
  4083                           
  4084                           ;main.c: 1329: Send_Byte(pstowfstru.pstransarr[lmn]);
  4085  1C87  0824               	movf	_lmn^(0+256),w
  4086  1C88  3E42               	addlw	_pstowfstru& (0+255)
  4087  1C89  0086               	movwf	6
  4088  1C8A  3002               	movlw	2	; select bank4/5
  4089  1C8B  0087               	movwf	7
  4090  1C8C  0801               	movf	1,w
  4091  1C8D  3198  209C  319C   	fcall	_Send_Byte
  4092  1C90  3001               	movlw	1
  4093  1C91  0022               	movlb	2	; select bank2
  4094  1C92  07A4               	addwf	_lmn^(0+256),f
  4095  1C93  3000               	movlw	0
  4096  1C94  3DA5               	addwfc	(_lmn+1)^(0+256),f
  4097  1C95  3000               	movlw	0
  4098  1C96  0225               	subwf	(_lmn+1)^(0+256),w
  4099  1C97  3010               	movlw	16
  4100  1C98  1903               	skipnz
  4101  1C99  0224               	subwf	_lmn^(0+256),w
  4102  1C9A  1C03               	skipc
  4103  1C9B  2C7B               	goto	l4546
  4104  1C9C                     l4554:	
  4105                           
  4106                           ;main.c: 1330: }
  4107                           ;main.c: 1331: if(cEditfg == 1)
  4108  1C9C  0020               	movlb	0	; select bank0
  4109  1C9D  085E               	movf	_cEditfg,w
  4110  1C9E  3A01               	xorlw	1
  4111  1C9F  1D03               	skipz
  4112  1CA0  2CA3               	goto	l4558
  4113                           
  4114                           ;main.c: 1332: {
  4115                           ;main.c: 1333: Send_Byte('E');
  4116  1CA1  3045               	movlw	69
  4117  1CA2  2CA4               	goto	L6
  4118  1CA3                     l4558:	
  4119                           ;main.c: 1334: }
  4120                           
  4121                           
  4122                           ;main.c: 1335: else
  4123                           ;main.c: 1336: {
  4124                           ;main.c: 1337: Send_Byte('X');
  4125  1CA3  3058               	movlw	88
  4126  1CA4                     L6:	
  4127  1CA4  3198  209C  319C   	fcall	_Send_Byte
  4128                           
  4129                           ;main.c: 1338: }
  4130                           ;main.c: 1339: pstowfstru.pstowfstrs.setthickness = chksum;
  4131  1CA7  0022               	movlb	2	; select bank2
  4132  1CA8  0834               	movf	_chksum^(0+256),w
  4133  1CA9  0021               	movlb	1	; select bank1
  4134  1CAA  00A1               	movwf	??_transmittops^(0+128)
  4135  1CAB  0821               	movf	??_transmittops^(0+128),w
  4136  1CAC  0024               	movlb	4	; select bank4
  4137  1CAD  00C6               	movwf	(_pstowfstru^(0+512)+4)
  4138                           
  4139                           ;main.c: 1340: Send_Byte(chksum);
  4140  1CAE  0022               	movlb	2	; select bank2
  4141  1CAF  0834               	movf	_chksum^(0+256),w
  4142  1CB0  3198  209C         	fcall	_Send_Byte
  4143  1CB2  0008               	return
  4144  1CB3                     __end_of_transmittops:	
  4145                           
  4146                           	psect	text3
  4147  18A6                     __ptext3:	
  4148 ;; *************** function _system_init *****************
  4149 ;; Defined at:
  4150 ;;		line 1145 in file "main.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;		None               void
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4168 ;;Total ram usage:        0 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; Hardware stack levels required when called:    3
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_main
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           
  4179                           ;psect for function _system_init
  4180  18A6                     _system_init:	
  4181                           
  4182                           ;main.c: 1149: OSCCONbits.IRCF=14;
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in _system_init: [wreg+status,2+status,0]
  4186  18A6  0021               	movlb	1	; select bank1
  4187  18A7  0819               	movf	25,w	;volatile
  4188  18A8  3987               	andlw	-121
  4189  18A9  3870               	iorlw	112
  4190  18AA  0099               	movwf	25	;volatile
  4191                           
  4192                           ;main.c: 1151: OSCCONbits.SCS=0;
  4193  18AB  30FC               	movlw	-4
  4194  18AC  0599               	andwf	25,f	;volatile
  4195                           
  4196                           ;main.c: 1152: OSCTUNEbits.TUN=0;
  4197  18AD  30C0               	movlw	-64
  4198  18AE  0598               	andwf	24,f	;volatile
  4199  18AF  0008               	return
  4200  18B0                     __end_of_system_init:	
  4201                           
  4202                           	psect	text4
  4203  192F                     __ptext4:	
  4204 ;; *************** function _send_status *****************
  4205 ;; Defined at:
  4206 ;;		line 1343 in file "main.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;		None
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;		None               void
  4213 ;; Registers used:
  4214 ;;		wreg, status,2, status,0, pclath, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4222 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;Total ram usage:        1 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    4
  4227 ;; This function calls:
  4228 ;;		_Send_Byte
  4229 ;; This function is called by:
  4230 ;;		_main
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function _send_status
  4236  192F                     _send_status:	
  4237                           
  4238                           ;main.c: 1345: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4239                           
  4240                           ;incstack = 0
  4241                           ; Regs used in _send_status: [wreg+status,2+status,0+pclath+cstack]
  4242  192F  0020               	movlb	0	; select bank0
  4243  1930  086E               	movf	_wfstatusu,w
  4244  1931  0021               	movlb	1	; select bank1
  4245  1932  00A1               	movwf	??_send_status^(0+128)
  4246  1933  0821               	movf	??_send_status^(0+128),w
  4247  1934  0024               	movlb	4	; select bank4
  4248  1935  00CF               	movwf	(_pstowfstru^(0+512)+13)
  4249                           
  4250                           ;main.c: 1346: Send_Byte('#');
  4251  1936  3023               	movlw	35
  4252  1937  3198  209C  3199   	fcall	_Send_Byte
  4253                           
  4254                           ;main.c: 1347: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4255  193A  0024               	movlb	4	; select bank4
  4256  193B  084F               	movf	(_pstowfstru^(0+512)+13),w
  4257  193C  3198  209C  3199   	fcall	_Send_Byte
  4258                           
  4259                           ;main.c: 1348: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4260  193F  0024               	movlb	4	; select bank4
  4261  1940  084F               	movf	(_pstowfstru^(0+512)+13),w
  4262  1941  3198  209C         	fcall	_Send_Byte
  4263  1943  0008               	return
  4264  1944                     __end_of_send_status:	
  4265                           
  4266                           	psect	text5
  4267  189C                     __ptext5:	
  4268 ;; *************** function _Send_Byte *****************
  4269 ;; Defined at:
  4270 ;;		line 1292 in file "main.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  transbyte       1    wreg     unsigned char 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  transbyte       1    0[BANK1 ] unsigned char 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;		None               void
  4277 ;; Registers used:
  4278 ;;		wreg
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;Total ram usage:        1 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    3
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_transmittops
  4295 ;;		_send_status
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function _Send_Byte
  4301  189C                     _Send_Byte:	
  4302                           
  4303                           ;incstack = 0
  4304                           ; Regs used in _Send_Byte: [wreg]
  4305                           ;Send_Byte@transbyte stored from wreg
  4306  189C  0021               	movlb	1	; select bank1
  4307  189D  00A0               	movwf	Send_Byte@transbyte^(0+128)
  4308  189E                     l770:	
  4309                           ;main.c: 1294: while(TXSTAbits.TRMT != 1);
  4310                           
  4311  189E  0023               	movlb	3	; select bank3
  4312  189F  1C9E               	btfss	30,1	;volatile
  4313  18A0  289E               	goto	l770
  4314                           
  4315                           ;main.c: 1295: TXREG=transbyte;
  4316  18A1  0021               	movlb	1	; select bank1
  4317  18A2  0820               	movf	Send_Byte@transbyte^(0+128),w
  4318  18A3  0023               	movlb	3	; select bank3
  4319  18A4  009A               	movwf	26	;volatile
  4320  18A5  0008               	return
  4321  18A6                     __end_of_Send_Byte:	
  4322                           
  4323                           	psect	text6
  4324  1944                     __ptext6:	
  4325 ;; *************** function _portpin_init *****************
  4326 ;; Defined at:
  4327 ;;		line 1155 in file "main.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;		None
  4332 ;; Return value:  Size  Location     Type
  4333 ;;		None               void
  4334 ;; Registers used:
  4335 ;;		wreg, status,2
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4345 ;;Total ram usage:        0 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    3
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_main
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           
  4356                           ;psect for function _portpin_init
  4357  1944                     _portpin_init:	
  4358                           
  4359                           ;main.c: 1157: TRISA=0x1F;
  4360                           
  4361                           ;incstack = 0
  4362                           ; Regs used in _portpin_init: [wreg+status,2]
  4363  1944  301F               	movlw	31
  4364  1945  0021               	movlb	1	; select bank1
  4365  1946  008C               	movwf	12	;volatile
  4366                           
  4367                           ;main.c: 1158: TRISB=0x00;
  4368  1947  018D               	clrf	13	;volatile
  4369                           
  4370                           ;main.c: 1159: TRISC=0x00;
  4371  1948  018E               	clrf	14	;volatile
  4372                           
  4373                           ;main.c: 1160: ANSELA=0X00;
  4374  1949  0023               	movlb	3	; select bank3
  4375  194A  018C               	clrf	12	;volatile
  4376                           
  4377                           ;main.c: 1161: ANSELB=0X00;
  4378  194B  018D               	clrf	13	;volatile
  4379                           
  4380                           ;main.c: 1164: PORTA=0X00;
  4381  194C  0020               	movlb	0	; select bank0
  4382  194D  018C               	clrf	12	;volatile
  4383                           
  4384                           ;main.c: 1165: PORTC=0X00;
  4385  194E  018E               	clrf	14	;volatile
  4386                           
  4387                           ;main.c: 1166: TRISAbits.TRISA1 =1;
  4388  194F  0021               	movlb	1	; select bank1
  4389  1950  148C               	bsf	12,1	;volatile
  4390                           
  4391                           ;main.c: 1167: TRISAbits.TRISA2 =1;
  4392  1951  150C               	bsf	12,2	;volatile
  4393                           
  4394                           ;main.c: 1168: TRISAbits.TRISA3 =1;
  4395  1952  158C               	bsf	12,3	;volatile
  4396                           
  4397                           ;main.c: 1169: TRISAbits.TRISA4 =1;
  4398  1953  160C               	bsf	12,4	;volatile
  4399                           
  4400                           ;main.c: 1170: TRISCbits.TRISC1 =1;
  4401  1954  148E               	bsf	14,1	;volatile
  4402                           
  4403                           ;main.c: 1171: TRISCbits.TRISC3=0;
  4404  1955  118E               	bcf	14,3	;volatile
  4405                           
  4406                           ;main.c: 1172: TRISCbits.TRISC4=0;
  4407  1956  120E               	bcf	14,4	;volatile
  4408                           
  4409                           ;main.c: 1173: TRISCbits.TRISC5=1;
  4410  1957  168E               	bsf	14,5	;volatile
  4411                           
  4412                           ;main.c: 1174: TRISAbits.TRISA0=0;
  4413  1958  100C               	bcf	12,0	;volatile
  4414  1959  0008               	return
  4415  195A                     __end_of_portpin_init:	
  4416                           
  4417                           	psect	text7
  4418  06B5                     __ptext7:	
  4419 ;; *************** function _key_application *****************
  4420 ;; Defined at:
  4421 ;;		line 1002 in file "main.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  keypress        1    wreg     unsigned char 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  keypress        1   61[BANK1 ] unsigned char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;		None               void
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0, pclath, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4436 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;Total ram usage:        3 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    5
  4442 ;; This function calls:
  4443 ;;		_Update_PWM
  4444 ;;		___wmul
  4445 ;;		_disp_hex_window2
  4446 ;; This function is called by:
  4447 ;;		_main
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           
  4452                           ;psect for function _key_application
  4453  06B5                     _key_application:	
  4454                           
  4455                           ;incstack = 0
  4456                           ; Regs used in _key_application: [wreg+status,2+status,0+pclath+cstack]
  4457                           ;key_application@keypress stored from wreg
  4458  06B5  0021               	movlb	1	; select bank1
  4459  06B6  00DD               	movwf	key_application@keypress^(0+128)
  4460                           
  4461                           ;main.c: 1004: if(keypress==1)
  4462  06B7  085D               	movf	key_application@keypress^(0+128),w
  4463  06B8  3A01               	xorlw	1
  4464  06B9  1D03               	skipz
  4465  06BA  2EFF               	goto	l4580
  4466                           
  4467                           ;main.c: 1005: {
  4468                           ;main.c: 1022: if(gaschkfg == 0)
  4469  06BB  0022               	movlb	2	; select bank2
  4470  06BC  08C0               	movf	_gaschkfg^(0+256),f
  4471  06BD  1D03               	skipz
  4472  06BE  2EF5               	goto	l4576
  4473                           
  4474                           ;main.c: 1023: {
  4475                           ;main.c: 1024: igascntr=15;
  4476  06BF  300F               	movlw	15
  4477  06C0  0023               	movlb	3	; select bank3
  4478  06C1  00BA               	movwf	_igascntr^(0+384)
  4479  06C2  3000               	movlw	0
  4480  06C3  00BB               	movwf	(_igascntr^(0+384)+1)
  4481                           
  4482                           ;main.c: 1025: gaschkfg=1;
  4483  06C4  0022               	movlb	2	; select bank2
  4484  06C5  01C0               	clrf	_gaschkfg^(0+256)
  4485  06C6  0AC0               	incf	_gaschkfg^(0+256),f
  4486                           
  4487                           ;main.c: 1026: TypeU.TypeS.gason =1;
  4488  06C7  0020               	movlb	0	; select bank0
  4489  06C8  15E9               	bsf	_TypeU,3
  4490                           
  4491                           ;main.c: 1027: PORTCbits.RC3 =1;
  4492  06C9  158E               	bsf	14,3	;volatile
  4493                           
  4494                           ;main.c: 1028: diswin1[0]= 0x11;
  4495  06CA  3011               	movlw	17
  4496  06CB  0021               	movlb	1	; select bank1
  4497  06CC  00DB               	movwf	??_key_application^(0+128)
  4498  06CD  085B               	movf	??_key_application^(0+128),w
  4499  06CE  0022               	movlb	2	; select bank2
  4500  06CF  00E4               	movwf	_diswin1^(0+256)
  4501                           
  4502                           ;main.c: 1029: diswin1[1]= 0x0B;
  4503  06D0  300B               	movlw	11
  4504  06D1  0021               	movlb	1	; select bank1
  4505  06D2  00DB               	movwf	??_key_application^(0+128)
  4506  06D3  085B               	movf	??_key_application^(0+128),w
  4507  06D4  0022               	movlb	2	; select bank2
  4508  06D5  00E5               	movwf	(_diswin1^(0+256)+1)
  4509                           
  4510                           ;main.c: 1030: diswin1[2]= 0x1D;
  4511  06D6  301D               	movlw	29
  4512  06D7  0021               	movlb	1	; select bank1
  4513  06D8  00DB               	movwf	??_key_application^(0+128)
  4514  06D9  085B               	movf	??_key_application^(0+128),w
  4515  06DA  0022               	movlb	2	; select bank2
  4516  06DB  00E6               	movwf	(_diswin1^(0+256)+2)
  4517                           
  4518                           ;main.c: 1032: diswin1[3]= 0x19;
  4519  06DC  3019               	movlw	25
  4520  06DD  0021               	movlb	1	; select bank1
  4521  06DE  00DB               	movwf	??_key_application^(0+128)
  4522  06DF  085B               	movf	??_key_application^(0+128),w
  4523  06E0  0022               	movlb	2	; select bank2
  4524  06E1  00E7               	movwf	(_diswin1^(0+256)+3)
  4525                           
  4526                           ;main.c: 1033: diswin1[4]= 0x18;
  4527  06E2  3018               	movlw	24
  4528  06E3  0021               	movlb	1	; select bank1
  4529  06E4  00DB               	movwf	??_key_application^(0+128)
  4530  06E5  085B               	movf	??_key_application^(0+128),w
  4531  06E6  0022               	movlb	2	; select bank2
  4532  06E7  00E8               	movwf	(_diswin1^(0+256)+4)
  4533                           
  4534                           ;main.c: 1034: diswin1[5]= 0x25;
  4535  06E8  3025               	movlw	37
  4536  06E9  0021               	movlb	1	; select bank1
  4537  06EA  00DB               	movwf	??_key_application^(0+128)
  4538  06EB  085B               	movf	??_key_application^(0+128),w
  4539  06EC  0022               	movlb	2	; select bank2
  4540  06ED  00E9               	movwf	(_diswin1^(0+256)+5)
  4541                           
  4542                           ;main.c: 1035: dispupdatef =1;
  4543  06EE  3001               	movlw	1
  4544  06EF  0021               	movlb	1	; select bank1
  4545  06F0  00DB               	movwf	??_key_application^(0+128)
  4546  06F1  085B               	movf	??_key_application^(0+128),w
  4547  06F2  0020               	movlb	0	; select bank0
  4548  06F3  00EF               	movwf	_dispupdatef	;volatile
  4549                           
  4550                           ;main.c: 1036: }
  4551  06F4  2EF8               	goto	l4578
  4552  06F5                     l4576:	
  4553                           
  4554                           ;main.c: 1037: else
  4555                           ;main.c: 1038: {
  4556                           ;main.c: 1039: igascntr = 0;
  4557  06F5  0023               	movlb	3	; select bank3
  4558  06F6  01BA               	clrf	_igascntr^(0+384)
  4559  06F7  01BB               	clrf	(_igascntr+1)^(0+384)
  4560  06F8                     l4578:	
  4561                           
  4562                           ;main.c: 1040: }
  4563                           ;main.c: 1042: dispupdatef =1;
  4564  06F8  3001               	movlw	1
  4565  06F9  0021               	movlb	1	; select bank1
  4566  06FA  00DB               	movwf	??_key_application^(0+128)
  4567  06FB  085B               	movf	??_key_application^(0+128),w
  4568  06FC  0020               	movlb	0	; select bank0
  4569  06FD  00EF               	movwf	_dispupdatef	;volatile
  4570                           
  4571                           ;main.c: 1044: }
  4572  06FE  0008               	return
  4573  06FF                     l4580:	
  4574                           
  4575                           ;main.c: 1045: else if(keypress==2)
  4576  06FF  0021               	movlb	1	; select bank1
  4577  0700  085D               	movf	key_application@keypress^(0+128),w
  4578  0701  3A02               	xorlw	2
  4579  0702  1D03               	skipz
  4580  0703  2F91               	goto	l4618
  4581                           
  4582                           ;main.c: 1046: {
  4583                           ;main.c: 1047: inchcnt=10;
  4584  0704  300A               	movlw	10
  4585  0705  00DB               	movwf	??_key_application^(0+128)
  4586  0706  085B               	movf	??_key_application^(0+128),w
  4587  0707  0020               	movlb	0	; select bank0
  4588  0708  00EC               	movwf	_inchcnt
  4589  0709                     l4608:	
  4590                           ;main.c: 1048: while(key==2)
  4591                           
  4592  0709  0021               	movlb	1	; select bank1
  4593  070A  086F               	movf	_key^(0+128),w	;volatile
  4594  070B  3A02               	xorlw	2
  4595  070C  1D03               	btfss	3,2
  4596  070D  2F6D               	goto	l4610
  4597                           
  4598                           ;main.c: 1049: {
  4599                           ;main.c: 1050: TypeU.TypeS.inch =1;
  4600  070E  0020               	movlb	0	; select bank0
  4601  070F  15EA               	bsf	_TypeU+1,3
  4602                           
  4603                           ;main.c: 1053: diswin1[0] =0x13;
  4604  0710  3013               	movlw	19
  4605  0711  0021               	movlb	1	; select bank1
  4606  0712  00DB               	movwf	??_key_application^(0+128)
  4607  0713  085B               	movf	??_key_application^(0+128),w
  4608  0714  0022               	movlb	2	; select bank2
  4609  0715  00E4               	movwf	_diswin1^(0+256)
  4610                           
  4611                           ;main.c: 1054: diswin1[1] =0x18;
  4612  0716  3018               	movlw	24
  4613  0717  0021               	movlb	1	; select bank1
  4614  0718  00DB               	movwf	??_key_application^(0+128)
  4615  0719  085B               	movf	??_key_application^(0+128),w
  4616  071A  0022               	movlb	2	; select bank2
  4617  071B  00E5               	movwf	(_diswin1^(0+256)+1)
  4618                           
  4619                           ;main.c: 1055: diswin1[2] =0x0D;
  4620  071C  300D               	movlw	13
  4621  071D  0021               	movlb	1	; select bank1
  4622  071E  00DB               	movwf	??_key_application^(0+128)
  4623  071F  085B               	movf	??_key_application^(0+128),w
  4624  0720  0022               	movlb	2	; select bank2
  4625  0721  00E6               	movwf	(_diswin1^(0+256)+2)
  4626                           
  4627                           ;main.c: 1056: Update_PWM(inchcnt*4);
  4628  0722  0020               	movlb	0	; select bank0
  4629  0723  086C               	movf	_inchcnt,w
  4630  0724  0021               	movlb	1	; select bank1
  4631  0725  00DB               	movwf	??_key_application^(0+128)
  4632  0726  01DC               	clrf	(??_key_application^(0+128)+1)
  4633  0727  35DB               	lslf	??_key_application^(0+128),f
  4634  0728  0DDC               	rlf	(??_key_application^(0+128)+1),f
  4635  0729  35DB               	lslf	??_key_application^(0+128),f
  4636  072A  0DDC               	rlf	(??_key_application^(0+128)+1),f
  4637  072B  085B               	movf	??_key_application^(0+128),w
  4638  072C  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  4639  072D  085C               	movf	(??_key_application+1)^(0+128),w
  4640  072E  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  4641  072F  3199  2178  3186   	fcall	_Update_PWM
  4642                           
  4643                           ;main.c: 1057: disp_hex_window2(inchcnt);
  4644  0732  0020               	movlb	0	; select bank0
  4645  0733  086C               	movf	_inchcnt,w
  4646  0734  0021               	movlb	1	; select bank1
  4647  0735  00DB               	movwf	??_key_application^(0+128)
  4648  0736  01DC               	clrf	(??_key_application^(0+128)+1)
  4649  0737  085B               	movf	??_key_application^(0+128),w
  4650  0738  00AE               	movwf	disp_hex_window2@hex_data^(0+128)
  4651  0739  085C               	movf	(??_key_application+1)^(0+128),w
  4652  073A  00AF               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  4653  073B  3190  2011  3186   	fcall	_disp_hex_window2
  4654                           
  4655                           ;main.c: 1058: if(inchcnt<100)
  4656  073E  3064               	movlw	100
  4657  073F  0020               	movlb	0	; select bank0
  4658  0740  026C               	subwf	_inchcnt,w
  4659  0741  1803               	skipnc
  4660  0742  2F09               	goto	l4608
  4661                           
  4662                           ;main.c: 1059: {
  4663                           ;main.c: 1060: inchcnt=inchcnt+10;
  4664  0743  086C               	movf	_inchcnt,w
  4665  0744  3E0A               	addlw	10
  4666  0745  0021               	movlb	1	; select bank1
  4667  0746  00DB               	movwf	??_key_application^(0+128)
  4668  0747  085B               	movf	??_key_application^(0+128),w
  4669  0748  0020               	movlb	0	; select bank0
  4670  0749  00EC               	movwf	_inchcnt
  4671                           
  4672                           ;main.c: 1061: for(delinch1=0;delinch1<5;delinch1++)
  4673  074A  0023               	movlb	3	; select bank3
  4674  074B  01B8               	clrf	_delinch1^(0+384)
  4675  074C  01B9               	clrf	(_delinch1+1)^(0+384)
  4676  074D                     L7:	
  4677  074D  3000               	movlw	0
  4678  074E  0239               	subwf	(_delinch1+1)^(0+384),w
  4679  074F  3005               	movlw	5
  4680  0750  1903               	skipnz
  4681  0751  0238               	subwf	_delinch1^(0+384),w
  4682  0752  1803               	btfsc	3,0
  4683  0753  2F09               	goto	l4608
  4684                           
  4685                           ;main.c: 1062: for(delinch=0;delinch<50000;delinch++);
  4686  0754  01B6               	clrf	_delinch^(0+384)
  4687  0755  01B7               	clrf	(_delinch+1)^(0+384)
  4688  0756  30C3               	movlw	195
  4689  0757  0237               	subwf	(_delinch+1)^(0+384),w
  4690  0758  3050               	movlw	80
  4691  0759  1903               	skipnz
  4692  075A  0236               	subwf	_delinch^(0+384),w
  4693  075B  1803               	btfsc	3,0
  4694  075C  2F68               	goto	l4606
  4695  075D                     l4604:	
  4696  075D  3001               	movlw	1
  4697  075E  07B6               	addwf	_delinch^(0+384),f
  4698  075F  3000               	movlw	0
  4699  0760  3DB7               	addwfc	(_delinch+1)^(0+384),f
  4700  0761  30C3               	movlw	195
  4701  0762  0237               	subwf	(_delinch+1)^(0+384),w
  4702  0763  3050               	movlw	80
  4703  0764  1903               	skipnz
  4704  0765  0236               	subwf	_delinch^(0+384),w
  4705  0766  1C03               	skipc
  4706  0767  2F5D               	goto	l4604
  4707  0768                     l4606:	
  4708  0768  3001               	movlw	1
  4709  0769  07B8               	addwf	_delinch1^(0+384),f
  4710  076A  3000               	movlw	0
  4711  076B  3DB9               	addwfc	(_delinch1+1)^(0+384),f
  4712  076C  2F4D               	goto	L7
  4713  076D                     l4610:	
  4714                           
  4715                           ;main.c: 1063: }
  4716                           ;main.c: 1064: }
  4717                           ;main.c: 1065: Update_PWM(inchcnt*0);
  4718  076D  0020               	movlb	0	; select bank0
  4719  076E  086C               	movf	_inchcnt,w
  4720  076F  0021               	movlb	1	; select bank1
  4721  0770  00DB               	movwf	??_key_application^(0+128)
  4722  0771  01DC               	clrf	(??_key_application^(0+128)+1)
  4723  0772  085B               	movf	??_key_application^(0+128),w
  4724  0773  00A0               	movwf	___wmul@multiplier^(0+128)
  4725  0774  085C               	movf	(??_key_application+1)^(0+128),w
  4726  0775  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  4727  0776  3000               	movlw	0
  4728  0777  00A2               	movwf	___wmul@multiplicand^(0+128)
  4729  0778  3000               	movlw	0
  4730  0779  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  4731  077A  3199  215A  3186   	fcall	___wmul
  4732  077D  0021               	movlb	1	; select bank1
  4733  077E  0821               	movf	(?___wmul+1)^(0+128),w
  4734  077F  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  4735  0780  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  4736  0781  0820               	movf	?___wmul^(0+128),w
  4737  0782  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  4738  0783  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  4739  0784  3199  2178         	fcall	_Update_PWM
  4740                           
  4741                           ;main.c: 1066: TypeU.TypeS.inch =0;
  4742  0786  0020               	movlb	0	; select bank0
  4743  0787  11EA               	bcf	_TypeU+1,3
  4744                           
  4745                           ;main.c: 1068: inchkeyon =0;
  4746  0788  0023               	movlb	3	; select bank3
  4747  0789  01D8               	clrf	_inchkeyon^(0+384)
  4748                           
  4749                           ;main.c: 1069: dispupdatef =1;
  4750  078A  3001               	movlw	1
  4751  078B  0021               	movlb	1	; select bank1
  4752  078C  00DB               	movwf	??_key_application^(0+128)
  4753  078D  085B               	movf	??_key_application^(0+128),w
  4754  078E  0020               	movlb	0	; select bank0
  4755  078F  00EF               	movwf	_dispupdatef	;volatile
  4756                           
  4757                           ;main.c: 1070: }
  4758  0790  0008               	return
  4759  0791                     l4618:	
  4760                           
  4761                           ;main.c: 1071: else if(keypress==3)
  4762  0791  0021               	movlb	1	; select bank1
  4763  0792  085D               	movf	key_application@keypress^(0+128),w
  4764  0793  3A03               	xorlw	3
  4765  0794  1D03               	skipz
  4766  0795  2FAB               	goto	l4630
  4767                           
  4768                           ;main.c: 1072: {
  4769                           ;main.c: 1076: if(TypeU.TypeS.twot==1)
  4770  0796  0020               	movlb	0	; select bank0
  4771  0797  1E69               	btfss	_TypeU,4
  4772  0798  2FA0               	goto	l722
  4773                           
  4774                           ;main.c: 1077: {
  4775                           ;main.c: 1078: TypeU.TypeS.twot=0;
  4776  0799  1269               	bcf	_TypeU,4
  4777                           
  4778                           ;main.c: 1079: TypeU.TypeS.fourt=1;
  4779  079A  16E9               	bsf	_TypeU,5
  4780                           
  4781                           ;main.c: 1080: wfstatusu.wfstatuss.twotfourtmode1=1;
  4782  079B  146E               	bsf	_wfstatusu,0
  4783                           
  4784                           ;main.c: 1081: cWf2t4tmodefg = 1;
  4785  079C  0022               	movlb	2	; select bank2
  4786  079D  01B3               	clrf	_cWf2t4tmodefg^(0+256)
  4787  079E  0AB3               	incf	_cWf2t4tmodefg^(0+256),f
  4788                           
  4789                           ;main.c: 1082: }
  4790  079F  2FA7               	goto	l4628
  4791  07A0                     l722:	
  4792                           
  4793                           ;main.c: 1083: else if(TypeU.TypeS.fourt==1)
  4794  07A0  1EE9               	btfss	_TypeU,5
  4795  07A1  2FA7               	goto	l4628
  4796                           
  4797                           ;main.c: 1084: {
  4798                           ;main.c: 1085: TypeU.TypeS.fourt=0;
  4799  07A2  12E9               	bcf	_TypeU,5
  4800                           
  4801                           ;main.c: 1086: TypeU.TypeS.twot =1;
  4802  07A3  1669               	bsf	_TypeU,4
  4803                           
  4804                           ;main.c: 1087: wfstatusu.wfstatuss.twotfourtmode1=0;
  4805  07A4  106E               	bcf	_wfstatusu,0
  4806                           
  4807                           ;main.c: 1088: cWf2t4tmodefg = 0;
  4808  07A5  0022               	movlb	2	; select bank2
  4809  07A6  01B3               	clrf	_cWf2t4tmodefg^(0+256)
  4810  07A7                     l4628:	
  4811                           
  4812                           ;main.c: 1089: }
  4813                           ;main.c: 1090: cEditfg = 1;
  4814  07A7  0020               	movlb	0	; select bank0
  4815  07A8  01DE               	clrf	_cEditfg
  4816  07A9  0ADE               	incf	_cEditfg,f
  4817                           
  4818                           ;main.c: 1091: }
  4819  07AA  0008               	return
  4820  07AB                     l4630:	
  4821                           
  4822                           ;main.c: 1092: else if(keypress==4)
  4823  07AB  0021               	movlb	1	; select bank1
  4824  07AC  085D               	movf	key_application@keypress^(0+128),w
  4825  07AD  3A04               	xorlw	4
  4826  07AE  1D03               	skipz
  4827  07AF  2FC7               	goto	l4650
  4828                           
  4829                           ;main.c: 1093: {
  4830                           ;main.c: 1095: if(TypeU.TypeS.wirespeed==1)
  4831  07B0  0020               	movlb	0	; select bank0
  4832  07B1  1C69               	btfss	_TypeU,0
  4833  07B2  2FB8               	goto	l727
  4834                           
  4835                           ;main.c: 1096: {
  4836                           ;main.c: 1099: TypeU.TypeS.wirespeed=0;
  4837  07B3  1069               	bcf	_TypeU,0
  4838                           
  4839                           ;main.c: 1100: TypeU.TypeS.amp=1;
  4840  07B4  146A               	bsf	_TypeU+1,0
  4841                           
  4842                           ;main.c: 1101: TypeU.TypeS.thickness=0;
  4843  07B5  10E9               	bcf	_TypeU,1
  4844                           
  4845                           ;main.c: 1102: TypeDP.DPGROUP[0]=0x00;
  4846  07B6  01EB               	clrf	_TypeDP
  4847  07B7  2FBF               	goto	l4646
  4848  07B8                     l727:	
  4849                           ;main.c: 1105: }
  4850                           
  4851                           ;main.c: 1103: TypeDP.TypeD.digitdp5 =1;
  4852                           
  4853                           
  4854                           ;main.c: 1106: else if(TypeU.TypeS.amp==1)
  4855  07B8  1C6A               	btfss	_TypeU+1,0
  4856  07B9  2FC0               	goto	l4648
  4857                           
  4858                           ;main.c: 1107: {
  4859                           ;main.c: 1111: TypeU.TypeS.amp=0;
  4860  07BA  106A               	bcf	_TypeU+1,0
  4861                           
  4862                           ;main.c: 1112: TypeU.TypeS.thickness=0;
  4863  07BB  10E9               	bcf	_TypeU,1
  4864                           
  4865                           ;main.c: 1113: TypeU.TypeS.wirespeed=1;
  4866  07BC  1469               	bsf	_TypeU,0
  4867                           
  4868                           ;main.c: 1114: TypeDP.DPGROUP[0]=0x00;
  4869  07BD  01EB               	clrf	_TypeDP
  4870                           
  4871                           ;main.c: 1115: TypeDP.TypeD.digitdp2 =1;
  4872  07BE  14EB               	bsf	_TypeDP,1
  4873  07BF                     l4646:	
  4874                           
  4875                           ;main.c: 1116: TypeDP.TypeD.digitdp5 =1;
  4876  07BF  166B               	bsf	_TypeDP,4
  4877  07C0                     l4648:	
  4878                           
  4879                           ;main.c: 1118: }
  4880                           ;main.c: 1133: dispupdatef =1;
  4881  07C0  3001               	movlw	1
  4882  07C1  0021               	movlb	1	; select bank1
  4883  07C2  00DB               	movwf	??_key_application^(0+128)
  4884  07C3  085B               	movf	??_key_application^(0+128),w
  4885  07C4  0020               	movlb	0	; select bank0
  4886  07C5  00EF               	movwf	_dispupdatef	;volatile
  4887                           
  4888                           ;main.c: 1134: }
  4889  07C6  0008               	return
  4890  07C7                     l4650:	
  4891                           
  4892                           ;main.c: 1135: else if(keypress==0)
  4893  07C7  0021               	movlb	1	; select bank1
  4894  07C8  08DD               	movf	key_application@keypress^(0+128),f
  4895  07C9  1D03               	skipz
  4896  07CA  0008               	return
  4897                           
  4898                           ;main.c: 1136: {
  4899                           ;main.c: 1137: TypeU.TypeS.gason =0;
  4900  07CB  0020               	movlb	0	; select bank0
  4901  07CC  11E9               	bcf	_TypeU,3
  4902                           
  4903                           ;main.c: 1138: TypeU.TypeS.inch =0;
  4904  07CD  11EA               	bcf	_TypeU+1,3
  4905                           
  4906                           ;main.c: 1142: inchkeyon =0;
  4907  07CE  0023               	movlb	3	; select bank3
  4908  07CF  01D8               	clrf	_inchkeyon^(0+384)
  4909  07D0  0008               	return
  4910  07D1                     __end_of_key_application:	
  4911                           
  4912                           	psect	text8
  4913  1011                     __ptext8:	
  4914 ;; *************** function _disp_hex_window2 *****************
  4915 ;; Defined at:
  4916 ;;		line 164 in file "DISPLAY.C"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  hex_data        2   14[BANK1 ] unsigned int 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;		None               void
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0, pclath, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4930 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4933 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4934 ;;Total ram usage:        3 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    4
  4937 ;; This function calls:
  4938 ;;		___lwdiv
  4939 ;;		___lwmod
  4940 ;; This function is called by:
  4941 ;;		_main
  4942 ;;		_key_application
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           
  4947                           ;psect for function _disp_hex_window2
  4948  1011                     _disp_hex_window2:	
  4949                           
  4950                           ;DISPLAY.C: 166: diswin1[5]= hex_data % 10;
  4951                           
  4952                           ;incstack = 0
  4953                           ; Regs used in _disp_hex_window2: [wreg+status,2+status,0+pclath+cstack]
  4954  1011  300A               	movlw	10
  4955  1012  0021               	movlb	1	; select bank1
  4956  1013  00A0               	movwf	___lwmod@divisor^(0+128)
  4957  1014  3000               	movlw	0
  4958  1015  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  4959  1016  082F               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  4960  1017  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  4961  1018  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  4962  1019  082E               	movf	disp_hex_window2@hex_data^(0+128),w
  4963  101A  01A2               	clrf	___lwmod@dividend^(0+128)
  4964  101B  07A2               	addwf	___lwmod@dividend^(0+128),f
  4965  101C  3187  27D1  3190   	fcall	___lwmod
  4966  101F  0021               	movlb	1	; select bank1
  4967  1020  0820               	movf	?___lwmod^(0+128),w
  4968  1021  00B0               	movwf	??_disp_hex_window2^(0+128)
  4969  1022  0830               	movf	??_disp_hex_window2^(0+128),w
  4970  1023  0022               	movlb	2	; select bank2
  4971  1024  00E9               	movwf	(_diswin1^(0+256)+5)
  4972                           
  4973                           ;DISPLAY.C: 167: hex_data /= 10;
  4974  1025  300A               	movlw	10
  4975  1026  0021               	movlb	1	; select bank1
  4976  1027  00A6               	movwf	___lwdiv@divisor^(0+128)
  4977  1028  3000               	movlw	0
  4978  1029  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  4979  102A  082F               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  4980  102B  01A9               	clrf	(___lwdiv@dividend+1)^(0+128)
  4981  102C  07A9               	addwf	(___lwdiv@dividend+1)^(0+128),f
  4982  102D  082E               	movf	disp_hex_window2@hex_data^(0+128),w
  4983  102E  01A8               	clrf	___lwdiv@dividend^(0+128)
  4984  102F  07A8               	addwf	___lwdiv@dividend^(0+128),f
  4985  1030  319A  222B  3190   	fcall	___lwdiv
  4986  1033  0021               	movlb	1	; select bank1
  4987  1034  0827               	movf	(?___lwdiv+1)^(0+128),w
  4988  1035  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  4989  1036  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  4990  1037  0826               	movf	?___lwdiv^(0+128),w
  4991  1038  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  4992  1039  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  4993                           
  4994                           ;DISPLAY.C: 168: diswin1[4]= hex_data % 10;
  4995  103A  300A               	movlw	10
  4996  103B  00A0               	movwf	___lwmod@divisor^(0+128)
  4997  103C  3000               	movlw	0
  4998  103D  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  4999  103E  082F               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5000  103F  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5001  1040  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5002  1041  082E               	movf	disp_hex_window2@hex_data^(0+128),w
  5003  1042  01A2               	clrf	___lwmod@dividend^(0+128)
  5004  1043  07A2               	addwf	___lwmod@dividend^(0+128),f
  5005  1044  3187  27D1  3190   	fcall	___lwmod
  5006  1047  0021               	movlb	1	; select bank1
  5007  1048  0820               	movf	?___lwmod^(0+128),w
  5008  1049  00B0               	movwf	??_disp_hex_window2^(0+128)
  5009  104A  0830               	movf	??_disp_hex_window2^(0+128),w
  5010  104B  0022               	movlb	2	; select bank2
  5011  104C  00E8               	movwf	(_diswin1^(0+256)+4)
  5012                           
  5013                           ;DISPLAY.C: 169: hex_data /= 10;
  5014  104D  300A               	movlw	10
  5015  104E  0021               	movlb	1	; select bank1
  5016  104F  00A6               	movwf	___lwdiv@divisor^(0+128)
  5017  1050  3000               	movlw	0
  5018  1051  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  5019  1052  082F               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5020  1053  01A9               	clrf	(___lwdiv@dividend+1)^(0+128)
  5021  1054  07A9               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5022  1055  082E               	movf	disp_hex_window2@hex_data^(0+128),w
  5023  1056  01A8               	clrf	___lwdiv@dividend^(0+128)
  5024  1057  07A8               	addwf	___lwdiv@dividend^(0+128),f
  5025  1058  319A  222B  3190   	fcall	___lwdiv
  5026  105B  0021               	movlb	1	; select bank1
  5027  105C  0827               	movf	(?___lwdiv+1)^(0+128),w
  5028  105D  01AF               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  5029  105E  07AF               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  5030  105F  0826               	movf	?___lwdiv^(0+128),w
  5031  1060  01AE               	clrf	disp_hex_window2@hex_data^(0+128)
  5032  1061  07AE               	addwf	disp_hex_window2@hex_data^(0+128),f
  5033                           
  5034                           ;DISPLAY.C: 170: diswin1[3]= hex_data % 10;
  5035  1062  300A               	movlw	10
  5036  1063  00A0               	movwf	___lwmod@divisor^(0+128)
  5037  1064  3000               	movlw	0
  5038  1065  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5039  1066  082F               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5040  1067  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5041  1068  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5042  1069  082E               	movf	disp_hex_window2@hex_data^(0+128),w
  5043  106A  01A2               	clrf	___lwmod@dividend^(0+128)
  5044  106B  07A2               	addwf	___lwmod@dividend^(0+128),f
  5045  106C  3187  27D1         	fcall	___lwmod
  5046  106E  0021               	movlb	1	; select bank1
  5047  106F  0820               	movf	?___lwmod^(0+128),w
  5048  1070  00B0               	movwf	??_disp_hex_window2^(0+128)
  5049  1071  0830               	movf	??_disp_hex_window2^(0+128),w
  5050  1072  0022               	movlb	2	; select bank2
  5051  1073  00E7               	movwf	(_diswin1^(0+256)+3)
  5052                           
  5053                           ;DISPLAY.C: 171: diswin1[6]=0x00;
  5054  1074  01EA               	clrf	(_diswin1^(0+256)+6)
  5055                           
  5056                           ;DISPLAY.C: 172: diswin1[7]=0x00;
  5057  1075  01EB               	clrf	(_diswin1^(0+256)+7)
  5058  1076  0008               	return
  5059  1077                     __end_of_disp_hex_window2:	
  5060                           
  5061                           	psect	text9
  5062  1D14                     __ptext9:	
  5063 ;; *************** function _disp_hex_window1 *****************
  5064 ;; Defined at:
  5065 ;;		line 152 in file "DISPLAY.C"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  hex_data        2   14[BANK1 ] unsigned int 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;		None               void
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0, pclath, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5079 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;Total ram usage:        3 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    4
  5086 ;; This function calls:
  5087 ;;		___lwdiv
  5088 ;;		___lwmod
  5089 ;; This function is called by:
  5090 ;;		_main
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           
  5095                           ;psect for function _disp_hex_window1
  5096  1D14                     _disp_hex_window1:	
  5097                           
  5098                           ;DISPLAY.C: 155: diswin1[2]= hex_data % 10;
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in _disp_hex_window1: [wreg+status,2+status,0+pclath+cstack]
  5102  1D14  300A               	movlw	10
  5103  1D15  0021               	movlb	1	; select bank1
  5104  1D16  00A0               	movwf	___lwmod@divisor^(0+128)
  5105  1D17  3000               	movlw	0
  5106  1D18  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5107  1D19  082F               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5108  1D1A  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5109  1D1B  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5110  1D1C  082E               	movf	disp_hex_window1@hex_data^(0+128),w
  5111  1D1D  01A2               	clrf	___lwmod@dividend^(0+128)
  5112  1D1E  07A2               	addwf	___lwmod@dividend^(0+128),f
  5113  1D1F  3187  27D1  319D   	fcall	___lwmod
  5114  1D22  0021               	movlb	1	; select bank1
  5115  1D23  0820               	movf	?___lwmod^(0+128),w
  5116  1D24  00B0               	movwf	??_disp_hex_window1^(0+128)
  5117  1D25  0830               	movf	??_disp_hex_window1^(0+128),w
  5118  1D26  0022               	movlb	2	; select bank2
  5119  1D27  00E6               	movwf	(_diswin1^(0+256)+2)
  5120                           
  5121                           ;DISPLAY.C: 156: hex_data /= 10;
  5122  1D28  300A               	movlw	10
  5123  1D29  0021               	movlb	1	; select bank1
  5124  1D2A  00A6               	movwf	___lwdiv@divisor^(0+128)
  5125  1D2B  3000               	movlw	0
  5126  1D2C  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  5127  1D2D  082F               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5128  1D2E  01A9               	clrf	(___lwdiv@dividend+1)^(0+128)
  5129  1D2F  07A9               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5130  1D30  082E               	movf	disp_hex_window1@hex_data^(0+128),w
  5131  1D31  01A8               	clrf	___lwdiv@dividend^(0+128)
  5132  1D32  07A8               	addwf	___lwdiv@dividend^(0+128),f
  5133  1D33  319A  222B  319D   	fcall	___lwdiv
  5134  1D36  0021               	movlb	1	; select bank1
  5135  1D37  0827               	movf	(?___lwdiv+1)^(0+128),w
  5136  1D38  01AF               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  5137  1D39  07AF               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  5138  1D3A  0826               	movf	?___lwdiv^(0+128),w
  5139  1D3B  01AE               	clrf	disp_hex_window1@hex_data^(0+128)
  5140  1D3C  07AE               	addwf	disp_hex_window1@hex_data^(0+128),f
  5141                           
  5142                           ;DISPLAY.C: 157: diswin1[1]= hex_data % 10;
  5143  1D3D  300A               	movlw	10
  5144  1D3E  00A0               	movwf	___lwmod@divisor^(0+128)
  5145  1D3F  3000               	movlw	0
  5146  1D40  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5147  1D41  082F               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5148  1D42  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5149  1D43  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5150  1D44  082E               	movf	disp_hex_window1@hex_data^(0+128),w
  5151  1D45  01A2               	clrf	___lwmod@dividend^(0+128)
  5152  1D46  07A2               	addwf	___lwmod@dividend^(0+128),f
  5153  1D47  3187  27D1  319D   	fcall	___lwmod
  5154  1D4A  0021               	movlb	1	; select bank1
  5155  1D4B  0820               	movf	?___lwmod^(0+128),w
  5156  1D4C  00B0               	movwf	??_disp_hex_window1^(0+128)
  5157  1D4D  0830               	movf	??_disp_hex_window1^(0+128),w
  5158  1D4E  0022               	movlb	2	; select bank2
  5159  1D4F  00E5               	movwf	(_diswin1^(0+256)+1)
  5160                           
  5161                           ;DISPLAY.C: 158: hex_data /= 10;
  5162  1D50  300A               	movlw	10
  5163  1D51  0021               	movlb	1	; select bank1
  5164  1D52  00A6               	movwf	___lwdiv@divisor^(0+128)
  5165  1D53  3000               	movlw	0
  5166  1D54  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  5167  1D55  082F               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5168  1D56  01A9               	clrf	(___lwdiv@dividend+1)^(0+128)
  5169  1D57  07A9               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5170  1D58  082E               	movf	disp_hex_window1@hex_data^(0+128),w
  5171  1D59  01A8               	clrf	___lwdiv@dividend^(0+128)
  5172  1D5A  07A8               	addwf	___lwdiv@dividend^(0+128),f
  5173  1D5B  319A  222B  319D   	fcall	___lwdiv
  5174  1D5E  0021               	movlb	1	; select bank1
  5175  1D5F  0827               	movf	(?___lwdiv+1)^(0+128),w
  5176  1D60  01AF               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  5177  1D61  07AF               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  5178  1D62  0826               	movf	?___lwdiv^(0+128),w
  5179  1D63  01AE               	clrf	disp_hex_window1@hex_data^(0+128)
  5180  1D64  07AE               	addwf	disp_hex_window1@hex_data^(0+128),f
  5181                           
  5182                           ;DISPLAY.C: 159: diswin1[0]= hex_data % 10;
  5183  1D65  300A               	movlw	10
  5184  1D66  00A0               	movwf	___lwmod@divisor^(0+128)
  5185  1D67  3000               	movlw	0
  5186  1D68  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5187  1D69  082F               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5188  1D6A  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5189  1D6B  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5190  1D6C  082E               	movf	disp_hex_window1@hex_data^(0+128),w
  5191  1D6D  01A2               	clrf	___lwmod@dividend^(0+128)
  5192  1D6E  07A2               	addwf	___lwmod@dividend^(0+128),f
  5193  1D6F  3187  27D1         	fcall	___lwmod
  5194  1D71  0021               	movlb	1	; select bank1
  5195  1D72  0820               	movf	?___lwmod^(0+128),w
  5196  1D73  00B0               	movwf	??_disp_hex_window1^(0+128)
  5197  1D74  0830               	movf	??_disp_hex_window1^(0+128),w
  5198  1D75  0022               	movlb	2	; select bank2
  5199  1D76  00E4               	movwf	_diswin1^(0+256)
  5200  1D77  0008               	return
  5201  1D78                     __end_of_disp_hex_window1:	
  5202                           
  5203                           	psect	text10
  5204  07D1                     __ptext10:	
  5205 ;; *************** function ___lwmod *****************
  5206 ;; Defined at:
  5207 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwmod.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  divisor         2    0[BANK1 ] unsigned int 
  5210 ;;  dividend        2    2[BANK1 ] unsigned int 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  counter         1    5[BANK1 ] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  2    0[BANK1 ] unsigned int 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5222 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;Total ram usage:        6 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    3
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_disp_hex_window1
  5233 ;;		_disp_hex_window2
  5234 ;;		_disp_hex_window11
  5235 ;;		_disp_hex_window22
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           
  5240                           ;psect for function ___lwmod
  5241  07D1                     ___lwmod:	
  5242                           
  5243                           ;incstack = 0
  5244                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5245  07D1  0021               	movlb	1	; select bank1
  5246  07D2  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5247  07D3  0420               	iorwf	___lwmod@divisor^(0+128),w
  5248  07D4  1903               	skipnz
  5249  07D5  2FF9               	goto	l3614
  5250  07D6  01A5               	clrf	___lwmod@counter^(0+128)
  5251  07D7  0AA5               	incf	___lwmod@counter^(0+128),f
  5252  07D8                     l3604:	
  5253  07D8  1BA1               	btfsc	(___lwmod@divisor+1)^(0+128),7
  5254  07D9  2FE4               	goto	l3606
  5255  07DA  3001               	movlw	1
  5256  07DB                     u4475:	
  5257  07DB  35A0               	lslf	___lwmod@divisor^(0+128),f
  5258  07DC  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  5259  07DD  0B89               	decfsz	9,f
  5260  07DE  2FDB               	goto	u4475
  5261  07DF  3001               	movlw	1
  5262  07E0  00A4               	movwf	??___lwmod^(0+128)
  5263  07E1  0824               	movf	??___lwmod^(0+128),w
  5264  07E2  07A5               	addwf	___lwmod@counter^(0+128),f
  5265  07E3  2FD8               	goto	l3604
  5266  07E4                     l3606:	
  5267  07E4  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5268  07E5  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  5269  07E6  1D03               	skipz
  5270  07E7  2FEA               	goto	u4495
  5271  07E8  0820               	movf	___lwmod@divisor^(0+128),w
  5272  07E9  0222               	subwf	___lwmod@dividend^(0+128),w
  5273  07EA                     u4495:	
  5274  07EA  1C03               	skipc
  5275  07EB  2FF0               	goto	l3610
  5276  07EC  0820               	movf	___lwmod@divisor^(0+128),w
  5277  07ED  02A2               	subwf	___lwmod@dividend^(0+128),f
  5278  07EE  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5279  07EF  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
  5280  07F0                     l3610:	
  5281  07F0  3001               	movlw	1
  5282  07F1                     u4505:	
  5283  07F1  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
  5284  07F2  0CA0               	rrf	___lwmod@divisor^(0+128),f
  5285  07F3  0B89               	decfsz	9,f
  5286  07F4  2FF1               	goto	u4505
  5287  07F5  3001               	movlw	1
  5288  07F6  02A5               	subwf	___lwmod@counter^(0+128),f
  5289  07F7  1D03               	btfss	3,2
  5290  07F8  2FE4               	goto	l3606
  5291  07F9                     l3614:	
  5292  07F9  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  5293  07FA  01A1               	clrf	(?___lwmod+1)^(0+128)
  5294  07FB  07A1               	addwf	(?___lwmod+1)^(0+128),f
  5295  07FC  0822               	movf	___lwmod@dividend^(0+128),w
  5296  07FD  01A0               	clrf	?___lwmod^(0+128)
  5297  07FE  07A0               	addwf	?___lwmod^(0+128),f
  5298  07FF  0008               	return
  5299  0800                     __end_of___lwmod:	
  5300                           
  5301                           	psect	text11
  5302  1A2B                     __ptext11:	
  5303 ;; *************** function ___lwdiv *****************
  5304 ;; Defined at:
  5305 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  divisor         2    6[BANK1 ] unsigned int 
  5308 ;;  dividend        2    8[BANK1 ] unsigned int 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  quotient        2   11[BANK1 ] unsigned int 
  5311 ;;  counter         1   13[BANK1 ] unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  2    6[BANK1 ] unsigned int 
  5314 ;; Registers used:
  5315 ;;		wreg, status,2, status,0
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5321 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5324 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;Total ram usage:        8 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:    3
  5328 ;; This function calls:
  5329 ;;		Nothing
  5330 ;; This function is called by:
  5331 ;;		_disp_hex_window1
  5332 ;;		_disp_hex_window2
  5333 ;;		_main
  5334 ;;		_disp_hex_window11
  5335 ;;		_disp_hex_window22
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           
  5340                           ;psect for function ___lwdiv
  5341  1A2B                     ___lwdiv:	
  5342                           
  5343                           ;incstack = 0
  5344                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5345  1A2B  0021               	movlb	1	; select bank1
  5346  1A2C  01AB               	clrf	___lwdiv@quotient^(0+128)
  5347  1A2D  01AC               	clrf	(___lwdiv@quotient+1)^(0+128)
  5348  1A2E  0827               	movf	(___lwdiv@divisor+1)^(0+128),w
  5349  1A2F  0426               	iorwf	___lwdiv@divisor^(0+128),w
  5350  1A30  1903               	skipnz
  5351  1A31  2A5B               	goto	l3592
  5352  1A32  01AD               	clrf	___lwdiv@counter^(0+128)
  5353  1A33  0AAD               	incf	___lwdiv@counter^(0+128),f
  5354  1A34                     l3580:	
  5355  1A34  1BA7               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  5356  1A35  2A40               	goto	l3582
  5357  1A36  3001               	movlw	1
  5358  1A37                     u4405:	
  5359  1A37  35A6               	lslf	___lwdiv@divisor^(0+128),f
  5360  1A38  0DA7               	rlf	(___lwdiv@divisor+1)^(0+128),f
  5361  1A39  0B89               	decfsz	9,f
  5362  1A3A  2A37               	goto	u4405
  5363  1A3B  3001               	movlw	1
  5364  1A3C  00AA               	movwf	??___lwdiv^(0+128)
  5365  1A3D  082A               	movf	??___lwdiv^(0+128),w
  5366  1A3E  07AD               	addwf	___lwdiv@counter^(0+128),f
  5367  1A3F  2A34               	goto	l3580
  5368  1A40                     l3582:	
  5369  1A40  3001               	movlw	1
  5370  1A41                     u4425:	
  5371  1A41  35AB               	lslf	___lwdiv@quotient^(0+128),f
  5372  1A42  0DAC               	rlf	(___lwdiv@quotient+1)^(0+128),f
  5373  1A43  0B89               	decfsz	9,f
  5374  1A44  2A41               	goto	u4425
  5375  1A45  0827               	movf	(___lwdiv@divisor+1)^(0+128),w
  5376  1A46  0229               	subwf	(___lwdiv@dividend+1)^(0+128),w
  5377  1A47  1D03               	skipz
  5378  1A48  2A4B               	goto	u4435
  5379  1A49  0826               	movf	___lwdiv@divisor^(0+128),w
  5380  1A4A  0228               	subwf	___lwdiv@dividend^(0+128),w
  5381  1A4B                     u4435:	
  5382  1A4B  1C03               	skipc
  5383  1A4C  2A52               	goto	l3588
  5384  1A4D  0826               	movf	___lwdiv@divisor^(0+128),w
  5385  1A4E  02A8               	subwf	___lwdiv@dividend^(0+128),f
  5386  1A4F  0827               	movf	(___lwdiv@divisor+1)^(0+128),w
  5387  1A50  3BA9               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  5388  1A51  142B               	bsf	___lwdiv@quotient^(0+128),0
  5389  1A52                     l3588:	
  5390  1A52  3001               	movlw	1
  5391  1A53                     u4445:	
  5392  1A53  36A7               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  5393  1A54  0CA6               	rrf	___lwdiv@divisor^(0+128),f
  5394  1A55  0B89               	decfsz	9,f
  5395  1A56  2A53               	goto	u4445
  5396  1A57  3001               	movlw	1
  5397  1A58  02AD               	subwf	___lwdiv@counter^(0+128),f
  5398  1A59  1D03               	btfss	3,2
  5399  1A5A  2A40               	goto	l3582
  5400  1A5B                     l3592:	
  5401  1A5B  082C               	movf	(___lwdiv@quotient+1)^(0+128),w
  5402  1A5C  01A7               	clrf	(?___lwdiv+1)^(0+128)
  5403  1A5D  07A7               	addwf	(?___lwdiv+1)^(0+128),f
  5404  1A5E  082B               	movf	___lwdiv@quotient^(0+128),w
  5405  1A5F  01A6               	clrf	?___lwdiv^(0+128)
  5406  1A60  07A6               	addwf	?___lwdiv^(0+128),f
  5407  1A61  0008               	return
  5408  1A62                     __end_of___lwdiv:	
  5409                           
  5410                           	psect	text12
  5411  1000                     __ptext12:	
  5412 ;; *************** function _capture_init *****************
  5413 ;; Defined at:
  5414 ;;		line 1240 in file "main.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;		None
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;		None               void
  5421 ;; Registers used:
  5422 ;;		wreg, status,2, status,0
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5432 ;;Total ram usage:        0 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:    3
  5435 ;; This function calls:
  5436 ;;		Nothing
  5437 ;; This function is called by:
  5438 ;;		_main
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           
  5443                           ;psect for function _capture_init
  5444  1000                     _capture_init:	
  5445                           
  5446                           ;main.c: 1242: TRISCbits.TRISC1 =1;
  5447                           
  5448                           ;incstack = 0
  5449                           ; Regs used in _capture_init: [wreg+status,2+status,0]
  5450  1000  0021               	movlb	1	; select bank1
  5451  1001  148E               	bsf	14,1	;volatile
  5452                           
  5453                           ;main.c: 1244: PIE2bits.CCP2IE = 1;
  5454  1002  1412               	bsf	18,0	;volatile
  5455                           
  5456                           ;main.c: 1245: CCP2CONbits.CCP2M=0x05;
  5457  1003  0025               	movlb	5	; select bank5
  5458  1004  081A               	movf	26,w	;volatile
  5459  1005  39F0               	andlw	-16
  5460  1006  3805               	iorlw	5
  5461  1007  009A               	movwf	26	;volatile
  5462                           
  5463                           ;main.c: 1246: TMR1H = 0x00;
  5464  1008  0020               	movlb	0	; select bank0
  5465  1009  0197               	clrf	23	;volatile
  5466                           
  5467                           ;main.c: 1247: TMR1L = 0x00;
  5468  100A  0196               	clrf	22	;volatile
  5469                           
  5470                           ;main.c: 1248: PIR1 = 0x00;
  5471  100B  0191               	clrf	17	;volatile
  5472                           
  5473                           ;main.c: 1250: T1CON = 0x21;
  5474  100C  3021               	movlw	33
  5475  100D  0098               	movwf	24	;volatile
  5476                           
  5477                           ;main.c: 1251: INTCONbits.GIE = 1;
  5478  100E  178B               	bsf	11,7	;volatile
  5479                           
  5480                           ;main.c: 1252: INTCONbits.PEIE = 1;
  5481  100F  170B               	bsf	11,6	;volatile
  5482  1010  0008               	return
  5483  1011                     __end_of_capture_init:	
  5484                           
  5485                           	psect	text13
  5486  13B8                     __ptext13:	
  5487 ;; *************** function _Wirespeed *****************
  5488 ;; Defined at:
  5489 ;;		line 1219 in file "main.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  wireSpeed       2   51[BANK1 ] unsigned int 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  iFreq           2   53[BANK1 ] unsigned int 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  2   51[BANK1 ] unsigned int 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0, pclath, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5503 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5504 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5506 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;Total ram usage:        4 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    5
  5510 ;; This function calls:
  5511 ;;		___ftmul
  5512 ;;		___fttol
  5513 ;;		___lwtoft
  5514 ;; This function is called by:
  5515 ;;		_main
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           
  5520                           ;psect for function _Wirespeed
  5521  13B8                     _Wirespeed:	
  5522                           
  5523                           ;main.c: 1221: unsigned iFreq;
  5524                           ;main.c: 1222: if((wireSpeed >= 20)&&(wireSpeed <= 29))
  5525                           
  5526                           ;incstack = 0
  5527                           ; Regs used in _Wirespeed: [wreg+status,2+status,0+pclath+cstack]
  5528  13B8  3000               	movlw	0
  5529  13B9  0021               	movlb	1	; select bank1
  5530  13BA  0254               	subwf	(Wirespeed@wireSpeed+1)^(0+128),w
  5531  13BB  3014               	movlw	20
  5532  13BC  1903               	skipnz
  5533  13BD  0253               	subwf	Wirespeed@wireSpeed^(0+128),w
  5534  13BE  1C03               	skipc
  5535  13BF  2BC7               	goto	l4662
  5536  13C0  3000               	movlw	0
  5537  13C1  0254               	subwf	(Wirespeed@wireSpeed+1)^(0+128),w
  5538  13C2  301E               	movlw	30
  5539  13C3  1903               	skipnz
  5540  13C4  0253               	subwf	Wirespeed@wireSpeed^(0+128),w
  5541  13C5  1C03               	btfss	3,0
  5542  13C6  2C19               	goto	L15
  5543  13C7                     l4662:	
  5544                           ;main.c: 1223: iFreq=wireSpeed*3.1;
  5545                           
  5546                           
  5547                           ;main.c: 1224: else if((wireSpeed >= 30)&&(wireSpeed <= 39))
  5548  13C7  3000               	movlw	0
  5549  13C8  0254               	subwf	(Wirespeed@wireSpeed+1)^(0+128),w
  5550  13C9  301E               	movlw	30
  5551  13CA  1903               	skipnz
  5552  13CB  0253               	subwf	Wirespeed@wireSpeed^(0+128),w
  5553  13CC  1C03               	skipc
  5554  13CD  2BE9               	goto	l4668
  5555  13CE  3000               	movlw	0
  5556  13CF  0254               	subwf	(Wirespeed@wireSpeed+1)^(0+128),w
  5557  13D0  3028               	movlw	40
  5558  13D1  1903               	skipnz
  5559  13D2  0253               	subwf	Wirespeed@wireSpeed^(0+128),w
  5560  13D3  1803               	skipnc
  5561  13D4  2BE9               	goto	l4668
  5562                           
  5563                           ;main.c: 1225: iFreq=wireSpeed*3.0;
  5564  13D5  0854               	movf	(Wirespeed@wireSpeed+1)^(0+128),w
  5565  13D6  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  5566  13D7  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  5567  13D8  0853               	movf	Wirespeed@wireSpeed^(0+128),w
  5568  13D9  01A8               	clrf	___lwtoft@c^(0+128)
  5569  13DA  07A8               	addwf	___lwtoft@c^(0+128),f
  5570  13DB  3199  211A  3193   	fcall	___lwtoft
  5571  13DE  0021               	movlb	1	; select bank1
  5572  13DF  0828               	movf	?___lwtoft^(0+128),w
  5573  13E0  00B8               	movwf	___ftmul@f2^(0+128)
  5574  13E1  0829               	movf	(?___lwtoft+1)^(0+128),w
  5575  13E2  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  5576  13E3  082A               	movf	(?___lwtoft+2)^(0+128),w
  5577  13E4  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  5578  13E5  3000               	movlw	0
  5579  13E6  00B5               	movwf	___ftmul@f1^(0+128)
  5580  13E7  3040               	movlw	64
  5581  13E8  2C70               	goto	L13
  5582  13E9                     l4668:	
  5583                           
  5584                           ;main.c: 1226: else if((wireSpeed >= 40)&&(wireSpeed <= 59))
  5585  13E9  3000               	movlw	0
  5586  13EA  0254               	subwf	(Wirespeed@wireSpeed+1)^(0+128),w
  5587  13EB  3028               	movlw	40
  5588  13EC  1903               	skipnz
  5589  13ED  0253               	subwf	Wirespeed@wireSpeed^(0+128),w
  5590  13EE  1C03               	skipc
  5591  13EF  2C0B               	goto	l4674
  5592  13F0  3000               	movlw	0
  5593  13F1  0254               	subwf	(Wirespeed@wireSpeed+1)^(0+128),w
  5594  13F2  303C               	movlw	60
  5595  13F3  1903               	skipnz
  5596  13F4  0253               	subwf	Wirespeed@wireSpeed^(0+128),w
  5597  13F5  1803               	skipnc
  5598  13F6  2C0B               	goto	l4674
  5599                           
  5600                           ;main.c: 1227: iFreq=wireSpeed*2.8;
  5601  13F7  0854               	movf	(Wirespeed@wireSpeed+1)^(0+128),w
  5602  13F8  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  5603  13F9  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  5604  13FA  0853               	movf	Wirespeed@wireSpeed^(0+128),w
  5605  13FB  01A8               	clrf	___lwtoft@c^(0+128)
  5606  13FC  07A8               	addwf	___lwtoft@c^(0+128),f
  5607  13FD  3199  211A  3193   	fcall	___lwtoft
  5608  1400  0021               	movlb	1	; select bank1
  5609  1401  0828               	movf	?___lwtoft^(0+128),w
  5610  1402  00B8               	movwf	___ftmul@f2^(0+128)
  5611  1403  0829               	movf	(?___lwtoft+1)^(0+128),w
  5612  1404  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  5613  1405  082A               	movf	(?___lwtoft+2)^(0+128),w
  5614  1406  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  5615  1407  3033               	movlw	51
  5616  1408  00B5               	movwf	___ftmul@f1^(0+128)
  5617  1409  3033               	movlw	51
  5618  140A  2C70               	goto	L13
  5619  140B                     l4674:	
  5620                           
  5621                           ;main.c: 1228: else if((wireSpeed >= 60)&&(wireSpeed <= 110))
  5622  140B  3000               	movlw	0
  5623  140C  0254               	subwf	(Wirespeed@wireSpeed+1)^(0+128),w
  5624  140D  303C               	movlw	60
  5625  140E  1903               	skipnz
  5626  140F  0253               	subwf	Wirespeed@wireSpeed^(0+128),w
  5627  1410  1C03               	skipc
  5628  1411  2C2D               	goto	l4680
  5629  1412  3000               	movlw	0
  5630  1413  0254               	subwf	(Wirespeed@wireSpeed+1)^(0+128),w
  5631  1414  306F               	movlw	111
  5632  1415  1903               	skipnz
  5633  1416  0253               	subwf	Wirespeed@wireSpeed^(0+128),w
  5634  1417  1803               	skipnc
  5635  1418  2C2D               	goto	l4680
  5636  1419                     L15:	
  5637                           
  5638                           ;main.c: 1229: iFreq=wireSpeed*3.1;
  5639  1419  0854               	movf	(Wirespeed@wireSpeed+1)^(0+128),w
  5640  141A  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  5641  141B  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  5642  141C  0853               	movf	Wirespeed@wireSpeed^(0+128),w
  5643  141D  01A8               	clrf	___lwtoft@c^(0+128)
  5644  141E  07A8               	addwf	___lwtoft@c^(0+128),f
  5645  141F  3199  211A  3193   	fcall	___lwtoft
  5646  1422  0021               	movlb	1	; select bank1
  5647  1423  0828               	movf	?___lwtoft^(0+128),w
  5648  1424  00B8               	movwf	___ftmul@f2^(0+128)
  5649  1425  0829               	movf	(?___lwtoft+1)^(0+128),w
  5650  1426  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  5651  1427  082A               	movf	(?___lwtoft+2)^(0+128),w
  5652  1428  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  5653  1429  3066               	movlw	102
  5654  142A  00B5               	movwf	___ftmul@f1^(0+128)
  5655  142B  3046               	movlw	70
  5656  142C  2C70               	goto	L13
  5657  142D                     l4680:	
  5658                           
  5659                           ;main.c: 1230: else if((wireSpeed >= 111)&&(wireSpeed <= 119))
  5660  142D  3000               	movlw	0
  5661  142E  0254               	subwf	(Wirespeed@wireSpeed+1)^(0+128),w
  5662  142F  306F               	movlw	111
  5663  1430  1903               	skipnz
  5664  1431  0253               	subwf	Wirespeed@wireSpeed^(0+128),w
  5665  1432  1C03               	skipc
  5666  1433  2C4F               	goto	l4686
  5667  1434  3000               	movlw	0
  5668  1435  0254               	subwf	(Wirespeed@wireSpeed+1)^(0+128),w
  5669  1436  3078               	movlw	120
  5670  1437  1903               	skipnz
  5671  1438  0253               	subwf	Wirespeed@wireSpeed^(0+128),w
  5672  1439  1803               	skipnc
  5673  143A  2C4F               	goto	l4686
  5674                           
  5675                           ;main.c: 1231: iFreq=wireSpeed*3.2;
  5676  143B  0854               	movf	(Wirespeed@wireSpeed+1)^(0+128),w
  5677  143C  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  5678  143D  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  5679  143E  0853               	movf	Wirespeed@wireSpeed^(0+128),w
  5680  143F  01A8               	clrf	___lwtoft@c^(0+128)
  5681  1440  07A8               	addwf	___lwtoft@c^(0+128),f
  5682  1441  3199  211A  3193   	fcall	___lwtoft
  5683  1444  0021               	movlb	1	; select bank1
  5684  1445  0828               	movf	?___lwtoft^(0+128),w
  5685  1446  00B8               	movwf	___ftmul@f2^(0+128)
  5686  1447  0829               	movf	(?___lwtoft+1)^(0+128),w
  5687  1448  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  5688  1449  082A               	movf	(?___lwtoft+2)^(0+128),w
  5689  144A  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  5690  144B  30CD               	movlw	205
  5691  144C  00B5               	movwf	___ftmul@f1^(0+128)
  5692  144D  304C               	movlw	76
  5693  144E  2C70               	goto	L13
  5694  144F                     l4686:	
  5695                           
  5696                           ;main.c: 1232: else if((wireSpeed >= 120)&&(wireSpeed <= 220))
  5697  144F  3000               	movlw	0
  5698  1450  0254               	subwf	(Wirespeed@wireSpeed+1)^(0+128),w
  5699  1451  3078               	movlw	120
  5700  1452  1903               	skipnz
  5701  1453  0253               	subwf	Wirespeed@wireSpeed^(0+128),w
  5702  1454  1C03               	skipc
  5703  1455  2C86               	goto	l4692
  5704  1456  3000               	movlw	0
  5705  1457  0254               	subwf	(Wirespeed@wireSpeed+1)^(0+128),w
  5706  1458  30DD               	movlw	221
  5707  1459  1903               	skipnz
  5708  145A  0253               	subwf	Wirespeed@wireSpeed^(0+128),w
  5709  145B  1803               	skipnc
  5710  145C  2C86               	goto	l4692
  5711                           
  5712                           ;main.c: 1233: iFreq=wireSpeed*3.6;
  5713  145D  0854               	movf	(Wirespeed@wireSpeed+1)^(0+128),w
  5714  145E  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  5715  145F  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  5716  1460  0853               	movf	Wirespeed@wireSpeed^(0+128),w
  5717  1461  01A8               	clrf	___lwtoft@c^(0+128)
  5718  1462  07A8               	addwf	___lwtoft@c^(0+128),f
  5719  1463  3199  211A  3193   	fcall	___lwtoft
  5720  1466  0021               	movlb	1	; select bank1
  5721  1467  0828               	movf	?___lwtoft^(0+128),w
  5722  1468  00B8               	movwf	___ftmul@f2^(0+128)
  5723  1469  0829               	movf	(?___lwtoft+1)^(0+128),w
  5724  146A  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  5725  146B  082A               	movf	(?___lwtoft+2)^(0+128),w
  5726  146C  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  5727  146D  3066               	movlw	102
  5728  146E  00B5               	movwf	___ftmul@f1^(0+128)
  5729  146F  3066               	movlw	102
  5730  1470                     L13:	
  5731  1470  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  5732  1471  3040               	movlw	64
  5733  1472  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  5734  1473  3193  2304  3193   	fcall	___ftmul
  5735  1476  0021               	movlb	1	; select bank1
  5736  1477  0835               	movf	?___ftmul^(0+128),w
  5737  1478  00C5               	movwf	___fttol@f1^(0+128)
  5738  1479  0836               	movf	(?___ftmul+1)^(0+128),w
  5739  147A  00C6               	movwf	(___fttol@f1+1)^(0+128)
  5740  147B  0837               	movf	(?___ftmul+2)^(0+128),w
  5741  147C  00C7               	movwf	(___fttol@f1+2)^(0+128)
  5742  147D  3190  2077         	fcall	___fttol
  5743  147F  0021               	movlb	1	; select bank1
  5744  1480  0846               	movf	(?___fttol^(0+128)+1),w
  5745  1481  01D6               	clrf	(Wirespeed@iFreq+1)^(0+128)
  5746  1482  07D6               	addwf	(Wirespeed@iFreq+1)^(0+128),f
  5747  1483  0845               	movf	?___fttol^(0+128),w
  5748  1484  01D5               	clrf	Wirespeed@iFreq^(0+128)
  5749  1485  07D5               	addwf	Wirespeed@iFreq^(0+128),f
  5750  1486                     l4692:	
  5751                           
  5752                           ;main.c: 1237: return(iFreq);
  5753  1486  0856               	movf	(Wirespeed@iFreq+1)^(0+128),w
  5754  1487  01D4               	clrf	(?_Wirespeed+1)^(0+128)
  5755  1488  07D4               	addwf	(?_Wirespeed+1)^(0+128),f
  5756  1489  0855               	movf	Wirespeed@iFreq^(0+128),w
  5757  148A  01D3               	clrf	?_Wirespeed^(0+128)
  5758  148B  07D3               	addwf	?_Wirespeed^(0+128),f
  5759  148C  0008               	return
  5760  148D                     __end_of_Wirespeed:	
  5761                           
  5762                           	psect	text14
  5763  191A                     __ptext14:	
  5764 ;; *************** function ___lwtoft *****************
  5765 ;; Defined at:
  5766 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  c               2    8[BANK1 ] unsigned int 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  3    8[BANK1 ] float 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0, pclath, cstack
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5780 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5782 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5783 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;Total ram usage:        4 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    4
  5787 ;; This function calls:
  5788 ;;		___ftpack
  5789 ;; This function is called by:
  5790 ;;		_main
  5791 ;;		_Wirespeed
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           
  5796                           ;psect for function ___lwtoft
  5797  191A                     ___lwtoft:	
  5798                           
  5799                           ;incstack = 0
  5800                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5801  191A  0021               	movlb	1	; select bank1
  5802  191B  0828               	movf	___lwtoft@c^(0+128),w
  5803  191C  00A0               	movwf	___ftpack@arg^(0+128)
  5804  191D  0829               	movf	(___lwtoft@c+1)^(0+128),w
  5805  191E  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  5806  191F  01A2               	clrf	(___ftpack@arg+2)^(0+128)
  5807  1920  308E               	movlw	142
  5808  1921  00AB               	movwf	??___lwtoft^(0+128)
  5809  1922  082B               	movf	??___lwtoft^(0+128),w
  5810  1923  00A3               	movwf	___ftpack@exp^(0+128)
  5811  1924  01A4               	clrf	___ftpack@sign^(0+128)
  5812  1925  319C  24B3         	fcall	___ftpack
  5813  1927  0021               	movlb	1	; select bank1
  5814  1928  0820               	movf	?___ftpack^(0+128),w
  5815  1929  00A8               	movwf	?___lwtoft^(0+128)
  5816  192A  0821               	movf	(?___ftpack+1)^(0+128),w
  5817  192B  00A9               	movwf	(?___lwtoft+1)^(0+128)
  5818  192C  0822               	movf	(?___ftpack+2)^(0+128),w
  5819  192D  00AA               	movwf	(?___lwtoft+2)^(0+128)
  5820  192E  0008               	return
  5821  192F                     __end_of___lwtoft:	
  5822                           
  5823                           	psect	text15
  5824  18E3                     __ptext15:	
  5825 ;; *************** function _Timer0_init *****************
  5826 ;; Defined at:
  5827 ;;		line 1178 in file "main.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;		None
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;		None
  5832 ;; Return value:  Size  Location     Type
  5833 ;;		None               void
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;Total ram usage:        0 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    3
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_main
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           
  5856                           ;psect for function _Timer0_init
  5857  18E3                     _Timer0_init:	
  5858                           
  5859                           ;main.c: 1180: TMR0=0;
  5860                           
  5861                           ;incstack = 0
  5862                           ; Regs used in _Timer0_init: [wreg+status,2+status,0]
  5863  18E3  0020               	movlb	0	; select bank0
  5864  18E4  0195               	clrf	21	;volatile
  5865                           
  5866                           ;main.c: 1181: OPTION_REGbits.PSA=0;
  5867  18E5  0021               	movlb	1	; select bank1
  5868  18E6  1195               	bcf	21,3	;volatile
  5869                           
  5870                           ;main.c: 1182: OPTION_REGbits.T0CS=0;
  5871  18E7  1295               	bcf	21,5	;volatile
  5872                           
  5873                           ;main.c: 1183: OPTION_REGbits.PS=5;
  5874  18E8  0815               	movf	21,w	;volatile
  5875  18E9  39F8               	andlw	-8
  5876  18EA  3805               	iorlw	5
  5877  18EB  0095               	movwf	21	;volatile
  5878                           
  5879                           ;main.c: 1184: INTCONbits.GIE=0;
  5880  18EC  138B               	bcf	11,7	;volatile
  5881                           
  5882                           ;main.c: 1185: INTCONbits.PEIE=0;
  5883  18ED  130B               	bcf	11,6	;volatile
  5884                           
  5885                           ;main.c: 1186: INTCONbits.T0IF=0;
  5886  18EE  110B               	bcf	11,2	;volatile
  5887                           
  5888                           ;main.c: 1192: TMR0=0x85;
  5889  18EF  3085               	movlw	133
  5890  18F0  0020               	movlb	0	; select bank0
  5891  18F1  0095               	movwf	21	;volatile
  5892                           
  5893                           ;main.c: 1193: INTCONbits.T0IE=1;
  5894  18F2  168B               	bsf	11,5	;volatile
  5895  18F3  0008               	return
  5896  18F4                     __end_of_Timer0_init:	
  5897                           
  5898                           	psect	text16
  5899  1D78                     __ptext16:	
  5900 ;; *************** function _SCANENCODER2 *****************
  5901 ;; Defined at:
  5902 ;;		line 94 in file "ENCODER.C"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;		None
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  result          1    6[BANK1 ] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      unsigned char 
  5909 ;; Registers used:
  5910 ;;		wreg, status,2, status,0, pclath, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;Total ram usage:        2 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    4
  5923 ;; This function calls:
  5924 ;;		_enc2_port
  5925 ;; This function is called by:
  5926 ;;		_main
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           
  5931                           ;psect for function _SCANENCODER2
  5932  1D78                     _SCANENCODER2:	
  5933                           
  5934                           ;ENCODER.C: 96: unsigned char result=0;
  5935                           
  5936                           ;incstack = 0
  5937                           ; Regs used in _SCANENCODER2: [wreg+status,2+status,0+pclath+cstack]
  5938  1D78  0021               	movlb	1	; select bank1
  5939  1D79  01A6               	clrf	SCANENCODER2@result^(0+128)
  5940                           
  5941                           ;ENCODER.C: 97: if(enc2_port() == 1)
  5942  1D7A  319B  2337  319D   	fcall	_enc2_port
  5943  1D7D  3A01               	xorlw	1
  5944  1D7E  1D03               	skipz
  5945  1D7F  2DF3               	goto	l4358
  5946                           
  5947                           ;ENCODER.C: 98: {
  5948                           ;ENCODER.C: 99: if(firstpulse2==0 && secondpulse2==0)
  5949  1D80  0022               	movlb	2	; select bank2
  5950  1D81  08BF               	movf	_firstpulse2^(0+256),f
  5951  1D82  1D03               	skipz
  5952  1D83  2DA5               	goto	l4320
  5953  1D84  08D6               	movf	_secondpulse2^(0+256),f
  5954  1D85  1D03               	skipz
  5955  1D86  2DA5               	goto	l4320
  5956                           
  5957                           ;ENCODER.C: 100: {
  5958                           ;ENCODER.C: 101: if(new2==0x02)
  5959  1D87  3002               	movlw	2
  5960  1D88  0020               	movlb	0	; select bank0
  5961  1D89  0656               	xorwf	_new2,w
  5962  1D8A  0457               	iorwf	_new2+1,w
  5963  1D8B  1D03               	skipz
  5964  1D8C  2D98               	goto	l4310
  5965                           
  5966                           ;ENCODER.C: 102: {
  5967                           ;ENCODER.C: 103: firstpulse2=1;
  5968  1D8D  0022               	movlb	2	; select bank2
  5969  1D8E  01BF               	clrf	_firstpulse2^(0+256)
  5970  1D8F  0ABF               	incf	_firstpulse2^(0+256),f
  5971                           
  5972                           ;ENCODER.C: 104: secondpulse2=0;
  5973  1D90  01D6               	clrf	_secondpulse2^(0+256)
  5974                           
  5975                           ;ENCODER.C: 105: plus222=1;
  5976  1D91  01CD               	clrf	_plus222^(0+256)
  5977  1D92  0ACD               	incf	_plus222^(0+256),f
  5978                           
  5979                           ;ENCODER.C: 106: result='$';
  5980  1D93  3024               	movlw	36
  5981  1D94  0021               	movlb	1	; select bank1
  5982  1D95  00A5               	movwf	??_SCANENCODER2^(0+128)
  5983  1D96  0825               	movf	??_SCANENCODER2^(0+128),w
  5984  1D97  00A6               	movwf	SCANENCODER2@result^(0+128)
  5985  1D98                     l4310:	
  5986                           
  5987                           ;ENCODER.C: 107: }
  5988                           ;ENCODER.C: 108: if(new2==0x01)
  5989  1D98  3001               	movlw	1
  5990  1D99  0020               	movlb	0	; select bank0
  5991  1D9A  0656               	xorwf	_new2,w
  5992  1D9B  0457               	iorwf	_new2+1,w
  5993  1D9C  1D03               	skipz
  5994  1D9D  2DF3               	goto	l4358
  5995                           
  5996                           ;ENCODER.C: 109: {
  5997                           ;ENCODER.C: 110: firstpulse2=1;
  5998  1D9E  0022               	movlb	2	; select bank2
  5999  1D9F  01BF               	clrf	_firstpulse2^(0+256)
  6000  1DA0  0ABF               	incf	_firstpulse2^(0+256),f
  6001                           
  6002                           ;ENCODER.C: 111: secondpulse2=0;
  6003  1DA1  01D6               	clrf	_secondpulse2^(0+256)
  6004                           
  6005                           ;ENCODER.C: 112: minus222=1;
  6006  1DA2  01C5               	clrf	_minus222^(0+256)
  6007  1DA3  0AC5               	incf	_minus222^(0+256),f
  6008  1DA4  2DEE               	goto	l4356
  6009  1DA5                     l4320:	
  6010                           ;ENCODER.C: 114: }
  6011                           ;ENCODER.C: 115: }
  6012                           
  6013                           ;ENCODER.C: 113: result='$';
  6014                           
  6015                           
  6016                           ;ENCODER.C: 116: else if(firstpulse2==1 && secondpulse2==0)
  6017  1DA5  0022               	movlb	2	; select bank2
  6018  1DA6  083F               	movf	_firstpulse2^(0+256),w
  6019  1DA7  3A01               	xorlw	1
  6020  1DA8  1D03               	skipz
  6021  1DA9  2DB9               	goto	l4330
  6022  1DAA  08D6               	movf	_secondpulse2^(0+256),f
  6023  1DAB  1D03               	skipz
  6024  1DAC  2DB9               	goto	l4330
  6025                           
  6026                           ;ENCODER.C: 117: {
  6027                           ;ENCODER.C: 118: if(new2==0x03)
  6028  1DAD  3003               	movlw	3
  6029  1DAE  0020               	movlb	0	; select bank0
  6030  1DAF  0656               	xorwf	_new2,w
  6031  1DB0  0457               	iorwf	_new2+1,w
  6032  1DB1  1D03               	skipz
  6033  1DB2  2DF3               	goto	l4358
  6034                           
  6035                           ;ENCODER.C: 119: {
  6036                           ;ENCODER.C: 120: firstpulse2=1;
  6037  1DB3  0022               	movlb	2	; select bank2
  6038  1DB4  01BF               	clrf	_firstpulse2^(0+256)
  6039  1DB5  0ABF               	incf	_firstpulse2^(0+256),f
  6040                           
  6041                           ;ENCODER.C: 121: secondpulse2=1;
  6042  1DB6  01D6               	clrf	_secondpulse2^(0+256)
  6043  1DB7  0AD6               	incf	_secondpulse2^(0+256),f
  6044  1DB8  2DEE               	goto	l4356
  6045  1DB9                     l4330:	
  6046                           ;ENCODER.C: 123: }
  6047                           ;ENCODER.C: 124: }
  6048                           
  6049                           ;ENCODER.C: 122: result='$';
  6050                           
  6051                           
  6052                           ;ENCODER.C: 125: else if(firstpulse2==1 && secondpulse2==1)
  6053  1DB9  0022               	movlb	2	; select bank2
  6054  1DBA  083F               	movf	_firstpulse2^(0+256),w
  6055  1DBB  3A01               	xorlw	1
  6056  1DBC  1D03               	skipz
  6057  1DBD  2DEA               	goto	l4354
  6058  1DBE  0856               	movf	_secondpulse2^(0+256),w
  6059  1DBF  3A01               	xorlw	1
  6060  1DC0  1D03               	skipz
  6061  1DC1  2DEA               	goto	l4354
  6062                           
  6063                           ;ENCODER.C: 126: {
  6064                           ;ENCODER.C: 127: if(new2==0x01 && plus222==1)
  6065  1DC2  3001               	movlw	1
  6066  1DC3  0020               	movlb	0	; select bank0
  6067  1DC4  0656               	xorwf	_new2,w
  6068  1DC5  0457               	iorwf	_new2+1,w
  6069  1DC6  1D03               	skipz
  6070  1DC7  2DD4               	goto	l4342
  6071  1DC8  0022               	movlb	2	; select bank2
  6072  1DC9  084D               	movf	_plus222^(0+256),w
  6073  1DCA  3A01               	xorlw	1
  6074  1DCB  1D03               	skipz
  6075  1DCC  2DD4               	goto	l4342
  6076                           
  6077                           ;ENCODER.C: 128: {
  6078                           ;ENCODER.C: 129: firstpulse2=0;
  6079  1DCD  01BF               	clrf	_firstpulse2^(0+256)
  6080                           
  6081                           ;ENCODER.C: 130: plus222=0;
  6082  1DCE  01CD               	clrf	_plus222^(0+256)
  6083                           
  6084                           ;ENCODER.C: 131: result='+';
  6085  1DCF  302B               	movlw	43
  6086  1DD0  0021               	movlb	1	; select bank1
  6087  1DD1  00A5               	movwf	??_SCANENCODER2^(0+128)
  6088  1DD2  0825               	movf	??_SCANENCODER2^(0+128),w
  6089  1DD3  00A6               	movwf	SCANENCODER2@result^(0+128)
  6090  1DD4                     l4342:	
  6091                           
  6092                           ;ENCODER.C: 132: }
  6093                           ;ENCODER.C: 133: if(new2==0x02 && minus222==1)
  6094  1DD4  3002               	movlw	2
  6095  1DD5  0020               	movlb	0	; select bank0
  6096  1DD6  0656               	xorwf	_new2,w
  6097  1DD7  0457               	iorwf	_new2+1,w
  6098  1DD8  1D03               	skipz
  6099  1DD9  2DE6               	goto	l4350
  6100  1DDA  0022               	movlb	2	; select bank2
  6101  1DDB  0845               	movf	_minus222^(0+256),w
  6102  1DDC  3A01               	xorlw	1
  6103  1DDD  1D03               	skipz
  6104  1DDE  2DE6               	goto	l4350
  6105                           
  6106                           ;ENCODER.C: 134: {
  6107                           ;ENCODER.C: 135: firstpulse2=0;
  6108  1DDF  01BF               	clrf	_firstpulse2^(0+256)
  6109                           
  6110                           ;ENCODER.C: 136: minus222=0;
  6111  1DE0  01C5               	clrf	_minus222^(0+256)
  6112                           
  6113                           ;ENCODER.C: 137: result='-';
  6114  1DE1  302D               	movlw	45
  6115  1DE2  0021               	movlb	1	; select bank1
  6116  1DE3  00A5               	movwf	??_SCANENCODER2^(0+128)
  6117  1DE4  0825               	movf	??_SCANENCODER2^(0+128),w
  6118  1DE5  00A6               	movwf	SCANENCODER2@result^(0+128)
  6119  1DE6                     l4350:	
  6120                           
  6121                           ;ENCODER.C: 138: }
  6122                           ;ENCODER.C: 139: firstpulse2=0;
  6123  1DE6  0022               	movlb	2	; select bank2
  6124  1DE7  01BF               	clrf	_firstpulse2^(0+256)
  6125                           
  6126                           ;ENCODER.C: 140: secondpulse2=0;
  6127  1DE8  01D6               	clrf	_secondpulse2^(0+256)
  6128                           
  6129                           ;ENCODER.C: 141: }
  6130  1DE9  2DF3               	goto	l4358
  6131  1DEA                     l4354:	
  6132                           
  6133                           ;ENCODER.C: 142: else
  6134                           ;ENCODER.C: 143: {
  6135                           ;ENCODER.C: 144: plus222=0;
  6136  1DEA  01CD               	clrf	_plus222^(0+256)
  6137                           
  6138                           ;ENCODER.C: 145: minus222=0;
  6139  1DEB  01C5               	clrf	_minus222^(0+256)
  6140                           
  6141                           ;ENCODER.C: 146: firstpulse2=0;
  6142  1DEC  01BF               	clrf	_firstpulse2^(0+256)
  6143                           
  6144                           ;ENCODER.C: 147: secondpulse2=0;
  6145  1DED  01D6               	clrf	_secondpulse2^(0+256)
  6146  1DEE                     l4356:	
  6147                           
  6148                           ;ENCODER.C: 148: result='$';
  6149  1DEE  3024               	movlw	36
  6150  1DEF  0021               	movlb	1	; select bank1
  6151  1DF0  00A5               	movwf	??_SCANENCODER2^(0+128)
  6152  1DF1  0825               	movf	??_SCANENCODER2^(0+128),w
  6153  1DF2  00A6               	movwf	SCANENCODER2@result^(0+128)
  6154  1DF3                     l4358:	
  6155                           
  6156                           ;ENCODER.C: 149: }
  6157                           ;ENCODER.C: 150: }
  6158                           ;ENCODER.C: 151: return(result);
  6159  1DF3  0021               	movlb	1	; select bank1
  6160  1DF4  0826               	movf	SCANENCODER2@result^(0+128),w
  6161  1DF5  0008               	return
  6162  1DF6                     __end_of_SCANENCODER2:	
  6163                           
  6164                           	psect	text17
  6165  1B37                     __ptext17:	
  6166 ;; *************** function _enc2_port *****************
  6167 ;; Defined at:
  6168 ;;		line 154 in file "ENCODER.C"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;		None
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  portvalue       2    3[BANK1 ] unsigned int 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      unsigned char 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6183 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6184 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6185 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6186 ;;Total ram usage:        5 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    3
  6189 ;; This function calls:
  6190 ;;		Nothing
  6191 ;; This function is called by:
  6192 ;;		_SCANENCODER2
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           
  6197                           ;psect for function _enc2_port
  6198  1B37                     _enc2_port:	
  6199                           
  6200                           ;ENCODER.C: 156: unsigned int portvalue=0x0000;
  6201                           
  6202                           ;incstack = 0
  6203                           ; Regs used in _enc2_port: [wreg+status,2+status,0]
  6204  1B37  0021               	movlb	1	; select bank1
  6205  1B38  01A3               	clrf	enc2_port@portvalue^(0+128)
  6206  1B39  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6207                           
  6208                           ;ENCODER.C: 157: portvalue=0x0000;
  6209  1B3A  01A3               	clrf	enc2_port@portvalue^(0+128)
  6210  1B3B  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6211                           
  6212                           ;ENCODER.C: 158: portvalue=PORTAbits.RA2;
  6213  1B3C  0020               	movlb	0	; select bank0
  6214  1B3D  0C0C               	rrf	12,w	;volatile
  6215  1B3E  0C89               	rrf	9,f
  6216  1B3F  3901               	andlw	1
  6217  1B40  0021               	movlb	1	; select bank1
  6218  1B41  00A0               	movwf	??_enc2_port^(0+128)
  6219  1B42  01A1               	clrf	(??_enc2_port^(0+128)+1)
  6220  1B43  0820               	movf	??_enc2_port^(0+128),w
  6221  1B44  00A3               	movwf	enc2_port@portvalue^(0+128)
  6222  1B45  0821               	movf	(??_enc2_port+1)^(0+128),w
  6223  1B46  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6224                           
  6225                           ;ENCODER.C: 159: portvalue=portvalue<<1;
  6226  1B47  3523               	lslf	enc2_port@portvalue^(0+128),w
  6227  1B48  00A3               	movwf	enc2_port@portvalue^(0+128)
  6228  1B49  0D24               	rlf	(enc2_port@portvalue+1)^(0+128),w
  6229  1B4A  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6230                           
  6231                           ;ENCODER.C: 160: portvalue=portvalue|PORTAbits.RA1;
  6232  1B4B  0020               	movlb	0	; select bank0
  6233  1B4C  0C0C               	rrf	12,w	;volatile
  6234  1B4D  3901               	andlw	1
  6235  1B4E  0021               	movlb	1	; select bank1
  6236  1B4F  00A0               	movwf	??_enc2_port^(0+128)
  6237  1B50  0823               	movf	enc2_port@portvalue^(0+128),w
  6238  1B51  0420               	iorwf	??_enc2_port^(0+128),w
  6239  1B52  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6240  1B53  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6241  1B54  00A2               	movwf	(??_enc2_port+2)^(0+128)
  6242  1B55  0821               	movf	(??_enc2_port+1)^(0+128),w
  6243  1B56  00A3               	movwf	enc2_port@portvalue^(0+128)
  6244  1B57  0822               	movf	(??_enc2_port+2)^(0+128),w
  6245  1B58  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6246                           
  6247                           ;ENCODER.C: 161: portvalue=(portvalue & 0X0003);
  6248  1B59  3003               	movlw	3
  6249  1B5A  0523               	andwf	enc2_port@portvalue^(0+128),w
  6250  1B5B  00A3               	movwf	enc2_port@portvalue^(0+128)
  6251  1B5C  3000               	movlw	0
  6252  1B5D  0524               	andwf	(enc2_port@portvalue+1)^(0+128),w
  6253  1B5E  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6254                           
  6255                           ;ENCODER.C: 162: new2=portvalue;
  6256  1B5F  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6257  1B60  0020               	movlb	0	; select bank0
  6258  1B61  01D7               	clrf	_new2+1
  6259  1B62  07D7               	addwf	_new2+1,f
  6260  1B63  0021               	movlb	1	; select bank1
  6261  1B64  0823               	movf	enc2_port@portvalue^(0+128),w
  6262  1B65  0020               	movlb	0	; select bank0
  6263  1B66  01D6               	clrf	_new2
  6264  1B67  07D6               	addwf	_new2,f
  6265                           
  6266                           ;ENCODER.C: 163: temp=new2;
  6267  1B68  0856               	movf	_new2,w
  6268  1B69  0021               	movlb	1	; select bank1
  6269  1B6A  00A0               	movwf	??_enc2_port^(0+128)
  6270  1B6B  0820               	movf	??_enc2_port^(0+128),w
  6271  1B6C  0020               	movlb	0	; select bank0
  6272  1B6D  00E7               	movwf	_temp
  6273                           
  6274                           ;ENCODER.C: 164: if((temp ^ old2) !=0)
  6275  1B6E  0023               	movlb	3	; select bank3
  6276  1B6F  083E               	movf	_old2^(0+384),w
  6277  1B70  0020               	movlb	0	; select bank0
  6278  1B71  0667               	xorwf	_temp,w
  6279  1B72  0021               	movlb	1	; select bank1
  6280  1B73  00A0               	movwf	??_enc2_port^(0+128)
  6281  1B74  0023               	movlb	3	; select bank3
  6282  1B75  083F               	movf	(_old2+1)^(0+384),w
  6283  1B76  0021               	movlb	1	; select bank1
  6284  1B77  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6285  1B78  0821               	movf	(??_enc2_port+1)^(0+128),w
  6286  1B79  0420               	iorwf	??_enc2_port^(0+128),w
  6287  1B7A  1903               	skipnz
  6288  1B7B  2B88               	goto	l3678
  6289                           
  6290                           ;ENCODER.C: 165: {
  6291                           ;ENCODER.C: 166: old2=new2;
  6292  1B7C  0020               	movlb	0	; select bank0
  6293  1B7D  0857               	movf	_new2+1,w
  6294  1B7E  0023               	movlb	3	; select bank3
  6295  1B7F  01BF               	clrf	(_old2+1)^(0+384)
  6296  1B80  07BF               	addwf	(_old2+1)^(0+384),f
  6297  1B81  0020               	movlb	0	; select bank0
  6298  1B82  0856               	movf	_new2,w
  6299  1B83  0023               	movlb	3	; select bank3
  6300  1B84  01BE               	clrf	_old2^(0+384)
  6301  1B85  07BE               	addwf	_old2^(0+384),f
  6302                           
  6303                           ;ENCODER.C: 167: return 1;
  6304  1B86  3001               	movlw	1
  6305                           
  6306                           ;ENCODER.C: 168: }
  6307  1B87  0008               	return
  6308  1B88                     l3678:	
  6309                           
  6310                           ;ENCODER.C: 169: else
  6311                           ;ENCODER.C: 170: {
  6312                           ;ENCODER.C: 171: old2=new2;
  6313  1B88  0020               	movlb	0	; select bank0
  6314  1B89  0857               	movf	_new2+1,w
  6315  1B8A  0023               	movlb	3	; select bank3
  6316  1B8B  01BF               	clrf	(_old2+1)^(0+384)
  6317  1B8C  07BF               	addwf	(_old2+1)^(0+384),f
  6318  1B8D  0020               	movlb	0	; select bank0
  6319  1B8E  0856               	movf	_new2,w
  6320  1B8F  0023               	movlb	3	; select bank3
  6321  1B90  01BE               	clrf	_old2^(0+384)
  6322  1B91  07BE               	addwf	_old2^(0+384),f
  6323                           
  6324                           ;ENCODER.C: 172: return 0;
  6325  1B92  3000               	movlw	0
  6326  1B93  0008               	return
  6327  1B94                     __end_of_enc2_port:	
  6328                           
  6329                           	psect	text18
  6330  1DF6                     __ptext18:	
  6331 ;; *************** function _SCANENCODER1 *****************
  6332 ;; Defined at:
  6333 ;;		line 12 in file "ENCODER.C"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;		None
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;  result          1    7[BANK1 ] unsigned char 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      unsigned char 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2, status,0, pclath, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6348 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6349 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6350 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;Total ram usage:        2 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    4
  6354 ;; This function calls:
  6355 ;;		_enc1_port
  6356 ;; This function is called by:
  6357 ;;		_main
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           
  6362                           ;psect for function _SCANENCODER1
  6363  1DF6                     _SCANENCODER1:	
  6364                           
  6365                           ;ENCODER.C: 14: unsigned char result=0;
  6366                           
  6367                           ;incstack = 0
  6368                           ; Regs used in _SCANENCODER1: [wreg+status,2+status,0+pclath+cstack]
  6369  1DF6  0021               	movlb	1	; select bank1
  6370  1DF7  01A7               	clrf	SCANENCODER1@result^(0+128)
  6371                           
  6372                           ;ENCODER.C: 15: if(enc1_port() == 1)
  6373  1DF8  319B  2394  319D   	fcall	_enc1_port
  6374  1DFB  3A01               	xorlw	1
  6375  1DFC  1D03               	skipz
  6376  1DFD  2E72               	goto	l4288
  6377                           
  6378                           ;ENCODER.C: 16: {
  6379                           ;ENCODER.C: 17: if(firstpulse1==0 && secondpulse1==0)
  6380  1DFE  0022               	movlb	2	; select bank2
  6381  1DFF  08BE               	movf	_firstpulse1^(0+256),f
  6382  1E00  1D03               	skipz
  6383  1E01  2E23               	goto	l4248
  6384  1E02  08D5               	movf	_secondpulse1^(0+256),f
  6385  1E03  1D03               	skipz
  6386  1E04  2E23               	goto	l4248
  6387                           
  6388                           ;ENCODER.C: 18: {
  6389                           ;ENCODER.C: 19: if(new1==0x02)
  6390  1E05  3002               	movlw	2
  6391  1E06  0020               	movlb	0	; select bank0
  6392  1E07  0654               	xorwf	_new1,w
  6393  1E08  0455               	iorwf	_new1+1,w
  6394  1E09  1D03               	skipz
  6395  1E0A  2E16               	goto	l4238
  6396                           
  6397                           ;ENCODER.C: 20: {
  6398                           ;ENCODER.C: 21: firstpulse1=1;
  6399  1E0B  0022               	movlb	2	; select bank2
  6400  1E0C  01BE               	clrf	_firstpulse1^(0+256)
  6401  1E0D  0ABE               	incf	_firstpulse1^(0+256),f
  6402                           
  6403                           ;ENCODER.C: 22: secondpulse1=0;
  6404  1E0E  01D5               	clrf	_secondpulse1^(0+256)
  6405                           
  6406                           ;ENCODER.C: 23: plus111=1;
  6407  1E0F  01CC               	clrf	_plus111^(0+256)
  6408  1E10  0ACC               	incf	_plus111^(0+256),f
  6409                           
  6410                           ;ENCODER.C: 24: result='$';
  6411  1E11  3024               	movlw	36
  6412  1E12  0021               	movlb	1	; select bank1
  6413  1E13  00A6               	movwf	??_SCANENCODER1^(0+128)
  6414  1E14  0826               	movf	??_SCANENCODER1^(0+128),w
  6415  1E15  00A7               	movwf	SCANENCODER1@result^(0+128)
  6416  1E16                     l4238:	
  6417                           
  6418                           ;ENCODER.C: 25: }
  6419                           ;ENCODER.C: 26: if(new1==0x01)
  6420  1E16  3001               	movlw	1
  6421  1E17  0020               	movlb	0	; select bank0
  6422  1E18  0654               	xorwf	_new1,w
  6423  1E19  0455               	iorwf	_new1+1,w
  6424  1E1A  1D03               	skipz
  6425  1E1B  2E72               	goto	l4288
  6426                           
  6427                           ;ENCODER.C: 27: {
  6428                           ;ENCODER.C: 28: firstpulse1=1;
  6429  1E1C  0022               	movlb	2	; select bank2
  6430  1E1D  01BE               	clrf	_firstpulse1^(0+256)
  6431  1E1E  0ABE               	incf	_firstpulse1^(0+256),f
  6432                           
  6433                           ;ENCODER.C: 29: secondpulse1=0;
  6434  1E1F  01D5               	clrf	_secondpulse1^(0+256)
  6435                           
  6436                           ;ENCODER.C: 30: minus111=1;
  6437  1E20  01C4               	clrf	_minus111^(0+256)
  6438  1E21  0AC4               	incf	_minus111^(0+256),f
  6439  1E22  2E6D               	goto	l4286
  6440  1E23                     l4248:	
  6441                           ;ENCODER.C: 32: }
  6442                           ;ENCODER.C: 33: }
  6443                           
  6444                           ;ENCODER.C: 31: result='$';
  6445                           
  6446                           
  6447                           ;ENCODER.C: 34: else if(firstpulse1==1 && secondpulse1==0)
  6448  1E23  0022               	movlb	2	; select bank2
  6449  1E24  083E               	movf	_firstpulse1^(0+256),w
  6450  1E25  3A01               	xorlw	1
  6451  1E26  1D03               	skipz
  6452  1E27  2E37               	goto	l4258
  6453  1E28  08D5               	movf	_secondpulse1^(0+256),f
  6454  1E29  1D03               	skipz
  6455  1E2A  2E37               	goto	l4258
  6456                           
  6457                           ;ENCODER.C: 35: {
  6458                           ;ENCODER.C: 36: if(new1==0x03)
  6459  1E2B  3003               	movlw	3
  6460  1E2C  0020               	movlb	0	; select bank0
  6461  1E2D  0654               	xorwf	_new1,w
  6462  1E2E  0455               	iorwf	_new1+1,w
  6463  1E2F  1D03               	skipz
  6464  1E30  2E72               	goto	l4288
  6465                           
  6466                           ;ENCODER.C: 37: {
  6467                           ;ENCODER.C: 38: firstpulse1=1;
  6468  1E31  0022               	movlb	2	; select bank2
  6469  1E32  01BE               	clrf	_firstpulse1^(0+256)
  6470  1E33  0ABE               	incf	_firstpulse1^(0+256),f
  6471                           
  6472                           ;ENCODER.C: 39: secondpulse1=1;
  6473  1E34  01D5               	clrf	_secondpulse1^(0+256)
  6474  1E35  0AD5               	incf	_secondpulse1^(0+256),f
  6475  1E36  2E6D               	goto	l4286
  6476  1E37                     l4258:	
  6477                           ;ENCODER.C: 41: }
  6478                           ;ENCODER.C: 42: }
  6479                           
  6480                           ;ENCODER.C: 40: result='$';
  6481                           
  6482                           
  6483                           ;ENCODER.C: 43: else if(firstpulse1==1 && secondpulse1==1)
  6484  1E37  0022               	movlb	2	; select bank2
  6485  1E38  083E               	movf	_firstpulse1^(0+256),w
  6486  1E39  3A01               	xorlw	1
  6487  1E3A  1D03               	skipz
  6488  1E3B  2E69               	goto	l4284
  6489  1E3C  0855               	movf	_secondpulse1^(0+256),w
  6490  1E3D  3A01               	xorlw	1
  6491  1E3E  1D03               	skipz
  6492  1E3F  2E69               	goto	l4284
  6493                           
  6494                           ;ENCODER.C: 44: {
  6495                           ;ENCODER.C: 45: if(new1==0x01 && plus111==1)
  6496  1E40  3001               	movlw	1
  6497  1E41  0020               	movlb	0	; select bank0
  6498  1E42  0654               	xorwf	_new1,w
  6499  1E43  0455               	iorwf	_new1+1,w
  6500  1E44  1D03               	skipz
  6501  1E45  2E53               	goto	l4272
  6502  1E46  0022               	movlb	2	; select bank2
  6503  1E47  084C               	movf	_plus111^(0+256),w
  6504  1E48  3A01               	xorlw	1
  6505  1E49  1D03               	skipz
  6506  1E4A  2E53               	goto	l4272
  6507                           
  6508                           ;ENCODER.C: 46: {
  6509                           ;ENCODER.C: 47: firstpulse1=1;
  6510  1E4B  01BE               	clrf	_firstpulse1^(0+256)
  6511  1E4C  0ABE               	incf	_firstpulse1^(0+256),f
  6512                           
  6513                           ;ENCODER.C: 48: plus111=0;
  6514  1E4D  01CC               	clrf	_plus111^(0+256)
  6515                           
  6516                           ;ENCODER.C: 49: result='+';
  6517  1E4E  302B               	movlw	43
  6518  1E4F  0021               	movlb	1	; select bank1
  6519  1E50  00A6               	movwf	??_SCANENCODER1^(0+128)
  6520  1E51  0826               	movf	??_SCANENCODER1^(0+128),w
  6521  1E52  00A7               	movwf	SCANENCODER1@result^(0+128)
  6522  1E53                     l4272:	
  6523                           
  6524                           ;ENCODER.C: 50: }
  6525                           ;ENCODER.C: 51: if(new1==0x02 && minus111==1)
  6526  1E53  3002               	movlw	2
  6527  1E54  0020               	movlb	0	; select bank0
  6528  1E55  0654               	xorwf	_new1,w
  6529  1E56  0455               	iorwf	_new1+1,w
  6530  1E57  1D03               	skipz
  6531  1E58  2E65               	goto	l4280
  6532  1E59  0022               	movlb	2	; select bank2
  6533  1E5A  0844               	movf	_minus111^(0+256),w
  6534  1E5B  3A01               	xorlw	1
  6535  1E5C  1D03               	skipz
  6536  1E5D  2E65               	goto	l4280
  6537                           
  6538                           ;ENCODER.C: 52: {
  6539                           ;ENCODER.C: 53: firstpulse1=0;
  6540  1E5E  01BE               	clrf	_firstpulse1^(0+256)
  6541                           
  6542                           ;ENCODER.C: 54: minus111=0;
  6543  1E5F  01C4               	clrf	_minus111^(0+256)
  6544                           
  6545                           ;ENCODER.C: 55: result='-';
  6546  1E60  302D               	movlw	45
  6547  1E61  0021               	movlb	1	; select bank1
  6548  1E62  00A6               	movwf	??_SCANENCODER1^(0+128)
  6549  1E63  0826               	movf	??_SCANENCODER1^(0+128),w
  6550  1E64  00A7               	movwf	SCANENCODER1@result^(0+128)
  6551  1E65                     l4280:	
  6552                           
  6553                           ;ENCODER.C: 56: }
  6554                           ;ENCODER.C: 57: firstpulse1=0;
  6555  1E65  0022               	movlb	2	; select bank2
  6556  1E66  01BE               	clrf	_firstpulse1^(0+256)
  6557                           
  6558                           ;ENCODER.C: 58: secondpulse1=0;
  6559  1E67  01D5               	clrf	_secondpulse1^(0+256)
  6560                           
  6561                           ;ENCODER.C: 59: }
  6562  1E68  2E72               	goto	l4288
  6563  1E69                     l4284:	
  6564                           
  6565                           ;ENCODER.C: 60: else
  6566                           ;ENCODER.C: 61: {
  6567                           ;ENCODER.C: 62: plus111=0;
  6568  1E69  01CC               	clrf	_plus111^(0+256)
  6569                           
  6570                           ;ENCODER.C: 63: minus111=0;
  6571  1E6A  01C4               	clrf	_minus111^(0+256)
  6572                           
  6573                           ;ENCODER.C: 64: firstpulse1=0;
  6574  1E6B  01BE               	clrf	_firstpulse1^(0+256)
  6575                           
  6576                           ;ENCODER.C: 65: secondpulse1=0;
  6577  1E6C  01D5               	clrf	_secondpulse1^(0+256)
  6578  1E6D                     l4286:	
  6579                           
  6580                           ;ENCODER.C: 66: result='$';
  6581  1E6D  3024               	movlw	36
  6582  1E6E  0021               	movlb	1	; select bank1
  6583  1E6F  00A6               	movwf	??_SCANENCODER1^(0+128)
  6584  1E70  0826               	movf	??_SCANENCODER1^(0+128),w
  6585  1E71  00A7               	movwf	SCANENCODER1@result^(0+128)
  6586  1E72                     l4288:	
  6587                           
  6588                           ;ENCODER.C: 67: }
  6589                           ;ENCODER.C: 68: }
  6590                           ;ENCODER.C: 69: return(result);
  6591  1E72  0021               	movlb	1	; select bank1
  6592  1E73  0827               	movf	SCANENCODER1@result^(0+128),w
  6593  1E74  0008               	return
  6594  1E75                     __end_of_SCANENCODER1:	
  6595                           
  6596                           	psect	text19
  6597  1B94                     __ptext19:	
  6598 ;; *************** function _enc1_port *****************
  6599 ;; Defined at:
  6600 ;;		line 72 in file "ENCODER.C"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;		None
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;  portvalue       2    4[BANK1 ] unsigned int 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  1    wreg      unsigned char 
  6607 ;; Registers used:
  6608 ;;		wreg, status,2, status,0
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6615 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;Total ram usage:        6 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:    3
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		_SCANENCODER1
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           
  6629                           ;psect for function _enc1_port
  6630  1B94                     _enc1_port:	
  6631                           
  6632                           ;ENCODER.C: 74: unsigned int portvalue=0x0000;
  6633                           
  6634                           ;incstack = 0
  6635                           ; Regs used in _enc1_port: [wreg+status,2+status,0]
  6636  1B94  0021               	movlb	1	; select bank1
  6637  1B95  01A4               	clrf	enc1_port@portvalue^(0+128)
  6638  1B96  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  6639                           
  6640                           ;ENCODER.C: 75: portvalue=0x0000;
  6641  1B97  01A4               	clrf	enc1_port@portvalue^(0+128)
  6642  1B98  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  6643                           
  6644                           ;ENCODER.C: 76: portvalue=PORTAbits.RA4;
  6645  1B99  0020               	movlb	0	; select bank0
  6646  1B9A  0E0C               	swapf	12,w	;volatile
  6647  1B9B  3901               	andlw	1
  6648  1B9C  0021               	movlb	1	; select bank1
  6649  1B9D  00A0               	movwf	??_enc1_port^(0+128)
  6650  1B9E  01A1               	clrf	(??_enc1_port^(0+128)+1)
  6651  1B9F  0820               	movf	??_enc1_port^(0+128),w
  6652  1BA0  00A4               	movwf	enc1_port@portvalue^(0+128)
  6653  1BA1  0821               	movf	(??_enc1_port+1)^(0+128),w
  6654  1BA2  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  6655                           
  6656                           ;ENCODER.C: 77: portvalue=portvalue<<1;
  6657  1BA3  3524               	lslf	enc1_port@portvalue^(0+128),w
  6658  1BA4  00A4               	movwf	enc1_port@portvalue^(0+128)
  6659  1BA5  0D25               	rlf	(enc1_port@portvalue+1)^(0+128),w
  6660  1BA6  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  6661                           
  6662                           ;ENCODER.C: 78: portvalue=portvalue|PORTAbits.RA3;
  6663  1BA7  0020               	movlb	0	; select bank0
  6664  1BA8  0C0C               	rrf	12,w	;volatile
  6665  1BA9  0021               	movlb	1	; select bank1
  6666  1BAA  00A0               	movwf	??_enc1_port^(0+128)
  6667  1BAB  0CA0               	rrf	??_enc1_port^(0+128),f
  6668  1BAC  0C20               	rrf	??_enc1_port^(0+128),w
  6669  1BAD  3901               	andlw	1
  6670  1BAE  00A1               	movwf	(??_enc1_port+1)^(0+128)
  6671  1BAF  0824               	movf	enc1_port@portvalue^(0+128),w
  6672  1BB0  0421               	iorwf	(??_enc1_port+1)^(0+128),w
  6673  1BB1  00A2               	movwf	(??_enc1_port+2)^(0+128)
  6674  1BB2  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  6675  1BB3  00A3               	movwf	(??_enc1_port+3)^(0+128)
  6676  1BB4  0822               	movf	(??_enc1_port+2)^(0+128),w
  6677  1BB5  00A4               	movwf	enc1_port@portvalue^(0+128)
  6678  1BB6  0823               	movf	(??_enc1_port+3)^(0+128),w
  6679  1BB7  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  6680                           
  6681                           ;ENCODER.C: 79: portvalue=(portvalue & 0X0003);
  6682  1BB8  3003               	movlw	3
  6683  1BB9  0524               	andwf	enc1_port@portvalue^(0+128),w
  6684  1BBA  00A4               	movwf	enc1_port@portvalue^(0+128)
  6685  1BBB  3000               	movlw	0
  6686  1BBC  0525               	andwf	(enc1_port@portvalue+1)^(0+128),w
  6687  1BBD  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  6688                           
  6689                           ;ENCODER.C: 80: new1=portvalue;
  6690  1BBE  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  6691  1BBF  0020               	movlb	0	; select bank0
  6692  1BC0  01D5               	clrf	_new1+1
  6693  1BC1  07D5               	addwf	_new1+1,f
  6694  1BC2  0021               	movlb	1	; select bank1
  6695  1BC3  0824               	movf	enc1_port@portvalue^(0+128),w
  6696  1BC4  0020               	movlb	0	; select bank0
  6697  1BC5  01D4               	clrf	_new1
  6698  1BC6  07D4               	addwf	_new1,f
  6699                           
  6700                           ;ENCODER.C: 81: temp=new1;
  6701  1BC7  0854               	movf	_new1,w
  6702  1BC8  0021               	movlb	1	; select bank1
  6703  1BC9  00A0               	movwf	??_enc1_port^(0+128)
  6704  1BCA  0820               	movf	??_enc1_port^(0+128),w
  6705  1BCB  0020               	movlb	0	; select bank0
  6706  1BCC  00E7               	movwf	_temp
  6707                           
  6708                           ;ENCODER.C: 82: if((temp ^ old1) !=0)
  6709  1BCD  0023               	movlb	3	; select bank3
  6710  1BCE  083C               	movf	_old1^(0+384),w
  6711  1BCF  0020               	movlb	0	; select bank0
  6712  1BD0  0667               	xorwf	_temp,w
  6713  1BD1  0021               	movlb	1	; select bank1
  6714  1BD2  00A0               	movwf	??_enc1_port^(0+128)
  6715  1BD3  0023               	movlb	3	; select bank3
  6716  1BD4  083D               	movf	(_old1+1)^(0+384),w
  6717  1BD5  0021               	movlb	1	; select bank1
  6718  1BD6  00A1               	movwf	(??_enc1_port+1)^(0+128)
  6719  1BD7  0821               	movf	(??_enc1_port+1)^(0+128),w
  6720  1BD8  0420               	iorwf	??_enc1_port^(0+128),w
  6721  1BD9  1903               	skipnz
  6722  1BDA  2BE7               	goto	l3648
  6723                           
  6724                           ;ENCODER.C: 83: {
  6725                           ;ENCODER.C: 84: old1=new1;
  6726  1BDB  0020               	movlb	0	; select bank0
  6727  1BDC  0855               	movf	_new1+1,w
  6728  1BDD  0023               	movlb	3	; select bank3
  6729  1BDE  01BD               	clrf	(_old1+1)^(0+384)
  6730  1BDF  07BD               	addwf	(_old1+1)^(0+384),f
  6731  1BE0  0020               	movlb	0	; select bank0
  6732  1BE1  0854               	movf	_new1,w
  6733  1BE2  0023               	movlb	3	; select bank3
  6734  1BE3  01BC               	clrf	_old1^(0+384)
  6735  1BE4  07BC               	addwf	_old1^(0+384),f
  6736                           
  6737                           ;ENCODER.C: 85: return 1;
  6738  1BE5  3001               	movlw	1
  6739                           
  6740                           ;ENCODER.C: 86: }
  6741  1BE6  0008               	return
  6742  1BE7                     l3648:	
  6743                           
  6744                           ;ENCODER.C: 87: else
  6745                           ;ENCODER.C: 88: {
  6746                           ;ENCODER.C: 89: old1=new1;
  6747  1BE7  0020               	movlb	0	; select bank0
  6748  1BE8  0855               	movf	_new1+1,w
  6749  1BE9  0023               	movlb	3	; select bank3
  6750  1BEA  01BD               	clrf	(_old1+1)^(0+384)
  6751  1BEB  07BD               	addwf	(_old1+1)^(0+384),f
  6752  1BEC  0020               	movlb	0	; select bank0
  6753  1BED  0854               	movf	_new1,w
  6754  1BEE  0023               	movlb	3	; select bank3
  6755  1BEF  01BC               	clrf	_old1^(0+384)
  6756  1BF0  07BC               	addwf	_old1^(0+384),f
  6757                           
  6758                           ;ENCODER.C: 90: return 0;
  6759  1BF1  3000               	movlw	0
  6760  1BF2  0008               	return
  6761  1BF3                     __end_of_enc1_port:	
  6762                           
  6763                           	psect	text20
  6764  0800                     __ptext20:	
  6765 ;; *************** function _PWM_init *****************
  6766 ;; Defined at:
  6767 ;;		line 1196 in file "main.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;		None               void
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;Total ram usage:        0 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    3
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_main
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           
  6796                           ;psect for function _PWM_init
  6797  0800                     _PWM_init:	
  6798                           
  6799                           ;main.c: 1199: CCP1CONbits.CCP1M=13;
  6800                           
  6801                           ;incstack = 0
  6802                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
  6803  0800  0025               	movlb	5	; select bank5
  6804  0801  0813               	movf	19,w	;volatile
  6805  0802  39F0               	andlw	-16
  6806  0803  380D               	iorlw	13
  6807  0804  0093               	movwf	19	;volatile
  6808                           
  6809                           ;main.c: 1200: CCP1CONbits.DC1B=0;
  6810  0805  30CF               	movlw	-49
  6811  0806  0593               	andwf	19,f	;volatile
  6812                           
  6813                           ;main.c: 1201: CCPR1L=0;
  6814  0807  0191               	clrf	17	;volatile
  6815                           
  6816                           ;main.c: 1202: TRISCbits.TRISC2=0;
  6817  0808  0021               	movlb	1	; select bank1
  6818  0809  110E               	bcf	14,2	;volatile
  6819                           
  6820                           ;main.c: 1203: PR2=0xC7;
  6821  080A  30C7               	movlw	199
  6822  080B  0020               	movlb	0	; select bank0
  6823  080C  009B               	movwf	27	;volatile
  6824                           
  6825                           ;main.c: 1204: T2CONbits.T2CKPS=1;
  6826  080D  081C               	movf	28,w	;volatile
  6827  080E  39FC               	andlw	-4
  6828  080F  3801               	iorlw	1
  6829  0810  009C               	movwf	28	;volatile
  6830                           
  6831                           ;main.c: 1205: T2CONbits.T2OUTPS=0;
  6832  0811  3087               	movlw	-121
  6833  0812  059C               	andwf	28,f	;volatile
  6834                           
  6835                           ;main.c: 1206: PIR1bits.TMR2IF=0;
  6836  0813  1091               	bcf	17,1	;volatile
  6837                           
  6838                           ;main.c: 1207: PIE1bits.TMR2IE=1;
  6839  0814  0021               	movlb	1	; select bank1
  6840  0815  1491               	bsf	17,1	;volatile
  6841                           
  6842                           ;main.c: 1208: T2CONbits.TMR2ON=1;
  6843  0816  0020               	movlb	0	; select bank0
  6844  0817  151C               	bsf	28,2	;volatile
  6845  0818  0008               	return
  6846  0819                     __end_of_PWM_init:	
  6847                           
  6848                           	psect	text21
  6849  199F                     __ptext21:	
  6850 ;; *************** function _Delayms *****************
  6851 ;; Defined at:
  6852 ;;		line 201 in file "DISPLAY.C"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  delay           2    0[BANK1 ] unsigned int 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  yyy             2    4[BANK1 ] unsigned int 
  6857 ;;  xxx             2    2[BANK1 ] unsigned int 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;		None               void
  6860 ;; Registers used:
  6861 ;;		wreg, status,2
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6867 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6868 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;Total ram usage:        6 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    3
  6874 ;; This function calls:
  6875 ;;		Nothing
  6876 ;; This function is called by:
  6877 ;;		_main
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           
  6882                           ;psect for function _Delayms
  6883  199F                     _Delayms:	
  6884                           
  6885                           ;DISPLAY.C: 204: unsigned int yyy=0,xxx=0;
  6886                           
  6887                           ;incstack = 0
  6888                           ; Regs used in _Delayms: [wreg+status,2]
  6889  199F  0021               	movlb	1	; select bank1
  6890  19A0  01A4               	clrf	Delayms@yyy^(0+128)
  6891  19A1  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  6892  19A2  01A2               	clrf	Delayms@xxx^(0+128)
  6893  19A3  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  6894                           
  6895                           ;DISPLAY.C: 205: for(xxx=0;xxx<delay;xxx++)
  6896  19A4  01A2               	clrf	Delayms@xxx^(0+128)
  6897  19A5  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  6898  19A6                     l477:	
  6899  19A6  0821               	movf	(Delayms@delay+1)^(0+128),w
  6900  19A7  0223               	subwf	(Delayms@xxx+1)^(0+128),w
  6901  19A8  1D03               	skipz
  6902  19A9  29AC               	goto	u5755
  6903  19AA  0820               	movf	Delayms@delay^(0+128),w
  6904  19AB  0222               	subwf	Delayms@xxx^(0+128),w
  6905  19AC                     u5755:	
  6906  19AC  1803               	btfsc	3,0
  6907  19AD  0008               	return
  6908                           
  6909                           ;DISPLAY.C: 206: {
  6910                           ;DISPLAY.C: 207: for(yyy=0;yyy<138;yyy++);
  6911  19AE  01A4               	clrf	Delayms@yyy^(0+128)
  6912  19AF  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  6913  19B0  3000               	movlw	0
  6914  19B1  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  6915  19B2  308A               	movlw	138
  6916  19B3  1903               	skipnz
  6917  19B4  0224               	subwf	Delayms@yyy^(0+128),w
  6918  19B5  1803               	btfsc	3,0
  6919  19B6  29C2               	goto	l4218
  6920  19B7                     l4216:	
  6921  19B7  3001               	movlw	1
  6922  19B8  07A4               	addwf	Delayms@yyy^(0+128),f
  6923  19B9  3000               	movlw	0
  6924  19BA  3DA5               	addwfc	(Delayms@yyy+1)^(0+128),f
  6925  19BB  3000               	movlw	0
  6926  19BC  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  6927  19BD  308A               	movlw	138
  6928  19BE  1903               	skipnz
  6929  19BF  0224               	subwf	Delayms@yyy^(0+128),w
  6930  19C0  1C03               	skipc
  6931  19C1  29B7               	goto	l4216
  6932  19C2                     l4218:	
  6933  19C2  3001               	movlw	1
  6934  19C3  07A2               	addwf	Delayms@xxx^(0+128),f
  6935  19C4  3000               	movlw	0
  6936  19C5  3DA3               	addwfc	(Delayms@xxx+1)^(0+128),f
  6937  19C6  29A6               	goto	l477
  6938  19C7                     __end_of_Delayms:	
  6939                           
  6940                           	psect	text22
  6941  148D                     __ptext22:	
  6942 ;; *************** function _Adaptive_base_pid *****************
  6943 ;; Defined at:
  6944 ;;		line 34 in file "MOTORCONTROL.C"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;		None
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;		None
  6949 ;; Return value:  Size  Location     Type
  6950 ;;		None               void
  6951 ;; Registers used:
  6952 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6959 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6960 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6961 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  6962 ;;Total ram usage:       18 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:    5
  6965 ;; This function calls:
  6966 ;;		_Update_PWM
  6967 ;;		___aldiv
  6968 ;;		___altoft
  6969 ;;		___ftadd
  6970 ;;		___ftdiv
  6971 ;;		___ftge
  6972 ;;		___ftmul
  6973 ;;		___ftneg
  6974 ;;		___fttol
  6975 ;;		___wmul
  6976 ;; This function is called by:
  6977 ;;		_main
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           
  6982                           ;psect for function _Adaptive_base_pid
  6983  148D                     _Adaptive_base_pid:	
  6984                           
  6985                           ;MOTORCONTROL.C: 37: pidParams2.Kp2=2.0;
  6986                           
  6987                           ;incstack = 0
  6988                           ; Regs used in _Adaptive_base_pid: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6989  148D  309A               	movlw	154
  6990  148E  0086               	movwf	6
  6991  148F  3023               	movlw	35
  6992  1490  0087               	movwf	7
  6993  1491  3000               	movlw	0
  6994  1492  3FC0               	movwi [0]fsr1
  6995  1493  3000               	movlw	0
  6996  1494  3FC1               	movwi [1]fsr1
  6997  1495  3040               	movlw	64
  6998  1496  3FC2               	movwi [2]fsr1
  6999                           
  7000                           ;MOTORCONTROL.C: 38: pidParams2.Ki2=0.5;
  7001  1497  309A               	movlw	154
  7002  1498  0086               	movwf	6
  7003  1499  3023               	movlw	35
  7004  149A  0087               	movwf	7
  7005  149B  3143               	addfsr 1,3
  7006  149C  3000               	movlw	0
  7007  149D  3FC0               	movwi [0]fsr1
  7008  149E  3000               	movlw	0
  7009  149F  3FC1               	movwi [1]fsr1
  7010  14A0  303F               	movlw	63
  7011  14A1  3FC2               	movwi [2]fsr1
  7012                           
  7013                           ;MOTORCONTROL.C: 39: pidParams2.Kd2=0;
  7014  14A2  309A               	movlw	154
  7015  14A3  0086               	movwf	6
  7016  14A4  3023               	movlw	35
  7017  14A5  0087               	movwf	7
  7018  14A6  3146               	addfsr 1,6
  7019  14A7  3000               	movlw	0
  7020  14A8  3FC0               	movwi [0]fsr1
  7021  14A9  3000               	movlw	0
  7022  14AA  3FC1               	movwi [1]fsr1
  7023  14AB  3000               	movlw	0
  7024  14AC  3FC2               	movwi [2]fsr1
  7025                           
  7026                           ;MOTORCONTROL.C: 41: pidParams2.ReferenceSetpoint2=setpfreq;
  7027  14AD  0023               	movlb	3	; select bank3
  7028  14AE  084E               	movf	_setpfreq^(0+384),w
  7029  14AF  0021               	movlb	1	; select bank1
  7030  14B0  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7031  14B1  0023               	movlb	3	; select bank3
  7032  14B2  084F               	movf	(_setpfreq+1)^(0+384),w
  7033  14B3  0021               	movlb	1	; select bank1
  7034  14B4  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7035  14B5  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7036  14B6  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7037  14B7  30C8               	movlw	200
  7038  14B8  0086               	movwf	6
  7039  14B9  3023               	movlw	35
  7040  14BA  0087               	movwf	7
  7041  14BB  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7042  14BC  3FC0               	movwi [0]fsr1
  7043  14BD  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7044  14BE  3FC1               	movwi [1]fsr1
  7045  14BF  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7046  14C0  3FC2               	movwi [2]fsr1
  7047  14C1  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7048  14C2  3FC3               	movwi [3]fsr1
  7049                           
  7050                           ;MOTORCONTROL.C: 42: pidParams2.feedback2=Fltpfreq;
  7051  14C3  0022               	movlb	2	; select bank2
  7052  14C4  0820               	movf	_Fltpfreq^(0+256),w
  7053  14C5  0021               	movlb	1	; select bank1
  7054  14C6  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7055  14C7  0022               	movlb	2	; select bank2
  7056  14C8  0821               	movf	(_Fltpfreq+1)^(0+256),w
  7057  14C9  0021               	movlb	1	; select bank1
  7058  14CA  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7059  14CB  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7060  14CC  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7061  14CD  30CC               	movlw	204
  7062  14CE  0086               	movwf	6
  7063  14CF  3023               	movlw	35
  7064  14D0  0087               	movwf	7
  7065  14D1  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7066  14D2  3FC0               	movwi [0]fsr1
  7067  14D3  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7068  14D4  3FC1               	movwi [1]fsr1
  7069  14D5  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7070  14D6  3FC2               	movwi [2]fsr1
  7071  14D7  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7072  14D8  3FC3               	movwi [3]fsr1
  7073                           
  7074                           ;MOTORCONTROL.C: 43: disp1term=pidParams2.ReferenceSetpoint2;
  7075  14D9  30C8               	movlw	200
  7076  14DA  0086               	movwf	6
  7077  14DB  3023               	movlw	35
  7078  14DC  0087               	movwf	7
  7079  14DD  3F40               	moviw [0]fsr1
  7080  14DE  0024               	movlb	4	; select bank4
  7081  14DF  00B0               	movwf	_disp1term^(0+512)
  7082  14E0  3F41               	moviw [1]fsr1
  7083  14E1  00B1               	movwf	(_disp1term+1)^(0+512)
  7084                           
  7085                           ;MOTORCONTROL.C: 44: disp2term=pidParams2.feedback2;
  7086  14E2  30CC               	movlw	204
  7087  14E3  0086               	movwf	6
  7088  14E4  3023               	movlw	35
  7089  14E5  0087               	movwf	7
  7090  14E6  3F40               	moviw [0]fsr1
  7091  14E7  00B2               	movwf	_disp2term^(0+512)
  7092  14E8  3F41               	moviw [1]fsr1
  7093  14E9  00B3               	movwf	(_disp2term+1)^(0+512)
  7094                           
  7095                           ;MOTORCONTROL.C: 46: pidParams2.error2 = pidParams2.ReferenceSetpoint2 - pidParams2.feed
      +                          back2;
  7096  14EA  30C8               	movlw	200
  7097  14EB  0086               	movwf	6
  7098  14EC  3023               	movlw	35
  7099  14ED  0087               	movwf	7
  7100  14EE  3F40               	moviw [0]fsr1
  7101  14EF  0021               	movlb	1	; select bank1
  7102  14F0  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7103  14F1  3F41               	moviw [1]fsr1
  7104  14F2  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7105  14F3  3F42               	moviw [2]fsr1
  7106  14F4  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7107  14F5  3F43               	moviw [3]fsr1
  7108  14F6  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7109  14F7  30CC               	movlw	204
  7110  14F8  0086               	movwf	6
  7111  14F9  3023               	movlw	35
  7112  14FA  0087               	movwf	7
  7113  14FB  3F40               	moviw [0]fsr1
  7114  14FC  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  7115  14FD  3F41               	moviw [1]fsr1
  7116  14FE  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  7117  14FF  3F42               	moviw [2]fsr1
  7118  1500  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  7119  1501  3F43               	moviw [3]fsr1
  7120  1502  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  7121  1503  09DF               	comf	(??_Adaptive_base_pid+4)^(0+128),f
  7122  1504  09E0               	comf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7123  1505  09E1               	comf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7124  1506  09E2               	comf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7125  1507  0ADF               	incf	(??_Adaptive_base_pid+4)^(0+128),f
  7126  1508  1903               	skipnz
  7127  1509  0AE0               	incf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7128  150A  1903               	skipnz
  7129  150B  0AE1               	incf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7130  150C  1903               	skipnz
  7131  150D  0AE2               	incf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7132  150E  085F               	movf	(??_Adaptive_base_pid+4)^(0+128),w
  7133  150F  07DB               	addwf	??_Adaptive_base_pid^(0+128),f
  7134  1510  0860               	movf	(??_Adaptive_base_pid+5)^(0+128),w
  7135  1511  3DDC               	addwfc	(??_Adaptive_base_pid^(0+128)+1),f
  7136  1512  0861               	movf	(??_Adaptive_base_pid+6)^(0+128),w
  7137  1513  3DDD               	addwfc	(??_Adaptive_base_pid^(0+128)+2),f
  7138  1514  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  7139  1515  3DDE               	addwfc	(??_Adaptive_base_pid^(0+128)+3),f
  7140  1516  309A               	movlw	154
  7141  1517  0086               	movwf	6
  7142  1518  3023               	movlw	35
  7143  1519  0087               	movwf	7
  7144  151A  314C               	addfsr 1,12
  7145  151B  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7146  151C  3FC0               	movwi [0]fsr1
  7147  151D  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7148  151E  3FC1               	movwi [1]fsr1
  7149  151F  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7150  1520  3FC2               	movwi [2]fsr1
  7151  1521  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7152  1522  3FC3               	movwi [3]fsr1
  7153                           
  7154                           ;MOTORCONTROL.C: 47: pidParams2.feedback2=0;
  7155  1523  30CC               	movlw	204
  7156  1524  0086               	movwf	6
  7157  1525  3023               	movlw	35
  7158  1526  0087               	movwf	7
  7159  1527  3000               	movlw	0
  7160  1528  3FC0               	movwi [0]fsr1
  7161  1529  3FC1               	movwi [1]fsr1
  7162  152A  3FC2               	movwi [2]fsr1
  7163  152B  3FC3               	movwi [3]fsr1
  7164                           
  7165                           ;MOTORCONTROL.C: 48: pidParams2.outmax2=53000;
  7166  152C  30C4               	movlw	196
  7167  152D  0086               	movwf	6
  7168  152E  3023               	movlw	35
  7169  152F  0087               	movwf	7
  7170  1530  3008               	movlw	8
  7171  1531  3FC0               	movwi [0]fsr1
  7172  1532  30CF               	movlw	207
  7173  1533  3FC1               	movwi [1]fsr1
  7174  1534  3000               	movlw	0
  7175  1535  3FC2               	movwi [2]fsr1
  7176  1536  3000               	movlw	0
  7177  1537  3FC3               	movwi [3]fsr1
  7178                           
  7179                           ;MOTORCONTROL.C: 50: scalefactor2=66.0;
  7180  1538  3042               	movlw	66
  7181  1539  0023               	movlb	3	; select bank3
  7182  153A  00EB               	movwf	_scalefactor2^(0+384)
  7183  153B  3000               	movlw	0
  7184  153C  00EC               	movwf	(_scalefactor2^(0+384)+1)
  7185                           
  7186                           ;MOTORCONTROL.C: 53: {
  7187                           ;MOTORCONTROL.C: 54: error_new =pidParams2.error2;
  7188  153D  309A               	movlw	154
  7189  153E  0086               	movwf	6
  7190  153F  3023               	movlw	35
  7191  1540  0087               	movwf	7
  7192  1541  314C               	addfsr 1,12
  7193  1542  3F40               	moviw [0]fsr1
  7194  1543  0021               	movlb	1	; select bank1
  7195  1544  00A8               	movwf	___altoft@c^(0+128)
  7196  1545  3F41               	moviw [1]fsr1
  7197  1546  00A9               	movwf	(___altoft@c+1)^(0+128)
  7198  1547  3F42               	moviw [2]fsr1
  7199  1548  00AA               	movwf	(___altoft@c+2)^(0+128)
  7200  1549  3F43               	moviw [3]fsr1
  7201  154A  00AB               	movwf	(___altoft@c+3)^(0+128)
  7202  154B  319A  229E  3194   	fcall	___altoft
  7203  154E  0021               	movlb	1	; select bank1
  7204  154F  0828               	movf	?___altoft^(0+128),w
  7205  1550  0023               	movlb	3	; select bank3
  7206  1551  00A0               	movwf	_error_new^(0+384)
  7207  1552  0021               	movlb	1	; select bank1
  7208  1553  0829               	movf	(?___altoft+1)^(0+128),w
  7209  1554  0023               	movlb	3	; select bank3
  7210  1555  00A1               	movwf	(_error_new+1)^(0+384)
  7211  1556  0021               	movlb	1	; select bank1
  7212  1557  082A               	movf	(?___altoft+2)^(0+128),w
  7213  1558  0023               	movlb	3	; select bank3
  7214  1559  00A2               	movwf	(_error_new+2)^(0+384)
  7215                           
  7216                           ;MOTORCONTROL.C: 55: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7217  155A  309A               	movlw	154
  7218  155B  0086               	movwf	6
  7219  155C  3023               	movlw	35
  7220  155D  0087               	movwf	7
  7221  155E  3143               	addfsr 1,3
  7222  155F  3F40               	moviw [0]fsr1
  7223  1560  0021               	movlb	1	; select bank1
  7224  1561  00B5               	movwf	___ftmul@f1^(0+128)
  7225  1562  3F41               	moviw [1]fsr1
  7226  1563  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7227  1564  3F42               	moviw [2]fsr1
  7228  1565  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7229  1566  0023               	movlb	3	; select bank3
  7230  1567  0823               	movf	_error_old^(0+384),w
  7231  1568  0021               	movlb	1	; select bank1
  7232  1569  00A8               	movwf	___ftadd@f1^(0+128)
  7233  156A  0023               	movlb	3	; select bank3
  7234  156B  0824               	movf	(_error_old+1)^(0+384),w
  7235  156C  0021               	movlb	1	; select bank1
  7236  156D  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7237  156E  0023               	movlb	3	; select bank3
  7238  156F  0825               	movf	(_error_old+2)^(0+384),w
  7239  1570  0021               	movlb	1	; select bank1
  7240  1571  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7241  1572  0023               	movlb	3	; select bank3
  7242  1573  0820               	movf	_error_new^(0+384),w
  7243  1574  0021               	movlb	1	; select bank1
  7244  1575  00AB               	movwf	___ftadd@f2^(0+128)
  7245  1576  0023               	movlb	3	; select bank3
  7246  1577  0821               	movf	(_error_new+1)^(0+384),w
  7247  1578  0021               	movlb	1	; select bank1
  7248  1579  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7249  157A  0023               	movlb	3	; select bank3
  7250  157B  0822               	movf	(_error_new+2)^(0+384),w
  7251  157C  0021               	movlb	1	; select bank1
  7252  157D  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7253  157E  3189  210F  3194   	fcall	___ftadd
  7254  1581  0021               	movlb	1	; select bank1
  7255  1582  0828               	movf	?___ftadd^(0+128),w
  7256  1583  00B8               	movwf	___ftmul@f2^(0+128)
  7257  1584  0829               	movf	(?___ftadd+1)^(0+128),w
  7258  1585  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7259  1586  082A               	movf	(?___ftadd+2)^(0+128),w
  7260  1587  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7261  1588  3193  2304  3194   	fcall	___ftmul
  7262  158B  0021               	movlb	1	; select bank1
  7263  158C  0835               	movf	?___ftmul^(0+128),w
  7264  158D  00E4               	movwf	_Adaptive_base_pid$1736^(0+128)
  7265  158E  0836               	movf	(?___ftmul+1)^(0+128),w
  7266  158F  00E5               	movwf	(_Adaptive_base_pid$1736+1)^(0+128)
  7267  1590  0837               	movf	(?___ftmul+2)^(0+128),w
  7268  1591  00E6               	movwf	(_Adaptive_base_pid$1736+2)^(0+128)
  7269                           
  7270                           ;MOTORCONTROL.C: 55: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7271  1592  0023               	movlb	3	; select bank3
  7272  1593  0829               	movf	_integral_old^(0+384),w
  7273  1594  0021               	movlb	1	; select bank1
  7274  1595  00A8               	movwf	___ftadd@f1^(0+128)
  7275  1596  0023               	movlb	3	; select bank3
  7276  1597  082A               	movf	(_integral_old+1)^(0+384),w
  7277  1598  0021               	movlb	1	; select bank1
  7278  1599  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7279  159A  0023               	movlb	3	; select bank3
  7280  159B  082B               	movf	(_integral_old+2)^(0+384),w
  7281  159C  0021               	movlb	1	; select bank1
  7282  159D  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7283  159E  3000               	movlw	0
  7284  159F  00C5               	movwf	___ftdiv@f2^(0+128)
  7285  15A0  3000               	movlw	0
  7286  15A1  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  7287  15A2  3040               	movlw	64
  7288  15A3  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  7289  15A4  0023               	movlb	3	; select bank3
  7290  15A5  0860               	movf	_Tsampling^(0+384),w
  7291  15A6  0021               	movlb	1	; select bank1
  7292  15A7  00B5               	movwf	___ftmul@f1^(0+128)
  7293  15A8  0023               	movlb	3	; select bank3
  7294  15A9  0861               	movf	(_Tsampling+1)^(0+384),w
  7295  15AA  0021               	movlb	1	; select bank1
  7296  15AB  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7297  15AC  0023               	movlb	3	; select bank3
  7298  15AD  0862               	movf	(_Tsampling+2)^(0+384),w
  7299  15AE  0021               	movlb	1	; select bank1
  7300  15AF  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7301  15B0  0864               	movf	_Adaptive_base_pid$1736^(0+128),w
  7302  15B1  00B8               	movwf	___ftmul@f2^(0+128)
  7303  15B2  0865               	movf	(_Adaptive_base_pid$1736+1)^(0+128),w
  7304  15B3  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7305  15B4  0866               	movf	(_Adaptive_base_pid$1736+2)^(0+128),w
  7306  15B5  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7307  15B6  3193  2304  3194   	fcall	___ftmul
  7308  15B9  0021               	movlb	1	; select bank1
  7309  15BA  0835               	movf	?___ftmul^(0+128),w
  7310  15BB  00C8               	movwf	___ftdiv@f1^(0+128)
  7311  15BC  0836               	movf	(?___ftmul+1)^(0+128),w
  7312  15BD  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  7313  15BE  0837               	movf	(?___ftmul+2)^(0+128),w
  7314  15BF  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  7315  15C0  3191  21A7  3194   	fcall	___ftdiv
  7316  15C3  0021               	movlb	1	; select bank1
  7317  15C4  0845               	movf	?___ftdiv^(0+128),w
  7318  15C5  00AB               	movwf	___ftadd@f2^(0+128)
  7319  15C6  0846               	movf	(?___ftdiv+1)^(0+128),w
  7320  15C7  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7321  15C8  0847               	movf	(?___ftdiv+2)^(0+128),w
  7322  15C9  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7323  15CA  3189  210F  3194   	fcall	___ftadd
  7324  15CD  0021               	movlb	1	; select bank1
  7325  15CE  0828               	movf	?___ftadd^(0+128),w
  7326  15CF  0023               	movlb	3	; select bank3
  7327  15D0  00A6               	movwf	_integral_new^(0+384)
  7328  15D1  0021               	movlb	1	; select bank1
  7329  15D2  0829               	movf	(?___ftadd+1)^(0+128),w
  7330  15D3  0023               	movlb	3	; select bank3
  7331  15D4  00A7               	movwf	(_integral_new+1)^(0+384)
  7332  15D5  0021               	movlb	1	; select bank1
  7333  15D6  082A               	movf	(?___ftadd+2)^(0+128),w
  7334  15D7  0023               	movlb	3	; select bank3
  7335  15D8  00A8               	movwf	(_integral_new+2)^(0+384)
  7336                           
  7337                           ;MOTORCONTROL.C: 57: if((integral_new > pidParams2.outmax2) || (integral_new < minoutmax
      +                          ))
  7338  15D9  30C4               	movlw	196
  7339  15DA  0086               	movwf	6
  7340  15DB  3023               	movlw	35
  7341  15DC  0087               	movwf	7
  7342  15DD  3F40               	moviw [0]fsr1
  7343  15DE  0021               	movlb	1	; select bank1
  7344  15DF  00A8               	movwf	___altoft@c^(0+128)
  7345  15E0  3F41               	moviw [1]fsr1
  7346  15E1  00A9               	movwf	(___altoft@c+1)^(0+128)
  7347  15E2  3F42               	moviw [2]fsr1
  7348  15E3  00AA               	movwf	(___altoft@c+2)^(0+128)
  7349  15E4  3F43               	moviw [3]fsr1
  7350  15E5  00AB               	movwf	(___altoft@c+3)^(0+128)
  7351  15E6  319A  229E  3194   	fcall	___altoft
  7352  15E9  0021               	movlb	1	; select bank1
  7353  15EA  0828               	movf	?___altoft^(0+128),w
  7354  15EB  00B0               	movwf	___ftge@ff1^(0+128)
  7355  15EC  0829               	movf	(?___altoft+1)^(0+128),w
  7356  15ED  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  7357  15EE  082A               	movf	(?___altoft+2)^(0+128),w
  7358  15EF  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  7359  15F0  0023               	movlb	3	; select bank3
  7360  15F1  0826               	movf	_integral_new^(0+384),w
  7361  15F2  0021               	movlb	1	; select bank1
  7362  15F3  00B3               	movwf	___ftge@ff2^(0+128)
  7363  15F4  0023               	movlb	3	; select bank3
  7364  15F5  0827               	movf	(_integral_new+1)^(0+384),w
  7365  15F6  0021               	movlb	1	; select bank1
  7366  15F7  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  7367  15F8  0023               	movlb	3	; select bank3
  7368  15F9  0828               	movf	(_integral_new+2)^(0+384),w
  7369  15FA  0021               	movlb	1	; select bank1
  7370  15FB  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  7371  15FC  319A  2262  3194   	fcall	___ftge
  7372  15FF  1C03               	btfss	3,0
  7373  1600  2E1E               	goto	l4376
  7374  1601  0023               	movlb	3	; select bank3
  7375  1602  0826               	movf	_integral_new^(0+384),w
  7376  1603  0021               	movlb	1	; select bank1
  7377  1604  00B0               	movwf	___ftge@ff1^(0+128)
  7378  1605  0023               	movlb	3	; select bank3
  7379  1606  0827               	movf	(_integral_new+1)^(0+384),w
  7380  1607  0021               	movlb	1	; select bank1
  7381  1608  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  7382  1609  0023               	movlb	3	; select bank3
  7383  160A  0828               	movf	(_integral_new+2)^(0+384),w
  7384  160B  0021               	movlb	1	; select bank1
  7385  160C  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  7386  160D  0024               	movlb	4	; select bank4
  7387  160E  0827               	movf	_minoutmax^(0+512),w
  7388  160F  0021               	movlb	1	; select bank1
  7389  1610  00B3               	movwf	___ftge@ff2^(0+128)
  7390  1611  0024               	movlb	4	; select bank4
  7391  1612  0828               	movf	(_minoutmax+1)^(0+512),w
  7392  1613  0021               	movlb	1	; select bank1
  7393  1614  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  7394  1615  0024               	movlb	4	; select bank4
  7395  1616  0829               	movf	(_minoutmax+2)^(0+512),w
  7396  1617  0021               	movlb	1	; select bank1
  7397  1618  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  7398  1619  319A  2262  3194   	fcall	___ftge
  7399  161C  1803               	btfsc	3,0
  7400  161D  2E25               	goto	l4378
  7401  161E                     l4376:	
  7402                           
  7403                           ;MOTORCONTROL.C: 58: integral_new = integral_old;
  7404  161E  0023               	movlb	3	; select bank3
  7405  161F  0829               	movf	_integral_old^(0+384),w
  7406  1620  00A6               	movwf	_integral_new^(0+384)
  7407  1621  082A               	movf	(_integral_old+1)^(0+384),w
  7408  1622  00A7               	movwf	(_integral_new+1)^(0+384)
  7409  1623  082B               	movf	(_integral_old+2)^(0+384),w
  7410  1624  00A8               	movwf	(_integral_new+2)^(0+384)
  7411  1625                     l4378:	
  7412                           
  7413                           ;MOTORCONTROL.C: 60: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7414  1625  0023               	movlb	3	; select bank3
  7415  1626  0860               	movf	_Tsampling^(0+384),w
  7416  1627  0021               	movlb	1	; select bank1
  7417  1628  00C5               	movwf	___ftdiv@f2^(0+128)
  7418  1629  0023               	movlb	3	; select bank3
  7419  162A  0861               	movf	(_Tsampling+1)^(0+384),w
  7420  162B  0021               	movlb	1	; select bank1
  7421  162C  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  7422  162D  0023               	movlb	3	; select bank3
  7423  162E  0862               	movf	(_Tsampling+2)^(0+384),w
  7424  162F  0021               	movlb	1	; select bank1
  7425  1630  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  7426  1631  309A               	movlw	154
  7427  1632  0086               	movwf	6
  7428  1633  3023               	movlw	35
  7429  1634  0087               	movwf	7
  7430  1635  3146               	addfsr 1,6
  7431  1636  3F40               	moviw [0]fsr1
  7432  1637  00B5               	movwf	___ftmul@f1^(0+128)
  7433  1638  3F41               	moviw [1]fsr1
  7434  1639  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7435  163A  3F42               	moviw [2]fsr1
  7436  163B  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7437  163C  0023               	movlb	3	; select bank3
  7438  163D  0820               	movf	_error_new^(0+384),w
  7439  163E  0021               	movlb	1	; select bank1
  7440  163F  00A8               	movwf	___ftadd@f1^(0+128)
  7441  1640  0023               	movlb	3	; select bank3
  7442  1641  0821               	movf	(_error_new+1)^(0+384),w
  7443  1642  0021               	movlb	1	; select bank1
  7444  1643  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7445  1644  0023               	movlb	3	; select bank3
  7446  1645  0822               	movf	(_error_new+2)^(0+384),w
  7447  1646  0021               	movlb	1	; select bank1
  7448  1647  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7449  1648  0023               	movlb	3	; select bank3
  7450  1649  0823               	movf	_error_old^(0+384),w
  7451  164A  0021               	movlb	1	; select bank1
  7452  164B  00A0               	movwf	___ftneg@f1^(0+128)
  7453  164C  0023               	movlb	3	; select bank3
  7454  164D  0824               	movf	(_error_old+1)^(0+384),w
  7455  164E  0021               	movlb	1	; select bank1
  7456  164F  00A1               	movwf	(___ftneg@f1+1)^(0+128)
  7457  1650  0023               	movlb	3	; select bank3
  7458  1651  0825               	movf	(_error_old+2)^(0+384),w
  7459  1652  0021               	movlb	1	; select bank1
  7460  1653  00A2               	movwf	(___ftneg@f1+2)^(0+128)
  7461  1654  3198  2093  3194   	fcall	___ftneg
  7462  1657  0021               	movlb	1	; select bank1
  7463  1658  0820               	movf	?___ftneg^(0+128),w
  7464  1659  00AB               	movwf	___ftadd@f2^(0+128)
  7465  165A  0821               	movf	(?___ftneg+1)^(0+128),w
  7466  165B  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7467  165C  0822               	movf	(?___ftneg+2)^(0+128),w
  7468  165D  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7469  165E  3189  210F  3194   	fcall	___ftadd
  7470  1661  0021               	movlb	1	; select bank1
  7471  1662  0828               	movf	?___ftadd^(0+128),w
  7472  1663  00B8               	movwf	___ftmul@f2^(0+128)
  7473  1664  0829               	movf	(?___ftadd+1)^(0+128),w
  7474  1665  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7475  1666  082A               	movf	(?___ftadd+2)^(0+128),w
  7476  1667  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7477  1668  3193  2304  3194   	fcall	___ftmul
  7478  166B  0021               	movlb	1	; select bank1
  7479  166C  0835               	movf	?___ftmul^(0+128),w
  7480  166D  00C8               	movwf	___ftdiv@f1^(0+128)
  7481  166E  0836               	movf	(?___ftmul+1)^(0+128),w
  7482  166F  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  7483  1670  0837               	movf	(?___ftmul+2)^(0+128),w
  7484  1671  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  7485  1672  3191  21A7  3194   	fcall	___ftdiv
  7486  1675  0021               	movlb	1	; select bank1
  7487  1676  0845               	movf	?___ftdiv^(0+128),w
  7488  1677  00E7               	movwf	_Adaptive_base_pid$1737^(0+128)
  7489  1678  0846               	movf	(?___ftdiv+1)^(0+128),w
  7490  1679  00E8               	movwf	(_Adaptive_base_pid$1737+1)^(0+128)
  7491  167A  0847               	movf	(?___ftdiv+2)^(0+128),w
  7492  167B  00E9               	movwf	(_Adaptive_base_pid$1737+2)^(0+128)
  7493                           
  7494                           ;MOTORCONTROL.C: 60: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7495  167C  0867               	movf	_Adaptive_base_pid$1737^(0+128),w
  7496  167D  00A8               	movwf	___ftadd@f1^(0+128)
  7497  167E  0868               	movf	(_Adaptive_base_pid$1737+1)^(0+128),w
  7498  167F  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7499  1680  0869               	movf	(_Adaptive_base_pid$1737+2)^(0+128),w
  7500  1681  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7501  1682  0023               	movlb	3	; select bank3
  7502  1683  0820               	movf	_error_new^(0+384),w
  7503  1684  0021               	movlb	1	; select bank1
  7504  1685  00B5               	movwf	___ftmul@f1^(0+128)
  7505  1686  0023               	movlb	3	; select bank3
  7506  1687  0821               	movf	(_error_new+1)^(0+384),w
  7507  1688  0021               	movlb	1	; select bank1
  7508  1689  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7509  168A  0023               	movlb	3	; select bank3
  7510  168B  0822               	movf	(_error_new+2)^(0+384),w
  7511  168C  0021               	movlb	1	; select bank1
  7512  168D  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7513  168E  309A               	movlw	154
  7514  168F  0086               	movwf	6
  7515  1690  3023               	movlw	35
  7516  1691  0087               	movwf	7
  7517  1692  3F40               	moviw [0]fsr1
  7518  1693  00B8               	movwf	___ftmul@f2^(0+128)
  7519  1694  3F41               	moviw [1]fsr1
  7520  1695  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7521  1696  3F42               	moviw [2]fsr1
  7522  1697  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7523  1698  3193  2304  3194   	fcall	___ftmul
  7524  169B  0021               	movlb	1	; select bank1
  7525  169C  0835               	movf	?___ftmul^(0+128),w
  7526  169D  00AB               	movwf	___ftadd@f2^(0+128)
  7527  169E  0836               	movf	(?___ftmul+1)^(0+128),w
  7528  169F  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7529  16A0  0837               	movf	(?___ftmul+2)^(0+128),w
  7530  16A1  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7531  16A2  3189  210F  3194   	fcall	___ftadd
  7532  16A5  0021               	movlb	1	; select bank1
  7533  16A6  0828               	movf	?___ftadd^(0+128),w
  7534  16A7  00EA               	movwf	_Adaptive_base_pid$1738^(0+128)
  7535  16A8  0829               	movf	(?___ftadd+1)^(0+128),w
  7536  16A9  00EB               	movwf	(_Adaptive_base_pid$1738+1)^(0+128)
  7537  16AA  082A               	movf	(?___ftadd+2)^(0+128),w
  7538  16AB  00EC               	movwf	(_Adaptive_base_pid$1738+2)^(0+128)
  7539                           
  7540                           ;MOTORCONTROL.C: 60: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7541  16AC  0023               	movlb	3	; select bank3
  7542  16AD  0826               	movf	_integral_new^(0+384),w
  7543  16AE  0021               	movlb	1	; select bank1
  7544  16AF  00A8               	movwf	___ftadd@f1^(0+128)
  7545  16B0  0023               	movlb	3	; select bank3
  7546  16B1  0827               	movf	(_integral_new+1)^(0+384),w
  7547  16B2  0021               	movlb	1	; select bank1
  7548  16B3  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7549  16B4  0023               	movlb	3	; select bank3
  7550  16B5  0828               	movf	(_integral_new+2)^(0+384),w
  7551  16B6  0021               	movlb	1	; select bank1
  7552  16B7  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7553  16B8  086A               	movf	_Adaptive_base_pid$1738^(0+128),w
  7554  16B9  00AB               	movwf	___ftadd@f2^(0+128)
  7555  16BA  086B               	movf	(_Adaptive_base_pid$1738+1)^(0+128),w
  7556  16BB  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7557  16BC  086C               	movf	(_Adaptive_base_pid$1738+2)^(0+128),w
  7558  16BD  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7559  16BE  3189  210F  3194   	fcall	___ftadd
  7560  16C1  0021               	movlb	1	; select bank1
  7561  16C2  0828               	movf	?___ftadd^(0+128),w
  7562  16C3  0024               	movlb	4	; select bank4
  7563  16C4  00A4               	movwf	_controller_out^(0+512)
  7564  16C5  0021               	movlb	1	; select bank1
  7565  16C6  0829               	movf	(?___ftadd+1)^(0+128),w
  7566  16C7  0024               	movlb	4	; select bank4
  7567  16C8  00A5               	movwf	(_controller_out+1)^(0+512)
  7568  16C9  0021               	movlb	1	; select bank1
  7569  16CA  082A               	movf	(?___ftadd+2)^(0+128),w
  7570  16CB  0024               	movlb	4	; select bank4
  7571  16CC  00A6               	movwf	(_controller_out+2)^(0+512)
  7572                           
  7573                           ;MOTORCONTROL.C: 61: integral_old = integral_new;
  7574  16CD  0023               	movlb	3	; select bank3
  7575  16CE  0826               	movf	_integral_new^(0+384),w
  7576  16CF  00A9               	movwf	_integral_old^(0+384)
  7577  16D0  0827               	movf	(_integral_new+1)^(0+384),w
  7578  16D1  00AA               	movwf	(_integral_old+1)^(0+384)
  7579  16D2  0828               	movf	(_integral_new+2)^(0+384),w
  7580  16D3  00AB               	movwf	(_integral_old+2)^(0+384)
  7581                           
  7582                           ;MOTORCONTROL.C: 62: error_old = error_new;
  7583  16D4  0820               	movf	_error_new^(0+384),w
  7584  16D5  00A3               	movwf	_error_old^(0+384)
  7585  16D6  0821               	movf	(_error_new+1)^(0+384),w
  7586  16D7  00A4               	movwf	(_error_old+1)^(0+384)
  7587  16D8  0822               	movf	(_error_new+2)^(0+384),w
  7588  16D9  00A5               	movwf	(_error_old+2)^(0+384)
  7589                           
  7590                           ;MOTORCONTROL.C: 63: pidParams2.pidoutput2=controller_out;
  7591  16DA  0024               	movlb	4	; select bank4
  7592  16DB  0824               	movf	_controller_out^(0+512),w
  7593  16DC  0021               	movlb	1	; select bank1
  7594  16DD  00C5               	movwf	___fttol@f1^(0+128)
  7595  16DE  0024               	movlb	4	; select bank4
  7596  16DF  0825               	movf	(_controller_out+1)^(0+512),w
  7597  16E0  0021               	movlb	1	; select bank1
  7598  16E1  00C6               	movwf	(___fttol@f1+1)^(0+128)
  7599  16E2  0024               	movlb	4	; select bank4
  7600  16E3  0826               	movf	(_controller_out+2)^(0+512),w
  7601  16E4  0021               	movlb	1	; select bank1
  7602  16E5  00C7               	movwf	(___fttol@f1+2)^(0+128)
  7603  16E6  3190  2077  3194   	fcall	___fttol
  7604  16E9  30E0               	movlw	224
  7605  16EA  0086               	movwf	6
  7606  16EB  3023               	movlw	35
  7607  16EC  0087               	movwf	7
  7608  16ED  0021               	movlb	1	; select bank1
  7609  16EE  0845               	movf	?___fttol^(0+128),w
  7610  16EF  3FC0               	movwi [0]fsr1
  7611  16F0  0846               	movf	(?___fttol+1)^(0+128),w
  7612  16F1  3FC1               	movwi [1]fsr1
  7613  16F2  0847               	movf	(?___fttol+2)^(0+128),w
  7614  16F3  3FC2               	movwi [2]fsr1
  7615  16F4  0848               	movf	(?___fttol+3)^(0+128),w
  7616  16F5  3FC3               	movwi [3]fsr1
  7617                           
  7618                           ;MOTORCONTROL.C: 66: if(pidParams2.pidoutput2<=0)
  7619  16F6  30E0               	movlw	224
  7620  16F7  0086               	movwf	6
  7621  16F8  3023               	movlw	35
  7622  16F9  0087               	movwf	7
  7623  16FA  3F40               	moviw [0]fsr1
  7624  16FB  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7625  16FC  3F41               	moviw [1]fsr1
  7626  16FD  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7627  16FE  3F42               	moviw [2]fsr1
  7628  16FF  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7629  1700  3F43               	moviw [3]fsr1
  7630  1701  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7631  1702  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7632  1703  3A80               	xorlw	128
  7633  1704  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  7634  1705  3000               	movlw	0
  7635  1706  3A80               	xorlw	128
  7636  1707  025F               	subwf	(??_Adaptive_base_pid+4)^(0+128),w
  7637  1708  1D03               	skipz
  7638  1709  2F14               	goto	u6063
  7639  170A  3000               	movlw	0
  7640  170B  025D               	subwf	(??_Adaptive_base_pid+2)^(0+128),w
  7641  170C  1D03               	skipz
  7642  170D  2F14               	goto	u6063
  7643  170E  3000               	movlw	0
  7644  170F  025C               	subwf	(??_Adaptive_base_pid+1)^(0+128),w
  7645  1710  1D03               	skipz
  7646  1711  2F14               	goto	u6063
  7647  1712  3001               	movlw	1
  7648  1713  025B               	subwf	??_Adaptive_base_pid^(0+128),w
  7649  1714                     u6063:	
  7650  1714  1803               	skipnc
  7651  1715  2F20               	goto	l4394
  7652                           
  7653                           ;MOTORCONTROL.C: 67: pidParams2.pidoutput2=0;
  7654  1716  30E0               	movlw	224
  7655  1717  0086               	movwf	6
  7656  1718  3023               	movlw	35
  7657  1719  0087               	movwf	7
  7658  171A  3000               	movlw	0
  7659  171B  3FC0               	movwi [0]fsr1
  7660  171C  3FC1               	movwi [1]fsr1
  7661  171D  3FC2               	movwi [2]fsr1
  7662  171E  3FC3               	movwi [3]fsr1
  7663  171F  2F64               	goto	l534
  7664  1720                     l4394:	
  7665                           
  7666                           ;MOTORCONTROL.C: 68: else if(pidParams2.pidoutput2>pidParams2.outmax2)
  7667  1720  30E0               	movlw	224
  7668  1721  0086               	movwf	6
  7669  1722  3023               	movlw	35
  7670  1723  0087               	movwf	7
  7671  1724  3F40               	moviw [0]fsr1
  7672  1725  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7673  1726  3F41               	moviw [1]fsr1
  7674  1727  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7675  1728  3F42               	moviw [2]fsr1
  7676  1729  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7677  172A  3F43               	moviw [3]fsr1
  7678  172B  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7679  172C  30C4               	movlw	196
  7680  172D  0086               	movwf	6
  7681  172E  3023               	movlw	35
  7682  172F  0087               	movwf	7
  7683  1730  3F40               	moviw [0]fsr1
  7684  1731  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  7685  1732  3F41               	moviw [1]fsr1
  7686  1733  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  7687  1734  3F42               	moviw [2]fsr1
  7688  1735  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  7689  1736  3F43               	moviw [3]fsr1
  7690  1737  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  7691  1738  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  7692  1739  3A80               	xorlw	128
  7693  173A  00E3               	movwf	(??_Adaptive_base_pid+8)^(0+128)
  7694  173B  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7695  173C  3A80               	xorlw	128
  7696  173D  0263               	subwf	(??_Adaptive_base_pid+8)^(0+128),w
  7697  173E  1D03               	skipz
  7698  173F  2F4A               	goto	u6073
  7699  1740  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7700  1741  0261               	subwf	(??_Adaptive_base_pid+6)^(0+128),w
  7701  1742  1D03               	skipz
  7702  1743  2F4A               	goto	u6073
  7703  1744  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7704  1745  0260               	subwf	(??_Adaptive_base_pid+5)^(0+128),w
  7705  1746  1D03               	skipz
  7706  1747  2F4A               	goto	u6073
  7707  1748  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7708  1749  025F               	subwf	(??_Adaptive_base_pid+4)^(0+128),w
  7709  174A                     u6073:	
  7710  174A  1803               	skipnc
  7711  174B  2F64               	goto	l534
  7712                           
  7713                           ;MOTORCONTROL.C: 69: pidParams2.pidoutput2=pidParams2.outmax2;
  7714  174C  30C4               	movlw	196
  7715  174D  0086               	movwf	6
  7716  174E  3023               	movlw	35
  7717  174F  0087               	movwf	7
  7718  1750  3F40               	moviw [0]fsr1
  7719  1751  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7720  1752  3F41               	moviw [1]fsr1
  7721  1753  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7722  1754  3F42               	moviw [2]fsr1
  7723  1755  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7724  1756  3F43               	moviw [3]fsr1
  7725  1757  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7726  1758  30E0               	movlw	224
  7727  1759  0086               	movwf	6
  7728  175A  3023               	movlw	35
  7729  175B  0087               	movwf	7
  7730  175C  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7731  175D  3FC0               	movwi [0]fsr1
  7732  175E  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7733  175F  3FC1               	movwi [1]fsr1
  7734  1760  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7735  1761  3FC2               	movwi [2]fsr1
  7736  1762  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7737  1763  3FC3               	movwi [3]fsr1
  7738  1764                     l534:	
  7739                           
  7740                           ;MOTORCONTROL.C: 73: disp4term=pidParams2.pidoutput2;
  7741  1764  30E0               	movlw	224
  7742  1765  0086               	movwf	6
  7743  1766  3023               	movlw	35
  7744  1767  0087               	movwf	7
  7745  1768  3F40               	moviw [0]fsr1
  7746  1769  0024               	movlb	4	; select bank4
  7747  176A  00B6               	movwf	_disp4term^(0+512)
  7748  176B  3F41               	moviw [1]fsr1
  7749  176C  00B7               	movwf	(_disp4term+1)^(0+512)
  7750                           
  7751                           ;MOTORCONTROL.C: 74: scaled_baseval2=(pidParams2.pidoutput2/scalefactor2);
  7752  176D  0023               	movlb	3	; select bank3
  7753  176E  086B               	movf	_scalefactor2^(0+384),w
  7754  176F  0021               	movlb	1	; select bank1
  7755  1770  00A0               	movwf	___aldiv@divisor^(0+128)
  7756  1771  0023               	movlb	3	; select bank3
  7757  1772  086C               	movf	(_scalefactor2+1)^(0+384),w
  7758  1773  0021               	movlb	1	; select bank1
  7759  1774  00A1               	movwf	(___aldiv@divisor^(0+128)+1)
  7760  1775  01A2               	clrf	(___aldiv@divisor^(0+128)+2)
  7761  1776  01A3               	clrf	(___aldiv@divisor^(0+128)+3)
  7762  1777  30E0               	movlw	224
  7763  1778  0086               	movwf	6
  7764  1779  3023               	movlw	35
  7765  177A  0087               	movwf	7
  7766  177B  3F40               	moviw [0]fsr1
  7767  177C  00A4               	movwf	___aldiv@dividend^(0+128)
  7768  177D  3F41               	moviw [1]fsr1
  7769  177E  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  7770  177F  3F42               	moviw [2]fsr1
  7771  1780  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  7772  1781  3F43               	moviw [3]fsr1
  7773  1782  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  7774  1783  319E  26F7  3194   	fcall	___aldiv
  7775  1786  0021               	movlb	1	; select bank1
  7776  1787  0821               	movf	(?___aldiv^(0+128)+1),w
  7777  1788  0022               	movlb	2	; select bank2
  7778  1789  01A7               	clrf	(_scaled_baseval2+1)^(0+256)
  7779  178A  07A7               	addwf	(_scaled_baseval2+1)^(0+256),f
  7780  178B  0021               	movlb	1	; select bank1
  7781  178C  0820               	movf	?___aldiv^(0+128),w
  7782  178D  0022               	movlb	2	; select bank2
  7783  178E  01A6               	clrf	_scaled_baseval2^(0+256)
  7784  178F  07A6               	addwf	_scaled_baseval2^(0+256),f
  7785                           
  7786                           ;MOTORCONTROL.C: 76: if(scaled_baseval2>maxfmspeed)
  7787  1790  0827               	movf	(_scaled_baseval2+1)^(0+256),w
  7788  1791  0023               	movlb	3	; select bank3
  7789  1792  0268               	subwf	(_maxfmspeed+1)^(0+384),w
  7790  1793  1D03               	skipz
  7791  1794  2F99               	goto	u6085
  7792  1795  0022               	movlb	2	; select bank2
  7793  1796  0826               	movf	_scaled_baseval2^(0+256),w
  7794  1797  0023               	movlb	3	; select bank3
  7795  1798  0267               	subwf	_maxfmspeed^(0+384),w
  7796  1799                     u6085:	
  7797  1799  1803               	skipnc
  7798  179A  2FA2               	goto	l4404
  7799                           
  7800                           ;MOTORCONTROL.C: 77: {
  7801                           ;MOTORCONTROL.C: 78: scaled_baseval2=maxfmspeed;
  7802  179B  0868               	movf	(_maxfmspeed+1)^(0+384),w
  7803  179C  0022               	movlb	2	; select bank2
  7804  179D  01A7               	clrf	(_scaled_baseval2+1)^(0+256)
  7805  179E  07A7               	addwf	(_scaled_baseval2+1)^(0+256),f
  7806  179F  0023               	movlb	3	; select bank3
  7807  17A0  0867               	movf	_maxfmspeed^(0+384),w
  7808  17A1  2FB5               	goto	L16
  7809  17A2                     l4404:	
  7810                           ;MOTORCONTROL.C: 79: }
  7811                           
  7812                           
  7813                           ;MOTORCONTROL.C: 80: else if(scaled_baseval2<minfmspeed)
  7814  17A2  0023               	movlb	3	; select bank3
  7815  17A3  086A               	movf	(_minfmspeed+1)^(0+384),w
  7816  17A4  0022               	movlb	2	; select bank2
  7817  17A5  0227               	subwf	(_scaled_baseval2+1)^(0+256),w
  7818  17A6  1D03               	skipz
  7819  17A7  2FAC               	goto	u6095
  7820  17A8  0023               	movlb	3	; select bank3
  7821  17A9  0869               	movf	_minfmspeed^(0+384),w
  7822  17AA  0022               	movlb	2	; select bank2
  7823  17AB  0226               	subwf	_scaled_baseval2^(0+256),w
  7824  17AC                     u6095:	
  7825  17AC  1803               	skipnc
  7826  17AD  2FB8               	goto	l4408
  7827                           
  7828                           ;MOTORCONTROL.C: 81: {
  7829                           ;MOTORCONTROL.C: 82: scaled_baseval2=minfmspeed;
  7830  17AE  0023               	movlb	3	; select bank3
  7831  17AF  086A               	movf	(_minfmspeed+1)^(0+384),w
  7832  17B0  0022               	movlb	2	; select bank2
  7833  17B1  01A7               	clrf	(_scaled_baseval2+1)^(0+256)
  7834  17B2  07A7               	addwf	(_scaled_baseval2+1)^(0+256),f
  7835  17B3  0023               	movlb	3	; select bank3
  7836  17B4  0869               	movf	_minfmspeed^(0+384),w
  7837  17B5                     L16:	
  7838  17B5  0022               	movlb	2	; select bank2
  7839  17B6  01A6               	clrf	_scaled_baseval2^(0+256)
  7840  17B7  07A6               	addwf	_scaled_baseval2^(0+256),f
  7841  17B8                     l4408:	
  7842                           
  7843                           ;MOTORCONTROL.C: 83: }
  7844                           ;MOTORCONTROL.C: 84: if(cyclestrtf==1 && closeloopf==1)
  7845  17B8  083B               	movf	_cyclestrtf^(0+256),w
  7846  17B9  3A01               	xorlw	1
  7847  17BA  1D03               	skipz
  7848  17BB  2FC8               	goto	l4414
  7849  17BC  0835               	movf	_closeloopf^(0+256),w
  7850  17BD  3A01               	xorlw	1
  7851  17BE  1D03               	skipz
  7852  17BF  2FC8               	goto	l4414
  7853                           
  7854                           ;MOTORCONTROL.C: 85: {
  7855                           ;MOTORCONTROL.C: 86: Update_PWM(scaled_baseval2);
  7856  17C0  0827               	movf	(_scaled_baseval2+1)^(0+256),w
  7857  17C1  0021               	movlb	1	; select bank1
  7858  17C2  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  7859  17C3  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  7860  17C4  0022               	movlb	2	; select bank2
  7861  17C5  0826               	movf	_scaled_baseval2^(0+256),w
  7862  17C6  0021               	movlb	1	; select bank1
  7863  17C7  2FE1               	goto	L17
  7864  17C8                     l4414:	
  7865                           ;MOTORCONTROL.C: 89: }
  7866                           
  7867                           
  7868                           ;MOTORCONTROL.C: 90: else if(cyclestrtf==0)
  7869  17C8  0022               	movlb	2	; select bank2
  7870  17C9  08BB               	movf	_cyclestrtf^(0+256),f
  7871  17CA  1D03               	skipz
  7872  17CB  2FE5               	goto	l4418
  7873                           
  7874                           ;MOTORCONTROL.C: 91: {
  7875                           ;MOTORCONTROL.C: 92: Update_PWM(scaled_baseval2*0);
  7876  17CC  0827               	movf	(_scaled_baseval2+1)^(0+256),w
  7877  17CD  0021               	movlb	1	; select bank1
  7878  17CE  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  7879  17CF  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  7880  17D0  0022               	movlb	2	; select bank2
  7881  17D1  0826               	movf	_scaled_baseval2^(0+256),w
  7882  17D2  0021               	movlb	1	; select bank1
  7883  17D3  01A0               	clrf	___wmul@multiplier^(0+128)
  7884  17D4  07A0               	addwf	___wmul@multiplier^(0+128),f
  7885  17D5  3000               	movlw	0
  7886  17D6  00A2               	movwf	___wmul@multiplicand^(0+128)
  7887  17D7  3000               	movlw	0
  7888  17D8  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  7889  17D9  3199  215A  3194   	fcall	___wmul
  7890  17DC  0021               	movlb	1	; select bank1
  7891  17DD  0821               	movf	(?___wmul+1)^(0+128),w
  7892  17DE  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  7893  17DF  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  7894  17E0  0820               	movf	?___wmul^(0+128),w
  7895  17E1                     L17:	
  7896  17E1  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  7897  17E2  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  7898  17E3  3199  2178         	fcall	_Update_PWM
  7899  17E5                     l4418:	
  7900                           
  7901                           ;MOTORCONTROL.C: 93: }
  7902                           ;MOTORCONTROL.C: 94: }
  7903                           ;MOTORCONTROL.C: 95: pidParams2.previous_error2 = pidParams2.error2;
  7904  17E5  309A               	movlw	154
  7905  17E6  0086               	movwf	6
  7906  17E7  3023               	movlw	35
  7907  17E8  0087               	movwf	7
  7908  17E9  314C               	addfsr 1,12
  7909  17EA  3F40               	moviw [0]fsr1
  7910  17EB  0021               	movlb	1	; select bank1
  7911  17EC  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7912  17ED  3F41               	moviw [1]fsr1
  7913  17EE  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7914  17EF  3F42               	moviw [2]fsr1
  7915  17F0  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7916  17F1  3F43               	moviw [3]fsr1
  7917  17F2  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7918  17F3  30D8               	movlw	216
  7919  17F4  0086               	movwf	6
  7920  17F5  3023               	movlw	35
  7921  17F6  0087               	movwf	7
  7922  17F7  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7923  17F8  3FC0               	movwi [0]fsr1
  7924  17F9  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7925  17FA  3FC1               	movwi [1]fsr1
  7926  17FB  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7927  17FC  3FC2               	movwi [2]fsr1
  7928  17FD  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7929  17FE  3FC3               	movwi [3]fsr1
  7930  17FF  0008               	return
  7931  1800                     __end_of_Adaptive_base_pid:	
  7932                           
  7933                           	psect	text23
  7934  195A                     __ptext23:	
  7935 ;; *************** function ___wmul *****************
  7936 ;; Defined at:
  7937 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;  multiplier      2    0[BANK1 ] unsigned int 
  7940 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;  product         2    4[BANK1 ] unsigned int 
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  2    0[BANK1 ] unsigned int 
  7945 ;; Registers used:
  7946 ;;		wreg, status,2, status,0
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7952 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7953 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7955 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;Total ram usage:        6 bytes
  7957 ;; Hardware stack levels used:    1
  7958 ;; Hardware stack levels required when called:    3
  7959 ;; This function calls:
  7960 ;;		Nothing
  7961 ;; This function is called by:
  7962 ;;		_Adaptive_base_pid
  7963 ;;		_main
  7964 ;;		_key_application
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           
  7969                           ;psect for function ___wmul
  7970  195A                     ___wmul:	
  7971                           
  7972                           ;incstack = 0
  7973                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7974  195A  0021               	movlb	1	; select bank1
  7975  195B  01A4               	clrf	___wmul@product^(0+128)
  7976  195C  01A5               	clrf	(___wmul@product+1)^(0+128)
  7977  195D                     l3700:	
  7978  195D  1C20               	btfss	___wmul@multiplier^(0+128),0
  7979  195E  2963               	goto	l893
  7980  195F  0822               	movf	___wmul@multiplicand^(0+128),w
  7981  1960  07A4               	addwf	___wmul@product^(0+128),f
  7982  1961  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  7983  1962  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  7984  1963                     l893:	
  7985  1963  3001               	movlw	1
  7986  1964                     u4565:	
  7987  1964  35A2               	lslf	___wmul@multiplicand^(0+128),f
  7988  1965  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  7989  1966  0B89               	decfsz	9,f
  7990  1967  2964               	goto	u4565
  7991  1968  3001               	movlw	1
  7992  1969                     u4575:	
  7993  1969  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  7994  196A  0CA0               	rrf	___wmul@multiplier^(0+128),f
  7995  196B  0B89               	decfsz	9,f
  7996  196C  2969               	goto	u4575
  7997  196D  0821               	movf	(___wmul@multiplier+1)^(0+128),w
  7998  196E  0420               	iorwf	___wmul@multiplier^(0+128),w
  7999  196F  1D03               	skipz
  8000  1970  295D               	goto	l3700
  8001  1971  0825               	movf	(___wmul@product+1)^(0+128),w
  8002  1972  01A1               	clrf	(?___wmul+1)^(0+128)
  8003  1973  07A1               	addwf	(?___wmul+1)^(0+128),f
  8004  1974  0824               	movf	___wmul@product^(0+128),w
  8005  1975  01A0               	clrf	?___wmul^(0+128)
  8006  1976  07A0               	addwf	?___wmul^(0+128),f
  8007  1977  0008               	return
  8008  1978                     __end_of___wmul:	
  8009                           
  8010                           	psect	text24
  8011  1077                     __ptext24:	
  8012 ;; *************** function ___fttol *****************
  8013 ;; Defined at:
  8014 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;  f1              3   37[BANK1 ] float 
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;  lval            4   46[BANK1 ] unsigned long 
  8019 ;;  exp1            1   50[BANK1 ] unsigned char 
  8020 ;;  sign1           1   45[BANK1 ] unsigned char 
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  4   37[BANK1 ] long 
  8023 ;; Registers used:
  8024 ;;		wreg, status,2, status,0
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8030 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;Total ram usage:       14 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; Hardware stack levels required when called:    3
  8037 ;; This function calls:
  8038 ;;		Nothing
  8039 ;; This function is called by:
  8040 ;;		_Adaptive_base_pid
  8041 ;;		_main
  8042 ;;		_Wirespeed
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046                           
  8047                           ;psect for function ___fttol
  8048  1077                     ___fttol:	
  8049                           
  8050                           ;incstack = 0
  8051                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8052  1077  0021               	movlb	1	; select bank1
  8053  1078  0845               	movf	___fttol@f1^(0+128),w
  8054  1079  00C9               	movwf	??___fttol^(0+128)
  8055  107A  0846               	movf	(___fttol@f1+1)^(0+128),w
  8056  107B  00CA               	movwf	(??___fttol^(0+128)+1)
  8057  107C  0847               	movf	(___fttol@f1+2)^(0+128),w
  8058  107D  00CB               	movwf	(??___fttol^(0+128)+2)
  8059  107E  1003               	clrc
  8060  107F  0D4A               	rlf	(??___fttol^(0+128)+1),w
  8061  1080  0D4B               	rlf	(??___fttol^(0+128)+2),w
  8062  1081  00CC               	movwf	(??___fttol+3)^(0+128)
  8063  1082  084C               	movf	(??___fttol+3)^(0+128),w
  8064  1083  00D2               	movwf	___fttol@exp1^(0+128)
  8065  1084  08D2               	movf	___fttol@exp1^(0+128),f
  8066  1085  1D03               	skipz
  8067  1086  2890               	goto	l3964
  8068  1087  3000               	movlw	0
  8069  1088  00C8               	movwf	(?___fttol+3)^(0+128)
  8070  1089  3000               	movlw	0
  8071  108A  00C7               	movwf	(?___fttol+2)^(0+128)
  8072  108B  3000               	movlw	0
  8073  108C  00C6               	movwf	(?___fttol+1)^(0+128)
  8074  108D  3000               	movlw	0
  8075  108E  00C5               	movwf	?___fttol^(0+128)
  8076  108F  0008               	return
  8077  1090                     l3964:	
  8078  1090  0845               	movf	___fttol@f1^(0+128),w
  8079  1091  00C9               	movwf	??___fttol^(0+128)
  8080  1092  0846               	movf	(___fttol@f1+1)^(0+128),w
  8081  1093  00CA               	movwf	(??___fttol^(0+128)+1)
  8082  1094  0847               	movf	(___fttol@f1+2)^(0+128),w
  8083  1095  00CB               	movwf	(??___fttol^(0+128)+2)
  8084  1096  3017               	movlw	23
  8085  1097                     u5205:	
  8086  1097  36CB               	lsrf	(??___fttol^(0+128)+2),f
  8087  1098  0CCA               	rrf	(??___fttol^(0+128)+1),f
  8088  1099  0CC9               	rrf	??___fttol^(0+128),f
  8089  109A  0B89               	decfsz	9,f
  8090  109B  2897               	goto	u5205
  8091  109C  0849               	movf	??___fttol^(0+128),w
  8092  109D  00CC               	movwf	(??___fttol+3)^(0+128)
  8093  109E  084C               	movf	(??___fttol+3)^(0+128),w
  8094  109F  00CD               	movwf	___fttol@sign1^(0+128)
  8095  10A0  17C6               	bsf	(___fttol@f1^(0+128)+1),7
  8096  10A1  30FF               	movlw	255
  8097  10A2  05C5               	andwf	___fttol@f1^(0+128),f
  8098  10A3  30FF               	movlw	255
  8099  10A4  05C6               	andwf	(___fttol@f1+1)^(0+128),f
  8100  10A5  3000               	movlw	0
  8101  10A6  05C7               	andwf	(___fttol@f1+2)^(0+128),f
  8102  10A7  0845               	movf	___fttol@f1^(0+128),w
  8103  10A8  00CE               	movwf	___fttol@lval^(0+128)
  8104  10A9  0846               	movf	(___fttol@f1+1)^(0+128),w
  8105  10AA  00CF               	movwf	(___fttol@lval^(0+128)+1)
  8106  10AB  0847               	movf	(___fttol@f1+2)^(0+128),w
  8107  10AC  00D0               	movwf	(___fttol@lval^(0+128)+2)
  8108  10AD  01D1               	clrf	(___fttol@lval^(0+128)+3)
  8109  10AE  308E               	movlw	142
  8110  10AF  02D2               	subwf	___fttol@exp1^(0+128),f
  8111  10B0  1FD2               	btfss	___fttol@exp1^(0+128),7
  8112  10B1  28CE               	goto	l3984
  8113  10B2  0852               	movf	___fttol@exp1^(0+128),w
  8114  10B3  3A80               	xorlw	128
  8115  10B4  3E8F               	addlw	143
  8116  10B5  1803               	skipnc
  8117  10B6  28C0               	goto	l3982
  8118  10B7  3000               	movlw	0
  8119  10B8  00C8               	movwf	(?___fttol+3)^(0+128)
  8120  10B9  3000               	movlw	0
  8121  10BA  00C7               	movwf	(?___fttol+2)^(0+128)
  8122  10BB  3000               	movlw	0
  8123  10BC  00C6               	movwf	(?___fttol+1)^(0+128)
  8124  10BD  3000               	movlw	0
  8125  10BE  00C5               	movwf	?___fttol^(0+128)
  8126  10BF  0008               	return
  8127  10C0                     l3982:	
  8128  10C0  3001               	movlw	1
  8129  10C1                     u5235:	
  8130  10C1  36D1               	lsrf	(___fttol@lval+3)^(0+128),f
  8131  10C2  0CD0               	rrf	(___fttol@lval+2)^(0+128),f
  8132  10C3  0CCF               	rrf	(___fttol@lval+1)^(0+128),f
  8133  10C4  0CCE               	rrf	___fttol@lval^(0+128),f
  8134  10C5  0B89               	decfsz	9,f
  8135  10C6  28C1               	goto	u5235
  8136  10C7  3001               	movlw	1
  8137  10C8  00C9               	movwf	??___fttol^(0+128)
  8138  10C9  0849               	movf	??___fttol^(0+128),w
  8139  10CA  07D2               	addwf	___fttol@exp1^(0+128),f
  8140  10CB  1903               	btfsc	3,2
  8141  10CC  28E7               	goto	l3994
  8142  10CD  28C0               	goto	l3982
  8143  10CE                     l3984:	
  8144  10CE  3018               	movlw	24
  8145  10CF  0252               	subwf	___fttol@exp1^(0+128),w
  8146  10D0  1C03               	skipc
  8147  10D1  28E4               	goto	l3992
  8148  10D2  3000               	movlw	0
  8149  10D3  00C8               	movwf	(?___fttol+3)^(0+128)
  8150  10D4  3000               	movlw	0
  8151  10D5  00C7               	movwf	(?___fttol+2)^(0+128)
  8152  10D6  3000               	movlw	0
  8153  10D7  00C6               	movwf	(?___fttol+1)^(0+128)
  8154  10D8  3000               	movlw	0
  8155  10D9  00C5               	movwf	?___fttol^(0+128)
  8156  10DA  0008               	return
  8157  10DB                     l3990:	
  8158  10DB  3001               	movlw	1
  8159  10DC                     u5265:	
  8160  10DC  35CE               	lslf	___fttol@lval^(0+128),f
  8161  10DD  0DCF               	rlf	(___fttol@lval+1)^(0+128),f
  8162  10DE  0DD0               	rlf	(___fttol@lval+2)^(0+128),f
  8163  10DF  0DD1               	rlf	(___fttol@lval+3)^(0+128),f
  8164  10E0  0B89               	decfsz	9,f
  8165  10E1  28DC               	goto	u5265
  8166  10E2  3001               	movlw	1
  8167  10E3  02D2               	subwf	___fttol@exp1^(0+128),f
  8168  10E4                     l3992:	
  8169  10E4  08D2               	movf	___fttol@exp1^(0+128),f
  8170  10E5  1D03               	skipz
  8171  10E6  28DB               	goto	l3990
  8172  10E7                     l3994:	
  8173  10E7  084D               	movf	___fttol@sign1^(0+128),w
  8174  10E8  1903               	btfsc	3,2
  8175  10E9  28F5               	goto	l3998
  8176  10EA  09CE               	comf	___fttol@lval^(0+128),f
  8177  10EB  09CF               	comf	(___fttol@lval+1)^(0+128),f
  8178  10EC  09D0               	comf	(___fttol@lval+2)^(0+128),f
  8179  10ED  09D1               	comf	(___fttol@lval+3)^(0+128),f
  8180  10EE  0ACE               	incf	___fttol@lval^(0+128),f
  8181  10EF  1903               	skipnz
  8182  10F0  0ACF               	incf	(___fttol@lval+1)^(0+128),f
  8183  10F1  1903               	skipnz
  8184  10F2  0AD0               	incf	(___fttol@lval+2)^(0+128),f
  8185  10F3  1903               	skipnz
  8186  10F4  0AD1               	incf	(___fttol@lval+3)^(0+128),f
  8187  10F5                     l3998:	
  8188  10F5  0851               	movf	(___fttol@lval+3)^(0+128),w
  8189  10F6  00C8               	movwf	(?___fttol+3)^(0+128)
  8190  10F7  0850               	movf	(___fttol@lval+2)^(0+128),w
  8191  10F8  00C7               	movwf	(?___fttol+2)^(0+128)
  8192  10F9  084F               	movf	(___fttol@lval+1)^(0+128),w
  8193  10FA  00C6               	movwf	(?___fttol+1)^(0+128)
  8194  10FB  084E               	movf	___fttol@lval^(0+128),w
  8195  10FC  00C5               	movwf	?___fttol^(0+128)
  8196  10FD  0008               	return
  8197  10FE                     __end_of___fttol:	
  8198                           
  8199                           	psect	text25
  8200  1893                     __ptext25:	
  8201 ;; *************** function ___ftneg *****************
  8202 ;; Defined at:
  8203 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;  f1              3    0[BANK1 ] float 
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;		None
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  3    0[BANK1 ] float 
  8210 ;; Registers used:
  8211 ;;		wreg
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8217 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8220 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8221 ;;Total ram usage:        3 bytes
  8222 ;; Hardware stack levels used:    1
  8223 ;; Hardware stack levels required when called:    3
  8224 ;; This function calls:
  8225 ;;		Nothing
  8226 ;; This function is called by:
  8227 ;;		_Adaptive_base_pid
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231                           
  8232                           ;psect for function ___ftneg
  8233  1893                     ___ftneg:	
  8234                           
  8235                           ;incstack = 0
  8236                           ; Regs used in ___ftneg: [wreg]
  8237  1893  0021               	movlb	1	; select bank1
  8238  1894  0822               	movf	(___ftneg@f1+2)^(0+128),w
  8239  1895  0421               	iorwf	(___ftneg@f1+1)^(0+128),w
  8240  1896  0420               	iorwf	___ftneg@f1^(0+128),w
  8241  1897  1903               	skipnz
  8242  1898  0008               	return
  8243  1899  3080               	movlw	128
  8244  189A  06A2               	xorwf	(___ftneg@f1+2)^(0+128),f
  8245  189B  0008               	return
  8246  189C                     __end_of___ftneg:	
  8247                           
  8248                           	psect	text26
  8249  1304                     __ptext26:	
  8250 ;; *************** function ___ftmul *****************
  8251 ;; Defined at:
  8252 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  f1              3   21[BANK1 ] float 
  8255 ;;  f2              3   24[BANK1 ] float 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  f3_as_produc    3   32[BANK1 ] unsigned um
  8258 ;;  sign            1   36[BANK1 ] unsigned char 
  8259 ;;  cntr            1   35[BANK1 ] unsigned char 
  8260 ;;  exp             1   31[BANK1 ] unsigned char 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  3   21[BANK1 ] float 
  8263 ;; Registers used:
  8264 ;;		wreg, status,2, status,0, pclath, cstack
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8270 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;Total ram usage:       16 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:    4
  8277 ;; This function calls:
  8278 ;;		___ftpack
  8279 ;; This function is called by:
  8280 ;;		_Adaptive_base_pid
  8281 ;;		_main
  8282 ;;		_Wirespeed
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           
  8287                           ;psect for function ___ftmul
  8288  1304                     ___ftmul:	
  8289                           
  8290                           ;incstack = 0
  8291                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8292  1304  0021               	movlb	1	; select bank1
  8293  1305  0835               	movf	___ftmul@f1^(0+128),w
  8294  1306  00BB               	movwf	??___ftmul^(0+128)
  8295  1307  0836               	movf	(___ftmul@f1+1)^(0+128),w
  8296  1308  00BC               	movwf	(??___ftmul^(0+128)+1)
  8297  1309  0837               	movf	(___ftmul@f1+2)^(0+128),w
  8298  130A  00BD               	movwf	(??___ftmul^(0+128)+2)
  8299  130B  1003               	clrc
  8300  130C  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  8301  130D  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  8302  130E  00BE               	movwf	(??___ftmul+3)^(0+128)
  8303  130F  083E               	movf	(??___ftmul+3)^(0+128),w
  8304  1310  00BF               	movwf	___ftmul@exp^(0+128)
  8305  1311  08BF               	movf	___ftmul@exp^(0+128),f
  8306  1312  1D03               	skipz
  8307  1313  2B1B               	goto	l3906
  8308  1314  3000               	movlw	0
  8309  1315  00B5               	movwf	?___ftmul^(0+128)
  8310  1316  3000               	movlw	0
  8311  1317  00B6               	movwf	(?___ftmul+1)^(0+128)
  8312  1318  3000               	movlw	0
  8313  1319  00B7               	movwf	(?___ftmul+2)^(0+128)
  8314  131A  0008               	return
  8315  131B                     l3906:	
  8316  131B  0838               	movf	___ftmul@f2^(0+128),w
  8317  131C  00BB               	movwf	??___ftmul^(0+128)
  8318  131D  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8319  131E  00BC               	movwf	(??___ftmul^(0+128)+1)
  8320  131F  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8321  1320  00BD               	movwf	(??___ftmul^(0+128)+2)
  8322  1321  1003               	clrc
  8323  1322  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  8324  1323  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  8325  1324  00BE               	movwf	(??___ftmul+3)^(0+128)
  8326  1325  083E               	movf	(??___ftmul+3)^(0+128),w
  8327  1326  00C4               	movwf	___ftmul@sign^(0+128)
  8328  1327  08C4               	movf	___ftmul@sign^(0+128),f
  8329  1328  1D03               	skipz
  8330  1329  2B31               	goto	l3912
  8331  132A  3000               	movlw	0
  8332  132B  00B5               	movwf	?___ftmul^(0+128)
  8333  132C  3000               	movlw	0
  8334  132D  00B6               	movwf	(?___ftmul+1)^(0+128)
  8335  132E  3000               	movlw	0
  8336  132F  00B7               	movwf	(?___ftmul+2)^(0+128)
  8337  1330  0008               	return
  8338  1331                     l3912:	
  8339  1331  0844               	movf	___ftmul@sign^(0+128),w
  8340  1332  3E7B               	addlw	123
  8341  1333  00BB               	movwf	??___ftmul^(0+128)
  8342  1334  083B               	movf	??___ftmul^(0+128),w
  8343  1335  07BF               	addwf	___ftmul@exp^(0+128),f
  8344  1336  0835               	movf	___ftmul@f1^(0+128),w
  8345  1337  00BB               	movwf	??___ftmul^(0+128)
  8346  1338  0836               	movf	(___ftmul@f1+1)^(0+128),w
  8347  1339  00BC               	movwf	(??___ftmul^(0+128)+1)
  8348  133A  0837               	movf	(___ftmul@f1+2)^(0+128),w
  8349  133B  00BD               	movwf	(??___ftmul^(0+128)+2)
  8350  133C  3010               	movlw	16
  8351  133D                     u5085:	
  8352  133D  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  8353  133E  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  8354  133F  0CBB               	rrf	??___ftmul^(0+128),f
  8355  1340  0B89               	decfsz	9,f
  8356  1341  2B3D               	goto	u5085
  8357  1342  083B               	movf	??___ftmul^(0+128),w
  8358  1343  00BE               	movwf	(??___ftmul+3)^(0+128)
  8359  1344  083E               	movf	(??___ftmul+3)^(0+128),w
  8360  1345  00C4               	movwf	___ftmul@sign^(0+128)
  8361  1346  0838               	movf	___ftmul@f2^(0+128),w
  8362  1347  00BB               	movwf	??___ftmul^(0+128)
  8363  1348  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8364  1349  00BC               	movwf	(??___ftmul^(0+128)+1)
  8365  134A  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8366  134B  00BD               	movwf	(??___ftmul^(0+128)+2)
  8367  134C  3010               	movlw	16
  8368  134D                     u5095:	
  8369  134D  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  8370  134E  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  8371  134F  0CBB               	rrf	??___ftmul^(0+128),f
  8372  1350  0B89               	decfsz	9,f
  8373  1351  2B4D               	goto	u5095
  8374  1352  083B               	movf	??___ftmul^(0+128),w
  8375  1353  00BE               	movwf	(??___ftmul+3)^(0+128)
  8376  1354  083E               	movf	(??___ftmul+3)^(0+128),w
  8377  1355  06C4               	xorwf	___ftmul@sign^(0+128),f
  8378  1356  3080               	movlw	128
  8379  1357  00BB               	movwf	??___ftmul^(0+128)
  8380  1358  083B               	movf	??___ftmul^(0+128),w
  8381  1359  05C4               	andwf	___ftmul@sign^(0+128),f
  8382  135A  17B6               	bsf	(___ftmul@f1^(0+128)+1),7
  8383  135B  17B9               	bsf	(___ftmul@f2^(0+128)+1),7
  8384  135C  30FF               	movlw	255
  8385  135D  05B8               	andwf	___ftmul@f2^(0+128),f
  8386  135E  30FF               	movlw	255
  8387  135F  05B9               	andwf	(___ftmul@f2+1)^(0+128),f
  8388  1360  3000               	movlw	0
  8389  1361  05BA               	andwf	(___ftmul@f2+2)^(0+128),f
  8390  1362  3000               	movlw	0
  8391  1363  00C0               	movwf	___ftmul@f3_as_product^(0+128)
  8392  1364  3000               	movlw	0
  8393  1365  00C1               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  8394  1366  3000               	movlw	0
  8395  1367  00C2               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  8396  1368  3007               	movlw	7
  8397  1369  00BB               	movwf	??___ftmul^(0+128)
  8398  136A  083B               	movf	??___ftmul^(0+128),w
  8399  136B  00C3               	movwf	___ftmul@cntr^(0+128)
  8400  136C                     l3924:	
  8401  136C  1C35               	btfss	___ftmul@f1^(0+128),0
  8402  136D  2B74               	goto	l3928
  8403  136E  0838               	movf	___ftmul@f2^(0+128),w
  8404  136F  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  8405  1370  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8406  1371  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8407  1372  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8408  1373  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8409  1374                     l3928:	
  8410  1374  3001               	movlw	1
  8411  1375                     u5115:	
  8412  1375  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  8413  1376  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  8414  1377  0CB5               	rrf	___ftmul@f1^(0+128),f
  8415  1378  0B89               	decfsz	9,f
  8416  1379  2B75               	goto	u5115
  8417  137A  3001               	movlw	1
  8418  137B                     u5125:	
  8419  137B  35B8               	lslf	___ftmul@f2^(0+128),f
  8420  137C  0DB9               	rlf	(___ftmul@f2+1)^(0+128),f
  8421  137D  0DBA               	rlf	(___ftmul@f2+2)^(0+128),f
  8422  137E  0B89               	decfsz	9,f
  8423  137F  2B7B               	goto	u5125
  8424  1380  3001               	movlw	1
  8425  1381  02C3               	subwf	___ftmul@cntr^(0+128),f
  8426  1382  1D03               	btfss	3,2
  8427  1383  2B6C               	goto	l3924
  8428  1384  3009               	movlw	9
  8429  1385  00BB               	movwf	??___ftmul^(0+128)
  8430  1386  083B               	movf	??___ftmul^(0+128),w
  8431  1387  00C3               	movwf	___ftmul@cntr^(0+128)
  8432  1388                     l3936:	
  8433  1388  1C35               	btfss	___ftmul@f1^(0+128),0
  8434  1389  2B90               	goto	l3940
  8435  138A  0838               	movf	___ftmul@f2^(0+128),w
  8436  138B  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  8437  138C  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8438  138D  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8439  138E  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8440  138F  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8441  1390                     l3940:	
  8442  1390  3001               	movlw	1
  8443  1391                     u5155:	
  8444  1391  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  8445  1392  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  8446  1393  0CB5               	rrf	___ftmul@f1^(0+128),f
  8447  1394  0B89               	decfsz	9,f
  8448  1395  2B91               	goto	u5155
  8449  1396  3001               	movlw	1
  8450  1397                     u5165:	
  8451  1397  36C2               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  8452  1398  0CC1               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  8453  1399  0CC0               	rrf	___ftmul@f3_as_product^(0+128),f
  8454  139A  0B89               	decfsz	9,f
  8455  139B  2B97               	goto	u5165
  8456  139C  3001               	movlw	1
  8457  139D  02C3               	subwf	___ftmul@cntr^(0+128),f
  8458  139E  1D03               	btfss	3,2
  8459  139F  2B88               	goto	l3936
  8460  13A0  0840               	movf	___ftmul@f3_as_product^(0+128),w
  8461  13A1  00A0               	movwf	___ftpack@arg^(0+128)
  8462  13A2  0841               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  8463  13A3  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  8464  13A4  0842               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  8465  13A5  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  8466  13A6  083F               	movf	___ftmul@exp^(0+128),w
  8467  13A7  00BB               	movwf	??___ftmul^(0+128)
  8468  13A8  083B               	movf	??___ftmul^(0+128),w
  8469  13A9  00A3               	movwf	___ftpack@exp^(0+128)
  8470  13AA  0844               	movf	___ftmul@sign^(0+128),w
  8471  13AB  00BC               	movwf	(??___ftmul+1)^(0+128)
  8472  13AC  083C               	movf	(??___ftmul+1)^(0+128),w
  8473  13AD  00A4               	movwf	___ftpack@sign^(0+128)
  8474  13AE  319C  24B3         	fcall	___ftpack
  8475  13B0  0021               	movlb	1	; select bank1
  8476  13B1  0820               	movf	?___ftpack^(0+128),w
  8477  13B2  00B5               	movwf	?___ftmul^(0+128)
  8478  13B3  0821               	movf	(?___ftpack+1)^(0+128),w
  8479  13B4  00B6               	movwf	(?___ftmul+1)^(0+128)
  8480  13B5  0822               	movf	(?___ftpack+2)^(0+128),w
  8481  13B6  00B7               	movwf	(?___ftmul+2)^(0+128)
  8482  13B7  0008               	return
  8483  13B8                     __end_of___ftmul:	
  8484                           
  8485                           	psect	text27
  8486  1A62                     __ptext27:	
  8487 ;; *************** function ___ftge *****************
  8488 ;; Defined at:
  8489 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftge.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;  ff1             3   16[BANK1 ] float 
  8492 ;;  ff2             3   19[BANK1 ] float 
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;		None
  8495 ;; Return value:  Size  Location     Type
  8496 ;;		None               void
  8497 ;; Registers used:
  8498 ;;		wreg, status,2, status,0
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8504 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8506 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8507 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8508 ;;Total ram usage:        9 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; Hardware stack levels required when called:    3
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		_Adaptive_base_pid
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           
  8519                           ;psect for function ___ftge
  8520  1A62                     ___ftge:	
  8521                           
  8522                           ;incstack = 0
  8523                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8524  1A62  0021               	movlb	1	; select bank1
  8525  1A63  1FB2               	btfss	(___ftge@ff1+2)^(0+128),7
  8526  1A64  2A79               	goto	l3884
  8527  1A65  0930               	comf	___ftge@ff1^(0+128),w
  8528  1A66  00B6               	movwf	??___ftge^(0+128)
  8529  1A67  0931               	comf	(___ftge@ff1+1)^(0+128),w
  8530  1A68  00B7               	movwf	(??___ftge^(0+128)+1)
  8531  1A69  0932               	comf	(___ftge@ff1+2)^(0+128),w
  8532  1A6A  00B8               	movwf	(??___ftge^(0+128)+2)
  8533  1A6B  0AB6               	incf	??___ftge^(0+128),f
  8534  1A6C  1903               	skipnz
  8535  1A6D  0AB7               	incf	(??___ftge^(0+128)+1),f
  8536  1A6E  1903               	skipnz
  8537  1A6F  0AB8               	incf	(??___ftge^(0+128)+2),f
  8538  1A70  3000               	movlw	0
  8539  1A71  0736               	addwf	??___ftge^(0+128),w
  8540  1A72  00B0               	movwf	___ftge@ff1^(0+128)
  8541  1A73  3000               	movlw	0
  8542  1A74  3D37               	addwfc	(??___ftge+1)^(0+128),w
  8543  1A75  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  8544  1A76  3080               	movlw	128
  8545  1A77  3D38               	addwfc	(??___ftge+2)^(0+128),w
  8546  1A78  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  8547  1A79                     l3884:	
  8548  1A79  1FB5               	btfss	(___ftge@ff2+2)^(0+128),7
  8549  1A7A  2A8F               	goto	l3888
  8550  1A7B  0933               	comf	___ftge@ff2^(0+128),w
  8551  1A7C  00B6               	movwf	??___ftge^(0+128)
  8552  1A7D  0934               	comf	(___ftge@ff2+1)^(0+128),w
  8553  1A7E  00B7               	movwf	(??___ftge^(0+128)+1)
  8554  1A7F  0935               	comf	(___ftge@ff2+2)^(0+128),w
  8555  1A80  00B8               	movwf	(??___ftge^(0+128)+2)
  8556  1A81  0AB6               	incf	??___ftge^(0+128),f
  8557  1A82  1903               	skipnz
  8558  1A83  0AB7               	incf	(??___ftge^(0+128)+1),f
  8559  1A84  1903               	skipnz
  8560  1A85  0AB8               	incf	(??___ftge^(0+128)+2),f
  8561  1A86  3000               	movlw	0
  8562  1A87  0736               	addwf	??___ftge^(0+128),w
  8563  1A88  00B3               	movwf	___ftge@ff2^(0+128)
  8564  1A89  3000               	movlw	0
  8565  1A8A  3D37               	addwfc	(??___ftge+1)^(0+128),w
  8566  1A8B  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  8567  1A8C  3080               	movlw	128
  8568  1A8D  3D38               	addwfc	(??___ftge+2)^(0+128),w
  8569  1A8E  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  8570  1A8F                     l3888:	
  8571  1A8F  3080               	movlw	128
  8572  1A90  06B2               	xorwf	(___ftge@ff1+2)^(0+128),f
  8573  1A91  3080               	movlw	128
  8574  1A92  06B5               	xorwf	(___ftge@ff2+2)^(0+128),f
  8575  1A93  0835               	movf	(___ftge@ff2+2)^(0+128),w
  8576  1A94  0232               	subwf	(___ftge@ff1+2)^(0+128),w
  8577  1A95  1D03               	skipz
  8578  1A96  0008               	return
  8579  1A97  0834               	movf	(___ftge@ff2+1)^(0+128),w
  8580  1A98  0231               	subwf	(___ftge@ff1+1)^(0+128),w
  8581  1A99  1D03               	skipz
  8582  1A9A  0008               	return
  8583  1A9B  0833               	movf	___ftge@ff2^(0+128),w
  8584  1A9C  0230               	subwf	___ftge@ff1^(0+128),w
  8585  1A9D  0008               	return
  8586  1A9E                     __end_of___ftge:	
  8587                           
  8588                           	psect	text28
  8589  11A7                     __ptext28:	
  8590 ;; *************** function ___ftdiv *****************
  8591 ;; Defined at:
  8592 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  f2              3   37[BANK1 ] float 
  8595 ;;  f1              3   40[BANK1 ] float 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;  f3              3   48[BANK1 ] float 
  8598 ;;  sign            1   52[BANK1 ] unsigned char 
  8599 ;;  exp             1   51[BANK1 ] unsigned char 
  8600 ;;  cntr            1   47[BANK1 ] unsigned char 
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  3   37[BANK1 ] float 
  8603 ;; Registers used:
  8604 ;;		wreg, status,2, status,0, pclath, cstack
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/0
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8610 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8611 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;Total ram usage:       16 bytes
  8615 ;; Hardware stack levels used:    1
  8616 ;; Hardware stack levels required when called:    4
  8617 ;; This function calls:
  8618 ;;		___ftpack
  8619 ;; This function is called by:
  8620 ;;		_Adaptive_base_pid
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624                           
  8625                           ;psect for function ___ftdiv
  8626  11A7                     ___ftdiv:	
  8627                           
  8628                           ;incstack = 0
  8629                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8630  11A7  0021               	movlb	1	; select bank1
  8631  11A8  0848               	movf	___ftdiv@f1^(0+128),w
  8632  11A9  00CB               	movwf	??___ftdiv^(0+128)
  8633  11AA  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  8634  11AB  00CC               	movwf	(??___ftdiv^(0+128)+1)
  8635  11AC  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  8636  11AD  00CD               	movwf	(??___ftdiv^(0+128)+2)
  8637  11AE  1003               	clrc
  8638  11AF  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  8639  11B0  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  8640  11B1  00CE               	movwf	(??___ftdiv+3)^(0+128)
  8641  11B2  084E               	movf	(??___ftdiv+3)^(0+128),w
  8642  11B3  00D3               	movwf	___ftdiv@exp^(0+128)
  8643  11B4  08D3               	movf	___ftdiv@exp^(0+128),f
  8644  11B5  1D03               	skipz
  8645  11B6  29BE               	goto	l3844
  8646  11B7  3000               	movlw	0
  8647  11B8  00C5               	movwf	?___ftdiv^(0+128)
  8648  11B9  3000               	movlw	0
  8649  11BA  00C6               	movwf	(?___ftdiv+1)^(0+128)
  8650  11BB  3000               	movlw	0
  8651  11BC  00C7               	movwf	(?___ftdiv+2)^(0+128)
  8652  11BD  0008               	return
  8653  11BE                     l3844:	
  8654  11BE  0845               	movf	___ftdiv@f2^(0+128),w
  8655  11BF  00CB               	movwf	??___ftdiv^(0+128)
  8656  11C0  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  8657  11C1  00CC               	movwf	(??___ftdiv^(0+128)+1)
  8658  11C2  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  8659  11C3  00CD               	movwf	(??___ftdiv^(0+128)+2)
  8660  11C4  1003               	clrc
  8661  11C5  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  8662  11C6  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  8663  11C7  00CE               	movwf	(??___ftdiv+3)^(0+128)
  8664  11C8  084E               	movf	(??___ftdiv+3)^(0+128),w
  8665  11C9  00D4               	movwf	___ftdiv@sign^(0+128)
  8666  11CA  08D4               	movf	___ftdiv@sign^(0+128),f
  8667  11CB  1D03               	skipz
  8668  11CC  29D4               	goto	l3850
  8669  11CD  3000               	movlw	0
  8670  11CE  00C5               	movwf	?___ftdiv^(0+128)
  8671  11CF  3000               	movlw	0
  8672  11D0  00C6               	movwf	(?___ftdiv+1)^(0+128)
  8673  11D1  3000               	movlw	0
  8674  11D2  00C7               	movwf	(?___ftdiv+2)^(0+128)
  8675  11D3  0008               	return
  8676  11D4                     l3850:	
  8677  11D4  3000               	movlw	0
  8678  11D5  00D0               	movwf	___ftdiv@f3^(0+128)
  8679  11D6  3000               	movlw	0
  8680  11D7  00D1               	movwf	(___ftdiv@f3+1)^(0+128)
  8681  11D8  3000               	movlw	0
  8682  11D9  00D2               	movwf	(___ftdiv@f3+2)^(0+128)
  8683  11DA  3089               	movlw	137
  8684  11DB  0754               	addwf	___ftdiv@sign^(0+128),w
  8685  11DC  00CB               	movwf	??___ftdiv^(0+128)
  8686  11DD  084B               	movf	??___ftdiv^(0+128),w
  8687  11DE  02D3               	subwf	___ftdiv@exp^(0+128),f
  8688  11DF  0848               	movf	___ftdiv@f1^(0+128),w
  8689  11E0  00CB               	movwf	??___ftdiv^(0+128)
  8690  11E1  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  8691  11E2  00CC               	movwf	(??___ftdiv^(0+128)+1)
  8692  11E3  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  8693  11E4  00CD               	movwf	(??___ftdiv^(0+128)+2)
  8694  11E5  3010               	movlw	16
  8695  11E6                     u4975:	
  8696  11E6  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  8697  11E7  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  8698  11E8  0CCB               	rrf	??___ftdiv^(0+128),f
  8699  11E9  0B89               	decfsz	9,f
  8700  11EA  29E6               	goto	u4975
  8701  11EB  084B               	movf	??___ftdiv^(0+128),w
  8702  11EC  00CE               	movwf	(??___ftdiv+3)^(0+128)
  8703  11ED  084E               	movf	(??___ftdiv+3)^(0+128),w
  8704  11EE  00D4               	movwf	___ftdiv@sign^(0+128)
  8705  11EF  0845               	movf	___ftdiv@f2^(0+128),w
  8706  11F0  00CB               	movwf	??___ftdiv^(0+128)
  8707  11F1  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  8708  11F2  00CC               	movwf	(??___ftdiv^(0+128)+1)
  8709  11F3  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  8710  11F4  00CD               	movwf	(??___ftdiv^(0+128)+2)
  8711  11F5  3010               	movlw	16
  8712  11F6                     u4985:	
  8713  11F6  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  8714  11F7  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  8715  11F8  0CCB               	rrf	??___ftdiv^(0+128),f
  8716  11F9  0B89               	decfsz	9,f
  8717  11FA  29F6               	goto	u4985
  8718  11FB  084B               	movf	??___ftdiv^(0+128),w
  8719  11FC  00CE               	movwf	(??___ftdiv+3)^(0+128)
  8720  11FD  084E               	movf	(??___ftdiv+3)^(0+128),w
  8721  11FE  06D4               	xorwf	___ftdiv@sign^(0+128),f
  8722  11FF  3080               	movlw	128
  8723  1200  00CB               	movwf	??___ftdiv^(0+128)
  8724  1201  084B               	movf	??___ftdiv^(0+128),w
  8725  1202  05D4               	andwf	___ftdiv@sign^(0+128),f
  8726  1203  17C9               	bsf	(___ftdiv@f1^(0+128)+1),7
  8727  1204  30FF               	movlw	255
  8728  1205  05C8               	andwf	___ftdiv@f1^(0+128),f
  8729  1206  30FF               	movlw	255
  8730  1207  05C9               	andwf	(___ftdiv@f1+1)^(0+128),f
  8731  1208  3000               	movlw	0
  8732  1209  05CA               	andwf	(___ftdiv@f1+2)^(0+128),f
  8733  120A  17C6               	bsf	(___ftdiv@f2^(0+128)+1),7
  8734  120B  30FF               	movlw	255
  8735  120C  05C5               	andwf	___ftdiv@f2^(0+128),f
  8736  120D  30FF               	movlw	255
  8737  120E  05C6               	andwf	(___ftdiv@f2+1)^(0+128),f
  8738  120F  3000               	movlw	0
  8739  1210  05C7               	andwf	(___ftdiv@f2+2)^(0+128),f
  8740  1211  3018               	movlw	24
  8741  1212  00CB               	movwf	??___ftdiv^(0+128)
  8742  1213  084B               	movf	??___ftdiv^(0+128),w
  8743  1214  00CF               	movwf	___ftdiv@cntr^(0+128)
  8744  1215                     l3864:	
  8745  1215  3001               	movlw	1
  8746  1216                     u4995:	
  8747  1216  35D0               	lslf	___ftdiv@f3^(0+128),f
  8748  1217  0DD1               	rlf	(___ftdiv@f3+1)^(0+128),f
  8749  1218  0DD2               	rlf	(___ftdiv@f3+2)^(0+128),f
  8750  1219  0B89               	decfsz	9,f
  8751  121A  2A16               	goto	u4995
  8752  121B  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  8753  121C  024A               	subwf	(___ftdiv@f1+2)^(0+128),w
  8754  121D  1D03               	skipz
  8755  121E  2A25               	goto	u5005
  8756  121F  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  8757  1220  0249               	subwf	(___ftdiv@f1+1)^(0+128),w
  8758  1221  1D03               	skipz
  8759  1222  2A25               	goto	u5005
  8760  1223  0845               	movf	___ftdiv@f2^(0+128),w
  8761  1224  0248               	subwf	___ftdiv@f1^(0+128),w
  8762  1225                     u5005:	
  8763  1225  1C03               	skipc
  8764  1226  2A2E               	goto	l3872
  8765  1227  0845               	movf	___ftdiv@f2^(0+128),w
  8766  1228  02C8               	subwf	___ftdiv@f1^(0+128),f
  8767  1229  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  8768  122A  3BC9               	subwfb	(___ftdiv@f1+1)^(0+128),f
  8769  122B  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  8770  122C  3BCA               	subwfb	(___ftdiv@f1+2)^(0+128),f
  8771  122D  1450               	bsf	___ftdiv@f3^(0+128),0
  8772  122E                     l3872:	
  8773  122E  3001               	movlw	1
  8774  122F                     u5015:	
  8775  122F  35C8               	lslf	___ftdiv@f1^(0+128),f
  8776  1230  0DC9               	rlf	(___ftdiv@f1+1)^(0+128),f
  8777  1231  0DCA               	rlf	(___ftdiv@f1+2)^(0+128),f
  8778  1232  0B89               	decfsz	9,f
  8779  1233  2A2F               	goto	u5015
  8780  1234  3001               	movlw	1
  8781  1235  02CF               	subwf	___ftdiv@cntr^(0+128),f
  8782  1236  1D03               	btfss	3,2
  8783  1237  2A15               	goto	l3864
  8784  1238  0850               	movf	___ftdiv@f3^(0+128),w
  8785  1239  00A0               	movwf	___ftpack@arg^(0+128)
  8786  123A  0851               	movf	(___ftdiv@f3+1)^(0+128),w
  8787  123B  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  8788  123C  0852               	movf	(___ftdiv@f3+2)^(0+128),w
  8789  123D  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  8790  123E  0853               	movf	___ftdiv@exp^(0+128),w
  8791  123F  00CB               	movwf	??___ftdiv^(0+128)
  8792  1240  084B               	movf	??___ftdiv^(0+128),w
  8793  1241  00A3               	movwf	___ftpack@exp^(0+128)
  8794  1242  0854               	movf	___ftdiv@sign^(0+128),w
  8795  1243  00CC               	movwf	(??___ftdiv+1)^(0+128)
  8796  1244  084C               	movf	(??___ftdiv+1)^(0+128),w
  8797  1245  00A4               	movwf	___ftpack@sign^(0+128)
  8798  1246  319C  24B3         	fcall	___ftpack
  8799  1248  0021               	movlb	1	; select bank1
  8800  1249  0820               	movf	?___ftpack^(0+128),w
  8801  124A  00C5               	movwf	?___ftdiv^(0+128)
  8802  124B  0821               	movf	(?___ftpack+1)^(0+128),w
  8803  124C  00C6               	movwf	(?___ftdiv+1)^(0+128)
  8804  124D  0822               	movf	(?___ftpack+2)^(0+128),w
  8805  124E  00C7               	movwf	(?___ftdiv+2)^(0+128)
  8806  124F  0008               	return
  8807  1250                     __end_of___ftdiv:	
  8808                           
  8809                           	psect	text29
  8810  090F                     __ptext29:	
  8811 ;; *************** function ___ftadd *****************
  8812 ;; Defined at:
  8813 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  f1              3    8[BANK1 ] float 
  8816 ;;  f2              3   11[BANK1 ] float 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;  exp1            1   20[BANK1 ] unsigned char 
  8819 ;;  exp2            1   19[BANK1 ] unsigned char 
  8820 ;;  sign            1   18[BANK1 ] unsigned char 
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  3    8[BANK1 ] float 
  8823 ;; Registers used:
  8824 ;;		wreg, status,2, status,0, pclath, cstack
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8830 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8831 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;Total ram usage:       13 bytes
  8835 ;; Hardware stack levels used:    1
  8836 ;; Hardware stack levels required when called:    4
  8837 ;; This function calls:
  8838 ;;		___ftpack
  8839 ;; This function is called by:
  8840 ;;		_Adaptive_base_pid
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           
  8845                           ;psect for function ___ftadd
  8846  090F                     ___ftadd:	
  8847                           
  8848                           ;incstack = 0
  8849                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8850  090F  0021               	movlb	1	; select bank1
  8851  0910  0828               	movf	___ftadd@f1^(0+128),w
  8852  0911  00AE               	movwf	??___ftadd^(0+128)
  8853  0912  0829               	movf	(___ftadd@f1+1)^(0+128),w
  8854  0913  00AF               	movwf	(??___ftadd^(0+128)+1)
  8855  0914  082A               	movf	(___ftadd@f1+2)^(0+128),w
  8856  0915  00B0               	movwf	(??___ftadd^(0+128)+2)
  8857  0916  1003               	clrc
  8858  0917  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  8859  0918  0D30               	rlf	(??___ftadd^(0+128)+2),w
  8860  0919  00B1               	movwf	(??___ftadd+3)^(0+128)
  8861  091A  0831               	movf	(??___ftadd+3)^(0+128),w
  8862  091B  00B4               	movwf	___ftadd@exp1^(0+128)
  8863  091C  082B               	movf	___ftadd@f2^(0+128),w
  8864  091D  00AE               	movwf	??___ftadd^(0+128)
  8865  091E  082C               	movf	(___ftadd@f2+1)^(0+128),w
  8866  091F  00AF               	movwf	(??___ftadd^(0+128)+1)
  8867  0920  082D               	movf	(___ftadd@f2+2)^(0+128),w
  8868  0921  00B0               	movwf	(??___ftadd^(0+128)+2)
  8869  0922  1003               	clrc
  8870  0923  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  8871  0924  0D30               	rlf	(??___ftadd^(0+128)+2),w
  8872  0925  00B1               	movwf	(??___ftadd+3)^(0+128)
  8873  0926  0831               	movf	(??___ftadd+3)^(0+128),w
  8874  0927  00B3               	movwf	___ftadd@exp2^(0+128)
  8875  0928  0834               	movf	___ftadd@exp1^(0+128),w
  8876  0929  1903               	btfsc	3,2
  8877  092A  2937               	goto	l3774
  8878  092B  0833               	movf	___ftadd@exp2^(0+128),w
  8879  092C  0234               	subwf	___ftadd@exp1^(0+128),w
  8880  092D  1803               	skipnc
  8881  092E  293E               	goto	l3778
  8882  092F  0334               	decf	___ftadd@exp1^(0+128),w
  8883  0930  3AFF               	xorlw	255
  8884  0931  0733               	addwf	___ftadd@exp2^(0+128),w
  8885  0932  00AE               	movwf	??___ftadd^(0+128)
  8886  0933  3019               	movlw	25
  8887  0934  022E               	subwf	??___ftadd^(0+128),w
  8888  0935  1C03               	skipc
  8889  0936  293E               	goto	l3778
  8890  0937                     l3774:	
  8891  0937  082B               	movf	___ftadd@f2^(0+128),w
  8892  0938  00A8               	movwf	?___ftadd^(0+128)
  8893  0939  082C               	movf	(___ftadd@f2+1)^(0+128),w
  8894  093A  00A9               	movwf	(?___ftadd+1)^(0+128)
  8895  093B  082D               	movf	(___ftadd@f2+2)^(0+128),w
  8896  093C  00AA               	movwf	(?___ftadd+2)^(0+128)
  8897  093D  0008               	return
  8898  093E                     l3778:	
  8899  093E  0833               	movf	___ftadd@exp2^(0+128),w
  8900  093F  1903               	btfsc	3,2
  8901  0940  0008               	return
  8902  0941  0834               	movf	___ftadd@exp1^(0+128),w
  8903  0942  0233               	subwf	___ftadd@exp2^(0+128),w
  8904  0943  1803               	skipnc
  8905  0944  294D               	goto	l3784
  8906  0945  0333               	decf	___ftadd@exp2^(0+128),w
  8907  0946  3AFF               	xorlw	255
  8908  0947  0734               	addwf	___ftadd@exp1^(0+128),w
  8909  0948  00AE               	movwf	??___ftadd^(0+128)
  8910  0949  3019               	movlw	25
  8911  094A  022E               	subwf	??___ftadd^(0+128),w
  8912  094B  1803               	btfsc	3,0
  8913  094C  0008               	return
  8914  094D                     l3784:	
  8915  094D  3006               	movlw	6
  8916  094E  00AE               	movwf	??___ftadd^(0+128)
  8917  094F  082E               	movf	??___ftadd^(0+128),w
  8918  0950  00B2               	movwf	___ftadd@sign^(0+128)
  8919  0951  1BAA               	btfsc	(___ftadd@f1+2)^(0+128),7
  8920  0952  17B2               	bsf	___ftadd@sign^(0+128),7
  8921  0953  1BAD               	btfsc	(___ftadd@f2+2)^(0+128),7
  8922  0954  1732               	bsf	___ftadd@sign^(0+128),6
  8923  0955  17A9               	bsf	(___ftadd@f1^(0+128)+1),7
  8924  0956  30FF               	movlw	255
  8925  0957  05A8               	andwf	___ftadd@f1^(0+128),f
  8926  0958  30FF               	movlw	255
  8927  0959  05A9               	andwf	(___ftadd@f1+1)^(0+128),f
  8928  095A  3000               	movlw	0
  8929  095B  05AA               	andwf	(___ftadd@f1+2)^(0+128),f
  8930  095C  17AC               	bsf	(___ftadd@f2^(0+128)+1),7
  8931  095D  30FF               	movlw	255
  8932  095E  05AB               	andwf	___ftadd@f2^(0+128),f
  8933  095F  30FF               	movlw	255
  8934  0960  05AC               	andwf	(___ftadd@f2+1)^(0+128),f
  8935  0961  3000               	movlw	0
  8936  0962  05AD               	andwf	(___ftadd@f2+2)^(0+128),f
  8937  0963  0833               	movf	___ftadd@exp2^(0+128),w
  8938  0964  0234               	subwf	___ftadd@exp1^(0+128),w
  8939  0965  1803               	skipnc
  8940  0966  2989               	goto	l3806
  8941  0967                     l3796:	
  8942  0967  3001               	movlw	1
  8943  0968                     u4815:	
  8944  0968  35AB               	lslf	___ftadd@f2^(0+128),f
  8945  0969  0DAC               	rlf	(___ftadd@f2+1)^(0+128),f
  8946  096A  0DAD               	rlf	(___ftadd@f2+2)^(0+128),f
  8947  096B  0B89               	decfsz	9,f
  8948  096C  2968               	goto	u4815
  8949  096D  3001               	movlw	1
  8950  096E  02B3               	subwf	___ftadd@exp2^(0+128),f
  8951  096F  0833               	movf	___ftadd@exp2^(0+128),w
  8952  0970  0634               	xorwf	___ftadd@exp1^(0+128),w
  8953  0971  1903               	skipnz
  8954  0972  2984               	goto	l3804
  8955  0973  3001               	movlw	1
  8956  0974  02B2               	subwf	___ftadd@sign^(0+128),f
  8957  0975  0832               	movf	___ftadd@sign^(0+128),w
  8958  0976  3907               	andlw	7
  8959  0977  1903               	btfsc	3,2
  8960  0978  2984               	goto	l3804
  8961  0979  2967               	goto	l3796
  8962  097A                     l3802:	
  8963  097A  3001               	movlw	1
  8964  097B                     u4845:	
  8965  097B  36AA               	lsrf	(___ftadd@f1+2)^(0+128),f
  8966  097C  0CA9               	rrf	(___ftadd@f1+1)^(0+128),f
  8967  097D  0CA8               	rrf	___ftadd@f1^(0+128),f
  8968  097E  0B89               	decfsz	9,f
  8969  097F  297B               	goto	u4845
  8970  0980  3001               	movlw	1
  8971  0981  00AE               	movwf	??___ftadd^(0+128)
  8972  0982  082E               	movf	??___ftadd^(0+128),w
  8973  0983  07B4               	addwf	___ftadd@exp1^(0+128),f
  8974  0984                     l3804:	
  8975  0984  0834               	movf	___ftadd@exp1^(0+128),w
  8976  0985  0633               	xorwf	___ftadd@exp2^(0+128),w
  8977  0986  1903               	btfsc	3,2
  8978  0987  29AE               	goto	l1083
  8979  0988  297A               	goto	l3802
  8980  0989                     l3806:	
  8981  0989  0834               	movf	___ftadd@exp1^(0+128),w
  8982  098A  0233               	subwf	___ftadd@exp2^(0+128),w
  8983  098B  1803               	skipnc
  8984  098C  29AE               	goto	l1083
  8985  098D                     l3808:	
  8986  098D  3001               	movlw	1
  8987  098E                     u4875:	
  8988  098E  35A8               	lslf	___ftadd@f1^(0+128),f
  8989  098F  0DA9               	rlf	(___ftadd@f1+1)^(0+128),f
  8990  0990  0DAA               	rlf	(___ftadd@f1+2)^(0+128),f
  8991  0991  0B89               	decfsz	9,f
  8992  0992  298E               	goto	u4875
  8993  0993  3001               	movlw	1
  8994  0994  02B4               	subwf	___ftadd@exp1^(0+128),f
  8995  0995  0833               	movf	___ftadd@exp2^(0+128),w
  8996  0996  0634               	xorwf	___ftadd@exp1^(0+128),w
  8997  0997  1903               	skipnz
  8998  0998  29AA               	goto	l3816
  8999  0999  3001               	movlw	1
  9000  099A  02B2               	subwf	___ftadd@sign^(0+128),f
  9001  099B  0832               	movf	___ftadd@sign^(0+128),w
  9002  099C  3907               	andlw	7
  9003  099D  1903               	btfsc	3,2
  9004  099E  29AA               	goto	l3816
  9005  099F  298D               	goto	l3808
  9006  09A0                     l3814:	
  9007  09A0  3001               	movlw	1
  9008  09A1                     u4905:	
  9009  09A1  36AD               	lsrf	(___ftadd@f2+2)^(0+128),f
  9010  09A2  0CAC               	rrf	(___ftadd@f2+1)^(0+128),f
  9011  09A3  0CAB               	rrf	___ftadd@f2^(0+128),f
  9012  09A4  0B89               	decfsz	9,f
  9013  09A5  29A1               	goto	u4905
  9014  09A6  3001               	movlw	1
  9015  09A7  00AE               	movwf	??___ftadd^(0+128)
  9016  09A8  082E               	movf	??___ftadd^(0+128),w
  9017  09A9  07B3               	addwf	___ftadd@exp2^(0+128),f
  9018  09AA                     l3816:	
  9019  09AA  0834               	movf	___ftadd@exp1^(0+128),w
  9020  09AB  0633               	xorwf	___ftadd@exp2^(0+128),w
  9021  09AC  1D03               	skipz
  9022  09AD  29A0               	goto	l3814
  9023  09AE                     l1083:	
  9024  09AE  1FB2               	btfss	___ftadd@sign^(0+128),7
  9025  09AF  29C0               	goto	l3820
  9026  09B0  30FF               	movlw	255
  9027  09B1  06A8               	xorwf	___ftadd@f1^(0+128),f
  9028  09B2  30FF               	movlw	255
  9029  09B3  06A9               	xorwf	(___ftadd@f1+1)^(0+128),f
  9030  09B4  30FF               	movlw	255
  9031  09B5  06AA               	xorwf	(___ftadd@f1+2)^(0+128),f
  9032  09B6  3001               	movlw	1
  9033  09B7  07A8               	addwf	___ftadd@f1^(0+128),f
  9034  09B8  3000               	movlw	0
  9035  09B9  1803               	skipnc
  9036  09BA  3001               	movlw	1
  9037  09BB  07A9               	addwf	(___ftadd@f1+1)^(0+128),f
  9038  09BC  3000               	movlw	0
  9039  09BD  1803               	skipnc
  9040  09BE  3001               	movlw	1
  9041  09BF  07AA               	addwf	(___ftadd@f1+2)^(0+128),f
  9042  09C0                     l3820:	
  9043  09C0  1F32               	btfss	___ftadd@sign^(0+128),6
  9044  09C1  29D2               	goto	l3824
  9045  09C2  30FF               	movlw	255
  9046  09C3  06AB               	xorwf	___ftadd@f2^(0+128),f
  9047  09C4  30FF               	movlw	255
  9048  09C5  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9049  09C6  30FF               	movlw	255
  9050  09C7  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9051  09C8  3001               	movlw	1
  9052  09C9  07AB               	addwf	___ftadd@f2^(0+128),f
  9053  09CA  3000               	movlw	0
  9054  09CB  1803               	skipnc
  9055  09CC  3001               	movlw	1
  9056  09CD  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9057  09CE  3000               	movlw	0
  9058  09CF  1803               	skipnc
  9059  09D0  3001               	movlw	1
  9060  09D1  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9061  09D2                     l3824:	
  9062  09D2  01B2               	clrf	___ftadd@sign^(0+128)
  9063  09D3  0828               	movf	___ftadd@f1^(0+128),w
  9064  09D4  07AB               	addwf	___ftadd@f2^(0+128),f
  9065  09D5  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9066  09D6  3DAC               	addwfc	(___ftadd@f2+1)^(0+128),f
  9067  09D7  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9068  09D8  3DAD               	addwfc	(___ftadd@f2+2)^(0+128),f
  9069  09D9  1FAD               	btfss	(___ftadd@f2+2)^(0+128),7
  9070  09DA  29ED               	goto	l3834
  9071  09DB  30FF               	movlw	255
  9072  09DC  06AB               	xorwf	___ftadd@f2^(0+128),f
  9073  09DD  30FF               	movlw	255
  9074  09DE  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9075  09DF  30FF               	movlw	255
  9076  09E0  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9077  09E1  3001               	movlw	1
  9078  09E2  07AB               	addwf	___ftadd@f2^(0+128),f
  9079  09E3  3000               	movlw	0
  9080  09E4  1803               	skipnc
  9081  09E5  3001               	movlw	1
  9082  09E6  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9083  09E7  3000               	movlw	0
  9084  09E8  1803               	skipnc
  9085  09E9  3001               	movlw	1
  9086  09EA  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9087  09EB  01B2               	clrf	___ftadd@sign^(0+128)
  9088  09EC  0AB2               	incf	___ftadd@sign^(0+128),f
  9089  09ED                     l3834:	
  9090  09ED  082B               	movf	___ftadd@f2^(0+128),w
  9091  09EE  00A0               	movwf	___ftpack@arg^(0+128)
  9092  09EF  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9093  09F0  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9094  09F1  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9095  09F2  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9096  09F3  0834               	movf	___ftadd@exp1^(0+128),w
  9097  09F4  00AE               	movwf	??___ftadd^(0+128)
  9098  09F5  082E               	movf	??___ftadd^(0+128),w
  9099  09F6  00A3               	movwf	___ftpack@exp^(0+128)
  9100  09F7  0832               	movf	___ftadd@sign^(0+128),w
  9101  09F8  00AF               	movwf	(??___ftadd+1)^(0+128)
  9102  09F9  082F               	movf	(??___ftadd+1)^(0+128),w
  9103  09FA  00A4               	movwf	___ftpack@sign^(0+128)
  9104  09FB  319C  24B3         	fcall	___ftpack
  9105  09FD  0021               	movlb	1	; select bank1
  9106  09FE  0820               	movf	?___ftpack^(0+128),w
  9107  09FF  00A8               	movwf	?___ftadd^(0+128)
  9108  0A00  0821               	movf	(?___ftpack+1)^(0+128),w
  9109  0A01  00A9               	movwf	(?___ftadd+1)^(0+128)
  9110  0A02  0822               	movf	(?___ftpack+2)^(0+128),w
  9111  0A03  00AA               	movwf	(?___ftadd+2)^(0+128)
  9112  0A04  0008               	return
  9113  0A05                     __end_of___ftadd:	
  9114                           
  9115                           	psect	text30
  9116  1A9E                     __ptext30:	
  9117 ;; *************** function ___altoft *****************
  9118 ;; Defined at:
  9119 ;;		line 42 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\altoft.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;  c               4    8[BANK1 ] long 
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;  sign            1   15[BANK1 ] unsigned char 
  9124 ;;  exp             1   14[BANK1 ] unsigned char 
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  3    8[BANK1 ] float 
  9127 ;; Registers used:
  9128 ;;		wreg, status,2, status,0, pclath, cstack
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9134 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9135 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9136 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9137 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9138 ;;Total ram usage:        8 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:    4
  9141 ;; This function calls:
  9142 ;;		___ftpack
  9143 ;; This function is called by:
  9144 ;;		_Adaptive_base_pid
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           
  9149                           ;psect for function ___altoft
  9150  1A9E                     ___altoft:	
  9151                           
  9152                           ;incstack = 0
  9153                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  9154  1A9E  0021               	movlb	1	; select bank1
  9155  1A9F  01AF               	clrf	___altoft@sign^(0+128)
  9156  1AA0  308E               	movlw	142
  9157  1AA1  00AC               	movwf	??___altoft^(0+128)
  9158  1AA2  082C               	movf	??___altoft^(0+128),w
  9159  1AA3  00AE               	movwf	___altoft@exp^(0+128)
  9160  1AA4  1FAB               	btfss	(___altoft@c+3)^(0+128),7
  9161  1AA5  2AB3               	goto	l3760
  9162  1AA6  09A8               	comf	___altoft@c^(0+128),f
  9163  1AA7  09A9               	comf	(___altoft@c+1)^(0+128),f
  9164  1AA8  09AA               	comf	(___altoft@c+2)^(0+128),f
  9165  1AA9  09AB               	comf	(___altoft@c+3)^(0+128),f
  9166  1AAA  0AA8               	incf	___altoft@c^(0+128),f
  9167  1AAB  1903               	skipnz
  9168  1AAC  0AA9               	incf	(___altoft@c+1)^(0+128),f
  9169  1AAD  1903               	skipnz
  9170  1AAE  0AAA               	incf	(___altoft@c+2)^(0+128),f
  9171  1AAF  1903               	skipnz
  9172  1AB0  0AAB               	incf	(___altoft@c+3)^(0+128),f
  9173  1AB1  01AF               	clrf	___altoft@sign^(0+128)
  9174  1AB2  0AAF               	incf	___altoft@sign^(0+128),f
  9175  1AB3                     l3760:	
  9176  1AB3  30FF               	movlw	255
  9177  1AB4  052B               	andwf	(___altoft@c+3)^(0+128),w
  9178  1AB5  1903               	btfsc	3,2
  9179  1AB6  2AC3               	goto	l3762
  9180  1AB7  3001               	movlw	1
  9181  1AB8                     u4705:	
  9182  1AB8  36AB               	lsrf	(___altoft@c+3)^(0+128),f
  9183  1AB9  0CAA               	rrf	(___altoft@c+2)^(0+128),f
  9184  1ABA  0CA9               	rrf	(___altoft@c+1)^(0+128),f
  9185  1ABB  0CA8               	rrf	___altoft@c^(0+128),f
  9186  1ABC  0B89               	decfsz	9,f
  9187  1ABD  2AB8               	goto	u4705
  9188  1ABE  3001               	movlw	1
  9189  1ABF  00AC               	movwf	??___altoft^(0+128)
  9190  1AC0  082C               	movf	??___altoft^(0+128),w
  9191  1AC1  07AE               	addwf	___altoft@exp^(0+128),f
  9192  1AC2  2AB3               	goto	l3760
  9193  1AC3                     l3762:	
  9194  1AC3  0828               	movf	___altoft@c^(0+128),w
  9195  1AC4  00A0               	movwf	___ftpack@arg^(0+128)
  9196  1AC5  0829               	movf	(___altoft@c+1)^(0+128),w
  9197  1AC6  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9198  1AC7  082A               	movf	(___altoft@c+2)^(0+128),w
  9199  1AC8  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9200  1AC9  082E               	movf	___altoft@exp^(0+128),w
  9201  1ACA  00AC               	movwf	??___altoft^(0+128)
  9202  1ACB  082C               	movf	??___altoft^(0+128),w
  9203  1ACC  00A3               	movwf	___ftpack@exp^(0+128)
  9204  1ACD  082F               	movf	___altoft@sign^(0+128),w
  9205  1ACE  00AD               	movwf	(??___altoft+1)^(0+128)
  9206  1ACF  082D               	movf	(??___altoft+1)^(0+128),w
  9207  1AD0  00A4               	movwf	___ftpack@sign^(0+128)
  9208  1AD1  319C  24B3         	fcall	___ftpack
  9209  1AD3  0021               	movlb	1	; select bank1
  9210  1AD4  0820               	movf	?___ftpack^(0+128),w
  9211  1AD5  00A8               	movwf	?___altoft^(0+128)
  9212  1AD6  0821               	movf	(?___ftpack+1)^(0+128),w
  9213  1AD7  00A9               	movwf	(?___altoft+1)^(0+128)
  9214  1AD8  0822               	movf	(?___ftpack+2)^(0+128),w
  9215  1AD9  00AA               	movwf	(?___altoft+2)^(0+128)
  9216  1ADA  0008               	return
  9217  1ADB                     __end_of___altoft:	
  9218                           
  9219                           	psect	text31
  9220  1CB3                     __ptext31:	
  9221 ;; *************** function ___ftpack *****************
  9222 ;; Defined at:
  9223 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  arg             3    0[BANK1 ] unsigned um
  9226 ;;  exp             1    3[BANK1 ] unsigned char 
  9227 ;;  sign            1    4[BANK1 ] unsigned char 
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;		None
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  3    0[BANK1 ] float 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, status,0
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9239 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;Total ram usage:        8 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:    3
  9246 ;; This function calls:
  9247 ;;		Nothing
  9248 ;; This function is called by:
  9249 ;;		___altoft
  9250 ;;		___ftadd
  9251 ;;		___ftdiv
  9252 ;;		___ftmul
  9253 ;;		___lwtoft
  9254 ;; This function uses a non-reentrant model
  9255 ;;
  9256                           
  9257                           
  9258                           ;psect for function ___ftpack
  9259  1CB3                     ___ftpack:	
  9260                           
  9261                           ;incstack = 0
  9262                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9263  1CB3  0021               	movlb	1	; select bank1
  9264  1CB4  0823               	movf	___ftpack@exp^(0+128),w
  9265  1CB5  1903               	btfsc	3,2
  9266  1CB6  2CBC               	goto	l3544
  9267  1CB7  0822               	movf	(___ftpack@arg+2)^(0+128),w
  9268  1CB8  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  9269  1CB9  0420               	iorwf	___ftpack@arg^(0+128),w
  9270  1CBA  1D03               	skipz
  9271  1CBB  2CCD               	goto	l3550
  9272  1CBC                     l3544:	
  9273  1CBC  3000               	movlw	0
  9274  1CBD  00A0               	movwf	?___ftpack^(0+128)
  9275  1CBE  3000               	movlw	0
  9276  1CBF  00A1               	movwf	(?___ftpack+1)^(0+128)
  9277  1CC0  3000               	movlw	0
  9278  1CC1  00A2               	movwf	(?___ftpack+2)^(0+128)
  9279  1CC2  0008               	return
  9280  1CC3                     l3548:	
  9281  1CC3  3001               	movlw	1
  9282  1CC4  00A5               	movwf	??___ftpack^(0+128)
  9283  1CC5  0825               	movf	??___ftpack^(0+128),w
  9284  1CC6  07A3               	addwf	___ftpack@exp^(0+128),f
  9285  1CC7  3001               	movlw	1
  9286  1CC8                     u4305:	
  9287  1CC8  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  9288  1CC9  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  9289  1CCA  0CA0               	rrf	___ftpack@arg^(0+128),f
  9290  1CCB  0B89               	decfsz	9,f
  9291  1CCC  2CC8               	goto	u4305
  9292  1CCD                     l3550:	
  9293  1CCD  30FE               	movlw	254
  9294  1CCE  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  9295  1CCF  1903               	btfsc	3,2
  9296  1CD0  2CE6               	goto	l1054
  9297  1CD1  2CC3               	goto	l3548
  9298  1CD2                     l3552:	
  9299  1CD2  3001               	movlw	1
  9300  1CD3  00A5               	movwf	??___ftpack^(0+128)
  9301  1CD4  0825               	movf	??___ftpack^(0+128),w
  9302  1CD5  07A3               	addwf	___ftpack@exp^(0+128),f
  9303  1CD6  3001               	movlw	1
  9304  1CD7  07A0               	addwf	___ftpack@arg^(0+128),f
  9305  1CD8  3000               	movlw	0
  9306  1CD9  1803               	skipnc
  9307  1CDA  3001               	movlw	1
  9308  1CDB  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  9309  1CDC  3000               	movlw	0
  9310  1CDD  1803               	skipnc
  9311  1CDE  3001               	movlw	1
  9312  1CDF  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  9313  1CE0  3001               	movlw	1
  9314  1CE1                     u4325:	
  9315  1CE1  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  9316  1CE2  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  9317  1CE3  0CA0               	rrf	___ftpack@arg^(0+128),f
  9318  1CE4  0B89               	decfsz	9,f
  9319  1CE5  2CE1               	goto	u4325
  9320  1CE6                     l1054:	
  9321  1CE6  30FF               	movlw	255
  9322  1CE7  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  9323  1CE8  1903               	btfsc	3,2
  9324  1CE9  2CF3               	goto	l3560
  9325  1CEA  2CD2               	goto	l3552
  9326  1CEB                     l3558:	
  9327  1CEB  3001               	movlw	1
  9328  1CEC  02A3               	subwf	___ftpack@exp^(0+128),f
  9329  1CED  3001               	movlw	1
  9330  1CEE                     u4345:	
  9331  1CEE  35A0               	lslf	___ftpack@arg^(0+128),f
  9332  1CEF  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  9333  1CF0  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  9334  1CF1  0B89               	decfsz	9,f
  9335  1CF2  2CEE               	goto	u4345
  9336  1CF3                     l3560:	
  9337  1CF3  1FA1               	btfss	(___ftpack@arg+1)^(0+128),7
  9338  1CF4  2CEB               	goto	l3558
  9339  1CF5  1823               	btfsc	___ftpack@exp^(0+128),0
  9340  1CF6  2CFD               	goto	l1060
  9341  1CF7  30FF               	movlw	255
  9342  1CF8  05A0               	andwf	___ftpack@arg^(0+128),f
  9343  1CF9  307F               	movlw	127
  9344  1CFA  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  9345  1CFB  30FF               	movlw	255
  9346  1CFC  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  9347  1CFD                     l1060:	
  9348  1CFD  1003               	clrc
  9349  1CFE  0CA3               	rrf	___ftpack@exp^(0+128),f
  9350  1CFF  0823               	movf	___ftpack@exp^(0+128),w
  9351  1D00  00A5               	movwf	??___ftpack^(0+128)
  9352  1D01  01A6               	clrf	(??___ftpack^(0+128)+1)
  9353  1D02  01A7               	clrf	(??___ftpack^(0+128)+2)
  9354  1D03  3010               	movlw	16
  9355  1D04                     u4375:	
  9356  1D04  35A5               	lslf	??___ftpack^(0+128),f
  9357  1D05  0DA6               	rlf	(??___ftpack^(0+128)+1),f
  9358  1D06  0DA7               	rlf	(??___ftpack^(0+128)+2),f
  9359  1D07  0B89               	decfsz	9,f
  9360  1D08  2D04               	goto	u4375
  9361  1D09  0825               	movf	??___ftpack^(0+128),w
  9362  1D0A  04A0               	iorwf	___ftpack@arg^(0+128),f
  9363  1D0B  0826               	movf	(??___ftpack+1)^(0+128),w
  9364  1D0C  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  9365  1D0D  0827               	movf	(??___ftpack+2)^(0+128),w
  9366  1D0E  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  9367  1D0F  0824               	movf	___ftpack@sign^(0+128),w
  9368  1D10  1903               	btfsc	3,2
  9369  1D11  0008               	return
  9370  1D12  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  9371  1D13  0008               	return
  9372  1D14                     __end_of___ftpack:	
  9373                           
  9374                           	psect	text32
  9375  1EF7                     __ptext32:	
  9376 ;; *************** function ___aldiv *****************
  9377 ;; Defined at:
  9378 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\aldiv.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  divisor         4    0[BANK1 ] long 
  9381 ;;  dividend        4    4[BANK1 ] long 
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;  quotient        4   11[BANK1 ] long 
  9384 ;;  sign            1   10[BANK1 ] unsigned char 
  9385 ;;  counter         1    9[BANK1 ] unsigned char 
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  4    0[BANK1 ] long 
  9388 ;; Registers used:
  9389 ;;		wreg, status,2, status,0
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9395 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9396 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9397 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9398 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  9399 ;;Total ram usage:       15 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:    3
  9402 ;; This function calls:
  9403 ;;		Nothing
  9404 ;; This function is called by:
  9405 ;;		_Adaptive_base_pid
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           
  9410                           ;psect for function ___aldiv
  9411  1EF7                     ___aldiv:	
  9412                           
  9413                           ;incstack = 0
  9414                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9415  1EF7  0021               	movlb	1	; select bank1
  9416  1EF8  01AA               	clrf	___aldiv@sign^(0+128)
  9417  1EF9  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
  9418  1EFA  2F08               	goto	l948
  9419  1EFB  09A0               	comf	___aldiv@divisor^(0+128),f
  9420  1EFC  09A1               	comf	(___aldiv@divisor+1)^(0+128),f
  9421  1EFD  09A2               	comf	(___aldiv@divisor+2)^(0+128),f
  9422  1EFE  09A3               	comf	(___aldiv@divisor+3)^(0+128),f
  9423  1EFF  0AA0               	incf	___aldiv@divisor^(0+128),f
  9424  1F00  1903               	skipnz
  9425  1F01  0AA1               	incf	(___aldiv@divisor+1)^(0+128),f
  9426  1F02  1903               	skipnz
  9427  1F03  0AA2               	incf	(___aldiv@divisor+2)^(0+128),f
  9428  1F04  1903               	skipnz
  9429  1F05  0AA3               	incf	(___aldiv@divisor+3)^(0+128),f
  9430  1F06  01AA               	clrf	___aldiv@sign^(0+128)
  9431  1F07  0AAA               	incf	___aldiv@sign^(0+128),f
  9432  1F08                     l948:	
  9433  1F08  1FA7               	btfss	(___aldiv@dividend+3)^(0+128),7
  9434  1F09  2F19               	goto	l3720
  9435  1F0A  09A4               	comf	___aldiv@dividend^(0+128),f
  9436  1F0B  09A5               	comf	(___aldiv@dividend+1)^(0+128),f
  9437  1F0C  09A6               	comf	(___aldiv@dividend+2)^(0+128),f
  9438  1F0D  09A7               	comf	(___aldiv@dividend+3)^(0+128),f
  9439  1F0E  0AA4               	incf	___aldiv@dividend^(0+128),f
  9440  1F0F  1903               	skipnz
  9441  1F10  0AA5               	incf	(___aldiv@dividend+1)^(0+128),f
  9442  1F11  1903               	skipnz
  9443  1F12  0AA6               	incf	(___aldiv@dividend+2)^(0+128),f
  9444  1F13  1903               	skipnz
  9445  1F14  0AA7               	incf	(___aldiv@dividend+3)^(0+128),f
  9446  1F15  3001               	movlw	1
  9447  1F16  00A8               	movwf	??___aldiv^(0+128)
  9448  1F17  0828               	movf	??___aldiv^(0+128),w
  9449  1F18  06AA               	xorwf	___aldiv@sign^(0+128),f
  9450  1F19                     l3720:	
  9451  1F19  3000               	movlw	0
  9452  1F1A  00AE               	movwf	(___aldiv@quotient+3)^(0+128)
  9453  1F1B  3000               	movlw	0
  9454  1F1C  00AD               	movwf	(___aldiv@quotient+2)^(0+128)
  9455  1F1D  3000               	movlw	0
  9456  1F1E  00AC               	movwf	(___aldiv@quotient+1)^(0+128)
  9457  1F1F  3000               	movlw	0
  9458  1F20  00AB               	movwf	___aldiv@quotient^(0+128)
  9459  1F21  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  9460  1F22  0422               	iorwf	(___aldiv@divisor+2)^(0+128),w
  9461  1F23  0421               	iorwf	(___aldiv@divisor+1)^(0+128),w
  9462  1F24  0420               	iorwf	___aldiv@divisor^(0+128),w
  9463  1F25  1903               	skipnz
  9464  1F26  2F62               	goto	l3742
  9465  1F27  01A9               	clrf	___aldiv@counter^(0+128)
  9466  1F28  0AA9               	incf	___aldiv@counter^(0+128),f
  9467  1F29                     l3728:	
  9468  1F29  1BA3               	btfsc	(___aldiv@divisor+3)^(0+128),7
  9469  1F2A  2F37               	goto	l3730
  9470  1F2B  3001               	movlw	1
  9471  1F2C                     u4625:	
  9472  1F2C  35A0               	lslf	___aldiv@divisor^(0+128),f
  9473  1F2D  0DA1               	rlf	(___aldiv@divisor+1)^(0+128),f
  9474  1F2E  0DA2               	rlf	(___aldiv@divisor+2)^(0+128),f
  9475  1F2F  0DA3               	rlf	(___aldiv@divisor+3)^(0+128),f
  9476  1F30  0B89               	decfsz	9,f
  9477  1F31  2F2C               	goto	u4625
  9478  1F32  3001               	movlw	1
  9479  1F33  00A8               	movwf	??___aldiv^(0+128)
  9480  1F34  0828               	movf	??___aldiv^(0+128),w
  9481  1F35  07A9               	addwf	___aldiv@counter^(0+128),f
  9482  1F36  2F29               	goto	l3728
  9483  1F37                     l3730:	
  9484  1F37  3001               	movlw	1
  9485  1F38                     u4645:	
  9486  1F38  35AB               	lslf	___aldiv@quotient^(0+128),f
  9487  1F39  0DAC               	rlf	(___aldiv@quotient+1)^(0+128),f
  9488  1F3A  0DAD               	rlf	(___aldiv@quotient+2)^(0+128),f
  9489  1F3B  0DAE               	rlf	(___aldiv@quotient+3)^(0+128),f
  9490  1F3C  0B89               	decfsz	9,f
  9491  1F3D  2F38               	goto	u4645
  9492  1F3E  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  9493  1F3F  0227               	subwf	(___aldiv@dividend+3)^(0+128),w
  9494  1F40  1D03               	skipz
  9495  1F41  2F4C               	goto	u4655
  9496  1F42  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  9497  1F43  0226               	subwf	(___aldiv@dividend+2)^(0+128),w
  9498  1F44  1D03               	skipz
  9499  1F45  2F4C               	goto	u4655
  9500  1F46  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  9501  1F47  0225               	subwf	(___aldiv@dividend+1)^(0+128),w
  9502  1F48  1D03               	skipz
  9503  1F49  2F4C               	goto	u4655
  9504  1F4A  0820               	movf	___aldiv@divisor^(0+128),w
  9505  1F4B  0224               	subwf	___aldiv@dividend^(0+128),w
  9506  1F4C                     u4655:	
  9507  1F4C  1C03               	skipc
  9508  1F4D  2F57               	goto	l3738
  9509  1F4E  0820               	movf	___aldiv@divisor^(0+128),w
  9510  1F4F  02A4               	subwf	___aldiv@dividend^(0+128),f
  9511  1F50  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  9512  1F51  3BA5               	subwfb	(___aldiv@dividend+1)^(0+128),f
  9513  1F52  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  9514  1F53  3BA6               	subwfb	(___aldiv@dividend+2)^(0+128),f
  9515  1F54  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  9516  1F55  3BA7               	subwfb	(___aldiv@dividend+3)^(0+128),f
  9517  1F56  142B               	bsf	___aldiv@quotient^(0+128),0
  9518  1F57                     l3738:	
  9519  1F57  3001               	movlw	1
  9520  1F58                     u4665:	
  9521  1F58  36A3               	lsrf	(___aldiv@divisor+3)^(0+128),f
  9522  1F59  0CA2               	rrf	(___aldiv@divisor+2)^(0+128),f
  9523  1F5A  0CA1               	rrf	(___aldiv@divisor+1)^(0+128),f
  9524  1F5B  0CA0               	rrf	___aldiv@divisor^(0+128),f
  9525  1F5C  0B89               	decfsz	9,f
  9526  1F5D  2F58               	goto	u4665
  9527  1F5E  3001               	movlw	1
  9528  1F5F  02A9               	subwf	___aldiv@counter^(0+128),f
  9529  1F60  1D03               	btfss	3,2
  9530  1F61  2F37               	goto	l3730
  9531  1F62                     l3742:	
  9532  1F62  082A               	movf	___aldiv@sign^(0+128),w
  9533  1F63  1903               	btfsc	3,2
  9534  1F64  2F70               	goto	l3746
  9535  1F65  09AB               	comf	___aldiv@quotient^(0+128),f
  9536  1F66  09AC               	comf	(___aldiv@quotient+1)^(0+128),f
  9537  1F67  09AD               	comf	(___aldiv@quotient+2)^(0+128),f
  9538  1F68  09AE               	comf	(___aldiv@quotient+3)^(0+128),f
  9539  1F69  0AAB               	incf	___aldiv@quotient^(0+128),f
  9540  1F6A  1903               	skipnz
  9541  1F6B  0AAC               	incf	(___aldiv@quotient+1)^(0+128),f
  9542  1F6C  1903               	skipnz
  9543  1F6D  0AAD               	incf	(___aldiv@quotient+2)^(0+128),f
  9544  1F6E  1903               	skipnz
  9545  1F6F  0AAE               	incf	(___aldiv@quotient+3)^(0+128),f
  9546  1F70                     l3746:	
  9547  1F70  082E               	movf	(___aldiv@quotient+3)^(0+128),w
  9548  1F71  00A3               	movwf	(?___aldiv+3)^(0+128)
  9549  1F72  082D               	movf	(___aldiv@quotient+2)^(0+128),w
  9550  1F73  00A2               	movwf	(?___aldiv+2)^(0+128)
  9551  1F74  082C               	movf	(___aldiv@quotient+1)^(0+128),w
  9552  1F75  00A1               	movwf	(?___aldiv+1)^(0+128)
  9553  1F76  082B               	movf	___aldiv@quotient^(0+128),w
  9554  1F77  00A0               	movwf	?___aldiv^(0+128)
  9555  1F78  0008               	return
  9556  1F79                     __end_of___aldiv:	
  9557                           
  9558                           	psect	text33
  9559  1978                     __ptext33:	
  9560 ;; *************** function _Update_PWM *****************
  9561 ;; Defined at:
  9562 ;;		line 1210 in file "main.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;  setwsduty       2   51[BANK1 ] unsigned int 
  9565 ;; Auto vars:     Size  Location     Type
  9566 ;;  Dutycnt         2   57[BANK1 ] unsigned int 
  9567 ;;  Temp1           2   55[BANK1 ] unsigned int 
  9568 ;; Return value:  Size  Location     Type
  9569 ;;		None               void
  9570 ;; Registers used:
  9571 ;;		wreg, status,2, status,0
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/0
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9577 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9578 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9579 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9580 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9581 ;;Total ram usage:        8 bytes
  9582 ;; Hardware stack levels used:    1
  9583 ;; Hardware stack levels required when called:    3
  9584 ;; This function calls:
  9585 ;;		Nothing
  9586 ;; This function is called by:
  9587 ;;		_Adaptive_base_pid
  9588 ;;		_main
  9589 ;;		_key_application
  9590 ;;		_detect_display_error
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           
  9595                           ;psect for function _Update_PWM
  9596  1978                     _Update_PWM:	
  9597                           
  9598                           ;main.c: 1212: unsigned int Temp1=0x00, Dutycnt=0;
  9599                           
  9600                           ;incstack = 0
  9601                           ; Regs used in _Update_PWM: [wreg+status,2+status,0]
  9602  1978  0021               	movlb	1	; select bank1
  9603  1979  01D7               	clrf	Update_PWM@Temp1^(0+128)
  9604  197A  01D8               	clrf	(Update_PWM@Temp1+1)^(0+128)
  9605  197B  01D9               	clrf	Update_PWM@Dutycnt^(0+128)
  9606  197C  01DA               	clrf	(Update_PWM@Dutycnt+1)^(0+128)
  9607                           
  9608                           ;main.c: 1213: Dutycnt=setwsduty;
  9609  197D  0854               	movf	(Update_PWM@setwsduty+1)^(0+128),w
  9610  197E  01DA               	clrf	(Update_PWM@Dutycnt+1)^(0+128)
  9611  197F  07DA               	addwf	(Update_PWM@Dutycnt+1)^(0+128),f
  9612  1980  0853               	movf	Update_PWM@setwsduty^(0+128),w
  9613  1981  01D9               	clrf	Update_PWM@Dutycnt^(0+128)
  9614  1982  07D9               	addwf	Update_PWM@Dutycnt^(0+128),f
  9615                           
  9616                           ;main.c: 1214: CCP1CONbits.DC1B=Dutycnt;
  9617  1983  0859               	movf	Update_PWM@Dutycnt^(0+128),w
  9618  1984  00D5               	movwf	??_Update_PWM^(0+128)
  9619  1985  0ED5               	swapf	??_Update_PWM^(0+128),f
  9620  1986  0025               	movlb	5	; select bank5
  9621  1987  0813               	movf	19,w	;volatile
  9622  1988  0021               	movlb	1	; select bank1
  9623  1989  0655               	xorwf	??_Update_PWM^(0+128),w
  9624  198A  39CF               	andlw	-49
  9625  198B  0655               	xorwf	??_Update_PWM^(0+128),w
  9626  198C  0025               	movlb	5	; select bank5
  9627  198D  0093               	movwf	19	;volatile
  9628                           
  9629                           ;main.c: 1215: Temp1=Dutycnt >> 2;
  9630  198E  0021               	movlb	1	; select bank1
  9631  198F  085A               	movf	(Update_PWM@Dutycnt+1)^(0+128),w
  9632  1990  00D6               	movwf	(??_Update_PWM^(0+128)+1)
  9633  1991  0859               	movf	Update_PWM@Dutycnt^(0+128),w
  9634  1992  00D5               	movwf	??_Update_PWM^(0+128)
  9635  1993  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
  9636  1994  0CD5               	rrf	??_Update_PWM^(0+128),f
  9637  1995  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
  9638  1996  0CD5               	rrf	??_Update_PWM^(0+128),f
  9639  1997  0855               	movf	??_Update_PWM^(0+128),w
  9640  1998  00D7               	movwf	Update_PWM@Temp1^(0+128)
  9641  1999  0856               	movf	(??_Update_PWM+1)^(0+128),w
  9642  199A  00D8               	movwf	(Update_PWM@Temp1+1)^(0+128)
  9643                           
  9644                           ;main.c: 1216: CCPR1L=Temp1;
  9645  199B  0857               	movf	Update_PWM@Temp1^(0+128),w
  9646  199C  0025               	movlb	5	; select bank5
  9647  199D  0091               	movwf	17	;volatile
  9648  199E  0008               	return
  9649  199F                     __end_of_Update_PWM:	
  9650                           
  9651                           	psect	intentry
  9652  0004                     __pintentry:	
  9653 ;; *************** function _ISR_Function *****************
  9654 ;; Defined at:
  9655 ;;		line 41 in file "main.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;		None
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;		None
  9660 ;; Return value:  Size  Location     Type
  9661 ;;		None               void
  9662 ;; Registers used:
  9663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/0
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9672 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9673 ;;Total ram usage:       11 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; Hardware stack levels required when called:    2
  9676 ;; This function calls:
  9677 ;;		_Display
  9678 ;;		i1___aldiv
  9679 ;;		i1___ftadd
  9680 ;;		i1___ftdiv
  9681 ;;		i1___ftmul
  9682 ;;		i1___fttol
  9683 ;;		i1___lwtoft
  9684 ;;		i1_disp_hex_window1
  9685 ;; This function is called by:
  9686 ;;		Interrupt level 1
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690  0004                     _ISR_Function:	
  9691                           
  9692                           ;incstack = 0
  9693                           ; Regs used in _ISR_Function: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9694  0004  147E               	bsf	126,0	;set compiler interrupt flag
  9695  0005  3180               	pagesel	$
  9696  0006  0020               	movlb	0	; select bank0
  9697  0007  087F               	movf	127,w
  9698  0008  00D3               	movwf	??_ISR_Function+8
  9699                           
  9700                           ;main.c: 43: if(INTCONbits.TMR0IF==1)
  9701  0009  1D0B               	btfss	11,2	;volatile
  9702  000A  290A               	goto	i1l5074
  9703                           
  9704                           ;main.c: 44: {
  9705                           ;main.c: 45: INTCONbits.TMR0IF=0;
  9706  000B  110B               	bcf	11,2	;volatile
  9707                           
  9708                           ;main.c: 46: TMR0=0x00;
  9709  000C  0195               	clrf	21	;volatile
  9710                           
  9711                           ;main.c: 47: updatedispf=0;
  9712  000D  0023               	movlb	3	; select bank3
  9713  000E  01DD               	clrf	_updatedispf^(0+384)	;volatile
  9714                           
  9715                           ;main.c: 48: Display();
  9716  000F  3185  2572  3180   	fcall	_Display
  9717                           
  9718                           ;main.c: 49: count_1ms++;
  9719  0012  3001               	movlw	1
  9720  0013  0023               	movlb	3	; select bank3
  9721  0014  07B2               	addwf	_count_1ms^(0+384),f	;volatile
  9722  0015  3000               	movlw	0
  9723  0016  3DB3               	addwfc	(_count_1ms+1)^(0+384),f	;volatile
  9724                           
  9725                           ;main.c: 50: count_2ms++;
  9726  0017  3001               	movlw	1
  9727  0018  0020               	movlb	0	; select bank0
  9728  0019  00CB               	movwf	??_ISR_Function
  9729  001A  084B               	movf	??_ISR_Function,w
  9730  001B  0022               	movlb	2	; select bank2
  9731  001C  07B8               	addwf	_count_2ms^(0+256),f	;volatile
  9732                           
  9733                           ;main.c: 51: count_1msec++;
  9734  001D  3001               	movlw	1
  9735  001E  0020               	movlb	0	; select bank0
  9736  001F  00CB               	movwf	??_ISR_Function
  9737  0020  084B               	movf	??_ISR_Function,w
  9738  0021  0022               	movlb	2	; select bank2
  9739  0022  07B7               	addwf	_count_1msec^(0+256),f
  9740                           
  9741                           ;main.c: 55: if(motor_acceleratefg==1)
  9742  0023  084A               	movf	_motor_acceleratefg^(0+256),w
  9743  0024  3A01               	xorlw	1
  9744  0025  1D03               	skipz
  9745  0026  283A               	goto	i1l4980
  9746                           
  9747                           ;main.c: 56: {
  9748                           ;main.c: 57: up_count_motor++;
  9749  0027  3001               	movlw	1
  9750  0028  0023               	movlb	3	; select bank3
  9751  0029  07D0               	addwf	_up_count_motor^(0+384),f
  9752  002A  3000               	movlw	0
  9753  002B  3DD1               	addwfc	(_up_count_motor+1)^(0+384),f
  9754                           
  9755                           ;main.c: 58: if(up_count_motor > 1000)
  9756  002C  3003               	movlw	3
  9757  002D  0251               	subwf	(_up_count_motor+1)^(0+384),w
  9758  002E  30E9               	movlw	233
  9759  002F  1903               	skipnz
  9760  0030  0250               	subwf	_up_count_motor^(0+384),w
  9761  0031  1C03               	skipc
  9762  0032  283A               	goto	i1l4980
  9763                           
  9764                           ;main.c: 59: {
  9765                           ;main.c: 60: up_count_motor=0;
  9766  0033  01D0               	clrf	_up_count_motor^(0+384)
  9767  0034  01D1               	clrf	(_up_count_motor+1)^(0+384)
  9768                           
  9769                           ;main.c: 61: motor_acceleratefg=0;
  9770  0035  0022               	movlb	2	; select bank2
  9771  0036  01CA               	clrf	_motor_acceleratefg^(0+256)
  9772                           
  9773                           ;main.c: 62: motor_continuefg=1;
  9774  0037  0023               	movlb	3	; select bank3
  9775  0038  01D9               	clrf	_motor_continuefg^(0+384)
  9776  0039  0AD9               	incf	_motor_continuefg^(0+384),f
  9777  003A                     i1l4980:	
  9778                           
  9779                           ;main.c: 63: }
  9780                           ;main.c: 64: }
  9781                           ;main.c: 66: if(RCSTAbits.FERR==1 || RCSTAbits.OERR==1)
  9782  003A  0023               	movlb	3	; select bank3
  9783  003B  191D               	btfsc	29,2	;volatile
  9784  003C  283F               	goto	i1l550
  9785  003D  1C9D               	btfss	29,1	;volatile
  9786  003E  2843               	goto	i1l4984
  9787  003F                     i1l550:	
  9788                           
  9789                           ;main.c: 67: {
  9790                           ;main.c: 68: RCSTAbits.SPEN=0;
  9791  003F  139D               	bcf	29,7	;volatile
  9792                           
  9793                           ;main.c: 69: RCSTAbits.CREN=0;
  9794  0040  121D               	bcf	29,4	;volatile
  9795                           
  9796                           ;main.c: 70: RCSTAbits.SPEN=1;
  9797  0041  179D               	bsf	29,7	;volatile
  9798                           
  9799                           ;main.c: 71: RCSTAbits.CREN=1;
  9800  0042  161D               	bsf	29,4	;volatile
  9801  0043                     i1l4984:	
  9802                           
  9803                           ;main.c: 72: }
  9804                           ;main.c: 73: if(count_1ms>=500)
  9805  0043  3001               	movlw	1
  9806  0044  0233               	subwf	(_count_1ms+1)^(0+384),w	;volatile
  9807  0045  30F4               	movlw	244
  9808  0046  1903               	skipnz
  9809  0047  0232               	subwf	_count_1ms^(0+384),w	;volatile
  9810  0048  1C03               	skipc
  9811  0049  28A3               	goto	i1l5032
  9812                           
  9813                           ;main.c: 74: {
  9814                           ;main.c: 75: count_1ms=0;
  9815  004A  01B2               	clrf	_count_1ms^(0+384)	;volatile
  9816  004B  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  9817                           
  9818                           ;main.c: 76: comm_error_count++;
  9819  004C  3001               	movlw	1
  9820  004D  0020               	movlb	0	; select bank0
  9821  004E  00CB               	movwf	??_ISR_Function
  9822  004F  084B               	movf	??_ISR_Function,w
  9823  0050  0022               	movlb	2	; select bank2
  9824  0051  07B6               	addwf	_comm_error_count^(0+256),f	;volatile
  9825                           
  9826                           ;main.c: 78: if(gaschkfg == 1)
  9827  0052  0840               	movf	_gaschkfg^(0+256),w
  9828  0053  3A01               	xorlw	1
  9829  0054  1D03               	skipz
  9830  0055  2883               	goto	i1l5020
  9831                           
  9832                           ;main.c: 79: {
  9833                           ;main.c: 80: if(igascntr != 0)
  9834  0056  0023               	movlb	3	; select bank3
  9835  0057  083B               	movf	(_igascntr+1)^(0+384),w
  9836  0058  043A               	iorwf	_igascntr^(0+384),w
  9837  0059  1903               	skipnz
  9838  005A  2860               	goto	i1l4996
  9839                           
  9840                           ;main.c: 81: {
  9841                           ;main.c: 82: igascntr--;
  9842  005B  3001               	movlw	1
  9843  005C  02BA               	subwf	_igascntr^(0+384),f
  9844  005D  3000               	movlw	0
  9845  005E  3BBB               	subwfb	(_igascntr+1)^(0+384),f
  9846                           
  9847                           ;main.c: 83: }else
  9848  005F  2871               	goto	i1l5014
  9849  0060                     i1l4996:	
  9850                           
  9851                           ;main.c: 84: {
  9852                           ;main.c: 85: igascntr = 0;
  9853  0060  01BA               	clrf	_igascntr^(0+384)
  9854  0061  01BB               	clrf	(_igascntr+1)^(0+384)
  9855                           
  9856                           ;main.c: 86: gaschkfg = 0;
  9857  0062  0022               	movlb	2	; select bank2
  9858  0063  01C0               	clrf	_gaschkfg^(0+256)
  9859                           
  9860                           ;main.c: 87: TypeU.TypeS.gason =0;
  9861  0064  0020               	movlb	0	; select bank0
  9862  0065  11E9               	bcf	_TypeU,3
  9863                           
  9864                           ;main.c: 88: PORTCbits.RC3 =0;
  9865  0066  118E               	bcf	14,3	;volatile
  9866                           
  9867                           ;main.c: 89: TypeU.TypeS.wirespeed=1;
  9868  0067  1469               	bsf	_TypeU,0
  9869                           
  9870                           ;main.c: 90: TypeU.TypeS.amp=0;
  9871  0068  106A               	bcf	_TypeU+1,0
  9872                           
  9873                           ;main.c: 91: TypeU.TypeS.thickness=0;
  9874  0069  10E9               	bcf	_TypeU,1
  9875                           
  9876                           ;main.c: 92: TypeDP.DPGROUP[0]=0x00;
  9877  006A  01EB               	clrf	_TypeDP
  9878                           
  9879                           ;main.c: 93: TypeDP.TypeD.digitdp2 =1;
  9880  006B  14EB               	bsf	_TypeDP,1
  9881                           
  9882                           ;main.c: 94: TypeDP.TypeD.digitdp5 =1;
  9883  006C  166B               	bsf	_TypeDP,4
  9884                           
  9885                           ;main.c: 95: dispupdatef =1;
  9886  006D  3001               	movlw	1
  9887  006E  00CB               	movwf	??_ISR_Function
  9888  006F  084B               	movf	??_ISR_Function,w
  9889  0070  00EF               	movwf	_dispupdatef	;volatile
  9890  0071                     i1l5014:	
  9891                           
  9892                           ;main.c: 96: }
  9893                           ;main.c: 97: diswin1[0]= 0x11;
  9894  0071  3011               	movlw	17
  9895  0072  0020               	movlb	0	; select bank0
  9896  0073  00CB               	movwf	??_ISR_Function
  9897  0074  084B               	movf	??_ISR_Function,w
  9898  0075  0022               	movlb	2	; select bank2
  9899  0076  00E4               	movwf	_diswin1^(0+256)
  9900                           
  9901                           ;main.c: 98: diswin1[1]= 0x0B;
  9902  0077  300B               	movlw	11
  9903  0078  0020               	movlb	0	; select bank0
  9904  0079  00CB               	movwf	??_ISR_Function
  9905  007A  084B               	movf	??_ISR_Function,w
  9906  007B  0022               	movlb	2	; select bank2
  9907  007C  00E5               	movwf	(_diswin1^(0+256)+1)
  9908                           
  9909                           ;main.c: 99: diswin1[2]= 0x1D;
  9910  007D  301D               	movlw	29
  9911  007E  0020               	movlb	0	; select bank0
  9912  007F  00CB               	movwf	??_ISR_Function
  9913  0080  084B               	movf	??_ISR_Function,w
  9914  0081  0022               	movlb	2	; select bank2
  9915  0082  00E6               	movwf	(_diswin1^(0+256)+2)
  9916  0083                     i1l5020:	
  9917                           
  9918                           ;main.c: 100: }
  9919                           ;main.c: 102: if(weldmode=='P' || weldmode=='G')
  9920  0083  0020               	movlb	0	; select bank0
  9921  0084  0868               	movf	_weldmode,w	;volatile
  9922  0085  3A50               	xorlw	80
  9923  0086  1903               	skipnz
  9924  0087  288C               	goto	i1l5024
  9925  0088  0868               	movf	_weldmode,w	;volatile
  9926  0089  3A47               	xorlw	71
  9927  008A  1D03               	skipz
  9928  008B  28A0               	goto	i1l5030
  9929  008C                     i1l5024:	
  9930                           
  9931                           ;main.c: 103: {
  9932                           ;main.c: 104: if(comm_error_count>3)
  9933  008C  3004               	movlw	4
  9934  008D  0022               	movlb	2	; select bank2
  9935  008E  0236               	subwf	_comm_error_count^(0+256),w	;volatile
  9936  008F  1C03               	skipc
  9937  0090  289E               	goto	i1l5028
  9938                           
  9939                           ;main.c: 105: {
  9940                           ;main.c: 106: error8=1;
  9941  0091  3001               	movlw	1
  9942  0092  0020               	movlb	0	; select bank0
  9943  0093  00CB               	movwf	??_ISR_Function
  9944  0094  084B               	movf	??_ISR_Function,w
  9945  0095  0022               	movlb	2	; select bank2
  9946  0096  00BD               	movwf	_error8^(0+256)	;volatile
  9947                           
  9948                           ;main.c: 107: comm_error_count=4;
  9949  0097  3004               	movlw	4
  9950  0098  0020               	movlb	0	; select bank0
  9951  0099  00CB               	movwf	??_ISR_Function
  9952  009A  084B               	movf	??_ISR_Function,w
  9953  009B  0022               	movlb	2	; select bank2
  9954  009C  00B6               	movwf	_comm_error_count^(0+256)	;volatile
  9955                           
  9956                           ;main.c: 108: }
  9957  009D  28A3               	goto	i1l5032
  9958  009E                     i1l5028:	
  9959                           
  9960                           ;main.c: 109: else
  9961                           ;main.c: 110: error8=0;
  9962  009E  01BD               	clrf	_error8^(0+256)	;volatile
  9963                           
  9964                           ;main.c: 111: }
  9965  009F  28A3               	goto	i1l5032
  9966  00A0                     i1l5030:	
  9967                           
  9968                           ;main.c: 112: else
  9969                           ;main.c: 113: {
  9970                           ;main.c: 114: error8=0;
  9971  00A0  0022               	movlb	2	; select bank2
  9972  00A1  01BD               	clrf	_error8^(0+256)	;volatile
  9973                           
  9974                           ;main.c: 115: comm_error_count=0;
  9975  00A2  01B6               	clrf	_comm_error_count^(0+256)	;volatile
  9976  00A3                     i1l5032:	
  9977                           
  9978                           ;main.c: 116: }
  9979                           ;main.c: 132: }
  9980                           ;main.c: 133: if(count_2ms >=1)
  9981  00A3  0022               	movlb	2	; select bank2
  9982  00A4  0838               	movf	_count_2ms^(0+256),w	;volatile
  9983  00A5  1903               	btfsc	3,2
  9984  00A6  28AE               	goto	i1l5038
  9985                           
  9986                           ;main.c: 134: {
  9987                           ;main.c: 135: count_2ms=0;
  9988  00A7  01B8               	clrf	_count_2ms^(0+256)	;volatile
  9989                           
  9990                           ;main.c: 136: read_enc1f=1;
  9991  00A8  3001               	movlw	1
  9992  00A9  0020               	movlb	0	; select bank0
  9993  00AA  00CB               	movwf	??_ISR_Function
  9994  00AB  084B               	movf	??_ISR_Function,w
  9995  00AC  0022               	movlb	2	; select bank2
  9996  00AD  00D3               	movwf	_read_enc1f^(0+256)	;volatile
  9997  00AE                     i1l5038:	
  9998                           
  9999                           ;main.c: 137: }
 10000                           ;main.c: 139: if(count_1msec >= 10)
 10001  00AE  300A               	movlw	10
 10002  00AF  0237               	subwf	_count_1msec^(0+256),w
 10003  00B0  1C03               	skipc
 10004  00B1  290A               	goto	i1l5074
 10005                           
 10006                           ;main.c: 140: {
 10007                           ;main.c: 141: count_1msec=0;
 10008  00B2  01B7               	clrf	_count_1msec^(0+256)
 10009                           
 10010                           ;main.c: 142: if(kpressread==0)
 10011  00B3  08C1               	movf	_kpressread^(0+256),f
 10012  00B4  1D03               	skipz
 10013  00B5  28BF               	goto	i1l5048
 10014                           
 10015                           ;main.c: 143: {
 10016                           ;main.c: 144: torchstatus1=PORTCbits.RC5;
 10017  00B6  3000               	movlw	0
 10018  00B7  0020               	movlb	0	; select bank0
 10019  00B8  1A8E               	btfsc	14,5	;volatile
 10020  00B9  3001               	movlw	1
 10021  00BA  0022               	movlb	2	; select bank2
 10022  00BB  00D9               	movwf	_torchstatus1^(0+256)
 10023                           
 10024                           ;main.c: 145: kpressread=1;
 10025  00BC  01C1               	clrf	_kpressread^(0+256)
 10026  00BD  0AC1               	incf	_kpressread^(0+256),f
 10027                           
 10028                           ;main.c: 146: }
 10029  00BE  290A               	goto	i1l5074
 10030  00BF                     i1l5048:	
 10031                           
 10032                           ;main.c: 147: else
 10033                           ;main.c: 148: {
 10034                           ;main.c: 149: kpressread=0;
 10035  00BF  01C1               	clrf	_kpressread^(0+256)
 10036                           
 10037                           ;main.c: 150: torchstatus2=PORTCbits.RC5;
 10038  00C0  3000               	movlw	0
 10039  00C1  0020               	movlb	0	; select bank0
 10040  00C2  1A8E               	btfsc	14,5	;volatile
 10041  00C3  3001               	movlw	1
 10042  00C4  0022               	movlb	2	; select bank2
 10043  00C5  00DA               	movwf	_torchstatus2^(0+256)
 10044                           
 10045                           ;main.c: 151: tans =(torchstatus1 == torchstatus2 ? 1:0);
 10046  00C6  0859               	movf	_torchstatus1^(0+256),w
 10047  00C7  065A               	xorwf	_torchstatus2^(0+256),w
 10048  00C8  3000               	movlw	0
 10049  00C9  1903               	skipnz
 10050  00CA  3001               	movlw	1
 10051  00CB  0020               	movlb	0	; select bank0
 10052  00CC  00CB               	movwf	??_ISR_Function
 10053  00CD  084B               	movf	??_ISR_Function,w
 10054  00CE  0022               	movlb	2	; select bank2
 10055  00CF  00D8               	movwf	_tans^(0+256)
 10056                           
 10057                           ;main.c: 152: if(tans==1)
 10058  00D0  0858               	movf	_tans^(0+256),w
 10059  00D1  3A01               	xorlw	1
 10060  00D2  1D03               	skipz
 10061  00D3  28FB               	goto	i1l5068
 10062                           
 10063                           ;main.c: 153: {
 10064                           ;main.c: 154: TORCH=(torchstatus2 == 0 ? 'P':'X');
 10065  00D4  085A               	movf	_torchstatus2^(0+256),w
 10066  00D5  1903               	btfsc	3,2
 10067  00D6  28D9               	goto	i1l5056
 10068  00D7  3058               	movlw	88
 10069  00D8  28DA               	goto	L19
 10070  00D9                     i1l5056:	
 10071  00D9  3050               	movlw	80
 10072  00DA                     L19:	
 10073  00DA  00FC               	movwf	_ISR_Function$1129
 10074  00DB  3000               	movlw	0
 10075  00DC  00FD               	movwf	_ISR_Function$1129+1
 10076  00DD  087C               	movf	_ISR_Function$1129,w
 10077  00DE  0020               	movlb	0	; select bank0
 10078  00DF  00CB               	movwf	??_ISR_Function
 10079  00E0  084B               	movf	??_ISR_Function,w
 10080  00E1  0022               	movlb	2	; select bank2
 10081  00E2  00EC               	movwf	_TORCH^(0+256)
 10082                           
 10083                           ;main.c: 155: if(TORCH=='P')
 10084  00E3  086C               	movf	_TORCH^(0+256),w
 10085  00E4  3A50               	xorlw	80
 10086  00E5  1D03               	skipz
 10087  00E6  28F9               	goto	i1l570
 10088                           
 10089                           ;main.c: 156: {
 10090                           ;main.c: 157: if((motor_acceleratefg==0) && (motor_continuefg==0))
 10091  00E7  08CA               	movf	_motor_acceleratefg^(0+256),f
 10092  00E8  1D03               	skipz
 10093  00E9  28F4               	goto	i1l5066
 10094  00EA  0023               	movlb	3	; select bank3
 10095  00EB  08D9               	movf	_motor_continuefg^(0+384),f
 10096  00EC  1D03               	skipz
 10097  00ED  28F4               	goto	i1l5066
 10098                           
 10099                           ;main.c: 158: {
 10100                           ;main.c: 159: motor_acceleratefg=1;
 10101  00EE  0022               	movlb	2	; select bank2
 10102  00EF  01CA               	clrf	_motor_acceleratefg^(0+256)
 10103  00F0  0ACA               	incf	_motor_acceleratefg^(0+256),f
 10104                           
 10105                           ;main.c: 160: up_count_motor=0;
 10106  00F1  0023               	movlb	3	; select bank3
 10107  00F2  01D0               	clrf	_up_count_motor^(0+384)
 10108  00F3  01D1               	clrf	(_up_count_motor+1)^(0+384)
 10109  00F4                     i1l5066:	
 10110                           
 10111                           ;main.c: 161: }
 10112                           ;main.c: 162: wfstatusu.wfstatuss.torchonstatus=1;
 10113  00F4  0020               	movlb	0	; select bank0
 10114  00F5  14EE               	bsf	_wfstatusu,1
 10115                           
 10116                           ;main.c: 163: cWeldStopfg = 0;
 10117  00F6  0023               	movlb	3	; select bank3
 10118  00F7  01D3               	clrf	_cWeldStopfg^(0+384)
 10119                           
 10120                           ;main.c: 164: }
 10121  00F8  28FB               	goto	i1l5068
 10122  00F9                     i1l570:	
 10123                           
 10124                           ;main.c: 165: else
 10125                           ;main.c: 166: {
 10126                           ;main.c: 167: wfstatusu.wfstatuss.torchonstatus=0;
 10127  00F9  0020               	movlb	0	; select bank0
 10128  00FA  10EE               	bcf	_wfstatusu,1
 10129  00FB                     i1l5068:	
 10130                           
 10131                           ;main.c: 168: }
 10132                           ;main.c: 169: }
 10133                           ;main.c: 170: if(prevTORCH != TORCH)
 10134  00FB  0022               	movlb	2	; select bank2
 10135  00FC  086D               	movf	_prevTORCH^(0+256),w
 10136  00FD  066C               	xorwf	_TORCH^(0+256),w
 10137  00FE  1903               	skipnz
 10138  00FF  2903               	goto	i1l5072
 10139                           
 10140                           ;main.c: 171: {
 10141                           ;main.c: 172: count_1ms=0;
 10142  0100  0023               	movlb	3	; select bank3
 10143  0101  01B2               	clrf	_count_1ms^(0+384)	;volatile
 10144  0102  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
 10145  0103                     i1l5072:	
 10146                           
 10147                           ;main.c: 175: }
 10148                           ;main.c: 176: prevTORCH = TORCH;
 10149  0103  0022               	movlb	2	; select bank2
 10150  0104  086C               	movf	_TORCH^(0+256),w
 10151  0105  0020               	movlb	0	; select bank0
 10152  0106  00CB               	movwf	??_ISR_Function
 10153  0107  084B               	movf	??_ISR_Function,w
 10154  0108  0022               	movlb	2	; select bank2
 10155  0109  00ED               	movwf	_prevTORCH^(0+256)
 10156  010A                     i1l5074:	
 10157                           
 10158                           ;main.c: 177: }
 10159                           ;main.c: 178: }
 10160                           ;main.c: 179: }
 10161                           ;main.c: 181: if(PIE1bits.TMR2IE & PIR1bits.TMR2IF)
 10162  010A  0020               	movlb	0	; select bank0
 10163  010B  0C11               	rrf	17,w	;volatile
 10164  010C  3901               	andlw	1
 10165  010D  00CB               	movwf	??_ISR_Function
 10166  010E  0021               	movlb	1	; select bank1
 10167  010F  0C11               	rrf	17,w	;volatile
 10168  0110  3901               	andlw	1
 10169  0111  0020               	movlb	0	; select bank0
 10170  0112  054B               	andwf	??_ISR_Function,w
 10171  0113  1903               	btfsc	3,2
 10172  0114  2917               	goto	i1l5078
 10173                           
 10174                           ;main.c: 182: {
 10175                           ;main.c: 183: PIR1bits.TMR2IF=0;
 10176  0115  1091               	bcf	17,1	;volatile
 10177                           
 10178                           ;main.c: 184: return;
 10179  0116  2CF3               	goto	i1l575
 10180  0117                     i1l5078:	
 10181                           
 10182                           ;main.c: 185: }
 10183                           ;main.c: 186: if(PIE1bits.TXIE & PIR1bits.TXIF)
 10184  0117  0E11               	swapf	17,w	;volatile
 10185  0118  3901               	andlw	1
 10186  0119  00CB               	movwf	??_ISR_Function
 10187  011A  0021               	movlb	1	; select bank1
 10188  011B  0E11               	swapf	17,w	;volatile
 10189  011C  3901               	andlw	1
 10190  011D  0020               	movlb	0	; select bank0
 10191  011E  054B               	andwf	??_ISR_Function,w
 10192  011F  1903               	btfsc	3,2
 10193  0120  2923               	goto	i1l5082
 10194                           
 10195                           ;main.c: 187: {
 10196                           ;main.c: 188: PIR1bits.TXIF=0;
 10197  0121  1211               	bcf	17,4	;volatile
 10198                           
 10199                           ;main.c: 189: return;
 10200  0122  2CF3               	goto	i1l575
 10201  0123                     i1l5082:	
 10202                           
 10203                           ;main.c: 190: }
 10204                           ;main.c: 192: if(PIE2bits.CCP2IE & PIR2bits.CCP2IF)
 10205  0123  0812               	movf	18,w	;volatile
 10206  0124  3901               	andlw	1
 10207  0125  00CB               	movwf	??_ISR_Function
 10208  0126  0021               	movlb	1	; select bank1
 10209  0127  0812               	movf	18,w	;volatile
 10210  0128  3901               	andlw	1
 10211  0129  0020               	movlb	0	; select bank0
 10212  012A  054B               	andwf	??_ISR_Function,w
 10213  012B  1903               	btfsc	3,2
 10214  012C  2AE6               	goto	i1l5158
 10215                           
 10216                           ;main.c: 193: {
 10217                           ;main.c: 194: PIR2bits.CCP2IF =0;
 10218  012D  1012               	bcf	18,0	;volatile
 10219                           
 10220                           ;main.c: 195: if(Count == 0)
 10221  012E  0022               	movlb	2	; select bank2
 10222  012F  08AC               	movf	_Count^(0+256),f	;volatile
 10223  0130  1D03               	skipz
 10224  0131  2947               	goto	i1l5090
 10225                           
 10226                           ;main.c: 196: {
 10227                           ;main.c: 197: OneH = CCPR2H;
 10228  0132  0025               	movlb	5	; select bank5
 10229  0133  0819               	movf	25,w	;volatile
 10230  0134  0020               	movlb	0	; select bank0
 10231  0135  00CB               	movwf	??_ISR_Function
 10232  0136  084B               	movf	??_ISR_Function,w
 10233  0137  0022               	movlb	2	; select bank2
 10234  0138  00AD               	movwf	_OneH^(0+256)	;volatile
 10235                           
 10236                           ;main.c: 198: OneL = CCPR2L;
 10237  0139  0025               	movlb	5	; select bank5
 10238  013A  0818               	movf	24,w	;volatile
 10239  013B  0020               	movlb	0	; select bank0
 10240  013C  00CB               	movwf	??_ISR_Function
 10241  013D  084B               	movf	??_ISR_Function,w
 10242  013E  0022               	movlb	2	; select bank2
 10243  013F  00AE               	movwf	_OneL^(0+256)	;volatile
 10244                           
 10245                           ;main.c: 199: Count = 1;
 10246  0140  3001               	movlw	1
 10247  0141  0020               	movlb	0	; select bank0
 10248  0142  00CB               	movwf	??_ISR_Function
 10249  0143  084B               	movf	??_ISR_Function,w
 10250  0144  0022               	movlb	2	; select bank2
 10251  0145  00AC               	movwf	_Count^(0+256)	;volatile
 10252                           
 10253                           ;main.c: 200: }
 10254  0146  2AE6               	goto	i1l5158
 10255  0147                     i1l5090:	
 10256                           
 10257                           ;main.c: 201: else
 10258                           ;main.c: 202: {
 10259                           ;main.c: 203: TwoH = CCPR2H;
 10260  0147  0025               	movlb	5	; select bank5
 10261  0148  0819               	movf	25,w	;volatile
 10262  0149  0020               	movlb	0	; select bank0
 10263  014A  00CB               	movwf	??_ISR_Function
 10264  014B  084B               	movf	??_ISR_Function,w
 10265  014C  0022               	movlb	2	; select bank2
 10266  014D  00AF               	movwf	_TwoH^(0+256)	;volatile
 10267                           
 10268                           ;main.c: 204: TwoL = CCPR2L;
 10269  014E  0025               	movlb	5	; select bank5
 10270  014F  0818               	movf	24,w	;volatile
 10271  0150  0020               	movlb	0	; select bank0
 10272  0151  00CB               	movwf	??_ISR_Function
 10273  0152  084B               	movf	??_ISR_Function,w
 10274  0153  0022               	movlb	2	; select bank2
 10275  0154  00B0               	movwf	_TwoL^(0+256)	;volatile
 10276                           
 10277                           ;main.c: 205: TMR1H = 0x00;
 10278  0155  0020               	movlb	0	; select bank0
 10279  0156  0197               	clrf	23	;volatile
 10280                           
 10281                           ;main.c: 206: TMR1L = 0x00;
 10282  0157  0196               	clrf	22	;volatile
 10283                           
 10284                           ;main.c: 207: Count = 0;
 10285  0158  0022               	movlb	2	; select bank2
 10286  0159  01AC               	clrf	_Count^(0+256)	;volatile
 10287                           
 10288                           ;main.c: 208: Two = TwoH;
 10289  015A  082F               	movf	_TwoH^(0+256),w	;volatile
 10290  015B  0020               	movlb	0	; select bank0
 10291  015C  00CB               	movwf	??_ISR_Function
 10292  015D  01CC               	clrf	??_ISR_Function+1
 10293  015E  084B               	movf	??_ISR_Function,w
 10294  015F  0023               	movlb	3	; select bank3
 10295  0160  00B0               	movwf	_Two^(0+384)	;volatile
 10296  0161  0020               	movlb	0	; select bank0
 10297  0162  084C               	movf	??_ISR_Function+1,w
 10298  0163  0023               	movlb	3	; select bank3
 10299  0164  00B1               	movwf	(_Two+1)^(0+384)	;volatile
 10300                           
 10301                           ;main.c: 209: Two <<= 8;
 10302  0165  3008               	movlw	8
 10303  0166                     u732_25:	
 10304  0166  35B0               	lslf	_Two^(0+384),f	;volatile
 10305  0167  0DB1               	rlf	(_Two+1)^(0+384),f	;volatile
 10306  0168  0B89               	decfsz	9,f
 10307  0169  2966               	goto	u732_25
 10308                           
 10309                           ;main.c: 210: Two |= TwoL;
 10310  016A  0022               	movlb	2	; select bank2
 10311  016B  0830               	movf	_TwoL^(0+256),w	;volatile
 10312  016C  0020               	movlb	0	; select bank0
 10313  016D  00CB               	movwf	??_ISR_Function
 10314  016E  01CC               	clrf	??_ISR_Function+1
 10315  016F  084B               	movf	??_ISR_Function,w
 10316  0170  0023               	movlb	3	; select bank3
 10317  0171  04B0               	iorwf	_Two^(0+384),f	;volatile
 10318  0172  0020               	movlb	0	; select bank0
 10319  0173  084C               	movf	??_ISR_Function+1,w
 10320  0174  0023               	movlb	3	; select bank3
 10321  0175  04B1               	iorwf	(_Two+1)^(0+384),f	;volatile
 10322                           
 10323                           ;main.c: 211: One = OneH;
 10324  0176  0022               	movlb	2	; select bank2
 10325  0177  082D               	movf	_OneH^(0+256),w	;volatile
 10326  0178  0020               	movlb	0	; select bank0
 10327  0179  00CB               	movwf	??_ISR_Function
 10328  017A  01CC               	clrf	??_ISR_Function+1
 10329  017B  084B               	movf	??_ISR_Function,w
 10330  017C  0023               	movlb	3	; select bank3
 10331  017D  00AC               	movwf	_One^(0+384)	;volatile
 10332  017E  0020               	movlb	0	; select bank0
 10333  017F  084C               	movf	??_ISR_Function+1,w
 10334  0180  0023               	movlb	3	; select bank3
 10335  0181  00AD               	movwf	(_One+1)^(0+384)	;volatile
 10336                           
 10337                           ;main.c: 212: One <<= 8;
 10338  0182  3008               	movlw	8
 10339  0183                     u733_25:	
 10340  0183  35AC               	lslf	_One^(0+384),f	;volatile
 10341  0184  0DAD               	rlf	(_One+1)^(0+384),f	;volatile
 10342  0185  0B89               	decfsz	9,f
 10343  0186  2983               	goto	u733_25
 10344                           
 10345                           ;main.c: 213: One |= OneL;
 10346  0187  0022               	movlb	2	; select bank2
 10347  0188  082E               	movf	_OneL^(0+256),w	;volatile
 10348  0189  0020               	movlb	0	; select bank0
 10349  018A  00CB               	movwf	??_ISR_Function
 10350  018B  01CC               	clrf	??_ISR_Function+1
 10351  018C  084B               	movf	??_ISR_Function,w
 10352  018D  0023               	movlb	3	; select bank3
 10353  018E  04AC               	iorwf	_One^(0+384),f	;volatile
 10354  018F  0020               	movlb	0	; select bank0
 10355  0190  084C               	movf	??_ISR_Function+1,w
 10356  0191  0023               	movlb	3	; select bank3
 10357  0192  04AD               	iorwf	(_One+1)^(0+384),f	;volatile
 10358                           
 10359                           ;main.c: 214: Total_Count = Two - One;
 10360  0193  092C               	comf	_One^(0+384),w	;volatile
 10361  0194  0020               	movlb	0	; select bank0
 10362  0195  00CB               	movwf	??_ISR_Function
 10363  0196  0023               	movlb	3	; select bank3
 10364  0197  092D               	comf	(_One+1)^(0+384),w	;volatile
 10365  0198  0020               	movlb	0	; select bank0
 10366  0199  00CC               	movwf	??_ISR_Function+1
 10367  019A  0ACB               	incf	??_ISR_Function,f
 10368  019B  1903               	skipnz
 10369  019C  0ACC               	incf	??_ISR_Function+1,f
 10370  019D  0023               	movlb	3	; select bank3
 10371  019E  0830               	movf	_Two^(0+384),w	;volatile
 10372  019F  0020               	movlb	0	; select bank0
 10373  01A0  074B               	addwf	??_ISR_Function,w
 10374  01A1  0023               	movlb	3	; select bank3
 10375  01A2  00AE               	movwf	_Total_Count^(0+384)	;volatile
 10376  01A3  0831               	movf	(_Two+1)^(0+384),w	;volatile
 10377  01A4  0020               	movlb	0	; select bank0
 10378  01A5  3D4C               	addwfc	??_ISR_Function+1,w
 10379  01A6  0023               	movlb	3	; select bank3
 10380  01A7  00AF               	movwf	(_Total_Count+1)^(0+384)	;volatile
 10381                           
 10382                           ;main.c: 216: pperiod=Total_Count;
 10383  01A8  082F               	movf	(_Total_Count+1)^(0+384),w	;volatile
 10384  01A9  01C1               	clrf	(_pperiod+1)^(0+384)	;volatile
 10385  01AA  07C1               	addwf	(_pperiod+1)^(0+384),f	;volatile
 10386  01AB  082E               	movf	_Total_Count^(0+384),w	;volatile
 10387  01AC  01C0               	clrf	_pperiod^(0+384)	;volatile
 10388  01AD  07C0               	addwf	_pperiod^(0+384),f	;volatile
 10389                           
 10390                           ;main.c: 217: Total_Period=Total_Period+pperiod;
 10391  01AE  0024               	movlb	4	; select bank4
 10392  01AF  0820               	movf	_Total_Period^(0+512),w
 10393  01B0  0020               	movlb	0	; select bank0
 10394  01B1  00CB               	movwf	??_ISR_Function
 10395  01B2  0024               	movlb	4	; select bank4
 10396  01B3  0821               	movf	(_Total_Period+1)^(0+512),w
 10397  01B4  0020               	movlb	0	; select bank0
 10398  01B5  00CC               	movwf	??_ISR_Function+1
 10399  01B6  0024               	movlb	4	; select bank4
 10400  01B7  0822               	movf	(_Total_Period+2)^(0+512),w
 10401  01B8  0020               	movlb	0	; select bank0
 10402  01B9  00CD               	movwf	??_ISR_Function+2
 10403  01BA  0024               	movlb	4	; select bank4
 10404  01BB  0823               	movf	(_Total_Period+3)^(0+512),w
 10405  01BC  0020               	movlb	0	; select bank0
 10406  01BD  00CE               	movwf	??_ISR_Function+3
 10407  01BE  0023               	movlb	3	; select bank3
 10408  01BF  0840               	movf	_pperiod^(0+384),w	;volatile
 10409  01C0  0020               	movlb	0	; select bank0
 10410  01C1  00CF               	movwf	??_ISR_Function+4
 10411  01C2  0023               	movlb	3	; select bank3
 10412  01C3  0841               	movf	(_pperiod+1)^(0+384),w	;volatile
 10413  01C4  0020               	movlb	0	; select bank0
 10414  01C5  00D0               	movwf	??_ISR_Function+5
 10415  01C6  01D1               	clrf	??_ISR_Function+6
 10416  01C7  01D2               	clrf	??_ISR_Function+7
 10417  01C8  084F               	movf	??_ISR_Function+4,w
 10418  01C9  07CB               	addwf	??_ISR_Function,f
 10419  01CA  0850               	movf	??_ISR_Function+5,w
 10420  01CB  3DCC               	addwfc	??_ISR_Function+1,f
 10421  01CC  0851               	movf	??_ISR_Function+6,w
 10422  01CD  3DCD               	addwfc	??_ISR_Function+2,f
 10423  01CE  0852               	movf	??_ISR_Function+7,w
 10424  01CF  3DCE               	addwfc	??_ISR_Function+3,f
 10425  01D0  084E               	movf	??_ISR_Function+3,w
 10426  01D1  0024               	movlb	4	; select bank4
 10427  01D2  00A3               	movwf	(_Total_Period+3)^(0+512)
 10428  01D3  0020               	movlb	0	; select bank0
 10429  01D4  084D               	movf	??_ISR_Function+2,w
 10430  01D5  0024               	movlb	4	; select bank4
 10431  01D6  00A2               	movwf	(_Total_Period+2)^(0+512)
 10432  01D7  0020               	movlb	0	; select bank0
 10433  01D8  084C               	movf	??_ISR_Function+1,w
 10434  01D9  0024               	movlb	4	; select bank4
 10435  01DA  00A1               	movwf	(_Total_Period+1)^(0+512)
 10436  01DB  0020               	movlb	0	; select bank0
 10437  01DC  084B               	movf	??_ISR_Function,w
 10438  01DD  0024               	movlb	4	; select bank4
 10439  01DE  00A0               	movwf	_Total_Period^(0+512)
 10440                           
 10441                           ;main.c: 218: pcount++;
 10442  01DF  3001               	movlw	1
 10443  01E0  0020               	movlb	0	; select bank0
 10444  01E1  00CB               	movwf	??_ISR_Function
 10445  01E2  084B               	movf	??_ISR_Function,w
 10446  01E3  0022               	movlb	2	; select bank2
 10447  01E4  07CB               	addwf	_pcount^(0+256),f
 10448                           
 10449                           ;main.c: 219: if(pcount>=8)
 10450  01E5  3008               	movlw	8
 10451  01E6  024B               	subwf	_pcount^(0+256),w
 10452  01E7  1C03               	skipc
 10453  01E8  2AE6               	goto	i1l5158
 10454                           
 10455                           ;main.c: 220: {
 10456                           ;main.c: 221: pcount=0;
 10457  01E9  01CB               	clrf	_pcount^(0+256)
 10458                           
 10459                           ;main.c: 222: avgpperiod=Total_Period>>4;
 10460  01EA  0024               	movlb	4	; select bank4
 10461  01EB  0820               	movf	_Total_Period^(0+512),w
 10462  01EC  0020               	movlb	0	; select bank0
 10463  01ED  00CB               	movwf	??_ISR_Function
 10464  01EE  0024               	movlb	4	; select bank4
 10465  01EF  0821               	movf	(_Total_Period+1)^(0+512),w
 10466  01F0  0020               	movlb	0	; select bank0
 10467  01F1  00CC               	movwf	??_ISR_Function+1
 10468  01F2  0024               	movlb	4	; select bank4
 10469  01F3  0822               	movf	(_Total_Period+2)^(0+512),w
 10470  01F4  0020               	movlb	0	; select bank0
 10471  01F5  00CD               	movwf	??_ISR_Function+2
 10472  01F6  0024               	movlb	4	; select bank4
 10473  01F7  0823               	movf	(_Total_Period+3)^(0+512),w
 10474  01F8  0020               	movlb	0	; select bank0
 10475  01F9  00CE               	movwf	??_ISR_Function+3
 10476  01FA  3004               	movlw	4
 10477  01FB                     u735_25:	
 10478  01FB  36CE               	lsrf	??_ISR_Function+3,f
 10479  01FC  0CCD               	rrf	??_ISR_Function+2,f
 10480  01FD  0CCC               	rrf	??_ISR_Function+1,f
 10481  01FE  0CCB               	rrf	??_ISR_Function,f
 10482  01FF  0B89               	decfsz	9,f
 10483  0200  29FB               	goto	u735_25
 10484  0201  084C               	movf	??_ISR_Function+1,w
 10485  0202  0022               	movlb	2	; select bank2
 10486  0203  01DF               	clrf	(_avgpperiod+1)^(0+256)	;volatile
 10487  0204  07DF               	addwf	(_avgpperiod+1)^(0+256),f	;volatile
 10488  0205  0020               	movlb	0	; select bank0
 10489  0206  084B               	movf	??_ISR_Function,w
 10490  0207  0022               	movlb	2	; select bank2
 10491  0208  01DE               	clrf	_avgpperiod^(0+256)	;volatile
 10492  0209  07DE               	addwf	_avgpperiod^(0+256),f	;volatile
 10493                           
 10494                           ;main.c: 223: pfreq=1000000/avgpperiod;
 10495  020A  085E               	movf	_avgpperiod^(0+256),w	;volatile
 10496  020B  00F0               	movwf	i1___aldiv@divisor
 10497  020C  085F               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 10498  020D  00F1               	movwf	i1___aldiv@divisor+1
 10499  020E  01F2               	clrf	i1___aldiv@divisor+2
 10500  020F  01F3               	clrf	i1___aldiv@divisor+3
 10501  0210  3000               	movlw	0
 10502  0211  00F7               	movwf	i1___aldiv@dividend+3
 10503  0212  300F               	movlw	15
 10504  0213  00F6               	movwf	i1___aldiv@dividend+2
 10505  0214  3042               	movlw	66
 10506  0215  00F5               	movwf	i1___aldiv@dividend+1
 10507  0216  3040               	movlw	64
 10508  0217  00F4               	movwf	i1___aldiv@dividend
 10509  0218  319E  2675  3180   	fcall	i1___aldiv
 10510  021B  0871               	movf	?i1___aldiv+1,w
 10511  021C  0022               	movlb	2	; select bank2
 10512  021D  01E3               	clrf	(_pfreq+1)^(0+256)	;volatile
 10513  021E  07E3               	addwf	(_pfreq+1)^(0+256),f	;volatile
 10514  021F  0870               	movf	?i1___aldiv,w
 10515  0220  01E2               	clrf	_pfreq^(0+256)	;volatile
 10516  0221  07E2               	addwf	_pfreq^(0+256),f	;volatile
 10517                           
 10518                           ;main.c: 224: Total_Period=0;
 10519  0222  3000               	movlw	0
 10520  0223  0024               	movlb	4	; select bank4
 10521  0224  00A3               	movwf	(_Total_Period+3)^(0+512)
 10522  0225  3000               	movlw	0
 10523  0226  00A2               	movwf	(_Total_Period+2)^(0+512)
 10524  0227  3000               	movlw	0
 10525  0228  00A1               	movwf	(_Total_Period+1)^(0+512)
 10526  0229  3000               	movlw	0
 10527  022A  00A0               	movwf	_Total_Period^(0+512)
 10528                           
 10529                           ;main.c: 226: Tsampling =avgpperiod/1000.0;
 10530  022B  3000               	movlw	0
 10531  022C  0020               	movlb	0	; select bank0
 10532  022D  00A0               	movwf	i1___ftdiv@f2
 10533  022E  307A               	movlw	122
 10534  022F  00A1               	movwf	i1___ftdiv@f2+1
 10535  0230  3044               	movlw	68
 10536  0231  00A2               	movwf	i1___ftdiv@f2+2
 10537  0232  0022               	movlb	2	; select bank2
 10538  0233  085F               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 10539  0234  01F9               	clrf	i1___lwtoft@c+1
 10540  0235  07F9               	addwf	i1___lwtoft@c+1,f
 10541  0236  085E               	movf	_avgpperiod^(0+256),w	;volatile
 10542  0237  01F8               	clrf	i1___lwtoft@c
 10543  0238  07F8               	addwf	i1___lwtoft@c,f
 10544  0239  3198  20F4  3180   	fcall	i1___lwtoft
 10545  023C  0878               	movf	?i1___lwtoft,w
 10546  023D  0020               	movlb	0	; select bank0
 10547  023E  00A3               	movwf	i1___ftdiv@f1
 10548  023F  0879               	movf	?i1___lwtoft+1,w
 10549  0240  00A4               	movwf	i1___ftdiv@f1+1
 10550  0241  087A               	movf	?i1___lwtoft+2,w
 10551  0242  00A5               	movwf	i1___ftdiv@f1+2
 10552  0243  3190  20FE  3180   	fcall	i1___ftdiv
 10553  0246  0020               	movlb	0	; select bank0
 10554  0247  0820               	movf	?i1___ftdiv,w
 10555  0248  0023               	movlb	3	; select bank3
 10556  0249  00E0               	movwf	_Tsampling^(0+384)
 10557  024A  0020               	movlb	0	; select bank0
 10558  024B  0821               	movf	?i1___ftdiv+1,w
 10559  024C  0023               	movlb	3	; select bank3
 10560  024D  00E1               	movwf	(_Tsampling+1)^(0+384)
 10561  024E  0020               	movlb	0	; select bank0
 10562  024F  0822               	movf	?i1___ftdiv+2,w
 10563  0250  0023               	movlb	3	; select bank3
 10564  0251  00E2               	movwf	(_Tsampling+2)^(0+384)
 10565                           
 10566                           ;main.c: 228: if(pfreq>=999)
 10567  0252  3003               	movlw	3
 10568  0253  0022               	movlb	2	; select bank2
 10569  0254  0263               	subwf	(_pfreq+1)^(0+256),w	;volatile
 10570  0255  30E7               	movlw	231
 10571  0256  1903               	skipnz
 10572  0257  0262               	subwf	_pfreq^(0+256),w	;volatile
 10573  0258  1C03               	skipc
 10574  0259  2A5F               	goto	i1l5134
 10575                           
 10576                           ;main.c: 229: pfreq=999;
 10577  025A  30E7               	movlw	231
 10578  025B  00E2               	movwf	_pfreq^(0+256)	;volatile
 10579  025C  3003               	movlw	3
 10580  025D  00E3               	movwf	(_pfreq^(0+256)+1)	;volatile
 10581  025E  2A65               	goto	i1l5138
 10582  025F                     i1l5134:	
 10583                           
 10584                           ;main.c: 230: else if(pfreq<=0)
 10585  025F  0863               	movf	(_pfreq+1)^(0+256),w	;volatile
 10586  0260  0462               	iorwf	_pfreq^(0+256),w	;volatile
 10587  0261  1D03               	skipz
 10588  0262  2A65               	goto	i1l5138
 10589                           
 10590                           ;main.c: 231: pfreq=0;
 10591  0263  01E2               	clrf	_pfreq^(0+256)	;volatile
 10592  0264  01E3               	clrf	(_pfreq+1)^(0+256)	;volatile
 10593  0265                     i1l5138:	
 10594                           
 10595                           ;main.c: 233: Fltpfreq=(0.2*pfreq)+(0.8)*prevFltpfreq;
 10596  0265  0863               	movf	(_pfreq+1)^(0+256),w	;volatile
 10597  0266  01F9               	clrf	i1___lwtoft@c+1
 10598  0267  07F9               	addwf	i1___lwtoft@c+1,f
 10599  0268  0862               	movf	_pfreq^(0+256),w	;volatile
 10600  0269  01F8               	clrf	i1___lwtoft@c
 10601  026A  07F8               	addwf	i1___lwtoft@c,f
 10602  026B  3198  20F4  3180   	fcall	i1___lwtoft
 10603  026E  0878               	movf	?i1___lwtoft,w
 10604  026F  0020               	movlb	0	; select bank0
 10605  0270  00A3               	movwf	i1___ftmul@f2
 10606  0271  0879               	movf	?i1___lwtoft+1,w
 10607  0272  00A4               	movwf	i1___ftmul@f2+1
 10608  0273  087A               	movf	?i1___lwtoft+2,w
 10609  0274  00A5               	movwf	i1___ftmul@f2+2
 10610  0275  30CD               	movlw	205
 10611  0276  00A0               	movwf	i1___ftmul@f1
 10612  0277  304C               	movlw	76
 10613  0278  00A1               	movwf	i1___ftmul@f1+1
 10614  0279  303E               	movlw	62
 10615  027A  00A2               	movwf	i1___ftmul@f1+2
 10616  027B  3192  2250  3180   	fcall	i1___ftmul
 10617  027E  0020               	movlb	0	; select bank0
 10618  027F  0820               	movf	?i1___ftmul,w
 10619  0280  00B3               	movwf	i1___ftadd@f2
 10620  0281  0821               	movf	?i1___ftmul+1,w
 10621  0282  00B4               	movwf	i1___ftadd@f2+1
 10622  0283  0822               	movf	?i1___ftmul+2,w
 10623  0284  00B5               	movwf	i1___ftadd@f2+2
 10624  0285  0024               	movlb	4	; select bank4
 10625  0286  0841               	movf	(_prevFltpfreq+1)^(0+512),w
 10626  0287  01F9               	clrf	i1___lwtoft@c+1
 10627  0288  07F9               	addwf	i1___lwtoft@c+1,f
 10628  0289  0840               	movf	_prevFltpfreq^(0+512),w
 10629  028A  01F8               	clrf	i1___lwtoft@c
 10630  028B  07F8               	addwf	i1___lwtoft@c,f
 10631  028C  3198  20F4  3180   	fcall	i1___lwtoft
 10632  028F  0878               	movf	?i1___lwtoft,w
 10633  0290  0020               	movlb	0	; select bank0
 10634  0291  00A3               	movwf	i1___ftmul@f2
 10635  0292  0879               	movf	?i1___lwtoft+1,w
 10636  0293  00A4               	movwf	i1___ftmul@f2+1
 10637  0294  087A               	movf	?i1___lwtoft+2,w
 10638  0295  00A5               	movwf	i1___ftmul@f2+2
 10639  0296  30CD               	movlw	205
 10640  0297  00A0               	movwf	i1___ftmul@f1
 10641  0298  304C               	movlw	76
 10642  0299  00A1               	movwf	i1___ftmul@f1+1
 10643  029A  303F               	movlw	63
 10644  029B  00A2               	movwf	i1___ftmul@f1+2
 10645  029C  3192  2250  3180   	fcall	i1___ftmul
 10646  029F  0020               	movlb	0	; select bank0
 10647  02A0  0820               	movf	?i1___ftmul,w
 10648  02A1  00B0               	movwf	i1___ftadd@f1
 10649  02A2  0821               	movf	?i1___ftmul+1,w
 10650  02A3  00B1               	movwf	i1___ftadd@f1+1
 10651  02A4  0822               	movf	?i1___ftmul+2,w
 10652  02A5  00B2               	movwf	i1___ftadd@f1+2
 10653  02A6  3188  2019  3180   	fcall	i1___ftadd
 10654  02A9  0020               	movlb	0	; select bank0
 10655  02AA  0830               	movf	?i1___ftadd,w
 10656  02AB  00BD               	movwf	i1___fttol@f1
 10657  02AC  0831               	movf	?i1___ftadd+1,w
 10658  02AD  00BE               	movwf	i1___fttol@f1+1
 10659  02AE  0832               	movf	?i1___ftadd+2,w
 10660  02AF  00BF               	movwf	i1___fttol@f1+2
 10661  02B0  319F  2779  3180   	fcall	i1___fttol
 10662  02B3  0020               	movlb	0	; select bank0
 10663  02B4  083E               	movf	?i1___fttol+1,w
 10664  02B5  0022               	movlb	2	; select bank2
 10665  02B6  01A1               	clrf	(_Fltpfreq+1)^(0+256)
 10666  02B7  07A1               	addwf	(_Fltpfreq+1)^(0+256),f
 10667  02B8  0020               	movlb	0	; select bank0
 10668  02B9  083D               	movf	?i1___fttol,w
 10669  02BA  0022               	movlb	2	; select bank2
 10670  02BB  01A0               	clrf	_Fltpfreq^(0+256)
 10671  02BC  07A0               	addwf	_Fltpfreq^(0+256),f
 10672                           
 10673                           ;main.c: 235: if(Fltpfreq>=999)
 10674  02BD  3003               	movlw	3
 10675  02BE  0221               	subwf	(_Fltpfreq+1)^(0+256),w
 10676  02BF  30E7               	movlw	231
 10677  02C0  1903               	skipnz
 10678  02C1  0220               	subwf	_Fltpfreq^(0+256),w
 10679  02C2  1C03               	skipc
 10680  02C3  2AC9               	goto	i1l5144
 10681                           
 10682                           ;main.c: 236: Fltpfreq=999;
 10683  02C4  30E7               	movlw	231
 10684  02C5  00A0               	movwf	_Fltpfreq^(0+256)
 10685  02C6  3003               	movlw	3
 10686  02C7  00A1               	movwf	(_Fltpfreq^(0+256)+1)
 10687  02C8  2ACF               	goto	i1l5148
 10688  02C9                     i1l5144:	
 10689                           
 10690                           ;main.c: 237: else if(Fltpfreq<=0)
 10691  02C9  0821               	movf	(_Fltpfreq+1)^(0+256),w
 10692  02CA  0420               	iorwf	_Fltpfreq^(0+256),w
 10693  02CB  1D03               	skipz
 10694  02CC  2ACF               	goto	i1l5148
 10695                           
 10696                           ;main.c: 238: Fltpfreq=0;
 10697  02CD  01A0               	clrf	_Fltpfreq^(0+256)
 10698  02CE  01A1               	clrf	(_Fltpfreq+1)^(0+256)
 10699  02CF                     i1l5148:	
 10700                           
 10701                           ;main.c: 240: prevFltpfreq=Fltpfreq;
 10702  02CF  0821               	movf	(_Fltpfreq+1)^(0+256),w
 10703  02D0  0024               	movlb	4	; select bank4
 10704  02D1  01C1               	clrf	(_prevFltpfreq+1)^(0+512)
 10705  02D2  07C1               	addwf	(_prevFltpfreq+1)^(0+512),f
 10706  02D3  0022               	movlb	2	; select bank2
 10707  02D4  0820               	movf	_Fltpfreq^(0+256),w
 10708  02D5  0024               	movlb	4	; select bank4
 10709  02D6  01C0               	clrf	_prevFltpfreq^(0+512)
 10710  02D7  07C0               	addwf	_prevFltpfreq^(0+512),f
 10711                           
 10712                           ;main.c: 246: if(cyclestrtf==1 && psstatusu.psstatuss.twinpulseon==0)
 10713  02D8  0022               	movlb	2	; select bank2
 10714  02D9  083B               	movf	_cyclestrtf^(0+256),w
 10715  02DA  3A01               	xorlw	1
 10716  02DB  1D03               	skipz
 10717  02DC  2AE4               	goto	i1l5156
 10718  02DD  0020               	movlb	0	; select bank0
 10719  02DE  1B6D               	btfsc	_psstatusu,6
 10720  02DF  2AE4               	goto	i1l5156
 10721                           
 10722                           ;main.c: 247: adaptivepidf=1;
 10723  02E0  0022               	movlb	2	; select bank2
 10724  02E1  01B1               	clrf	_adaptivepidf^(0+256)
 10725  02E2  0AB1               	incf	_adaptivepidf^(0+256),f
 10726  02E3  2AE6               	goto	i1l5158
 10727  02E4                     i1l5156:	
 10728                           
 10729                           ;main.c: 248: else
 10730                           ;main.c: 249: adaptivepidf=0;
 10731  02E4  0022               	movlb	2	; select bank2
 10732  02E5  01B1               	clrf	_adaptivepidf^(0+256)
 10733  02E6                     i1l5158:	
 10734                           
 10735                           ;main.c: 251: }
 10736                           ;main.c: 252: }
 10737                           ;main.c: 253: }
 10738                           ;main.c: 255: if(PIE1bits.RCIE & PIR1bits.RCIF)
 10739  02E6  0020               	movlb	0	; select bank0
 10740  02E7  0E11               	swapf	17,w	;volatile
 10741  02E8  0C89               	rrf	9,f
 10742  02E9  3901               	andlw	1
 10743  02EA  00CB               	movwf	??_ISR_Function
 10744  02EB  0021               	movlb	1	; select bank1
 10745  02EC  0E11               	swapf	17,w	;volatile
 10746  02ED  0C89               	rrf	9,f
 10747  02EE  3901               	andlw	1
 10748  02EF  0020               	movlb	0	; select bank0
 10749  02F0  054B               	andwf	??_ISR_Function,w
 10750  02F1  1903               	btfsc	3,2
 10751  02F2  2CF3               	goto	i1l575
 10752                           
 10753                           ;main.c: 256: {
 10754                           ;main.c: 257: PIR1bits.RCIF=0;
 10755  02F3  1291               	bcf	17,5	;volatile
 10756                           
 10757                           ;main.c: 258: rxdata= RCREG;
 10758  02F4  0023               	movlb	3	; select bank3
 10759  02F5  0819               	movf	25,w	;volatile
 10760  02F6  0020               	movlb	0	; select bank0
 10761  02F7  00CB               	movwf	??_ISR_Function
 10762  02F8  084B               	movf	??_ISR_Function,w
 10763  02F9  00E5               	movwf	_rxdata	;volatile
 10764                           
 10765                           ;main.c: 260: if(RCSTAbits.FERR)
 10766  02FA  0023               	movlb	3	; select bank3
 10767  02FB  1D1D               	btfss	29,2	;volatile
 10768  02FC  2AFF               	goto	i1l590
 10769                           
 10770                           ;main.c: 261: {
 10771                           ;main.c: 262: RCSTAbits.SPEN=0;
 10772  02FD  139D               	bcf	29,7	;volatile
 10773                           
 10774                           ;main.c: 263: RCSTAbits.SPEN=1;
 10775  02FE  179D               	bsf	29,7	;volatile
 10776  02FF                     i1l590:	
 10777                           
 10778                           ;main.c: 264: }
 10779                           ;main.c: 265: if(RCSTAbits.OERR)
 10780  02FF  1C9D               	btfss	29,1	;volatile
 10781  0300  2B05               	goto	i1l5170
 10782                           
 10783                           ;main.c: 266: {
 10784                           ;main.c: 267: RCSTAbits.CREN=0;
 10785  0301  121D               	bcf	29,4	;volatile
 10786                           
 10787                           ;main.c: 268: RCSTAbits.CREN=1;
 10788  0302  161D               	bsf	29,4	;volatile
 10789                           
 10790                           ;main.c: 269: RCSTAbits.SPEN=0;
 10791  0303  139D               	bcf	29,7	;volatile
 10792                           
 10793                           ;main.c: 270: RCSTAbits.SPEN=1;
 10794  0304  179D               	bsf	29,7	;volatile
 10795  0305                     i1l5170:	
 10796                           
 10797                           ;main.c: 271: }
 10798                           ;main.c: 273: {
 10799                           ;main.c: 274: if(rxdata=='@' && startptr1==0 && statusptr1==0 )
 10800  0305  0020               	movlb	0	; select bank0
 10801  0306  0865               	movf	_rxdata,w	;volatile
 10802  0307  3A40               	xorlw	64
 10803  0308  1D03               	skipz
 10804  0309  2B1A               	goto	i1l5180
 10805  030A  08E6               	movf	_startptr1,f
 10806  030B  1D03               	skipz
 10807  030C  2B1A               	goto	i1l5180
 10808  030D  0022               	movlb	2	; select bank2
 10809  030E  082B               	movf	(_statusptr1+1)^(0+256),w
 10810  030F  042A               	iorwf	_statusptr1^(0+256),w
 10811  0310  1D03               	skipz
 10812  0311  2B1A               	goto	i1l5180
 10813                           
 10814                           ;main.c: 275: {
 10815                           ;main.c: 277: startptr1 =1;
 10816  0312  0020               	movlb	0	; select bank0
 10817  0313  01E6               	clrf	_startptr1
 10818  0314  0AE6               	incf	_startptr1,f
 10819                           
 10820                           ;main.c: 278: arrptr =0;
 10821  0315  0022               	movlb	2	; select bank2
 10822  0316  01B2               	clrf	_arrptr^(0+256)
 10823                           
 10824                           ;main.c: 279: statusptr1 =0;
 10825  0317  01AA               	clrf	_statusptr1^(0+256)
 10826  0318  01AB               	clrf	(_statusptr1+1)^(0+256)
 10827  0319  2CF2               	goto	L21
 10828  031A                     i1l5180:	
 10829                           ;main.c: 281: }
 10830                           
 10831                           ;main.c: 280: recchksum =0;
 10832                           
 10833                           
 10834                           ;main.c: 282: else if(rxdata=='#' && startptr1==0 && statusptr1==0)
 10835  031A  0020               	movlb	0	; select bank0
 10836  031B  0865               	movf	_rxdata,w	;volatile
 10837  031C  3A23               	xorlw	35
 10838  031D  1D03               	skipz
 10839  031E  2B2F               	goto	i1l5194
 10840  031F  08E6               	movf	_startptr1,f
 10841  0320  1D03               	skipz
 10842  0321  2B2F               	goto	i1l5194
 10843  0322  0022               	movlb	2	; select bank2
 10844  0323  082B               	movf	(_statusptr1+1)^(0+256),w
 10845  0324  042A               	iorwf	_statusptr1^(0+256),w
 10846  0325  1D03               	skipz
 10847  0326  2B2F               	goto	i1l5194
 10848                           
 10849                           ;main.c: 283: {
 10850                           ;main.c: 285: startptr1 =0;
 10851  0327  0020               	movlb	0	; select bank0
 10852  0328  01E6               	clrf	_startptr1
 10853                           
 10854                           ;main.c: 286: statusptr1 =1;
 10855  0329  3001               	movlw	1
 10856  032A  0022               	movlb	2	; select bank2
 10857  032B  00AA               	movwf	_statusptr1^(0+256)
 10858  032C  3000               	movlw	0
 10859  032D  00AB               	movwf	(_statusptr1^(0+256)+1)
 10860  032E  2CF1               	goto	L22
 10861  032F                     i1l5194:	
 10862                           ;main.c: 289: }
 10863                           
 10864                           ;main.c: 288: recchksum =0;
 10865                           
 10866                           ;main.c: 287: arrptr =0;
 10867                           
 10868                           
 10869                           ;main.c: 290: else if(startptr1==0 && statusptr1==1)
 10870  032F  0020               	movlb	0	; select bank0
 10871  0330  08E6               	movf	_startptr1,f
 10872  0331  1D03               	skipz
 10873  0332  2B7F               	goto	i1l5222
 10874  0333  3001               	movlw	1
 10875  0334  0022               	movlb	2	; select bank2
 10876  0335  062A               	xorwf	_statusptr1^(0+256),w
 10877  0336  042B               	iorwf	(_statusptr1+1)^(0+256),w
 10878  0337  1D03               	skipz
 10879  0338  2B7F               	goto	i1l5222
 10880                           
 10881                           ;main.c: 291: {
 10882                           ;main.c: 292: if(recstatus==0)
 10883  0339  0023               	movlb	3	; select bank3
 10884  033A  084B               	movf	(_recstatus+1)^(0+384),w
 10885  033B  044A               	iorwf	_recstatus^(0+384),w
 10886  033C  1D03               	skipz
 10887  033D  2B4E               	goto	i1l5202
 10888                           
 10889                           ;main.c: 293: {
 10890                           ;main.c: 294: recpsstatus=rxdata;
 10891  033E  0020               	movlb	0	; select bank0
 10892  033F  0865               	movf	_rxdata,w	;volatile
 10893  0340  00CB               	movwf	??_ISR_Function
 10894  0341  01CC               	clrf	??_ISR_Function+1
 10895  0342  084B               	movf	??_ISR_Function,w
 10896  0343  0023               	movlb	3	; select bank3
 10897  0344  00C8               	movwf	_recpsstatus^(0+384)
 10898  0345  0020               	movlb	0	; select bank0
 10899  0346  084C               	movf	??_ISR_Function+1,w
 10900  0347  0023               	movlb	3	; select bank3
 10901  0348  00C9               	movwf	(_recpsstatus+1)^(0+384)
 10902                           
 10903                           ;main.c: 295: recstatus=1;
 10904  0349  3001               	movlw	1
 10905  034A  00CA               	movwf	_recstatus^(0+384)
 10906  034B  3000               	movlw	0
 10907  034C  00CB               	movwf	(_recstatus^(0+384)+1)
 10908                           
 10909                           ;main.c: 296: }
 10910  034D  2CF3               	goto	i1l575
 10911  034E                     i1l5202:	
 10912                           
 10913                           ;main.c: 297: else if(recstatus==1)
 10914  034E  3001               	movlw	1
 10915  034F  064A               	xorwf	_recstatus^(0+384),w
 10916  0350  044B               	iorwf	(_recstatus+1)^(0+384),w
 10917  0351  1D03               	skipz
 10918  0352  2CF3               	goto	i1l575
 10919                           
 10920                           ;main.c: 298: {
 10921                           ;main.c: 299: if(rxdata==recpsstatus)
 10922  0353  0020               	movlb	0	; select bank0
 10923  0354  0865               	movf	_rxdata,w	;volatile
 10924  0355  00CB               	movwf	??_ISR_Function
 10925  0356  01CC               	clrf	??_ISR_Function+1
 10926  0357  0023               	movlb	3	; select bank3
 10927  0358  0849               	movf	(_recpsstatus+1)^(0+384),w
 10928  0359  0020               	movlb	0	; select bank0
 10929  035A  064C               	xorwf	??_ISR_Function+1,w
 10930  035B  1D03               	skipz
 10931  035C  2B61               	goto	u755_25
 10932  035D  0023               	movlb	3	; select bank3
 10933  035E  0848               	movf	_recpsstatus^(0+384),w
 10934  035F  0020               	movlb	0	; select bank0
 10935  0360  064B               	xorwf	??_ISR_Function,w
 10936  0361                     u755_25:	
 10937  0361  1D03               	skipz
 10938  0362  2CE9               	goto	i1l5306
 10939                           
 10940                           ;main.c: 300: {
 10941                           ;main.c: 302: comm_error_count=0;
 10942  0363  0022               	movlb	2	; select bank2
 10943  0364  01B6               	clrf	_comm_error_count^(0+256)	;volatile
 10944                           
 10945                           ;main.c: 303: psstatusu.psstatusbyte[0]=recpsstatus;
 10946  0365  0023               	movlb	3	; select bank3
 10947  0366  0848               	movf	_recpsstatus^(0+384),w
 10948  0367  0020               	movlb	0	; select bank0
 10949  0368  00CB               	movwf	??_ISR_Function
 10950  0369  084B               	movf	??_ISR_Function,w
 10951  036A  00ED               	movwf	_psstatusu
 10952                           
 10953                           ;main.c: 304: pstowfstru.pstowfstrs.psstatusbyte=recpsstatus;
 10954  036B  0023               	movlb	3	; select bank3
 10955  036C  0848               	movf	_recpsstatus^(0+384),w
 10956  036D  0020               	movlb	0	; select bank0
 10957  036E  00CB               	movwf	??_ISR_Function
 10958  036F  084B               	movf	??_ISR_Function,w
 10959  0370  0024               	movlb	4	; select bank4
 10960  0371  00CE               	movwf	(_pstowfstru^(0+512)+12)
 10961                           
 10962                           ;main.c: 325: }
 10963                           ;main.c: 337: recstatus=0;
 10964                           
 10965                           ;main.c: 307: {
 10966  0372  0023               	movlb	3	; select bank3
 10967  0373  01CA               	clrf	_recstatus^(0+384)
 10968  0374  01CB               	clrf	(_recstatus+1)^(0+384)
 10969                           
 10970                           ;main.c: 338: startptr1=0;
 10971  0375  0020               	movlb	0	; select bank0
 10972  0376  01E6               	clrf	_startptr1
 10973                           
 10974                           ;main.c: 339: statusptr1=0;
 10975  0377  0022               	movlb	2	; select bank2
 10976  0378  01AA               	clrf	_statusptr1^(0+256)
 10977  0379  01AB               	clrf	(_statusptr1+1)^(0+256)
 10978                           
 10979                           ;main.c: 340: arrptr=0;
 10980  037A  01B2               	clrf	_arrptr^(0+256)
 10981                           
 10982                           ;main.c: 341: recchksum=0;
 10983  037B  01D4               	clrf	_recchksum^(0+256)
 10984                           
 10985                           ;main.c: 342: send_statusf=1;
 10986  037C  01D7               	clrf	_send_statusf^(0+256)
 10987  037D  0AD7               	incf	_send_statusf^(0+256),f
 10988                           
 10989                           ;main.c: 344: }
 10990  037E  2CF3               	goto	i1l575
 10991  037F                     i1l5222:	
 10992                           ;main.c: 352: }
 10993                           ;main.c: 353: }
 10994                           ;main.c: 354: }
 10995                           
 10996                           ;main.c: 351: recchksum=0;
 10997                           
 10998                           ;main.c: 350: arrptr=0;
 10999                           
 11000                           ;main.c: 349: statusptr1=0;
 11001                           
 11002                           ;main.c: 348: startptr1=0;
 11003                           
 11004                           ;main.c: 345: else
 11005                           ;main.c: 346: {
 11006                           ;main.c: 347: recstatus=0;
 11007                           
 11008                           
 11009                           ;main.c: 355: else if(startptr1==1 && statusptr1==0)
 11010  037F  0020               	movlb	0	; select bank0
 11011  0380  0866               	movf	_startptr1,w
 11012  0381  3A01               	xorlw	1
 11013  0382  1D03               	skipz
 11014  0383  2CF3               	goto	i1l575
 11015  0384  0022               	movlb	2	; select bank2
 11016  0385  082B               	movf	(_statusptr1+1)^(0+256),w
 11017  0386  042A               	iorwf	_statusptr1^(0+256),w
 11018  0387  1D03               	skipz
 11019  0388  2CF3               	goto	i1l575
 11020                           
 11021                           ;main.c: 356: {
 11022                           ;main.c: 357: if(arrptr<=21)
 11023  0389  3016               	movlw	22
 11024  038A  0232               	subwf	_arrptr^(0+256),w
 11025  038B  1803               	skipnc
 11026  038C  2BA8               	goto	i1l5234
 11027                           
 11028                           ;main.c: 358: {
 11029                           ;main.c: 359: rec_arr[arrptr]=rxdata;
 11030  038D  0020               	movlb	0	; select bank0
 11031  038E  0865               	movf	_rxdata,w	;volatile
 11032  038F  00CB               	movwf	??_ISR_Function
 11033  0390  0022               	movlb	2	; select bank2
 11034  0391  0832               	movf	_arrptr^(0+256),w
 11035  0392  3EA0               	addlw	_rec_arr& (0+255)
 11036  0393  0086               	movwf	6
 11037  0394  3002               	movlw	2	; select bank5/6
 11038  0395  0087               	movwf	7
 11039  0396  0020               	movlb	0	; select bank0
 11040  0397  084B               	movf	??_ISR_Function,w
 11041  0398  0081               	movwf	1
 11042                           
 11043                           ;main.c: 360: recchksum=recchksum+rxdata;
 11044  0399  0022               	movlb	2	; select bank2
 11045  039A  0854               	movf	_recchksum^(0+256),w
 11046  039B  0020               	movlb	0	; select bank0
 11047  039C  0765               	addwf	_rxdata,w	;volatile
 11048  039D  00CB               	movwf	??_ISR_Function
 11049  039E  084B               	movf	??_ISR_Function,w
 11050  039F  0022               	movlb	2	; select bank2
 11051  03A0  00D4               	movwf	_recchksum^(0+256)
 11052                           
 11053                           ;main.c: 361: arrptr++;
 11054  03A1  3001               	movlw	1
 11055  03A2  0020               	movlb	0	; select bank0
 11056  03A3  00CB               	movwf	??_ISR_Function
 11057  03A4  084B               	movf	??_ISR_Function,w
 11058  03A5  0022               	movlb	2	; select bank2
 11059  03A6  07B2               	addwf	_arrptr^(0+256),f
 11060                           
 11061                           ;main.c: 362: }
 11062  03A7  2CF3               	goto	i1l575
 11063  03A8                     i1l5234:	
 11064                           
 11065                           ;main.c: 363: else if(recchksum==rxdata)
 11066  03A8  0854               	movf	_recchksum^(0+256),w
 11067  03A9  0020               	movlb	0	; select bank0
 11068  03AA  0665               	xorwf	_rxdata,w	;volatile
 11069  03AB  1D03               	skipz
 11070  03AC  2CE9               	goto	i1l5306
 11071                           
 11072                           ;main.c: 365: {
 11073                           ;main.c: 379: comm_error_count=0;
 11074  03AD  0022               	movlb	2	; select bank2
 11075  03AE  01B6               	clrf	_comm_error_count^(0+256)	;volatile
 11076                           
 11077                           ;main.c: 380: if( cEditfg == 0)
 11078  03AF  0020               	movlb	0	; select bank0
 11079  03B0  08DE               	movf	_cEditfg,f
 11080  03B1  1D03               	skipz
 11081  03B2  2BE9               	goto	i1l608
 11082                           
 11083                           ;main.c: 381: {
 11084                           ;main.c: 382: for(ijk=0;ijk<=21;ijk++)
 11085  03B3  0022               	movlb	2	; select bank2
 11086  03B4  01A2               	clrf	_ijk^(0+256)
 11087  03B5  01A3               	clrf	(_ijk+1)^(0+256)
 11088  03B6  3000               	movlw	0
 11089  03B7  0223               	subwf	(_ijk+1)^(0+256),w
 11090  03B8  3016               	movlw	22
 11091  03B9  1903               	skipnz
 11092  03BA  0222               	subwf	_ijk^(0+256),w
 11093  03BB  1803               	btfsc	3,0
 11094  03BC  2BDA               	goto	i1l5252
 11095  03BD                     i1l5246:	
 11096                           
 11097                           ;main.c: 383: {
 11098                           ;main.c: 384: pstowfstru.pstransarr[ijk]=rec_arr[ijk];
 11099  03BD  0822               	movf	_ijk^(0+256),w
 11100  03BE  3EA0               	addlw	_rec_arr& (0+255)
 11101  03BF  0086               	movwf	6
 11102  03C0  3002               	movlw	2	; select bank5/6
 11103  03C1  0087               	movwf	7
 11104  03C2  0801               	movf	1,w
 11105  03C3  0020               	movlb	0	; select bank0
 11106  03C4  00CB               	movwf	??_ISR_Function
 11107  03C5  0022               	movlb	2	; select bank2
 11108  03C6  0822               	movf	_ijk^(0+256),w
 11109  03C7  3E42               	addlw	_pstowfstru& (0+255)
 11110  03C8  0086               	movwf	6
 11111  03C9  3002               	movlw	2	; select bank4/5
 11112  03CA  0087               	movwf	7
 11113  03CB  0020               	movlb	0	; select bank0
 11114  03CC  084B               	movf	??_ISR_Function,w
 11115  03CD  0081               	movwf	1
 11116  03CE  3001               	movlw	1
 11117  03CF  0022               	movlb	2	; select bank2
 11118  03D0  07A2               	addwf	_ijk^(0+256),f
 11119  03D1  3000               	movlw	0
 11120  03D2  3DA3               	addwfc	(_ijk+1)^(0+256),f
 11121  03D3  3000               	movlw	0
 11122  03D4  0223               	subwf	(_ijk+1)^(0+256),w
 11123  03D5  3016               	movlw	22
 11124  03D6  1903               	skipnz
 11125  03D7  0222               	subwf	_ijk^(0+256),w
 11126  03D8  1C03               	skipc
 11127  03D9  2BBD               	goto	i1l5246
 11128  03DA                     i1l5252:	
 11129                           
 11130                           ;main.c: 385: }
 11131                           ;main.c: 386: weldmode=pstowfstru.pstowfstrs.weldmode;
 11132  03DA  0024               	movlb	4	; select bank4
 11133  03DB  0842               	movf	_pstowfstru^(0+512),w
 11134  03DC  0020               	movlb	0	; select bank0
 11135  03DD  00CB               	movwf	??_ISR_Function
 11136  03DE  084B               	movf	??_ISR_Function,w
 11137  03DF  00E8               	movwf	_weldmode	;volatile
 11138                           
 11139                           ;main.c: 387: setwirespeed=pstowfstru.pstowfstrs.setwspeed;
 11140  03E0  0024               	movlb	4	; select bank4
 11141  03E1  0843               	movf	(_pstowfstru^(0+512)+1),w
 11142  03E2  0020               	movlb	0	; select bank0
 11143  03E3  00CB               	movwf	??_ISR_Function
 11144  03E4  01CC               	clrf	??_ISR_Function+1
 11145  03E5  084B               	movf	??_ISR_Function,w
 11146  03E6  00DC               	movwf	_setwirespeed
 11147  03E7  084C               	movf	??_ISR_Function+1,w
 11148  03E8  00DD               	movwf	_setwirespeed+1
 11149  03E9                     i1l608:	
 11150                           
 11151                           ;main.c: 388: }
 11152                           ;main.c: 389: wfstatusu.wfstatusbyte[0]=pstowfstru.pstowfstrs.wfstatusbyte;
 11153  03E9  0024               	movlb	4	; select bank4
 11154  03EA  084F               	movf	(_pstowfstru^(0+512)+13),w
 11155  03EB  0020               	movlb	0	; select bank0
 11156  03EC  00CB               	movwf	??_ISR_Function
 11157  03ED  084B               	movf	??_ISR_Function,w
 11158  03EE  00EE               	movwf	_wfstatusu
 11159                           
 11160                           ;main.c: 390: if(wfstatusu.wfstatuss.twotfourtmode1==1)
 11161  03EF  1C6E               	btfss	_wfstatusu,0
 11162  03F0  2BF4               	goto	i1l611
 11163                           
 11164                           ;main.c: 391: {
 11165                           ;main.c: 392: TypeU.TypeS.twot=0;
 11166  03F1  1269               	bcf	_TypeU,4
 11167                           
 11168                           ;main.c: 393: TypeU.TypeS.fourt=1;
 11169  03F2  16E9               	bsf	_TypeU,5
 11170                           
 11171                           ;main.c: 394: }
 11172  03F3  2BF6               	goto	i1l5258
 11173  03F4                     i1l611:	
 11174                           
 11175                           ;main.c: 395: else
 11176                           ;main.c: 396: {
 11177                           ;main.c: 397: TypeU.TypeS.twot=1;
 11178  03F4  1669               	bsf	_TypeU,4
 11179                           
 11180                           ;main.c: 398: TypeU.TypeS.fourt=0;
 11181  03F5  12E9               	bcf	_TypeU,5
 11182  03F6                     i1l5258:	
 11183                           
 11184                           ;main.c: 399: }
 11185                           ;main.c: 400: if(cEditfg == 0)
 11186  03F6  08DE               	movf	_cEditfg,f
 11187  03F7  1D03               	skipz
 11188  03F8  2C10               	goto	i1l613
 11189                           
 11190                           ;main.c: 401: {
 11191                           ;main.c: 402: setvoltage=pstowfstru.pstowfstrs.Hi_setvoltage;
 11192  03F9  0024               	movlb	4	; select bank4
 11193  03FA  0847               	movf	(_pstowfstru^(0+512)+5),w
 11194  03FB  0020               	movlb	0	; select bank0
 11195  03FC  00CB               	movwf	??_ISR_Function
 11196  03FD  01CC               	clrf	??_ISR_Function+1
 11197  03FE  084B               	movf	??_ISR_Function,w
 11198  03FF  00DA               	movwf	_setvoltage
 11199  0400  084C               	movf	??_ISR_Function+1,w
 11200  0401  00DB               	movwf	_setvoltage+1
 11201                           
 11202                           ;main.c: 403: setvoltage<<=8;
 11203  0402  3008               	movlw	8
 11204  0403                     u765_25:	
 11205  0403  35DA               	lslf	_setvoltage,f
 11206  0404  0DDB               	rlf	_setvoltage+1,f
 11207  0405  0B89               	decfsz	9,f
 11208  0406  2C03               	goto	u765_25
 11209                           
 11210                           ;main.c: 404: setvoltage|=pstowfstru.pstowfstrs.Lo_setvoltage;
 11211  0407  0024               	movlb	4	; select bank4
 11212  0408  0848               	movf	(_pstowfstru^(0+512)+6),w
 11213  0409  0020               	movlb	0	; select bank0
 11214  040A  00CB               	movwf	??_ISR_Function
 11215  040B  01CC               	clrf	??_ISR_Function+1
 11216  040C  084B               	movf	??_ISR_Function,w
 11217  040D  04DA               	iorwf	_setvoltage,f
 11218  040E  084C               	movf	??_ISR_Function+1,w
 11219  040F  04DB               	iorwf	_setvoltage+1,f
 11220  0410                     i1l613:	
 11221                           
 11222                           ;main.c: 405: }
 11223                           ;main.c: 407: setcurrent=pstowfstru.pstowfstrs.Hi_setcurrent;
 11224  0410  0024               	movlb	4	; select bank4
 11225  0411  0844               	movf	(_pstowfstru^(0+512)+2),w
 11226  0412  0020               	movlb	0	; select bank0
 11227  0413  00CB               	movwf	??_ISR_Function
 11228  0414  01CC               	clrf	??_ISR_Function+1
 11229  0415  084B               	movf	??_ISR_Function,w
 11230  0416  0022               	movlb	2	; select bank2
 11231  0417  00A8               	movwf	_setcurrent^(0+256)
 11232  0418  0020               	movlb	0	; select bank0
 11233  0419  084C               	movf	??_ISR_Function+1,w
 11234  041A  0022               	movlb	2	; select bank2
 11235  041B  00A9               	movwf	(_setcurrent+1)^(0+256)
 11236                           
 11237                           ;main.c: 408: setcurrent<<=8;
 11238  041C  3008               	movlw	8
 11239  041D                     u766_25:	
 11240  041D  35A8               	lslf	_setcurrent^(0+256),f
 11241  041E  0DA9               	rlf	(_setcurrent+1)^(0+256),f
 11242  041F  0B89               	decfsz	9,f
 11243  0420  2C1D               	goto	u766_25
 11244                           
 11245                           ;main.c: 409: setcurrent|=pstowfstru.pstowfstrs.Lo_setcurrent;
 11246  0421  0024               	movlb	4	; select bank4
 11247  0422  0845               	movf	(_pstowfstru^(0+512)+3),w
 11248  0423  0020               	movlb	0	; select bank0
 11249  0424  00CB               	movwf	??_ISR_Function
 11250  0425  01CC               	clrf	??_ISR_Function+1
 11251  0426  084B               	movf	??_ISR_Function,w
 11252  0427  0022               	movlb	2	; select bank2
 11253  0428  04A8               	iorwf	_setcurrent^(0+256),f
 11254  0429  0020               	movlb	0	; select bank0
 11255  042A  084C               	movf	??_ISR_Function+1,w
 11256  042B  0022               	movlb	2	; select bank2
 11257  042C  04A9               	iorwf	(_setcurrent+1)^(0+256),f
 11258                           
 11259                           ;main.c: 412: Actual_amp=pstowfstru.pstowfstrs.Hi_actualcurrent;
 11260  042D  0024               	movlb	4	; select bank4
 11261  042E  084A               	movf	(_pstowfstru^(0+512)+8),w
 11262  042F  0020               	movlb	0	; select bank0
 11263  0430  00CB               	movwf	??_ISR_Function
 11264  0431  01CC               	clrf	??_ISR_Function+1
 11265  0432  084B               	movf	??_ISR_Function,w
 11266  0433  0023               	movlb	3	; select bank3
 11267  0434  00E3               	movwf	_Actual_amp^(0+384)
 11268  0435  0020               	movlb	0	; select bank0
 11269  0436  084C               	movf	??_ISR_Function+1,w
 11270  0437  0023               	movlb	3	; select bank3
 11271  0438  00E4               	movwf	(_Actual_amp+1)^(0+384)
 11272                           
 11273                           ;main.c: 413: Actual_amp<<=8;
 11274  0439  3008               	movlw	8
 11275  043A                     u767_25:	
 11276  043A  35E3               	lslf	_Actual_amp^(0+384),f
 11277  043B  0DE4               	rlf	(_Actual_amp+1)^(0+384),f
 11278  043C  0B89               	decfsz	9,f
 11279  043D  2C3A               	goto	u767_25
 11280                           
 11281                           ;main.c: 414: Actual_amp|=pstowfstru.pstowfstrs.Lo_actualcurrent;
 11282  043E  0024               	movlb	4	; select bank4
 11283  043F  084B               	movf	(_pstowfstru^(0+512)+9),w
 11284  0440  0020               	movlb	0	; select bank0
 11285  0441  00CB               	movwf	??_ISR_Function
 11286  0442  01CC               	clrf	??_ISR_Function+1
 11287  0443  084B               	movf	??_ISR_Function,w
 11288  0444  0023               	movlb	3	; select bank3
 11289  0445  04E3               	iorwf	_Actual_amp^(0+384),f
 11290  0446  0020               	movlb	0	; select bank0
 11291  0447  084C               	movf	??_ISR_Function+1,w
 11292  0448  0023               	movlb	3	; select bank3
 11293  0449  04E4               	iorwf	(_Actual_amp+1)^(0+384),f
 11294                           
 11295                           ;main.c: 421: Actual_vtg=pstowfstru.pstowfstrs.Hi_actualvoltage;
 11296  044A  0024               	movlb	4	; select bank4
 11297  044B  084C               	movf	(_pstowfstru^(0+512)+10),w
 11298  044C  0020               	movlb	0	; select bank0
 11299  044D  00CB               	movwf	??_ISR_Function
 11300  044E  01CC               	clrf	??_ISR_Function+1
 11301  044F  084B               	movf	??_ISR_Function,w
 11302  0450  0023               	movlb	3	; select bank3
 11303  0451  00E5               	movwf	_Actual_vtg^(0+384)
 11304  0452  0020               	movlb	0	; select bank0
 11305  0453  084C               	movf	??_ISR_Function+1,w
 11306  0454  0023               	movlb	3	; select bank3
 11307  0455  00E6               	movwf	(_Actual_vtg+1)^(0+384)
 11308                           
 11309                           ;main.c: 422: Actual_vtg<<=8;
 11310  0456  3008               	movlw	8
 11311  0457                     u768_25:	
 11312  0457  35E5               	lslf	_Actual_vtg^(0+384),f
 11313  0458  0DE6               	rlf	(_Actual_vtg+1)^(0+384),f
 11314  0459  0B89               	decfsz	9,f
 11315  045A  2C57               	goto	u768_25
 11316                           
 11317                           ;main.c: 423: Actual_vtg|=pstowfstru.pstowfstrs.Lo_actualvoltage;
 11318  045B  0024               	movlb	4	; select bank4
 11319  045C  084D               	movf	(_pstowfstru^(0+512)+11),w
 11320  045D  0020               	movlb	0	; select bank0
 11321  045E  00CB               	movwf	??_ISR_Function
 11322  045F  01CC               	clrf	??_ISR_Function+1
 11323  0460  084B               	movf	??_ISR_Function,w
 11324  0461  0023               	movlb	3	; select bank3
 11325  0462  04E5               	iorwf	_Actual_vtg^(0+384),f
 11326  0463  0020               	movlb	0	; select bank0
 11327  0464  084C               	movf	??_ISR_Function+1,w
 11328  0465  0023               	movlb	3	; select bank3
 11329  0466  04E6               	iorwf	(_Actual_vtg+1)^(0+384),f
 11330                           
 11331                           ;main.c: 425: rel_wirespeed=pstowfstru.pstowfstrs.rel_wirespeed;
 11332  0467  0024               	movlb	4	; select bank4
 11333  0468  0850               	movf	(_pstowfstru^(0+512)+14),w
 11334  0469  0020               	movlb	0	; select bank0
 11335  046A  00CB               	movwf	??_ISR_Function
 11336  046B  01CC               	clrf	??_ISR_Function+1
 11337  046C  084B               	movf	??_ISR_Function,w
 11338  046D  0023               	movlb	3	; select bank3
 11339  046E  00CC               	movwf	_rel_wirespeed^(0+384)
 11340  046F  0020               	movlb	0	; select bank0
 11341  0470  084C               	movf	??_ISR_Function+1,w
 11342  0471  0023               	movlb	3	; select bank3
 11343  0472  00CD               	movwf	(_rel_wirespeed+1)^(0+384)
 11344                           
 11345                           ;main.c: 427: crater_speed=pstowfstru.pstowfstrs.crater_speed;
 11346  0473  0024               	movlb	4	; select bank4
 11347  0474  0854               	movf	(_pstowfstru^(0+512)+18),w
 11348  0475  0020               	movlb	0	; select bank0
 11349  0476  00CB               	movwf	??_ISR_Function
 11350  0477  084B               	movf	??_ISR_Function,w
 11351  0478  0022               	movlb	2	; select bank2
 11352  0479  00B9               	movwf	_crater_speed^(0+256)	;volatile
 11353                           
 11354                           ;main.c: 429: if(cEditfg == 0)
 11355  047A  0020               	movlb	0	; select bank0
 11356  047B  08DE               	movf	_cEditfg,f
 11357  047C  1D03               	skipz
 11358  047D  2C84               	goto	i1l5266
 11359                           
 11360                           ;main.c: 430: {
 11361                           ;main.c: 431: psstatusu.psstatusbyte[0]=pstowfstru.pstowfstrs.psstatusbyte;
 11362  047E  0024               	movlb	4	; select bank4
 11363  047F  084E               	movf	(_pstowfstru^(0+512)+12),w
 11364  0480  0020               	movlb	0	; select bank0
 11365  0481  00CB               	movwf	??_ISR_Function
 11366  0482  084B               	movf	??_ISR_Function,w
 11367  0483  00ED               	movwf	_psstatusu
 11368  0484                     i1l5266:	
 11369                           
 11370                           ;main.c: 432: }
 11371                           ;main.c: 434: if((psstatusu.psstatuss.weldoncyclestrt == 0)&&(cWeldStopfg == 0))
 11372  0484  196D               	btfsc	_psstatusu,2
 11373  0485  2C9D               	goto	i1l5282
 11374  0486  0023               	movlb	3	; select bank3
 11375  0487  08D3               	movf	_cWeldStopfg^(0+384),f
 11376  0488  1D03               	skipz
 11377  0489  2C9D               	goto	i1l5282
 11378                           
 11379                           ;main.c: 435: {
 11380                           ;main.c: 436: TypeU.TypeS.wirespeed=1;
 11381  048A  0020               	movlb	0	; select bank0
 11382  048B  1469               	bsf	_TypeU,0
 11383                           
 11384                           ;main.c: 437: TypeU.TypeS.amp=0;
 11385  048C  106A               	bcf	_TypeU+1,0
 11386                           
 11387                           ;main.c: 438: disp_hex_window1(setwirespeed);
 11388  048D  085D               	movf	_setwirespeed+1,w
 11389  048E  01F9               	clrf	i1disp_hex_window1@hex_data+1
 11390  048F  07F9               	addwf	i1disp_hex_window1@hex_data+1,f
 11391  0490  085C               	movf	_setwirespeed,w
 11392  0491  01F8               	clrf	i1disp_hex_window1@hex_data
 11393  0492  07F8               	addwf	i1disp_hex_window1@hex_data,f
 11394  0493  319A  22DB  3180   	fcall	i1_disp_hex_window1
 11395                           
 11396                           ;main.c: 439: TypeDP.DPGROUP[0]=0x00;
 11397  0496  0020               	movlb	0	; select bank0
 11398  0497  01EB               	clrf	_TypeDP
 11399                           
 11400                           ;main.c: 440: TypeDP.TypeD.digitdp2 =1;
 11401  0498  14EB               	bsf	_TypeDP,1
 11402                           
 11403                           ;main.c: 441: TypeDP.TypeD.digitdp5 =1;
 11404  0499  166B               	bsf	_TypeDP,4
 11405                           
 11406                           ;main.c: 442: cWeldStopfg = 1;
 11407  049A  0023               	movlb	3	; select bank3
 11408  049B  01D3               	clrf	_cWeldStopfg^(0+384)
 11409  049C  0AD3               	incf	_cWeldStopfg^(0+384),f
 11410  049D                     i1l5282:	
 11411                           
 11412                           ;main.c: 443: }
 11413                           ;main.c: 446: error_code1=pstowfstru.pstowfstrs.error_code1;
 11414  049D  0024               	movlb	4	; select bank4
 11415  049E  0852               	movf	(_pstowfstru^(0+512)+16),w
 11416  049F  0020               	movlb	0	; select bank0
 11417  04A0  00CB               	movwf	??_ISR_Function
 11418  04A1  084B               	movf	??_ISR_Function,w
 11419  04A2  0023               	movlb	3	; select bank3
 11420  04A3  00D6               	movwf	_error_code1^(0+384)	;volatile
 11421                           
 11422                           ;main.c: 447: error_code2=pstowfstru.pstowfstrs.error_code2;
 11423  04A4  0024               	movlb	4	; select bank4
 11424  04A5  0853               	movf	(_pstowfstru^(0+512)+17),w
 11425  04A6  0020               	movlb	0	; select bank0
 11426  04A7  00CB               	movwf	??_ISR_Function
 11427  04A8  084B               	movf	??_ISR_Function,w
 11428  04A9  0023               	movlb	3	; select bank3
 11429  04AA  00D7               	movwf	_error_code2^(0+384)	;volatile
 11430                           
 11431                           ;main.c: 449: commandu.commandbyte[0]=pstowfstru.pstowfstrs.command_to_wf;
 11432  04AB  0024               	movlb	4	; select bank4
 11433  04AC  0856               	movf	(_pstowfstru^(0+512)+20),w
 11434  04AD  0020               	movlb	0	; select bank0
 11435  04AE  00CB               	movwf	??_ISR_Function
 11436  04AF  084B               	movf	??_ISR_Function,w
 11437  04B0  0023               	movlb	3	; select bank3
 11438  04B1  00DF               	movwf	_commandu^(0+384)
 11439                           
 11440                           ;main.c: 450: erroru.errorstatusbyte[0]=pstowfstru.pstowfstrs.error_code1;;
 11441  04B2  0024               	movlb	4	; select bank4
 11442  04B3  0852               	movf	(_pstowfstru^(0+512)+16),w
 11443  04B4  0020               	movlb	0	; select bank0
 11444  04B5  00CB               	movwf	??_ISR_Function
 11445  04B6  084B               	movf	??_ISR_Function,w
 11446  04B7  0022               	movlb	2	; select bank2
 11447  04B8  00E0               	movwf	_erroru^(0+256)
 11448                           
 11449                           ;main.c: 451: erroru.errorstatusbyte[1]=pstowfstru.pstowfstrs.error_code2;
 11450  04B9  0024               	movlb	4	; select bank4
 11451  04BA  0853               	movf	(_pstowfstru^(0+512)+17),w
 11452  04BB  0020               	movlb	0	; select bank0
 11453  04BC  00CB               	movwf	??_ISR_Function
 11454  04BD  084B               	movf	??_ISR_Function,w
 11455  04BE  0022               	movlb	2	; select bank2
 11456  04BF  00E1               	movwf	(_erroru^(0+256)+1)
 11457                           
 11458                           ;main.c: 453: creep_speed=pstowfstru.pstowfstrs.creep_speed;
 11459  04C0  0024               	movlb	4	; select bank4
 11460  04C1  0855               	movf	(_pstowfstru^(0+512)+19),w
 11461  04C2  0020               	movlb	0	; select bank0
 11462  04C3  00CB               	movwf	??_ISR_Function
 11463  04C4  084B               	movf	??_ISR_Function,w
 11464  04C5  0022               	movlb	2	; select bank2
 11465  04C6  00BA               	movwf	_creep_speed^(0+256)	;volatile
 11466                           
 11467                           ;main.c: 455: if(commandu.commands.volt_or_arc==1)
 11468  04C7  0023               	movlb	3	; select bank3
 11469  04C8  1C5F               	btfss	_commandu^(0+384),0
 11470  04C9  2CCD               	goto	i1l616
 11471                           
 11472                           ;main.c: 457: {
 11473                           ;main.c: 458: TypeU.TypeS.arclength=0;
 11474  04CA  0020               	movlb	0	; select bank0
 11475  04CB  1169               	bcf	_TypeU,2
 11476                           
 11477                           ;main.c: 459: TypeU.TypeS.vtg =1;
 11478  04CC  14EA               	bsf	_TypeU+1,1
 11479  04CD                     i1l616:	
 11480                           
 11481                           ;main.c: 460: }
 11482                           ;main.c: 469: if(wfstatusu.wfstatuss.twotfourtmode1 == 1)
 11483  04CD  0020               	movlb	0	; select bank0
 11484  04CE  1C6E               	btfss	_wfstatusu,0
 11485  04CF  2CD4               	goto	i1l5300
 11486                           
 11487                           ;main.c: 470: {
 11488                           ;main.c: 471: cWf2t4tmodefg = 1;
 11489  04D0  0022               	movlb	2	; select bank2
 11490  04D1  01B3               	clrf	_cWf2t4tmodefg^(0+256)
 11491  04D2  0AB3               	incf	_cWf2t4tmodefg^(0+256),f
 11492                           
 11493                           ;main.c: 472: }
 11494  04D3  2CD6               	goto	i1l618
 11495  04D4                     i1l5300:	
 11496                           
 11497                           ;main.c: 473: else
 11498                           ;main.c: 474: {
 11499                           ;main.c: 475: cWf2t4tmodefg = 0;
 11500  04D4  0022               	movlb	2	; select bank2
 11501  04D5  01B3               	clrf	_cWf2t4tmodefg^(0+256)
 11502  04D6                     i1l618:	
 11503                           
 11504                           ;main.c: 476: }
 11505                           ;main.c: 481: startptr1=0;
 11506  04D6  0020               	movlb	0	; select bank0
 11507  04D7  01E6               	clrf	_startptr1
 11508                           
 11509                           ;main.c: 482: arrptr=0;
 11510  04D8  0022               	movlb	2	; select bank2
 11511  04D9  01B2               	clrf	_arrptr^(0+256)
 11512                           
 11513                           ;main.c: 483: recchksum=0;
 11514  04DA  01D4               	clrf	_recchksum^(0+256)
 11515                           
 11516                           ;main.c: 484: recstatus=0;
 11517  04DB  0023               	movlb	3	; select bank3
 11518  04DC  01CA               	clrf	_recstatus^(0+384)
 11519  04DD  01CB               	clrf	(_recstatus+1)^(0+384)
 11520                           
 11521                           ;main.c: 485: statusptr1=0;
 11522  04DE  0022               	movlb	2	; select bank2
 11523  04DF  01AA               	clrf	_statusptr1^(0+256)
 11524  04E0  01AB               	clrf	(_statusptr1+1)^(0+256)
 11525                           
 11526                           ;main.c: 486: transmitonf=1;
 11527  04E1  01DB               	clrf	_transmitonf^(0+256)
 11528  04E2  0ADB               	incf	_transmitonf^(0+256),f
 11529                           
 11530                           ;main.c: 487: onesecf=1;
 11531  04E3  3001               	movlw	1
 11532  04E4  0020               	movlb	0	; select bank0
 11533  04E5  00CB               	movwf	??_ISR_Function
 11534  04E6  084B               	movf	??_ISR_Function,w
 11535  04E7  00E3               	movwf	_onesecf	;volatile
 11536                           
 11537                           ;main.c: 489: }
 11538  04E8  2CF3               	goto	i1l575
 11539  04E9                     i1l5306:	
 11540                           
 11541                           ;main.c: 490: else
 11542                           ;main.c: 491: {
 11543                           ;main.c: 492: recstatus=0;
 11544  04E9  0023               	movlb	3	; select bank3
 11545  04EA  01CA               	clrf	_recstatus^(0+384)
 11546  04EB  01CB               	clrf	(_recstatus+1)^(0+384)
 11547                           
 11548                           ;main.c: 493: startptr1=0;
 11549  04EC  0020               	movlb	0	; select bank0
 11550  04ED  01E6               	clrf	_startptr1
 11551                           
 11552                           ;main.c: 494: statusptr1=0;
 11553  04EE  0022               	movlb	2	; select bank2
 11554  04EF  01AA               	clrf	_statusptr1^(0+256)
 11555  04F0  01AB               	clrf	(_statusptr1+1)^(0+256)
 11556  04F1                     L22:	
 11557                           
 11558                           ;main.c: 495: arrptr=0;
 11559  04F1  01B2               	clrf	_arrptr^(0+256)
 11560  04F2                     L21:	
 11561                           
 11562                           ;main.c: 496: recchksum=0;
 11563  04F2  01D4               	clrf	_recchksum^(0+256)
 11564  04F3                     i1l575:	
 11565  04F3  0020               	movlb	0	; select bank0
 11566  04F4  0853               	movf	??_ISR_Function+8,w
 11567  04F5  00FF               	movwf	127
 11568  04F6  107E               	bcf	126,0	;clear compiler interrupt flag
 11569  04F7  0009               	retfie
 11570  04F8                     __end_of_ISR_Function:	
 11571                           
 11572                           	psect	text35
 11573  1ADB                     __ptext35:	
 11574 ;; *************** function i1_disp_hex_window1 *****************
 11575 ;; Defined at:
 11576 ;;		line 152 in file "DISPLAY.C"
 11577 ;; Parameters:    Size  Location     Type
 11578 ;;  hex_data        2    8[COMMON] unsigned int 
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;		None
 11581 ;; Return value:  Size  Location     Type
 11582 ;;		None               void
 11583 ;; Registers used:
 11584 ;;		wreg, status,2, status,0, pclath, cstack
 11585 ;; Tracked objects:
 11586 ;;		On entry : 0/0
 11587 ;;		On exit  : 0/0
 11588 ;;		Unchanged: 0/0
 11589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11593 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11594 ;;Total ram usage:        3 bytes
 11595 ;; Hardware stack levels used:    1
 11596 ;; Hardware stack levels required when called:    1
 11597 ;; This function calls:
 11598 ;;		i1___lwdiv
 11599 ;;		i1___lwmod
 11600 ;; This function is called by:
 11601 ;;		_ISR_Function
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           
 11606                           ;psect for function i1_disp_hex_window1
 11607  1ADB                     i1_disp_hex_window1:	
 11608                           
 11609                           ;DISPLAY.C: 155: diswin1[2]= hex_data % 10;
 11610                           
 11611                           ;incstack = 0
 11612                           ; Regs used in i1_disp_hex_window1: [wreg+status,2+status,0+pclath+cstack]
 11613  1ADB  300A               	movlw	10
 11614  1ADC  00F0               	movwf	i1___lwmod@divisor
 11615  1ADD  3000               	movlw	0
 11616  1ADE  00F1               	movwf	i1___lwmod@divisor+1
 11617  1ADF  0879               	movf	i1disp_hex_window1@hex_data+1,w
 11618  1AE0  01F3               	clrf	i1___lwmod@dividend+1
 11619  1AE1  07F3               	addwf	i1___lwmod@dividend+1,f
 11620  1AE2  0878               	movf	i1disp_hex_window1@hex_data,w
 11621  1AE3  01F2               	clrf	i1___lwmod@dividend
 11622  1AE4  07F2               	addwf	i1___lwmod@dividend,f
 11623  1AE5  3199  21C7  319A   	fcall	i1___lwmod
 11624  1AE8  0870               	movf	?i1___lwmod,w
 11625  1AE9  00FA               	movwf	??i1_disp_hex_window1
 11626  1AEA  087A               	movf	??i1_disp_hex_window1,w
 11627  1AEB  0022               	movlb	2	; select bank2
 11628  1AEC  00E6               	movwf	(_diswin1^(0+256)+2)
 11629                           
 11630                           ;DISPLAY.C: 156: hex_data /= 10;
 11631  1AED  300A               	movlw	10
 11632  1AEE  00F0               	movwf	i1___lwdiv@divisor
 11633  1AEF  3000               	movlw	0
 11634  1AF0  00F1               	movwf	i1___lwdiv@divisor+1
 11635  1AF1  0879               	movf	i1disp_hex_window1@hex_data+1,w
 11636  1AF2  01F3               	clrf	i1___lwdiv@dividend+1
 11637  1AF3  07F3               	addwf	i1___lwdiv@dividend+1,f
 11638  1AF4  0878               	movf	i1disp_hex_window1@hex_data,w
 11639  1AF5  01F2               	clrf	i1___lwdiv@dividend
 11640  1AF6  07F2               	addwf	i1___lwdiv@dividend,f
 11641  1AF7  3199  21F5  319A   	fcall	i1___lwdiv
 11642  1AFA  0871               	movf	?i1___lwdiv+1,w
 11643  1AFB  01F9               	clrf	i1disp_hex_window1@hex_data+1
 11644  1AFC  07F9               	addwf	i1disp_hex_window1@hex_data+1,f
 11645  1AFD  0870               	movf	?i1___lwdiv,w
 11646  1AFE  01F8               	clrf	i1disp_hex_window1@hex_data
 11647  1AFF  07F8               	addwf	i1disp_hex_window1@hex_data,f
 11648                           
 11649                           ;DISPLAY.C: 157: diswin1[1]= hex_data % 10;
 11650  1B00  300A               	movlw	10
 11651  1B01  00F0               	movwf	i1___lwmod@divisor
 11652  1B02  3000               	movlw	0
 11653  1B03  00F1               	movwf	i1___lwmod@divisor+1
 11654  1B04  0879               	movf	i1disp_hex_window1@hex_data+1,w
 11655  1B05  01F3               	clrf	i1___lwmod@dividend+1
 11656  1B06  07F3               	addwf	i1___lwmod@dividend+1,f
 11657  1B07  0878               	movf	i1disp_hex_window1@hex_data,w
 11658  1B08  01F2               	clrf	i1___lwmod@dividend
 11659  1B09  07F2               	addwf	i1___lwmod@dividend,f
 11660  1B0A  3199  21C7  319A   	fcall	i1___lwmod
 11661  1B0D  0870               	movf	?i1___lwmod,w
 11662  1B0E  00FA               	movwf	??i1_disp_hex_window1
 11663  1B0F  087A               	movf	??i1_disp_hex_window1,w
 11664  1B10  0022               	movlb	2	; select bank2
 11665  1B11  00E5               	movwf	(_diswin1^(0+256)+1)
 11666                           
 11667                           ;DISPLAY.C: 158: hex_data /= 10;
 11668  1B12  300A               	movlw	10
 11669  1B13  00F0               	movwf	i1___lwdiv@divisor
 11670  1B14  3000               	movlw	0
 11671  1B15  00F1               	movwf	i1___lwdiv@divisor+1
 11672  1B16  0879               	movf	i1disp_hex_window1@hex_data+1,w
 11673  1B17  01F3               	clrf	i1___lwdiv@dividend+1
 11674  1B18  07F3               	addwf	i1___lwdiv@dividend+1,f
 11675  1B19  0878               	movf	i1disp_hex_window1@hex_data,w
 11676  1B1A  01F2               	clrf	i1___lwdiv@dividend
 11677  1B1B  07F2               	addwf	i1___lwdiv@dividend,f
 11678  1B1C  3199  21F5  319A   	fcall	i1___lwdiv
 11679  1B1F  0871               	movf	?i1___lwdiv+1,w
 11680  1B20  01F9               	clrf	i1disp_hex_window1@hex_data+1
 11681  1B21  07F9               	addwf	i1disp_hex_window1@hex_data+1,f
 11682  1B22  0870               	movf	?i1___lwdiv,w
 11683  1B23  01F8               	clrf	i1disp_hex_window1@hex_data
 11684  1B24  07F8               	addwf	i1disp_hex_window1@hex_data,f
 11685                           
 11686                           ;DISPLAY.C: 159: diswin1[0]= hex_data % 10;
 11687  1B25  300A               	movlw	10
 11688  1B26  00F0               	movwf	i1___lwmod@divisor
 11689  1B27  3000               	movlw	0
 11690  1B28  00F1               	movwf	i1___lwmod@divisor+1
 11691  1B29  0879               	movf	i1disp_hex_window1@hex_data+1,w
 11692  1B2A  01F3               	clrf	i1___lwmod@dividend+1
 11693  1B2B  07F3               	addwf	i1___lwmod@dividend+1,f
 11694  1B2C  0878               	movf	i1disp_hex_window1@hex_data,w
 11695  1B2D  01F2               	clrf	i1___lwmod@dividend
 11696  1B2E  07F2               	addwf	i1___lwmod@dividend,f
 11697  1B2F  3199  21C7         	fcall	i1___lwmod
 11698  1B31  0870               	movf	?i1___lwmod,w
 11699  1B32  00FA               	movwf	??i1_disp_hex_window1
 11700  1B33  087A               	movf	??i1_disp_hex_window1,w
 11701  1B34  0022               	movlb	2	; select bank2
 11702  1B35  00E4               	movwf	_diswin1^(0+256)
 11703  1B36  0008               	return
 11704  1B37                     __end_ofi1_disp_hex_window1:	
 11705                           
 11706                           	psect	text36
 11707  19C7                     __ptext36:	
 11708 ;; *************** function i1___lwmod *****************
 11709 ;; Defined at:
 11710 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwmod.c"
 11711 ;; Parameters:    Size  Location     Type
 11712 ;;  divisor         2    0[COMMON] unsigned int 
 11713 ;;  dividend        2    2[COMMON] unsigned int 
 11714 ;; Auto vars:     Size  Location     Type
 11715 ;;  __lwmod         1    5[COMMON] unsigned char 
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  2    0[COMMON] unsigned int 
 11718 ;; Registers used:
 11719 ;;		wreg, status,2, status,0
 11720 ;; Tracked objects:
 11721 ;;		On entry : 0/0
 11722 ;;		On exit  : 0/0
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11728 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11729 ;;Total ram usage:        6 bytes
 11730 ;; Hardware stack levels used:    1
 11731 ;; This function calls:
 11732 ;;		Nothing
 11733 ;; This function is called by:
 11734 ;;		i1_disp_hex_window1
 11735 ;; This function uses a non-reentrant model
 11736 ;;
 11737                           
 11738                           
 11739                           ;psect for function i1___lwmod
 11740  19C7                     i1___lwmod:	
 11741                           
 11742                           ;incstack = 0
 11743                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 11744  19C7  0871               	movf	i1___lwmod@divisor+1,w
 11745  19C8  0470               	iorwf	i1___lwmod@divisor,w
 11746  19C9  1903               	skipnz
 11747  19CA  29EE               	goto	i1l4080
 11748  19CB  01F5               	clrf	i1___lwmod@counter
 11749  19CC  0AF5               	incf	i1___lwmod@counter,f
 11750  19CD                     i1l4070:	
 11751  19CD  1BF1               	btfsc	i1___lwmod@divisor+1,7
 11752  19CE  29D9               	goto	i1l4072
 11753  19CF  3001               	movlw	1
 11754  19D0                     u548_25:	
 11755  19D0  35F0               	lslf	i1___lwmod@divisor,f
 11756  19D1  0DF1               	rlf	i1___lwmod@divisor+1,f
 11757  19D2  0B89               	decfsz	9,f
 11758  19D3  29D0               	goto	u548_25
 11759  19D4  3001               	movlw	1
 11760  19D5  00F4               	movwf	??i1___lwmod
 11761  19D6  0874               	movf	??i1___lwmod,w
 11762  19D7  07F5               	addwf	i1___lwmod@counter,f
 11763  19D8  29CD               	goto	i1l4070
 11764  19D9                     i1l4072:	
 11765  19D9  0871               	movf	i1___lwmod@divisor+1,w
 11766  19DA  0273               	subwf	i1___lwmod@dividend+1,w
 11767  19DB  1D03               	skipz
 11768  19DC  29DF               	goto	u550_25
 11769  19DD  0870               	movf	i1___lwmod@divisor,w
 11770  19DE  0272               	subwf	i1___lwmod@dividend,w
 11771  19DF                     u550_25:	
 11772  19DF  1C03               	skipc
 11773  19E0  29E5               	goto	i1l4076
 11774  19E1  0870               	movf	i1___lwmod@divisor,w
 11775  19E2  02F2               	subwf	i1___lwmod@dividend,f
 11776  19E3  0871               	movf	i1___lwmod@divisor+1,w
 11777  19E4  3BF3               	subwfb	i1___lwmod@dividend+1,f
 11778  19E5                     i1l4076:	
 11779  19E5  3001               	movlw	1
 11780  19E6                     u551_25:	
 11781  19E6  36F1               	lsrf	i1___lwmod@divisor+1,f
 11782  19E7  0CF0               	rrf	i1___lwmod@divisor,f
 11783  19E8  0B89               	decfsz	9,f
 11784  19E9  29E6               	goto	u551_25
 11785  19EA  3001               	movlw	1
 11786  19EB  02F5               	subwf	i1___lwmod@counter,f
 11787  19EC  1D03               	btfss	3,2
 11788  19ED  29D9               	goto	i1l4072
 11789  19EE                     i1l4080:	
 11790  19EE  0873               	movf	i1___lwmod@dividend+1,w
 11791  19EF  01F1               	clrf	?i1___lwmod+1
 11792  19F0  07F1               	addwf	?i1___lwmod+1,f
 11793  19F1  0872               	movf	i1___lwmod@dividend,w
 11794  19F2  01F0               	clrf	?i1___lwmod
 11795  19F3  07F0               	addwf	?i1___lwmod,f
 11796  19F4  0008               	return
 11797  19F5                     __end_ofi1___lwmod:	
 11798                           
 11799                           	psect	text37
 11800  19F5                     __ptext37:	
 11801 ;; *************** function i1___lwdiv *****************
 11802 ;; Defined at:
 11803 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwdiv.c"
 11804 ;; Parameters:    Size  Location     Type
 11805 ;;  divisor         2    0[COMMON] unsigned int 
 11806 ;;  dividend        2    2[COMMON] unsigned int 
 11807 ;; Auto vars:     Size  Location     Type
 11808 ;;  __lwdiv         2    5[COMMON] unsigned int 
 11809 ;;  __lwdiv         1    7[COMMON] unsigned char 
 11810 ;; Return value:  Size  Location     Type
 11811 ;;                  2    0[COMMON] unsigned int 
 11812 ;; Registers used:
 11813 ;;		wreg, status,2, status,0
 11814 ;; Tracked objects:
 11815 ;;		On entry : 0/0
 11816 ;;		On exit  : 0/0
 11817 ;;		Unchanged: 0/0
 11818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;Total ram usage:        8 bytes
 11824 ;; Hardware stack levels used:    1
 11825 ;; This function calls:
 11826 ;;		Nothing
 11827 ;; This function is called by:
 11828 ;;		i1_disp_hex_window1
 11829 ;; This function uses a non-reentrant model
 11830 ;;
 11831                           
 11832                           
 11833                           ;psect for function i1___lwdiv
 11834  19F5                     i1___lwdiv:	
 11835                           
 11836                           ;incstack = 0
 11837                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
 11838  19F5  01F5               	clrf	i1___lwdiv@quotient
 11839  19F6  01F6               	clrf	i1___lwdiv@quotient+1
 11840  19F7  0871               	movf	i1___lwdiv@divisor+1,w
 11841  19F8  0470               	iorwf	i1___lwdiv@divisor,w
 11842  19F9  1903               	skipnz
 11843  19FA  2A24               	goto	i1l4058
 11844  19FB  01F7               	clrf	i1___lwdiv@counter
 11845  19FC  0AF7               	incf	i1___lwdiv@counter,f
 11846  19FD                     i1l4046:	
 11847  19FD  1BF1               	btfsc	i1___lwdiv@divisor+1,7
 11848  19FE  2A09               	goto	i1l4048
 11849  19FF  3001               	movlw	1
 11850  1A00                     u541_25:	
 11851  1A00  35F0               	lslf	i1___lwdiv@divisor,f
 11852  1A01  0DF1               	rlf	i1___lwdiv@divisor+1,f
 11853  1A02  0B89               	decfsz	9,f
 11854  1A03  2A00               	goto	u541_25
 11855  1A04  3001               	movlw	1
 11856  1A05  00F4               	movwf	??i1___lwdiv
 11857  1A06  0874               	movf	??i1___lwdiv,w
 11858  1A07  07F7               	addwf	i1___lwdiv@counter,f
 11859  1A08  29FD               	goto	i1l4046
 11860  1A09                     i1l4048:	
 11861  1A09  3001               	movlw	1
 11862  1A0A                     u543_25:	
 11863  1A0A  35F5               	lslf	i1___lwdiv@quotient,f
 11864  1A0B  0DF6               	rlf	i1___lwdiv@quotient+1,f
 11865  1A0C  0B89               	decfsz	9,f
 11866  1A0D  2A0A               	goto	u543_25
 11867  1A0E  0871               	movf	i1___lwdiv@divisor+1,w
 11868  1A0F  0273               	subwf	i1___lwdiv@dividend+1,w
 11869  1A10  1D03               	skipz
 11870  1A11  2A14               	goto	u544_25
 11871  1A12  0870               	movf	i1___lwdiv@divisor,w
 11872  1A13  0272               	subwf	i1___lwdiv@dividend,w
 11873  1A14                     u544_25:	
 11874  1A14  1C03               	skipc
 11875  1A15  2A1B               	goto	i1l4054
 11876  1A16  0870               	movf	i1___lwdiv@divisor,w
 11877  1A17  02F2               	subwf	i1___lwdiv@dividend,f
 11878  1A18  0871               	movf	i1___lwdiv@divisor+1,w
 11879  1A19  3BF3               	subwfb	i1___lwdiv@dividend+1,f
 11880  1A1A  1475               	bsf	i1___lwdiv@quotient,0
 11881  1A1B                     i1l4054:	
 11882  1A1B  3001               	movlw	1
 11883  1A1C                     u545_25:	
 11884  1A1C  36F1               	lsrf	i1___lwdiv@divisor+1,f
 11885  1A1D  0CF0               	rrf	i1___lwdiv@divisor,f
 11886  1A1E  0B89               	decfsz	9,f
 11887  1A1F  2A1C               	goto	u545_25
 11888  1A20  3001               	movlw	1
 11889  1A21  02F7               	subwf	i1___lwdiv@counter,f
 11890  1A22  1D03               	btfss	3,2
 11891  1A23  2A09               	goto	i1l4048
 11892  1A24                     i1l4058:	
 11893  1A24  0876               	movf	i1___lwdiv@quotient+1,w
 11894  1A25  01F1               	clrf	?i1___lwdiv+1
 11895  1A26  07F1               	addwf	?i1___lwdiv+1,f
 11896  1A27  0875               	movf	i1___lwdiv@quotient,w
 11897  1A28  01F0               	clrf	?i1___lwdiv
 11898  1A29  07F0               	addwf	?i1___lwdiv,f
 11899  1A2A  0008               	return
 11900  1A2B                     __end_ofi1___lwdiv:	
 11901                           
 11902                           	psect	text38
 11903  18F4                     __ptext38:	
 11904 ;; *************** function i1___lwtoft *****************
 11905 ;; Defined at:
 11906 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 11907 ;; Parameters:    Size  Location     Type
 11908 ;;  c               2    8[COMMON] unsigned int 
 11909 ;; Auto vars:     Size  Location     Type
 11910 ;;		None
 11911 ;; Return value:  Size  Location     Type
 11912 ;;                  3    8[COMMON] float 
 11913 ;; Registers used:
 11914 ;;		wreg, status,2, status,0, pclath, cstack
 11915 ;; Tracked objects:
 11916 ;;		On entry : 0/0
 11917 ;;		On exit  : 0/0
 11918 ;;		Unchanged: 0/0
 11919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11920 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11923 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11924 ;;Total ram usage:        4 bytes
 11925 ;; Hardware stack levels used:    1
 11926 ;; Hardware stack levels required when called:    1
 11927 ;; This function calls:
 11928 ;;		i1___ftpack
 11929 ;; This function is called by:
 11930 ;;		_ISR_Function
 11931 ;; This function uses a non-reentrant model
 11932 ;;
 11933                           
 11934                           
 11935                           ;psect for function i1___lwtoft
 11936  18F4                     i1___lwtoft:	
 11937                           
 11938                           ;incstack = 0
 11939                           ; Regs used in i1___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 11940  18F4  0878               	movf	i1___lwtoft@c,w
 11941  18F5  00F0               	movwf	i1___ftpack@arg
 11942  18F6  0879               	movf	i1___lwtoft@c+1,w
 11943  18F7  00F1               	movwf	i1___ftpack@arg+1
 11944  18F8  01F2               	clrf	i1___ftpack@arg+2
 11945  18F9  308E               	movlw	142
 11946  18FA  00FB               	movwf	??i1___lwtoft
 11947  18FB  087B               	movf	??i1___lwtoft,w
 11948  18FC  00F3               	movwf	i1___ftpack@exp
 11949  18FD  01F4               	clrf	i1___ftpack@sign
 11950  18FE  319B  23F3         	fcall	i1___ftpack
 11951  1900  0870               	movf	?i1___ftpack,w
 11952  1901  00F8               	movwf	?i1___lwtoft
 11953  1902  0871               	movf	?i1___ftpack+1,w
 11954  1903  00F9               	movwf	?i1___lwtoft+1
 11955  1904  0872               	movf	?i1___ftpack+2,w
 11956  1905  00FA               	movwf	?i1___lwtoft+2
 11957  1906  0008               	return
 11958  1907                     __end_ofi1___lwtoft:	
 11959                           
 11960                           	psect	text39
 11961  1F79                     __ptext39:	
 11962 ;; *************** function i1___fttol *****************
 11963 ;; Defined at:
 11964 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
 11965 ;; Parameters:    Size  Location     Type
 11966 ;;  f1              3   29[BANK0 ] float 
 11967 ;; Auto vars:     Size  Location     Type
 11968 ;;  __fttol         4   38[BANK0 ] unsigned long 
 11969 ;;  __fttol         1   42[BANK0 ] unsigned char 
 11970 ;;  __fttol         1   37[BANK0 ] unsigned char 
 11971 ;; Return value:  Size  Location     Type
 11972 ;;                  4   29[BANK0 ] long 
 11973 ;; Registers used:
 11974 ;;		wreg, status,2, status,0
 11975 ;; Tracked objects:
 11976 ;;		On entry : 0/0
 11977 ;;		On exit  : 0/0
 11978 ;;		Unchanged: 0/0
 11979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11980 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11981 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11982 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;Total ram usage:       14 bytes
 11985 ;; Hardware stack levels used:    1
 11986 ;; This function calls:
 11987 ;;		Nothing
 11988 ;; This function is called by:
 11989 ;;		_ISR_Function
 11990 ;; This function uses a non-reentrant model
 11991 ;;
 11992                           
 11993                           
 11994                           ;psect for function i1___fttol
 11995  1F79                     i1___fttol:	
 11996                           
 11997                           ;incstack = 0
 11998                           ; Regs used in i1___fttol: [wreg+status,2+status,0]
 11999  1F79  0020               	movlb	0	; select bank0
 12000  1F7A  083D               	movf	i1___fttol@f1,w
 12001  1F7B  00C1               	movwf	??i1___fttol
 12002  1F7C  083E               	movf	i1___fttol@f1+1,w
 12003  1F7D  00C2               	movwf	??i1___fttol+1
 12004  1F7E  083F               	movf	i1___fttol@f1+2,w
 12005  1F7F  00C3               	movwf	??i1___fttol+2
 12006  1F80  1003               	clrc
 12007  1F81  0D42               	rlf	??i1___fttol+1,w
 12008  1F82  0D43               	rlf	??i1___fttol+2,w
 12009  1F83  00C4               	movwf	??i1___fttol+3
 12010  1F84  0844               	movf	??i1___fttol+3,w
 12011  1F85  00CA               	movwf	i1___fttol@exp1
 12012  1F86  08CA               	movf	i1___fttol@exp1,f
 12013  1F87  1D03               	skipz
 12014  1F88  2F92               	goto	i1l4908
 12015  1F89  3000               	movlw	0
 12016  1F8A  00C0               	movwf	?i1___fttol+3
 12017  1F8B  3000               	movlw	0
 12018  1F8C  00BF               	movwf	?i1___fttol+2
 12019  1F8D  3000               	movlw	0
 12020  1F8E  00BE               	movwf	?i1___fttol+1
 12021  1F8F  3000               	movlw	0
 12022  1F90  00BD               	movwf	?i1___fttol
 12023  1F91  0008               	return
 12024  1F92                     i1l4908:	
 12025  1F92  083D               	movf	i1___fttol@f1,w
 12026  1F93  00C1               	movwf	??i1___fttol
 12027  1F94  083E               	movf	i1___fttol@f1+1,w
 12028  1F95  00C2               	movwf	??i1___fttol+1
 12029  1F96  083F               	movf	i1___fttol@f1+2,w
 12030  1F97  00C3               	movwf	??i1___fttol+2
 12031  1F98  3017               	movlw	23
 12032  1F99                     u699_25:	
 12033  1F99  36C3               	lsrf	??i1___fttol+2,f
 12034  1F9A  0CC2               	rrf	??i1___fttol+1,f
 12035  1F9B  0CC1               	rrf	??i1___fttol,f
 12036  1F9C  0B89               	decfsz	9,f
 12037  1F9D  2F99               	goto	u699_25
 12038  1F9E  0841               	movf	??i1___fttol,w
 12039  1F9F  00C4               	movwf	??i1___fttol+3
 12040  1FA0  0844               	movf	??i1___fttol+3,w
 12041  1FA1  00C5               	movwf	i1___fttol@sign1
 12042  1FA2  17BE               	bsf	i1___fttol@f1+1,7
 12043  1FA3  30FF               	movlw	255
 12044  1FA4  05BD               	andwf	i1___fttol@f1,f
 12045  1FA5  30FF               	movlw	255
 12046  1FA6  05BE               	andwf	i1___fttol@f1+1,f
 12047  1FA7  3000               	movlw	0
 12048  1FA8  05BF               	andwf	i1___fttol@f1+2,f
 12049  1FA9  083D               	movf	i1___fttol@f1,w
 12050  1FAA  00C6               	movwf	i1___fttol@lval
 12051  1FAB  083E               	movf	i1___fttol@f1+1,w
 12052  1FAC  00C7               	movwf	i1___fttol@lval+1
 12053  1FAD  083F               	movf	i1___fttol@f1+2,w
 12054  1FAE  00C8               	movwf	i1___fttol@lval+2
 12055  1FAF  01C9               	clrf	i1___fttol@lval+3
 12056  1FB0  308E               	movlw	142
 12057  1FB1  02CA               	subwf	i1___fttol@exp1,f
 12058  1FB2  1FCA               	btfss	i1___fttol@exp1,7
 12059  1FB3  2FD0               	goto	i1l4928
 12060  1FB4  084A               	movf	i1___fttol@exp1,w
 12061  1FB5  3A80               	xorlw	128
 12062  1FB6  3E8F               	addlw	143
 12063  1FB7  1803               	skipnc
 12064  1FB8  2FC2               	goto	i1l4926
 12065  1FB9  3000               	movlw	0
 12066  1FBA  00C0               	movwf	?i1___fttol+3
 12067  1FBB  3000               	movlw	0
 12068  1FBC  00BF               	movwf	?i1___fttol+2
 12069  1FBD  3000               	movlw	0
 12070  1FBE  00BE               	movwf	?i1___fttol+1
 12071  1FBF  3000               	movlw	0
 12072  1FC0  00BD               	movwf	?i1___fttol
 12073  1FC1  0008               	return
 12074  1FC2                     i1l4926:	
 12075  1FC2  3001               	movlw	1
 12076  1FC3                     u702_25:	
 12077  1FC3  36C9               	lsrf	i1___fttol@lval+3,f
 12078  1FC4  0CC8               	rrf	i1___fttol@lval+2,f
 12079  1FC5  0CC7               	rrf	i1___fttol@lval+1,f
 12080  1FC6  0CC6               	rrf	i1___fttol@lval,f
 12081  1FC7  0B89               	decfsz	9,f
 12082  1FC8  2FC3               	goto	u702_25
 12083  1FC9  3001               	movlw	1
 12084  1FCA  00C1               	movwf	??i1___fttol
 12085  1FCB  0841               	movf	??i1___fttol,w
 12086  1FCC  07CA               	addwf	i1___fttol@exp1,f
 12087  1FCD  1903               	btfsc	3,2
 12088  1FCE  2FE9               	goto	i1l4938
 12089  1FCF  2FC2               	goto	i1l4926
 12090  1FD0                     i1l4928:	
 12091  1FD0  3018               	movlw	24
 12092  1FD1  024A               	subwf	i1___fttol@exp1,w
 12093  1FD2  1C03               	skipc
 12094  1FD3  2FE6               	goto	i1l4936
 12095  1FD4  3000               	movlw	0
 12096  1FD5  00C0               	movwf	?i1___fttol+3
 12097  1FD6  3000               	movlw	0
 12098  1FD7  00BF               	movwf	?i1___fttol+2
 12099  1FD8  3000               	movlw	0
 12100  1FD9  00BE               	movwf	?i1___fttol+1
 12101  1FDA  3000               	movlw	0
 12102  1FDB  00BD               	movwf	?i1___fttol
 12103  1FDC  0008               	return
 12104  1FDD                     i1l4934:	
 12105  1FDD  3001               	movlw	1
 12106  1FDE                     u705_25:	
 12107  1FDE  35C6               	lslf	i1___fttol@lval,f
 12108  1FDF  0DC7               	rlf	i1___fttol@lval+1,f
 12109  1FE0  0DC8               	rlf	i1___fttol@lval+2,f
 12110  1FE1  0DC9               	rlf	i1___fttol@lval+3,f
 12111  1FE2  0B89               	decfsz	9,f
 12112  1FE3  2FDE               	goto	u705_25
 12113  1FE4  3001               	movlw	1
 12114  1FE5  02CA               	subwf	i1___fttol@exp1,f
 12115  1FE6                     i1l4936:	
 12116  1FE6  08CA               	movf	i1___fttol@exp1,f
 12117  1FE7  1D03               	skipz
 12118  1FE8  2FDD               	goto	i1l4934
 12119  1FE9                     i1l4938:	
 12120  1FE9  0845               	movf	i1___fttol@sign1,w
 12121  1FEA  1903               	btfsc	3,2
 12122  1FEB  2FF7               	goto	i1l4942
 12123  1FEC  09C6               	comf	i1___fttol@lval,f
 12124  1FED  09C7               	comf	i1___fttol@lval+1,f
 12125  1FEE  09C8               	comf	i1___fttol@lval+2,f
 12126  1FEF  09C9               	comf	i1___fttol@lval+3,f
 12127  1FF0  0AC6               	incf	i1___fttol@lval,f
 12128  1FF1  1903               	skipnz
 12129  1FF2  0AC7               	incf	i1___fttol@lval+1,f
 12130  1FF3  1903               	skipnz
 12131  1FF4  0AC8               	incf	i1___fttol@lval+2,f
 12132  1FF5  1903               	skipnz
 12133  1FF6  0AC9               	incf	i1___fttol@lval+3,f
 12134  1FF7                     i1l4942:	
 12135  1FF7  0849               	movf	i1___fttol@lval+3,w
 12136  1FF8  00C0               	movwf	?i1___fttol+3
 12137  1FF9  0848               	movf	i1___fttol@lval+2,w
 12138  1FFA  00BF               	movwf	?i1___fttol+2
 12139  1FFB  0847               	movf	i1___fttol@lval+1,w
 12140  1FFC  00BE               	movwf	?i1___fttol+1
 12141  1FFD  0846               	movf	i1___fttol@lval,w
 12142  1FFE  00BD               	movwf	?i1___fttol
 12143  1FFF  0008               	return
 12144  2000                     __end_ofi1___fttol:	
 12145                           
 12146                           	psect	text40
 12147  1250                     __ptext40:	
 12148 ;; *************** function i1___ftmul *****************
 12149 ;; Defined at:
 12150 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
 12151 ;; Parameters:    Size  Location     Type
 12152 ;;  f1              3    0[BANK0 ] float 
 12153 ;;  f2              3    3[BANK0 ] float 
 12154 ;; Auto vars:     Size  Location     Type
 12155 ;;  __ftmul         3   11[BANK0 ] unsigned um
 12156 ;;  __ftmul         1   15[BANK0 ] unsigned char 
 12157 ;;  __ftmul         1   14[BANK0 ] unsigned char 
 12158 ;;  __ftmul         1   10[BANK0 ] unsigned char 
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  3    0[BANK0 ] float 
 12161 ;; Registers used:
 12162 ;;		wreg, status,2, status,0, pclath, cstack
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12168 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12169 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12171 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12172 ;;Total ram usage:       16 bytes
 12173 ;; Hardware stack levels used:    1
 12174 ;; Hardware stack levels required when called:    1
 12175 ;; This function calls:
 12176 ;;		i1___ftpack
 12177 ;; This function is called by:
 12178 ;;		_ISR_Function
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           
 12183                           ;psect for function i1___ftmul
 12184  1250                     i1___ftmul:	
 12185                           
 12186                           ;incstack = 0
 12187                           ; Regs used in i1___ftmul: [wreg+status,2+status,0+pclath+cstack]
 12188  1250  0020               	movlb	0	; select bank0
 12189  1251  0820               	movf	i1___ftmul@f1,w
 12190  1252  00A6               	movwf	??i1___ftmul
 12191  1253  0821               	movf	i1___ftmul@f1+1,w
 12192  1254  00A7               	movwf	??i1___ftmul+1
 12193  1255  0822               	movf	i1___ftmul@f1+2,w
 12194  1256  00A8               	movwf	??i1___ftmul+2
 12195  1257  1003               	clrc
 12196  1258  0D27               	rlf	??i1___ftmul+1,w
 12197  1259  0D28               	rlf	??i1___ftmul+2,w
 12198  125A  00A9               	movwf	??i1___ftmul+3
 12199  125B  0829               	movf	??i1___ftmul+3,w
 12200  125C  00AA               	movwf	i1___ftmul@exp
 12201  125D  08AA               	movf	i1___ftmul@exp,f
 12202  125E  1D03               	skipz
 12203  125F  2A67               	goto	i1l4858
 12204  1260  3000               	movlw	0
 12205  1261  00A0               	movwf	?i1___ftmul
 12206  1262  3000               	movlw	0
 12207  1263  00A1               	movwf	?i1___ftmul+1
 12208  1264  3000               	movlw	0
 12209  1265  00A2               	movwf	?i1___ftmul+2
 12210  1266  0008               	return
 12211  1267                     i1l4858:	
 12212  1267  0823               	movf	i1___ftmul@f2,w
 12213  1268  00A6               	movwf	??i1___ftmul
 12214  1269  0824               	movf	i1___ftmul@f2+1,w
 12215  126A  00A7               	movwf	??i1___ftmul+1
 12216  126B  0825               	movf	i1___ftmul@f2+2,w
 12217  126C  00A8               	movwf	??i1___ftmul+2
 12218  126D  1003               	clrc
 12219  126E  0D27               	rlf	??i1___ftmul+1,w
 12220  126F  0D28               	rlf	??i1___ftmul+2,w
 12221  1270  00A9               	movwf	??i1___ftmul+3
 12222  1271  0829               	movf	??i1___ftmul+3,w
 12223  1272  00AF               	movwf	i1___ftmul@sign
 12224  1273  08AF               	movf	i1___ftmul@sign,f
 12225  1274  1D03               	skipz
 12226  1275  2A7D               	goto	i1l4864
 12227  1276  3000               	movlw	0
 12228  1277  00A0               	movwf	?i1___ftmul
 12229  1278  3000               	movlw	0
 12230  1279  00A1               	movwf	?i1___ftmul+1
 12231  127A  3000               	movlw	0
 12232  127B  00A2               	movwf	?i1___ftmul+2
 12233  127C  0008               	return
 12234  127D                     i1l4864:	
 12235  127D  082F               	movf	i1___ftmul@sign,w
 12236  127E  3E7B               	addlw	123
 12237  127F  00A6               	movwf	??i1___ftmul
 12238  1280  0826               	movf	??i1___ftmul,w
 12239  1281  07AA               	addwf	i1___ftmul@exp,f
 12240  1282  0820               	movf	i1___ftmul@f1,w
 12241  1283  00A6               	movwf	??i1___ftmul
 12242  1284  0821               	movf	i1___ftmul@f1+1,w
 12243  1285  00A7               	movwf	??i1___ftmul+1
 12244  1286  0822               	movf	i1___ftmul@f1+2,w
 12245  1287  00A8               	movwf	??i1___ftmul+2
 12246  1288  3010               	movlw	16
 12247  1289                     u688_25:	
 12248  1289  36A8               	lsrf	??i1___ftmul+2,f
 12249  128A  0CA7               	rrf	??i1___ftmul+1,f
 12250  128B  0CA6               	rrf	??i1___ftmul,f
 12251  128C  0B89               	decfsz	9,f
 12252  128D  2A89               	goto	u688_25
 12253  128E  0826               	movf	??i1___ftmul,w
 12254  128F  00A9               	movwf	??i1___ftmul+3
 12255  1290  0829               	movf	??i1___ftmul+3,w
 12256  1291  00AF               	movwf	i1___ftmul@sign
 12257  1292  0823               	movf	i1___ftmul@f2,w
 12258  1293  00A6               	movwf	??i1___ftmul
 12259  1294  0824               	movf	i1___ftmul@f2+1,w
 12260  1295  00A7               	movwf	??i1___ftmul+1
 12261  1296  0825               	movf	i1___ftmul@f2+2,w
 12262  1297  00A8               	movwf	??i1___ftmul+2
 12263  1298  3010               	movlw	16
 12264  1299                     u689_25:	
 12265  1299  36A8               	lsrf	??i1___ftmul+2,f
 12266  129A  0CA7               	rrf	??i1___ftmul+1,f
 12267  129B  0CA6               	rrf	??i1___ftmul,f
 12268  129C  0B89               	decfsz	9,f
 12269  129D  2A99               	goto	u689_25
 12270  129E  0826               	movf	??i1___ftmul,w
 12271  129F  00A9               	movwf	??i1___ftmul+3
 12272  12A0  0829               	movf	??i1___ftmul+3,w
 12273  12A1  06AF               	xorwf	i1___ftmul@sign,f
 12274  12A2  3080               	movlw	128
 12275  12A3  00A6               	movwf	??i1___ftmul
 12276  12A4  0826               	movf	??i1___ftmul,w
 12277  12A5  05AF               	andwf	i1___ftmul@sign,f
 12278  12A6  17A1               	bsf	i1___ftmul@f1+1,7
 12279  12A7  17A4               	bsf	i1___ftmul@f2+1,7
 12280  12A8  30FF               	movlw	255
 12281  12A9  05A3               	andwf	i1___ftmul@f2,f
 12282  12AA  30FF               	movlw	255
 12283  12AB  05A4               	andwf	i1___ftmul@f2+1,f
 12284  12AC  3000               	movlw	0
 12285  12AD  05A5               	andwf	i1___ftmul@f2+2,f
 12286  12AE  3000               	movlw	0
 12287  12AF  00AB               	movwf	i1___ftmul@f3_as_product
 12288  12B0  3000               	movlw	0
 12289  12B1  00AC               	movwf	i1___ftmul@f3_as_product+1
 12290  12B2  3000               	movlw	0
 12291  12B3  00AD               	movwf	i1___ftmul@f3_as_product+2
 12292  12B4  3007               	movlw	7
 12293  12B5  00A6               	movwf	??i1___ftmul
 12294  12B6  0826               	movf	??i1___ftmul,w
 12295  12B7  00AE               	movwf	i1___ftmul@cntr
 12296  12B8                     i1l4876:	
 12297  12B8  1C20               	btfss	i1___ftmul@f1,0
 12298  12B9  2AC0               	goto	i1l4880
 12299  12BA  0823               	movf	i1___ftmul@f2,w
 12300  12BB  07AB               	addwf	i1___ftmul@f3_as_product,f
 12301  12BC  0824               	movf	i1___ftmul@f2+1,w
 12302  12BD  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12303  12BE  0825               	movf	i1___ftmul@f2+2,w
 12304  12BF  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12305  12C0                     i1l4880:	
 12306  12C0  3001               	movlw	1
 12307  12C1                     u691_25:	
 12308  12C1  36A2               	lsrf	i1___ftmul@f1+2,f
 12309  12C2  0CA1               	rrf	i1___ftmul@f1+1,f
 12310  12C3  0CA0               	rrf	i1___ftmul@f1,f
 12311  12C4  0B89               	decfsz	9,f
 12312  12C5  2AC1               	goto	u691_25
 12313  12C6  3001               	movlw	1
 12314  12C7                     u692_25:	
 12315  12C7  35A3               	lslf	i1___ftmul@f2,f
 12316  12C8  0DA4               	rlf	i1___ftmul@f2+1,f
 12317  12C9  0DA5               	rlf	i1___ftmul@f2+2,f
 12318  12CA  0B89               	decfsz	9,f
 12319  12CB  2AC7               	goto	u692_25
 12320  12CC  3001               	movlw	1
 12321  12CD  02AE               	subwf	i1___ftmul@cntr,f
 12322  12CE  1D03               	btfss	3,2
 12323  12CF  2AB8               	goto	i1l4876
 12324  12D0  3009               	movlw	9
 12325  12D1  00A6               	movwf	??i1___ftmul
 12326  12D2  0826               	movf	??i1___ftmul,w
 12327  12D3  00AE               	movwf	i1___ftmul@cntr
 12328  12D4                     i1l4888:	
 12329  12D4  1C20               	btfss	i1___ftmul@f1,0
 12330  12D5  2ADC               	goto	i1l4892
 12331  12D6  0823               	movf	i1___ftmul@f2,w
 12332  12D7  07AB               	addwf	i1___ftmul@f3_as_product,f
 12333  12D8  0824               	movf	i1___ftmul@f2+1,w
 12334  12D9  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12335  12DA  0825               	movf	i1___ftmul@f2+2,w
 12336  12DB  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12337  12DC                     i1l4892:	
 12338  12DC  3001               	movlw	1
 12339  12DD                     u695_25:	
 12340  12DD  36A2               	lsrf	i1___ftmul@f1+2,f
 12341  12DE  0CA1               	rrf	i1___ftmul@f1+1,f
 12342  12DF  0CA0               	rrf	i1___ftmul@f1,f
 12343  12E0  0B89               	decfsz	9,f
 12344  12E1  2ADD               	goto	u695_25
 12345  12E2  3001               	movlw	1
 12346  12E3                     u696_25:	
 12347  12E3  36AD               	lsrf	i1___ftmul@f3_as_product+2,f
 12348  12E4  0CAC               	rrf	i1___ftmul@f3_as_product+1,f
 12349  12E5  0CAB               	rrf	i1___ftmul@f3_as_product,f
 12350  12E6  0B89               	decfsz	9,f
 12351  12E7  2AE3               	goto	u696_25
 12352  12E8  3001               	movlw	1
 12353  12E9  02AE               	subwf	i1___ftmul@cntr,f
 12354  12EA  1D03               	btfss	3,2
 12355  12EB  2AD4               	goto	i1l4888
 12356  12EC  082B               	movf	i1___ftmul@f3_as_product,w
 12357  12ED  00F0               	movwf	i1___ftpack@arg
 12358  12EE  082C               	movf	i1___ftmul@f3_as_product+1,w
 12359  12EF  00F1               	movwf	i1___ftpack@arg+1
 12360  12F0  082D               	movf	i1___ftmul@f3_as_product+2,w
 12361  12F1  00F2               	movwf	i1___ftpack@arg+2
 12362  12F2  082A               	movf	i1___ftmul@exp,w
 12363  12F3  00A6               	movwf	??i1___ftmul
 12364  12F4  0826               	movf	??i1___ftmul,w
 12365  12F5  00F3               	movwf	i1___ftpack@exp
 12366  12F6  082F               	movf	i1___ftmul@sign,w
 12367  12F7  00A7               	movwf	??i1___ftmul+1
 12368  12F8  0827               	movf	??i1___ftmul+1,w
 12369  12F9  00F4               	movwf	i1___ftpack@sign
 12370  12FA  319B  23F3         	fcall	i1___ftpack
 12371  12FC  0870               	movf	?i1___ftpack,w
 12372  12FD  0020               	movlb	0	; select bank0
 12373  12FE  00A0               	movwf	?i1___ftmul
 12374  12FF  0871               	movf	?i1___ftpack+1,w
 12375  1300  00A1               	movwf	?i1___ftmul+1
 12376  1301  0872               	movf	?i1___ftpack+2,w
 12377  1302  00A2               	movwf	?i1___ftmul+2
 12378  1303  0008               	return
 12379  1304                     __end_ofi1___ftmul:	
 12380                           
 12381                           	psect	text41
 12382  10FE                     __ptext41:	
 12383 ;; *************** function i1___ftdiv *****************
 12384 ;; Defined at:
 12385 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
 12386 ;; Parameters:    Size  Location     Type
 12387 ;;  f2              3    0[BANK0 ] float 
 12388 ;;  f1              3    3[BANK0 ] float 
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;  __ftdiv         3   11[BANK0 ] float 
 12391 ;;  __ftdiv         1   15[BANK0 ] unsigned char 
 12392 ;;  __ftdiv         1   14[BANK0 ] unsigned char 
 12393 ;;  __ftdiv         1   10[BANK0 ] unsigned char 
 12394 ;; Return value:  Size  Location     Type
 12395 ;;                  3    0[BANK0 ] float 
 12396 ;; Registers used:
 12397 ;;		wreg, status,2, status,0, pclath, cstack
 12398 ;; Tracked objects:
 12399 ;;		On entry : 0/0
 12400 ;;		On exit  : 0/0
 12401 ;;		Unchanged: 0/0
 12402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12403 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12404 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12405 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12406 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12407 ;;Total ram usage:       16 bytes
 12408 ;; Hardware stack levels used:    1
 12409 ;; Hardware stack levels required when called:    1
 12410 ;; This function calls:
 12411 ;;		i1___ftpack
 12412 ;; This function is called by:
 12413 ;;		_ISR_Function
 12414 ;; This function uses a non-reentrant model
 12415 ;;
 12416                           
 12417                           
 12418                           ;psect for function i1___ftdiv
 12419  10FE                     i1___ftdiv:	
 12420                           
 12421                           ;incstack = 0
 12422                           ; Regs used in i1___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 12423  10FE  0020               	movlb	0	; select bank0
 12424  10FF  0823               	movf	i1___ftdiv@f1,w
 12425  1100  00A6               	movwf	??i1___ftdiv
 12426  1101  0824               	movf	i1___ftdiv@f1+1,w
 12427  1102  00A7               	movwf	??i1___ftdiv+1
 12428  1103  0825               	movf	i1___ftdiv@f1+2,w
 12429  1104  00A8               	movwf	??i1___ftdiv+2
 12430  1105  1003               	clrc
 12431  1106  0D27               	rlf	??i1___ftdiv+1,w
 12432  1107  0D28               	rlf	??i1___ftdiv+2,w
 12433  1108  00A9               	movwf	??i1___ftdiv+3
 12434  1109  0829               	movf	??i1___ftdiv+3,w
 12435  110A  00AE               	movwf	i1___ftdiv@exp
 12436  110B  08AE               	movf	i1___ftdiv@exp,f
 12437  110C  1D03               	skipz
 12438  110D  2915               	goto	i1l4816
 12439  110E  3000               	movlw	0
 12440  110F  00A0               	movwf	?i1___ftdiv
 12441  1110  3000               	movlw	0
 12442  1111  00A1               	movwf	?i1___ftdiv+1
 12443  1112  3000               	movlw	0
 12444  1113  00A2               	movwf	?i1___ftdiv+2
 12445  1114  0008               	return
 12446  1115                     i1l4816:	
 12447  1115  0820               	movf	i1___ftdiv@f2,w
 12448  1116  00A6               	movwf	??i1___ftdiv
 12449  1117  0821               	movf	i1___ftdiv@f2+1,w
 12450  1118  00A7               	movwf	??i1___ftdiv+1
 12451  1119  0822               	movf	i1___ftdiv@f2+2,w
 12452  111A  00A8               	movwf	??i1___ftdiv+2
 12453  111B  1003               	clrc
 12454  111C  0D27               	rlf	??i1___ftdiv+1,w
 12455  111D  0D28               	rlf	??i1___ftdiv+2,w
 12456  111E  00A9               	movwf	??i1___ftdiv+3
 12457  111F  0829               	movf	??i1___ftdiv+3,w
 12458  1120  00AF               	movwf	i1___ftdiv@sign
 12459  1121  08AF               	movf	i1___ftdiv@sign,f
 12460  1122  1D03               	skipz
 12461  1123  292B               	goto	i1l4822
 12462  1124  3000               	movlw	0
 12463  1125  00A0               	movwf	?i1___ftdiv
 12464  1126  3000               	movlw	0
 12465  1127  00A1               	movwf	?i1___ftdiv+1
 12466  1128  3000               	movlw	0
 12467  1129  00A2               	movwf	?i1___ftdiv+2
 12468  112A  0008               	return
 12469  112B                     i1l4822:	
 12470  112B  3000               	movlw	0
 12471  112C  00AB               	movwf	i1___ftdiv@f3
 12472  112D  3000               	movlw	0
 12473  112E  00AC               	movwf	i1___ftdiv@f3+1
 12474  112F  3000               	movlw	0
 12475  1130  00AD               	movwf	i1___ftdiv@f3+2
 12476  1131  3089               	movlw	137
 12477  1132  072F               	addwf	i1___ftdiv@sign,w
 12478  1133  00A6               	movwf	??i1___ftdiv
 12479  1134  0826               	movf	??i1___ftdiv,w
 12480  1135  02AE               	subwf	i1___ftdiv@exp,f
 12481  1136  0823               	movf	i1___ftdiv@f1,w
 12482  1137  00A6               	movwf	??i1___ftdiv
 12483  1138  0824               	movf	i1___ftdiv@f1+1,w
 12484  1139  00A7               	movwf	??i1___ftdiv+1
 12485  113A  0825               	movf	i1___ftdiv@f1+2,w
 12486  113B  00A8               	movwf	??i1___ftdiv+2
 12487  113C  3010               	movlw	16
 12488  113D                     u680_25:	
 12489  113D  36A8               	lsrf	??i1___ftdiv+2,f
 12490  113E  0CA7               	rrf	??i1___ftdiv+1,f
 12491  113F  0CA6               	rrf	??i1___ftdiv,f
 12492  1140  0B89               	decfsz	9,f
 12493  1141  293D               	goto	u680_25
 12494  1142  0826               	movf	??i1___ftdiv,w
 12495  1143  00A9               	movwf	??i1___ftdiv+3
 12496  1144  0829               	movf	??i1___ftdiv+3,w
 12497  1145  00AF               	movwf	i1___ftdiv@sign
 12498  1146  0820               	movf	i1___ftdiv@f2,w
 12499  1147  00A6               	movwf	??i1___ftdiv
 12500  1148  0821               	movf	i1___ftdiv@f2+1,w
 12501  1149  00A7               	movwf	??i1___ftdiv+1
 12502  114A  0822               	movf	i1___ftdiv@f2+2,w
 12503  114B  00A8               	movwf	??i1___ftdiv+2
 12504  114C  3010               	movlw	16
 12505  114D                     u681_25:	
 12506  114D  36A8               	lsrf	??i1___ftdiv+2,f
 12507  114E  0CA7               	rrf	??i1___ftdiv+1,f
 12508  114F  0CA6               	rrf	??i1___ftdiv,f
 12509  1150  0B89               	decfsz	9,f
 12510  1151  294D               	goto	u681_25
 12511  1152  0826               	movf	??i1___ftdiv,w
 12512  1153  00A9               	movwf	??i1___ftdiv+3
 12513  1154  0829               	movf	??i1___ftdiv+3,w
 12514  1155  06AF               	xorwf	i1___ftdiv@sign,f
 12515  1156  3080               	movlw	128
 12516  1157  00A6               	movwf	??i1___ftdiv
 12517  1158  0826               	movf	??i1___ftdiv,w
 12518  1159  05AF               	andwf	i1___ftdiv@sign,f
 12519  115A  17A4               	bsf	i1___ftdiv@f1+1,7
 12520  115B  30FF               	movlw	255
 12521  115C  05A3               	andwf	i1___ftdiv@f1,f
 12522  115D  30FF               	movlw	255
 12523  115E  05A4               	andwf	i1___ftdiv@f1+1,f
 12524  115F  3000               	movlw	0
 12525  1160  05A5               	andwf	i1___ftdiv@f1+2,f
 12526  1161  17A1               	bsf	i1___ftdiv@f2+1,7
 12527  1162  30FF               	movlw	255
 12528  1163  05A0               	andwf	i1___ftdiv@f2,f
 12529  1164  30FF               	movlw	255
 12530  1165  05A1               	andwf	i1___ftdiv@f2+1,f
 12531  1166  3000               	movlw	0
 12532  1167  05A2               	andwf	i1___ftdiv@f2+2,f
 12533  1168  3018               	movlw	24
 12534  1169  00A6               	movwf	??i1___ftdiv
 12535  116A  0826               	movf	??i1___ftdiv,w
 12536  116B  00AA               	movwf	i1___ftdiv@cntr
 12537  116C                     i1l4836:	
 12538  116C  3001               	movlw	1
 12539  116D                     u682_25:	
 12540  116D  35AB               	lslf	i1___ftdiv@f3,f
 12541  116E  0DAC               	rlf	i1___ftdiv@f3+1,f
 12542  116F  0DAD               	rlf	i1___ftdiv@f3+2,f
 12543  1170  0B89               	decfsz	9,f
 12544  1171  296D               	goto	u682_25
 12545  1172  0822               	movf	i1___ftdiv@f2+2,w
 12546  1173  0225               	subwf	i1___ftdiv@f1+2,w
 12547  1174  1D03               	skipz
 12548  1175  297C               	goto	u683_25
 12549  1176  0821               	movf	i1___ftdiv@f2+1,w
 12550  1177  0224               	subwf	i1___ftdiv@f1+1,w
 12551  1178  1D03               	skipz
 12552  1179  297C               	goto	u683_25
 12553  117A  0820               	movf	i1___ftdiv@f2,w
 12554  117B  0223               	subwf	i1___ftdiv@f1,w
 12555  117C                     u683_25:	
 12556  117C  1C03               	skipc
 12557  117D  2985               	goto	i1l4844
 12558  117E  0820               	movf	i1___ftdiv@f2,w
 12559  117F  02A3               	subwf	i1___ftdiv@f1,f
 12560  1180  0821               	movf	i1___ftdiv@f2+1,w
 12561  1181  3BA4               	subwfb	i1___ftdiv@f1+1,f
 12562  1182  0822               	movf	i1___ftdiv@f2+2,w
 12563  1183  3BA5               	subwfb	i1___ftdiv@f1+2,f
 12564  1184  142B               	bsf	i1___ftdiv@f3,0
 12565  1185                     i1l4844:	
 12566  1185  3001               	movlw	1
 12567  1186                     u684_25:	
 12568  1186  35A3               	lslf	i1___ftdiv@f1,f
 12569  1187  0DA4               	rlf	i1___ftdiv@f1+1,f
 12570  1188  0DA5               	rlf	i1___ftdiv@f1+2,f
 12571  1189  0B89               	decfsz	9,f
 12572  118A  2986               	goto	u684_25
 12573  118B  3001               	movlw	1
 12574  118C  02AA               	subwf	i1___ftdiv@cntr,f
 12575  118D  1D03               	btfss	3,2
 12576  118E  296C               	goto	i1l4836
 12577  118F  082B               	movf	i1___ftdiv@f3,w
 12578  1190  00F0               	movwf	i1___ftpack@arg
 12579  1191  082C               	movf	i1___ftdiv@f3+1,w
 12580  1192  00F1               	movwf	i1___ftpack@arg+1
 12581  1193  082D               	movf	i1___ftdiv@f3+2,w
 12582  1194  00F2               	movwf	i1___ftpack@arg+2
 12583  1195  082E               	movf	i1___ftdiv@exp,w
 12584  1196  00A6               	movwf	??i1___ftdiv
 12585  1197  0826               	movf	??i1___ftdiv,w
 12586  1198  00F3               	movwf	i1___ftpack@exp
 12587  1199  082F               	movf	i1___ftdiv@sign,w
 12588  119A  00A7               	movwf	??i1___ftdiv+1
 12589  119B  0827               	movf	??i1___ftdiv+1,w
 12590  119C  00F4               	movwf	i1___ftpack@sign
 12591  119D  319B  23F3         	fcall	i1___ftpack
 12592  119F  0870               	movf	?i1___ftpack,w
 12593  11A0  0020               	movlb	0	; select bank0
 12594  11A1  00A0               	movwf	?i1___ftdiv
 12595  11A2  0871               	movf	?i1___ftpack+1,w
 12596  11A3  00A1               	movwf	?i1___ftdiv+1
 12597  11A4  0872               	movf	?i1___ftpack+2,w
 12598  11A5  00A2               	movwf	?i1___ftdiv+2
 12599  11A6  0008               	return
 12600  11A7                     __end_ofi1___ftdiv:	
 12601                           
 12602                           	psect	text42
 12603  0819                     __ptext42:	
 12604 ;; *************** function i1___ftadd *****************
 12605 ;; Defined at:
 12606 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
 12607 ;; Parameters:    Size  Location     Type
 12608 ;;  f1              3   16[BANK0 ] float 
 12609 ;;  f2              3   19[BANK0 ] float 
 12610 ;; Auto vars:     Size  Location     Type
 12611 ;;  __ftadd         1   28[BANK0 ] unsigned char 
 12612 ;;  __ftadd         1   27[BANK0 ] unsigned char 
 12613 ;;  __ftadd         1   26[BANK0 ] unsigned char 
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  3   16[BANK0 ] float 
 12616 ;; Registers used:
 12617 ;;		wreg, status,2, status,0, pclath, cstack
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12623 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12624 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12625 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12626 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12627 ;;Total ram usage:       13 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; Hardware stack levels required when called:    1
 12630 ;; This function calls:
 12631 ;;		i1___ftpack
 12632 ;; This function is called by:
 12633 ;;		_ISR_Function
 12634 ;; This function uses a non-reentrant model
 12635 ;;
 12636                           
 12637                           
 12638                           ;psect for function i1___ftadd
 12639  0819                     i1___ftadd:	
 12640                           
 12641                           ;incstack = 0
 12642                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
 12643  0819  0020               	movlb	0	; select bank0
 12644  081A  0830               	movf	i1___ftadd@f1,w
 12645  081B  00B6               	movwf	??i1___ftadd
 12646  081C  0831               	movf	i1___ftadd@f1+1,w
 12647  081D  00B7               	movwf	??i1___ftadd+1
 12648  081E  0832               	movf	i1___ftadd@f1+2,w
 12649  081F  00B8               	movwf	??i1___ftadd+2
 12650  0820  1003               	clrc
 12651  0821  0D37               	rlf	??i1___ftadd+1,w
 12652  0822  0D38               	rlf	??i1___ftadd+2,w
 12653  0823  00B9               	movwf	??i1___ftadd+3
 12654  0824  0839               	movf	??i1___ftadd+3,w
 12655  0825  00BC               	movwf	i1___ftadd@exp1
 12656  0826  0833               	movf	i1___ftadd@f2,w
 12657  0827  00B6               	movwf	??i1___ftadd
 12658  0828  0834               	movf	i1___ftadd@f2+1,w
 12659  0829  00B7               	movwf	??i1___ftadd+1
 12660  082A  0835               	movf	i1___ftadd@f2+2,w
 12661  082B  00B8               	movwf	??i1___ftadd+2
 12662  082C  1003               	clrc
 12663  082D  0D37               	rlf	??i1___ftadd+1,w
 12664  082E  0D38               	rlf	??i1___ftadd+2,w
 12665  082F  00B9               	movwf	??i1___ftadd+3
 12666  0830  0839               	movf	??i1___ftadd+3,w
 12667  0831  00BB               	movwf	i1___ftadd@exp2
 12668  0832  083C               	movf	i1___ftadd@exp1,w
 12669  0833  1903               	btfsc	3,2
 12670  0834  2841               	goto	i1l4746
 12671  0835  083B               	movf	i1___ftadd@exp2,w
 12672  0836  023C               	subwf	i1___ftadd@exp1,w
 12673  0837  1803               	skipnc
 12674  0838  2848               	goto	i1l4750
 12675  0839  033C               	decf	i1___ftadd@exp1,w
 12676  083A  3AFF               	xorlw	255
 12677  083B  073B               	addwf	i1___ftadd@exp2,w
 12678  083C  00B6               	movwf	??i1___ftadd
 12679  083D  3019               	movlw	25
 12680  083E  0236               	subwf	??i1___ftadd,w
 12681  083F  1C03               	skipc
 12682  0840  2848               	goto	i1l4750
 12683  0841                     i1l4746:	
 12684  0841  0833               	movf	i1___ftadd@f2,w
 12685  0842  00B0               	movwf	?i1___ftadd
 12686  0843  0834               	movf	i1___ftadd@f2+1,w
 12687  0844  00B1               	movwf	?i1___ftadd+1
 12688  0845  0835               	movf	i1___ftadd@f2+2,w
 12689  0846  00B2               	movwf	?i1___ftadd+2
 12690  0847  0008               	return
 12691  0848                     i1l4750:	
 12692  0848  083B               	movf	i1___ftadd@exp2,w
 12693  0849  1903               	btfsc	3,2
 12694  084A  0008               	return
 12695  084B  083C               	movf	i1___ftadd@exp1,w
 12696  084C  023B               	subwf	i1___ftadd@exp2,w
 12697  084D  1803               	skipnc
 12698  084E  2857               	goto	i1l4756
 12699  084F  033B               	decf	i1___ftadd@exp2,w
 12700  0850  3AFF               	xorlw	255
 12701  0851  073C               	addwf	i1___ftadd@exp1,w
 12702  0852  00B6               	movwf	??i1___ftadd
 12703  0853  3019               	movlw	25
 12704  0854  0236               	subwf	??i1___ftadd,w
 12705  0855  1803               	btfsc	3,0
 12706  0856  0008               	return
 12707  0857                     i1l4756:	
 12708  0857  3006               	movlw	6
 12709  0858  00B6               	movwf	??i1___ftadd
 12710  0859  0836               	movf	??i1___ftadd,w
 12711  085A  00BA               	movwf	i1___ftadd@sign
 12712  085B  1BB2               	btfsc	i1___ftadd@f1+2,7
 12713  085C  17BA               	bsf	i1___ftadd@sign,7
 12714  085D  1BB5               	btfsc	i1___ftadd@f2+2,7
 12715  085E  173A               	bsf	i1___ftadd@sign,6
 12716  085F  17B1               	bsf	i1___ftadd@f1+1,7
 12717  0860  30FF               	movlw	255
 12718  0861  05B0               	andwf	i1___ftadd@f1,f
 12719  0862  30FF               	movlw	255
 12720  0863  05B1               	andwf	i1___ftadd@f1+1,f
 12721  0864  3000               	movlw	0
 12722  0865  05B2               	andwf	i1___ftadd@f1+2,f
 12723  0866  17B4               	bsf	i1___ftadd@f2+1,7
 12724  0867  30FF               	movlw	255
 12725  0868  05B3               	andwf	i1___ftadd@f2,f
 12726  0869  30FF               	movlw	255
 12727  086A  05B4               	andwf	i1___ftadd@f2+1,f
 12728  086B  3000               	movlw	0
 12729  086C  05B5               	andwf	i1___ftadd@f2+2,f
 12730  086D  083B               	movf	i1___ftadd@exp2,w
 12731  086E  023C               	subwf	i1___ftadd@exp1,w
 12732  086F  1803               	skipnc
 12733  0870  2893               	goto	i1l4778
 12734  0871                     i1l4768:	
 12735  0871  3001               	movlw	1
 12736  0872                     u664_25:	
 12737  0872  35B3               	lslf	i1___ftadd@f2,f
 12738  0873  0DB4               	rlf	i1___ftadd@f2+1,f
 12739  0874  0DB5               	rlf	i1___ftadd@f2+2,f
 12740  0875  0B89               	decfsz	9,f
 12741  0876  2872               	goto	u664_25
 12742  0877  3001               	movlw	1
 12743  0878  02BB               	subwf	i1___ftadd@exp2,f
 12744  0879  083B               	movf	i1___ftadd@exp2,w
 12745  087A  063C               	xorwf	i1___ftadd@exp1,w
 12746  087B  1903               	skipnz
 12747  087C  288E               	goto	i1l4776
 12748  087D  3001               	movlw	1
 12749  087E  02BA               	subwf	i1___ftadd@sign,f
 12750  087F  083A               	movf	i1___ftadd@sign,w
 12751  0880  3907               	andlw	7
 12752  0881  1903               	btfsc	3,2
 12753  0882  288E               	goto	i1l4776
 12754  0883  2871               	goto	i1l4768
 12755  0884                     i1l4774:	
 12756  0884  3001               	movlw	1
 12757  0885                     u667_25:	
 12758  0885  36B2               	lsrf	i1___ftadd@f1+2,f
 12759  0886  0CB1               	rrf	i1___ftadd@f1+1,f
 12760  0887  0CB0               	rrf	i1___ftadd@f1,f
 12761  0888  0B89               	decfsz	9,f
 12762  0889  2885               	goto	u667_25
 12763  088A  3001               	movlw	1
 12764  088B  00B6               	movwf	??i1___ftadd
 12765  088C  0836               	movf	??i1___ftadd,w
 12766  088D  07BC               	addwf	i1___ftadd@exp1,f
 12767  088E                     i1l4776:	
 12768  088E  083C               	movf	i1___ftadd@exp1,w
 12769  088F  063B               	xorwf	i1___ftadd@exp2,w
 12770  0890  1903               	btfsc	3,2
 12771  0891  28B8               	goto	i1l1083
 12772  0892  2884               	goto	i1l4774
 12773  0893                     i1l4778:	
 12774  0893  083C               	movf	i1___ftadd@exp1,w
 12775  0894  023B               	subwf	i1___ftadd@exp2,w
 12776  0895  1803               	skipnc
 12777  0896  28B8               	goto	i1l1083
 12778  0897                     i1l4780:	
 12779  0897  3001               	movlw	1
 12780  0898                     u670_25:	
 12781  0898  35B0               	lslf	i1___ftadd@f1,f
 12782  0899  0DB1               	rlf	i1___ftadd@f1+1,f
 12783  089A  0DB2               	rlf	i1___ftadd@f1+2,f
 12784  089B  0B89               	decfsz	9,f
 12785  089C  2898               	goto	u670_25
 12786  089D  3001               	movlw	1
 12787  089E  02BC               	subwf	i1___ftadd@exp1,f
 12788  089F  083B               	movf	i1___ftadd@exp2,w
 12789  08A0  063C               	xorwf	i1___ftadd@exp1,w
 12790  08A1  1903               	skipnz
 12791  08A2  28B4               	goto	i1l4788
 12792  08A3  3001               	movlw	1
 12793  08A4  02BA               	subwf	i1___ftadd@sign,f
 12794  08A5  083A               	movf	i1___ftadd@sign,w
 12795  08A6  3907               	andlw	7
 12796  08A7  1903               	btfsc	3,2
 12797  08A8  28B4               	goto	i1l4788
 12798  08A9  2897               	goto	i1l4780
 12799  08AA                     i1l4786:	
 12800  08AA  3001               	movlw	1
 12801  08AB                     u673_25:	
 12802  08AB  36B5               	lsrf	i1___ftadd@f2+2,f
 12803  08AC  0CB4               	rrf	i1___ftadd@f2+1,f
 12804  08AD  0CB3               	rrf	i1___ftadd@f2,f
 12805  08AE  0B89               	decfsz	9,f
 12806  08AF  28AB               	goto	u673_25
 12807  08B0  3001               	movlw	1
 12808  08B1  00B6               	movwf	??i1___ftadd
 12809  08B2  0836               	movf	??i1___ftadd,w
 12810  08B3  07BB               	addwf	i1___ftadd@exp2,f
 12811  08B4                     i1l4788:	
 12812  08B4  083C               	movf	i1___ftadd@exp1,w
 12813  08B5  063B               	xorwf	i1___ftadd@exp2,w
 12814  08B6  1D03               	skipz
 12815  08B7  28AA               	goto	i1l4786
 12816  08B8                     i1l1083:	
 12817  08B8  1FBA               	btfss	i1___ftadd@sign,7
 12818  08B9  28CA               	goto	i1l4792
 12819  08BA  30FF               	movlw	255
 12820  08BB  06B0               	xorwf	i1___ftadd@f1,f
 12821  08BC  30FF               	movlw	255
 12822  08BD  06B1               	xorwf	i1___ftadd@f1+1,f
 12823  08BE  30FF               	movlw	255
 12824  08BF  06B2               	xorwf	i1___ftadd@f1+2,f
 12825  08C0  3001               	movlw	1
 12826  08C1  07B0               	addwf	i1___ftadd@f1,f
 12827  08C2  3000               	movlw	0
 12828  08C3  1803               	skipnc
 12829  08C4  3001               	movlw	1
 12830  08C5  07B1               	addwf	i1___ftadd@f1+1,f
 12831  08C6  3000               	movlw	0
 12832  08C7  1803               	skipnc
 12833  08C8  3001               	movlw	1
 12834  08C9  07B2               	addwf	i1___ftadd@f1+2,f
 12835  08CA                     i1l4792:	
 12836  08CA  1F3A               	btfss	i1___ftadd@sign,6
 12837  08CB  28DC               	goto	i1l4796
 12838  08CC  30FF               	movlw	255
 12839  08CD  06B3               	xorwf	i1___ftadd@f2,f
 12840  08CE  30FF               	movlw	255
 12841  08CF  06B4               	xorwf	i1___ftadd@f2+1,f
 12842  08D0  30FF               	movlw	255
 12843  08D1  06B5               	xorwf	i1___ftadd@f2+2,f
 12844  08D2  3001               	movlw	1
 12845  08D3  07B3               	addwf	i1___ftadd@f2,f
 12846  08D4  3000               	movlw	0
 12847  08D5  1803               	skipnc
 12848  08D6  3001               	movlw	1
 12849  08D7  07B4               	addwf	i1___ftadd@f2+1,f
 12850  08D8  3000               	movlw	0
 12851  08D9  1803               	skipnc
 12852  08DA  3001               	movlw	1
 12853  08DB  07B5               	addwf	i1___ftadd@f2+2,f
 12854  08DC                     i1l4796:	
 12855  08DC  01BA               	clrf	i1___ftadd@sign
 12856  08DD  0830               	movf	i1___ftadd@f1,w
 12857  08DE  07B3               	addwf	i1___ftadd@f2,f
 12858  08DF  0831               	movf	i1___ftadd@f1+1,w
 12859  08E0  3DB4               	addwfc	i1___ftadd@f2+1,f
 12860  08E1  0832               	movf	i1___ftadd@f1+2,w
 12861  08E2  3DB5               	addwfc	i1___ftadd@f2+2,f
 12862  08E3  1FB5               	btfss	i1___ftadd@f2+2,7
 12863  08E4  28F7               	goto	i1l4806
 12864  08E5  30FF               	movlw	255
 12865  08E6  06B3               	xorwf	i1___ftadd@f2,f
 12866  08E7  30FF               	movlw	255
 12867  08E8  06B4               	xorwf	i1___ftadd@f2+1,f
 12868  08E9  30FF               	movlw	255
 12869  08EA  06B5               	xorwf	i1___ftadd@f2+2,f
 12870  08EB  3001               	movlw	1
 12871  08EC  07B3               	addwf	i1___ftadd@f2,f
 12872  08ED  3000               	movlw	0
 12873  08EE  1803               	skipnc
 12874  08EF  3001               	movlw	1
 12875  08F0  07B4               	addwf	i1___ftadd@f2+1,f
 12876  08F1  3000               	movlw	0
 12877  08F2  1803               	skipnc
 12878  08F3  3001               	movlw	1
 12879  08F4  07B5               	addwf	i1___ftadd@f2+2,f
 12880  08F5  01BA               	clrf	i1___ftadd@sign
 12881  08F6  0ABA               	incf	i1___ftadd@sign,f
 12882  08F7                     i1l4806:	
 12883  08F7  0833               	movf	i1___ftadd@f2,w
 12884  08F8  00F0               	movwf	i1___ftpack@arg
 12885  08F9  0834               	movf	i1___ftadd@f2+1,w
 12886  08FA  00F1               	movwf	i1___ftpack@arg+1
 12887  08FB  0835               	movf	i1___ftadd@f2+2,w
 12888  08FC  00F2               	movwf	i1___ftpack@arg+2
 12889  08FD  083C               	movf	i1___ftadd@exp1,w
 12890  08FE  00B6               	movwf	??i1___ftadd
 12891  08FF  0836               	movf	??i1___ftadd,w
 12892  0900  00F3               	movwf	i1___ftpack@exp
 12893  0901  083A               	movf	i1___ftadd@sign,w
 12894  0902  00B7               	movwf	??i1___ftadd+1
 12895  0903  0837               	movf	??i1___ftadd+1,w
 12896  0904  00F4               	movwf	i1___ftpack@sign
 12897  0905  319B  23F3         	fcall	i1___ftpack
 12898  0907  0870               	movf	?i1___ftpack,w
 12899  0908  0020               	movlb	0	; select bank0
 12900  0909  00B0               	movwf	?i1___ftadd
 12901  090A  0871               	movf	?i1___ftpack+1,w
 12902  090B  00B1               	movwf	?i1___ftadd+1
 12903  090C  0872               	movf	?i1___ftpack+2,w
 12904  090D  00B2               	movwf	?i1___ftadd+2
 12905  090E  0008               	return
 12906  090F                     __end_ofi1___ftadd:	
 12907                           
 12908                           	psect	text43
 12909  1BF3                     __ptext43:	
 12910 ;; *************** function i1___ftpack *****************
 12911 ;; Defined at:
 12912 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
 12913 ;; Parameters:    Size  Location     Type
 12914 ;;  arg             3    0[COMMON] unsigned um
 12915 ;;  exp             1    3[COMMON] unsigned char 
 12916 ;;  sign            1    4[COMMON] unsigned char 
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;		None
 12919 ;; Return value:  Size  Location     Type
 12920 ;;                  3    0[COMMON] float 
 12921 ;; Registers used:
 12922 ;;		wreg, status,2, status,0
 12923 ;; Tracked objects:
 12924 ;;		On entry : 0/0
 12925 ;;		On exit  : 0/0
 12926 ;;		Unchanged: 0/0
 12927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12928 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12930 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12931 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12932 ;;Total ram usage:        8 bytes
 12933 ;; Hardware stack levels used:    1
 12934 ;; This function calls:
 12935 ;;		Nothing
 12936 ;; This function is called by:
 12937 ;;		i1___ftadd
 12938 ;;		i1___ftdiv
 12939 ;;		i1___ftmul
 12940 ;;		i1___lwtoft
 12941 ;; This function uses a non-reentrant model
 12942 ;;
 12943                           
 12944                           
 12945                           ;psect for function i1___ftpack
 12946  1BF3                     i1___ftpack:	
 12947                           
 12948                           ;incstack = 0
 12949                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
 12950  1BF3  0873               	movf	i1___ftpack@exp,w
 12951  1BF4  1903               	btfsc	3,2
 12952  1BF5  2BFB               	goto	i1l4010
 12953  1BF6  0872               	movf	i1___ftpack@arg+2,w
 12954  1BF7  0471               	iorwf	i1___ftpack@arg+1,w
 12955  1BF8  0470               	iorwf	i1___ftpack@arg,w
 12956  1BF9  1D03               	skipz
 12957  1BFA  2C0C               	goto	i1l4016
 12958  1BFB                     i1l4010:	
 12959  1BFB  3000               	movlw	0
 12960  1BFC  00F0               	movwf	?i1___ftpack
 12961  1BFD  3000               	movlw	0
 12962  1BFE  00F1               	movwf	?i1___ftpack+1
 12963  1BFF  3000               	movlw	0
 12964  1C00  00F2               	movwf	?i1___ftpack+2
 12965  1C01  0008               	return
 12966  1C02                     i1l4014:	
 12967  1C02  3001               	movlw	1
 12968  1C03  00F5               	movwf	??i1___ftpack
 12969  1C04  0875               	movf	??i1___ftpack,w
 12970  1C05  07F3               	addwf	i1___ftpack@exp,f
 12971  1C06  3001               	movlw	1
 12972  1C07                     u531_25:	
 12973  1C07  36F2               	lsrf	i1___ftpack@arg+2,f
 12974  1C08  0CF1               	rrf	i1___ftpack@arg+1,f
 12975  1C09  0CF0               	rrf	i1___ftpack@arg,f
 12976  1C0A  0B89               	decfsz	9,f
 12977  1C0B  2C07               	goto	u531_25
 12978  1C0C                     i1l4016:	
 12979  1C0C  30FE               	movlw	254
 12980  1C0D  0572               	andwf	i1___ftpack@arg+2,w
 12981  1C0E  1903               	btfsc	3,2
 12982  1C0F  2C25               	goto	i1l1054
 12983  1C10  2C02               	goto	i1l4014
 12984  1C11                     i1l4018:	
 12985  1C11  3001               	movlw	1
 12986  1C12  00F5               	movwf	??i1___ftpack
 12987  1C13  0875               	movf	??i1___ftpack,w
 12988  1C14  07F3               	addwf	i1___ftpack@exp,f
 12989  1C15  3001               	movlw	1
 12990  1C16  07F0               	addwf	i1___ftpack@arg,f
 12991  1C17  3000               	movlw	0
 12992  1C18  1803               	skipnc
 12993  1C19  3001               	movlw	1
 12994  1C1A  07F1               	addwf	i1___ftpack@arg+1,f
 12995  1C1B  3000               	movlw	0
 12996  1C1C  1803               	skipnc
 12997  1C1D  3001               	movlw	1
 12998  1C1E  07F2               	addwf	i1___ftpack@arg+2,f
 12999  1C1F  3001               	movlw	1
 13000  1C20                     u533_25:	
 13001  1C20  36F2               	lsrf	i1___ftpack@arg+2,f
 13002  1C21  0CF1               	rrf	i1___ftpack@arg+1,f
 13003  1C22  0CF0               	rrf	i1___ftpack@arg,f
 13004  1C23  0B89               	decfsz	9,f
 13005  1C24  2C20               	goto	u533_25
 13006  1C25                     i1l1054:	
 13007  1C25  30FF               	movlw	255
 13008  1C26  0572               	andwf	i1___ftpack@arg+2,w
 13009  1C27  1903               	btfsc	3,2
 13010  1C28  2C32               	goto	i1l4026
 13011  1C29  2C11               	goto	i1l4018
 13012  1C2A                     i1l4024:	
 13013  1C2A  3001               	movlw	1
 13014  1C2B  02F3               	subwf	i1___ftpack@exp,f
 13015  1C2C  3001               	movlw	1
 13016  1C2D                     u535_25:	
 13017  1C2D  35F0               	lslf	i1___ftpack@arg,f
 13018  1C2E  0DF1               	rlf	i1___ftpack@arg+1,f
 13019  1C2F  0DF2               	rlf	i1___ftpack@arg+2,f
 13020  1C30  0B89               	decfsz	9,f
 13021  1C31  2C2D               	goto	u535_25
 13022  1C32                     i1l4026:	
 13023  1C32  1FF1               	btfss	i1___ftpack@arg+1,7
 13024  1C33  2C2A               	goto	i1l4024
 13025  1C34  1873               	btfsc	i1___ftpack@exp,0
 13026  1C35  2C3C               	goto	i1l1060
 13027  1C36  30FF               	movlw	255
 13028  1C37  05F0               	andwf	i1___ftpack@arg,f
 13029  1C38  307F               	movlw	127
 13030  1C39  05F1               	andwf	i1___ftpack@arg+1,f
 13031  1C3A  30FF               	movlw	255
 13032  1C3B  05F2               	andwf	i1___ftpack@arg+2,f
 13033  1C3C                     i1l1060:	
 13034  1C3C  1003               	clrc
 13035  1C3D  0CF3               	rrf	i1___ftpack@exp,f
 13036  1C3E  0873               	movf	i1___ftpack@exp,w
 13037  1C3F  00F5               	movwf	??i1___ftpack
 13038  1C40  01F6               	clrf	??i1___ftpack+1
 13039  1C41  01F7               	clrf	??i1___ftpack+2
 13040  1C42  3010               	movlw	16
 13041  1C43                     u538_25:	
 13042  1C43  35F5               	lslf	??i1___ftpack,f
 13043  1C44  0DF6               	rlf	??i1___ftpack+1,f
 13044  1C45  0DF7               	rlf	??i1___ftpack+2,f
 13045  1C46  0B89               	decfsz	9,f
 13046  1C47  2C43               	goto	u538_25
 13047  1C48  0875               	movf	??i1___ftpack,w
 13048  1C49  04F0               	iorwf	i1___ftpack@arg,f
 13049  1C4A  0876               	movf	??i1___ftpack+1,w
 13050  1C4B  04F1               	iorwf	i1___ftpack@arg+1,f
 13051  1C4C  0877               	movf	??i1___ftpack+2,w
 13052  1C4D  04F2               	iorwf	i1___ftpack@arg+2,f
 13053  1C4E  0874               	movf	i1___ftpack@sign,w
 13054  1C4F  1903               	btfsc	3,2
 13055  1C50  0008               	return
 13056  1C51  17F2               	bsf	i1___ftpack@arg+2,7
 13057  1C52  0008               	return
 13058  1C53                     __end_ofi1___ftpack:	
 13059                           
 13060                           	psect	text44
 13061  1E75                     __ptext44:	
 13062 ;; *************** function i1___aldiv *****************
 13063 ;; Defined at:
 13064 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\aldiv.c"
 13065 ;; Parameters:    Size  Location     Type
 13066 ;;  divisor         4    0[COMMON] long 
 13067 ;;  dividend        4    4[COMMON] long 
 13068 ;; Auto vars:     Size  Location     Type
 13069 ;;  __aldiv         4    2[BANK0 ] long 
 13070 ;;  __aldiv         1    1[BANK0 ] unsigned char 
 13071 ;;  __aldiv         1    0[BANK0 ] unsigned char 
 13072 ;; Return value:  Size  Location     Type
 13073 ;;                  4    0[COMMON] long 
 13074 ;; Registers used:
 13075 ;;		wreg, status,2, status,0
 13076 ;; Tracked objects:
 13077 ;;		On entry : 0/0
 13078 ;;		On exit  : 0/0
 13079 ;;		Unchanged: 0/0
 13080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13081 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13082 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13083 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13084 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13085 ;;Total ram usage:       15 bytes
 13086 ;; Hardware stack levels used:    1
 13087 ;; This function calls:
 13088 ;;		Nothing
 13089 ;; This function is called by:
 13090 ;;		_ISR_Function
 13091 ;; This function uses a non-reentrant model
 13092 ;;
 13093                           
 13094                           
 13095                           ;psect for function i1___aldiv
 13096  1E75                     i1___aldiv:	
 13097                           
 13098                           ;incstack = 0
 13099                           ; Regs used in i1___aldiv: [wreg+status,2+status,0]
 13100  1E75  0020               	movlb	0	; select bank0
 13101  1E76  01A1               	clrf	i1___aldiv@sign
 13102  1E77  1FF3               	btfss	i1___aldiv@divisor+3,7
 13103  1E78  2E86               	goto	i1l948
 13104  1E79  09F0               	comf	i1___aldiv@divisor,f
 13105  1E7A  09F1               	comf	i1___aldiv@divisor+1,f
 13106  1E7B  09F2               	comf	i1___aldiv@divisor+2,f
 13107  1E7C  09F3               	comf	i1___aldiv@divisor+3,f
 13108  1E7D  0AF0               	incf	i1___aldiv@divisor,f
 13109  1E7E  1903               	skipnz
 13110  1E7F  0AF1               	incf	i1___aldiv@divisor+1,f
 13111  1E80  1903               	skipnz
 13112  1E81  0AF2               	incf	i1___aldiv@divisor+2,f
 13113  1E82  1903               	skipnz
 13114  1E83  0AF3               	incf	i1___aldiv@divisor+3,f
 13115  1E84  01A1               	clrf	i1___aldiv@sign
 13116  1E85  0AA1               	incf	i1___aldiv@sign,f
 13117  1E86                     i1l948:	
 13118  1E86  1FF7               	btfss	i1___aldiv@dividend+3,7
 13119  1E87  2E97               	goto	i1l4708
 13120  1E88  09F4               	comf	i1___aldiv@dividend,f
 13121  1E89  09F5               	comf	i1___aldiv@dividend+1,f
 13122  1E8A  09F6               	comf	i1___aldiv@dividend+2,f
 13123  1E8B  09F7               	comf	i1___aldiv@dividend+3,f
 13124  1E8C  0AF4               	incf	i1___aldiv@dividend,f
 13125  1E8D  1903               	skipnz
 13126  1E8E  0AF5               	incf	i1___aldiv@dividend+1,f
 13127  1E8F  1903               	skipnz
 13128  1E90  0AF6               	incf	i1___aldiv@dividend+2,f
 13129  1E91  1903               	skipnz
 13130  1E92  0AF7               	incf	i1___aldiv@dividend+3,f
 13131  1E93  3001               	movlw	1
 13132  1E94  00F8               	movwf	??i1___aldiv
 13133  1E95  0878               	movf	??i1___aldiv,w
 13134  1E96  06A1               	xorwf	i1___aldiv@sign,f
 13135  1E97                     i1l4708:	
 13136  1E97  3000               	movlw	0
 13137  1E98  00A5               	movwf	i1___aldiv@quotient+3
 13138  1E99  3000               	movlw	0
 13139  1E9A  00A4               	movwf	i1___aldiv@quotient+2
 13140  1E9B  3000               	movlw	0
 13141  1E9C  00A3               	movwf	i1___aldiv@quotient+1
 13142  1E9D  3000               	movlw	0
 13143  1E9E  00A2               	movwf	i1___aldiv@quotient
 13144  1E9F  0873               	movf	i1___aldiv@divisor+3,w
 13145  1EA0  0472               	iorwf	i1___aldiv@divisor+2,w
 13146  1EA1  0471               	iorwf	i1___aldiv@divisor+1,w
 13147  1EA2  0470               	iorwf	i1___aldiv@divisor,w
 13148  1EA3  1903               	skipnz
 13149  1EA4  2EE0               	goto	i1l4730
 13150  1EA5  01A0               	clrf	i1___aldiv@counter
 13151  1EA6  0AA0               	incf	i1___aldiv@counter,f
 13152  1EA7                     i1l4716:	
 13153  1EA7  1BF3               	btfsc	i1___aldiv@divisor+3,7
 13154  1EA8  2EB5               	goto	i1l4718
 13155  1EA9  3001               	movlw	1
 13156  1EAA                     u648_25:	
 13157  1EAA  35F0               	lslf	i1___aldiv@divisor,f
 13158  1EAB  0DF1               	rlf	i1___aldiv@divisor+1,f
 13159  1EAC  0DF2               	rlf	i1___aldiv@divisor+2,f
 13160  1EAD  0DF3               	rlf	i1___aldiv@divisor+3,f
 13161  1EAE  0B89               	decfsz	9,f
 13162  1EAF  2EAA               	goto	u648_25
 13163  1EB0  3001               	movlw	1
 13164  1EB1  00F8               	movwf	??i1___aldiv
 13165  1EB2  0878               	movf	??i1___aldiv,w
 13166  1EB3  07A0               	addwf	i1___aldiv@counter,f
 13167  1EB4  2EA7               	goto	i1l4716
 13168  1EB5                     i1l4718:	
 13169  1EB5  3001               	movlw	1
 13170  1EB6                     u650_25:	
 13171  1EB6  35A2               	lslf	i1___aldiv@quotient,f
 13172  1EB7  0DA3               	rlf	i1___aldiv@quotient+1,f
 13173  1EB8  0DA4               	rlf	i1___aldiv@quotient+2,f
 13174  1EB9  0DA5               	rlf	i1___aldiv@quotient+3,f
 13175  1EBA  0B89               	decfsz	9,f
 13176  1EBB  2EB6               	goto	u650_25
 13177  1EBC  0873               	movf	i1___aldiv@divisor+3,w
 13178  1EBD  0277               	subwf	i1___aldiv@dividend+3,w
 13179  1EBE  1D03               	skipz
 13180  1EBF  2ECA               	goto	u651_25
 13181  1EC0  0872               	movf	i1___aldiv@divisor+2,w
 13182  1EC1  0276               	subwf	i1___aldiv@dividend+2,w
 13183  1EC2  1D03               	skipz
 13184  1EC3  2ECA               	goto	u651_25
 13185  1EC4  0871               	movf	i1___aldiv@divisor+1,w
 13186  1EC5  0275               	subwf	i1___aldiv@dividend+1,w
 13187  1EC6  1D03               	skipz
 13188  1EC7  2ECA               	goto	u651_25
 13189  1EC8  0870               	movf	i1___aldiv@divisor,w
 13190  1EC9  0274               	subwf	i1___aldiv@dividend,w
 13191  1ECA                     u651_25:	
 13192  1ECA  1C03               	skipc
 13193  1ECB  2ED5               	goto	i1l4726
 13194  1ECC  0870               	movf	i1___aldiv@divisor,w
 13195  1ECD  02F4               	subwf	i1___aldiv@dividend,f
 13196  1ECE  0871               	movf	i1___aldiv@divisor+1,w
 13197  1ECF  3BF5               	subwfb	i1___aldiv@dividend+1,f
 13198  1ED0  0872               	movf	i1___aldiv@divisor+2,w
 13199  1ED1  3BF6               	subwfb	i1___aldiv@dividend+2,f
 13200  1ED2  0873               	movf	i1___aldiv@divisor+3,w
 13201  1ED3  3BF7               	subwfb	i1___aldiv@dividend+3,f
 13202  1ED4  1422               	bsf	i1___aldiv@quotient,0
 13203  1ED5                     i1l4726:	
 13204  1ED5  3001               	movlw	1
 13205  1ED6                     u652_25:	
 13206  1ED6  36F3               	lsrf	i1___aldiv@divisor+3,f
 13207  1ED7  0CF2               	rrf	i1___aldiv@divisor+2,f
 13208  1ED8  0CF1               	rrf	i1___aldiv@divisor+1,f
 13209  1ED9  0CF0               	rrf	i1___aldiv@divisor,f
 13210  1EDA  0B89               	decfsz	9,f
 13211  1EDB  2ED6               	goto	u652_25
 13212  1EDC  3001               	movlw	1
 13213  1EDD  02A0               	subwf	i1___aldiv@counter,f
 13214  1EDE  1D03               	btfss	3,2
 13215  1EDF  2EB5               	goto	i1l4718
 13216  1EE0                     i1l4730:	
 13217  1EE0  0821               	movf	i1___aldiv@sign,w
 13218  1EE1  1903               	btfsc	3,2
 13219  1EE2  2EEE               	goto	i1l4734
 13220  1EE3  09A2               	comf	i1___aldiv@quotient,f
 13221  1EE4  09A3               	comf	i1___aldiv@quotient+1,f
 13222  1EE5  09A4               	comf	i1___aldiv@quotient+2,f
 13223  1EE6  09A5               	comf	i1___aldiv@quotient+3,f
 13224  1EE7  0AA2               	incf	i1___aldiv@quotient,f
 13225  1EE8  1903               	skipnz
 13226  1EE9  0AA3               	incf	i1___aldiv@quotient+1,f
 13227  1EEA  1903               	skipnz
 13228  1EEB  0AA4               	incf	i1___aldiv@quotient+2,f
 13229  1EEC  1903               	skipnz
 13230  1EED  0AA5               	incf	i1___aldiv@quotient+3,f
 13231  1EEE                     i1l4734:	
 13232  1EEE  0825               	movf	i1___aldiv@quotient+3,w
 13233  1EEF  00F3               	movwf	?i1___aldiv+3
 13234  1EF0  0824               	movf	i1___aldiv@quotient+2,w
 13235  1EF1  00F2               	movwf	?i1___aldiv+2
 13236  1EF2  0823               	movf	i1___aldiv@quotient+1,w
 13237  1EF3  00F1               	movwf	?i1___aldiv+1
 13238  1EF4  0822               	movf	i1___aldiv@quotient,w
 13239  1EF5  00F0               	movwf	?i1___aldiv
 13240  1EF6  0008               	return
 13241  1EF7                     __end_ofi1___aldiv:	
 13242                           
 13243                           	psect	text45
 13244  0572                     __ptext45:	
 13245 ;; *************** function _Display *****************
 13246 ;; Defined at:
 13247 ;;		line 8 in file "DISPLAY.C"
 13248 ;; Parameters:    Size  Location     Type
 13249 ;;		None
 13250 ;; Auto vars:     Size  Location     Type
 13251 ;;		None
 13252 ;; Return value:  Size  Location     Type
 13253 ;;		None               void
 13254 ;; Registers used:
 13255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13256 ;; Tracked objects:
 13257 ;;		On entry : 0/0
 13258 ;;		On exit  : 0/0
 13259 ;;		Unchanged: 0/0
 13260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13263 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13264 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13265 ;;Total ram usage:        2 bytes
 13266 ;; Hardware stack levels used:    1
 13267 ;; This function calls:
 13268 ;;		Nothing
 13269 ;; This function is called by:
 13270 ;;		_ISR_Function
 13271 ;; This function uses a non-reentrant model
 13272 ;;
 13273                           
 13274                           
 13275                           ;psect for function _Display
 13276  0572                     _Display:	
 13277                           
 13278                           ;DISPLAY.C: 10: PORTB=0x00;
 13279                           
 13280                           ;incstack = 0
 13281                           ; Regs used in _Display: [wreg-fsr1h+status,2+status,0+pclath]
 13282  0572  0020               	movlb	0	; select bank0
 13283  0573  018D               	clrf	13	;volatile
 13284                           
 13285                           ;DISPLAY.C: 11: if(digit<=5)
 13286  0574  3006               	movlw	6
 13287  0575  025F               	subwf	_digit,w
 13288  0576  1C03               	btfss	3,0
 13289  0577  2E26               	goto	i1l4128
 13290  0578  2E32               	goto	i1l4130
 13291  0579                     i1l421:	
 13292                           ;DISPLAY.C: 14: {
 13293                           ;DISPLAY.C: 15: case 0:
 13294                           
 13295                           ;DISPLAY.C: 12: {
 13296                           ;DISPLAY.C: 13: switch(digit)
 13297                           
 13298                           
 13299                           ;DISPLAY.C: 16: LATAbits.LATA5=0;
 13300  0579  0022               	movlb	2	; select bank2
 13301  057A  128C               	bcf	12,5	;volatile
 13302                           
 13303                           ;DISPLAY.C: 17: LATAbits.LATA6=0;
 13304  057B  130C               	bcf	12,6	;volatile
 13305                           
 13306                           ;DISPLAY.C: 18: LATAbits.LATA7=0;
 13307  057C  138C               	bcf	12,7	;volatile
 13308                           
 13309                           ;DISPLAY.C: 19: LATB=lookup_table[diswin1[digit]];
 13310  057D  0020               	movlb	0	; select bank0
 13311  057E  085F               	movf	_digit,w
 13312  057F  3E64               	addlw	_diswin1& (0+255)
 13313  0580  0086               	movwf	6
 13314  0581  3001               	movlw	1	; select bank2/3
 13315  0582  0087               	movwf	7
 13316  0583  0801               	movf	1,w
 13317  0584  00F0               	movwf	??_Display
 13318  0585  01F1               	clrf	??_Display+1
 13319  0586  35F0               	lslf	??_Display,f
 13320  0587  0DF1               	rlf	??_Display+1,f
 13321  0588  3000               	movlw	low (_lookup_table| (0+32768))
 13322  0589  0770               	addwf	??_Display,w
 13323  058A  0084               	movwf	4
 13324  058B  3098               	movlw	high (_lookup_table| (0+32768))
 13325  058C  3D71               	addwfc	??_Display+1,w
 13326  058D  0085               	movwf	5
 13327  058E  0800               	movf	0,w	;code access
 13328  058F  0022               	movlb	2	; select bank2
 13329  0590  008D               	movwf	13	;volatile
 13330                           
 13331                           ;DISPLAY.C: 20: if(TypeDP.TypeD.digitdp1==1)
 13332  0591  0020               	movlb	0	; select bank0
 13333  0592  1C6B               	btfss	_TypeDP,0
 13334  0593  2E23               	goto	i1l438
 13335  0594  2E20               	goto	i1l4124
 13336  0595                     i1l425:	
 13337                           ;DISPLAY.C: 25: case 1:
 13338                           
 13339                           ;DISPLAY.C: 24: break;
 13340                           
 13341                           ;DISPLAY.C: 22: else
 13342                           ;DISPLAY.C: 23: LATBbits.LATB7=0;
 13343                           
 13344                           ;DISPLAY.C: 21: LATBbits.LATB7=1;
 13345                           
 13346                           
 13347                           ;DISPLAY.C: 26: LATAbits.LATA5=1;
 13348  0595  0022               	movlb	2	; select bank2
 13349  0596  168C               	bsf	12,5	;volatile
 13350                           
 13351                           ;DISPLAY.C: 27: LATAbits.LATA6=0;
 13352  0597  130C               	bcf	12,6	;volatile
 13353                           
 13354                           ;DISPLAY.C: 28: LATAbits.LATA7=0;
 13355  0598  138C               	bcf	12,7	;volatile
 13356                           
 13357                           ;DISPLAY.C: 29: LATB=lookup_table[diswin1[digit]];
 13358  0599  0020               	movlb	0	; select bank0
 13359  059A  085F               	movf	_digit,w
 13360  059B  3E64               	addlw	_diswin1& (0+255)
 13361  059C  0086               	movwf	6
 13362  059D  3001               	movlw	1	; select bank2/3
 13363  059E  0087               	movwf	7
 13364  059F  0801               	movf	1,w
 13365  05A0  00F0               	movwf	??_Display
 13366  05A1  01F1               	clrf	??_Display+1
 13367  05A2  35F0               	lslf	??_Display,f
 13368  05A3  0DF1               	rlf	??_Display+1,f
 13369  05A4  3000               	movlw	low (_lookup_table| (0+32768))
 13370  05A5  0770               	addwf	??_Display,w
 13371  05A6  0084               	movwf	4
 13372  05A7  3098               	movlw	high (_lookup_table| (0+32768))
 13373  05A8  3D71               	addwfc	??_Display+1,w
 13374  05A9  0085               	movwf	5
 13375  05AA  0800               	movf	0,w	;code access
 13376  05AB  0022               	movlb	2	; select bank2
 13377  05AC  008D               	movwf	13	;volatile
 13378                           
 13379                           ;DISPLAY.C: 30: if(TypeDP.TypeD.digitdp2==1)
 13380  05AD  0020               	movlb	0	; select bank0
 13381  05AE  1CEB               	btfss	_TypeDP,1
 13382  05AF  2E23               	goto	i1l438
 13383  05B0  2E20               	goto	i1l4124
 13384  05B1                     i1l428:	
 13385                           ;DISPLAY.C: 35: case 2:
 13386                           
 13387                           ;DISPLAY.C: 34: break;
 13388                           
 13389                           ;DISPLAY.C: 32: else
 13390                           ;DISPLAY.C: 33: LATBbits.LATB7=0;
 13391                           
 13392                           ;DISPLAY.C: 31: LATBbits.LATB7=1;
 13393                           
 13394                           
 13395                           ;DISPLAY.C: 36: LATAbits.LATA5=0;
 13396  05B1  0022               	movlb	2	; select bank2
 13397  05B2  128C               	bcf	12,5	;volatile
 13398                           
 13399                           ;DISPLAY.C: 37: LATAbits.LATA6=1;
 13400  05B3  170C               	bsf	12,6	;volatile
 13401                           
 13402                           ;DISPLAY.C: 38: LATAbits.LATA7=0;
 13403  05B4  138C               	bcf	12,7	;volatile
 13404                           
 13405                           ;DISPLAY.C: 39: LATB=lookup_table[diswin1[digit]];
 13406  05B5  0020               	movlb	0	; select bank0
 13407  05B6  085F               	movf	_digit,w
 13408  05B7  3E64               	addlw	_diswin1& (0+255)
 13409  05B8  0086               	movwf	6
 13410  05B9  3001               	movlw	1	; select bank2/3
 13411  05BA  0087               	movwf	7
 13412  05BB  0801               	movf	1,w
 13413  05BC  00F0               	movwf	??_Display
 13414  05BD  01F1               	clrf	??_Display+1
 13415  05BE  35F0               	lslf	??_Display,f
 13416  05BF  0DF1               	rlf	??_Display+1,f
 13417  05C0  3000               	movlw	low (_lookup_table| (0+32768))
 13418  05C1  0770               	addwf	??_Display,w
 13419  05C2  0084               	movwf	4
 13420  05C3  3098               	movlw	high (_lookup_table| (0+32768))
 13421  05C4  3D71               	addwfc	??_Display+1,w
 13422  05C5  0085               	movwf	5
 13423  05C6  0800               	movf	0,w	;code access
 13424  05C7  0022               	movlb	2	; select bank2
 13425  05C8  008D               	movwf	13	;volatile
 13426                           
 13427                           ;DISPLAY.C: 40: if(TypeDP.TypeD.digitdp3==1)
 13428  05C9  0020               	movlb	0	; select bank0
 13429  05CA  1D6B               	btfss	_TypeDP,2
 13430  05CB  2E23               	goto	i1l438
 13431  05CC  2E20               	goto	i1l4124
 13432  05CD                     i1l431:	
 13433                           ;DISPLAY.C: 45: case 3:
 13434                           
 13435                           ;DISPLAY.C: 44: break;
 13436                           
 13437                           ;DISPLAY.C: 42: else
 13438                           ;DISPLAY.C: 43: LATBbits.LATB7=0;
 13439                           
 13440                           ;DISPLAY.C: 41: LATBbits.LATB7=1;
 13441                           
 13442                           
 13443                           ;DISPLAY.C: 46: LATAbits.LATA5=1;
 13444  05CD  0022               	movlb	2	; select bank2
 13445  05CE  168C               	bsf	12,5	;volatile
 13446                           
 13447                           ;DISPLAY.C: 47: LATAbits.LATA6=1;
 13448  05CF  170C               	bsf	12,6	;volatile
 13449                           
 13450                           ;DISPLAY.C: 48: LATAbits.LATA7=0;
 13451  05D0  138C               	bcf	12,7	;volatile
 13452                           
 13453                           ;DISPLAY.C: 49: LATB=lookup_table[diswin1[digit]];
 13454  05D1  0020               	movlb	0	; select bank0
 13455  05D2  085F               	movf	_digit,w
 13456  05D3  3E64               	addlw	_diswin1& (0+255)
 13457  05D4  0086               	movwf	6
 13458  05D5  3001               	movlw	1	; select bank2/3
 13459  05D6  0087               	movwf	7
 13460  05D7  0801               	movf	1,w
 13461  05D8  00F0               	movwf	??_Display
 13462  05D9  01F1               	clrf	??_Display+1
 13463  05DA  35F0               	lslf	??_Display,f
 13464  05DB  0DF1               	rlf	??_Display+1,f
 13465  05DC  3000               	movlw	low (_lookup_table| (0+32768))
 13466  05DD  0770               	addwf	??_Display,w
 13467  05DE  0084               	movwf	4
 13468  05DF  3098               	movlw	high (_lookup_table| (0+32768))
 13469  05E0  3D71               	addwfc	??_Display+1,w
 13470  05E1  0085               	movwf	5
 13471  05E2  0800               	movf	0,w	;code access
 13472  05E3  0022               	movlb	2	; select bank2
 13473  05E4  008D               	movwf	13	;volatile
 13474                           
 13475                           ;DISPLAY.C: 50: if(TypeDP.TypeD.digitdp4==1)
 13476  05E5  0020               	movlb	0	; select bank0
 13477  05E6  1DEB               	btfss	_TypeDP,3
 13478  05E7  2E23               	goto	i1l438
 13479  05E8  2E20               	goto	i1l4124
 13480  05E9                     i1l434:	
 13481                           ;DISPLAY.C: 55: case 4:
 13482                           
 13483                           ;DISPLAY.C: 54: break;
 13484                           
 13485                           ;DISPLAY.C: 52: else
 13486                           ;DISPLAY.C: 53: LATBbits.LATB7=0;
 13487                           
 13488                           ;DISPLAY.C: 51: LATBbits.LATB7=1;
 13489                           
 13490                           
 13491                           ;DISPLAY.C: 56: LATAbits.LATA5=0;
 13492  05E9  0022               	movlb	2	; select bank2
 13493  05EA  128C               	bcf	12,5	;volatile
 13494                           
 13495                           ;DISPLAY.C: 57: LATAbits.LATA6=0;
 13496  05EB  130C               	bcf	12,6	;volatile
 13497                           
 13498                           ;DISPLAY.C: 58: LATAbits.LATA7=1;
 13499  05EC  178C               	bsf	12,7	;volatile
 13500                           
 13501                           ;DISPLAY.C: 59: LATB=lookup_table[diswin1[digit]];
 13502  05ED  0020               	movlb	0	; select bank0
 13503  05EE  085F               	movf	_digit,w
 13504  05EF  3E64               	addlw	_diswin1& (0+255)
 13505  05F0  0086               	movwf	6
 13506  05F1  3001               	movlw	1	; select bank2/3
 13507  05F2  0087               	movwf	7
 13508  05F3  0801               	movf	1,w
 13509  05F4  00F0               	movwf	??_Display
 13510  05F5  01F1               	clrf	??_Display+1
 13511  05F6  35F0               	lslf	??_Display,f
 13512  05F7  0DF1               	rlf	??_Display+1,f
 13513  05F8  3000               	movlw	low (_lookup_table| (0+32768))
 13514  05F9  0770               	addwf	??_Display,w
 13515  05FA  0084               	movwf	4
 13516  05FB  3098               	movlw	high (_lookup_table| (0+32768))
 13517  05FC  3D71               	addwfc	??_Display+1,w
 13518  05FD  0085               	movwf	5
 13519  05FE  0800               	movf	0,w	;code access
 13520  05FF  0022               	movlb	2	; select bank2
 13521  0600  008D               	movwf	13	;volatile
 13522                           
 13523                           ;DISPLAY.C: 60: if(TypeDP.TypeD.digitdp5==1)
 13524  0601  0020               	movlb	0	; select bank0
 13525  0602  1E6B               	btfss	_TypeDP,4
 13526  0603  2E23               	goto	i1l438
 13527  0604  2E20               	goto	i1l4124
 13528  0605                     i1l437:	
 13529                           ;DISPLAY.C: 65: case 5:
 13530                           
 13531                           ;DISPLAY.C: 64: break;
 13532                           
 13533                           ;DISPLAY.C: 62: else
 13534                           ;DISPLAY.C: 63: LATBbits.LATB7=0;
 13535                           
 13536                           ;DISPLAY.C: 61: LATBbits.LATB7=1;
 13537                           
 13538                           
 13539                           ;DISPLAY.C: 66: LATAbits.LATA5=1;
 13540  0605  0022               	movlb	2	; select bank2
 13541  0606  168C               	bsf	12,5	;volatile
 13542                           
 13543                           ;DISPLAY.C: 67: LATAbits.LATA6=0;
 13544  0607  130C               	bcf	12,6	;volatile
 13545                           
 13546                           ;DISPLAY.C: 68: LATAbits.LATA7=1;
 13547  0608  178C               	bsf	12,7	;volatile
 13548                           
 13549                           ;DISPLAY.C: 69: LATB=lookup_table[diswin1[digit]];
 13550  0609  0020               	movlb	0	; select bank0
 13551  060A  085F               	movf	_digit,w
 13552  060B  3E64               	addlw	_diswin1& (0+255)
 13553  060C  0086               	movwf	6
 13554  060D  3001               	movlw	1	; select bank2/3
 13555  060E  0087               	movwf	7
 13556  060F  0801               	movf	1,w
 13557  0610  00F0               	movwf	??_Display
 13558  0611  01F1               	clrf	??_Display+1
 13559  0612  35F0               	lslf	??_Display,f
 13560  0613  0DF1               	rlf	??_Display+1,f
 13561  0614  3000               	movlw	low (_lookup_table| (0+32768))
 13562  0615  0770               	addwf	??_Display,w
 13563  0616  0084               	movwf	4
 13564  0617  3098               	movlw	high (_lookup_table| (0+32768))
 13565  0618  3D71               	addwfc	??_Display+1,w
 13566  0619  0085               	movwf	5
 13567  061A  0800               	movf	0,w	;code access
 13568  061B  0022               	movlb	2	; select bank2
 13569  061C  008D               	movwf	13	;volatile
 13570                           
 13571                           ;DISPLAY.C: 70: if(TypeDP.TypeD.digitdp6==1)
 13572  061D  0020               	movlb	0	; select bank0
 13573  061E  1EEB               	btfss	_TypeDP,5
 13574  061F  2E23               	goto	i1l438
 13575  0620                     i1l4124:	
 13576                           
 13577                           ;DISPLAY.C: 71: LATBbits.LATB7=1;
 13578  0620  0022               	movlb	2	; select bank2
 13579  0621  178D               	bsf	13,7	;volatile
 13580  0622  2EAA               	goto	i1l4198
 13581  0623                     i1l438:	
 13582                           
 13583                           ;DISPLAY.C: 72: else
 13584                           ;DISPLAY.C: 73: LATBbits.LATB7=0;
 13585  0623  0022               	movlb	2	; select bank2
 13586  0624  138D               	bcf	13,7	;volatile
 13587                           
 13588                           ;DISPLAY.C: 77: }
 13589                           
 13590                           ;DISPLAY.C: 76: break;
 13591                           
 13592                           ;DISPLAY.C: 75: default:
 13593                           
 13594                           ;DISPLAY.C: 74: break;
 13595  0625  2EAA               	goto	i1l4198
 13596  0626                     i1l4128:	
 13597  0626  0020               	movlb	0	; select bank0
 13598  0627  085F               	movf	_digit,w
 13599                           
 13600                           ; Switch size 1, requested type "space"
 13601                           ; Number of cases is 6, Range of values is 0 to 5
 13602                           ; switch strategies available:
 13603                           ; Name         Instructions Cycles
 13604                           ; direct_byte           18     6 (fixed)
 13605                           ; simple_byte           19    10 (average)
 13606                           ; jumptable            260     6 (fixed)
 13607                           ;	Chosen strategy is direct_byte
 13608  0628  0084               	movwf	4
 13609  0629  3006               	movlw	6
 13610  062A  0204               	subwf	4,w
 13611  062B  1803               	skipnc
 13612  062C  2EAA               	goto	i1l4198
 13613  062D  3198               	movlp	high i1S5794
 13614  062E  3504               	lslf	4,w
 13615  062F  3E58               	addlw	low i1S5794
 13616  0630  0082               	movwf	2
 13617                           
 13618                           ;DISPLAY.C: 78: }
 13619  0631  2EAA               	goto	i1l4198
 13620  0632                     i1l4130:	
 13621                           
 13622                           ;DISPLAY.C: 79: else if(digit == 6)
 13623  0632  085F               	movf	_digit,w
 13624  0633  3A06               	xorlw	6
 13625  0634  1D03               	skipz
 13626  0635  2E3D               	goto	i1l4136
 13627                           
 13628                           ;DISPLAY.C: 80: {
 13629                           ;DISPLAY.C: 81: LATAbits.LATA5=0;
 13630  0636  0022               	movlb	2	; select bank2
 13631  0637  128C               	bcf	12,5	;volatile
 13632                           
 13633                           ;DISPLAY.C: 82: LATAbits.LATA6=1;
 13634  0638  170C               	bsf	12,6	;volatile
 13635                           
 13636                           ;DISPLAY.C: 83: LATAbits.LATA7=1;
 13637  0639  178C               	bsf	12,7	;volatile
 13638                           
 13639                           ;DISPLAY.C: 85: LATB=TypeU.LEDGROUP[0];
 13640  063A  0020               	movlb	0	; select bank0
 13641  063B  0869               	movf	_TypeU,w
 13642  063C  2E48               	goto	L23
 13643  063D                     i1l4136:	
 13644                           ;DISPLAY.C: 86: }
 13645                           
 13646                           
 13647                           ;DISPLAY.C: 87: else if(digit == 7)
 13648  063D  0020               	movlb	0	; select bank0
 13649  063E  085F               	movf	_digit,w
 13650  063F  3A07               	xorlw	7
 13651  0640  1D03               	skipz
 13652  0641  2E4B               	goto	i1l4142
 13653                           
 13654                           ;DISPLAY.C: 88: {
 13655                           ;DISPLAY.C: 89: LATAbits.LATA5=1;
 13656  0642  0022               	movlb	2	; select bank2
 13657  0643  168C               	bsf	12,5	;volatile
 13658                           
 13659                           ;DISPLAY.C: 90: LATAbits.LATA6=1;
 13660  0644  170C               	bsf	12,6	;volatile
 13661                           
 13662                           ;DISPLAY.C: 91: LATAbits.LATA7=1;
 13663  0645  178C               	bsf	12,7	;volatile
 13664                           
 13665                           ;DISPLAY.C: 93: LATB=TypeU.LEDGROUP[1];
 13666  0646  0020               	movlb	0	; select bank0
 13667  0647  086A               	movf	_TypeU+1,w
 13668  0648                     L23:	
 13669  0648  0022               	movlb	2	; select bank2
 13670  0649  008D               	movwf	13	;volatile
 13671                           
 13672                           ;DISPLAY.C: 95: }
 13673  064A  2EAA               	goto	i1l4198
 13674  064B                     i1l4142:	
 13675                           
 13676                           ;DISPLAY.C: 96: else if(digit == 8)
 13677  064B  0020               	movlb	0	; select bank0
 13678  064C  085F               	movf	_digit,w
 13679  064D  3A08               	xorlw	8
 13680  064E  1D03               	skipz
 13681  064F  2EAA               	goto	i1l4198
 13682                           
 13683                           ;DISPLAY.C: 97: {
 13684                           ;DISPLAY.C: 98: TRISB=0X0F;
 13685  0650  300F               	movlw	15
 13686  0651  0021               	movlb	1	; select bank1
 13687  0652  008D               	movwf	13	;volatile
 13688                           
 13689                           ;DISPLAY.C: 99: for(i=0;i>=100;i++);
 13690  0653  0020               	movlb	0	; select bank0
 13691  0654  01E2               	clrf	_i
 13692  0655  3064               	movlw	100
 13693  0656  0262               	subwf	_i,w
 13694  0657  1C03               	btfss	3,0
 13695  0658  2E61               	goto	i1l4156
 13696  0659                     i1l4152:	
 13697  0659  3001               	movlw	1
 13698  065A  00F0               	movwf	??_Display
 13699  065B  0870               	movf	??_Display,w
 13700  065C  07E2               	addwf	_i,f
 13701  065D  3064               	movlw	100
 13702  065E  0262               	subwf	_i,w
 13703  065F  1803               	skipnc
 13704  0660  2E59               	goto	i1l4152
 13705  0661                     i1l4156:	
 13706                           
 13707                           ;DISPLAY.C: 100: portbstatus=PORTB;
 13708  0661  080D               	movf	13,w	;volatile
 13709  0662  00F0               	movwf	??_Display
 13710  0663  0870               	movf	??_Display,w
 13711  0664  00E4               	movwf	_portbstatus	;volatile
 13712                           
 13713                           ;DISPLAY.C: 101: for(i=0;i>=200;i++);
 13714  0665  01E2               	clrf	_i
 13715  0666  30C8               	movlw	200
 13716  0667  0262               	subwf	_i,w
 13717  0668  1C03               	btfss	3,0
 13718  0669  2E72               	goto	i1l4168
 13719  066A                     i1l4164:	
 13720  066A  3001               	movlw	1
 13721  066B  00F0               	movwf	??_Display
 13722  066C  0870               	movf	??_Display,w
 13723  066D  07E2               	addwf	_i,f
 13724  066E  30C8               	movlw	200
 13725  066F  0262               	subwf	_i,w
 13726  0670  1803               	skipnc
 13727  0671  2E6A               	goto	i1l4164
 13728  0672                     i1l4168:	
 13729                           
 13730                           ;DISPLAY.C: 102: if(pportb==portbstatus)
 13731  0672  0022               	movlb	2	; select bank2
 13732  0673  0852               	movf	_pportb^(0+256),w	;volatile
 13733  0674  0020               	movlb	0	; select bank0
 13734  0675  0664               	xorwf	_portbstatus,w	;volatile
 13735  0676  1D03               	skipz
 13736  0677  2EA0               	goto	i1l4192
 13737                           
 13738                           ;DISPLAY.C: 103: {
 13739                           ;DISPLAY.C: 104: temp=portbstatus;
 13740  0678  0864               	movf	_portbstatus,w	;volatile
 13741  0679  00F0               	movwf	??_Display
 13742  067A  0870               	movf	??_Display,w
 13743  067B  00E7               	movwf	_temp
 13744                           
 13745                           ;DISPLAY.C: 105: temp=(temp & 0x0F);
 13746  067C  0867               	movf	_temp,w
 13747  067D  390F               	andlw	15
 13748  067E  00F0               	movwf	??_Display
 13749  067F  0870               	movf	??_Display,w
 13750  0680  00E7               	movwf	_temp
 13751                           
 13752                           ;DISPLAY.C: 106: if(temp==0x01)
 13753  0681  0867               	movf	_temp,w
 13754  0682  3A01               	xorlw	1
 13755  0683  1D03               	skipz
 13756  0684  2E87               	goto	i1l4178
 13757                           
 13758                           ;DISPLAY.C: 107: key=1;
 13759  0685  3001               	movlw	1
 13760  0686  2E9B               	goto	L26
 13761  0687                     i1l4178:	
 13762                           
 13763                           ;DISPLAY.C: 108: else if(temp==0x02)
 13764  0687  0020               	movlb	0	; select bank0
 13765  0688  0867               	movf	_temp,w
 13766  0689  3A02               	xorlw	2
 13767  068A  1D03               	skipz
 13768  068B  2E8E               	goto	i1l4182
 13769                           
 13770                           ;DISPLAY.C: 109: key=2;
 13771  068C  3002               	movlw	2
 13772  068D  2E9B               	goto	L26
 13773  068E                     i1l4182:	
 13774                           
 13775                           ;DISPLAY.C: 110: else if(temp==0x04)
 13776  068E  0020               	movlb	0	; select bank0
 13777  068F  0867               	movf	_temp,w
 13778  0690  3A04               	xorlw	4
 13779  0691  1D03               	skipz
 13780  0692  2E95               	goto	i1l4186
 13781                           
 13782                           ;DISPLAY.C: 111: key=3;
 13783  0693  3003               	movlw	3
 13784  0694  2E9B               	goto	L26
 13785  0695                     i1l4186:	
 13786                           
 13787                           ;DISPLAY.C: 112: else if(temp==0x08)
 13788  0695  0020               	movlb	0	; select bank0
 13789  0696  0867               	movf	_temp,w
 13790  0697  3A08               	xorlw	8
 13791  0698  1D03               	skipz
 13792  0699  2EA0               	goto	i1l4192
 13793                           
 13794                           ;DISPLAY.C: 113: key=4;
 13795  069A  3004               	movlw	4
 13796  069B                     L26:	
 13797  069B  00F0               	movwf	??_Display
 13798  069C  0870               	movf	??_Display,w
 13799  069D  0021               	movlb	1	; select bank1
 13800  069E  00EF               	movwf	_key^(0+128)	;volatile
 13801  069F  2EA2               	goto	i1l4194
 13802  06A0                     i1l4192:	
 13803                           ;DISPLAY.C: 116: }
 13804                           
 13805                           ;DISPLAY.C: 114: else
 13806                           ;DISPLAY.C: 115: key=0;
 13807                           
 13808                           
 13809                           ;DISPLAY.C: 117: else
 13810                           ;DISPLAY.C: 118: {
 13811                           ;DISPLAY.C: 119: key=0;
 13812  06A0  0021               	movlb	1	; select bank1
 13813  06A1  01EF               	clrf	_key^(0+128)	;volatile
 13814  06A2                     i1l4194:	
 13815                           
 13816                           ;DISPLAY.C: 120: }
 13817                           ;DISPLAY.C: 121: pportb=portbstatus;
 13818  06A2  0020               	movlb	0	; select bank0
 13819  06A3  0864               	movf	_portbstatus,w	;volatile
 13820  06A4  00F0               	movwf	??_Display
 13821  06A5  0870               	movf	??_Display,w
 13822  06A6  0022               	movlb	2	; select bank2
 13823  06A7  00D2               	movwf	_pportb^(0+256)	;volatile
 13824                           
 13825                           ;DISPLAY.C: 122: TRISB=0X00;
 13826  06A8  0021               	movlb	1	; select bank1
 13827  06A9  018D               	clrf	13	;volatile
 13828  06AA                     i1l4198:	
 13829                           
 13830                           ;DISPLAY.C: 123: }
 13831                           ;DISPLAY.C: 124: if(++digit >=9)
 13832  06AA  3001               	movlw	1
 13833  06AB  00F0               	movwf	??_Display
 13834  06AC  0870               	movf	??_Display,w
 13835  06AD  0020               	movlb	0	; select bank0
 13836  06AE  07DF               	addwf	_digit,f
 13837  06AF  3009               	movlw	9
 13838  06B0  025F               	subwf	_digit,w
 13839  06B1  1C03               	skipc
 13840  06B2  0008               	return
 13841                           
 13842                           ;DISPLAY.C: 125: digit=0;
 13843  06B3  01DF               	clrf	_digit
 13844  06B4  0008               	return
 13845  06B5                     __end_of_Display:	
 13846  007E                     btemp	set	126	;btemp
 13847  007E                     pic14e$flags	set	126
 13848  007E                     wtemp	set	126
 13849  007E                     wtemp0	set	126
 13850  0080                     wtemp1	set	128
 13851  0082                     wtemp2	set	130
 13852  0084                     wtemp3	set	132
 13853  0086                     wtemp4	set	134
 13854  0088                     wtemp5	set	136
 13855  007F                     wtemp6	set	127
 13856  007E                     ttemp	set	126
 13857  007E                     ttemp0	set	126
 13858  0081                     ttemp1	set	129
 13859  0084                     ttemp2	set	132
 13860  0087                     ttemp3	set	135
 13861  007F                     ttemp4	set	127
 13862  007E                     ltemp	set	126
 13863  007E                     ltemp0	set	126
 13864  0082                     ltemp1	set	130
 13865  0086                     ltemp2	set	134
 13866  0080                     ltemp3	set	128
 13867  239A                     
 13868                           	psect	swtext1
 13869  1858                     __pswtext1:	
 13870  1858                     i1S5794:	
 13871  1858  3185  2D79         	ljmp	i1l421
 13872  185A  3185  2D95         	ljmp	i1l425
 13873  185C  3185  2DB1         	ljmp	i1l428
 13874  185E  3185  2DCD         	ljmp	i1l431
 13875  1860  3185  2DE9         	ljmp	i1l434
 13876  1862  3186  2E05         	ljmp	i1l437


Data Sizes:
    Strings     0
    Constant    88
    Data        33
    BSS         239
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      80
    BANK1            80     79      80
    BANK2            80      0      80
    BANK3            80      0      79
    BANK4            80      0      60
    BANK5            80      0      24
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           42      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_Function in COMMON

    _ISR_Function->i1___lwtoft
    i1_disp_hex_window1->i1___lwdiv
    i1___lwtoft->i1___ftpack
    i1___fttol->i1___lwtoft
    i1___ftmul->i1___lwtoft
    i1___ftdiv->i1___lwtoft
    i1___ftadd->i1___lwtoft

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_Function in BANK0

    _ISR_Function->i1___fttol
    i1___fttol->i1___ftadd
    i1___ftadd->i1___ftmul

Critical Paths under _main in BANK1

    _main->_Adaptive_base_pid
    _transmittops->_Send_Byte
    _send_status->_Send_Byte
    _key_application->_Update_PWM
    _disp_hex_window2->___lwdiv
    _disp_hex_window1->___lwdiv
    ___lwdiv->___wmul
    _Wirespeed->___fttol
    ___lwtoft->___ftpack
    _SCANENCODER2->_enc2_port
    _SCANENCODER1->_enc1_port
    _Adaptive_base_pid->_Update_PWM
    ___fttol->___ftmul
    ___ftmul->___ftadd
    ___ftge->___altoft
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _Update_PWM->___fttol

Critical Paths under _ISR_Function in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Function in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   51515
                                             77 BANK1      2     2      0
                  _Adaptive_base_pid
                            _Delayms
                           _PWM_init
                       _SCANENCODER1
                       _SCANENCODER2
                        _Timer0_init
                         _Update_PWM
                          _Wirespeed
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                       _capture_init
                   _disp_hex_window1
                   _disp_hex_window2
                    _key_application
                       _portpin_init
                        _send_status
                        _system_init
                       _transmittops
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _transmittops                                         1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status                                          1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Send_Byte                                            1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _portpin_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_application                                      3     3      0    5463
                                             59 BANK1      3     3      0
                         _Update_PWM
                             ___wmul
                   _disp_hex_window2
 ---------------------------------------------------------------------------------
 (2) _disp_hex_window2                                     3     1      2    3569
                                             14 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window1                                     3     1      2    3543
                                             14 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1695
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1442
                                              6 BANK1      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _capture_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Wirespeed                                            4     2      2    9150
                                             51 BANK1      4     2      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2991
                                              8 BANK1      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER2                                         2     2      0     123
                                              5 BANK1      2     2      0
                          _enc2_port
 ---------------------------------------------------------------------------------
 (2) _enc2_port                                            5     5      0      94
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER1                                         2     2      0     123
                                              6 BANK1      2     2      0
                          _enc1_port
 ---------------------------------------------------------------------------------
 (2) _enc1_port                                            6     6      0      94
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delayms                                              6     4      2     286
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Adaptive_base_pid                                   18    18      0   17326
                                             59 BANK1     18    18      0
                         _Update_PWM
                            ___aldiv
                           ___altoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1116
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4    1058
                                             37 BANK1     14    10      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    4613
                                             21 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     392
                                             16 BANK1      9     3      6
                           ___altoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2699
                                             37 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3745
                                              8 BANK1     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    2353
                                              8 BANK1      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2087
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     504
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (2) _Update_PWM                                           8     6      2     668
                                             51 BANK1      8     6      2
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Function                                        11    11      0    5211
                                             12 COMMON     2     2      0
                                             43 BANK0      9     9      0
                            _Display
                          i1___aldiv
                          i1___ftadd
                          i1___ftdiv
                          i1___ftmul
                          i1___fttol
                         i1___lwtoft
                 i1_disp_hex_window1
 ---------------------------------------------------------------------------------
 (5) i1_disp_hex_window1                                   3     1      2     719
                                              8 COMMON     3     1      2
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (6) i1___lwmod                                            6     2      4     315
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) i1___lwtoft                                           4     1      3     621
                                              8 COMMON     4     1      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (5) i1___fttol                                           14    10      4     278
                                             29 BANK0     14    10      4
                          i1___ftadd (ARG)
                          i1___ftmul (ARG)
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftmul                                           16    10      6     951
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftdiv                                           16    10      6     853
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftadd                                           13     7      6    1413
                                             16 BANK0     13     7      6
                          i1___ftmul (ARG)
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___ftpack                                           8     3      5     521
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) i1___aldiv                                           15     7      8     352
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) _Display                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adaptive_base_pid
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___aldiv
     ___altoft
       ___ftpack
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
       ___altoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftneg
     ___fttol
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
   _Delayms
   _PWM_init
   _SCANENCODER1
     _enc1_port
   _SCANENCODER2
     _enc2_port
   _Timer0_init
   _Update_PWM
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   _Wirespeed
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___fttol
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft
       ___ftpack
       ___wmul (ARG)
   ___ftmul
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___fttol
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___lwdiv
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
     ___wmul (ARG)
   ___wmul
   _capture_init
   _disp_hex_window1
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
   _disp_hex_window2
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
   _key_application
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _disp_hex_window2
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
   _portpin_init
   _send_status
     _Send_Byte
   _system_init
   _transmittops
     _Send_Byte
   _uart_init

 _ISR_Function (ROOT)
   _Display
   i1___aldiv
   i1___ftadd
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftpack (ARG)
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftdiv
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftmul
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___fttol
     i1___ftadd (ARG)
       i1___ftmul (ARG)
         i1___ftpack
         i1___lwtoft (ARG)
           i1___ftpack
       i1___ftpack (ARG)
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___lwtoft
     i1___ftpack
   i1_disp_hex_window1
     i1___lwdiv
     i1___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      3C      13       75.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      18      15       30.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1A1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              2A      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1A1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jun 12 14:39:12 2020

        Update_PWM@setwsduty 00D3                  _portbstatus 0064                  _updatedispf 01DD  
               ___altoft@exp 00AE                   __CFG_CP$ON 0000                            _i 0062  
                          pc 0002                   i1___ftpack 1BF3                ___altoft@sign 00AF  
  __end_of_Adaptive_base_pid 1800                  __CFG_CPD$ON 0000                   i1___lwtoft 18F4  
        ___wmul@multiplicand 00A2                 _portpin_init 1944          __end_of_system_init 18B0  
               ___ftadd@exp1 00B4                 ___ftadd@exp2 00B3                  __CFG_LVP$ON 0000  
               ___ftadd@sign 00B2                          l534 1764                          l622 0A08  
                        l722 07A0                          l635 0B49                          l477 19A6  
                        l638 0B36                          l727 07B8                          l663 0C40  
                        l680 0D3D                          l656 0BEA                          l673 0C93  
                        l770 189E                          l674 0CA3                          l684 0D6D  
                        l685 0D6E                          l669 0D67                          l686 0FA4  
                        l687 0DF8                          l679 0CF3                          l776 1C63  
                        l697 0F10                 i1___ftadd@f1 0030                          l698 0F34  
               i1___ftadd@f2 0033                          l948 1F08                          l893 1963  
                        _PR2 001B                  _transmitonf 015B                          _One 01AC  
                        _Two 01B0                          _iii 023C                          _ijk 0122  
                        _key 00EF                          _lmn 0124  __size_ofi1_disp_hex_window1 005C  
               i1___ftdiv@f1 0023                 i1___ftdiv@f2 0020                 i1___ftdiv@f3 002B  
               __CFG_BORV$LO 0000                          wreg 0009                 i1___ftmul@f1 0020  
               i1___ftmul@f2 0023                 i1___fttol@f1 003D              _key_application 06B5  
             i1___aldiv@sign 0021                 ___ftdiv@cntr 00CF                 ___ftdiv@sign 00D4  
                       l1060 1CFD                         l1054 1CE6                         l1083 09AE  
                       l4310 1D98                         l4216 19B7                         l4320 1DA5  
                       l4218 19C2                         l4330 1DB9                         l3610 07F0  
                       l3700 195D                         l4404 17A2                         l3604 07D8  
                       l3550 1CCD                         l4414 17C8                         l4238 1E16  
                       l4350 1DE6                         l4342 1DD4                         l3606 07E4  
                       l3614 07F9                         l3720 1F19                         l3560 1CF3  
                       l3552 1CD2                         l3544 1CBC                         l4408 17B8  
                       l4280 1E65                         l4272 1E53                         l4248 1E23  
                       l5400 0AD2                         l5312 0A16                         l3730 1F37  
                       l3802 097A                         l4418 17E5                         l4258 1E37  
                       l4354 1DEA                         l4610 076D                         l3548 1CC3  
                       l3820 09C0                         l3804 0984                         l4284 1E69  
                       l4356 1DEE                         l3580 1A34                         l4604 075D  
                       l3742 1F62                         l3558 1CEB                         l3814 09A0  
                       l3806 0989                         l4286 1E6D                         l4358 1DF3  
                       l3582 1A40                         l4630 07AB                         l4606 0768  
                       l4534 1C65                         l5502 0C21                         l5430 0B41  
                       l3728 1F29                         l3760 1AB3                         l3824 09D2  
                       l3816 09AA                         l3808 098D                         l3912 1331  
                       l4376 161E                         l3648 1BE7                         l4288 1E72  
                       l3592 1A5B                         l4608 0709                         l5440 0B66  
                       l5424 0B2B                         l5520 0C42                         l3746 1F70  
                       l3738 1F57                         l3762 1AC3                         l3834 09ED  
                       l3850 11D4                         l3906 131B                         l4394 1720  
                       l4378 1625                         l4650 07C7                         l4618 0791  
                       l4554 1C9C                         l4546 1C7B                         l5514 0C38  
                       l5418 0B00                         l3844 11BE                         l3940 1390  
                       l3924 136C                         l3588 1A52                         l4628 07A7  
                       l4580 06FF                         l5532 0C5F                         l5452 0B7D  
                       l5436 0B5A                         l5460 0B8C                         l3774 0937  
                       l3678 1B88                         l4662 13C7                         l4646 07BF  
                       l4558 1CA3                         l5622 0DC3                         l5542 0C84  
                       l5518 0C3E                         l3784 094D                         l3872 122E  
                       l3864 1215                         l3936 1388                         l3928 1374  
                       l4680 142D                         l4648 07C0                         l4576 06F5  
                       l5456 0B83                         l5392 0AC6                         l5376 0AA1  
                       l5368 0A93                         l3778 093E                         l4674 140B  
                       l4578 06F8                         l5554 0CB8                         l5562 0CCE  
                       l5482 0BDF                         l5458 0B85                         l3796 0967  
                       l3884 1A79                         l3964 1090                         l4668 13E9  
                       l4692 1486                         l5660 0EA3                         l5476 0BB4  
                       l5492 0C04                         l5716 0FF2                         l5388 0AB4  
                       l3990 10DB                         l3982 10C0                         l4686 144F  
                       l5654 0E9D                         l3888 1A8F                         l3992 10E4  
                       l3984 10CE                         l5656 0E9F                         l5488 0BF5  
                       l3994 10E7                         l5674 0F00                         l5498 0C15  
                       l5668 0EC8                         l5596 0D5A                         l5588 0D34  
                       l3998 10F5                         l5694 0FC9                         _LATB 010D  
                       u5005 1225                         u5015 122F                         u4305 1CC8  
                       u5115 1375                         u4325 1CE1                         u5125 137B  
                       u5205 1097                         u4405 1A37                         u4345 1CEE  
                       u4425 1A41                         u4505 07F1                         u5155 1391  
                       u5235 10C1                         u4435 1A4B                         u5165 1397  
                       u5085 133D                         u4445 1A53                         u4375 1D04  
                       u5095 134D                         u6063 1714                         u4625 1F2C  
                       u4705 1AB8                         u5265 10DC                         u6073 174A  
                       u4475 07DB                         u4645 1F38                         u4565 1964  
                       u6085 1799                         u8005 0BC7                         u4655 1F4C  
                       u4815 0968                         u4575 1969                         u6095 17AC  
                       u4495 07EA                         u4665 1F58                         u4905 09A1  
                       _PIR1 0011                         u4845 097B                         u8125 0C71  
                       u8135 0C7D                         u4875 098E                         u5755 19AC  
                       u8155 0C8E                         u4975 11E6                         u4985 11F6  
                       u8185 0CEC                         u4995 1216                         u7875 0B13  
                       _TMR0 0015                         _OneH 012D                         _OneL 012E  
               __CFG_WRT$OFF 0000                         _TwoH 012F                         _TwoL 0130  
               _transmittops 1C53                   _Actual_amp 01E3                         _old1 01BC  
                       _old2 01BE                         _new1 0054                         _new2 0056  
                       _main 0A05                 ___ftpack@arg 00A0                   _Actual_vtg 01E5  
               ___ftpack@exp 00A3                         _tans 0158                         _temp 0067  
               i1___lwtoft@c 0078                         fsr0h 0005                         fsr1h 0007  
                       fsr0l 0004                         indf0 0000                         indf1 0001  
                       fsr1l 0006                         btemp 007E                i1___ftdiv@exp 002E  
                       ltemp 007E                         start 04F8                         ttemp 007E  
                       wtemp 007E                __CFG_IESO$OFF 0000              __end_of_Delayms 19C7  
   disp_hex_window1@hex_data 00AE                __CFG_MCLRE$ON 0000                 ___ftmul@cntr 00C3  
            __end_of_Display 06B5                 ___ftmul@sign 00C4                i1___ftmul@exp 002A  
   disp_hex_window2@hex_data 00AE                 ___fttol@exp1 00D2                 ___fttol@lval 00CE  
              __CFG_PLLEN$ON 0000                 _torchstatus1 0159                 _torchstatus2 015A  
    i1___ftmul@f3_as_product 002B           enc2_port@portvalue 00A3              __end_of___aldiv 1F79  
                      ?_main 0070              __end_of___ftadd 0A05                __CFG_WDTE$OFF 0000  
            __end_of___ftdiv 1250              __end_of___ftneg 189C              __end_of___ftmul 13B8  
                      _T1CON 0018              __end_of___fttol 10FE              __end_of___lwdiv 1A62  
                      i1l421 0579                        i1l431 05CD                        i1l425 0595  
            __end_of___lwmod 0800                        i1l434 05E9                        i1l611 03F4  
                      i1l428 05B1                        i1l437 0605                        i1l613 0410  
                      i1l438 0623                        i1l550 003F                        i1l616 04CD  
                      i1l608 03E9                        i1l618 04D6                        i1l570 00F9  
                      i1l590 02FF                        i1l575 04F3                        i1l948 1E86  
                      _RCREG 0199                ?_SCANENCODER1 0070                ?_SCANENCODER2 0070  
                      _TMR1H 0017                        _TMR1L 0016                        _SPBRG 019B  
                      _PORTA 000C                        _PORTB 000D                        _PORTC 000E  
             i1___ftadd@exp1 003C               i1___ftadd@exp2 003B                        _TORCH 016C  
                      _TRISA 008C                        _TRISB 008D                        _TRISC 008E  
                      _TXREG 019A               i1___ftadd@sign 003A                        _TXSTA 019E  
                      _Count 012C                   _Hi_setppwm 022A               __CFG_FCMEN$OFF 0000  
               _wfstatusbyte 01DE           i1___lwmod@dividend 0072                        _TypeU 0069  
                      _delay 01B4                        _digit 005F         __end_of_capture_init 1011  
                      _pfreq 0162                ___ftpack@sign 00A4                        _txonf 01DC  
             __CFG_BOREN$OFF 0000   i1disp_hex_window1@hex_data 0078                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
             i1___ftdiv@cntr 002A               i1___ftdiv@sign 002F             __end_of_PWM_init 0819  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        status 0003  
         __size_ofi1___aldiv 0082                        wtemp0 007E                        wtemp1 0080  
                      wtemp2 0082                        wtemp3 0084                        wtemp4 0086  
                      wtemp5 0088                        wtemp6 007F           __size_ofi1___ftadd 00F6  
         __size_ofi1___ftdiv 00A9           __size_ofi1___ftmul 00B4           __size_ofi1___fttol 0087  
         __size_ofi1___lwdiv 0036           __size_ofi1___lwmod 002E               i1___ftpack@arg 0070  
             i1___ftpack@exp 0073              __initialization 04FA                  _system_init 18A6  
               __end_of_main 1000        _universal_error_latch 015D                  ?i1___ftpack 0070  
             i1___ftmul@cntr 002E               i1___ftmul@sign 002F   __size_of_Adaptive_base_pid 0373  
             __CFG_LPBOR$OFF 0000                  ?i1___lwtoft 0078               i1___fttol@exp1 004A  
             i1___fttol@lval 0046                       ??_main 00ED                ___fttol@sign1 00CD  
    __end_of_key_application 07D1               ??_SCANENCODER1 00A6               ??_SCANENCODER2 00A5  
                 _Lo_setppwm 022C             __end_of___altoft 1ADB                       i1S5794 1858  
                     _CCPR2H 0299                       _CCPR1L 0291                       _CCPR2L 0298  
                     _ANSELA 018C                       _ANSELB 018D             __end_of___ftpack 1D14  
               _adaptivepidf 0131                       i1l1060 1C3C                       i1l1054 1C25  
                     i1l1083 08B8                       i1l4010 1BFB                       i1l4014 1C02  
                     i1l4024 1C2A                       i1l4016 1C0C                       i1l4130 0632  
                     i1l4026 1C32                       i1l4018 1C11                       i1l4124 0620  
                     i1l5020 0083                       i1l4142 064B                       i1l4054 1A1B  
                     i1l4046 19FD                       i1l4070 19CD                       i1l5030 00A0  
                     i1l5014 0071                       i1l4152 0659                       i1l4136 063D  
                     i1l4128 0626                       i1l4048 1A09                       i1l4072 19D9  
                     i1l4080 19EE                       i1l5024 008C                       i1l5032 00A3  
                     i1l4058 1A24                       i1l5202 034E                       i1l4164 066A  
                     i1l4156 0661                       i1l4076 19E5                       i1l5300 04D4  
                     i1l5028 009E                       i1l4182 068E                       i1l5222 037F  
                     i1l5134 025F                       i1l5038 00AE                       i1l4192 06A0  
                     i1l4168 0672                       i1l5144 02C9                       i1l5072 0103  
                     i1l5056 00D9                       i1l5048 00BF                       i1l4186 0695  
                     i1l4194 06A2                       i1l4178 0687                       i1l5306 04E9  
                     i1l5234 03A8                       i1l5170 0305                       i1l5138 0265  
                     i1l5090 0147                       i1l5082 0123                       i1l5066 00F4  
                     i1l5074 010A                       i1l5252 03DA                       i1l5180 031A  
                     i1l5156 02E4                       i1l5148 02CF                       i1l5068 00FB  
                     i1l4198 06AA                       i1l5246 03BD                       i1l5158 02E6  
                     i1l5078 0117                       i1l4730 1EE0                       i1l5282 049D  
                     i1l5266 0484                       i1l5258 03F6                       i1l5194 032F  
                     i1l4716 1EA7                       i1l4708 1E97                       i1l4734 1EEE  
                     i1l4726 1ED5                       i1l4718 1EB5                       i1l4806 08F7  
                     i1l4750 0848                       i1l4822 112B                       i1l4816 1115  
                     i1l4746 0841                       i1l4780 0897                       i1l4756 0857  
                     i1l4844 1185                       i1l4836 116C                       i1l4908 1F92  
                     i1l4774 0884                       i1l4942 1FF7                       i1l4934 1FDD  
                     i1l4926 1FC2                       i1l4792 08CA                       i1l4776 088E  
                     i1l4768 0871                       i1l4880 12C0                       i1l4864 127D  
                     i1l4936 1FE6                       i1l4928 1FD0                       i1l4786 08AA  
                     i1l4778 0893                       i1l4858 1267                       i1l4938 1FE9  
                     i1l4796 08DC                       i1l4788 08B4                       i1l4892 12DC  
                     i1l4876 12B8                       i1l4980 003A                 ?_send_status 0070  
                     i1l4888 12D4                       i1l4984 0043                       i1l4996 0060  
           __end_of___lwtoft 192F                       u531_25 1C07                       u533_25 1C20  
                     u541_25 1A00                       u702_25 1FC3                       u550_25 19DF  
                  ??_Delayms 00A2                       u535_25 1C2D                       u543_25 1A0A  
                     u551_25 19E6                       u544_25 1A14                       u705_25 1FDE  
                     u545_25 1A1C                       u650_25 1EB6                       u538_25 1C43  
                     u651_25 1ECA                       u652_25 1ED6                       u548_25 19D0  
                     u732_25 0166                       u733_25 0183                       u670_25 0898  
                     u735_25 01FB                       u648_25 1EAA                       u664_25 0872  
                     u680_25 113D                       u673_25 08AB                       u681_25 114D  
                     u682_25 116D                       u667_25 0885                       u683_25 117C  
                     u691_25 12C1                       u755_25 0361                       u684_25 1186  
                     u692_25 12C7                       u765_25 0403                       u766_25 041D  
                     u695_25 12DD                       u767_25 043A                       u696_25 12E3  
                     u688_25 1289                       u768_25 0457                       u689_25 1299  
                     u699_25 1F99                    ??_Display 0070               __CFG_PWRTE$OFF 0000  
              ??_Timer0_init 00A0                       _TypeDP 006B                       ___ftge 1A62  
                     _Tx_ptr 01D2                    ??___aldiv 00A8           __size_of_Send_Byte 000A  
                     ___wmul 195A                    ??___ftadd 00AE               __CFG_STVREN$ON 0000  
                  ??___ftdiv 00CB                    ??___ftneg 00A3                    ??___ftmul 00BB  
                  ??___fttol 00C9                       _encod1 0060                       _encod2 0061  
                     _chksum 0134                    ??___lwdiv 00AA                    ??___lwmod 00A4  
                     _arrptr 0132                       _error4 01D5                       _error8 013D  
                     _erroru 0160                       _pcount 014B                       _pportb 0152  
                     _rxdata 0065            __end_ofi1___aldiv 1EF7        ___ftmul@f3_as_product 00C0  
          __end_ofi1___ftadd 090F            __end_ofi1___ftdiv 11A7            __end_ofi1___ftmul 1304  
          __end_ofi1___fttol 2000            __end_ofi1___lwdiv 1A2B            __end_ofi1___lwmod 19F5  
                 _Update_PWM 1978               _controller_out 0224           __size_of_Wirespeed 00D5  
        __size_ofi1___ftpack 0060               _wfspeedchangef 016F      __end_of__initialization 056E  
                 ___altoft@c 00A8          __size_ofi1___lwtoft 0013                   ___ftadd@f1 00A8  
                 ___ftadd@f2 00AB                   ___ftge@ff1 00B0                   ___ftge@ff2 00B3  
            i1___ftpack@sign 0074                   ___ftdiv@f1 00C8                   ___ftdiv@f2 00C5  
                 ___ftdiv@f3 00D0                   ___ftneg@f1 00A0    __size_of_disp_hex_window1 0064  
  __size_of_disp_hex_window2 0066                   ___ftmul@f1 00B5                   ___ftmul@f2 00B8  
                 ___fttol@f1 00C5           __size_of_enc1_port 005F           __size_of_enc2_port 005D  
             __pcstackCOMMON 0070            _ISR_Function$1129 007C                 __pidataBANK0 0003  
               __pidataBANK1 0002                 __pidataBANK2 18C8                 __pidataBANK3 18D4  
               __pidataBANK4 188F          __end_of_Timer0_init 18F4                   ___lwtoft@c 00A8  
           ?_key_application 0070        __size_of_capture_init 0011                    ?_PWM_init 0070  
             _OPTION_REGbits 0095              i1___fttol@sign1 0045            __end_of_Send_Byte 18A6  
          i1___aldiv@divisor 0070            i1___aldiv@counter 0020                   __pbssBANK0 0054  
                 __pbssBANK2 0120                   __pbssBANK3 01A0                   __pbssBANK4 0220  
                 __pbssBANK5 02A0              __CFG_VCAPEN$OFF 0000                ?_ISR_Function 0070  
       __end_of_SCANENCODER1 1E75         __end_of_SCANENCODER2 1DF6                   __pmaintext 0A05  
                    ?___ftge 00B0                      ?___wmul 00A0                 _capture_init 1000  
                 __pintentry 0004                    ?___altoft 00A8            __end_of_Wirespeed 148D  
                  ?___ftpack 00A0           SCANENCODER1@result 00A7   __end_ofi1_disp_hex_window1 1B37  
         SCANENCODER2@result 00A6                    ?___lwtoft 00A8                   ??_PWM_init 00A0  
         __size_of_uart_init 0013                  ?_Update_PWM 00D3                   _creepspeed 022E  
          __end_of_enc1_port 1BF3            __end_of_enc2_port 1B94                   _closeloopf 0135  
                 _displayonf 01ED                   _avgpperiod 015E                      _Delayms 199F  
             ??_ISR_Function 004B                      _Display 0572         __size_of_send_status 0015  
                 _cyclestrtf 013B                      _cEditfg 005E                  _Timer0_init 18E3  
               ?_system_init 0070                   _pidParams2 239A                      ___aldiv 1EF7  
            __size_of___ftge 003C                 ??i1___ftpack 0075                      ___ftadd 090F  
                    ___ftdiv 11A7                      ___ftneg 1893              __size_of___wmul 001E  
                    ___ftmul 1304                      ___fttol 1077                      ___lwdiv 1A2B  
                    ___lwmod 07D1                 ??i1___lwtoft 007B                   ??___altoft 00AC  
                 _read_enc1f 0153                   ??___ftpack 00A5                      _delinch 01B6  
                    _gapfreq 023A                      __ptext1 1907                      __ptext2 1C53  
                    __ptext3 18A6                      __ptext4 192F                      __ptext5 189C  
                    __ptext6 1944                      __ptext7 06B5                      __ptext8 1011  
                    __ptext9 1D14                   _maxfmspeed 01E7                   ??___lwtoft 00AB  
                    _diswin1 0164                      _inchcnt 006C                   _parclength 025A  
          i1___lwdiv@divisor 0070                    _T2CONbits 001C            i1___lwdiv@counter 0077  
                    _rec_arr 02A0                      _plus111 014C             ___aldiv@dividend 00A4  
                    _plus222 014D                      _onesecf 0063                   _minfmspeed 01E9  
                    _pperiod 01C0                      _prevkey 016E                      clrloop0 18BD  
       end_of_initialization 056E                   _minuspara1 0148                   _minuspara2 0149  
         __end_ofi1___ftpack 1C53                      init_ram 18B0                      initloop 18B1  
         __end_ofi1___lwtoft 1907                   _kpressread 0141            Update_PWM@Dutycnt 00D9  
          __end_of_uart_init 191A             _disp_hex_window1 1D14             _disp_hex_window2 1011  
     _Adaptive_base_pid$1736 00E4       _Adaptive_base_pid$1737 00E7       _Adaptive_base_pid$1738 00EA  
        __size_of_Update_PWM 0027                 _crater_speed 0139                    _RCSTAbits 019D  
           ___aldiv@quotient 00AB                 __pstringtext 1800                   _setcurrent 0128  
                  _PORTAbits 000C                  _Total_Count 01AE                    _PORTCbits 000E  
         Wirespeed@wireSpeed 00D3                   _pluscount1 014E                   _pluscount2 014F  
                _cWeldStopfg 01D3             __CFG_FOSC$INTOSC 0000                   _setvoltage 005A  
           _motor_continuefg 01D9                    _TRISAbits 008C                    _TRISCbits 008E  
              _cWf2t4tmodefg 0133                    i1___aldiv 1E75                    i1___ftadd 0819  
                  i1___ftdiv 10FE                    i1___ftmul 1250                    i1___fttol 1F79  
                  i1___lwdiv 19F5                    i1___lwmod 19C7                   _softstartf 01DA  
      __size_of_SCANENCODER1 007F        __size_of_SCANENCODER2 007E                  _CCP1CONbits 0293  
                ___ftdiv@exp 00D3                   _statusptr1 012A                  _CCP2CONbits 029A  
                  _TXSTAbits 019E                   _pstowfstru 0242              _newsetwirespeed 0058  
                ___ftmul@exp 00BF           enc1_port@portvalue 00A4               __end_of___ftge 1A9E  
             __end_of___wmul 1978                  _BAUDCTLbits 019F           _motor_acceleratefg 014A  
              ?_portpin_init 0070            i1___lwmod@divisor 0070            i1___lwmod@counter 0075  
       __end_of_ISR_Function 04F8                 _SCANENCODER1 1DF6                 _SCANENCODER2 1D78  
        start_initialization 04FA            __size_of_PWM_init 0019                   ?i1___aldiv 0070  
                 ?i1___ftadd 0030                   ?i1___ftdiv 0020                   ?i1___ftmul 0020  
                 ?i1___fttol 003D                   ?i1___lwdiv 0070                   ?i1___lwmod 0070  
              ?_transmittops 0070             _comm_error_count 0136                    _Send_Byte 189C  
              _rel_wirespeed 01CC         __end_of_lookup_table 1858                     ??___ftge 00B6  
                   ??___wmul 00A4                  __pdataBANK0 006F                  __pdataBANK1 00EF  
                __pdataBANK2 0164                  __pdataBANK3 01E0                  __pdataBANK4 0258  
       __size_of_system_init 000A               ??_portpin_init 00A0           i1___aldiv@dividend 0074  
            Update_PWM@Temp1 00D7                    _Tsampling 01E0              _scaled_baseval2 0126  
          __size_of___altoft 003D                 Delayms@delay 00A0            __size_of___ftpack 0061  
               ??_Update_PWM 00D5                  __pbssBIGRAM 239A                    _Wirespeed 13B8  
                  ___latbits 0002      key_application@keypress 00DD            __size_of___lwtoft 0015  
              __pcstackBANK0 0020                __pcstackBANK1 00A0     __size_of_key_application 011C  
         i1_disp_hex_window1 1ADB               ??_transmittops 00A1               Wirespeed@iFreq 00D5  
                  _enc1_port 1B94                     ?_Delayms 00A0                    _enc2_port 1B37  
         i1___aldiv@quotient 0022                   ?_Send_Byte 0070                     ?_Display 0070  
        ?i1_disp_hex_window1 0078             ___lwdiv@dividend 00A8                 ?_Timer0_init 0070  
         __end_of_Update_PWM 199F                     ?___aldiv 00A0                    _disp1term 0230  
                  _disp2term 0232                    _disp3term 0234                    _disp4term 0236  
                   ?___ftadd 00A8                     ?___ftdiv 00C5             _prevsetwirespeed 01C6  
                   ?___ftneg 00A0                     ?___ftmul 00B5                     ?___fttol 00C5  
                   ?___lwdiv 00A6                     ?___lwmod 00A0                    __pswtext1 1858  
                  _mili1_100 0142                    _mili2_100 0143         ??i1_disp_hex_window1 007A  
                 ?_Wirespeed 00D3                    _count_1ms 01B2                    _count_2ms 0138  
   __end_of_disp_hex_window1 1D78     __end_of_disp_hex_window2 1077                    _inchkeyon 01D8  
                ??i1___aldiv 0078                  ??i1___ftadd 0036                  ??i1___ftdiv 0026  
               _integral_old 01A9                 _integral_new 01A6                  ??i1___ftmul 0026  
                ??i1___fttol 0041             ___lwdiv@quotient 00AB                  ??i1___lwdiv 0074  
                ??i1___lwmod 0074                 _scalefactor2 01EB                    _error_old 01A3  
                  _error_new 01A0                ??_send_status 00A1                    _recchksum 0154  
                 ?_enc1_port 0070              ___aldiv@divisor 00A0                   ?_enc2_port 0070  
            ___aldiv@counter 00A9               ___wmul@product 00A4                     _LATAbits 010C  
                   _LATBbits 010D                     _LATCbits 010E                    _minoutmax 0227  
                  clear_ram0 18BC                    _recstatus 01CA                     _PIE1bits 0091  
                _creep_speed 013A                     _PIE2bits 0092                    _prevTORCH 016D  
                   _PIR1bits 0011                     _PIR2bits 0012              _universal_error 015C  
                _closeloop1f 01D4                    _uart_init 1907        __size_of_ISR_Function 04F4  
                  _pluspara1 0150                    _pluspara2 0151                    _togglepin 01EE  
          ___wmul@multiplier 00A0                     _PWM_init 0800                  _dispupdatef 006F  
                  _startptr1 0066                    _psstatusu 006D                    _wfstatusu 006E  
                _mahesh_test 0258                  _count_1msec 0137         __end_of_portpin_init 195A  
                   _Fltpfreq 0120                  ??_Send_Byte 00A0             __size_of_Delayms 0028  
               _ISR_Function 0004             __size_of_Display 0143            ??_key_application 00DB  
        __end_of_send_status 1944                  _firstpulse1 013E                  _firstpulse2 013F  
               _secondpulse1 0155                 _secondpulse2 0156                   ?_uart_init 0070  
           __size_of___aldiv 0082             __size_of___ftadd 00F6             __size_of___ftdiv 00A9  
           __size_of___ftneg 0009                     ___altoft 1A9E             __size_of___ftmul 00B4  
           __size_of___fttol 0087             __size_of___lwdiv 0037             __size_of___lwmod 002F  
       __end_of_transmittops 1CB3                     ___ftpack 1CB3                     ___lwtoft 191A  
                ??_Wirespeed 00D5                 _send_statusf 0157                  _error_code1 01D6  
                _error_code2 01D7                     _delinch1 01B8                 _lookup_table 1800  
            ___lwdiv@divisor 00A6              ___lwdiv@counter 00AD                     _gaschkfg 0140  
                   __ptext10 07D1                     __ptext11 1A2B                     __ptext20 0800  
                   __ptext12 1000                     __ptext21 199F                     __ptext13 13B8  
                   __ptext30 1A9E                     __ptext22 148D                     __ptext14 191A  
                   __ptext31 1CB3                     __ptext23 195A                     __ptext15 18E3  
                   __ptext40 1250                     __ptext32 1EF7                     __ptext24 1077  
                   __ptext16 1D78                     __ptext41 10FE                     __ptext33 1978  
                   __ptext25 1893                     __ptext17 1B37                     __ptext42 0819  
                   __ptext26 1304                     __ptext18 1DF6                     __ptext43 1BF3  
                   __ptext35 1ADB                     __ptext27 1A62                     __ptext19 1B94  
                   __ptext44 1E75                     __ptext36 19C7                     __ptext28 11A7  
                   __ptext45 0572                     __ptext37 19F5                     __ptext29 090F  
                   __ptext38 18F4                     __ptext39 1F79                     _enccount 013C  
                   _commandu 01DF                     _igascntr 01BA           Send_Byte@transbyte 00A0  
         i1___lwdiv@dividend 0072                  ??_enc1_port 00A0                  ??_enc2_port 00A0  
              __size_of_main 05FB                     _minus111 0144                     _minus222 0145  
                   _setpfreq 01CE                ?_capture_init 0070                     _weldmode 0068  
       __size_of_Timer0_init 0011                     _torchonf 01DB           i1___lwdiv@quotient 0075  
               _prevFltpfreq 0240                  _OSCTUNEbits 0098                   _INTCONbits 000B  
                _minuscount1 0146                  _minuscount2 0147                  _recpsstatus 01C8  
             _prevsetcurrent 01C2                  pic14e$flags 007E                   Delayms@xxx 00A2  
                 Delayms@yyy 00A4                     intlevel1 0000                  _send_status 192F  
           ___lwmod@dividend 00A2               _prevsetvoltage 01C4            __CFG_CLKOUTEN$OFF 0000  
                 _OSCCONbits 0099                  _openloopcnt 023E                ??_system_init 00A0  
             ??_capture_init 00A0                  ??_uart_init 00A0               _up_count_motor 01D0  
          _Adaptive_base_pid 148D                _disparclength 0238              ___lwmod@divisor 00A0  
         ?_Adaptive_base_pid 0070              ___lwmod@counter 00A5            ?_disp_hex_window1 00AE  
          ?_disp_hex_window2 00AE                 ___aldiv@sign 00AA        __size_of_portpin_init 0016  
         ??_disp_hex_window1 00B0           ??_disp_hex_window2 00B0                 _Total_Period 0220  
               _setwirespeed 005C          ??_Adaptive_base_pid 00DB        __size_of_transmittops 0060  
