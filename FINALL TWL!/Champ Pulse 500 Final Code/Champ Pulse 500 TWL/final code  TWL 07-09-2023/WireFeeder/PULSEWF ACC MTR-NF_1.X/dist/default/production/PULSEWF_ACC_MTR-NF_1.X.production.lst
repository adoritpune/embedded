

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Sep 04 17:28:00 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1788
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	idataBANK4,global,class=CODE,delta=2
     9                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	text42,local,class=CODE,merge=1,delta=2
    70                           	psect	text43,local,class=CODE,merge=1,delta=2
    71                           	psect	text44,local,class=CODE,merge=1,delta=2
    72                           	psect	text45,local,class=CODE,merge=1,delta=2
    73                           	psect	text46,local,class=CODE,merge=1,delta=2
    74                           	psect	swtext1,local,class=CONST,delta=2
    75                           	dabs	1,0xCA0,32
    76                           	dabs	1,0xC36,58
    77                           	dabs	1,0x2796,0,_pidParams2
    78                           	dabs	1,0x7E,2
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  0111                     	;# 
   132  0112                     	;# 
   133  0113                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011B                     	;# 
   142  011C                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011D                     	;# 
   146  011E                     	;# 
   147  011F                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018E                     	;# 
   151  0191                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  020E                     	;# 
   189  0210                     	;# 
   190  0211                     	;# 
   191  0211                     	;# 
   192  0212                     	;# 
   193  0212                     	;# 
   194  0213                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0214                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0216                     	;# 
   204  0217                     	;# 
   205  0217                     	;# 
   206  028C                     	;# 
   207  028D                     	;# 
   208  028E                     	;# 
   209  0291                     	;# 
   210  0291                     	;# 
   211  0292                     	;# 
   212  0293                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  030C                     	;# 
   218  030D                     	;# 
   219  030E                     	;# 
   220  0311                     	;# 
   221  0311                     	;# 
   222  0312                     	;# 
   223  0313                     	;# 
   224  038C                     	;# 
   225  038D                     	;# 
   226  038E                     	;# 
   227  0390                     	;# 
   228  0391                     	;# 
   229  0392                     	;# 
   230  0393                     	;# 
   231  0394                     	;# 
   232  0395                     	;# 
   233  0396                     	;# 
   234  0397                     	;# 
   235  0398                     	;# 
   236  0399                     	;# 
   237  039D                     	;# 
   238  039E                     	;# 
   239  039F                     	;# 
   240  0511                     	;# 
   241  0513                     	;# 
   242  051A                     	;# 
   243  0591                     	;# 
   244  0592                     	;# 
   245  0592                     	;# 
   246  0593                     	;# 
   247  0594                     	;# 
   248  0594                     	;# 
   249  0595                     	;# 
   250  0596                     	;# 
   251  0596                     	;# 
   252  0E91                     	;# 
   253  0E92                     	;# 
   254  0E93                     	;# 
   255  0E94                     	;# 
   256  0E95                     	;# 
   257  0E96                     	;# 
   258  0E97                     	;# 
   259  0E98                     	;# 
   260  0E99                     	;# 
   261  0E9A                     	;# 
   262  0E9B                     	;# 
   263  0E9C                     	;# 
   264  0E9D                     	;# 
   265  0E9E                     	;# 
   266  0E9F                     	;# 
   267  0EA0                     	;# 
   268  0EA1                     	;# 
   269  0EA1                     	;# 
   270  0EA2                     	;# 
   271  0EA3                     	;# 
   272  0EA3                     	;# 
   273  0EA4                     	;# 
   274  0EA5                     	;# 
   275  0EA5                     	;# 
   276  0EA6                     	;# 
   277  0EA7                     	;# 
   278  0EA7                     	;# 
   279  0EA8                     	;# 
   280  0EA9                     	;# 
   281  0EAA                     	;# 
   282  0EAB                     	;# 
   283  0EAC                     	;# 
   284  0EAD                     	;# 
   285  0EAE                     	;# 
   286  0EAF                     	;# 
   287  0EB1                     	;# 
   288  0EB2                     	;# 
   289  0EB3                     	;# 
   290  0EB4                     	;# 
   291  0EB5                     	;# 
   292  0EB6                     	;# 
   293  0EB7                     	;# 
   294  0EB8                     	;# 
   295  0EB9                     	;# 
   296  0EBA                     	;# 
   297  0EBB                     	;# 
   298  0EBC                     	;# 
   299  0EBD                     	;# 
   300  0EBE                     	;# 
   301  0EBF                     	;# 
   302  0EC0                     	;# 
   303  0EC1                     	;# 
   304  0EC1                     	;# 
   305  0EC2                     	;# 
   306  0EC3                     	;# 
   307  0EC3                     	;# 
   308  0EC4                     	;# 
   309  0EC5                     	;# 
   310  0EC5                     	;# 
   311  0EC6                     	;# 
   312  0EC7                     	;# 
   313  0EC7                     	;# 
   314  0EC8                     	;# 
   315  0EC9                     	;# 
   316  0ECA                     	;# 
   317  0ECB                     	;# 
   318  0ECC                     	;# 
   319  0ECD                     	;# 
   320  0ECE                     	;# 
   321  0ECF                     	;# 
   322  0ED1                     	;# 
   323  0ED2                     	;# 
   324  0ED3                     	;# 
   325  0ED4                     	;# 
   326  0ED5                     	;# 
   327  0ED6                     	;# 
   328  0ED7                     	;# 
   329  0ED8                     	;# 
   330  0ED9                     	;# 
   331  0EDA                     	;# 
   332  0EDB                     	;# 
   333  0EDC                     	;# 
   334  0EDD                     	;# 
   335  0EDE                     	;# 
   336  0EDF                     	;# 
   337  0EE0                     	;# 
   338  0EE1                     	;# 
   339  0EE1                     	;# 
   340  0EE2                     	;# 
   341  0EE3                     	;# 
   342  0EE3                     	;# 
   343  0EE4                     	;# 
   344  0EE5                     	;# 
   345  0EE5                     	;# 
   346  0EE6                     	;# 
   347  0EE7                     	;# 
   348  0EE7                     	;# 
   349  0EE8                     	;# 
   350  0EE9                     	;# 
   351  0EEA                     	;# 
   352  0EEB                     	;# 
   353  0EEC                     	;# 
   354  0EED                     	;# 
   355  0EEE                     	;# 
   356  0EEF                     	;# 
   357  0F11                     	;# 
   358  0F12                     	;# 
   359  0F13                     	;# 
   360  0F14                     	;# 
   361  0F15                     	;# 
   362  0F16                     	;# 
   363  0F17                     	;# 
   364  0F18                     	;# 
   365  0F19                     	;# 
   366  0F1A                     	;# 
   367  0F1B                     	;# 
   368  0F1C                     	;# 
   369  0F1D                     	;# 
   370  0F1E                     	;# 
   371  0F1F                     	;# 
   372  0F20                     	;# 
   373  0F21                     	;# 
   374  0F21                     	;# 
   375  0F22                     	;# 
   376  0F23                     	;# 
   377  0F23                     	;# 
   378  0F24                     	;# 
   379  0F25                     	;# 
   380  0F25                     	;# 
   381  0F26                     	;# 
   382  0F27                     	;# 
   383  0F27                     	;# 
   384  0F28                     	;# 
   385  0F29                     	;# 
   386  0F2A                     	;# 
   387  0F2B                     	;# 
   388  0F2C                     	;# 
   389  0F2D                     	;# 
   390  0F2E                     	;# 
   391  0F2F                     	;# 
   392  0FE4                     	;# 
   393  0FE5                     	;# 
   394  0FE6                     	;# 
   395  0FE7                     	;# 
   396  0FE8                     	;# 
   397  0FE9                     	;# 
   398  0FEA                     	;# 
   399  0FEB                     	;# 
   400  0FED                     	;# 
   401  0FEE                     	;# 
   402  0FEF                     	;_pidParams2
   403                           
   404                           	psect	idataBANK0
   405  0002                     __pidataBANK0:	
   406                           
   407                           ;initializer for _TORCH
   408  0002  3458               	retlw	88
   409                           
   410                           ;initializer for _dispupdatef
   411  0003  3401               	retlw	1
   412                           
   413                           	psect	idataBANK1
   414  1000                     __pidataBANK1:	
   415                           
   416                           ;initializer for _key
   417  1000  3458               	retlw	88
   418                           
   419                           	psect	idataBANK2
   420  07FD                     __pidataBANK2:	
   421                           
   422                           ;initializer for _prevTORCH
   423  07FD  34FF               	retlw	255
   424                           
   425                           ;initializer for _prevkey
   426  07FE  345A               	retlw	90
   427                           
   428                           ;initializer for _wfspeedchangef
   429  07FF  3401               	retlw	1
   430                           
   431                           	psect	idataBANK3
   432  1875                     __pidataBANK3:	
   433                           
   434                           ;initializer for _diswin1
   435  1875  3430               	retlw	48
   436  1876  3430               	retlw	48
   437  1877  3430               	retlw	48
   438  1878  3430               	retlw	48
   439  1879  3430               	retlw	48
   440  187A  3430               	retlw	48
   441  187B  3430               	retlw	48
   442  187C  3430               	retlw	48
   443                           
   444                           ;initializer for _MTR_VTG_CONSTANT
   445  187D  349A               	retlw	154
   446  187E  3459               	retlw	89
   447  187F  3440               	retlw	64
   448                           
   449                           ;initializer for _Tsampling
   450  1880  3400               	retlw	0
   451  1881  3480               	retlw	128
   452  1882  343F               	retlw	63
   453                           
   454                           ;initializer for _maxfmspeed
   455  1883  34EE               	retlw	238
   456  1884  3402               	retlw	2
   457                           
   458                           ;initializer for _minfmspeed
   459  1885  3432               	retlw	50
   460  1886  3400               	retlw	0
   461                           
   462                           ;initializer for _scalefactor2
   463  1887  3447               	retlw	71
   464  1888  3400               	retlw	0
   465                           
   466                           ;initializer for _displayonf
   467  1889  3401               	retlw	1
   468                           
   469                           ;initializer for _togglepin
   470  188A  3401               	retlw	1
   471                           
   472                           	psect	idataBANK4
   473  27C3                     __pidataBANK4:	
   474                           
   475                           ;initializer for _Actual_amp
   476  27C3  34FF               	retlw	255
   477  27C4  34FF               	retlw	255
   478                           
   479                           ;initializer for _Actual_vtg
   480  27C5  34FF               	retlw	255
   481  27C6  34FF               	retlw	255
   482                           
   483                           ;initializer for _mahesh_test
   484  27C7  3432               	retlw	50
   485  27C8  3400               	retlw	0
   486                           
   487                           ;initializer for _parclength
   488  27C9  34FF               	retlw	255
   489  27CA  34FF               	retlw	255
   490                           
   491                           	psect	stringtext
   492  2000                     __pstringtext:	
   493  2000                     _lookup_table:	
   494  2000  343F               	retlw	63
   495  2001  3400               	retlw	0
   496  2002  3406               	retlw	6
   497  2003  3400               	retlw	0
   498  2004  345B               	retlw	91
   499  2005  3400               	retlw	0
   500  2006  344F               	retlw	79
   501  2007  3400               	retlw	0
   502  2008  3466               	retlw	102
   503  2009  3400               	retlw	0
   504  200A  346D               	retlw	109
   505  200B  3400               	retlw	0
   506  200C  347D               	retlw	125
   507  200D  3400               	retlw	0
   508  200E  3407               	retlw	7
   509  200F  3400               	retlw	0
   510  2010  347F               	retlw	127
   511  2011  3400               	retlw	0
   512  2012  346F               	retlw	111
   513  2013  3400               	retlw	0
   514  2014  3480               	retlw	128
   515  2015  3400               	retlw	0
   516  2016  3477               	retlw	119
   517  2017  3400               	retlw	0
   518  2018  347C               	retlw	124
   519  2019  3400               	retlw	0
   520  201A  3439               	retlw	57
   521  201B  3400               	retlw	0
   522  201C  345E               	retlw	94
   523  201D  3400               	retlw	0
   524  201E  3479               	retlw	121
   525  201F  3400               	retlw	0
   526  2020  3471               	retlw	113
   527  2021  3400               	retlw	0
   528  2022  343D               	retlw	61
   529  2023  3400               	retlw	0
   530  2024  3476               	retlw	118
   531  2025  3400               	retlw	0
   532  2026  3406               	retlw	6
   533  2027  3400               	retlw	0
   534  2028  341E               	retlw	30
   535  2029  3400               	retlw	0
   536  202A  3470               	retlw	112
   537  202B  3400               	retlw	0
   538  202C  3438               	retlw	56
   539  202D  3400               	retlw	0
   540  202E  3455               	retlw	85
   541  202F  3400               	retlw	0
   542  2030  3454               	retlw	84
   543  2031  3400               	retlw	0
   544  2032  343F               	retlw	63
   545  2033  3400               	retlw	0
   546  2034  3473               	retlw	115
   547  2035  3400               	retlw	0
   548  2036  3467               	retlw	103
   549  2037  3400               	retlw	0
   550  2038  3450               	retlw	80
   551  2039  3400               	retlw	0
   552  203A  346D               	retlw	109
   553  203B  3400               	retlw	0
   554  203C  3478               	retlw	120
   555  203D  3400               	retlw	0
   556  203E  341C               	retlw	28
   557  203F  3400               	retlw	0
   558  2040  343E               	retlw	62
   559  2041  3400               	retlw	0
   560  2042  346A               	retlw	106
   561  2043  3400               	retlw	0
   562  2044  3468               	retlw	104
   563  2045  3400               	retlw	0
   564  2046  346E               	retlw	110
   565  2047  3400               	retlw	0
   566  2048  3489               	retlw	137
   567  2049  3400               	retlw	0
   568  204A  3400               	retlw	0
   569  204B  3400               	retlw	0
   570  204C  3440               	retlw	64
   571  204D  3400               	retlw	0
   572  204E  34FF               	retlw	255
   573  204F  3400               	retlw	0
   574  2050  3400               	retlw	0
   575  2051  3400               	retlw	0
   576  2052  3400               	retlw	0
   577  2053  3400               	retlw	0
   578  2054  3400               	retlw	0
   579  2055  3400               	retlw	0
   580  2056  3400               	retlw	0
   581  2057  3400               	retlw	0
   582  2058                     __end_of_lookup_table:	
   583  2058                     _Displayarr:	
   584  2058  343F               	retlw	63
   585  2059  3400               	retlw	0
   586  205A  3406               	retlw	6
   587  205B  3400               	retlw	0
   588  205C  345B               	retlw	91
   589  205D  3400               	retlw	0
   590  205E  344F               	retlw	79
   591  205F  3400               	retlw	0
   592  2060  3466               	retlw	102
   593  2061  3400               	retlw	0
   594  2062  346D               	retlw	109
   595  2063  3400               	retlw	0
   596  2064  347D               	retlw	125
   597  2065  3400               	retlw	0
   598  2066  3407               	retlw	7
   599  2067  3400               	retlw	0
   600  2068  347F               	retlw	127
   601  2069  3400               	retlw	0
   602  206A  346F               	retlw	111
   603  206B  3400               	retlw	0
   604  206C  34FF               	retlw	255
   605  206D  3400               	retlw	0
   606  206E                     __end_of_Displayarr:	
   607  000B                     _INTCONbits	set	11
   608  0011                     _PIR1	set	17
   609  0011                     _PIR1bits	set	17
   610  0012                     _PIR2bits	set	18
   611  000C                     _PORTA	set	12
   612  000C                     _PORTAbits	set	12
   613  000D                     _PORTB	set	13
   614  000E                     _PORTC	set	14
   615  000E                     _PORTCbits	set	14
   616  001B                     _PR2	set	27
   617  0018                     _T1CON	set	24
   618  001C                     _T2CONbits	set	28
   619  0015                     _TMR0	set	21
   620  0017                     _TMR1H	set	23
   621  0016                     _TMR1L	set	22
   622  0095                     _OPTION_REGbits	set	149
   623  0099                     _OSCCONbits	set	153
   624  0098                     _OSCTUNEbits	set	152
   625  0091                     _PIE1bits	set	145
   626  0092                     _PIE2bits	set	146
   627  008C                     _TRISA	set	140
   628  008C                     _TRISAbits	set	140
   629  008D                     _TRISB	set	141
   630  008E                     _TRISC	set	142
   631  008E                     _TRISCbits	set	142
   632  010C                     _LATAbits	set	268
   633  010D                     _LATB	set	269
   634  010D                     _LATBbits	set	269
   635  010E                     _LATCbits	set	270
   636  018C                     _ANSELA	set	396
   637  018D                     _ANSELB	set	397
   638  019F                     _BAUDCTLbits	set	415
   639  0199                     _RCREG	set	409
   640  019D                     _RCSTAbits	set	413
   641  019B                     _SPBRG	set	411
   642  019A                     _TXREG	set	410
   643  019E                     _TXSTA	set	414
   644  019E                     _TXSTAbits	set	414
   645  0293                     _CCP1CONbits	set	659
   646  029A                     _CCP2CONbits	set	666
   647  0291                     _CCPR1L	set	657
   648  0299                     _CCPR2H	set	665
   649  0298                     _CCPR2L	set	664
   650                           
   651                           ; #config settings
   652  0000                     
   653                           	psect	cinit
   654  054C                     start_initialization:	
   655  054C                     __initialization:		;BIGRAM
   656                           
   657                           ; Clear objects allocated to BIGRAM
   658  054C  3096               	movlw	low (0+10134)
   659  054D  0084               	movwf	4
   660  054E  3027               	movlw	high (0+10134)
   661  054F  0085               	movwf	5
   662  0550  305A               	movlw	90
   663  0551  00FE               	movwf	btemp
   664  0552  3000               	movlw	0
   665  0553  00FF               	movwf	btemp+1
   666  0554  31A7  27F4  3185   	fcall	clear_ram0
   667                           
   668                           ; Clear objects allocated to BANK0
   669  0557  3056               	movlw	low __pbssBANK0
   670  0558  0084               	movwf	4
   671  0559  3000               	movlw	high __pbssBANK0
   672  055A  0085               	movwf	5
   673  055B  3018               	movlw	24
   674  055C  00FE               	movwf	btemp
   675  055D  3000               	movlw	0
   676  055E  00FF               	movwf	btemp+1
   677  055F  31A7  27F4  3185   	fcall	clear_ram0
   678                           
   679                           ; Clear objects allocated to BANK2
   680  0562  3020               	movlw	low __pbssBANK2
   681  0563  0084               	movwf	4
   682  0564  3001               	movlw	high __pbssBANK2
   683  0565  0085               	movwf	5
   684  0566  304D               	movlw	77
   685  0567  00FE               	movwf	btemp
   686  0568  3000               	movlw	0
   687  0569  00FF               	movwf	btemp+1
   688  056A  31A7  27F4  3185   	fcall	clear_ram0
   689                           
   690                           ; Clear objects allocated to BANK3
   691  056D  30A0               	movlw	low __pbssBANK3
   692  056E  0084               	movwf	4
   693  056F  3001               	movlw	high __pbssBANK3
   694  0570  0085               	movwf	5
   695  0571  303A               	movlw	58
   696  0572  00FE               	movwf	btemp
   697  0573  3000               	movlw	0
   698  0574  00FF               	movwf	btemp+1
   699  0575  31A7  27F4  3185   	fcall	clear_ram0
   700                           
   701                           ; Clear objects allocated to BANK4
   702  0578  3020               	movlw	low __pbssBANK4
   703  0579  0084               	movwf	4
   704  057A  3002               	movlw	high __pbssBANK4
   705  057B  0085               	movwf	5
   706  057C  3045               	movlw	69
   707  057D  00FE               	movwf	btemp
   708  057E  3000               	movlw	0
   709  057F  00FF               	movwf	btemp+1
   710  0580  31A7  27F4  3185   	fcall	clear_ram0
   711                           
   712                           ; Clear objects allocated to BANK5
   713  0583  30A0               	movlw	low __pbssBANK5
   714  0584  0084               	movwf	4
   715  0585  3002               	movlw	high __pbssBANK5
   716  0586  0085               	movwf	5
   717  0587  3016               	movlw	22
   718  0588  00FE               	movwf	btemp
   719  0589  3000               	movlw	0
   720  058A  00FF               	movwf	btemp+1
   721  058B  31A7  27F4  3185   	fcall	clear_ram0
   722                           
   723                           ; Clear objects allocated to BANK6
   724  058E  3020               	movlw	low __pbssBANK6
   725  058F  0084               	movwf	4
   726  0590  3003               	movlw	high __pbssBANK6
   727  0591  0085               	movwf	5
   728  0592  3049               	movlw	73
   729  0593  00FE               	movwf	btemp
   730  0594  3000               	movlw	0
   731  0595  00FF               	movwf	btemp+1
   732  0596  31A7  27F4  3185   	fcall	clear_ram0
   733                           
   734                           ; Initialize objects allocated to BANK0
   735  0599  3180  2002  3185   	fcall	__pidataBANK0	;fetch initializer
   736  059C  00EE               	movwf	__pdataBANK0& (0+127)
   737  059D  3180  2003  3185   	fcall	__pidataBANK0+1	;fetch initializer
   738  05A0  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   739                           
   740                           ; Initialize objects allocated to BANK1
   741  05A1  0021               	movlb	1	; select bank1
   742  05A2  3190  2000  3185   	fcall	__pidataBANK1	;fetch initializer
   743  05A5  00EF               	movwf	__pdataBANK1& (0+127)
   744                           
   745                           ; Initialize objects allocated to BANK2
   746  05A6  0022               	movlb	2	; select bank2
   747  05A7  3187  27FD  3185   	fcall	__pidataBANK2	;fetch initializer
   748  05AA  00ED               	movwf	__pdataBANK2& (0+127)
   749  05AB  3187  27FE  3185   	fcall	__pidataBANK2+1	;fetch initializer
   750  05AE  00EE               	movwf	(__pdataBANK2+1)& (0+127)
   751  05AF  3187  27FF  3185   	fcall	__pidataBANK2+2	;fetch initializer
   752  05B2  00EF               	movwf	(__pdataBANK2+2)& (0+127)
   753                           
   754                           ; Initialize objects allocated to BANK3
   755  05B3  3075               	movlw	low __pidataBANK3
   756  05B4  0084               	movwf	4
   757  05B5  3098               	movlw	(high __pidataBANK3)| (0+128)
   758  05B6  0085               	movwf	5
   759  05B7  30DA               	movlw	low __pdataBANK3
   760  05B8  0086               	movwf	6
   761  05B9  3001               	movlw	high __pdataBANK3
   762  05BA  0087               	movwf	7
   763  05BB  3000               	movlw	0
   764  05BC  00FF               	movwf	btemp+1
   765  05BD  3016               	movlw	22
   766  05BE  31A7  27E8  3185   	fcall	init_ram
   767                           
   768                           ; Initialize objects allocated to BANK4
   769  05C1  30C3               	movlw	low __pidataBANK4
   770  05C2  0084               	movwf	4
   771  05C3  30A7               	movlw	(high __pidataBANK4)| (0+128)
   772  05C4  0085               	movwf	5
   773  05C5  3065               	movlw	low __pdataBANK4
   774  05C6  0086               	movwf	6
   775  05C7  3002               	movlw	high __pdataBANK4
   776  05C8  0087               	movwf	7
   777  05C9  3000               	movlw	0
   778  05CA  00FF               	movwf	btemp+1
   779  05CB  3008               	movlw	8
   780  05CC  31A7  27E8         	fcall	init_ram
   781  05CE                     end_of_initialization:	
   782                           ;End of C runtime variable initialization code
   783                           
   784  05CE                     __end_of__initialization:	
   785  05CE  0020               	movlb	0
   786  05CF  3188  28E1         	ljmp	_main	;jump to C main() function
   787                           
   788                           	psect	bssBANK0
   789  0056                     __pbssBANK0:	
   790  0056                     _new1:	
   791  0056                     	ds	2
   792  0058                     _new2:	
   793  0058                     	ds	2
   794  005A                     _setvoltage:	
   795  005A                     	ds	2
   796  005C                     _setwirespeed:	
   797  005C                     	ds	2
   798  005E                     _cEditfg:	
   799  005E                     	ds	1
   800  005F                     _digit:	
   801  005F                     	ds	1
   802  0060                     _encod2:	
   803  0060                     	ds	1
   804  0061                     _portbstatus:	
   805  0061                     	ds	1
   806  0062                     _rxdata:	
   807  0062                     	ds	1
   808  0063                     _temp:	
   809  0063                     	ds	1
   810  0064                     _weldmode:	
   811  0064                     	ds	1
   812  0065                     _TypeU:	
   813  0065                     	ds	2
   814  0067                     _newsetwirespeed:	
   815  0067                     	ds	2
   816  0069                     _pfreq:	
   817  0069                     	ds	2
   818  006B                     _TypeDP:	
   819  006B                     	ds	1
   820  006C                     _psstatusu:	
   821  006C                     	ds	1
   822  006D                     _wfstatusu:	
   823  006D                     	ds	1
   824                           
   825                           	psect	dataBANK0
   826  006E                     __pdataBANK0:	
   827  006E                     _TORCH:	
   828  006E                     	ds	1
   829  006F                     _dispupdatef:	
   830  006F                     	ds	1
   831                           
   832                           	psect	dataBANK1
   833  00EF                     __pdataBANK1:	
   834  00EF                     _key:	
   835  00EF                     	ds	1
   836                           
   837                           	psect	bssBANK2
   838  0120                     __pbssBANK2:	
   839  0120                     _Fltpfreq:	
   840  0120                     	ds	2
   841  0122                     _ijk:	
   842  0122                     	ds	2
   843  0124                     _lmn:	
   844  0124                     	ds	2
   845  0126                     _prevsetwirespeed:	
   846  0126                     	ds	2
   847  0128                     _scaled_baseval2:	
   848  0128                     	ds	2
   849  012A                     _setcurrent:	
   850  012A                     	ds	2
   851  012C                     _statusptr1:	
   852  012C                     	ds	2
   853  012E                     _Count:	
   854  012E                     	ds	1
   855  012F                     _OneH:	
   856  012F                     	ds	1
   857  0130                     _OneL:	
   858  0130                     	ds	1
   859  0131                     _TwoH:	
   860  0131                     	ds	1
   861  0132                     _TwoL:	
   862  0132                     	ds	1
   863  0133                     _adaptivepidf:	
   864  0133                     	ds	1
   865  0134                     _arrptr:	
   866  0134                     	ds	1
   867  0135                     _cGasRlyClrfg:	
   868  0135                     	ds	1
   869  0136                     _cMtrOverLdDbfg:	
   870  0136                     	ds	1
   871  0137                     _cMtrOverLdfg:	
   872  0137                     	ds	1
   873  0138                     _cPowerOnErrSkipfg:	
   874  0138                     	ds	1
   875  0139                     _cRelSpeedSign:	
   876  0139                     	ds	1
   877  013A                     _cTorchPressfg:	
   878  013A                     	ds	1
   879  013B                     _cWf2t4tmodefg:	
   880  013B                     	ds	1
   881  013C                     _chksum:	
   882  013C                     	ds	1
   883  013D                     _closeloopf:	
   884  013D                     	ds	1
   885  013E                     _comm_error_count:	
   886  013E                     	ds	1
   887  013F                     _count_1msec:	
   888  013F                     	ds	1
   889  0140                     _count_2ms:	
   890  0140                     	ds	1
   891  0141                     _crater_speed:	
   892  0141                     	ds	1
   893  0142                     _creep_speed:	
   894  0142                     	ds	1
   895  0143                     _cyclestrtf:	
   896  0143                     	ds	1
   897  0144                     _enccount:	
   898  0144                     	ds	1
   899  0145                     _encod1:	
   900  0145                     	ds	1
   901  0146                     _error8:	
   902  0146                     	ds	1
   903  0147                     _firstpulse1:	
   904  0147                     	ds	1
   905  0148                     _firstpulse2:	
   906  0148                     	ds	1
   907  0149                     _i:	
   908  0149                     	ds	1
   909  014A                     _kpressread:	
   910  014A                     	ds	1
   911  014B                     _mili1_100:	
   912  014B                     	ds	1
   913  014C                     _mili2_100:	
   914  014C                     	ds	1
   915  014D                     _minus111:	
   916  014D                     	ds	1
   917  014E                     _minus222:	
   918  014E                     	ds	1
   919  014F                     _minuscount1:	
   920  014F                     	ds	1
   921  0150                     _minuscount2:	
   922  0150                     	ds	1
   923  0151                     _minuspara1:	
   924  0151                     	ds	1
   925  0152                     _minuspara2:	
   926  0152                     	ds	1
   927  0153                     _onesecf:	
   928  0153                     	ds	1
   929  0154                     _pcount:	
   930  0154                     	ds	1
   931  0155                     _plus111:	
   932  0155                     	ds	1
   933  0156                     _plus222:	
   934  0156                     	ds	1
   935  0157                     _pluscount1:	
   936  0157                     	ds	1
   937  0158                     _pluscount2:	
   938  0158                     	ds	1
   939  0159                     _pluspara1:	
   940  0159                     	ds	1
   941  015A                     _pluspara2:	
   942  015A                     	ds	1
   943  015B                     _pportb:	
   944  015B                     	ds	1
   945  015C                     _read_enc1f:	
   946  015C                     	ds	1
   947  015D                     _recchksum:	
   948  015D                     	ds	1
   949  015E                     _secondpulse1:	
   950  015E                     	ds	1
   951  015F                     _secondpulse2:	
   952  015F                     	ds	1
   953  0160                     _send_statusf:	
   954  0160                     	ds	1
   955  0161                     _startptr1:	
   956  0161                     	ds	1
   957  0162                     _tans:	
   958  0162                     	ds	1
   959  0163                     _torchstatus1:	
   960  0163                     	ds	1
   961  0164                     _torchstatus2:	
   962  0164                     	ds	1
   963  0165                     _transmitonf:	
   964  0165                     	ds	1
   965  0166                     _universal_error:	
   966  0166                     	ds	1
   967  0167                     _universal_error_latch:	
   968  0167                     	ds	1
   969  0168                     _avgpperiod:	
   970  0168                     	ds	2
   971  016A                     _erroru:	
   972  016A                     	ds	2
   973  016C                     _inchcnt:	
   974  016C                     	ds	1
   975                           
   976                           	psect	dataBANK2
   977  016D                     __pdataBANK2:	
   978  016D                     _prevTORCH:	
   979  016D                     	ds	1
   980  016E                     _prevkey:	
   981  016E                     	ds	1
   982  016F                     _wfspeedchangef:	
   983  016F                     	ds	1
   984                           
   985                           	psect	bssBANK3
   986  01A0                     __pbssBANK3:	
   987  01A0                     _error_new:	
   988  01A0                     	ds	3
   989  01A3                     _error_old:	
   990  01A3                     	ds	3
   991  01A6                     _integral_new:	
   992  01A6                     	ds	3
   993  01A9                     _integral_old:	
   994  01A9                     	ds	3
   995  01AC                     _One:	
   996  01AC                     	ds	2
   997  01AE                     _Total_Count:	
   998  01AE                     	ds	2
   999  01B0                     _Two:	
  1000  01B0                     	ds	2
  1001  01B2                     _count_1ms:	
  1002  01B2                     	ds	2
  1003  01B4                     _delinch:	
  1004  01B4                     	ds	2
  1005  01B6                     _delinch1:	
  1006  01B6                     	ds	2
  1007  01B8                     _iGasDbCnt:	
  1008  01B8                     	ds	2
  1009  01BA                     _old1:	
  1010  01BA                     	ds	2
  1011  01BC                     _old2:	
  1012  01BC                     	ds	2
  1013  01BE                     _pperiod:	
  1014  01BE                     	ds	2
  1015  01C0                     _prevsetcurrent:	
  1016  01C0                     	ds	2
  1017  01C2                     _prevsetvoltage:	
  1018  01C2                     	ds	2
  1019  01C4                     _recpsstatus:	
  1020  01C4                     	ds	2
  1021  01C6                     _recstatus:	
  1022  01C6                     	ds	2
  1023  01C8                     _rel_wirespeed:	
  1024  01C8                     	ds	2
  1025  01CA                     _Tx_ptr:	
  1026  01CA                     	ds	1
  1027  01CB                     _cTestfg:	
  1028  01CB                     	ds	1
  1029  01CC                     _capintervalf:	
  1030  01CC                     	ds	1
  1031  01CD                     _closeloop1f:	
  1032  01CD                     	ds	1
  1033  01CE                     _count_pid:	
  1034  01CE                     	ds	1
  1035  01CF                     _error4:	
  1036  01CF                     	ds	1
  1037  01D0                     _error_code1:	
  1038  01D0                     	ds	1
  1039  01D1                     _error_code2:	
  1040  01D1                     	ds	1
  1041  01D2                     _fixintervalf:	
  1042  01D2                     	ds	1
  1043  01D3                     _inchkeyon:	
  1044  01D3                     	ds	1
  1045  01D4                     _softstartf:	
  1046  01D4                     	ds	1
  1047  01D5                     _torchonf:	
  1048  01D5                     	ds	1
  1049  01D6                     _txonf:	
  1050  01D6                     	ds	1
  1051  01D7                     _updatedispf:	
  1052  01D7                     	ds	1
  1053  01D8                     _wfstatusbyte:	
  1054  01D8                     	ds	1
  1055  01D9                     _commandu:	
  1056  01D9                     	ds	1
  1057                           
  1058                           	psect	dataBANK3
  1059  01DA                     __pdataBANK3:	
  1060  01DA                     _diswin1:	
  1061  01DA                     	ds	8
  1062  01E2                     _MTR_VTG_CONSTANT:	
  1063  01E2                     	ds	3
  1064  01E5                     _Tsampling:	
  1065  01E5                     	ds	3
  1066  01E8                     _maxfmspeed:	
  1067  01E8                     	ds	2
  1068  01EA                     _minfmspeed:	
  1069  01EA                     	ds	2
  1070  01EC                     _scalefactor2:	
  1071  01EC                     	ds	2
  1072  01EE                     _displayonf:	
  1073  01EE                     	ds	1
  1074  01EF                     _togglepin:	
  1075  01EF                     	ds	1
  1076                           
  1077                           	psect	bssBANK4
  1078  0220                     __pbssBANK4:	
  1079  0220                     _Total_Period:	
  1080  0220                     	ds	4
  1081  0224                     _controller_out:	
  1082  0224                     	ds	3
  1083  0227                     _minoutmax:	
  1084  0227                     	ds	3
  1085  022A                     _Hi_setppwm:	
  1086  022A                     	ds	2
  1087  022C                     _Lo_setppwm:	
  1088  022C                     	ds	2
  1089  022E                     _cMtrOverLdDbCnt:	
  1090  022E                     	ds	2
  1091  0230                     _count_transms:	
  1092  0230                     	ds	2
  1093  0232                     _creepspeed:	
  1094  0232                     	ds	2
  1095  0234                     _delay:	
  1096  0234                     	ds	2
  1097  0236                     _disp1term:	
  1098  0236                     	ds	2
  1099  0238                     _disp2term:	
  1100  0238                     	ds	2
  1101  023A                     _disp3term:	
  1102  023A                     	ds	2
  1103  023C                     _disp4term:	
  1104  023C                     	ds	2
  1105  023E                     _disparclength:	
  1106  023E                     	ds	2
  1107  0240                     _gapfreq:	
  1108  0240                     	ds	2
  1109  0242                     _iPowerOnErrSkipCnt:	
  1110  0242                     	ds	2
  1111  0244                     _iTest:	
  1112  0244                     	ds	2
  1113  0246                     _iii:	
  1114  0246                     	ds	2
  1115  0248                     _openloopcnt:	
  1116  0248                     	ds	2
  1117  024A                     _prevFltpfreq:	
  1118  024A                     	ds	2
  1119  024C                     _setpfreq:	
  1120  024C                     	ds	2
  1121  024E                     _pstowfstru:	
  1122  024E                     	ds	23
  1123                           
  1124                           	psect	dataBANK4
  1125  0265                     __pdataBANK4:	
  1126  0265                     _Actual_amp:	
  1127  0265                     	ds	2
  1128  0267                     _Actual_vtg:	
  1129  0267                     	ds	2
  1130  0269                     _mahesh_test:	
  1131  0269                     	ds	2
  1132  026B                     _parclength:	
  1133  026B                     	ds	2
  1134                           
  1135                           	psect	bssBANK5
  1136  02A0                     __pbssBANK5:	
  1137  02A0                     _rec_arr:	
  1138  02A0                     	ds	22
  1139                           
  1140                           	psect	bssBANK6
  1141  0320                     __pbssBANK6:	
  1142  0320                     _PID_sParams:	
  1143  0320                     	ds	73
  1144                           
  1145                           	psect	clrtext
  1146  27F4                     clear_ram0:	
  1147                           ;	Called with FSR0 containing the base address, and
  1148                           ;	btemp/btemp+1 has the size to clear
  1149                           
  1150  27F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1151  27F5                     clrloop0:	
  1152  27F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1153  27F6  3101               	addfsr 0,1
  1154  27F7  3001               	movlw	1
  1155  27F8  02FE               	subwf	126,f
  1156  27F9  3000               	movlw	0
  1157  27FA  3BFF               	subwfb	127,f
  1158  27FB  087F               	movf	127,w
  1159  27FC  047E               	iorwf	126,w
  1160  27FD  1903               	btfsc	3,2
  1161  27FE  3400               	retlw	0	;all done for this memory range, return
  1162  27FF  2FF5               	goto	clrloop0	;have we reached the end yet?
  1163                           
  1164                           	psect	inittext
  1165  27E8                     init_ram:	
  1166  27E8  00FE               	movwf	126
  1167  27E9                     initloop:	
  1168  27E9  0012               	moviw fsr0++
  1169  27EA  001E               	movwi fsr1++
  1170  27EB  3001               	movlw	1
  1171  27EC  02FE               	subwf	126,f
  1172  27ED  3000               	movlw	0
  1173  27EE  3BFF               	subwfb	127,f
  1174  27EF  087F               	movf	127,w
  1175  27F0  047E               	iorwf	126,w
  1176  27F1  1903               	btfsc	3,2
  1177  27F2  3400               	retlw	0
  1178  27F3  2FE9               	goto	initloop
  1179                           
  1180                           	psect	cstackBANK1
  1181  00A0                     __pcstackBANK1:	
  1182  00A0                     ??_enc1_port:	
  1183  00A0                     ??_enc2_port:	
  1184                           ; 0 bytes @ 0x0
  1185                           
  1186  00A0                     ??_system_init:	
  1187                           ; 0 bytes @ 0x0
  1188                           
  1189  00A0                     ??_portpin_init:	
  1190                           ; 0 bytes @ 0x0
  1191                           
  1192  00A0                     ??_Timer0_init:	
  1193                           ; 0 bytes @ 0x0
  1194                           
  1195  00A0                     ??_PWM_init:	
  1196                           ; 0 bytes @ 0x0
  1197                           
  1198  00A0                     ??_capture_init:	
  1199                           ; 0 bytes @ 0x0
  1200                           
  1201  00A0                     ??_uart_init:	
  1202                           ; 0 bytes @ 0x0
  1203                           
  1204  00A0                     ?_disp_hex_window11:	
  1205                           ; 0 bytes @ 0x0
  1206                           
  1207  00A0                     ?_disp_hex_window22:	
  1208                           ; 0 bytes @ 0x0
  1209                           
  1210  00A0                     ?_Delayms:	
  1211                           ; 0 bytes @ 0x0
  1212                           
  1213  00A0                     ??_Send_Byte:	
  1214                           ; 0 bytes @ 0x0
  1215                           
  1216  00A0                     ?___wmul:	
  1217                           ; 0 bytes @ 0x0
  1218                           
  1219  00A0                     ?___lwdiv:	
  1220                           ; 2 bytes @ 0x0
  1221                           
  1222  00A0                     ?___lwmod:	
  1223                           ; 2 bytes @ 0x0
  1224                           
  1225  00A0                     ?___ftpack:	
  1226                           ; 2 bytes @ 0x0
  1227                           
  1228  00A0                     ?___ftneg:	
  1229                           ; 3 bytes @ 0x0
  1230                           
  1231  00A0                     ?___aldiv:	
  1232                           ; 3 bytes @ 0x0
  1233                           
  1234  00A0                     Send_Byte@transbyte:	
  1235                           ; 4 bytes @ 0x0
  1236                           
  1237  00A0                     disp_hex_window11@hex_data:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  00A0                     disp_hex_window22@hex_data:	
  1241                           ; 2 bytes @ 0x0
  1242                           
  1243  00A0                     Delayms@delay:	
  1244                           ; 2 bytes @ 0x0
  1245                           
  1246  00A0                     ___wmul@multiplier:	
  1247                           ; 2 bytes @ 0x0
  1248                           
  1249  00A0                     ___lwdiv@divisor:	
  1250                           ; 2 bytes @ 0x0
  1251                           
  1252  00A0                     ___lwmod@divisor:	
  1253                           ; 2 bytes @ 0x0
  1254                           
  1255  00A0                     ___ftpack@arg:	
  1256                           ; 2 bytes @ 0x0
  1257                           
  1258  00A0                     ___ftneg@f1:	
  1259                           ; 3 bytes @ 0x0
  1260                           
  1261  00A0                     ___aldiv@divisor:	
  1262                           ; 3 bytes @ 0x0
  1263                           
  1264                           
  1265                           ; 4 bytes @ 0x0
  1266  00A0                     	ds	1
  1267  00A1                     ??_send_status:	
  1268  00A1                     ??_transmittops:	
  1269                           ; 0 bytes @ 0x1
  1270                           
  1271                           
  1272                           ; 0 bytes @ 0x1
  1273  00A1                     	ds	1
  1274  00A2                     ??_disp_hex_window11:	
  1275  00A2                     ??_disp_hex_window22:	
  1276                           ; 0 bytes @ 0x2
  1277                           
  1278  00A2                     ??_Delayms:	
  1279                           ; 0 bytes @ 0x2
  1280                           
  1281  00A2                     Delayms@xxx:	
  1282                           ; 0 bytes @ 0x2
  1283                           
  1284  00A2                     ___wmul@multiplicand:	
  1285                           ; 2 bytes @ 0x2
  1286                           
  1287  00A2                     ___lwdiv@dividend:	
  1288                           ; 2 bytes @ 0x2
  1289                           
  1290  00A2                     ___lwmod@dividend:	
  1291                           ; 2 bytes @ 0x2
  1292                           
  1293                           
  1294                           ; 2 bytes @ 0x2
  1295  00A2                     	ds	1
  1296  00A3                     ??___ftneg:	
  1297  00A3                     ___ftpack@exp:	
  1298                           ; 0 bytes @ 0x3
  1299                           
  1300  00A3                     enc2_port@portvalue:	
  1301                           ; 1 bytes @ 0x3
  1302                           
  1303                           
  1304                           ; 2 bytes @ 0x3
  1305  00A3                     	ds	1
  1306  00A4                     ??___wmul:	
  1307  00A4                     ??___lwdiv:	
  1308                           ; 0 bytes @ 0x4
  1309                           
  1310  00A4                     ??___lwmod:	
  1311                           ; 0 bytes @ 0x4
  1312                           
  1313  00A4                     ___ftpack@sign:	
  1314                           ; 0 bytes @ 0x4
  1315                           
  1316  00A4                     Delayms@yyy:	
  1317                           ; 1 bytes @ 0x4
  1318                           
  1319  00A4                     enc1_port@portvalue:	
  1320                           ; 2 bytes @ 0x4
  1321                           
  1322  00A4                     ___wmul@product:	
  1323                           ; 2 bytes @ 0x4
  1324                           
  1325  00A4                     ___aldiv@dividend:	
  1326                           ; 2 bytes @ 0x4
  1327                           
  1328                           
  1329                           ; 4 bytes @ 0x4
  1330  00A4                     	ds	1
  1331  00A5                     ??___ftpack:	
  1332  00A5                     ??_SCANENCODER2:	
  1333                           ; 0 bytes @ 0x5
  1334                           
  1335  00A5                     ___lwmod@counter:	
  1336                           ; 0 bytes @ 0x5
  1337                           
  1338  00A5                     ___lwdiv@quotient:	
  1339                           ; 1 bytes @ 0x5
  1340                           
  1341                           
  1342                           ; 2 bytes @ 0x5
  1343  00A5                     	ds	1
  1344  00A6                     ??_SCANENCODER1:	
  1345  00A6                     SCANENCODER2@result:	
  1346                           ; 0 bytes @ 0x6
  1347                           
  1348                           
  1349                           ; 1 bytes @ 0x6
  1350  00A6                     	ds	1
  1351  00A7                     SCANENCODER1@result:	
  1352  00A7                     ___lwdiv@counter:	
  1353                           ; 1 bytes @ 0x7
  1354                           
  1355                           
  1356                           ; 1 bytes @ 0x7
  1357  00A7                     	ds	1
  1358  00A8                     ?_disp_hex_window1:	
  1359  00A8                     ?_disp_hex_window2:	
  1360                           ; 0 bytes @ 0x8
  1361                           
  1362  00A8                     ??___aldiv:	
  1363                           ; 0 bytes @ 0x8
  1364                           
  1365  00A8                     ?___altoft:	
  1366                           ; 0 bytes @ 0x8
  1367                           
  1368  00A8                     ?___ftadd:	
  1369                           ; 3 bytes @ 0x8
  1370                           
  1371  00A8                     ?___lwtoft:	
  1372                           ; 3 bytes @ 0x8
  1373                           
  1374  00A8                     disp_hex_window1@hex_data:	
  1375                           ; 3 bytes @ 0x8
  1376                           
  1377  00A8                     disp_hex_window2@hex_data:	
  1378                           ; 2 bytes @ 0x8
  1379                           
  1380  00A8                     ___lwtoft@c:	
  1381                           ; 2 bytes @ 0x8
  1382                           
  1383  00A8                     ___ftadd@f1:	
  1384                           ; 2 bytes @ 0x8
  1385                           
  1386  00A8                     ___altoft@c:	
  1387                           ; 3 bytes @ 0x8
  1388                           
  1389                           
  1390                           ; 4 bytes @ 0x8
  1391  00A8                     	ds	1
  1392  00A9                     ___aldiv@counter:	
  1393                           
  1394                           ; 1 bytes @ 0x9
  1395  00A9                     	ds	1
  1396  00AA                     ??_disp_hex_window1:	
  1397  00AA                     ??_disp_hex_window2:	
  1398                           ; 0 bytes @ 0xA
  1399                           
  1400  00AA                     ___aldiv@sign:	
  1401                           ; 0 bytes @ 0xA
  1402                           
  1403                           
  1404                           ; 1 bytes @ 0xA
  1405  00AA                     	ds	1
  1406  00AB                     ??___lwtoft:	
  1407  00AB                     ___ftadd@f2:	
  1408                           ; 0 bytes @ 0xB
  1409                           
  1410  00AB                     ___aldiv@quotient:	
  1411                           ; 3 bytes @ 0xB
  1412                           
  1413                           
  1414                           ; 4 bytes @ 0xB
  1415  00AB                     	ds	1
  1416  00AC                     ??___altoft:	
  1417                           
  1418                           ; 0 bytes @ 0xC
  1419  00AC                     	ds	2
  1420  00AE                     ??___ftadd:	
  1421  00AE                     ___altoft@exp:	
  1422                           ; 0 bytes @ 0xE
  1423                           
  1424                           
  1425                           ; 1 bytes @ 0xE
  1426  00AE                     	ds	1
  1427  00AF                     ___altoft@sign:	
  1428                           
  1429                           ; 1 bytes @ 0xF
  1430  00AF                     	ds	1
  1431  00B0                     ?___ftge:	
  1432  00B0                     ___ftge@ff1:	
  1433                           ; 1 bit 
  1434                           
  1435                           
  1436                           ; 3 bytes @ 0x10
  1437  00B0                     	ds	2
  1438  00B2                     ___ftadd@sign:	
  1439                           
  1440                           ; 1 bytes @ 0x12
  1441  00B2                     	ds	1
  1442  00B3                     ___ftadd@exp2:	
  1443  00B3                     ___ftge@ff2:	
  1444                           ; 1 bytes @ 0x13
  1445                           
  1446                           
  1447                           ; 3 bytes @ 0x13
  1448  00B3                     	ds	1
  1449  00B4                     ___ftadd@exp1:	
  1450                           
  1451                           ; 1 bytes @ 0x14
  1452  00B4                     	ds	1
  1453  00B5                     ?___ftmul:	
  1454  00B5                     ___ftmul@f1:	
  1455                           ; 3 bytes @ 0x15
  1456                           
  1457                           
  1458                           ; 3 bytes @ 0x15
  1459  00B5                     	ds	1
  1460  00B6                     ??___ftge:	
  1461                           
  1462                           ; 0 bytes @ 0x16
  1463  00B6                     	ds	2
  1464  00B8                     ___ftmul@f2:	
  1465                           
  1466                           ; 3 bytes @ 0x18
  1467  00B8                     	ds	3
  1468  00BB                     ??___ftmul:	
  1469                           
  1470                           ; 0 bytes @ 0x1B
  1471  00BB                     	ds	4
  1472  00BF                     ___ftmul@exp:	
  1473                           
  1474                           ; 1 bytes @ 0x1F
  1475  00BF                     	ds	1
  1476  00C0                     ___ftmul@f3_as_product:	
  1477                           
  1478                           ; 3 bytes @ 0x20
  1479  00C0                     	ds	3
  1480  00C3                     ___ftmul@cntr:	
  1481                           
  1482                           ; 1 bytes @ 0x23
  1483  00C3                     	ds	1
  1484  00C4                     ___ftmul@sign:	
  1485                           
  1486                           ; 1 bytes @ 0x24
  1487  00C4                     	ds	1
  1488  00C5                     ?___ftdiv:	
  1489  00C5                     ?___fttol:	
  1490                           ; 3 bytes @ 0x25
  1491                           
  1492  00C5                     ___ftdiv@f2:	
  1493                           ; 4 bytes @ 0x25
  1494                           
  1495  00C5                     ___fttol@f1:	
  1496                           ; 3 bytes @ 0x25
  1497                           
  1498                           
  1499                           ; 3 bytes @ 0x25
  1500  00C5                     	ds	3
  1501  00C8                     ___ftdiv@f1:	
  1502                           
  1503                           ; 3 bytes @ 0x28
  1504  00C8                     	ds	1
  1505  00C9                     ??___fttol:	
  1506                           
  1507                           ; 0 bytes @ 0x29
  1508  00C9                     	ds	2
  1509  00CB                     ??___ftdiv:	
  1510                           
  1511                           ; 0 bytes @ 0x2B
  1512  00CB                     	ds	2
  1513  00CD                     ___fttol@sign1:	
  1514                           
  1515                           ; 1 bytes @ 0x2D
  1516  00CD                     	ds	1
  1517  00CE                     ___fttol@lval:	
  1518                           
  1519                           ; 4 bytes @ 0x2E
  1520  00CE                     	ds	1
  1521  00CF                     ___ftdiv@cntr:	
  1522                           
  1523                           ; 1 bytes @ 0x2F
  1524  00CF                     	ds	1
  1525  00D0                     ___ftdiv@f3:	
  1526                           
  1527                           ; 3 bytes @ 0x30
  1528  00D0                     	ds	2
  1529  00D2                     ___fttol@exp1:	
  1530                           
  1531                           ; 1 bytes @ 0x32
  1532  00D2                     	ds	1
  1533  00D3                     ?_Update_PWM:	
  1534  00D3                     ___ftdiv@exp:	
  1535                           ; 0 bytes @ 0x33
  1536                           
  1537  00D3                     Update_PWM@setwsduty:	
  1538                           ; 1 bytes @ 0x33
  1539                           
  1540                           
  1541                           ; 2 bytes @ 0x33
  1542  00D3                     	ds	1
  1543  00D4                     ___ftdiv@sign:	
  1544                           
  1545                           ; 1 bytes @ 0x34
  1546  00D4                     	ds	1
  1547  00D5                     ??_Update_PWM:	
  1548                           
  1549                           ; 0 bytes @ 0x35
  1550  00D5                     	ds	2
  1551  00D7                     Update_PWM@Temp1:	
  1552                           
  1553                           ; 2 bytes @ 0x37
  1554  00D7                     	ds	2
  1555  00D9                     Update_PWM@Dutycnt:	
  1556                           
  1557                           ; 2 bytes @ 0x39
  1558  00D9                     	ds	2
  1559  00DB                     ??_key_application:	
  1560  00DB                     ??_detect_display_error:	
  1561                           ; 0 bytes @ 0x3B
  1562                           
  1563  00DB                     ??_Adaptive_base_pid:	
  1564                           ; 0 bytes @ 0x3B
  1565                           
  1566                           
  1567                           ; 0 bytes @ 0x3B
  1568  00DB                     	ds	2
  1569  00DD                     key_application@keypress:	
  1570                           
  1571                           ; 1 bytes @ 0x3D
  1572  00DD                     	ds	7
  1573  00E4                     _Adaptive_base_pid$1788:	
  1574                           
  1575                           ; 3 bytes @ 0x44
  1576  00E4                     	ds	3
  1577  00E7                     _Adaptive_base_pid$1789:	
  1578                           
  1579                           ; 3 bytes @ 0x47
  1580  00E7                     	ds	3
  1581  00EA                     _Adaptive_base_pid$1790:	
  1582                           
  1583                           ; 3 bytes @ 0x4A
  1584  00EA                     	ds	3
  1585  00ED                     ??_main:	
  1586                           
  1587                           ; 0 bytes @ 0x4D
  1588  00ED                     	ds	2
  1589                           
  1590                           	psect	cstackCOMMON
  1591  0070                     __pcstackCOMMON:	
  1592  0070                     ?_system_init:	
  1593  0070                     ?_portpin_init:	
  1594                           ; 0 bytes @ 0x0
  1595                           
  1596  0070                     ?_Timer0_init:	
  1597                           ; 0 bytes @ 0x0
  1598                           
  1599  0070                     ?_PWM_init:	
  1600                           ; 0 bytes @ 0x0
  1601                           
  1602  0070                     ?_capture_init:	
  1603                           ; 0 bytes @ 0x0
  1604                           
  1605  0070                     ?_uart_init:	
  1606                           ; 0 bytes @ 0x0
  1607                           
  1608  0070                     ?_send_status:	
  1609                           ; 0 bytes @ 0x0
  1610                           
  1611  0070                     ?_transmittops:	
  1612                           ; 0 bytes @ 0x0
  1613                           
  1614  0070                     ?_key_application:	
  1615                           ; 0 bytes @ 0x0
  1616                           
  1617  0070                     ?_detect_display_error:	
  1618                           ; 0 bytes @ 0x0
  1619                           
  1620  0070                     ?_Display:	
  1621                           ; 0 bytes @ 0x0
  1622                           
  1623  0070                     ??_Display:	
  1624                           ; 0 bytes @ 0x0
  1625                           
  1626  0070                     ?_Adaptive_base_pid:	
  1627                           ; 0 bytes @ 0x0
  1628                           
  1629  0070                     ?_ISR_Function:	
  1630                           ; 0 bytes @ 0x0
  1631                           
  1632  0070                     ?_main:	
  1633                           ; 0 bytes @ 0x0
  1634                           
  1635  0070                     ?_Send_Byte:	
  1636                           ; 0 bytes @ 0x0
  1637                           
  1638  0070                     ?_enc1_port:	
  1639                           ; 0 bytes @ 0x0
  1640                           
  1641  0070                     ?_enc2_port:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644  0070                     ?_SCANENCODER1:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647  0070                     ?_SCANENCODER2:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650  0070                     ?i1___wmul:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653  0070                     ?i1___ftpack:	
  1654                           ; 2 bytes @ 0x0
  1655                           
  1656  0070                     ?i1___aldiv:	
  1657                           ; 3 bytes @ 0x0
  1658                           
  1659  0070                     i1___wmul@multiplier:	
  1660                           ; 4 bytes @ 0x0
  1661                           
  1662  0070                     i1___ftpack@arg:	
  1663                           ; 2 bytes @ 0x0
  1664                           
  1665  0070                     i1___aldiv@divisor:	
  1666                           ; 3 bytes @ 0x0
  1667                           
  1668                           
  1669                           ; 4 bytes @ 0x0
  1670  0070                     	ds	2
  1671  0072                     i1___wmul@multiplicand:	
  1672                           
  1673                           ; 2 bytes @ 0x2
  1674  0072                     	ds	1
  1675  0073                     i1___ftpack@exp:	
  1676                           
  1677                           ; 1 bytes @ 0x3
  1678  0073                     	ds	1
  1679  0074                     ??i1___wmul:	
  1680  0074                     i1___ftpack@sign:	
  1681                           ; 0 bytes @ 0x4
  1682                           
  1683  0074                     i1___wmul@product:	
  1684                           ; 1 bytes @ 0x4
  1685                           
  1686  0074                     i1___aldiv@dividend:	
  1687                           ; 2 bytes @ 0x4
  1688                           
  1689                           
  1690                           ; 4 bytes @ 0x4
  1691  0074                     	ds	1
  1692  0075                     ??i1___ftpack:	
  1693                           
  1694                           ; 0 bytes @ 0x5
  1695  0075                     	ds	1
  1696  0076                     ?i1_Update_PWM:	
  1697  0076                     i1Update_PWM@setwsduty:	
  1698                           ; 0 bytes @ 0x6
  1699                           
  1700                           
  1701                           ; 2 bytes @ 0x6
  1702  0076                     	ds	2
  1703  0078                     ??i1_Update_PWM:	
  1704  0078                     ??i1___aldiv:	
  1705                           ; 0 bytes @ 0x8
  1706                           
  1707  0078                     ?i1___lwtoft:	
  1708                           ; 0 bytes @ 0x8
  1709                           
  1710  0078                     i1___lwtoft@c:	
  1711                           ; 3 bytes @ 0x8
  1712                           
  1713                           
  1714                           ; 2 bytes @ 0x8
  1715  0078                     	ds	2
  1716  007A                     i1Update_PWM@Temp1:	
  1717                           
  1718                           ; 2 bytes @ 0xA
  1719  007A                     	ds	1
  1720  007B                     ??i1___lwtoft:	
  1721                           
  1722                           ; 0 bytes @ 0xB
  1723  007B                     	ds	1
  1724  007C                     i1Update_PWM@Dutycnt:	
  1725                           
  1726                           ; 2 bytes @ 0xC
  1727  007C                     	ds	2
  1728                           
  1729                           	psect	cstackBANK0
  1730  0020                     __pcstackBANK0:	
  1731  0020                     ?i1___ftdiv:	
  1732  0020                     ?i1___ftmul:	
  1733                           ; 3 bytes @ 0x0
  1734                           
  1735  0020                     i1___aldiv@counter:	
  1736                           ; 3 bytes @ 0x0
  1737                           
  1738  0020                     i1___ftdiv@f2:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741  0020                     i1___ftmul@f1:	
  1742                           ; 3 bytes @ 0x0
  1743                           
  1744                           
  1745                           ; 3 bytes @ 0x0
  1746  0020                     	ds	1
  1747  0021                     i1___aldiv@sign:	
  1748                           
  1749                           ; 1 bytes @ 0x1
  1750  0021                     	ds	1
  1751  0022                     i1___aldiv@quotient:	
  1752                           
  1753                           ; 4 bytes @ 0x2
  1754  0022                     	ds	1
  1755  0023                     i1___ftdiv@f1:	
  1756  0023                     i1___ftmul@f2:	
  1757                           ; 3 bytes @ 0x3
  1758                           
  1759                           
  1760                           ; 3 bytes @ 0x3
  1761  0023                     	ds	3
  1762  0026                     ??i1___ftdiv:	
  1763  0026                     ??i1___ftmul:	
  1764                           ; 0 bytes @ 0x6
  1765                           
  1766                           
  1767                           ; 0 bytes @ 0x6
  1768  0026                     	ds	4
  1769  002A                     i1___ftdiv@cntr:	
  1770  002A                     i1___ftmul@exp:	
  1771                           ; 1 bytes @ 0xA
  1772                           
  1773                           
  1774                           ; 1 bytes @ 0xA
  1775  002A                     	ds	1
  1776  002B                     i1___ftdiv@f3:	
  1777  002B                     i1___ftmul@f3_as_product:	
  1778                           ; 3 bytes @ 0xB
  1779                           
  1780                           
  1781                           ; 3 bytes @ 0xB
  1782  002B                     	ds	3
  1783  002E                     i1___ftdiv@exp:	
  1784  002E                     i1___ftmul@cntr:	
  1785                           ; 1 bytes @ 0xE
  1786                           
  1787                           
  1788                           ; 1 bytes @ 0xE
  1789  002E                     	ds	1
  1790  002F                     i1___ftdiv@sign:	
  1791  002F                     i1___ftmul@sign:	
  1792                           ; 1 bytes @ 0xF
  1793                           
  1794                           
  1795                           ; 1 bytes @ 0xF
  1796  002F                     	ds	1
  1797  0030                     ?i1___ftadd:	
  1798  0030                     i1___ftadd@f1:	
  1799                           ; 3 bytes @ 0x10
  1800                           
  1801                           
  1802                           ; 3 bytes @ 0x10
  1803  0030                     	ds	3
  1804  0033                     i1___ftadd@f2:	
  1805                           
  1806                           ; 3 bytes @ 0x13
  1807  0033                     	ds	3
  1808  0036                     ??i1___ftadd:	
  1809                           
  1810                           ; 0 bytes @ 0x16
  1811  0036                     	ds	4
  1812  003A                     i1___ftadd@sign:	
  1813                           
  1814                           ; 1 bytes @ 0x1A
  1815  003A                     	ds	1
  1816  003B                     i1___ftadd@exp2:	
  1817                           
  1818                           ; 1 bytes @ 0x1B
  1819  003B                     	ds	1
  1820  003C                     i1___ftadd@exp1:	
  1821                           
  1822                           ; 1 bytes @ 0x1C
  1823  003C                     	ds	1
  1824  003D                     ?i1___fttol:	
  1825  003D                     i1___fttol@f1:	
  1826                           ; 4 bytes @ 0x1D
  1827                           
  1828                           
  1829                           ; 3 bytes @ 0x1D
  1830  003D                     	ds	4
  1831  0041                     ??i1___fttol:	
  1832                           
  1833                           ; 0 bytes @ 0x21
  1834  0041                     	ds	4
  1835  0045                     i1___fttol@sign1:	
  1836                           
  1837                           ; 1 bytes @ 0x25
  1838  0045                     	ds	1
  1839  0046                     i1___fttol@lval:	
  1840                           
  1841                           ; 4 bytes @ 0x26
  1842  0046                     	ds	4
  1843  004A                     i1___fttol@exp1:	
  1844                           
  1845                           ; 1 bytes @ 0x2A
  1846  004A                     	ds	1
  1847  004B                     ??_ISR_Function:	
  1848                           
  1849                           ; 0 bytes @ 0x2B
  1850  004B                     	ds	9
  1851  0054                     _ISR_Function$1209:	
  1852                           
  1853                           ; 2 bytes @ 0x34
  1854  0054                     	ds	2
  1855                           
  1856                           	psect	maintext
  1857  08E1                     __pmaintext:	
  1858 ;;
  1859 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1860 ;;
  1861 ;; *************** function _main *****************
  1862 ;; Defined at:
  1863 ;;		line 526 in file "main.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;		None
  1868 ;; Return value:  Size  Location     Type
  1869 ;;		None               void
  1870 ;; Registers used:
  1871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : B1F/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1879 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1880 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1881 ;;Total ram usage:        2 bytes
  1882 ;; Hardware stack levels required when called:    6
  1883 ;; This function calls:
  1884 ;;		_Adaptive_base_pid
  1885 ;;		_Delayms
  1886 ;;		_PWM_init
  1887 ;;		_SCANENCODER1
  1888 ;;		_SCANENCODER2
  1889 ;;		_Timer0_init
  1890 ;;		_Update_PWM
  1891 ;;		___ftmul
  1892 ;;		___fttol
  1893 ;;		___lwtoft
  1894 ;;		___wmul
  1895 ;;		_capture_init
  1896 ;;		_detect_display_error
  1897 ;;		_disp_hex_window1
  1898 ;;		_disp_hex_window11
  1899 ;;		_disp_hex_window2
  1900 ;;		_disp_hex_window22
  1901 ;;		_key_application
  1902 ;;		_portpin_init
  1903 ;;		_send_status
  1904 ;;		_system_init
  1905 ;;		_transmittops
  1906 ;;		_uart_init
  1907 ;; This function is called by:
  1908 ;;		Startup code after reset
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _main
  1914  08E1                     _main:	
  1915                           
  1916                           ;main.c: 529: system_init();
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1920  08E1  31A7  27DE  3188   	fcall	_system_init
  1921  08E4                     l660:	
  1922  08E4  3013               	movlw	19
  1923  08E5  0024               	movlb	4	; select bank4
  1924  08E6  0235               	subwf	(_delay+1)^(0+512),w
  1925  08E7  3088               	movlw	136
  1926  08E8  1903               	skipnz
  1927  08E9  0234               	subwf	_delay^(0+512),w
  1928  08EA  1803               	btfsc	3,0
  1929  08EB  28F2               	goto	l5470
  1930  08EC  3001               	movlw	1
  1931  08ED  0024               	movlb	4	; select bank4
  1932  08EE  07B4               	addwf	_delay^(0+512),f
  1933  08EF  3000               	movlw	0
  1934  08F0  3DB5               	addwfc	(_delay+1)^(0+512),f
  1935  08F1  28E4               	goto	l660
  1936  08F2                     l5470:	
  1937                           
  1938                           ;main.c: 531: Delayms(1000);
  1939  08F2  30E8               	movlw	232
  1940  08F3  0021               	movlb	1	; select bank1
  1941  08F4  00A0               	movwf	Delayms@delay^(0+128)
  1942  08F5  3003               	movlw	3
  1943  08F6  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1944  08F7  3199  2100  3188   	fcall	_Delayms
  1945                           
  1946                           ;main.c: 532: portpin_init();
  1947  08FA  3198  205F  3188   	fcall	_portpin_init
  1948                           
  1949                           ;main.c: 533: Timer0_init();
  1950  08FD  3198  2000  3188   	fcall	_Timer0_init
  1951                           
  1952                           ;main.c: 534: PWM_init();
  1953  0900  3198  208B  3188   	fcall	_PWM_init
  1954                           
  1955                           ;main.c: 535: capture_init();
  1956  0903  3198  2011  3188   	fcall	_capture_init
  1957                           
  1958                           ;main.c: 536: uart_init();
  1959  0906  3190  2001  3188   	fcall	_uart_init
  1960                           
  1961                           ;main.c: 537: INTCONbits.GIE =1;
  1962  0909  178B               	bsf	11,7	;volatile
  1963                           
  1964                           ;main.c: 538: INTCONbits.PEIE =1;
  1965  090A  170B               	bsf	11,6	;volatile
  1966                           
  1967                           ;main.c: 541: PORTCbits.RC3=0;
  1968  090B  0020               	movlb	0	; select bank0
  1969  090C  118E               	bcf	14,3	;volatile
  1970                           
  1971                           ;main.c: 543: TRISAbits.TRISA0 = 0;
  1972  090D  0021               	movlb	1	; select bank1
  1973  090E  100C               	bcf	12,0	;volatile
  1974                           
  1975                           ;main.c: 544: cPowerOnErrSkipfg = 1;
  1976  090F  0022               	movlb	2	; select bank2
  1977  0910  01B8               	clrf	_cPowerOnErrSkipfg^(0+256)
  1978  0911  0AB8               	incf	_cPowerOnErrSkipfg^(0+256),f
  1979                           
  1980                           ;main.c: 545: iPowerOnErrSkipCnt = 2000;
  1981  0912  30D0               	movlw	208
  1982  0913  0024               	movlb	4	; select bank4
  1983  0914  00C2               	movwf	_iPowerOnErrSkipCnt^(0+512)
  1984  0915  3007               	movlw	7
  1985  0916  00C3               	movwf	(_iPowerOnErrSkipCnt^(0+512)+1)
  1986                           
  1987                           ;main.c: 547: diswin1[0]=0x0B;
  1988  0917  300B               	movlw	11
  1989  0918  0021               	movlb	1	; select bank1
  1990  0919  00ED               	movwf	??_main^(0+128)
  1991  091A  086D               	movf	??_main^(0+128),w
  1992  091B  0023               	movlb	3	; select bank3
  1993  091C  00DA               	movwf	_diswin1^(0+384)
  1994                           
  1995                           ;main.c: 548: diswin1[1]=0x0E;
  1996  091D  300E               	movlw	14
  1997  091E  0021               	movlb	1	; select bank1
  1998  091F  00ED               	movwf	??_main^(0+128)
  1999  0920  086D               	movf	??_main^(0+128),w
  2000  0921  0023               	movlb	3	; select bank3
  2001  0922  00DB               	movwf	(_diswin1^(0+384)+1)
  2002                           
  2003                           ;main.c: 549: diswin1[2]=0x1C;
  2004  0923  301C               	movlw	28
  2005  0924  0021               	movlb	1	; select bank1
  2006  0925  00ED               	movwf	??_main^(0+128)
  2007  0926  086D               	movf	??_main^(0+128),w
  2008  0927  0023               	movlb	3	; select bank3
  2009  0928  00DC               	movwf	(_diswin1^(0+384)+2)
  2010                           
  2011                           ;main.c: 550: diswin1[3]=0x1C;
  2012  0929  301C               	movlw	28
  2013  092A  0021               	movlb	1	; select bank1
  2014  092B  00ED               	movwf	??_main^(0+128)
  2015  092C  086D               	movf	??_main^(0+128),w
  2016  092D  0023               	movlb	3	; select bank3
  2017  092E  00DD               	movwf	(_diswin1^(0+384)+3)
  2018                           
  2019                           ;main.c: 551: diswin1[4]='2'-0x30;
  2020  092F  3002               	movlw	2
  2021  0930  0021               	movlb	1	; select bank1
  2022  0931  00ED               	movwf	??_main^(0+128)
  2023  0932  086D               	movf	??_main^(0+128),w
  2024  0933  0023               	movlb	3	; select bank3
  2025  0934  00DE               	movwf	(_diswin1^(0+384)+4)
  2026                           
  2027                           ;main.c: 552: diswin1[5]='5'-0x30;
  2028  0935  3005               	movlw	5
  2029  0936  0021               	movlb	1	; select bank1
  2030  0937  00ED               	movwf	??_main^(0+128)
  2031  0938  086D               	movf	??_main^(0+128),w
  2032  0939  0023               	movlb	3	; select bank3
  2033  093A  00DF               	movwf	(_diswin1^(0+384)+5)
  2034                           
  2035                           ;main.c: 553: TypeDP.TypeD.digitdp5=1;
  2036  093B  0020               	movlb	0	; select bank0
  2037  093C  166B               	bsf	_TypeDP,4
  2038                           
  2039                           ;main.c: 555: Delayms(2000);
  2040  093D  30D0               	movlw	208
  2041  093E  0021               	movlb	1	; select bank1
  2042  093F  00A0               	movwf	Delayms@delay^(0+128)
  2043  0940  3007               	movlw	7
  2044  0941  00A1               	movwf	(Delayms@delay^(0+128)+1)
  2045  0942  3199  2100  3188   	fcall	_Delayms
  2046                           
  2047                           ;main.c: 557: LATCbits.LATC0=0;
  2048  0945  0022               	movlb	2	; select bank2
  2049  0946  100E               	bcf	14,0	;volatile
  2050                           
  2051                           ;main.c: 558: TypeDP.TypeD.digitdp5=0;
  2052  0947  0020               	movlb	0	; select bank0
  2053  0948  126B               	bcf	_TypeDP,4
  2054                           
  2055                           ;main.c: 559: TypeU.LEDGROUP[0] =0x00;
  2056  0949  01E5               	clrf	_TypeU
  2057                           
  2058                           ;main.c: 560: TypeU.LEDGROUP[1] =0x00;
  2059  094A  01E6               	clrf	_TypeU+1
  2060                           
  2061                           ;main.c: 561: TypeU.TypeS.wirespeed =1;
  2062  094B  1465               	bsf	_TypeU,0
  2063                           
  2064                           ;main.c: 562: TypeU.TypeS.vtg =1;
  2065  094C  14E6               	bsf	_TypeU+1,1
  2066                           
  2067                           ;main.c: 563: TypeU.TypeS.twot =1;
  2068  094D  1665               	bsf	_TypeU,4
  2069                           
  2070                           ;main.c: 564: TypeDP.DPGROUP[0] =0x00;
  2071  094E  01EB               	clrf	_TypeDP
  2072                           
  2073                           ;main.c: 565: TypeDP.TypeD.digitdp2 =1;
  2074  094F  14EB               	bsf	_TypeDP,1
  2075                           
  2076                           ;main.c: 566: TypeDP.TypeD.digitdp5 =1;
  2077  0950  166B               	bsf	_TypeDP,4
  2078                           
  2079                           ;main.c: 568: psstatusu.psstatusbyte[0]=0x00;
  2080  0951  01EC               	clrf	_psstatusu
  2081                           
  2082                           ;main.c: 571: setcurrent=0;
  2083  0952  0022               	movlb	2	; select bank2
  2084  0953  01AA               	clrf	_setcurrent^(0+256)
  2085  0954  01AB               	clrf	(_setcurrent+1)^(0+256)
  2086                           
  2087                           ;main.c: 572: setvoltage=0;
  2088  0955  0020               	movlb	0	; select bank0
  2089  0956  01DA               	clrf	_setvoltage
  2090  0957  01DB               	clrf	_setvoltage+1
  2091                           
  2092                           ;main.c: 573: disp_hex_window1(setcurrent);
  2093  0958  0022               	movlb	2	; select bank2
  2094  0959  082B               	movf	(_setcurrent+1)^(0+256),w
  2095  095A  0021               	movlb	1	; select bank1
  2096  095B  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  2097  095C  0022               	movlb	2	; select bank2
  2098  095D  082A               	movf	_setcurrent^(0+256),w
  2099  095E  0021               	movlb	1	; select bank1
  2100  095F  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  2101  0960  3199  21CE  3188   	fcall	_disp_hex_window1
  2102                           
  2103                           ;main.c: 574: disp_hex_window2(setvoltage);
  2104  0963  0020               	movlb	0	; select bank0
  2105  0964  085B               	movf	_setvoltage+1,w
  2106  0965  0021               	movlb	1	; select bank1
  2107  0966  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  2108  0967  0020               	movlb	0	; select bank0
  2109  0968  085A               	movf	_setvoltage,w
  2110  0969  0021               	movlb	1	; select bank1
  2111  096A  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  2112  096B  319A  227B  3188   	fcall	_disp_hex_window2
  2113                           
  2114                           ;main.c: 575: TXSTAbits.TXEN =1;
  2115  096E  0023               	movlb	3	; select bank3
  2116  096F  169E               	bsf	30,5	;volatile
  2117                           
  2118                           ;main.c: 576: RCSTAbits.CREN =1;
  2119  0970  161D               	bsf	29,4	;volatile
  2120                           
  2121                           ;main.c: 577: PIE1bits.RCIE =1;
  2122  0971  0021               	movlb	1	; select bank1
  2123  0972  1691               	bsf	17,5	;volatile
  2124                           
  2125                           ;main.c: 578: INTCONbits.GIE =1;
  2126  0973  178B               	bsf	11,7	;volatile
  2127                           
  2128                           ;main.c: 579: INTCONbits.PEIE =1;
  2129  0974  170B               	bsf	11,6	;volatile
  2130                           
  2131                           ;main.c: 580: Delayms(5000);
  2132  0975  3088               	movlw	136
  2133  0976  00A0               	movwf	Delayms@delay^(0+128)
  2134  0977  3013               	movlw	19
  2135  0978  00A1               	movwf	(Delayms@delay^(0+128)+1)
  2136  0979  3199  2100  3188   	fcall	_Delayms
  2137                           
  2138                           ;main.c: 581: PIE1bits.TXIE =0;
  2139  097C  0021               	movlb	1	; select bank1
  2140  097D  1211               	bcf	17,4	;volatile
  2141  097E                     l5544:	
  2142                           ;main.c: 582: while(1)
  2143                           
  2144                           
  2145                           ;main.c: 583: {
  2146                           ;main.c: 585: if(cMtrOverLdfg == 1)
  2147  097E  0022               	movlb	2	; select bank2
  2148  097F  0337               	decf	_cMtrOverLdfg^(0+256),w
  2149  0980  1D03               	btfss	3,2
  2150  0981  2998               	goto	l5548
  2151                           
  2152                           ;main.c: 586: {
  2153                           ;main.c: 587: Update_PWM(setwirespeed*0);
  2154  0982  0020               	movlb	0	; select bank0
  2155  0983  085D               	movf	_setwirespeed+1,w
  2156  0984  0021               	movlb	1	; select bank1
  2157  0985  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  2158  0986  0020               	movlb	0	; select bank0
  2159  0987  085C               	movf	_setwirespeed,w
  2160  0988  0021               	movlb	1	; select bank1
  2161  0989  00A0               	movwf	___wmul@multiplier^(0+128)
  2162  098A  3000               	movlw	0
  2163  098B  00A2               	movwf	___wmul@multiplicand^(0+128)
  2164  098C  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  2165  098D  3198  20BF  3188   	fcall	___wmul
  2166  0990  0021               	movlb	1	; select bank1
  2167  0991  0821               	movf	(?___wmul+1)^(0+128),w
  2168  0992  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  2169  0993  0820               	movf	?___wmul^(0+128),w
  2170  0994  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  2171  0995  3199  2128  3188   	fcall	_Update_PWM
  2172  0998                     l5548:	
  2173                           
  2174                           ;main.c: 588: }
  2175                           ;main.c: 590: if(send_statusf==1 && onesecf==0)
  2176  0998  0022               	movlb	2	; select bank2
  2177  0999  0360               	decf	_send_statusf^(0+256),w
  2178  099A  1D03               	btfss	3,2
  2179  099B  29A3               	goto	l5556
  2180  099C  0853               	movf	_onesecf^(0+256),w	;volatile
  2181  099D  1D03               	btfss	3,2
  2182  099E  29A3               	goto	l5556
  2183                           
  2184                           ;main.c: 591: {
  2185                           ;main.c: 592: send_statusf=0;
  2186  099F  01E0               	clrf	_send_statusf^(0+256)
  2187                           
  2188                           ;main.c: 593: send_status();
  2189  09A0  3198  204A  3188   	fcall	_send_status
  2190  09A3                     l5556:	
  2191                           
  2192                           ;main.c: 594: }
  2193                           ;main.c: 595: if(onesecf==1 && transmitonf==1)
  2194  09A3  0022               	movlb	2	; select bank2
  2195  09A4  0353               	decf	_onesecf^(0+256),w	;volatile
  2196  09A5  1D03               	btfss	3,2
  2197  09A6  29B2               	goto	l5568
  2198  09A7  0365               	decf	_transmitonf^(0+256),w
  2199  09A8  1D03               	btfss	3,2
  2200  09A9  29B2               	goto	l5568
  2201                           
  2202                           ;main.c: 596: {
  2203                           ;main.c: 597: onesecf=0;
  2204  09AA  01D3               	clrf	_onesecf^(0+256)	;volatile
  2205                           
  2206                           ;main.c: 598: transmittops();
  2207  09AB  319B  232C  3188   	fcall	_transmittops
  2208                           
  2209                           ;main.c: 599: txonf=0;
  2210  09AE  0023               	movlb	3	; select bank3
  2211  09AF  01D6               	clrf	_txonf^(0+384)	;volatile
  2212                           
  2213                           ;main.c: 600: cEditfg = 0;
  2214  09B0  0020               	movlb	0	; select bank0
  2215  09B1  01DE               	clrf	_cEditfg
  2216  09B2                     l5568:	
  2217                           
  2218                           ;main.c: 615: }
  2219                           ;main.c: 618: if(universal_error==0)
  2220  09B2  0022               	movlb	2	; select bank2
  2221  09B3  0866               	movf	_universal_error^(0+256),w	;volatile
  2222  09B4  1D03               	btfss	3,2
  2223  09B5  2FE7               	goto	l5998
  2224                           
  2225                           ;main.c: 619: {
  2226                           ;main.c: 620: disp_hex_window11(crater_speed);
  2227  09B6  0841               	movf	_crater_speed^(0+256),w	;volatile
  2228  09B7  0021               	movlb	1	; select bank1
  2229  09B8  00ED               	movwf	??_main^(0+128)
  2230  09B9  01EE               	clrf	(??_main^(0+128)+1)
  2231  09BA  086D               	movf	??_main^(0+128),w
  2232  09BB  00A0               	movwf	disp_hex_window11@hex_data^(0+128)
  2233  09BC  086E               	movf	(??_main+1)^(0+128),w
  2234  09BD  00A1               	movwf	(disp_hex_window11@hex_data+1)^(0+128)
  2235  09BE  31A7  27C1  3188   	fcall	_disp_hex_window11
  2236                           
  2237                           ;main.c: 621: disp_hex_window22(creep_speed);
  2238  09C1  0022               	movlb	2	; select bank2
  2239  09C2  0842               	movf	_creep_speed^(0+256),w	;volatile
  2240  09C3  0021               	movlb	1	; select bank1
  2241  09C4  00ED               	movwf	??_main^(0+128)
  2242  09C5  01EE               	clrf	(??_main^(0+128)+1)
  2243  09C6  086D               	movf	??_main^(0+128),w
  2244  09C7  00A0               	movwf	disp_hex_window22@hex_data^(0+128)
  2245  09C8  086E               	movf	(??_main+1)^(0+128),w
  2246  09C9  00A1               	movwf	(disp_hex_window22@hex_data+1)^(0+128)
  2247  09CA  31A7  27C2  3188   	fcall	_disp_hex_window22
  2248                           
  2249                           ;main.c: 623: if(adaptivepidf==1)
  2250  09CD  0022               	movlb	2	; select bank2
  2251  09CE  0333               	decf	_adaptivepidf^(0+256),w
  2252  09CF  1D03               	btfss	3,2
  2253  09D0  29D5               	goto	l5578
  2254                           
  2255                           ;main.c: 624: {
  2256                           ;main.c: 625: adaptivepidf=0;
  2257  09D1  01B3               	clrf	_adaptivepidf^(0+256)
  2258                           
  2259                           ;main.c: 626: Adaptive_base_pid();
  2260  09D2  3194  2471  3188   	fcall	_Adaptive_base_pid
  2261  09D5                     l5578:	
  2262                           
  2263                           ;main.c: 627: }
  2264                           ;main.c: 629: if(read_enc1f==1)
  2265  09D5  0022               	movlb	2	; select bank2
  2266  09D6  035C               	decf	_read_enc1f^(0+256),w	;volatile
  2267  09D7  1D03               	btfss	3,2
  2268  09D8  2B7F               	goto	l5722
  2269                           
  2270                           ;main.c: 630: {
  2271                           ;main.c: 631: read_enc1f=0;
  2272  09D9  01DC               	clrf	_read_enc1f^(0+256)	;volatile
  2273                           
  2274                           ;main.c: 632: if(enccount==0)
  2275  09DA  0844               	movf	_enccount^(0+256),w	;volatile
  2276  09DB  1D03               	btfss	3,2
  2277  09DC  2A83               	goto	l5638
  2278                           
  2279                           ;main.c: 633: {
  2280                           ;main.c: 634: encod1=SCANENCODER1();
  2281  09DD  319C  24CD  3188   	fcall	_SCANENCODER1
  2282  09E0  0021               	movlb	1	; select bank1
  2283  09E1  00ED               	movwf	??_main^(0+128)
  2284  09E2  086D               	movf	??_main^(0+128),w
  2285  09E3  0022               	movlb	2	; select bank2
  2286  09E4  00C5               	movwf	_encod1^(0+256)
  2287                           
  2288                           ;main.c: 635: mili1_100++;
  2289  09E5  3001               	movlw	1
  2290  09E6  0021               	movlb	1	; select bank1
  2291  09E7  00ED               	movwf	??_main^(0+128)
  2292  09E8  086D               	movf	??_main^(0+128),w
  2293  09E9  0022               	movlb	2	; select bank2
  2294  09EA  07CB               	addwf	_mili1_100^(0+256),f
  2295                           
  2296                           ;main.c: 636: {
  2297                           ;main.c: 637: if(encod1=='+')
  2298  09EB  302B               	movlw	43
  2299  09EC  0645               	xorwf	_encod1^(0+256),w
  2300  09ED  1D03               	btfss	3,2
  2301  09EE  2A00               	goto	l5596
  2302                           
  2303                           ;main.c: 638: {
  2304                           ;main.c: 639: setwirespeed=setwirespeed+pluspara1;
  2305  09EF  0859               	movf	_pluspara1^(0+256),w
  2306  09F0  0020               	movlb	0	; select bank0
  2307  09F1  075C               	addwf	_setwirespeed,w
  2308  09F2  00DC               	movwf	_setwirespeed
  2309  09F3  085D               	movf	_setwirespeed+1,w
  2310  09F4  1803               	skipnc
  2311  09F5  0A5D               	incf	_setwirespeed+1,w
  2312  09F6  00DD               	movwf	_setwirespeed+1
  2313                           
  2314                           ;main.c: 640: if(setwirespeed >= 240)
  2315  09F7  3000               	movlw	0
  2316  09F8  025D               	subwf	_setwirespeed+1,w
  2317  09F9  30F0               	movlw	240
  2318  09FA  1903               	skipnz
  2319  09FB  025C               	subwf	_setwirespeed,w
  2320  09FC  1C03               	skipc
  2321  09FD  2A40               	goto	l5608
  2322                           
  2323                           ;main.c: 641: setwirespeed=240;
  2324  09FE  30F0               	movlw	240
  2325  09FF  2A3D               	goto	L6
  2326  0A00                     l5596:	
  2327                           ;main.c: 643: }
  2328                           
  2329                           ;main.c: 642: cEditfg = 1;
  2330                           
  2331                           
  2332                           ;main.c: 644: else if(encod1=='-')
  2333  0A00  302D               	movlw	45
  2334  0A01  0022               	movlb	2	; select bank2
  2335  0A02  0645               	xorwf	_encod1^(0+256),w
  2336  0A03  1D03               	btfss	3,2
  2337  0A04  2A42               	goto	l673
  2338                           
  2339                           ;main.c: 645: {
  2340                           ;main.c: 646: if(setwirespeed >= minuspara1)
  2341  0A05  0851               	movf	_minuspara1^(0+256),w
  2342  0A06  0021               	movlb	1	; select bank1
  2343  0A07  00ED               	movwf	??_main^(0+128)
  2344  0A08  01EE               	clrf	(??_main^(0+128)+1)
  2345  0A09  086E               	movf	(??_main+1)^(0+128),w
  2346  0A0A  0020               	movlb	0	; select bank0
  2347  0A0B  025D               	subwf	_setwirespeed+1,w
  2348  0A0C  1D03               	skipz
  2349  0A0D  2A12               	goto	u8205
  2350  0A0E  0021               	movlb	1	; select bank1
  2351  0A0F  086D               	movf	??_main^(0+128),w
  2352  0A10  0020               	movlb	0	; select bank0
  2353  0A11  025C               	subwf	_setwirespeed,w
  2354  0A12                     u8205:	
  2355  0A12  1C03               	skipc
  2356  0A13  2A2A               	goto	l5602
  2357                           
  2358                           ;main.c: 647: setwirespeed=setwirespeed-minuspara1;
  2359  0A14  0022               	movlb	2	; select bank2
  2360  0A15  0851               	movf	_minuspara1^(0+256),w
  2361  0A16  0021               	movlb	1	; select bank1
  2362  0A17  00ED               	movwf	??_main^(0+128)
  2363  0A18  01EE               	clrf	(??_main^(0+128)+1)
  2364  0A19  09ED               	comf	??_main^(0+128),f
  2365  0A1A  09EE               	comf	(??_main^(0+128)+1),f
  2366  0A1B  0AED               	incf	??_main^(0+128),f
  2367  0A1C  1903               	skipnz
  2368  0A1D  0AEE               	incf	(??_main^(0+128)+1),f
  2369  0A1E  0020               	movlb	0	; select bank0
  2370  0A1F  085C               	movf	_setwirespeed,w
  2371  0A20  0021               	movlb	1	; select bank1
  2372  0A21  076D               	addwf	??_main^(0+128),w
  2373  0A22  0020               	movlb	0	; select bank0
  2374  0A23  00DC               	movwf	_setwirespeed
  2375  0A24  085D               	movf	_setwirespeed+1,w
  2376  0A25  0021               	movlb	1	; select bank1
  2377  0A26  3D6E               	addwfc	(??_main+1)^(0+128),w
  2378  0A27  0020               	movlb	0	; select bank0
  2379  0A28  00DD               	movwf	_setwirespeed+1
  2380  0A29  2A35               	goto	l676
  2381  0A2A                     l5602:	
  2382                           
  2383                           ;main.c: 649: setwirespeed=setwirespeed--;
  2384  0A2A  3000               	movlw	0
  2385  0A2B  025D               	subwf	_setwirespeed+1,w
  2386  0A2C  300A               	movlw	10
  2387  0A2D  1903               	skipnz
  2388  0A2E  025C               	subwf	_setwirespeed,w
  2389  0A2F  1C03               	skipc
  2390  0A30  2A35               	goto	l676
  2391  0A31  3001               	movlw	1
  2392  0A32  02DC               	subwf	_setwirespeed,f
  2393  0A33  3000               	movlw	0
  2394  0A34  3BDD               	subwfb	_setwirespeed+1,f
  2395  0A35                     l676:	
  2396                           
  2397                           ;main.c: 650: if(setwirespeed <= 10)
  2398  0A35  3000               	movlw	0
  2399  0A36  025D               	subwf	_setwirespeed+1,w
  2400  0A37  300B               	movlw	11
  2401  0A38  1903               	skipnz
  2402  0A39  025C               	subwf	_setwirespeed,w
  2403  0A3A  1803               	skipnc
  2404  0A3B  2A40               	goto	l5608
  2405                           
  2406                           ;main.c: 651: setwirespeed=10;
  2407  0A3C  300A               	movlw	10
  2408  0A3D                     L6:	
  2409  0A3D  00DC               	movwf	_setwirespeed
  2410  0A3E  3000               	movlw	0
  2411  0A3F  00DD               	movwf	_setwirespeed+1
  2412  0A40                     l5608:	
  2413                           
  2414                           ;main.c: 652: cEditfg = 1;
  2415  0A40  01DE               	clrf	_cEditfg
  2416  0A41  0ADE               	incf	_cEditfg,f
  2417  0A42                     l673:	
  2418                           
  2419                           ;main.c: 653: }
  2420                           ;main.c: 654: }
  2421                           ;main.c: 655: if(mili1_100<200)
  2422  0A42  30C8               	movlw	200
  2423  0A43  0022               	movlb	2	; select bank2
  2424  0A44  024B               	subwf	_mili1_100^(0+256),w
  2425  0A45  1803               	skipnc
  2426  0A46  2A5D               	goto	l5618
  2427                           
  2428                           ;main.c: 656: {
  2429                           ;main.c: 657: if(encod1=='+')
  2430  0A47  302B               	movlw	43
  2431  0A48  0645               	xorwf	_encod1^(0+256),w
  2432  0A49  1D03               	btfss	3,2
  2433  0A4A  2A52               	goto	l5614
  2434                           
  2435                           ;main.c: 658: pluscount1++;
  2436  0A4B  3001               	movlw	1
  2437  0A4C  0021               	movlb	1	; select bank1
  2438  0A4D  00ED               	movwf	??_main^(0+128)
  2439  0A4E  086D               	movf	??_main^(0+128),w
  2440  0A4F  0022               	movlb	2	; select bank2
  2441  0A50  07D7               	addwf	_pluscount1^(0+256),f
  2442  0A51  2A7C               	goto	l5636
  2443  0A52                     l5614:	
  2444                           
  2445                           ;main.c: 659: else if(encod1=='-')
  2446  0A52  302D               	movlw	45
  2447  0A53  0645               	xorwf	_encod1^(0+256),w
  2448  0A54  1D03               	btfss	3,2
  2449  0A55  2A7C               	goto	l5636
  2450                           
  2451                           ;main.c: 660: minuscount1++;
  2452  0A56  3001               	movlw	1
  2453  0A57  0021               	movlb	1	; select bank1
  2454  0A58  00ED               	movwf	??_main^(0+128)
  2455  0A59  086D               	movf	??_main^(0+128),w
  2456  0A5A  0022               	movlb	2	; select bank2
  2457  0A5B  07CF               	addwf	_minuscount1^(0+256),f
  2458                           
  2459                           ;main.c: 661: }
  2460  0A5C  2A7C               	goto	l5636
  2461  0A5D                     l5618:	
  2462                           
  2463                           ;main.c: 662: else if(mili1_100>=200)
  2464  0A5D  30C8               	movlw	200
  2465  0A5E  024B               	subwf	_mili1_100^(0+256),w
  2466  0A5F  1C03               	skipc
  2467  0A60  2A7C               	goto	l5636
  2468                           
  2469                           ;main.c: 663: {
  2470                           ;main.c: 664: mili1_100=0;
  2471  0A61  01CB               	clrf	_mili1_100^(0+256)
  2472                           
  2473                           ;main.c: 665: pluspara1=pluscount1>>1;
  2474  0A62  3657               	lsrf	_pluscount1^(0+256),w
  2475  0A63  0021               	movlb	1	; select bank1
  2476  0A64  00ED               	movwf	??_main^(0+128)
  2477  0A65  086D               	movf	??_main^(0+128),w
  2478  0A66  0022               	movlb	2	; select bank2
  2479  0A67  00D9               	movwf	_pluspara1^(0+256)
  2480                           
  2481                           ;main.c: 666: minuspara1=minuscount1>>1;
  2482  0A68  364F               	lsrf	_minuscount1^(0+256),w
  2483  0A69  0021               	movlb	1	; select bank1
  2484  0A6A  00ED               	movwf	??_main^(0+128)
  2485  0A6B  086D               	movf	??_main^(0+128),w
  2486  0A6C  0022               	movlb	2	; select bank2
  2487  0A6D  00D1               	movwf	_minuspara1^(0+256)
  2488                           
  2489                           ;main.c: 667: if(pluspara1<=1)
  2490  0A6E  3002               	movlw	2
  2491  0A6F  0259               	subwf	_pluspara1^(0+256),w
  2492  0A70  1803               	skipnc
  2493  0A71  2A74               	goto	l5630
  2494                           
  2495                           ;main.c: 668: pluspara1=1;
  2496  0A72  01D9               	clrf	_pluspara1^(0+256)
  2497  0A73  0AD9               	incf	_pluspara1^(0+256),f
  2498  0A74                     l5630:	
  2499                           
  2500                           ;main.c: 669: if(minuspara1<=1)
  2501  0A74  3002               	movlw	2
  2502  0A75  0251               	subwf	_minuspara1^(0+256),w
  2503  0A76  1803               	skipnc
  2504  0A77  2A7A               	goto	l5634
  2505                           
  2506                           ;main.c: 670: minuspara1=1;
  2507  0A78  01D1               	clrf	_minuspara1^(0+256)
  2508  0A79  0AD1               	incf	_minuspara1^(0+256),f
  2509  0A7A                     l5634:	
  2510                           
  2511                           ;main.c: 671: pluscount1=0;
  2512  0A7A  01D7               	clrf	_pluscount1^(0+256)
  2513                           
  2514                           ;main.c: 672: minuscount1=0;
  2515  0A7B  01CF               	clrf	_minuscount1^(0+256)
  2516  0A7C                     l5636:	
  2517                           
  2518                           ;main.c: 673: }
  2519                           ;main.c: 674: enccount++;
  2520  0A7C  3001               	movlw	1
  2521  0A7D  0021               	movlb	1	; select bank1
  2522  0A7E  00ED               	movwf	??_main^(0+128)
  2523  0A7F  086D               	movf	??_main^(0+128),w
  2524  0A80  0022               	movlb	2	; select bank2
  2525  0A81  07C4               	addwf	_enccount^(0+256),f	;volatile
  2526                           
  2527                           ;main.c: 675: }
  2528  0A82  2B7F               	goto	l5722
  2529  0A83                     l5638:	
  2530                           
  2531                           ;main.c: 676: else
  2532                           ;main.c: 677: {
  2533                           ;main.c: 678: mili2_100++;
  2534  0A83  3001               	movlw	1
  2535  0A84  0021               	movlb	1	; select bank1
  2536  0A85  00ED               	movwf	??_main^(0+128)
  2537  0A86  086D               	movf	??_main^(0+128),w
  2538  0A87  0022               	movlb	2	; select bank2
  2539  0A88  07CC               	addwf	_mili2_100^(0+256),f
  2540                           
  2541                           ;main.c: 679: encod2=SCANENCODER2();
  2542  0A89  319C  2456  3188   	fcall	_SCANENCODER2
  2543  0A8C  0021               	movlb	1	; select bank1
  2544  0A8D  00ED               	movwf	??_main^(0+128)
  2545  0A8E  086D               	movf	??_main^(0+128),w
  2546  0A8F  0020               	movlb	0	; select bank0
  2547  0A90  00E0               	movwf	_encod2
  2548                           
  2549                           ;main.c: 680: if(TypeU.TypeS.vtg==1)
  2550  0A91  1CE6               	btfss	_TypeU+1,1
  2551  0A92  2AF4               	goto	l688
  2552                           
  2553                           ;main.c: 681: {
  2554                           ;main.c: 682: if(encod2=='+')
  2555  0A93  302B               	movlw	43
  2556  0A94  0660               	xorwf	_encod2,w
  2557  0A95  1D03               	btfss	3,2
  2558  0A96  2AAB               	goto	l5652
  2559                           
  2560                           ;main.c: 683: {
  2561                           ;main.c: 684: setvoltage=setvoltage+pluspara2;
  2562  0A97  0022               	movlb	2	; select bank2
  2563  0A98  085A               	movf	_pluspara2^(0+256),w
  2564  0A99  0020               	movlb	0	; select bank0
  2565  0A9A  075A               	addwf	_setvoltage,w
  2566  0A9B  00DA               	movwf	_setvoltage
  2567  0A9C  085B               	movf	_setvoltage+1,w
  2568  0A9D  1803               	skipnc
  2569  0A9E  0A5B               	incf	_setvoltage+1,w
  2570  0A9F  00DB               	movwf	_setvoltage+1
  2571                           
  2572                           ;main.c: 685: if(setvoltage>440)
  2573  0AA0  3001               	movlw	1
  2574  0AA1  025B               	subwf	_setvoltage+1,w
  2575  0AA2  30B9               	movlw	185
  2576  0AA3  1903               	skipnz
  2577  0AA4  025A               	subwf	_setvoltage,w
  2578  0AA5  1C03               	skipc
  2579  0AA6  2AEB               	goto	l5664
  2580                           
  2581                           ;main.c: 686: setvoltage=440;
  2582  0AA7  30B8               	movlw	184
  2583  0AA8  00DA               	movwf	_setvoltage
  2584  0AA9  3001               	movlw	1
  2585  0AAA  2AEA               	goto	L7
  2586  0AAB                     l5652:	
  2587                           ;main.c: 688: }
  2588                           
  2589                           ;main.c: 687: cEditfg = 1;
  2590                           
  2591                           
  2592                           ;main.c: 689: else if(encod2=='-')
  2593  0AAB  302D               	movlw	45
  2594  0AAC  0660               	xorwf	_encod2,w
  2595  0AAD  1D03               	btfss	3,2
  2596  0AAE  2AED               	goto	l691
  2597                           
  2598                           ;main.c: 690: {
  2599                           ;main.c: 691: if(setvoltage>=minuspara2)
  2600  0AAF  0022               	movlb	2	; select bank2
  2601  0AB0  0852               	movf	_minuspara2^(0+256),w
  2602  0AB1  0021               	movlb	1	; select bank1
  2603  0AB2  00ED               	movwf	??_main^(0+128)
  2604  0AB3  01EE               	clrf	(??_main^(0+128)+1)
  2605  0AB4  086E               	movf	(??_main+1)^(0+128),w
  2606  0AB5  0020               	movlb	0	; select bank0
  2607  0AB6  025B               	subwf	_setvoltage+1,w
  2608  0AB7  1D03               	skipz
  2609  0AB8  2ABD               	goto	u8335
  2610  0AB9  0021               	movlb	1	; select bank1
  2611  0ABA  086D               	movf	??_main^(0+128),w
  2612  0ABB  0020               	movlb	0	; select bank0
  2613  0ABC  025A               	subwf	_setvoltage,w
  2614  0ABD                     u8335:	
  2615  0ABD  1C03               	skipc
  2616  0ABE  2AD5               	goto	l5658
  2617                           
  2618                           ;main.c: 692: setvoltage=setvoltage-minuspara2;
  2619  0ABF  0022               	movlb	2	; select bank2
  2620  0AC0  0852               	movf	_minuspara2^(0+256),w
  2621  0AC1  0021               	movlb	1	; select bank1
  2622  0AC2  00ED               	movwf	??_main^(0+128)
  2623  0AC3  01EE               	clrf	(??_main^(0+128)+1)
  2624  0AC4  09ED               	comf	??_main^(0+128),f
  2625  0AC5  09EE               	comf	(??_main^(0+128)+1),f
  2626  0AC6  0AED               	incf	??_main^(0+128),f
  2627  0AC7  1903               	skipnz
  2628  0AC8  0AEE               	incf	(??_main^(0+128)+1),f
  2629  0AC9  0020               	movlb	0	; select bank0
  2630  0ACA  085A               	movf	_setvoltage,w
  2631  0ACB  0021               	movlb	1	; select bank1
  2632  0ACC  076D               	addwf	??_main^(0+128),w
  2633  0ACD  0020               	movlb	0	; select bank0
  2634  0ACE  00DA               	movwf	_setvoltage
  2635  0ACF  085B               	movf	_setvoltage+1,w
  2636  0AD0  0021               	movlb	1	; select bank1
  2637  0AD1  3D6E               	addwfc	(??_main+1)^(0+128),w
  2638  0AD2  0020               	movlb	0	; select bank0
  2639  0AD3  00DB               	movwf	_setvoltage+1
  2640  0AD4  2AE0               	goto	l694
  2641  0AD5                     l5658:	
  2642                           
  2643                           ;main.c: 694: setvoltage=setvoltage--;
  2644  0AD5  3000               	movlw	0
  2645  0AD6  025B               	subwf	_setvoltage+1,w
  2646  0AD7  3064               	movlw	100
  2647  0AD8  1903               	skipnz
  2648  0AD9  025A               	subwf	_setvoltage,w
  2649  0ADA  1C03               	skipc
  2650  0ADB  2AE0               	goto	l694
  2651  0ADC  3001               	movlw	1
  2652  0ADD  02DA               	subwf	_setvoltage,f
  2653  0ADE  3000               	movlw	0
  2654  0ADF  3BDB               	subwfb	_setvoltage+1,f
  2655  0AE0                     l694:	
  2656                           
  2657                           ;main.c: 696: if(setvoltage<=100)
  2658  0AE0  3000               	movlw	0
  2659  0AE1  025B               	subwf	_setvoltage+1,w
  2660  0AE2  3065               	movlw	101
  2661  0AE3  1903               	skipnz
  2662  0AE4  025A               	subwf	_setvoltage,w
  2663  0AE5  1803               	skipnc
  2664  0AE6  2AEB               	goto	l5664
  2665                           
  2666                           ;main.c: 697: setvoltage=100;
  2667  0AE7  3064               	movlw	100
  2668  0AE8  00DA               	movwf	_setvoltage
  2669  0AE9  3000               	movlw	0
  2670  0AEA                     L7:	
  2671  0AEA  00DB               	movwf	_setvoltage+1
  2672  0AEB                     l5664:	
  2673                           
  2674                           ;main.c: 698: cEditfg = 1;
  2675  0AEB  01DE               	clrf	_cEditfg
  2676  0AEC  0ADE               	incf	_cEditfg,f
  2677  0AED                     l691:	
  2678                           
  2679                           ;main.c: 699: }
  2680                           ;main.c: 701: encod2 = '$';
  2681  0AED  3024               	movlw	36
  2682  0AEE  0021               	movlb	1	; select bank1
  2683  0AEF  00ED               	movwf	??_main^(0+128)
  2684  0AF0  086D               	movf	??_main^(0+128),w
  2685  0AF1  0020               	movlb	0	; select bank0
  2686  0AF2  00E0               	movwf	_encod2
  2687                           
  2688                           ;main.c: 703: }
  2689  0AF3  2B41               	goto	l5694
  2690  0AF4                     l688:	
  2691                           
  2692                           ;main.c: 704: else if(TypeU.TypeS.arclength==1)
  2693  0AF4  1D65               	btfss	_TypeU,2
  2694  0AF5  2B41               	goto	l5694
  2695                           
  2696                           ;main.c: 705: {
  2697                           ;main.c: 706: if(encod2=='+')
  2698  0AF6  302B               	movlw	43
  2699  0AF7  0660               	xorwf	_encod2,w
  2700  0AF8  1D03               	btfss	3,2
  2701  0AF9  2B20               	goto	l5680
  2702                           
  2703                           ;main.c: 707: {
  2704                           ;main.c: 708: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength+pluspara2;
  2705  0AFA  0024               	movlb	4	; select bank4
  2706  0AFB  0855               	movf	(_pstowfstru^(0+512)+7),w
  2707  0AFC  0022               	movlb	2	; select bank2
  2708  0AFD  075A               	addwf	_pluspara2^(0+256),w
  2709  0AFE  0021               	movlb	1	; select bank1
  2710  0AFF  00ED               	movwf	??_main^(0+128)
  2711  0B00  086D               	movf	??_main^(0+128),w
  2712  0B01  0024               	movlb	4	; select bank4
  2713  0B02  00D5               	movwf	(_pstowfstru^(0+512)+7)
  2714                           
  2715                           ;main.c: 710: if(weldmode=='P')
  2716  0B03  3050               	movlw	80
  2717  0B04  0020               	movlb	0	; select bank0
  2718  0B05  0664               	xorwf	_weldmode,w	;volatile
  2719  0B06  1D03               	btfss	3,2
  2720  0B07  2B0F               	goto	l5674
  2721                           
  2722                           ;main.c: 711: {
  2723                           ;main.c: 712: if(pstowfstru.pstowfstrs.arclength>80)
  2724  0B08  3051               	movlw	81
  2725  0B09  0024               	movlb	4	; select bank4
  2726  0B0A  0255               	subwf	(_pstowfstru^(0+512)+7),w
  2727  0B0B  1C03               	skipc
  2728  0B0C  2B3E               	goto	l5692
  2729                           
  2730                           ;main.c: 713: pstowfstru.pstowfstrs.arclength=80;
  2731  0B0D  3050               	movlw	80
  2732  0B0E  2B1A               	goto	L1
  2733  0B0F                     l5674:	
  2734                           ;main.c: 714: }
  2735                           
  2736                           
  2737                           ;main.c: 715: else if(weldmode=='G')
  2738  0B0F  3047               	movlw	71
  2739  0B10  0020               	movlb	0	; select bank0
  2740  0B11  0664               	xorwf	_weldmode,w	;volatile
  2741  0B12  1D03               	btfss	3,2
  2742  0B13  2B3E               	goto	l5692
  2743                           
  2744                           ;main.c: 716: {
  2745                           ;main.c: 717: if(pstowfstru.pstowfstrs.arclength>40)
  2746  0B14  3029               	movlw	41
  2747  0B15  0024               	movlb	4	; select bank4
  2748  0B16  0255               	subwf	(_pstowfstru^(0+512)+7),w
  2749  0B17  1C03               	skipc
  2750  0B18  2B3E               	goto	l5692
  2751                           
  2752                           ;main.c: 718: pstowfstru.pstowfstrs.arclength=40;
  2753  0B19  3028               	movlw	40
  2754  0B1A                     L1:	
  2755  0B1A  0021               	movlb	1	; select bank1
  2756  0B1B  00ED               	movwf	??_main^(0+128)
  2757  0B1C  086D               	movf	??_main^(0+128),w
  2758  0B1D  0024               	movlb	4	; select bank4
  2759  0B1E  00D5               	movwf	(_pstowfstru^(0+512)+7)
  2760                           
  2761                           ;main.c: 719: }
  2762                           ;main.c: 723: }
  2763  0B1F  2B3E               	goto	l5692
  2764  0B20                     l5680:	
  2765                           
  2766                           ;main.c: 724: else if(encod2=='-')
  2767  0B20  302D               	movlw	45
  2768  0B21  0020               	movlb	0	; select bank0
  2769  0B22  0660               	xorwf	_encod2,w
  2770  0B23  1D03               	btfss	3,2
  2771  0B24  2B3E               	goto	l5692
  2772                           
  2773                           ;main.c: 725: {
  2774                           ;main.c: 726: if(pstowfstru.pstowfstrs.arclength>=minuspara2)
  2775  0B25  0022               	movlb	2	; select bank2
  2776  0B26  0852               	movf	_minuspara2^(0+256),w
  2777  0B27  0024               	movlb	4	; select bank4
  2778  0B28  0255               	subwf	(_pstowfstru^(0+512)+7),w
  2779  0B29  1C03               	skipc
  2780  0B2A  2B36               	goto	l5686
  2781                           
  2782                           ;main.c: 727: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength-minuspara2
      +                          ;
  2783  0B2B  0022               	movlb	2	; select bank2
  2784  0B2C  0352               	decf	_minuspara2^(0+256),w
  2785  0B2D  3AFF               	xorlw	255
  2786  0B2E  0024               	movlb	4	; select bank4
  2787  0B2F  0755               	addwf	(_pstowfstru^(0+512)+7),w
  2788  0B30  0021               	movlb	1	; select bank1
  2789  0B31  00ED               	movwf	??_main^(0+128)
  2790  0B32  086D               	movf	??_main^(0+128),w
  2791  0B33  0024               	movlb	4	; select bank4
  2792  0B34  00D5               	movwf	(_pstowfstru^(0+512)+7)
  2793  0B35  2B3B               	goto	l708
  2794  0B36                     l5686:	
  2795                           
  2796                           ;main.c: 729: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength--;
  2797  0B36  0855               	movf	(_pstowfstru^(0+512)+7),w
  2798  0B37  1903               	btfsc	3,2
  2799  0B38  2B3B               	goto	l708
  2800  0B39  3001               	movlw	1
  2801  0B3A  02D5               	subwf	(_pstowfstru^(0+512)+7),f
  2802  0B3B                     l708:	
  2803                           
  2804                           ;main.c: 731: if(pstowfstru.pstowfstrs.arclength<=0)
  2805  0B3B  0855               	movf	(_pstowfstru^(0+512)+7),w
  2806  0B3C  1903               	btfsc	3,2
  2807                           
  2808                           ;main.c: 732: pstowfstru.pstowfstrs.arclength=0;
  2809  0B3D  01D5               	clrf	(_pstowfstru^(0+512)+7)
  2810  0B3E                     l5692:	
  2811                           
  2812                           ;main.c: 733: }
  2813                           ;main.c: 734: cEditfg = 1;
  2814  0B3E  0020               	movlb	0	; select bank0
  2815  0B3F  01DE               	clrf	_cEditfg
  2816  0B40  0ADE               	incf	_cEditfg,f
  2817  0B41                     l5694:	
  2818                           
  2819                           ;main.c: 735: }
  2820                           ;main.c: 736: if(mili2_100<200)
  2821  0B41  30C8               	movlw	200
  2822  0B42  0022               	movlb	2	; select bank2
  2823  0B43  024C               	subwf	_mili2_100^(0+256),w
  2824  0B44  1803               	skipnc
  2825  0B45  2B5E               	goto	l5704
  2826                           
  2827                           ;main.c: 737: {
  2828                           ;main.c: 738: if(encod2=='+')
  2829  0B46  302B               	movlw	43
  2830  0B47  0020               	movlb	0	; select bank0
  2831  0B48  0660               	xorwf	_encod2,w
  2832  0B49  1D03               	btfss	3,2
  2833  0B4A  2B52               	goto	l5700
  2834                           
  2835                           ;main.c: 739: pluscount2++;
  2836  0B4B  3001               	movlw	1
  2837  0B4C  0021               	movlb	1	; select bank1
  2838  0B4D  00ED               	movwf	??_main^(0+128)
  2839  0B4E  086D               	movf	??_main^(0+128),w
  2840  0B4F  0022               	movlb	2	; select bank2
  2841  0B50  07D8               	addwf	_pluscount2^(0+256),f
  2842  0B51  2B7D               	goto	l715
  2843  0B52                     l5700:	
  2844                           
  2845                           ;main.c: 740: else if(encod2=='-')
  2846  0B52  302D               	movlw	45
  2847  0B53  0020               	movlb	0	; select bank0
  2848  0B54  0660               	xorwf	_encod2,w
  2849  0B55  1D03               	btfss	3,2
  2850  0B56  2B7D               	goto	l715
  2851                           
  2852                           ;main.c: 741: minuscount2++;
  2853  0B57  3001               	movlw	1
  2854  0B58  0021               	movlb	1	; select bank1
  2855  0B59  00ED               	movwf	??_main^(0+128)
  2856  0B5A  086D               	movf	??_main^(0+128),w
  2857  0B5B  0022               	movlb	2	; select bank2
  2858  0B5C  07D0               	addwf	_minuscount2^(0+256),f
  2859                           
  2860                           ;main.c: 742: }
  2861  0B5D  2B7D               	goto	l715
  2862  0B5E                     l5704:	
  2863                           
  2864                           ;main.c: 743: else if(mili2_100>=200)
  2865  0B5E  30C8               	movlw	200
  2866  0B5F  024C               	subwf	_mili2_100^(0+256),w
  2867  0B60  1C03               	skipc
  2868  0B61  2B7D               	goto	l715
  2869                           
  2870                           ;main.c: 744: {
  2871                           ;main.c: 745: mili2_100=0;
  2872  0B62  01CC               	clrf	_mili2_100^(0+256)
  2873                           
  2874                           ;main.c: 746: pluspara2=pluscount2;
  2875  0B63  0858               	movf	_pluscount2^(0+256),w
  2876  0B64  0021               	movlb	1	; select bank1
  2877  0B65  00ED               	movwf	??_main^(0+128)
  2878  0B66  086D               	movf	??_main^(0+128),w
  2879  0B67  0022               	movlb	2	; select bank2
  2880  0B68  00DA               	movwf	_pluspara2^(0+256)
  2881                           
  2882                           ;main.c: 747: minuspara2=minuscount2;
  2883  0B69  0850               	movf	_minuscount2^(0+256),w
  2884  0B6A  0021               	movlb	1	; select bank1
  2885  0B6B  00ED               	movwf	??_main^(0+128)
  2886  0B6C  086D               	movf	??_main^(0+128),w
  2887  0B6D  0022               	movlb	2	; select bank2
  2888  0B6E  00D2               	movwf	_minuspara2^(0+256)
  2889                           
  2890                           ;main.c: 748: if(pluspara2<=1)
  2891  0B6F  3002               	movlw	2
  2892  0B70  025A               	subwf	_pluspara2^(0+256),w
  2893  0B71  1803               	skipnc
  2894  0B72  2B75               	goto	l5716
  2895                           
  2896                           ;main.c: 749: pluspara2=1;
  2897  0B73  01DA               	clrf	_pluspara2^(0+256)
  2898  0B74  0ADA               	incf	_pluspara2^(0+256),f
  2899  0B75                     l5716:	
  2900                           
  2901                           ;main.c: 750: if(minuspara2<=1)
  2902  0B75  3002               	movlw	2
  2903  0B76  0252               	subwf	_minuspara2^(0+256),w
  2904  0B77  1803               	skipnc
  2905  0B78  2B7B               	goto	l5720
  2906                           
  2907                           ;main.c: 751: minuspara2=1;
  2908  0B79  01D2               	clrf	_minuspara2^(0+256)
  2909  0B7A  0AD2               	incf	_minuspara2^(0+256),f
  2910  0B7B                     l5720:	
  2911                           
  2912                           ;main.c: 752: pluscount2=0;
  2913  0B7B  01D8               	clrf	_pluscount2^(0+256)
  2914                           
  2915                           ;main.c: 753: minuscount2=0;
  2916  0B7C  01D0               	clrf	_minuscount2^(0+256)
  2917  0B7D                     l715:	
  2918                           
  2919                           ;main.c: 754: }
  2920                           ;main.c: 755: enccount=0;
  2921  0B7D  0022               	movlb	2	; select bank2
  2922  0B7E  01C4               	clrf	_enccount^(0+256)	;volatile
  2923  0B7F                     l5722:	
  2924                           
  2925                           ;main.c: 756: }
  2926                           ;main.c: 757: }
  2927                           ;main.c: 761: if(prevkey!=key)
  2928  0B7F  086E               	movf	_prevkey^(0+256),w	;volatile
  2929  0B80  0021               	movlb	1	; select bank1
  2930  0B81  066F               	xorwf	_key^(0+128),w	;volatile
  2931  0B82  1903               	skipnz
  2932  0B83  2B9B               	goto	l5734
  2933                           
  2934                           ;main.c: 762: {
  2935                           ;main.c: 764: key_application(key);
  2936  0B84  086F               	movf	_key^(0+128),w	;volatile
  2937  0B85  3193  2354  3188   	fcall	_key_application
  2938                           
  2939                           ;main.c: 765: if(key!=0)
  2940  0B88  0021               	movlb	1	; select bank1
  2941  0B89  086F               	movf	_key^(0+128),w	;volatile
  2942  0B8A  1903               	btfsc	3,2
  2943  0B8B  2B9B               	goto	l5734
  2944                           
  2945                           ;main.c: 766: {
  2946                           ;main.c: 767: count_1ms=0;
  2947  0B8C  0023               	movlb	3	; select bank3
  2948  0B8D  01B2               	clrf	_count_1ms^(0+384)	;volatile
  2949  0B8E  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  2950                           
  2951                           ;main.c: 768: onesecf=1;
  2952  0B8F  3001               	movlw	1
  2953  0B90  0021               	movlb	1	; select bank1
  2954  0B91  00ED               	movwf	??_main^(0+128)
  2955  0B92  086D               	movf	??_main^(0+128),w
  2956  0B93  0022               	movlb	2	; select bank2
  2957  0B94  00D3               	movwf	_onesecf^(0+256)	;volatile
  2958                           
  2959                           ;main.c: 769: txonf=1;
  2960  0B95  3001               	movlw	1
  2961  0B96  0021               	movlb	1	; select bank1
  2962  0B97  00ED               	movwf	??_main^(0+128)
  2963  0B98  086D               	movf	??_main^(0+128),w
  2964  0B99  0023               	movlb	3	; select bank3
  2965  0B9A  00D6               	movwf	_txonf^(0+384)	;volatile
  2966  0B9B                     l5734:	
  2967                           
  2968                           ;main.c: 770: }
  2969                           ;main.c: 771: }
  2970                           ;main.c: 772: prevkey=key;
  2971  0B9B  0021               	movlb	1	; select bank1
  2972  0B9C  086F               	movf	_key^(0+128),w	;volatile
  2973  0B9D  00ED               	movwf	??_main^(0+128)
  2974  0B9E  086D               	movf	??_main^(0+128),w
  2975  0B9F  0022               	movlb	2	; select bank2
  2976  0BA0  00EE               	movwf	_prevkey^(0+256)	;volatile
  2977                           
  2978                           ;main.c: 776: if((psstatusu.psstatuss.weldoncyclestrt!=1)&&(cGasRlyClrfg == 0))
  2979  0BA1  0020               	movlb	0	; select bank0
  2980  0BA2  196C               	btfsc	_psstatusu,2
  2981  0BA3  2D3B               	goto	l721
  2982  0BA4  0022               	movlb	2	; select bank2
  2983  0BA5  0835               	movf	_cGasRlyClrfg^(0+256),w
  2984  0BA6  1D03               	btfss	3,2
  2985  0BA7  2D3B               	goto	l721
  2986                           
  2987                           ;main.c: 777: {
  2988                           ;main.c: 778: if( (prevsetwirespeed!=setwirespeed) || (prevsetcurrent!=setcurrent) || di
      +                          spupdatef==1 )
  2989  0BA8  0020               	movlb	0	; select bank0
  2990  0BA9  085D               	movf	_setwirespeed+1,w
  2991  0BAA  0022               	movlb	2	; select bank2
  2992  0BAB  0627               	xorwf	(_prevsetwirespeed+1)^(0+256),w
  2993  0BAC  1D03               	skipz
  2994  0BAD  2BB2               	goto	u8565
  2995  0BAE  0020               	movlb	0	; select bank0
  2996  0BAF  085C               	movf	_setwirespeed,w
  2997  0BB0  0022               	movlb	2	; select bank2
  2998  0BB1  0626               	xorwf	_prevsetwirespeed^(0+256),w
  2999  0BB2                     u8565:	
  3000  0BB2  1D03               	skipz
  3001  0BB3  2BC3               	goto	l5746
  3002  0BB4  082B               	movf	(_setcurrent+1)^(0+256),w
  3003  0BB5  0023               	movlb	3	; select bank3
  3004  0BB6  0641               	xorwf	(_prevsetcurrent+1)^(0+384),w
  3005  0BB7  1D03               	skipz
  3006  0BB8  2BBD               	goto	u8575
  3007  0BB9  0022               	movlb	2	; select bank2
  3008  0BBA  082A               	movf	_setcurrent^(0+256),w
  3009  0BBB  0023               	movlb	3	; select bank3
  3010  0BBC  0640               	xorwf	_prevsetcurrent^(0+384),w
  3011  0BBD                     u8575:	
  3012  0BBD  1D03               	skipz
  3013  0BBE  2BC3               	goto	l5746
  3014  0BBF  0020               	movlb	0	; select bank0
  3015  0BC0  036F               	decf	_dispupdatef,w	;volatile
  3016  0BC1  1D03               	btfss	3,2
  3017  0BC2  2C27               	goto	l5772
  3018  0BC3                     l5746:	
  3019                           
  3020                           ;main.c: 779: {
  3021                           ;main.c: 780: if((prevsetwirespeed!=setwirespeed) && (prevsetwirespeed > setwirespeed))
  3022  0BC3  0020               	movlb	0	; select bank0
  3023  0BC4  085D               	movf	_setwirespeed+1,w
  3024  0BC5  0022               	movlb	2	; select bank2
  3025  0BC6  0627               	xorwf	(_prevsetwirespeed+1)^(0+256),w
  3026  0BC7  1D03               	skipz
  3027  0BC8  2BCD               	goto	u8595
  3028  0BC9  0020               	movlb	0	; select bank0
  3029  0BCA  085C               	movf	_setwirespeed,w
  3030  0BCB  0022               	movlb	2	; select bank2
  3031  0BCC  0626               	xorwf	_prevsetwirespeed^(0+256),w
  3032  0BCD                     u8595:	
  3033  0BCD  1903               	skipnz
  3034  0BCE  2BDD               	goto	l725
  3035  0BCF  0827               	movf	(_prevsetwirespeed+1)^(0+256),w
  3036  0BD0  0020               	movlb	0	; select bank0
  3037  0BD1  025D               	subwf	_setwirespeed+1,w
  3038  0BD2  1D03               	skipz
  3039  0BD3  2BD8               	goto	u8605
  3040  0BD4  0022               	movlb	2	; select bank2
  3041  0BD5  0826               	movf	_prevsetwirespeed^(0+256),w
  3042  0BD6  0020               	movlb	0	; select bank0
  3043  0BD7  025C               	subwf	_setwirespeed,w
  3044  0BD8                     u8605:	
  3045  0BD8  1803               	skipnc
  3046  0BD9  2BDD               	goto	l725
  3047                           
  3048                           ;main.c: 781: {
  3049                           ;main.c: 782: wfspeedchangef=1;
  3050  0BDA  0022               	movlb	2	; select bank2
  3051  0BDB  01EF               	clrf	_wfspeedchangef^(0+256)
  3052  0BDC  0AEF               	incf	_wfspeedchangef^(0+256),f
  3053  0BDD                     l725:	
  3054                           
  3055                           ;main.c: 783: }
  3056                           ;main.c: 784: if(TypeU.TypeS.wirespeed==1)
  3057  0BDD  0020               	movlb	0	; select bank0
  3058  0BDE  1C65               	btfss	_TypeU,0
  3059  0BDF  2BEC               	goto	l726
  3060                           
  3061                           ;main.c: 785: {
  3062                           ;main.c: 786: TypeU.TypeS.wirespeed=1;
  3063  0BE0  1465               	bsf	_TypeU,0
  3064                           
  3065                           ;main.c: 787: TypeU.TypeS.amp=0;
  3066  0BE1  1066               	bcf	_TypeU+1,0
  3067                           
  3068                           ;main.c: 788: TypeU.TypeS.thickness=0;
  3069  0BE2  10E5               	bcf	_TypeU,1
  3070                           
  3071                           ;main.c: 790: TypeDP.TypeD.digitdp1 =0;
  3072  0BE3  106B               	bcf	_TypeDP,0
  3073                           
  3074                           ;main.c: 791: TypeDP.TypeD.digitdp2 =1;
  3075  0BE4  14EB               	bsf	_TypeDP,1
  3076                           
  3077                           ;main.c: 792: TypeDP.TypeD.digitdp3 =0;
  3078  0BE5  116B               	bcf	_TypeDP,2
  3079                           
  3080                           ;main.c: 793: disp_hex_window1(setwirespeed);
  3081  0BE6  085D               	movf	_setwirespeed+1,w
  3082  0BE7  0021               	movlb	1	; select bank1
  3083  0BE8  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  3084  0BE9  0020               	movlb	0	; select bank0
  3085  0BEA  085C               	movf	_setwirespeed,w
  3086  0BEB  2BFA               	goto	L9
  3087  0BEC                     l726:	
  3088                           ;main.c: 794: }
  3089                           
  3090                           
  3091                           ;main.c: 795: else if(TypeU.TypeS.amp==1)
  3092  0BEC  1C66               	btfss	_TypeU+1,0
  3093  0BED  2BFD               	goto	l728
  3094                           
  3095                           ;main.c: 796: {
  3096                           ;main.c: 797: TypeU.TypeS.wirespeed=0;
  3097  0BEE  1065               	bcf	_TypeU,0
  3098                           
  3099                           ;main.c: 798: TypeU.TypeS.amp=1;
  3100  0BEF  1466               	bsf	_TypeU+1,0
  3101                           
  3102                           ;main.c: 799: TypeU.TypeS.thickness=0;
  3103  0BF0  10E5               	bcf	_TypeU,1
  3104                           
  3105                           ;main.c: 800: TypeDP.TypeD.digitdp1 =0;
  3106  0BF1  106B               	bcf	_TypeDP,0
  3107                           
  3108                           ;main.c: 801: TypeDP.TypeD.digitdp2 =0;
  3109  0BF2  10EB               	bcf	_TypeDP,1
  3110                           
  3111                           ;main.c: 802: TypeDP.TypeD.digitdp3 =0;
  3112  0BF3  116B               	bcf	_TypeDP,2
  3113                           
  3114                           ;main.c: 803: disp_hex_window1(setcurrent);
  3115  0BF4  0022               	movlb	2	; select bank2
  3116  0BF5  082B               	movf	(_setcurrent+1)^(0+256),w
  3117  0BF6  0021               	movlb	1	; select bank1
  3118  0BF7  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  3119  0BF8  0022               	movlb	2	; select bank2
  3120  0BF9  082A               	movf	_setcurrent^(0+256),w
  3121  0BFA                     L9:	
  3122  0BFA  0021               	movlb	1	; select bank1
  3123  0BFB  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  3124  0BFC  2C0E               	goto	L8
  3125  0BFD                     l728:	
  3126                           ;main.c: 804: }
  3127                           
  3128                           
  3129                           ;main.c: 805: else if(TypeU.TypeS.thickness==1)
  3130  0BFD  1CE5               	btfss	_TypeU,1
  3131  0BFE  2C11               	goto	l5764
  3132                           
  3133                           ;main.c: 806: {
  3134                           ;main.c: 807: TypeU.TypeS.wirespeed =0;
  3135  0BFF  1065               	bcf	_TypeU,0
  3136                           
  3137                           ;main.c: 808: TypeU.TypeS.amp =0;
  3138  0C00  1066               	bcf	_TypeU+1,0
  3139                           
  3140                           ;main.c: 809: TypeU.TypeS.thickness =1;
  3141  0C01  14E5               	bsf	_TypeU,1
  3142                           
  3143                           ;main.c: 810: TypeDP.TypeD.digitdp1 =0;
  3144  0C02  106B               	bcf	_TypeDP,0
  3145                           
  3146                           ;main.c: 811: TypeDP.TypeD.digitdp2 =1;
  3147  0C03  14EB               	bsf	_TypeDP,1
  3148                           
  3149                           ;main.c: 812: TypeDP.TypeD.digitdp3 =0;
  3150  0C04  116B               	bcf	_TypeDP,2
  3151                           
  3152                           ;main.c: 813: disp_hex_window1(pstowfstru.pstowfstrs.setthickness);
  3153  0C05  0024               	movlb	4	; select bank4
  3154  0C06  0852               	movf	(_pstowfstru^(0+512)+4),w
  3155  0C07  0021               	movlb	1	; select bank1
  3156  0C08  00ED               	movwf	??_main^(0+128)
  3157  0C09  01EE               	clrf	(??_main^(0+128)+1)
  3158  0C0A  086D               	movf	??_main^(0+128),w
  3159  0C0B  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  3160  0C0C  086E               	movf	(??_main+1)^(0+128),w
  3161  0C0D  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  3162  0C0E                     L8:	
  3163  0C0E  3199  21CE  3188   	fcall	_disp_hex_window1
  3164  0C11                     l5764:	
  3165                           
  3166                           ;main.c: 814: }
  3167                           ;main.c: 817: pstowfstru.pstowfstrs.setwspeed=setwirespeed;
  3168  0C11  0020               	movlb	0	; select bank0
  3169  0C12  085C               	movf	_setwirespeed,w
  3170  0C13  0021               	movlb	1	; select bank1
  3171  0C14  00ED               	movwf	??_main^(0+128)
  3172  0C15  086D               	movf	??_main^(0+128),w
  3173  0C16  0024               	movlb	4	; select bank4
  3174  0C17  00CF               	movwf	(_pstowfstru^(0+512)+1)
  3175                           
  3176                           ;main.c: 819: count_1ms=0;
  3177  0C18  0023               	movlb	3	; select bank3
  3178  0C19  01B2               	clrf	_count_1ms^(0+384)	;volatile
  3179  0C1A  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3180                           
  3181                           ;main.c: 820: onesecf=1;
  3182  0C1B  3001               	movlw	1
  3183  0C1C  0021               	movlb	1	; select bank1
  3184  0C1D  00ED               	movwf	??_main^(0+128)
  3185  0C1E  086D               	movf	??_main^(0+128),w
  3186  0C1F  0022               	movlb	2	; select bank2
  3187  0C20  00D3               	movwf	_onesecf^(0+256)	;volatile
  3188                           
  3189                           ;main.c: 821: txonf=1;
  3190  0C21  3001               	movlw	1
  3191  0C22  0021               	movlb	1	; select bank1
  3192  0C23  00ED               	movwf	??_main^(0+128)
  3193  0C24  086D               	movf	??_main^(0+128),w
  3194  0C25  0023               	movlb	3	; select bank3
  3195  0C26  00D6               	movwf	_txonf^(0+384)	;volatile
  3196  0C27                     l5772:	
  3197                           
  3198                           ;main.c: 822: }
  3199                           ;main.c: 823: prevsetwirespeed=setwirespeed;
  3200  0C27  0020               	movlb	0	; select bank0
  3201  0C28  085D               	movf	_setwirespeed+1,w
  3202  0C29  0022               	movlb	2	; select bank2
  3203  0C2A  00A7               	movwf	(_prevsetwirespeed+1)^(0+256)
  3204  0C2B  0020               	movlb	0	; select bank0
  3205  0C2C  085C               	movf	_setwirespeed,w
  3206  0C2D  0022               	movlb	2	; select bank2
  3207  0C2E  00A6               	movwf	_prevsetwirespeed^(0+256)
  3208                           
  3209                           ;main.c: 824: prevsetcurrent=setcurrent;
  3210  0C2F  082B               	movf	(_setcurrent+1)^(0+256),w
  3211  0C30  0023               	movlb	3	; select bank3
  3212  0C31  00C1               	movwf	(_prevsetcurrent+1)^(0+384)
  3213  0C32  0022               	movlb	2	; select bank2
  3214  0C33  082A               	movf	_setcurrent^(0+256),w
  3215  0C34  0023               	movlb	3	; select bank3
  3216  0C35  00C0               	movwf	_prevsetcurrent^(0+384)
  3217                           
  3218                           ;main.c: 826: if(((prevsetvoltage!=setvoltage) || dispupdatef==1) && (TypeU.TypeS.vtg==1
      +                          ) )
  3219  0C36  0020               	movlb	0	; select bank0
  3220  0C37  085B               	movf	_setvoltage+1,w
  3221  0C38  0023               	movlb	3	; select bank3
  3222  0C39  0643               	xorwf	(_prevsetvoltage+1)^(0+384),w
  3223  0C3A  1D03               	skipz
  3224  0C3B  2C40               	goto	u8645
  3225  0C3C  0020               	movlb	0	; select bank0
  3226  0C3D  085A               	movf	_setvoltage,w
  3227  0C3E  0023               	movlb	3	; select bank3
  3228  0C3F  0642               	xorwf	_prevsetvoltage^(0+384),w
  3229  0C40                     u8645:	
  3230  0C40  1D03               	skipz
  3231  0C41  2C46               	goto	l733
  3232  0C42  0020               	movlb	0	; select bank0
  3233  0C43  036F               	decf	_dispupdatef,w	;volatile
  3234  0C44  1D03               	btfss	3,2
  3235  0C45  2C83               	goto	l5798
  3236  0C46                     l733:	
  3237  0C46  0020               	movlb	0	; select bank0
  3238  0C47  1CE6               	btfss	_TypeU+1,1
  3239  0C48  2C83               	goto	l5798
  3240                           
  3241                           ;main.c: 827: {
  3242                           ;main.c: 828: TypeDP.TypeD.digitdp4 =0;
  3243  0C49  11EB               	bcf	_TypeDP,3
  3244                           
  3245                           ;main.c: 829: TypeDP.TypeD.digitdp5 =1;
  3246  0C4A  166B               	bsf	_TypeDP,4
  3247                           
  3248                           ;main.c: 830: TypeDP.TypeD.digitdp6 =0;
  3249  0C4B  12EB               	bcf	_TypeDP,5
  3250                           
  3251                           ;main.c: 831: TypeU.TypeS.arclength =0;
  3252  0C4C  1165               	bcf	_TypeU,2
  3253                           
  3254                           ;main.c: 832: TypeU.TypeS.vtg =1;
  3255  0C4D  14E6               	bsf	_TypeU+1,1
  3256                           
  3257                           ;main.c: 833: TypeU.TypeS.sec =0;
  3258  0C4E  1166               	bcf	_TypeU+1,2
  3259                           
  3260                           ;main.c: 834: disp_hex_window2(setvoltage);
  3261  0C4F  085B               	movf	_setvoltage+1,w
  3262  0C50  0021               	movlb	1	; select bank1
  3263  0C51  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  3264  0C52  0020               	movlb	0	; select bank0
  3265  0C53  085A               	movf	_setvoltage,w
  3266  0C54  0021               	movlb	1	; select bank1
  3267  0C55  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  3268  0C56  319A  227B  3188   	fcall	_disp_hex_window2
  3269                           
  3270                           ;main.c: 836: pstowfstru.pstowfstrs.Lo_setvoltage=setvoltage;
  3271  0C59  0020               	movlb	0	; select bank0
  3272  0C5A  085A               	movf	_setvoltage,w
  3273  0C5B  0021               	movlb	1	; select bank1
  3274  0C5C  00ED               	movwf	??_main^(0+128)
  3275  0C5D  086D               	movf	??_main^(0+128),w
  3276  0C5E  0024               	movlb	4	; select bank4
  3277  0C5F  00D4               	movwf	(_pstowfstru^(0+512)+6)
  3278                           
  3279                           ;main.c: 837: pstowfstru.pstowfstrs.Hi_setvoltage=setvoltage >> 8;
  3280  0C60  0020               	movlb	0	; select bank0
  3281  0C61  085B               	movf	_setvoltage+1,w
  3282  0C62  0021               	movlb	1	; select bank1
  3283  0C63  00ED               	movwf	??_main^(0+128)
  3284  0C64  086D               	movf	??_main^(0+128),w
  3285  0C65  0024               	movlb	4	; select bank4
  3286  0C66  00D3               	movwf	(_pstowfstru^(0+512)+5)
  3287                           
  3288                           ;main.c: 838: count_1ms=0;
  3289  0C67  0023               	movlb	3	; select bank3
  3290  0C68  01B2               	clrf	_count_1ms^(0+384)	;volatile
  3291  0C69  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3292                           
  3293                           ;main.c: 839: onesecf=1;
  3294  0C6A  3001               	movlw	1
  3295  0C6B  0021               	movlb	1	; select bank1
  3296  0C6C  00ED               	movwf	??_main^(0+128)
  3297  0C6D  086D               	movf	??_main^(0+128),w
  3298  0C6E  0022               	movlb	2	; select bank2
  3299  0C6F  00D3               	movwf	_onesecf^(0+256)	;volatile
  3300                           
  3301                           ;main.c: 840: txonf=1;
  3302  0C70  3001               	movlw	1
  3303  0C71  0021               	movlb	1	; select bank1
  3304  0C72  00ED               	movwf	??_main^(0+128)
  3305  0C73  086D               	movf	??_main^(0+128),w
  3306  0C74  0023               	movlb	3	; select bank3
  3307  0C75  00D6               	movwf	_txonf^(0+384)	;volatile
  3308                           
  3309                           ;main.c: 841: prevsetvoltage=setvoltage;
  3310  0C76  0020               	movlb	0	; select bank0
  3311  0C77  085B               	movf	_setvoltage+1,w
  3312  0C78  0023               	movlb	3	; select bank3
  3313  0C79  00C3               	movwf	(_prevsetvoltage+1)^(0+384)
  3314  0C7A  0020               	movlb	0	; select bank0
  3315  0C7B  085A               	movf	_setvoltage,w
  3316  0C7C  0023               	movlb	3	; select bank3
  3317  0C7D  00C2               	movwf	_prevsetvoltage^(0+384)
  3318                           
  3319                           ;main.c: 842: parclength=100;
  3320  0C7E  3064               	movlw	100
  3321  0C7F  0024               	movlb	4	; select bank4
  3322  0C80  00EB               	movwf	_parclength^(0+512)
  3323  0C81  3000               	movlw	0
  3324  0C82  00EC               	movwf	(_parclength^(0+512)+1)
  3325  0C83                     l5798:	
  3326                           
  3327                           ;main.c: 843: }
  3328                           ;main.c: 846: if(((parclength!=pstowfstru.pstowfstrs.arclength) || dispupdatef==1) && (T
      +                          ypeU.TypeS.arclength==1))
  3329  0C83  0024               	movlb	4	; select bank4
  3330  0C84  0855               	movf	(_pstowfstru^(0+512)+7),w
  3331  0C85  0021               	movlb	1	; select bank1
  3332  0C86  00ED               	movwf	??_main^(0+128)
  3333  0C87  01EE               	clrf	(??_main^(0+128)+1)
  3334  0C88  0024               	movlb	4	; select bank4
  3335  0C89  086C               	movf	(_parclength+1)^(0+512),w
  3336  0C8A  0021               	movlb	1	; select bank1
  3337  0C8B  066E               	xorwf	(??_main+1)^(0+128),w
  3338  0C8C  1D03               	skipz
  3339  0C8D  2C92               	goto	u8675
  3340  0C8E  0024               	movlb	4	; select bank4
  3341  0C8F  086B               	movf	_parclength^(0+512),w
  3342  0C90  0021               	movlb	1	; select bank1
  3343  0C91  066D               	xorwf	??_main^(0+128),w
  3344  0C92                     u8675:	
  3345  0C92  1D03               	skipz
  3346  0C93  2C98               	goto	l736
  3347  0C94  0020               	movlb	0	; select bank0
  3348  0C95  036F               	decf	_dispupdatef,w	;volatile
  3349  0C96  1D03               	btfss	3,2
  3350  0C97  2D0F               	goto	l5844
  3351  0C98                     l736:	
  3352  0C98  0020               	movlb	0	; select bank0
  3353  0C99  1D65               	btfss	_TypeU,2
  3354  0C9A  2D0F               	goto	l5844
  3355                           
  3356                           ;main.c: 847: {
  3357                           ;main.c: 850: if(weldmode=='P')
  3358  0C9B  3050               	movlw	80
  3359  0C9C  0664               	xorwf	_weldmode,w	;volatile
  3360  0C9D  1D03               	btfss	3,2
  3361  0C9E  2CBE               	goto	l737
  3362                           
  3363                           ;main.c: 851: {
  3364                           ;main.c: 852: if(pstowfstru.pstowfstrs.arclength>=40)
  3365  0C9F  3028               	movlw	40
  3366  0CA0  0024               	movlb	4	; select bank4
  3367  0CA1  0255               	subwf	(_pstowfstru^(0+512)+7),w
  3368  0CA2  1C03               	skipc
  3369  0CA3  2CAC               	goto	l5808
  3370                           
  3371                           ;main.c: 853: disparclength=pstowfstru.pstowfstrs.arclength-40;
  3372  0CA4  0855               	movf	(_pstowfstru^(0+512)+7),w
  3373  0CA5  3ED8               	addlw	216
  3374  0CA6  00BE               	movwf	_disparclength^(0+512)
  3375  0CA7  30FF               	movlw	255
  3376  0CA8  1803               	skipnc
  3377  0CA9  3000               	movlw	0
  3378  0CAA  00BF               	movwf	(_disparclength^(0+512)+1)
  3379  0CAB  2CBE               	goto	l737
  3380  0CAC                     l5808:	
  3381                           
  3382                           ;main.c: 854: else
  3383                           ;main.c: 855: disparclength=40 - pstowfstru.pstowfstrs.arclength;
  3384  0CAC  0855               	movf	(_pstowfstru^(0+512)+7),w
  3385  0CAD  0021               	movlb	1	; select bank1
  3386  0CAE  00ED               	movwf	??_main^(0+128)
  3387  0CAF  01EE               	clrf	(??_main^(0+128)+1)
  3388  0CB0  09ED               	comf	??_main^(0+128),f
  3389  0CB1  09EE               	comf	(??_main^(0+128)+1),f
  3390  0CB2  0AED               	incf	??_main^(0+128),f
  3391  0CB3  1903               	skipnz
  3392  0CB4  0AEE               	incf	(??_main^(0+128)+1),f
  3393  0CB5  086D               	movf	??_main^(0+128),w
  3394  0CB6  3E28               	addlw	40
  3395  0CB7  0024               	movlb	4	; select bank4
  3396  0CB8  00BE               	movwf	_disparclength^(0+512)
  3397  0CB9  3000               	movlw	0
  3398  0CBA  0021               	movlb	1	; select bank1
  3399  0CBB  3D6E               	addwfc	(??_main+1)^(0+128),w
  3400  0CBC  0024               	movlb	4	; select bank4
  3401  0CBD  00BF               	movwf	(_disparclength+1)^(0+512)
  3402  0CBE                     l737:	
  3403                           
  3404                           ;main.c: 856: }
  3405                           ;main.c: 858: if(weldmode=='G')
  3406  0CBE  3047               	movlw	71
  3407  0CBF  0020               	movlb	0	; select bank0
  3408  0CC0  0664               	xorwf	_weldmode,w	;volatile
  3409  0CC1  1D03               	btfss	3,2
  3410  0CC2  2CCF               	goto	l5812
  3411                           
  3412                           ;main.c: 859: {
  3413                           ;main.c: 860: disparclength=pstowfstru.pstowfstrs.arclength;
  3414  0CC3  0024               	movlb	4	; select bank4
  3415  0CC4  0855               	movf	(_pstowfstru^(0+512)+7),w
  3416  0CC5  0021               	movlb	1	; select bank1
  3417  0CC6  00ED               	movwf	??_main^(0+128)
  3418  0CC7  01EE               	clrf	(??_main^(0+128)+1)
  3419  0CC8  086D               	movf	??_main^(0+128),w
  3420  0CC9  0024               	movlb	4	; select bank4
  3421  0CCA  00BE               	movwf	_disparclength^(0+512)
  3422  0CCB  0021               	movlb	1	; select bank1
  3423  0CCC  086E               	movf	(??_main+1)^(0+128),w
  3424  0CCD  0024               	movlb	4	; select bank4
  3425  0CCE  00BF               	movwf	(_disparclength+1)^(0+512)
  3426  0CCF                     l5812:	
  3427                           
  3428                           ;main.c: 861: }
  3429                           ;main.c: 863: TypeDP.TypeD.digitdp4 =0;
  3430  0CCF  0020               	movlb	0	; select bank0
  3431  0CD0  11EB               	bcf	_TypeDP,3
  3432                           
  3433                           ;main.c: 864: TypeDP.TypeD.digitdp5 =0;
  3434  0CD1  126B               	bcf	_TypeDP,4
  3435                           
  3436                           ;main.c: 865: TypeDP.TypeD.digitdp6 =0;
  3437  0CD2  12EB               	bcf	_TypeDP,5
  3438                           
  3439                           ;main.c: 866: TypeU.TypeS.arclength =1;
  3440  0CD3  1565               	bsf	_TypeU,2
  3441                           
  3442                           ;main.c: 867: TypeU.TypeS.vtg =0;
  3443  0CD4  10E6               	bcf	_TypeU+1,1
  3444                           
  3445                           ;main.c: 868: TypeU.TypeS.sec =0;
  3446  0CD5  1166               	bcf	_TypeU+1,2
  3447                           
  3448                           ;main.c: 869: disp_hex_window2(disparclength);
  3449  0CD6  0024               	movlb	4	; select bank4
  3450  0CD7  083F               	movf	(_disparclength+1)^(0+512),w
  3451  0CD8  0021               	movlb	1	; select bank1
  3452  0CD9  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  3453  0CDA  0024               	movlb	4	; select bank4
  3454  0CDB  083E               	movf	_disparclength^(0+512),w
  3455  0CDC  0021               	movlb	1	; select bank1
  3456  0CDD  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  3457  0CDE  319A  227B  3188   	fcall	_disp_hex_window2
  3458                           
  3459                           ;main.c: 872: if(weldmode=='P')
  3460  0CE1  3050               	movlw	80
  3461  0CE2  0020               	movlb	0	; select bank0
  3462  0CE3  0664               	xorwf	_weldmode,w	;volatile
  3463  0CE4  1D03               	btfss	3,2
  3464  0CE5  2CED               	goto	l5834
  3465                           
  3466                           ;main.c: 873: {
  3467                           ;main.c: 874: if(pstowfstru.pstowfstrs.arclength>=40)
  3468  0CE6  3028               	movlw	40
  3469  0CE7  0024               	movlb	4	; select bank4
  3470  0CE8  0255               	subwf	(_pstowfstru^(0+512)+7),w
  3471  0CE9  1803               	btfsc	3,0
  3472  0CEA  2CED               	goto	l5834
  3473                           
  3474                           ;main.c: 876: else
  3475                           ;main.c: 877: diswin1[3]=0x26;
  3476                           
  3477                           ;main.c: 875: diswin1[3]=0x25;
  3478  0CEB  3026               	movlw	38
  3479  0CEC  2CEE               	goto	L3
  3480  0CED                     l5834:	
  3481                           ;main.c: 878: }
  3482                           
  3483                           
  3484                           ;main.c: 879: else
  3485                           ;main.c: 880: diswin1[3]=0x25;
  3486  0CED  3025               	movlw	37
  3487  0CEE                     L3:	
  3488  0CEE  0021               	movlb	1	; select bank1
  3489  0CEF  00ED               	movwf	??_main^(0+128)
  3490  0CF0  086D               	movf	??_main^(0+128),w
  3491  0CF1  0023               	movlb	3	; select bank3
  3492  0CF2  00DD               	movwf	(_diswin1^(0+384)+3)
  3493                           
  3494                           ;main.c: 883: count_1ms=0;
  3495  0CF3  01B2               	clrf	_count_1ms^(0+384)	;volatile
  3496  0CF4  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3497                           
  3498                           ;main.c: 884: onesecf=1;
  3499  0CF5  3001               	movlw	1
  3500  0CF6  0021               	movlb	1	; select bank1
  3501  0CF7  00ED               	movwf	??_main^(0+128)
  3502  0CF8  086D               	movf	??_main^(0+128),w
  3503  0CF9  0022               	movlb	2	; select bank2
  3504  0CFA  00D3               	movwf	_onesecf^(0+256)	;volatile
  3505                           
  3506                           ;main.c: 885: txonf=1;
  3507  0CFB  3001               	movlw	1
  3508  0CFC  0021               	movlb	1	; select bank1
  3509  0CFD  00ED               	movwf	??_main^(0+128)
  3510  0CFE  086D               	movf	??_main^(0+128),w
  3511  0CFF  0023               	movlb	3	; select bank3
  3512  0D00  00D6               	movwf	_txonf^(0+384)	;volatile
  3513                           
  3514                           ;main.c: 886: prevsetvoltage=0;
  3515  0D01  01C2               	clrf	_prevsetvoltage^(0+384)
  3516  0D02  01C3               	clrf	(_prevsetvoltage+1)^(0+384)
  3517                           
  3518                           ;main.c: 887: parclength=pstowfstru.pstowfstrs.arclength;
  3519  0D03  0024               	movlb	4	; select bank4
  3520  0D04  0855               	movf	(_pstowfstru^(0+512)+7),w
  3521  0D05  0021               	movlb	1	; select bank1
  3522  0D06  00ED               	movwf	??_main^(0+128)
  3523  0D07  01EE               	clrf	(??_main^(0+128)+1)
  3524  0D08  086D               	movf	??_main^(0+128),w
  3525  0D09  0024               	movlb	4	; select bank4
  3526  0D0A  00EB               	movwf	_parclength^(0+512)
  3527  0D0B  0021               	movlb	1	; select bank1
  3528  0D0C  086E               	movf	(??_main+1)^(0+128),w
  3529  0D0D  0024               	movlb	4	; select bank4
  3530  0D0E  00EC               	movwf	(_parclength+1)^(0+512)
  3531  0D0F                     l5844:	
  3532                           
  3533                           ;main.c: 888: }
  3534                           ;main.c: 891: if(psstatusu.psstatuss.gasoncommand!=1)
  3535  0D0F  0020               	movlb	0	; select bank0
  3536  0D10  1CEC               	btfss	_psstatusu,1
  3537                           
  3538                           ;main.c: 892: PORTCbits.RC3 =0;
  3539  0D11  118E               	bcf	14,3	;volatile
  3540                           
  3541                           ;main.c: 893: if((psstatusu.psstatuss.motoroncommand!=1) || ((TORCH == 'X') && (wfstatus
      +                          u.wfstatuss.twotfourtmode1 == 0)) )
  3542  0D12  1DEC               	btfss	_psstatusu,3
  3543  0D13  2D19               	goto	l5852
  3544  0D14  3058               	movlw	88
  3545  0D15  066E               	xorwf	_TORCH,w
  3546  0D16  1903               	btfsc	3,2
  3547  0D17  186D               	btfsc	_wfstatusu,0
  3548  0D18  2D2E               	goto	l5854
  3549  0D19                     l5852:	
  3550                           
  3551                           ;main.c: 894: Update_PWM(setwirespeed*0);
  3552  0D19  085D               	movf	_setwirespeed+1,w
  3553  0D1A  0021               	movlb	1	; select bank1
  3554  0D1B  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  3555  0D1C  0020               	movlb	0	; select bank0
  3556  0D1D  085C               	movf	_setwirespeed,w
  3557  0D1E  0021               	movlb	1	; select bank1
  3558  0D1F  00A0               	movwf	___wmul@multiplier^(0+128)
  3559  0D20  3000               	movlw	0
  3560  0D21  00A2               	movwf	___wmul@multiplicand^(0+128)
  3561  0D22  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  3562  0D23  3198  20BF  3188   	fcall	___wmul
  3563  0D26  0021               	movlb	1	; select bank1
  3564  0D27  0821               	movf	(?___wmul+1)^(0+128),w
  3565  0D28  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  3566  0D29  0820               	movf	?___wmul^(0+128),w
  3567  0D2A  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  3568  0D2B  3199  2128  3188   	fcall	_Update_PWM
  3569  0D2E                     l5854:	
  3570                           
  3571                           ;main.c: 896: openloopcnt =0;
  3572  0D2E  0024               	movlb	4	; select bank4
  3573  0D2F  01C8               	clrf	_openloopcnt^(0+512)
  3574  0D30  01C9               	clrf	(_openloopcnt+1)^(0+512)
  3575                           
  3576                           ;main.c: 897: softstartf =0;
  3577  0D31  0023               	movlb	3	; select bank3
  3578  0D32  01D4               	clrf	_softstartf^(0+384)	;volatile
  3579                           
  3580                           ;main.c: 898: dispupdatef =0;
  3581  0D33  0020               	movlb	0	; select bank0
  3582  0D34  01EF               	clrf	_dispupdatef	;volatile
  3583                           
  3584                           ;main.c: 899: closeloopf=0;
  3585  0D35  0022               	movlb	2	; select bank2
  3586  0D36  01BD               	clrf	_closeloopf^(0+256)
  3587                           
  3588                           ;main.c: 900: cyclestrtf=0;
  3589  0D37  01C3               	clrf	_cyclestrtf^(0+256)
  3590                           
  3591                           ;main.c: 902: psstatusu.psstatuss.creepspeedon=1;
  3592  0D38  0020               	movlb	0	; select bank0
  3593  0D39  16EC               	bsf	_psstatusu,5
  3594                           
  3595                           ;main.c: 905: }
  3596  0D3A  2FE7               	goto	l5998
  3597  0D3B                     l721:	
  3598                           
  3599                           ;main.c: 907: else if(psstatusu.psstatuss.weldoncyclestrt==1)
  3600  0D3B  0020               	movlb	0	; select bank0
  3601  0D3C  1D6C               	btfss	_psstatusu,2
  3602  0D3D  2FE7               	goto	l5998
  3603                           
  3604                           ;main.c: 908: {
  3605                           ;main.c: 910: if(cEditfg == 1)
  3606  0D3E  035E               	decf	_cEditfg,w
  3607  0D3F  1D03               	btfss	3,2
  3608  0D40  2D6A               	goto	l5880
  3609                           
  3610                           ;main.c: 911: {
  3611                           ;main.c: 912: if((prevsetwirespeed!=setwirespeed))
  3612  0D41  085D               	movf	_setwirespeed+1,w
  3613  0D42  0022               	movlb	2	; select bank2
  3614  0D43  0627               	xorwf	(_prevsetwirespeed+1)^(0+256),w
  3615  0D44  1D03               	skipz
  3616  0D45  2D4A               	goto	u8815
  3617  0D46  0020               	movlb	0	; select bank0
  3618  0D47  085C               	movf	_setwirespeed,w
  3619  0D48  0022               	movlb	2	; select bank2
  3620  0D49  0626               	xorwf	_prevsetwirespeed^(0+256),w
  3621  0D4A                     u8815:	
  3622  0D4A  1903               	skipnz
  3623  0D4B  2D6A               	goto	l5880
  3624                           
  3625                           ;main.c: 913: {
  3626                           ;main.c: 914: pstowfstru.pstowfstrs.setwspeed=setwirespeed;
  3627  0D4C  0020               	movlb	0	; select bank0
  3628  0D4D  085C               	movf	_setwirespeed,w
  3629  0D4E  0021               	movlb	1	; select bank1
  3630  0D4F  00ED               	movwf	??_main^(0+128)
  3631  0D50  086D               	movf	??_main^(0+128),w
  3632  0D51  0024               	movlb	4	; select bank4
  3633  0D52  00CF               	movwf	(_pstowfstru^(0+512)+1)
  3634                           
  3635                           ;main.c: 916: count_1ms=0;
  3636  0D53  0023               	movlb	3	; select bank3
  3637  0D54  01B2               	clrf	_count_1ms^(0+384)	;volatile
  3638  0D55  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3639                           
  3640                           ;main.c: 917: onesecf=1;
  3641  0D56  3001               	movlw	1
  3642  0D57  0021               	movlb	1	; select bank1
  3643  0D58  00ED               	movwf	??_main^(0+128)
  3644  0D59  086D               	movf	??_main^(0+128),w
  3645  0D5A  0022               	movlb	2	; select bank2
  3646  0D5B  00D3               	movwf	_onesecf^(0+256)	;volatile
  3647                           
  3648                           ;main.c: 918: txonf=1;
  3649  0D5C  3001               	movlw	1
  3650  0D5D  0021               	movlb	1	; select bank1
  3651  0D5E  00ED               	movwf	??_main^(0+128)
  3652  0D5F  086D               	movf	??_main^(0+128),w
  3653  0D60  0023               	movlb	3	; select bank3
  3654  0D61  00D6               	movwf	_txonf^(0+384)	;volatile
  3655                           
  3656                           ;main.c: 920: prevsetwirespeed=setwirespeed;
  3657  0D62  0020               	movlb	0	; select bank0
  3658  0D63  085D               	movf	_setwirespeed+1,w
  3659  0D64  0022               	movlb	2	; select bank2
  3660  0D65  00A7               	movwf	(_prevsetwirespeed+1)^(0+256)
  3661  0D66  0020               	movlb	0	; select bank0
  3662  0D67  085C               	movf	_setwirespeed,w
  3663  0D68  0022               	movlb	2	; select bank2
  3664  0D69  00A6               	movwf	_prevsetwirespeed^(0+256)
  3665  0D6A                     l5880:	
  3666                           
  3667                           ;main.c: 921: }
  3668                           ;main.c: 922: }
  3669                           ;main.c: 923: if(cEditfg == 1)
  3670  0D6A  0020               	movlb	0	; select bank0
  3671  0D6B  035E               	decf	_cEditfg,w
  3672  0D6C  1D03               	btfss	3,2
  3673  0D6D  2D9E               	goto	l5894
  3674                           
  3675                           ;main.c: 924: {
  3676                           ;main.c: 925: if(prevsetvoltage!=setvoltage)
  3677  0D6E  085B               	movf	_setvoltage+1,w
  3678  0D6F  0023               	movlb	3	; select bank3
  3679  0D70  0643               	xorwf	(_prevsetvoltage+1)^(0+384),w
  3680  0D71  1D03               	skipz
  3681  0D72  2D77               	goto	u8835
  3682  0D73  0020               	movlb	0	; select bank0
  3683  0D74  085A               	movf	_setvoltage,w
  3684  0D75  0023               	movlb	3	; select bank3
  3685  0D76  0642               	xorwf	_prevsetvoltage^(0+384),w
  3686  0D77                     u8835:	
  3687  0D77  1903               	skipnz
  3688  0D78  2D9E               	goto	l5894
  3689                           
  3690                           ;main.c: 926: {
  3691                           ;main.c: 927: pstowfstru.pstowfstrs.Lo_setvoltage=setvoltage;
  3692  0D79  0020               	movlb	0	; select bank0
  3693  0D7A  085A               	movf	_setvoltage,w
  3694  0D7B  0021               	movlb	1	; select bank1
  3695  0D7C  00ED               	movwf	??_main^(0+128)
  3696  0D7D  086D               	movf	??_main^(0+128),w
  3697  0D7E  0024               	movlb	4	; select bank4
  3698  0D7F  00D4               	movwf	(_pstowfstru^(0+512)+6)
  3699                           
  3700                           ;main.c: 928: pstowfstru.pstowfstrs.Hi_setvoltage=setvoltage >> 8;
  3701  0D80  0020               	movlb	0	; select bank0
  3702  0D81  085B               	movf	_setvoltage+1,w
  3703  0D82  0021               	movlb	1	; select bank1
  3704  0D83  00ED               	movwf	??_main^(0+128)
  3705  0D84  086D               	movf	??_main^(0+128),w
  3706  0D85  0024               	movlb	4	; select bank4
  3707  0D86  00D3               	movwf	(_pstowfstru^(0+512)+5)
  3708                           
  3709                           ;main.c: 929: count_1ms=0;
  3710  0D87  0023               	movlb	3	; select bank3
  3711  0D88  01B2               	clrf	_count_1ms^(0+384)	;volatile
  3712  0D89  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3713                           
  3714                           ;main.c: 930: onesecf=1;
  3715  0D8A  3001               	movlw	1
  3716  0D8B  0021               	movlb	1	; select bank1
  3717  0D8C  00ED               	movwf	??_main^(0+128)
  3718  0D8D  086D               	movf	??_main^(0+128),w
  3719  0D8E  0022               	movlb	2	; select bank2
  3720  0D8F  00D3               	movwf	_onesecf^(0+256)	;volatile
  3721                           
  3722                           ;main.c: 931: txonf=1;
  3723  0D90  3001               	movlw	1
  3724  0D91  0021               	movlb	1	; select bank1
  3725  0D92  00ED               	movwf	??_main^(0+128)
  3726  0D93  086D               	movf	??_main^(0+128),w
  3727  0D94  0023               	movlb	3	; select bank3
  3728  0D95  00D6               	movwf	_txonf^(0+384)	;volatile
  3729                           
  3730                           ;main.c: 932: prevsetvoltage=setvoltage;
  3731  0D96  0020               	movlb	0	; select bank0
  3732  0D97  085B               	movf	_setvoltage+1,w
  3733  0D98  0023               	movlb	3	; select bank3
  3734  0D99  00C3               	movwf	(_prevsetvoltage+1)^(0+384)
  3735  0D9A  0020               	movlb	0	; select bank0
  3736  0D9B  085A               	movf	_setvoltage,w
  3737  0D9C  0023               	movlb	3	; select bank3
  3738  0D9D  00C2               	movwf	_prevsetvoltage^(0+384)
  3739  0D9E                     l5894:	
  3740                           
  3741                           ;main.c: 933: }
  3742                           ;main.c: 934: }
  3743                           ;main.c: 936: if(psstatusu.psstatuss.gasoncommand==1)
  3744  0D9E  0020               	movlb	0	; select bank0
  3745  0D9F  1CEC               	btfss	_psstatusu,1
  3746  0DA0  2DA3               	goto	l755
  3747                           
  3748                           ;main.c: 937: {
  3749                           ;main.c: 938: PORTCbits.RC3 =1;
  3750  0DA1  158E               	bsf	14,3	;volatile
  3751                           
  3752                           ;main.c: 939: }
  3753  0DA2  2DA4               	goto	l756
  3754  0DA3                     l755:	
  3755                           
  3756                           ;main.c: 940: else
  3757                           ;main.c: 941: {
  3758                           ;main.c: 942: PORTCbits.RC3 =0;
  3759  0DA3  118E               	bcf	14,3	;volatile
  3760  0DA4                     l756:	
  3761                           
  3762                           ;main.c: 943: }
  3763                           ;main.c: 944: if(psstatusu.psstatuss.motoroncommand==1)
  3764  0DA4  1DEC               	btfss	_psstatusu,3
  3765  0DA5  2F9D               	goto	l757
  3766                           
  3767                           ;main.c: 945: {
  3768                           ;main.c: 946: if(psstatusu.psstatuss.creepspeedon==1)
  3769  0DA6  1EEC               	btfss	_psstatusu,5
  3770  0DA7  2E3A               	goto	l758
  3771                           
  3772                           ;main.c: 947: {
  3773                           ;main.c: 948: cyclestrtf=0;
  3774  0DA8  0022               	movlb	2	; select bank2
  3775  0DA9  01C3               	clrf	_cyclestrtf^(0+256)
  3776                           
  3777                           ;main.c: 950: if(setwirespeed<=50){
  3778  0DAA  3000               	movlw	0
  3779  0DAB  0020               	movlb	0	; select bank0
  3780  0DAC  025D               	subwf	_setwirespeed+1,w
  3781  0DAD  3033               	movlw	51
  3782  0DAE  1903               	skipnz
  3783  0DAF  025C               	subwf	_setwirespeed,w
  3784  0DB0  1803               	skipnc
  3785  0DB1  2DB7               	goto	l5906
  3786                           
  3787                           ;main.c: 951: MTR_VTG_CONSTANT=3.8;
  3788  0DB2  3033               	movlw	51
  3789  0DB3  0023               	movlb	3	; select bank3
  3790  0DB4  00E2               	movwf	_MTR_VTG_CONSTANT^(0+384)
  3791  0DB5  3073               	movlw	115
  3792  0DB6  2DBB               	goto	L4
  3793  0DB7                     l5906:	
  3794                           ;main.c: 952: }
  3795                           
  3796                           
  3797                           ;main.c: 953: else{
  3798                           ;main.c: 955: MTR_VTG_CONSTANT=3.4;
  3799  0DB7  309A               	movlw	154
  3800  0DB8  0023               	movlb	3	; select bank3
  3801  0DB9  00E2               	movwf	_MTR_VTG_CONSTANT^(0+384)
  3802  0DBA  3059               	movlw	89
  3803  0DBB                     L4:	
  3804  0DBB  00E3               	movwf	(_MTR_VTG_CONSTANT+1)^(0+384)
  3805  0DBC  3040               	movlw	64
  3806  0DBD  00E4               	movwf	(_MTR_VTG_CONSTANT+2)^(0+384)
  3807                           
  3808                           ;main.c: 956: }
  3809                           ;main.c: 958: newsetwirespeed=setwirespeed*creep_speed*0.01;
  3810  0DBE  0020               	movlb	0	; select bank0
  3811  0DBF  085D               	movf	_setwirespeed+1,w
  3812  0DC0  0021               	movlb	1	; select bank1
  3813  0DC1  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  3814  0DC2  0020               	movlb	0	; select bank0
  3815  0DC3  085C               	movf	_setwirespeed,w
  3816  0DC4  0021               	movlb	1	; select bank1
  3817  0DC5  00A2               	movwf	___wmul@multiplicand^(0+128)
  3818  0DC6  0022               	movlb	2	; select bank2
  3819  0DC7  0842               	movf	_creep_speed^(0+256),w	;volatile
  3820  0DC8  0021               	movlb	1	; select bank1
  3821  0DC9  00ED               	movwf	??_main^(0+128)
  3822  0DCA  01EE               	clrf	(??_main^(0+128)+1)
  3823  0DCB  086D               	movf	??_main^(0+128),w
  3824  0DCC  00A0               	movwf	___wmul@multiplier^(0+128)
  3825  0DCD  086E               	movf	(??_main+1)^(0+128),w
  3826  0DCE  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  3827  0DCF  3198  20BF  3188   	fcall	___wmul
  3828  0DD2  0021               	movlb	1	; select bank1
  3829  0DD3  0821               	movf	(?___wmul+1)^(0+128),w
  3830  0DD4  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  3831  0DD5  0820               	movf	?___wmul^(0+128),w
  3832  0DD6  00A8               	movwf	___lwtoft@c^(0+128)
  3833  0DD7  3198  2035  3188   	fcall	___lwtoft
  3834  0DDA  0021               	movlb	1	; select bank1
  3835  0DDB  0828               	movf	?___lwtoft^(0+128),w
  3836  0DDC  00B8               	movwf	___ftmul@f2^(0+128)
  3837  0DDD  0829               	movf	(?___lwtoft+1)^(0+128),w
  3838  0DDE  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3839  0DDF  082A               	movf	(?___lwtoft+2)^(0+128),w
  3840  0DE0  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3841  0DE1  30D7               	movlw	215
  3842  0DE2  00B5               	movwf	___ftmul@f1^(0+128)
  3843  0DE3  3023               	movlw	35
  3844  0DE4  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3845  0DE5  303C               	movlw	60
  3846  0DE6  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3847  0DE7  3187  2714  3188   	fcall	___ftmul
  3848  0DEA  0021               	movlb	1	; select bank1
  3849  0DEB  0835               	movf	?___ftmul^(0+128),w
  3850  0DEC  00C5               	movwf	___fttol@f1^(0+128)
  3851  0DED  0836               	movf	(?___ftmul+1)^(0+128),w
  3852  0DEE  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3853  0DEF  0837               	movf	(?___ftmul+2)^(0+128),w
  3854  0DF0  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3855  0DF1  319E  26D0  3188   	fcall	___fttol
  3856  0DF4  0021               	movlb	1	; select bank1
  3857  0DF5  0846               	movf	(?___fttol^(0+128)+1),w
  3858  0DF6  0020               	movlb	0	; select bank0
  3859  0DF7  00E8               	movwf	_newsetwirespeed+1
  3860  0DF8  0021               	movlb	1	; select bank1
  3861  0DF9  0845               	movf	?___fttol^(0+128),w
  3862  0DFA  0020               	movlb	0	; select bank0
  3863  0DFB  00E7               	movwf	_newsetwirespeed
  3864                           
  3865                           ;main.c: 960: if(newsetwirespeed<=10)
  3866  0DFC  3000               	movlw	0
  3867  0DFD  0268               	subwf	_newsetwirespeed+1,w
  3868  0DFE  300B               	movlw	11
  3869  0DFF  1903               	skipnz
  3870  0E00  0267               	subwf	_newsetwirespeed,w
  3871  0E01  1803               	skipnc
  3872  0E02  2E07               	goto	l5914
  3873                           
  3874                           ;main.c: 961: newsetwirespeed=10;
  3875  0E03  300A               	movlw	10
  3876  0E04  00E7               	movwf	_newsetwirespeed
  3877  0E05  3000               	movlw	0
  3878  0E06  00E8               	movwf	_newsetwirespeed+1
  3879  0E07                     l5914:	
  3880                           
  3881                           ;main.c: 966: Update_PWM(newsetwirespeed*MTR_VTG_CONSTANT);
  3882  0E07  0868               	movf	_newsetwirespeed+1,w
  3883  0E08  0021               	movlb	1	; select bank1
  3884  0E09  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  3885  0E0A  0020               	movlb	0	; select bank0
  3886  0E0B  0867               	movf	_newsetwirespeed,w
  3887  0E0C  0021               	movlb	1	; select bank1
  3888  0E0D  00A8               	movwf	___lwtoft@c^(0+128)
  3889  0E0E  3198  2035  3188   	fcall	___lwtoft
  3890  0E11  0021               	movlb	1	; select bank1
  3891  0E12  0828               	movf	?___lwtoft^(0+128),w
  3892  0E13  00B8               	movwf	___ftmul@f2^(0+128)
  3893  0E14  0829               	movf	(?___lwtoft+1)^(0+128),w
  3894  0E15  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3895  0E16  082A               	movf	(?___lwtoft+2)^(0+128),w
  3896  0E17  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3897  0E18  0023               	movlb	3	; select bank3
  3898  0E19  0862               	movf	_MTR_VTG_CONSTANT^(0+384),w
  3899  0E1A  0021               	movlb	1	; select bank1
  3900  0E1B  00B5               	movwf	___ftmul@f1^(0+128)
  3901  0E1C  0023               	movlb	3	; select bank3
  3902  0E1D  0863               	movf	(_MTR_VTG_CONSTANT+1)^(0+384),w
  3903  0E1E  0021               	movlb	1	; select bank1
  3904  0E1F  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3905  0E20  0023               	movlb	3	; select bank3
  3906  0E21  0864               	movf	(_MTR_VTG_CONSTANT+2)^(0+384),w
  3907  0E22  0021               	movlb	1	; select bank1
  3908  0E23  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3909  0E24  3187  2714  3188   	fcall	___ftmul
  3910  0E27  0021               	movlb	1	; select bank1
  3911  0E28  0835               	movf	?___ftmul^(0+128),w
  3912  0E29  00C5               	movwf	___fttol@f1^(0+128)
  3913  0E2A  0836               	movf	(?___ftmul+1)^(0+128),w
  3914  0E2B  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3915  0E2C  0837               	movf	(?___ftmul+2)^(0+128),w
  3916  0E2D  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3917  0E2E  319E  26D0  3188   	fcall	___fttol
  3918  0E31  0021               	movlb	1	; select bank1
  3919  0E32  0846               	movf	(?___fttol^(0+128)+1),w
  3920  0E33  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  3921  0E34  0845               	movf	?___fttol^(0+128),w
  3922  0E35  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  3923  0E36  3199  2128  3188   	fcall	_Update_PWM
  3924                           
  3925                           ;main.c: 970: }
  3926  0E39  2EE1               	goto	l5948
  3927  0E3A                     l758:	
  3928                           
  3929                           ;main.c: 971: else if(psstatusu.psstatuss.creepspeedon==0)
  3930  0E3A  1AEC               	btfsc	_psstatusu,5
  3931  0E3B  2EE1               	goto	l5948
  3932                           
  3933                           ;main.c: 972: {
  3934                           ;main.c: 973: cyclestrtf=1;
  3935  0E3C  0022               	movlb	2	; select bank2
  3936  0E3D  01C3               	clrf	_cyclestrtf^(0+256)
  3937  0E3E  0AC3               	incf	_cyclestrtf^(0+256),f
  3938                           
  3939                           ;main.c: 974: if(cMtrOverLdfg == 0)
  3940  0E3F  0837               	movf	_cMtrOverLdfg^(0+256),w
  3941  0E40  1D03               	btfss	3,2
  3942  0E41  2E48               	goto	l5922
  3943                           
  3944                           ;main.c: 975: {
  3945                           ;main.c: 976: newsetwirespeed=setwirespeed;
  3946  0E42  0020               	movlb	0	; select bank0
  3947  0E43  085D               	movf	_setwirespeed+1,w
  3948  0E44  00E8               	movwf	_newsetwirespeed+1
  3949  0E45  085C               	movf	_setwirespeed,w
  3950  0E46  00E7               	movwf	_newsetwirespeed
  3951                           
  3952                           ;main.c: 977: }else
  3953  0E47  2E4B               	goto	l5924
  3954  0E48                     l5922:	
  3955                           
  3956                           ;main.c: 978: {
  3957                           ;main.c: 979: newsetwirespeed=0;
  3958  0E48  0020               	movlb	0	; select bank0
  3959  0E49  01E7               	clrf	_newsetwirespeed
  3960  0E4A  01E8               	clrf	_newsetwirespeed+1
  3961  0E4B                     l5924:	
  3962                           
  3963                           ;main.c: 980: }
  3964                           ;main.c: 981: if(closeloopf==0)
  3965  0E4B  0022               	movlb	2	; select bank2
  3966  0E4C  083D               	movf	_closeloopf^(0+256),w
  3967  0E4D  1D03               	btfss	3,2
  3968  0E4E  2EE1               	goto	l5948
  3969                           
  3970                           ;main.c: 982: {
  3971                           ;main.c: 983: Update_PWM(newsetwirespeed*MTR_VTG_CONSTANT);
  3972  0E4F  0020               	movlb	0	; select bank0
  3973  0E50  0868               	movf	_newsetwirespeed+1,w
  3974  0E51  0021               	movlb	1	; select bank1
  3975  0E52  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  3976  0E53  0020               	movlb	0	; select bank0
  3977  0E54  0867               	movf	_newsetwirespeed,w
  3978  0E55  0021               	movlb	1	; select bank1
  3979  0E56  00A8               	movwf	___lwtoft@c^(0+128)
  3980  0E57  3198  2035  3188   	fcall	___lwtoft
  3981  0E5A  0021               	movlb	1	; select bank1
  3982  0E5B  0828               	movf	?___lwtoft^(0+128),w
  3983  0E5C  00B8               	movwf	___ftmul@f2^(0+128)
  3984  0E5D  0829               	movf	(?___lwtoft+1)^(0+128),w
  3985  0E5E  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3986  0E5F  082A               	movf	(?___lwtoft+2)^(0+128),w
  3987  0E60  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3988  0E61  0023               	movlb	3	; select bank3
  3989  0E62  0862               	movf	_MTR_VTG_CONSTANT^(0+384),w
  3990  0E63  0021               	movlb	1	; select bank1
  3991  0E64  00B5               	movwf	___ftmul@f1^(0+128)
  3992  0E65  0023               	movlb	3	; select bank3
  3993  0E66  0863               	movf	(_MTR_VTG_CONSTANT+1)^(0+384),w
  3994  0E67  0021               	movlb	1	; select bank1
  3995  0E68  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3996  0E69  0023               	movlb	3	; select bank3
  3997  0E6A  0864               	movf	(_MTR_VTG_CONSTANT+2)^(0+384),w
  3998  0E6B  0021               	movlb	1	; select bank1
  3999  0E6C  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4000  0E6D  3187  2714  3188   	fcall	___ftmul
  4001  0E70  0021               	movlb	1	; select bank1
  4002  0E71  0835               	movf	?___ftmul^(0+128),w
  4003  0E72  00C5               	movwf	___fttol@f1^(0+128)
  4004  0E73  0836               	movf	(?___ftmul+1)^(0+128),w
  4005  0E74  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4006  0E75  0837               	movf	(?___ftmul+2)^(0+128),w
  4007  0E76  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4008  0E77  319E  26D0  3188   	fcall	___fttol
  4009  0E7A  0021               	movlb	1	; select bank1
  4010  0E7B  0846               	movf	(?___fttol^(0+128)+1),w
  4011  0E7C  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  4012  0E7D  0845               	movf	?___fttol^(0+128),w
  4013  0E7E  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  4014  0E7F  3199  2128  3188   	fcall	_Update_PWM
  4015                           
  4016                           ;main.c: 984: if(wfspeedchangef==1)
  4017  0E82  0022               	movlb	2	; select bank2
  4018  0E83  036F               	decf	_wfspeedchangef^(0+256),w
  4019  0E84  1D03               	btfss	3,2
  4020  0E85  2EDF               	goto	l5946
  4021                           
  4022                           ;main.c: 985: {
  4023                           ;main.c: 987: integral_old=newsetwirespeed*scalefactor2*2.6;
  4024  0E86  3066               	movlw	102
  4025  0E87  0021               	movlb	1	; select bank1
  4026  0E88  00B5               	movwf	___ftmul@f1^(0+128)
  4027  0E89  3026               	movlw	38
  4028  0E8A  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4029  0E8B  3040               	movlw	64
  4030  0E8C  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4031  0E8D  0020               	movlb	0	; select bank0
  4032  0E8E  0868               	movf	_newsetwirespeed+1,w
  4033  0E8F  0021               	movlb	1	; select bank1
  4034  0E90  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  4035  0E91  0020               	movlb	0	; select bank0
  4036  0E92  0867               	movf	_newsetwirespeed,w
  4037  0E93  0021               	movlb	1	; select bank1
  4038  0E94  00A0               	movwf	___wmul@multiplier^(0+128)
  4039  0E95  0023               	movlb	3	; select bank3
  4040  0E96  086D               	movf	(_scalefactor2+1)^(0+384),w
  4041  0E97  0021               	movlb	1	; select bank1
  4042  0E98  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  4043  0E99  0023               	movlb	3	; select bank3
  4044  0E9A  086C               	movf	_scalefactor2^(0+384),w
  4045  0E9B  0021               	movlb	1	; select bank1
  4046  0E9C  00A2               	movwf	___wmul@multiplicand^(0+128)
  4047  0E9D  3198  20BF  3188   	fcall	___wmul
  4048  0EA0  0021               	movlb	1	; select bank1
  4049  0EA1  0821               	movf	(?___wmul+1)^(0+128),w
  4050  0EA2  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  4051  0EA3  0820               	movf	?___wmul^(0+128),w
  4052  0EA4  00A8               	movwf	___lwtoft@c^(0+128)
  4053  0EA5  3198  2035  3188   	fcall	___lwtoft
  4054  0EA8  0021               	movlb	1	; select bank1
  4055  0EA9  0828               	movf	?___lwtoft^(0+128),w
  4056  0EAA  00B8               	movwf	___ftmul@f2^(0+128)
  4057  0EAB  0829               	movf	(?___lwtoft+1)^(0+128),w
  4058  0EAC  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4059  0EAD  082A               	movf	(?___lwtoft+2)^(0+128),w
  4060  0EAE  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4061  0EAF  3187  2714  3188   	fcall	___ftmul
  4062  0EB2  0021               	movlb	1	; select bank1
  4063  0EB3  0835               	movf	?___ftmul^(0+128),w
  4064  0EB4  0023               	movlb	3	; select bank3
  4065  0EB5  00A9               	movwf	_integral_old^(0+384)
  4066  0EB6  0021               	movlb	1	; select bank1
  4067  0EB7  0836               	movf	(?___ftmul+1)^(0+128),w
  4068  0EB8  0023               	movlb	3	; select bank3
  4069  0EB9  00AA               	movwf	(_integral_old+1)^(0+384)
  4070  0EBA  0021               	movlb	1	; select bank1
  4071  0EBB  0837               	movf	(?___ftmul+2)^(0+128),w
  4072  0EBC  0023               	movlb	3	; select bank3
  4073  0EBD  00AB               	movwf	(_integral_old+2)^(0+384)
  4074                           
  4075                           ;main.c: 988: wfspeedchangef=0;
  4076  0EBE  0022               	movlb	2	; select bank2
  4077  0EBF  01EF               	clrf	_wfspeedchangef^(0+256)
  4078                           
  4079                           ;main.c: 989: integral_new =0;
  4080  0EC0  3000               	movlw	0
  4081  0EC1  0023               	movlb	3	; select bank3
  4082  0EC2  00A6               	movwf	_integral_new^(0+384)
  4083  0EC3  3000               	movlw	0
  4084  0EC4  00A7               	movwf	(_integral_new+1)^(0+384)
  4085  0EC5  3000               	movlw	0
  4086  0EC6  00A8               	movwf	(_integral_new+2)^(0+384)
  4087                           
  4088                           ;main.c: 991: error_old =0;
  4089  0EC7  3000               	movlw	0
  4090  0EC8  00A3               	movwf	_error_old^(0+384)
  4091  0EC9  3000               	movlw	0
  4092  0ECA  00A4               	movwf	(_error_old+1)^(0+384)
  4093  0ECB  3000               	movlw	0
  4094  0ECC  00A5               	movwf	(_error_old+2)^(0+384)
  4095                           
  4096                           ;main.c: 992: error_new=0;
  4097  0ECD  3000               	movlw	0
  4098  0ECE  00A0               	movwf	_error_new^(0+384)
  4099  0ECF  3000               	movlw	0
  4100  0ED0  00A1               	movwf	(_error_new+1)^(0+384)
  4101  0ED1  3000               	movlw	0
  4102  0ED2  00A2               	movwf	(_error_new+2)^(0+384)
  4103                           
  4104                           ;main.c: 993: controller_out=0;
  4105  0ED3  3000               	movlw	0
  4106  0ED4  0024               	movlb	4	; select bank4
  4107  0ED5  00A4               	movwf	_controller_out^(0+512)
  4108  0ED6  3000               	movlw	0
  4109  0ED7  00A5               	movwf	(_controller_out+1)^(0+512)
  4110  0ED8  3000               	movlw	0
  4111  0ED9  00A6               	movwf	(_controller_out+2)^(0+512)
  4112                           
  4113                           ;main.c: 994: prevFltpfreq=0;
  4114  0EDA  01CA               	clrf	_prevFltpfreq^(0+512)
  4115  0EDB  01CB               	clrf	(_prevFltpfreq+1)^(0+512)
  4116                           
  4117                           ;main.c: 995: Fltpfreq=0;
  4118  0EDC  0022               	movlb	2	; select bank2
  4119  0EDD  01A0               	clrf	_Fltpfreq^(0+256)
  4120  0EDE  01A1               	clrf	(_Fltpfreq+1)^(0+256)
  4121  0EDF                     l5946:	
  4122                           
  4123                           ;main.c: 996: }
  4124                           ;main.c: 997: closeloopf=1;
  4125  0EDF  01BD               	clrf	_closeloopf^(0+256)
  4126  0EE0  0ABD               	incf	_closeloopf^(0+256),f
  4127  0EE1                     l5948:	
  4128                           
  4129                           ;main.c: 998: }
  4130                           ;main.c: 1001: }
  4131                           ;main.c: 1003: if(psstatusu.psstatuss.craterspeedon==1 && wfstatusu.wfstatuss.twotfourtm
      +                          ode1==1)
  4132  0EE1  0020               	movlb	0	; select bank0
  4133  0EE2  1A6C               	btfsc	_psstatusu,4
  4134  0EE3  1C6D               	btfss	_wfstatusu,0
  4135  0EE4  2EF1               	goto	l768
  4136                           
  4137                           ;main.c: 1004: newsetwirespeed=crater_speed;
  4138  0EE5  0022               	movlb	2	; select bank2
  4139  0EE6  0841               	movf	_crater_speed^(0+256),w	;volatile
  4140  0EE7  0021               	movlb	1	; select bank1
  4141  0EE8  00ED               	movwf	??_main^(0+128)
  4142  0EE9  01EE               	clrf	(??_main^(0+128)+1)
  4143  0EEA  086D               	movf	??_main^(0+128),w
  4144  0EEB  0020               	movlb	0	; select bank0
  4145  0EEC  00E7               	movwf	_newsetwirespeed
  4146  0EED  0021               	movlb	1	; select bank1
  4147  0EEE  086E               	movf	(??_main+1)^(0+128),w
  4148  0EEF  0020               	movlb	0	; select bank0
  4149  0EF0  00E8               	movwf	_newsetwirespeed+1
  4150  0EF1                     l768:	
  4151                           
  4152                           ;main.c: 1006: if(newsetwirespeed >= 10)
  4153  0EF1  3000               	movlw	0
  4154  0EF2  0268               	subwf	_newsetwirespeed+1,w
  4155  0EF3  300A               	movlw	10
  4156  0EF4  1903               	skipnz
  4157  0EF5  0267               	subwf	_newsetwirespeed,w
  4158  0EF6  1C03               	skipc
  4159  0EF7  2F24               	goto	l5956
  4160                           
  4161                           ;main.c: 1007: setpfreq=(3.4*newsetwirespeed);
  4162  0EF8  0868               	movf	_newsetwirespeed+1,w
  4163  0EF9  0021               	movlb	1	; select bank1
  4164  0EFA  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  4165  0EFB  0020               	movlb	0	; select bank0
  4166  0EFC  0867               	movf	_newsetwirespeed,w
  4167  0EFD  0021               	movlb	1	; select bank1
  4168  0EFE  00A8               	movwf	___lwtoft@c^(0+128)
  4169  0EFF  3198  2035  3188   	fcall	___lwtoft
  4170  0F02  0021               	movlb	1	; select bank1
  4171  0F03  0828               	movf	?___lwtoft^(0+128),w
  4172  0F04  00B8               	movwf	___ftmul@f2^(0+128)
  4173  0F05  0829               	movf	(?___lwtoft+1)^(0+128),w
  4174  0F06  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4175  0F07  082A               	movf	(?___lwtoft+2)^(0+128),w
  4176  0F08  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4177  0F09  309A               	movlw	154
  4178  0F0A  00B5               	movwf	___ftmul@f1^(0+128)
  4179  0F0B  3059               	movlw	89
  4180  0F0C  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4181  0F0D  3040               	movlw	64
  4182  0F0E  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4183  0F0F  3187  2714  3188   	fcall	___ftmul
  4184  0F12  0021               	movlb	1	; select bank1
  4185  0F13  0835               	movf	?___ftmul^(0+128),w
  4186  0F14  00C5               	movwf	___fttol@f1^(0+128)
  4187  0F15  0836               	movf	(?___ftmul+1)^(0+128),w
  4188  0F16  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4189  0F17  0837               	movf	(?___ftmul+2)^(0+128),w
  4190  0F18  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4191  0F19  319E  26D0  3188   	fcall	___fttol
  4192  0F1C  0021               	movlb	1	; select bank1
  4193  0F1D  0846               	movf	(?___fttol^(0+128)+1),w
  4194  0F1E  0024               	movlb	4	; select bank4
  4195  0F1F  00CD               	movwf	(_setpfreq+1)^(0+512)
  4196  0F20  0021               	movlb	1	; select bank1
  4197  0F21  0845               	movf	?___fttol^(0+128),w
  4198  0F22  0024               	movlb	4	; select bank4
  4199  0F23  00CC               	movwf	_setpfreq^(0+512)
  4200  0F24                     l5956:	
  4201                           
  4202                           ;main.c: 1008: if(cRelSpeedSign == '+')
  4203  0F24  302B               	movlw	43
  4204  0F25  0022               	movlb	2	; select bank2
  4205  0F26  0639               	xorwf	_cRelSpeedSign^(0+256),w
  4206  0F27  1D03               	btfss	3,2
  4207  0F28  2F35               	goto	l5960
  4208                           
  4209                           ;main.c: 1009: {
  4210                           ;main.c: 1010: Hi_setppwm=(newsetwirespeed+rel_wirespeed)*3.4;
  4211  0F29  0023               	movlb	3	; select bank3
  4212  0F2A  0848               	movf	_rel_wirespeed^(0+384),w
  4213  0F2B  0020               	movlb	0	; select bank0
  4214  0F2C  0767               	addwf	_newsetwirespeed,w
  4215  0F2D  0021               	movlb	1	; select bank1
  4216  0F2E  00A8               	movwf	___lwtoft@c^(0+128)
  4217  0F2F  0023               	movlb	3	; select bank3
  4218  0F30  0849               	movf	(_rel_wirespeed+1)^(0+384),w
  4219  0F31  0020               	movlb	0	; select bank0
  4220  0F32  3D68               	addwfc	_newsetwirespeed+1,w
  4221  0F33  0021               	movlb	1	; select bank1
  4222  0F34  2F49               	goto	L5
  4223  0F35                     l5960:	
  4224                           ;main.c: 1011: }
  4225                           
  4226                           
  4227                           ;main.c: 1012: else
  4228                           ;main.c: 1013: {
  4229                           ;main.c: 1014: Hi_setppwm=(newsetwirespeed-rel_wirespeed)*3.4;
  4230  0F35  0023               	movlb	3	; select bank3
  4231  0F36  0948               	comf	_rel_wirespeed^(0+384),w
  4232  0F37  0021               	movlb	1	; select bank1
  4233  0F38  00ED               	movwf	??_main^(0+128)
  4234  0F39  0023               	movlb	3	; select bank3
  4235  0F3A  0949               	comf	(_rel_wirespeed+1)^(0+384),w
  4236  0F3B  0021               	movlb	1	; select bank1
  4237  0F3C  00EE               	movwf	(??_main^(0+128)+1)
  4238  0F3D  0AED               	incf	??_main^(0+128),f
  4239  0F3E  1903               	skipnz
  4240  0F3F  0AEE               	incf	(??_main^(0+128)+1),f
  4241  0F40  0020               	movlb	0	; select bank0
  4242  0F41  0867               	movf	_newsetwirespeed,w
  4243  0F42  0021               	movlb	1	; select bank1
  4244  0F43  076D               	addwf	??_main^(0+128),w
  4245  0F44  00A8               	movwf	___lwtoft@c^(0+128)
  4246  0F45  0020               	movlb	0	; select bank0
  4247  0F46  0868               	movf	_newsetwirespeed+1,w
  4248  0F47  0021               	movlb	1	; select bank1
  4249  0F48  3D6E               	addwfc	(??_main+1)^(0+128),w
  4250  0F49                     L5:	
  4251  0F49  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  4252  0F4A  3198  2035  3188   	fcall	___lwtoft
  4253  0F4D  0021               	movlb	1	; select bank1
  4254  0F4E  0828               	movf	?___lwtoft^(0+128),w
  4255  0F4F  00B8               	movwf	___ftmul@f2^(0+128)
  4256  0F50  0829               	movf	(?___lwtoft+1)^(0+128),w
  4257  0F51  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4258  0F52  082A               	movf	(?___lwtoft+2)^(0+128),w
  4259  0F53  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4260  0F54  309A               	movlw	154
  4261  0F55  00B5               	movwf	___ftmul@f1^(0+128)
  4262  0F56  3059               	movlw	89
  4263  0F57  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4264  0F58  3040               	movlw	64
  4265  0F59  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4266  0F5A  3187  2714  3188   	fcall	___ftmul
  4267  0F5D  0021               	movlb	1	; select bank1
  4268  0F5E  0835               	movf	?___ftmul^(0+128),w
  4269  0F5F  00C5               	movwf	___fttol@f1^(0+128)
  4270  0F60  0836               	movf	(?___ftmul+1)^(0+128),w
  4271  0F61  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4272  0F62  0837               	movf	(?___ftmul+2)^(0+128),w
  4273  0F63  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4274  0F64  319E  26D0  3188   	fcall	___fttol
  4275  0F67  0021               	movlb	1	; select bank1
  4276  0F68  0846               	movf	(?___fttol^(0+128)+1),w
  4277  0F69  0024               	movlb	4	; select bank4
  4278  0F6A  00AB               	movwf	(_Hi_setppwm+1)^(0+512)
  4279  0F6B  0021               	movlb	1	; select bank1
  4280  0F6C  0845               	movf	?___fttol^(0+128),w
  4281  0F6D  0024               	movlb	4	; select bank4
  4282  0F6E  00AA               	movwf	_Hi_setppwm^(0+512)
  4283                           
  4284                           ;main.c: 1015: }
  4285                           ;main.c: 1017: Lo_setppwm=(newsetwirespeed)*3.4;
  4286  0F6F  0020               	movlb	0	; select bank0
  4287  0F70  0868               	movf	_newsetwirespeed+1,w
  4288  0F71  0021               	movlb	1	; select bank1
  4289  0F72  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  4290  0F73  0020               	movlb	0	; select bank0
  4291  0F74  0867               	movf	_newsetwirespeed,w
  4292  0F75  0021               	movlb	1	; select bank1
  4293  0F76  00A8               	movwf	___lwtoft@c^(0+128)
  4294  0F77  3198  2035  3188   	fcall	___lwtoft
  4295  0F7A  0021               	movlb	1	; select bank1
  4296  0F7B  0828               	movf	?___lwtoft^(0+128),w
  4297  0F7C  00B8               	movwf	___ftmul@f2^(0+128)
  4298  0F7D  0829               	movf	(?___lwtoft+1)^(0+128),w
  4299  0F7E  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4300  0F7F  082A               	movf	(?___lwtoft+2)^(0+128),w
  4301  0F80  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4302  0F81  309A               	movlw	154
  4303  0F82  00B5               	movwf	___ftmul@f1^(0+128)
  4304  0F83  3059               	movlw	89
  4305  0F84  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4306  0F85  3040               	movlw	64
  4307  0F86  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4308  0F87  3187  2714  3188   	fcall	___ftmul
  4309  0F8A  0021               	movlb	1	; select bank1
  4310  0F8B  0835               	movf	?___ftmul^(0+128),w
  4311  0F8C  00C5               	movwf	___fttol@f1^(0+128)
  4312  0F8D  0836               	movf	(?___ftmul+1)^(0+128),w
  4313  0F8E  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4314  0F8F  0837               	movf	(?___ftmul+2)^(0+128),w
  4315  0F90  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4316  0F91  319E  26D0  3188   	fcall	___fttol
  4317  0F94  0021               	movlb	1	; select bank1
  4318  0F95  0846               	movf	(?___fttol^(0+128)+1),w
  4319  0F96  0024               	movlb	4	; select bank4
  4320  0F97  00AD               	movwf	(_Lo_setppwm+1)^(0+512)
  4321  0F98  0021               	movlb	1	; select bank1
  4322  0F99  0845               	movf	?___fttol^(0+128),w
  4323  0F9A  0024               	movlb	4	; select bank4
  4324  0F9B  00AC               	movwf	_Lo_setppwm^(0+512)
  4325                           
  4326                           ;main.c: 1018: }
  4327  0F9C  2FC2               	goto	l5976
  4328  0F9D                     l757:	
  4329                           
  4330                           ;main.c: 1019: else if((psstatusu.psstatuss.motoroncommand!=1) || ((TORCH == 'X') && (wf
      +                          statusu.wfstatuss.twotfourtmode1 == 0)) )
  4331  0F9D  1DEC               	btfss	_psstatusu,3
  4332  0F9E  2FA4               	goto	l5966
  4333  0F9F  3058               	movlw	88
  4334  0FA0  066E               	xorwf	_TORCH,w
  4335  0FA1  1903               	btfsc	3,2
  4336  0FA2  186D               	btfsc	_wfstatusu,0
  4337  0FA3  2FC2               	goto	l5976
  4338  0FA4                     l5966:	
  4339                           
  4340                           ;main.c: 1020: {
  4341                           ;main.c: 1021: Update_PWM(setwirespeed*0);
  4342  0FA4  085D               	movf	_setwirespeed+1,w
  4343  0FA5  0021               	movlb	1	; select bank1
  4344  0FA6  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  4345  0FA7  0020               	movlb	0	; select bank0
  4346  0FA8  085C               	movf	_setwirespeed,w
  4347  0FA9  0021               	movlb	1	; select bank1
  4348  0FAA  00A0               	movwf	___wmul@multiplier^(0+128)
  4349  0FAB  3000               	movlw	0
  4350  0FAC  00A2               	movwf	___wmul@multiplicand^(0+128)
  4351  0FAD  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  4352  0FAE  3198  20BF  3188   	fcall	___wmul
  4353  0FB1  0021               	movlb	1	; select bank1
  4354  0FB2  0821               	movf	(?___wmul+1)^(0+128),w
  4355  0FB3  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  4356  0FB4  0820               	movf	?___wmul^(0+128),w
  4357  0FB5  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  4358  0FB6  3199  2128  3188   	fcall	_Update_PWM
  4359                           
  4360                           ;main.c: 1022: openloopcnt =0;
  4361  0FB9  0024               	movlb	4	; select bank4
  4362  0FBA  01C8               	clrf	_openloopcnt^(0+512)
  4363  0FBB  01C9               	clrf	(_openloopcnt+1)^(0+512)
  4364                           
  4365                           ;main.c: 1023: closeloopf =0;
  4366  0FBC  0022               	movlb	2	; select bank2
  4367  0FBD  01BD               	clrf	_closeloopf^(0+256)
  4368                           
  4369                           ;main.c: 1024: closeloop1f =0;
  4370  0FBE  0023               	movlb	3	; select bank3
  4371  0FBF  01CD               	clrf	_closeloop1f^(0+384)
  4372                           
  4373                           ;main.c: 1025: cyclestrtf=0;
  4374  0FC0  0022               	movlb	2	; select bank2
  4375  0FC1  01C3               	clrf	_cyclestrtf^(0+256)
  4376  0FC2                     l5976:	
  4377                           
  4378                           ;main.c: 1027: }
  4379                           ;main.c: 1028: TypeU.TypeS.wirespeed=0;
  4380  0FC2  0020               	movlb	0	; select bank0
  4381  0FC3  1065               	bcf	_TypeU,0
  4382                           
  4383                           ;main.c: 1029: TypeU.TypeS.amp=1;
  4384  0FC4  1466               	bsf	_TypeU+1,0
  4385                           
  4386                           ;main.c: 1030: TypeU.TypeS.thickness=0;
  4387  0FC5  10E5               	bcf	_TypeU,1
  4388                           
  4389                           ;main.c: 1031: TypeU.TypeS.arclength =0;
  4390  0FC6  1165               	bcf	_TypeU,2
  4391                           
  4392                           ;main.c: 1032: TypeU.TypeS.vtg =1;
  4393  0FC7  14E6               	bsf	_TypeU+1,1
  4394                           
  4395                           ;main.c: 1033: TypeU.TypeS.sec =0;
  4396  0FC8  1166               	bcf	_TypeU+1,2
  4397                           
  4398                           ;main.c: 1035: TypeDP.DPGROUP[0]=0x00;
  4399  0FC9  01EB               	clrf	_TypeDP
  4400                           
  4401                           ;main.c: 1036: TypeDP.TypeD.digitdp5 =1;
  4402  0FCA  166B               	bsf	_TypeDP,4
  4403                           
  4404                           ;main.c: 1037: disp_hex_window1(Actual_amp);
  4405  0FCB  0024               	movlb	4	; select bank4
  4406  0FCC  0866               	movf	(_Actual_amp+1)^(0+512),w
  4407  0FCD  0021               	movlb	1	; select bank1
  4408  0FCE  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  4409  0FCF  0024               	movlb	4	; select bank4
  4410  0FD0  0865               	movf	_Actual_amp^(0+512),w
  4411  0FD1  0021               	movlb	1	; select bank1
  4412  0FD2  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  4413  0FD3  3199  21CE  3188   	fcall	_disp_hex_window1
  4414                           
  4415                           ;main.c: 1038: disp_hex_window2(Actual_vtg);
  4416  0FD6  0024               	movlb	4	; select bank4
  4417  0FD7  0868               	movf	(_Actual_vtg+1)^(0+512),w
  4418  0FD8  0021               	movlb	1	; select bank1
  4419  0FD9  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  4420  0FDA  0024               	movlb	4	; select bank4
  4421  0FDB  0867               	movf	_Actual_vtg^(0+512),w
  4422  0FDC  0021               	movlb	1	; select bank1
  4423  0FDD  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  4424  0FDE  319A  227B  3188   	fcall	_disp_hex_window2
  4425                           
  4426                           ;main.c: 1039: dispupdatef =1;
  4427  0FE1  3001               	movlw	1
  4428  0FE2  0021               	movlb	1	; select bank1
  4429  0FE3  00ED               	movwf	??_main^(0+128)
  4430  0FE4  086D               	movf	??_main^(0+128),w
  4431  0FE5  0020               	movlb	0	; select bank0
  4432  0FE6  00EF               	movwf	_dispupdatef	;volatile
  4433  0FE7                     l5998:	
  4434                           
  4435                           ;main.c: 1041: }
  4436                           ;main.c: 1042: }
  4437                           ;main.c: 1044: if(universal_error_latch==1)
  4438  0FE7  0022               	movlb	2	; select bank2
  4439  0FE8  0367               	decf	_universal_error_latch^(0+256),w	;volatile
  4440  0FE9  1D03               	btfss	3,2
  4441  0FEA  2FF3               	goto	l6004
  4442                           
  4443                           ;main.c: 1045: {
  4444                           ;main.c: 1046: dispupdatef=1;
  4445  0FEB  3001               	movlw	1
  4446  0FEC  0021               	movlb	1	; select bank1
  4447  0FED  00ED               	movwf	??_main^(0+128)
  4448  0FEE  086D               	movf	??_main^(0+128),w
  4449  0FEF  0020               	movlb	0	; select bank0
  4450  0FF0  00EF               	movwf	_dispupdatef	;volatile
  4451                           
  4452                           ;main.c: 1047: universal_error_latch=0;
  4453  0FF1  0022               	movlb	2	; select bank2
  4454  0FF2  01E7               	clrf	_universal_error_latch^(0+256)	;volatile
  4455  0FF3                     l6004:	
  4456                           
  4457                           ;main.c: 1048: }
  4458                           ;main.c: 1049: if(( (weldmode=='P') || (weldmode=='G') ))
  4459  0FF3  3050               	movlw	80
  4460  0FF4  0020               	movlb	0	; select bank0
  4461  0FF5  0664               	xorwf	_weldmode,w	;volatile
  4462  0FF6  1903               	btfsc	3,2
  4463  0FF7  2FFC               	goto	l6008
  4464  0FF8  3047               	movlw	71
  4465  0FF9  0664               	xorwf	_weldmode,w	;volatile
  4466  0FFA  1D03               	btfss	3,2
  4467  0FFB  297E               	goto	l5544
  4468  0FFC                     l6008:	
  4469                           
  4470                           ;main.c: 1050: detect_display_error();
  4471  0FFC  3190  20BD  3188   	fcall	_detect_display_error
  4472  0FFF  297E               	goto	l5544
  4473  1000                     __end_of_main:	
  4474                           
  4475                           	psect	text1
  4476  1001                     __ptext1:	
  4477 ;; *************** function _uart_init *****************
  4478 ;; Defined at:
  4479 ;;		line 1276 in file "main.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;		None
  4484 ;; Return value:  Size  Location     Type
  4485 ;;		None               void
  4486 ;; Registers used:
  4487 ;;		wreg
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4497 ;;Total ram usage:        0 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    3
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_main
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           
  4508                           ;psect for function _uart_init
  4509  1001                     _uart_init:	
  4510                           
  4511                           ;main.c: 1278: RCSTAbits.SPEN=1;
  4512                           
  4513                           ;incstack = 0
  4514                           ; Regs used in _uart_init: [wreg]
  4515  1001  0023               	movlb	3	; select bank3
  4516  1002  179D               	bsf	29,7	;volatile
  4517                           
  4518                           ;main.c: 1279: TRISCbits.TRISC6=0;
  4519  1003  0021               	movlb	1	; select bank1
  4520  1004  130E               	bcf	14,6	;volatile
  4521                           
  4522                           ;main.c: 1280: TRISCbits.TRISC7=1;
  4523  1005  178E               	bsf	14,7	;volatile
  4524                           
  4525                           ;main.c: 1281: TXSTAbits.BRGH=0;
  4526  1006  0023               	movlb	3	; select bank3
  4527  1007  111E               	bcf	30,2	;volatile
  4528                           
  4529                           ;main.c: 1282: BAUDCTLbits.BRG16=0;
  4530  1008  119F               	bcf	31,3	;volatile
  4531                           
  4532                           ;main.c: 1283: TXSTAbits.SYNC=0;
  4533  1009  121E               	bcf	30,4	;volatile
  4534                           
  4535                           ;main.c: 1284: SPBRG=51;
  4536  100A  3033               	movlw	51
  4537  100B  009B               	movwf	27	;volatile
  4538                           
  4539                           ;main.c: 1285: TXSTA=0x20;
  4540  100C  3020               	movlw	32
  4541  100D  009E               	movwf	30	;volatile
  4542                           
  4543                           ;main.c: 1286: TXSTAbits.TXEN=0;
  4544  100E  129E               	bcf	30,5	;volatile
  4545                           
  4546                           ;main.c: 1287: RCSTAbits.CREN=0;
  4547  100F  121D               	bcf	29,4	;volatile
  4548                           
  4549                           ;main.c: 1288: PIE1bits.RCIE=0;
  4550  1010  0021               	movlb	1	; select bank1
  4551  1011  1291               	bcf	17,5	;volatile
  4552                           
  4553                           ;main.c: 1289: PIE1bits.TXIE=0;
  4554  1012  1211               	bcf	17,4	;volatile
  4555  1013  0008               	return
  4556  1014                     __end_of_uart_init:	
  4557                           
  4558                           	psect	text2
  4559  1B2C                     __ptext2:	
  4560 ;; *************** function _transmittops *****************
  4561 ;; Defined at:
  4562 ;;		line 1318 in file "main.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;		None
  4567 ;; Return value:  Size  Location     Type
  4568 ;;		None               void
  4569 ;; Registers used:
  4570 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4578 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4579 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4580 ;;Total ram usage:        1 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:    4
  4583 ;; This function calls:
  4584 ;;		_Send_Byte
  4585 ;; This function is called by:
  4586 ;;		_main
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function _transmittops
  4592  1B2C                     _transmittops:	
  4593                           
  4594                           ;main.c: 1320: chksum=0;
  4595                           
  4596                           ;incstack = 0
  4597                           ; Regs used in _transmittops: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4598  1B2C  0022               	movlb	2	; select bank2
  4599  1B2D  01BC               	clrf	_chksum^(0+256)
  4600                           
  4601                           ;main.c: 1321: pstowfstru.pstowfstrs.psstatusbyte=0xBB;
  4602  1B2E  30BB               	movlw	187
  4603  1B2F  0021               	movlb	1	; select bank1
  4604  1B30  00A1               	movwf	??_transmittops^(0+128)
  4605  1B31  0821               	movf	??_transmittops^(0+128),w
  4606  1B32  0024               	movlb	4	; select bank4
  4607  1B33  00DA               	movwf	(_pstowfstru^(0+512)+12)
  4608                           
  4609                           ;main.c: 1323: if(cWf2t4tmodefg == 1)
  4610  1B34  0022               	movlb	2	; select bank2
  4611  1B35  033B               	decf	_cWf2t4tmodefg^(0+256),w
  4612  1B36  1D03               	btfss	3,2
  4613  1B37  2B3B               	goto	l844
  4614                           
  4615                           ;main.c: 1324: {
  4616                           ;main.c: 1325: wfstatusu.wfstatuss.twotfourtmode1 = 1;
  4617  1B38  0020               	movlb	0	; select bank0
  4618  1B39  146D               	bsf	_wfstatusu,0
  4619                           
  4620                           ;main.c: 1326: }
  4621  1B3A  2B3D               	goto	l4640
  4622  1B3B                     l844:	
  4623                           
  4624                           ;main.c: 1327: else
  4625                           ;main.c: 1328: {
  4626                           ;main.c: 1329: wfstatusu.wfstatuss.twotfourtmode1 = 0;
  4627  1B3B  0020               	movlb	0	; select bank0
  4628  1B3C  106D               	bcf	_wfstatusu,0
  4629  1B3D                     l4640:	
  4630                           
  4631                           ;main.c: 1330: }
  4632                           ;main.c: 1331: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4633  1B3D  086D               	movf	_wfstatusu,w
  4634  1B3E  0021               	movlb	1	; select bank1
  4635  1B3F  00A1               	movwf	??_transmittops^(0+128)
  4636  1B40  0821               	movf	??_transmittops^(0+128),w
  4637  1B41  0024               	movlb	4	; select bank4
  4638  1B42  00DB               	movwf	(_pstowfstru^(0+512)+13)
  4639                           
  4640                           ;main.c: 1340: Tx_ptr=0;
  4641  1B43  0023               	movlb	3	; select bank3
  4642  1B44  01CA               	clrf	_Tx_ptr^(0+384)
  4643                           
  4644                           ;main.c: 1341: Send_Byte('@');
  4645  1B45  3040               	movlw	64
  4646  1B46  31A7  27D4  319B   	fcall	_Send_Byte
  4647                           
  4648                           ;main.c: 1342: if(cMtrOverLdfg == 1)
  4649  1B49  0022               	movlb	2	; select bank2
  4650  1B4A  0337               	decf	_cMtrOverLdfg^(0+256),w
  4651  1B4B  1D03               	btfss	3,2
  4652  1B4C  2B53               	goto	l4650
  4653                           
  4654                           ;main.c: 1343: {
  4655                           ;main.c: 1344: pstowfstru.pstransarr[16] = 0x10;
  4656  1B4D  3010               	movlw	16
  4657  1B4E  0021               	movlb	1	; select bank1
  4658  1B4F  00A1               	movwf	??_transmittops^(0+128)
  4659  1B50  0821               	movf	??_transmittops^(0+128),w
  4660  1B51  0024               	movlb	4	; select bank4
  4661  1B52  00DE               	movwf	(_pstowfstru^(0+512)+16)
  4662  1B53                     l4650:	
  4663                           
  4664                           ;main.c: 1345: }
  4665                           ;main.c: 1346: for(lmn=0;lmn<=22;lmn++)
  4666  1B53  0022               	movlb	2	; select bank2
  4667  1B54  01A4               	clrf	_lmn^(0+256)
  4668  1B55  01A5               	clrf	(_lmn+1)^(0+256)
  4669  1B56  3000               	movlw	0
  4670  1B57  0225               	subwf	(_lmn+1)^(0+256),w
  4671  1B58  3017               	movlw	23
  4672  1B59  1903               	skipnz
  4673  1B5A  0224               	subwf	_lmn^(0+256),w
  4674  1B5B  1803               	btfsc	3,0
  4675  1B5C  2B7E               	goto	l4664
  4676  1B5D                     l4656:	
  4677                           
  4678                           ;main.c: 1347: {
  4679                           ;main.c: 1348: chksum=chksum+pstowfstru.pstransarr[lmn];
  4680  1B5D  0824               	movf	_lmn^(0+256),w
  4681  1B5E  3E4E               	addlw	(low (_pstowfstru| (0+512)))& (0+255)
  4682  1B5F  0086               	movwf	6
  4683  1B60  3002               	movlw	2	; select bank4/5
  4684  1B61  0087               	movwf	7
  4685  1B62  0801               	movf	1,w
  4686  1B63  073C               	addwf	_chksum^(0+256),w
  4687  1B64  0021               	movlb	1	; select bank1
  4688  1B65  00A1               	movwf	??_transmittops^(0+128)
  4689  1B66  0821               	movf	??_transmittops^(0+128),w
  4690  1B67  0022               	movlb	2	; select bank2
  4691  1B68  00BC               	movwf	_chksum^(0+256)
  4692                           
  4693                           ;main.c: 1349: Send_Byte(pstowfstru.pstransarr[lmn]);
  4694  1B69  0824               	movf	_lmn^(0+256),w
  4695  1B6A  3E4E               	addlw	(low (_pstowfstru| (0+512)))& (0+255)
  4696  1B6B  0086               	movwf	6
  4697  1B6C  3002               	movlw	2	; select bank4/5
  4698  1B6D  0087               	movwf	7
  4699  1B6E  0801               	movf	1,w
  4700  1B6F  31A7  27D4  319B   	fcall	_Send_Byte
  4701  1B72  3001               	movlw	1
  4702  1B73  0022               	movlb	2	; select bank2
  4703  1B74  07A4               	addwf	_lmn^(0+256),f
  4704  1B75  3000               	movlw	0
  4705  1B76  3DA5               	addwfc	(_lmn+1)^(0+256),f
  4706  1B77  3000               	movlw	0
  4707  1B78  0225               	subwf	(_lmn+1)^(0+256),w
  4708  1B79  3017               	movlw	23
  4709  1B7A  1903               	skipnz
  4710  1B7B  0224               	subwf	_lmn^(0+256),w
  4711  1B7C  1C03               	skipc
  4712  1B7D  2B5D               	goto	l4656
  4713  1B7E                     l4664:	
  4714                           
  4715                           ;main.c: 1350: }
  4716                           ;main.c: 1351: if(cEditfg == 1)
  4717  1B7E  0020               	movlb	0	; select bank0
  4718  1B7F  035E               	decf	_cEditfg,w
  4719  1B80  1D03               	btfss	3,2
  4720  1B81  2B84               	goto	l4668
  4721                           
  4722                           ;main.c: 1352: {
  4723                           ;main.c: 1353: Send_Byte('E');
  4724  1B82  3045               	movlw	69
  4725  1B83  2B85               	goto	L10
  4726  1B84                     l4668:	
  4727                           ;main.c: 1354: }
  4728                           
  4729                           
  4730                           ;main.c: 1355: else
  4731                           ;main.c: 1356: {
  4732                           ;main.c: 1357: Send_Byte('X');
  4733  1B84  3058               	movlw	88
  4734  1B85                     L10:	
  4735  1B85  31A7  27D4  319B   	fcall	_Send_Byte
  4736                           
  4737                           ;main.c: 1358: }
  4738                           ;main.c: 1359: Send_Byte(chksum);
  4739  1B88  0022               	movlb	2	; select bank2
  4740  1B89  083C               	movf	_chksum^(0+256),w
  4741  1B8A  31A7  27D4         	fcall	_Send_Byte
  4742  1B8C  0008               	return
  4743  1B8D                     __end_of_transmittops:	
  4744                           
  4745                           	psect	text3
  4746  27DE                     __ptext3:	
  4747 ;; *************** function _system_init *****************
  4748 ;; Defined at:
  4749 ;;		line 1182 in file "main.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;		None               void
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4767 ;;Total ram usage:        0 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; Hardware stack levels required when called:    3
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_main
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           
  4778                           ;psect for function _system_init
  4779  27DE                     _system_init:	
  4780                           
  4781                           ;main.c: 1186: OSCCONbits.IRCF=14;
  4782                           
  4783                           ;incstack = 0
  4784                           ; Regs used in _system_init: [wreg+status,2+status,0]
  4785  27DE  0021               	movlb	1	; select bank1
  4786  27DF  0819               	movf	25,w	;volatile
  4787  27E0  3987               	andlw	-121
  4788  27E1  3870               	iorlw	112
  4789  27E2  0099               	movwf	25	;volatile
  4790                           
  4791                           ;main.c: 1188: OSCCONbits.SCS=0;
  4792  27E3  30FC               	movlw	-4
  4793  27E4  0599               	andwf	25,f	;volatile
  4794                           
  4795                           ;main.c: 1189: OSCTUNEbits.TUN=0;
  4796  27E5  30C0               	movlw	-64
  4797  27E6  0598               	andwf	24,f	;volatile
  4798  27E7  0008               	return
  4799  27E8                     __end_of_system_init:	
  4800                           
  4801                           	psect	text4
  4802  184A                     __ptext4:	
  4803 ;; *************** function _send_status *****************
  4804 ;; Defined at:
  4805 ;;		line 1362 in file "main.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;		None
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;		None
  4810 ;; Return value:  Size  Location     Type
  4811 ;;		None               void
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0, pclath, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4821 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4822 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4823 ;;Total ram usage:        1 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    4
  4826 ;; This function calls:
  4827 ;;		_Send_Byte
  4828 ;; This function is called by:
  4829 ;;		_main
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           
  4834                           ;psect for function _send_status
  4835  184A                     _send_status:	
  4836                           
  4837                           ;main.c: 1364: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4838                           
  4839                           ;incstack = 0
  4840                           ; Regs used in _send_status: [wreg+status,2+status,0+pclath+cstack]
  4841  184A  0020               	movlb	0	; select bank0
  4842  184B  086D               	movf	_wfstatusu,w
  4843  184C  0021               	movlb	1	; select bank1
  4844  184D  00A1               	movwf	??_send_status^(0+128)
  4845  184E  0821               	movf	??_send_status^(0+128),w
  4846  184F  0024               	movlb	4	; select bank4
  4847  1850  00DB               	movwf	(_pstowfstru^(0+512)+13)
  4848                           
  4849                           ;main.c: 1365: Send_Byte('#');
  4850  1851  3023               	movlw	35
  4851  1852  31A7  27D4  3198   	fcall	_Send_Byte
  4852                           
  4853                           ;main.c: 1366: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4854  1855  0024               	movlb	4	; select bank4
  4855  1856  085B               	movf	(_pstowfstru^(0+512)+13),w
  4856  1857  31A7  27D4  3198   	fcall	_Send_Byte
  4857                           
  4858                           ;main.c: 1367: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4859  185A  0024               	movlb	4	; select bank4
  4860  185B  085B               	movf	(_pstowfstru^(0+512)+13),w
  4861  185C  31A7  27D4         	fcall	_Send_Byte
  4862  185E  0008               	return
  4863  185F                     __end_of_send_status:	
  4864                           
  4865                           	psect	text5
  4866  27D4                     __ptext5:	
  4867 ;; *************** function _Send_Byte *****************
  4868 ;; Defined at:
  4869 ;;		line 1309 in file "main.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  transbyte       1    wreg     unsigned char 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  transbyte       1    0[BANK1 ] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;		None               void
  4876 ;; Registers used:
  4877 ;;		wreg
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4884 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4886 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4887 ;;Total ram usage:        1 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    3
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_transmittops
  4894 ;;		_send_status
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           
  4899                           ;psect for function _Send_Byte
  4900  27D4                     _Send_Byte:	
  4901                           
  4902                           ;incstack = 0
  4903                           ; Regs used in _Send_Byte: [wreg]
  4904                           ;Send_Byte@transbyte stored from wreg
  4905  27D4  0021               	movlb	1	; select bank1
  4906  27D5  00A0               	movwf	Send_Byte@transbyte^(0+128)
  4907  27D6                     l838:	
  4908                           ;main.c: 1311: while(TXSTAbits.TRMT != 1);
  4909                           
  4910  27D6  0023               	movlb	3	; select bank3
  4911  27D7  1C9E               	btfss	30,1	;volatile
  4912  27D8  2FD6               	goto	l838
  4913                           
  4914                           ;main.c: 1312: TXREG=transbyte;
  4915  27D9  0021               	movlb	1	; select bank1
  4916  27DA  0820               	movf	Send_Byte@transbyte^(0+128),w
  4917  27DB  0023               	movlb	3	; select bank3
  4918  27DC  009A               	movwf	26	;volatile
  4919  27DD  0008               	return
  4920  27DE                     __end_of_Send_Byte:	
  4921                           
  4922                           	psect	text6
  4923  185F                     __ptext6:	
  4924 ;; *************** function _portpin_init *****************
  4925 ;; Defined at:
  4926 ;;		line 1192 in file "main.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;		None               void
  4933 ;; Registers used:
  4934 ;;		wreg, status,2
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    3
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_main
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           
  4955                           ;psect for function _portpin_init
  4956  185F                     _portpin_init:	
  4957                           
  4958                           ;main.c: 1194: TRISA=0x1F;
  4959                           
  4960                           ;incstack = 0
  4961                           ; Regs used in _portpin_init: [wreg+status,2]
  4962  185F  301F               	movlw	31
  4963  1860  0021               	movlb	1	; select bank1
  4964  1861  008C               	movwf	12	;volatile
  4965                           
  4966                           ;main.c: 1195: TRISB=0x00;
  4967  1862  018D               	clrf	13	;volatile
  4968                           
  4969                           ;main.c: 1196: TRISC=0x00;
  4970  1863  018E               	clrf	14	;volatile
  4971                           
  4972                           ;main.c: 1197: ANSELA=0X00;
  4973  1864  0023               	movlb	3	; select bank3
  4974  1865  018C               	clrf	12	;volatile
  4975                           
  4976                           ;main.c: 1198: ANSELB=0X00;
  4977  1866  018D               	clrf	13	;volatile
  4978                           
  4979                           ;main.c: 1201: PORTA=0X00;
  4980  1867  0020               	movlb	0	; select bank0
  4981  1868  018C               	clrf	12	;volatile
  4982                           
  4983                           ;main.c: 1202: PORTC=0X00;
  4984  1869  018E               	clrf	14	;volatile
  4985                           
  4986                           ;main.c: 1203: TRISAbits.TRISA1 =1;
  4987  186A  0021               	movlb	1	; select bank1
  4988  186B  148C               	bsf	12,1	;volatile
  4989                           
  4990                           ;main.c: 1204: TRISAbits.TRISA2 =1;
  4991  186C  150C               	bsf	12,2	;volatile
  4992                           
  4993                           ;main.c: 1205: TRISAbits.TRISA3 =1;
  4994  186D  158C               	bsf	12,3	;volatile
  4995                           
  4996                           ;main.c: 1206: TRISAbits.TRISA4 =1;
  4997  186E  160C               	bsf	12,4	;volatile
  4998                           
  4999                           ;main.c: 1207: TRISCbits.TRISC1 =1;
  5000  186F  148E               	bsf	14,1	;volatile
  5001                           
  5002                           ;main.c: 1208: TRISCbits.TRISC3=0;
  5003  1870  118E               	bcf	14,3	;volatile
  5004                           
  5005                           ;main.c: 1209: TRISAbits.TRISA5=1;
  5006  1871  168C               	bsf	12,5	;volatile
  5007                           
  5008                           ;main.c: 1210: TRISCbits.TRISC5=1;
  5009  1872  168E               	bsf	14,5	;volatile
  5010                           
  5011                           ;main.c: 1211: TRISAbits.TRISA0=0;
  5012  1873  100C               	bcf	12,0	;volatile
  5013  1874  0008               	return
  5014  1875                     __end_of_portpin_init:	
  5015                           
  5016                           	psect	text7
  5017  1354                     __ptext7:	
  5018 ;; *************** function _key_application *****************
  5019 ;; Defined at:
  5020 ;;		line 1054 in file "main.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  keypress        1    wreg     unsigned char 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  keypress        1   61[BANK1 ] unsigned char 
  5025 ;; Return value:  Size  Location     Type
  5026 ;;		None               void
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0, pclath, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5035 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5036 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5037 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5038 ;;Total ram usage:        3 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    5
  5041 ;; This function calls:
  5042 ;;		_Update_PWM
  5043 ;;		___wmul
  5044 ;;		_disp_hex_window2
  5045 ;; This function is called by:
  5046 ;;		_main
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           
  5051                           ;psect for function _key_application
  5052  1354                     _key_application:	
  5053                           
  5054                           ;incstack = 0
  5055                           ; Regs used in _key_application: [wreg+status,2+status,0+pclath+cstack]
  5056                           ;key_application@keypress stored from wreg
  5057  1354  0021               	movlb	1	; select bank1
  5058  1355  00DD               	movwf	key_application@keypress^(0+128)
  5059                           
  5060                           ;main.c: 1056: if(keypress==1)
  5061  1356  035D               	decf	key_application@keypress^(0+128),w
  5062  1357  1903               	btfsc	3,2
  5063  1358  2B89               	goto	l4678
  5064  1359  2B9C               	goto	l4686
  5065  135A                     l787:	
  5066                           ;main.c: 1057: {
  5067                           ;main.c: 1058: while(key==1)
  5068                           
  5069                           
  5070                           ;main.c: 1059: {
  5071                           ;main.c: 1060: TypeU.TypeS.gason =1;
  5072  135A  0020               	movlb	0	; select bank0
  5073  135B  15E5               	bsf	_TypeU,3
  5074                           
  5075                           ;main.c: 1061: PORTCbits.RC3 =1;
  5076  135C  158E               	bsf	14,3	;volatile
  5077                           
  5078                           ;main.c: 1064: diswin1[0]= 0x11;
  5079  135D  3011               	movlw	17
  5080  135E  0021               	movlb	1	; select bank1
  5081  135F  00DB               	movwf	??_key_application^(0+128)
  5082  1360  085B               	movf	??_key_application^(0+128),w
  5083  1361  0023               	movlb	3	; select bank3
  5084  1362  00DA               	movwf	_diswin1^(0+384)
  5085                           
  5086                           ;main.c: 1065: diswin1[1]= 0x0B;
  5087  1363  300B               	movlw	11
  5088  1364  0021               	movlb	1	; select bank1
  5089  1365  00DB               	movwf	??_key_application^(0+128)
  5090  1366  085B               	movf	??_key_application^(0+128),w
  5091  1367  0023               	movlb	3	; select bank3
  5092  1368  00DB               	movwf	(_diswin1^(0+384)+1)
  5093                           
  5094                           ;main.c: 1066: diswin1[2]= 0x1D;
  5095  1369  301D               	movlw	29
  5096  136A  0021               	movlb	1	; select bank1
  5097  136B  00DB               	movwf	??_key_application^(0+128)
  5098  136C  085B               	movf	??_key_application^(0+128),w
  5099  136D  0023               	movlb	3	; select bank3
  5100  136E  00DC               	movwf	(_diswin1^(0+384)+2)
  5101                           
  5102                           ;main.c: 1068: diswin1[3]= 0x19;
  5103  136F  3019               	movlw	25
  5104  1370  0021               	movlb	1	; select bank1
  5105  1371  00DB               	movwf	??_key_application^(0+128)
  5106  1372  085B               	movf	??_key_application^(0+128),w
  5107  1373  0023               	movlb	3	; select bank3
  5108  1374  00DD               	movwf	(_diswin1^(0+384)+3)
  5109                           
  5110                           ;main.c: 1069: diswin1[4]= 0x18;
  5111  1375  3018               	movlw	24
  5112  1376  0021               	movlb	1	; select bank1
  5113  1377  00DB               	movwf	??_key_application^(0+128)
  5114  1378  085B               	movf	??_key_application^(0+128),w
  5115  1379  0023               	movlb	3	; select bank3
  5116  137A  00DE               	movwf	(_diswin1^(0+384)+4)
  5117                           
  5118                           ;main.c: 1070: diswin1[5]= 0x25;
  5119  137B  3025               	movlw	37
  5120  137C  0021               	movlb	1	; select bank1
  5121  137D  00DB               	movwf	??_key_application^(0+128)
  5122  137E  085B               	movf	??_key_application^(0+128),w
  5123  137F  0023               	movlb	3	; select bank3
  5124  1380  00DF               	movwf	(_diswin1^(0+384)+5)
  5125                           
  5126                           ;main.c: 1071: cGasRlyClrfg = 1;
  5127  1381  0022               	movlb	2	; select bank2
  5128  1382  01B5               	clrf	_cGasRlyClrfg^(0+256)
  5129  1383  0AB5               	incf	_cGasRlyClrfg^(0+256),f
  5130                           
  5131                           ;main.c: 1072: iGasDbCnt = 500;
  5132  1384  30F4               	movlw	244
  5133  1385  0023               	movlb	3	; select bank3
  5134  1386  00B8               	movwf	_iGasDbCnt^(0+384)
  5135  1387  3001               	movlw	1
  5136  1388  00B9               	movwf	(_iGasDbCnt^(0+384)+1)
  5137  1389                     l4678:	
  5138  1389  0021               	movlb	1	; select bank1
  5139  138A  036F               	decf	_key^(0+128),w	;volatile
  5140  138B  1903               	btfsc	3,2
  5141  138C  2B5A               	goto	l787
  5142                           
  5143                           ;main.c: 1074: }
  5144                           ;main.c: 1075: if(iGasDbCnt == 0)
  5145  138D  0023               	movlb	3	; select bank3
  5146  138E  0838               	movf	_iGasDbCnt^(0+384),w
  5147  138F  0439               	iorwf	(_iGasDbCnt+1)^(0+384),w
  5148  1390  1D03               	btfss	3,2
  5149  1391  0008               	return
  5150                           
  5151                           ;main.c: 1076: {
  5152                           ;main.c: 1077: TypeU.TypeS.gason =0;
  5153  1392  0020               	movlb	0	; select bank0
  5154  1393  11E5               	bcf	_TypeU,3
  5155                           
  5156                           ;main.c: 1078: PORTCbits.RC3 =0;
  5157  1394  118E               	bcf	14,3	;volatile
  5158                           
  5159                           ;main.c: 1079: dispupdatef =1;
  5160  1395  3001               	movlw	1
  5161  1396  0021               	movlb	1	; select bank1
  5162  1397  00DB               	movwf	??_key_application^(0+128)
  5163  1398  085B               	movf	??_key_application^(0+128),w
  5164  1399  0020               	movlb	0	; select bank0
  5165  139A  00EF               	movwf	_dispupdatef	;volatile
  5166                           
  5167                           ;main.c: 1080: }
  5168                           ;main.c: 1082: }
  5169  139B  0008               	return
  5170  139C                     l4686:	
  5171                           
  5172                           ;main.c: 1083: else if(keypress==2)
  5173  139C  3002               	movlw	2
  5174  139D  0021               	movlb	1	; select bank1
  5175  139E  065D               	xorwf	key_application@keypress^(0+128),w
  5176  139F  1D03               	btfss	3,2
  5177  13A0  2C2B               	goto	l4724
  5178                           
  5179                           ;main.c: 1084: {
  5180                           ;main.c: 1085: inchcnt=10;
  5181  13A1  300A               	movlw	10
  5182  13A2  00DB               	movwf	??_key_application^(0+128)
  5183  13A3  085B               	movf	??_key_application^(0+128),w
  5184  13A4  0022               	movlb	2	; select bank2
  5185  13A5  00EC               	movwf	_inchcnt^(0+256)
  5186  13A6                     l4714:	
  5187                           ;main.c: 1086: while(key==2)
  5188                           
  5189  13A6  3002               	movlw	2
  5190  13A7  0021               	movlb	1	; select bank1
  5191  13A8  066F               	xorwf	_key^(0+128),w	;volatile
  5192  13A9  1D03               	btfss	3,2
  5193  13AA  2C0A               	goto	l4716
  5194                           
  5195                           ;main.c: 1087: {
  5196                           ;main.c: 1088: TypeU.TypeS.inch =1;
  5197  13AB  0020               	movlb	0	; select bank0
  5198  13AC  15E6               	bsf	_TypeU+1,3
  5199                           
  5200                           ;main.c: 1091: diswin1[0] =0x13;
  5201  13AD  3013               	movlw	19
  5202  13AE  0021               	movlb	1	; select bank1
  5203  13AF  00DB               	movwf	??_key_application^(0+128)
  5204  13B0  085B               	movf	??_key_application^(0+128),w
  5205  13B1  0023               	movlb	3	; select bank3
  5206  13B2  00DA               	movwf	_diswin1^(0+384)
  5207                           
  5208                           ;main.c: 1092: diswin1[1] =0x18;
  5209  13B3  3018               	movlw	24
  5210  13B4  0021               	movlb	1	; select bank1
  5211  13B5  00DB               	movwf	??_key_application^(0+128)
  5212  13B6  085B               	movf	??_key_application^(0+128),w
  5213  13B7  0023               	movlb	3	; select bank3
  5214  13B8  00DB               	movwf	(_diswin1^(0+384)+1)
  5215                           
  5216                           ;main.c: 1093: diswin1[2] =0x0D;
  5217  13B9  300D               	movlw	13
  5218  13BA  0021               	movlb	1	; select bank1
  5219  13BB  00DB               	movwf	??_key_application^(0+128)
  5220  13BC  085B               	movf	??_key_application^(0+128),w
  5221  13BD  0023               	movlb	3	; select bank3
  5222  13BE  00DC               	movwf	(_diswin1^(0+384)+2)
  5223                           
  5224                           ;main.c: 1094: Update_PWM(inchcnt*4);
  5225  13BF  0022               	movlb	2	; select bank2
  5226  13C0  086C               	movf	_inchcnt^(0+256),w
  5227  13C1  0021               	movlb	1	; select bank1
  5228  13C2  00DB               	movwf	??_key_application^(0+128)
  5229  13C3  01DC               	clrf	(??_key_application^(0+128)+1)
  5230  13C4  35DB               	lslf	??_key_application^(0+128),f
  5231  13C5  0DDC               	rlf	(??_key_application^(0+128)+1),f
  5232  13C6  35DB               	lslf	??_key_application^(0+128),f
  5233  13C7  0DDC               	rlf	(??_key_application^(0+128)+1),f
  5234  13C8  085B               	movf	??_key_application^(0+128),w
  5235  13C9  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  5236  13CA  085C               	movf	(??_key_application+1)^(0+128),w
  5237  13CB  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  5238  13CC  3199  2128  3193   	fcall	_Update_PWM
  5239                           
  5240                           ;main.c: 1095: disp_hex_window2(inchcnt);
  5241  13CF  0022               	movlb	2	; select bank2
  5242  13D0  086C               	movf	_inchcnt^(0+256),w
  5243  13D1  0021               	movlb	1	; select bank1
  5244  13D2  00DB               	movwf	??_key_application^(0+128)
  5245  13D3  01DC               	clrf	(??_key_application^(0+128)+1)
  5246  13D4  085B               	movf	??_key_application^(0+128),w
  5247  13D5  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  5248  13D6  085C               	movf	(??_key_application+1)^(0+128),w
  5249  13D7  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  5250  13D8  319A  227B  3193   	fcall	_disp_hex_window2
  5251                           
  5252                           ;main.c: 1096: if(inchcnt<100)
  5253  13DB  3064               	movlw	100
  5254  13DC  0022               	movlb	2	; select bank2
  5255  13DD  026C               	subwf	_inchcnt^(0+256),w
  5256  13DE  1803               	skipnc
  5257  13DF  2BA6               	goto	l4714
  5258                           
  5259                           ;main.c: 1097: {
  5260                           ;main.c: 1098: inchcnt=inchcnt+10;
  5261  13E0  086C               	movf	_inchcnt^(0+256),w
  5262  13E1  3E0A               	addlw	10
  5263  13E2  0021               	movlb	1	; select bank1
  5264  13E3  00DB               	movwf	??_key_application^(0+128)
  5265  13E4  085B               	movf	??_key_application^(0+128),w
  5266  13E5  0022               	movlb	2	; select bank2
  5267  13E6  00EC               	movwf	_inchcnt^(0+256)
  5268                           
  5269                           ;main.c: 1099: for(delinch1=0;delinch1<5;delinch1++)
  5270  13E7  0023               	movlb	3	; select bank3
  5271  13E8  01B6               	clrf	_delinch1^(0+384)
  5272  13E9  01B7               	clrf	(_delinch1+1)^(0+384)
  5273  13EA                     L11:	
  5274  13EA  3000               	movlw	0
  5275  13EB  0237               	subwf	(_delinch1+1)^(0+384),w
  5276  13EC  3005               	movlw	5
  5277  13ED  1903               	skipnz
  5278  13EE  0236               	subwf	_delinch1^(0+384),w
  5279  13EF  1803               	btfsc	3,0
  5280  13F0  2BA6               	goto	l4714
  5281                           
  5282                           ;main.c: 1100: for(delinch=0;delinch<50000;delinch++);
  5283  13F1  01B4               	clrf	_delinch^(0+384)
  5284  13F2  01B5               	clrf	(_delinch+1)^(0+384)
  5285  13F3  30C3               	movlw	195
  5286  13F4  0235               	subwf	(_delinch+1)^(0+384),w
  5287  13F5  3050               	movlw	80
  5288  13F6  1903               	skipnz
  5289  13F7  0234               	subwf	_delinch^(0+384),w
  5290  13F8  1803               	btfsc	3,0
  5291  13F9  2C05               	goto	l4712
  5292  13FA                     l4710:	
  5293  13FA  3001               	movlw	1
  5294  13FB  07B4               	addwf	_delinch^(0+384),f
  5295  13FC  3000               	movlw	0
  5296  13FD  3DB5               	addwfc	(_delinch+1)^(0+384),f
  5297  13FE  30C3               	movlw	195
  5298  13FF  0235               	subwf	(_delinch+1)^(0+384),w
  5299  1400  3050               	movlw	80
  5300  1401  1903               	skipnz
  5301  1402  0234               	subwf	_delinch^(0+384),w
  5302  1403  1C03               	skipc
  5303  1404  2BFA               	goto	l4710
  5304  1405                     l4712:	
  5305  1405  3001               	movlw	1
  5306  1406  07B6               	addwf	_delinch1^(0+384),f
  5307  1407  3000               	movlw	0
  5308  1408  3DB7               	addwfc	(_delinch1+1)^(0+384),f
  5309  1409  2BEA               	goto	L11
  5310  140A                     l4716:	
  5311                           
  5312                           ;main.c: 1101: }
  5313                           ;main.c: 1102: }
  5314                           ;main.c: 1103: Update_PWM(inchcnt*0);
  5315  140A  0022               	movlb	2	; select bank2
  5316  140B  086C               	movf	_inchcnt^(0+256),w
  5317  140C  0021               	movlb	1	; select bank1
  5318  140D  00DB               	movwf	??_key_application^(0+128)
  5319  140E  01DC               	clrf	(??_key_application^(0+128)+1)
  5320  140F  085B               	movf	??_key_application^(0+128),w
  5321  1410  00A0               	movwf	___wmul@multiplier^(0+128)
  5322  1411  085C               	movf	(??_key_application+1)^(0+128),w
  5323  1412  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  5324  1413  3000               	movlw	0
  5325  1414  00A2               	movwf	___wmul@multiplicand^(0+128)
  5326  1415  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  5327  1416  3198  20BF  3193   	fcall	___wmul
  5328  1419  0021               	movlb	1	; select bank1
  5329  141A  0821               	movf	(?___wmul+1)^(0+128),w
  5330  141B  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  5331  141C  0820               	movf	?___wmul^(0+128),w
  5332  141D  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  5333  141E  3199  2128         	fcall	_Update_PWM
  5334                           
  5335                           ;main.c: 1104: TypeU.TypeS.inch =0;
  5336  1420  0020               	movlb	0	; select bank0
  5337  1421  11E6               	bcf	_TypeU+1,3
  5338                           
  5339                           ;main.c: 1106: inchkeyon =0;
  5340  1422  0023               	movlb	3	; select bank3
  5341  1423  01D3               	clrf	_inchkeyon^(0+384)
  5342                           
  5343                           ;main.c: 1107: dispupdatef =1;
  5344  1424  3001               	movlw	1
  5345  1425  0021               	movlb	1	; select bank1
  5346  1426  00DB               	movwf	??_key_application^(0+128)
  5347  1427  085B               	movf	??_key_application^(0+128),w
  5348  1428  0020               	movlb	0	; select bank0
  5349  1429  00EF               	movwf	_dispupdatef	;volatile
  5350                           
  5351                           ;main.c: 1108: }
  5352  142A  0008               	return
  5353  142B                     l4724:	
  5354                           
  5355                           ;main.c: 1109: else if(keypress==3)
  5356  142B  3003               	movlw	3
  5357  142C  0021               	movlb	1	; select bank1
  5358  142D  065D               	xorwf	key_application@keypress^(0+128),w
  5359  142E  1D03               	btfss	3,2
  5360  142F  2C45               	goto	l4736
  5361                           
  5362                           ;main.c: 1110: {
  5363                           ;main.c: 1114: if(TypeU.TypeS.twot==1)
  5364  1430  0020               	movlb	0	; select bank0
  5365  1431  1E65               	btfss	_TypeU,4
  5366  1432  2C3A               	goto	l802
  5367                           
  5368                           ;main.c: 1115: {
  5369                           ;main.c: 1116: TypeU.TypeS.twot=0;
  5370  1433  1265               	bcf	_TypeU,4
  5371                           
  5372                           ;main.c: 1117: TypeU.TypeS.fourt=1;
  5373  1434  16E5               	bsf	_TypeU,5
  5374                           
  5375                           ;main.c: 1118: wfstatusu.wfstatuss.twotfourtmode1=1;
  5376  1435  146D               	bsf	_wfstatusu,0
  5377                           
  5378                           ;main.c: 1119: cWf2t4tmodefg = 1;
  5379  1436  0022               	movlb	2	; select bank2
  5380  1437  01BB               	clrf	_cWf2t4tmodefg^(0+256)
  5381  1438  0ABB               	incf	_cWf2t4tmodefg^(0+256),f
  5382                           
  5383                           ;main.c: 1120: }
  5384  1439  2C41               	goto	l4734
  5385  143A                     l802:	
  5386                           
  5387                           ;main.c: 1121: else if(TypeU.TypeS.fourt==1)
  5388  143A  1EE5               	btfss	_TypeU,5
  5389  143B  2C41               	goto	l4734
  5390                           
  5391                           ;main.c: 1122: {
  5392                           ;main.c: 1123: TypeU.TypeS.fourt=0;
  5393  143C  12E5               	bcf	_TypeU,5
  5394                           
  5395                           ;main.c: 1124: TypeU.TypeS.twot =1;
  5396  143D  1665               	bsf	_TypeU,4
  5397                           
  5398                           ;main.c: 1125: wfstatusu.wfstatuss.twotfourtmode1=0;
  5399  143E  106D               	bcf	_wfstatusu,0
  5400                           
  5401                           ;main.c: 1126: cWf2t4tmodefg = 0;
  5402  143F  0022               	movlb	2	; select bank2
  5403  1440  01BB               	clrf	_cWf2t4tmodefg^(0+256)
  5404  1441                     l4734:	
  5405                           
  5406                           ;main.c: 1127: }
  5407                           ;main.c: 1128: cEditfg = 1;
  5408  1441  0020               	movlb	0	; select bank0
  5409  1442  01DE               	clrf	_cEditfg
  5410  1443  0ADE               	incf	_cEditfg,f
  5411                           
  5412                           ;main.c: 1129: }
  5413  1444  0008               	return
  5414  1445                     l4736:	
  5415                           
  5416                           ;main.c: 1130: else if(keypress==4)
  5417  1445  3004               	movlw	4
  5418  1446  0021               	movlb	1	; select bank1
  5419  1447  065D               	xorwf	key_application@keypress^(0+128),w
  5420  1448  1D03               	btfss	3,2
  5421  1449  2C67               	goto	l4764
  5422                           
  5423                           ;main.c: 1131: {
  5424                           ;main.c: 1133: if(TypeU.TypeS.wirespeed==1)
  5425  144A  0020               	movlb	0	; select bank0
  5426  144B  1C65               	btfss	_TypeU,0
  5427  144C  2C52               	goto	l807
  5428                           
  5429                           ;main.c: 1134: {
  5430                           ;main.c: 1137: TypeU.TypeS.wirespeed=0;
  5431  144D  1065               	bcf	_TypeU,0
  5432                           
  5433                           ;main.c: 1138: TypeU.TypeS.amp=1;
  5434  144E  1466               	bsf	_TypeU+1,0
  5435                           
  5436                           ;main.c: 1139: TypeU.TypeS.thickness=0;
  5437  144F  10E5               	bcf	_TypeU,1
  5438                           
  5439                           ;main.c: 1140: TypeDP.DPGROUP[0]=0x00;
  5440  1450  01EB               	clrf	_TypeDP
  5441  1451  2C5F               	goto	l4760
  5442  1452                     l807:	
  5443                           ;main.c: 1143: }
  5444                           
  5445                           ;main.c: 1141: TypeDP.TypeD.digitdp5 =1;
  5446                           
  5447                           
  5448                           ;main.c: 1144: else if(TypeU.TypeS.amp==1)
  5449  1452  1C66               	btfss	_TypeU+1,0
  5450  1453  2C58               	goto	l809
  5451                           
  5452                           ;main.c: 1145: {
  5453                           ;main.c: 1148: TypeU.TypeS.wirespeed=0;
  5454  1454  1065               	bcf	_TypeU,0
  5455                           
  5456                           ;main.c: 1149: TypeU.TypeS.amp=0;
  5457  1455  1066               	bcf	_TypeU+1,0
  5458                           
  5459                           ;main.c: 1150: TypeU.TypeS.thickness=1;
  5460  1456  14E5               	bsf	_TypeU,1
  5461  1457  2C5D               	goto	L12
  5462  1458                     l809:	
  5463                           ;main.c: 1155: }
  5464                           
  5465                           ;main.c: 1153: TypeDP.TypeD.digitdp5 =1;
  5466                           
  5467                           ;main.c: 1152: TypeDP.TypeD.digitdp2 =1;
  5468                           
  5469                           ;main.c: 1151: TypeDP.DPGROUP[0]=0x00;
  5470                           
  5471                           
  5472                           ;main.c: 1157: else if(TypeU.TypeS.thickness==1)
  5473  1458  1CE5               	btfss	_TypeU,1
  5474  1459  2C60               	goto	l4762
  5475                           
  5476                           ;main.c: 1158: {
  5477                           ;main.c: 1161: TypeU.TypeS.wirespeed=1;
  5478  145A  1465               	bsf	_TypeU,0
  5479                           
  5480                           ;main.c: 1162: TypeU.TypeS.amp=0;
  5481  145B  1066               	bcf	_TypeU+1,0
  5482                           
  5483                           ;main.c: 1163: TypeU.TypeS.thickness=0;
  5484  145C  10E5               	bcf	_TypeU,1
  5485  145D                     L12:	
  5486                           
  5487                           ;main.c: 1164: TypeDP.DPGROUP[0]=0x00;
  5488  145D  01EB               	clrf	_TypeDP
  5489                           
  5490                           ;main.c: 1165: TypeDP.TypeD.digitdp2 =1;
  5491  145E  14EB               	bsf	_TypeDP,1
  5492  145F                     l4760:	
  5493                           
  5494                           ;main.c: 1166: TypeDP.TypeD.digitdp5 =1;
  5495  145F  166B               	bsf	_TypeDP,4
  5496  1460                     l4762:	
  5497                           
  5498                           ;main.c: 1168: }
  5499                           ;main.c: 1170: dispupdatef =1;
  5500  1460  3001               	movlw	1
  5501  1461  0021               	movlb	1	; select bank1
  5502  1462  00DB               	movwf	??_key_application^(0+128)
  5503  1463  085B               	movf	??_key_application^(0+128),w
  5504  1464  0020               	movlb	0	; select bank0
  5505  1465  00EF               	movwf	_dispupdatef	;volatile
  5506                           
  5507                           ;main.c: 1171: }
  5508  1466  0008               	return
  5509  1467                     l4764:	
  5510                           
  5511                           ;main.c: 1172: else if(keypress==0)
  5512  1467  0021               	movlb	1	; select bank1
  5513  1468  085D               	movf	key_application@keypress^(0+128),w
  5514  1469  1D03               	btfss	3,2
  5515  146A  0008               	return
  5516                           
  5517                           ;main.c: 1173: {
  5518                           ;main.c: 1174: TypeU.TypeS.gason =0;
  5519  146B  0020               	movlb	0	; select bank0
  5520  146C  11E5               	bcf	_TypeU,3
  5521                           
  5522                           ;main.c: 1175: TypeU.TypeS.inch =0;
  5523  146D  11E6               	bcf	_TypeU+1,3
  5524                           
  5525                           ;main.c: 1179: inchkeyon =0;
  5526  146E  0023               	movlb	3	; select bank3
  5527  146F  01D3               	clrf	_inchkeyon^(0+384)
  5528  1470  0008               	return
  5529  1471                     __end_of_key_application:	
  5530                           
  5531                           	psect	text8
  5532  1A7B                     __ptext8:	
  5533 ;; *************** function _disp_hex_window2 *****************
  5534 ;; Defined at:
  5535 ;;		line 163 in file "DISPLAY.C"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  hex_data        2    8[BANK1 ] unsigned int 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;		None               void
  5542 ;; Registers used:
  5543 ;;		wreg, status,2, status,0, pclath, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5549 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5551 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5552 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5553 ;;Total ram usage:        3 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    4
  5556 ;; This function calls:
  5557 ;;		___lwdiv
  5558 ;;		___lwmod
  5559 ;; This function is called by:
  5560 ;;		_main
  5561 ;;		_key_application
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           
  5566                           ;psect for function _disp_hex_window2
  5567  1A7B                     _disp_hex_window2:	
  5568                           
  5569                           ;DISPLAY.C: 165: diswin1[5]= hex_data % 10;
  5570                           
  5571                           ;incstack = 0
  5572                           ; Regs used in _disp_hex_window2: [wreg+status,2+status,0+pclath+cstack]
  5573  1A7B  300A               	movlw	10
  5574  1A7C  0021               	movlb	1	; select bank1
  5575  1A7D  00A0               	movwf	___lwmod@divisor^(0+128)
  5576  1A7E  3000               	movlw	0
  5577  1A7F  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5578  1A80  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5579  1A81  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  5580  1A82  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5581  1A83  00A2               	movwf	___lwmod@dividend^(0+128)
  5582  1A84  3188  2000  319A   	fcall	___lwmod
  5583  1A87  0021               	movlb	1	; select bank1
  5584  1A88  0820               	movf	?___lwmod^(0+128),w
  5585  1A89  00AA               	movwf	??_disp_hex_window2^(0+128)
  5586  1A8A  082A               	movf	??_disp_hex_window2^(0+128),w
  5587  1A8B  0023               	movlb	3	; select bank3
  5588  1A8C  00DF               	movwf	(_diswin1^(0+384)+5)
  5589                           
  5590                           ;DISPLAY.C: 166: hex_data /= 10;
  5591  1A8D  300A               	movlw	10
  5592  1A8E  0021               	movlb	1	; select bank1
  5593  1A8F  00A0               	movwf	___lwdiv@divisor^(0+128)
  5594  1A90  3000               	movlw	0
  5595  1A91  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5596  1A92  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5597  1A93  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  5598  1A94  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5599  1A95  00A2               	movwf	___lwdiv@dividend^(0+128)
  5600  1A96  3187  27C8  319A   	fcall	___lwdiv
  5601  1A99  0021               	movlb	1	; select bank1
  5602  1A9A  0821               	movf	(?___lwdiv+1)^(0+128),w
  5603  1A9B  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  5604  1A9C  0820               	movf	?___lwdiv^(0+128),w
  5605  1A9D  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  5606                           
  5607                           ;DISPLAY.C: 167: diswin1[4]= hex_data % 10;
  5608  1A9E  300A               	movlw	10
  5609  1A9F  00A0               	movwf	___lwmod@divisor^(0+128)
  5610  1AA0  3000               	movlw	0
  5611  1AA1  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5612  1AA2  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5613  1AA3  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  5614  1AA4  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5615  1AA5  00A2               	movwf	___lwmod@dividend^(0+128)
  5616  1AA6  3188  2000  319A   	fcall	___lwmod
  5617  1AA9  0021               	movlb	1	; select bank1
  5618  1AAA  0820               	movf	?___lwmod^(0+128),w
  5619  1AAB  00AA               	movwf	??_disp_hex_window2^(0+128)
  5620  1AAC  082A               	movf	??_disp_hex_window2^(0+128),w
  5621  1AAD  0023               	movlb	3	; select bank3
  5622  1AAE  00DE               	movwf	(_diswin1^(0+384)+4)
  5623                           
  5624                           ;DISPLAY.C: 168: hex_data /= 10;
  5625  1AAF  300A               	movlw	10
  5626  1AB0  0021               	movlb	1	; select bank1
  5627  1AB1  00A0               	movwf	___lwdiv@divisor^(0+128)
  5628  1AB2  3000               	movlw	0
  5629  1AB3  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5630  1AB4  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5631  1AB5  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  5632  1AB6  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5633  1AB7  00A2               	movwf	___lwdiv@dividend^(0+128)
  5634  1AB8  3187  27C8  319A   	fcall	___lwdiv
  5635  1ABB  0021               	movlb	1	; select bank1
  5636  1ABC  0821               	movf	(?___lwdiv+1)^(0+128),w
  5637  1ABD  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  5638  1ABE  0820               	movf	?___lwdiv^(0+128),w
  5639  1ABF  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  5640                           
  5641                           ;DISPLAY.C: 169: diswin1[3]= hex_data % 10;
  5642  1AC0  300A               	movlw	10
  5643  1AC1  00A0               	movwf	___lwmod@divisor^(0+128)
  5644  1AC2  3000               	movlw	0
  5645  1AC3  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5646  1AC4  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5647  1AC5  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  5648  1AC6  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5649  1AC7  00A2               	movwf	___lwmod@dividend^(0+128)
  5650  1AC8  3188  2000         	fcall	___lwmod
  5651  1ACA  0021               	movlb	1	; select bank1
  5652  1ACB  0820               	movf	?___lwmod^(0+128),w
  5653  1ACC  00AA               	movwf	??_disp_hex_window2^(0+128)
  5654  1ACD  082A               	movf	??_disp_hex_window2^(0+128),w
  5655  1ACE  0023               	movlb	3	; select bank3
  5656  1ACF  00DD               	movwf	(_diswin1^(0+384)+3)
  5657                           
  5658                           ;DISPLAY.C: 170: diswin1[6]=0x00;
  5659  1AD0  01E0               	clrf	(_diswin1^(0+384)+6)
  5660                           
  5661                           ;DISPLAY.C: 171: diswin1[7]=0x00;
  5662  1AD1  01E1               	clrf	(_diswin1^(0+384)+7)
  5663  1AD2  0008               	return
  5664  1AD3                     __end_of_disp_hex_window2:	
  5665                           
  5666                           	psect	text9
  5667  27C2                     __ptext9:	
  5668 ;; *************** function _disp_hex_window22 *****************
  5669 ;; Defined at:
  5670 ;;		line 186 in file "DISPLAY.C"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;  hex_data        2    0[BANK1 ] unsigned int 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;		None               void
  5677 ;; Registers used:
  5678 ;;		None
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5684 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5687 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5688 ;;Total ram usage:        2 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    3
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		_main
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           
  5699                           ;psect for function _disp_hex_window22
  5700  27C2                     _disp_hex_window22:	
  5701                           
  5702                           ;incstack = 0
  5703                           ; Regs used in _disp_hex_window22: []
  5704  27C2  0008               	return
  5705  27C3                     __end_of_disp_hex_window22:	
  5706                           
  5707                           	psect	text10
  5708  27C1                     __ptext10:	
  5709 ;; *************** function _disp_hex_window11 *****************
  5710 ;; Defined at:
  5711 ;;		line 175 in file "DISPLAY.C"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  hex_data        2    0[BANK1 ] unsigned int 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;		None               void
  5718 ;; Registers used:
  5719 ;;		None
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5725 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5728 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5729 ;;Total ram usage:        2 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    3
  5732 ;; This function calls:
  5733 ;;		Nothing
  5734 ;; This function is called by:
  5735 ;;		_main
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           
  5740                           ;psect for function _disp_hex_window11
  5741  27C1                     _disp_hex_window11:	
  5742                           
  5743                           ;incstack = 0
  5744                           ; Regs used in _disp_hex_window11: []
  5745  27C1  0008               	return
  5746  27C2                     __end_of_disp_hex_window11:	
  5747                           
  5748                           	psect	text11
  5749  19CE                     __ptext11:	
  5750 ;; *************** function _disp_hex_window1 *****************
  5751 ;; Defined at:
  5752 ;;		line 152 in file "DISPLAY.C"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  hex_data        2    8[BANK1 ] unsigned int 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;		None               void
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0, pclath, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5766 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5768 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5769 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5770 ;;Total ram usage:        3 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    4
  5773 ;; This function calls:
  5774 ;;		___lwdiv
  5775 ;;		___lwmod
  5776 ;; This function is called by:
  5777 ;;		_main
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function _disp_hex_window1
  5783  19CE                     _disp_hex_window1:	
  5784                           
  5785                           ;DISPLAY.C: 155: diswin1[2]= hex_data % 10;
  5786                           
  5787                           ;incstack = 0
  5788                           ; Regs used in _disp_hex_window1: [wreg+status,2+status,0+pclath+cstack]
  5789  19CE  300A               	movlw	10
  5790  19CF  0021               	movlb	1	; select bank1
  5791  19D0  00A0               	movwf	___lwmod@divisor^(0+128)
  5792  19D1  3000               	movlw	0
  5793  19D2  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5794  19D3  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5795  19D4  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  5796  19D5  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5797  19D6  00A2               	movwf	___lwmod@dividend^(0+128)
  5798  19D7  3188  2000  3199   	fcall	___lwmod
  5799  19DA  0021               	movlb	1	; select bank1
  5800  19DB  0820               	movf	?___lwmod^(0+128),w
  5801  19DC  00AA               	movwf	??_disp_hex_window1^(0+128)
  5802  19DD  082A               	movf	??_disp_hex_window1^(0+128),w
  5803  19DE  0023               	movlb	3	; select bank3
  5804  19DF  00DC               	movwf	(_diswin1^(0+384)+2)
  5805                           
  5806                           ;DISPLAY.C: 156: hex_data /= 10;
  5807  19E0  300A               	movlw	10
  5808  19E1  0021               	movlb	1	; select bank1
  5809  19E2  00A0               	movwf	___lwdiv@divisor^(0+128)
  5810  19E3  3000               	movlw	0
  5811  19E4  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5812  19E5  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5813  19E6  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  5814  19E7  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5815  19E8  00A2               	movwf	___lwdiv@dividend^(0+128)
  5816  19E9  3187  27C8  3199   	fcall	___lwdiv
  5817  19EC  0021               	movlb	1	; select bank1
  5818  19ED  0821               	movf	(?___lwdiv+1)^(0+128),w
  5819  19EE  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  5820  19EF  0820               	movf	?___lwdiv^(0+128),w
  5821  19F0  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  5822                           
  5823                           ;DISPLAY.C: 157: diswin1[1]= hex_data % 10;
  5824  19F1  300A               	movlw	10
  5825  19F2  00A0               	movwf	___lwmod@divisor^(0+128)
  5826  19F3  3000               	movlw	0
  5827  19F4  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5828  19F5  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5829  19F6  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  5830  19F7  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5831  19F8  00A2               	movwf	___lwmod@dividend^(0+128)
  5832  19F9  3188  2000  3199   	fcall	___lwmod
  5833  19FC  0021               	movlb	1	; select bank1
  5834  19FD  0820               	movf	?___lwmod^(0+128),w
  5835  19FE  00AA               	movwf	??_disp_hex_window1^(0+128)
  5836  19FF  082A               	movf	??_disp_hex_window1^(0+128),w
  5837  1A00  0023               	movlb	3	; select bank3
  5838  1A01  00DB               	movwf	(_diswin1^(0+384)+1)
  5839                           
  5840                           ;DISPLAY.C: 158: hex_data /= 10;
  5841  1A02  300A               	movlw	10
  5842  1A03  0021               	movlb	1	; select bank1
  5843  1A04  00A0               	movwf	___lwdiv@divisor^(0+128)
  5844  1A05  3000               	movlw	0
  5845  1A06  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5846  1A07  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5847  1A08  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  5848  1A09  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5849  1A0A  00A2               	movwf	___lwdiv@dividend^(0+128)
  5850  1A0B  3187  27C8  3199   	fcall	___lwdiv
  5851  1A0E  0021               	movlb	1	; select bank1
  5852  1A0F  0821               	movf	(?___lwdiv+1)^(0+128),w
  5853  1A10  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  5854  1A11  0820               	movf	?___lwdiv^(0+128),w
  5855  1A12  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  5856                           
  5857                           ;DISPLAY.C: 159: diswin1[0]= hex_data % 10;
  5858  1A13  300A               	movlw	10
  5859  1A14  00A0               	movwf	___lwmod@divisor^(0+128)
  5860  1A15  3000               	movlw	0
  5861  1A16  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5862  1A17  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5863  1A18  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  5864  1A19  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5865  1A1A  00A2               	movwf	___lwmod@dividend^(0+128)
  5866  1A1B  3188  2000         	fcall	___lwmod
  5867  1A1D  0021               	movlb	1	; select bank1
  5868  1A1E  0820               	movf	?___lwmod^(0+128),w
  5869  1A1F  00AA               	movwf	??_disp_hex_window1^(0+128)
  5870  1A20  082A               	movf	??_disp_hex_window1^(0+128),w
  5871  1A21  0023               	movlb	3	; select bank3
  5872  1A22  00DA               	movwf	_diswin1^(0+384)
  5873  1A23  0008               	return
  5874  1A24                     __end_of_disp_hex_window1:	
  5875                           
  5876                           	psect	text12
  5877  0800                     __ptext12:	
  5878 ;; *************** function ___lwmod *****************
  5879 ;; Defined at:
  5880 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  divisor         2    0[BANK1 ] unsigned int 
  5883 ;;  dividend        2    2[BANK1 ] unsigned int 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  counter         1    5[BANK1 ] unsigned char 
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  2    0[BANK1 ] unsigned int 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5895 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5896 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5897 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5898 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5899 ;;Total ram usage:        6 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    3
  5902 ;; This function calls:
  5903 ;;		Nothing
  5904 ;; This function is called by:
  5905 ;;		_disp_hex_window1
  5906 ;;		_disp_hex_window2
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           
  5911                           ;psect for function ___lwmod
  5912  0800                     ___lwmod:	
  5913                           
  5914                           ;incstack = 0
  5915                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5916  0800  0021               	movlb	1	; select bank1
  5917  0801  0820               	movf	___lwmod@divisor^(0+128),w
  5918  0802  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  5919  0803  1903               	btfsc	3,2
  5920  0804  2828               	goto	l3770
  5921  0805  01A5               	clrf	___lwmod@counter^(0+128)
  5922  0806  0AA5               	incf	___lwmod@counter^(0+128),f
  5923  0807                     l3760:	
  5924  0807  1BA1               	btfsc	(___lwmod@divisor+1)^(0+128),7
  5925  0808  2813               	goto	l3762
  5926  0809  3001               	movlw	1
  5927  080A                     u4725:	
  5928  080A  35A0               	lslf	___lwmod@divisor^(0+128),f
  5929  080B  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  5930  080C  0B89               	decfsz	9,f
  5931  080D  280A               	goto	u4725
  5932  080E  3001               	movlw	1
  5933  080F  00A4               	movwf	??___lwmod^(0+128)
  5934  0810  0824               	movf	??___lwmod^(0+128),w
  5935  0811  07A5               	addwf	___lwmod@counter^(0+128),f
  5936  0812  2807               	goto	l3760
  5937  0813                     l3762:	
  5938  0813  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5939  0814  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  5940  0815  1D03               	skipz
  5941  0816  2819               	goto	u4745
  5942  0817  0820               	movf	___lwmod@divisor^(0+128),w
  5943  0818  0222               	subwf	___lwmod@dividend^(0+128),w
  5944  0819                     u4745:	
  5945  0819  1C03               	skipc
  5946  081A  281F               	goto	l3766
  5947  081B  0820               	movf	___lwmod@divisor^(0+128),w
  5948  081C  02A2               	subwf	___lwmod@dividend^(0+128),f
  5949  081D  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5950  081E  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
  5951  081F                     l3766:	
  5952  081F  3001               	movlw	1
  5953  0820                     u4755:	
  5954  0820  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
  5955  0821  0CA0               	rrf	___lwmod@divisor^(0+128),f
  5956  0822  0B89               	decfsz	9,f
  5957  0823  2820               	goto	u4755
  5958  0824  3001               	movlw	1
  5959  0825  02A5               	subwf	___lwmod@counter^(0+128),f
  5960  0826  1D03               	btfss	3,2
  5961  0827  2813               	goto	l3762
  5962  0828                     l3770:	
  5963  0828  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  5964  0829  00A1               	movwf	(?___lwmod+1)^(0+128)
  5965  082A  0822               	movf	___lwmod@dividend^(0+128),w
  5966  082B  00A0               	movwf	?___lwmod^(0+128)
  5967  082C  0008               	return
  5968  082D                     __end_of___lwmod:	
  5969                           
  5970                           	psect	text13
  5971  07C8                     __ptext13:	
  5972 ;; *************** function ___lwdiv *****************
  5973 ;; Defined at:
  5974 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  divisor         2    0[BANK1 ] unsigned int 
  5977 ;;  dividend        2    2[BANK1 ] unsigned int 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  quotient        2    5[BANK1 ] unsigned int 
  5980 ;;  counter         1    7[BANK1 ] unsigned char 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  2    0[BANK1 ] unsigned int 
  5983 ;; Registers used:
  5984 ;;		wreg, status,2, status,0
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5990 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5991 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5992 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5993 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5994 ;;Total ram usage:        8 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    3
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		_disp_hex_window1
  6001 ;;		_disp_hex_window2
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           
  6006                           ;psect for function ___lwdiv
  6007  07C8                     ___lwdiv:	
  6008                           
  6009                           ;incstack = 0
  6010                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6011  07C8  0021               	movlb	1	; select bank1
  6012  07C9  01A5               	clrf	___lwdiv@quotient^(0+128)
  6013  07CA  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  6014  07CB  0820               	movf	___lwdiv@divisor^(0+128),w
  6015  07CC  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  6016  07CD  1903               	btfsc	3,2
  6017  07CE  2FF8               	goto	l3748
  6018  07CF  01A7               	clrf	___lwdiv@counter^(0+128)
  6019  07D0  0AA7               	incf	___lwdiv@counter^(0+128),f
  6020  07D1                     l3736:	
  6021  07D1  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  6022  07D2  2FDD               	goto	l3738
  6023  07D3  3001               	movlw	1
  6024  07D4                     u4655:	
  6025  07D4  35A0               	lslf	___lwdiv@divisor^(0+128),f
  6026  07D5  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  6027  07D6  0B89               	decfsz	9,f
  6028  07D7  2FD4               	goto	u4655
  6029  07D8  3001               	movlw	1
  6030  07D9  00A4               	movwf	??___lwdiv^(0+128)
  6031  07DA  0824               	movf	??___lwdiv^(0+128),w
  6032  07DB  07A7               	addwf	___lwdiv@counter^(0+128),f
  6033  07DC  2FD1               	goto	l3736
  6034  07DD                     l3738:	
  6035  07DD  3001               	movlw	1
  6036  07DE                     u4675:	
  6037  07DE  35A5               	lslf	___lwdiv@quotient^(0+128),f
  6038  07DF  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  6039  07E0  0B89               	decfsz	9,f
  6040  07E1  2FDE               	goto	u4675
  6041  07E2  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  6042  07E3  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  6043  07E4  1D03               	skipz
  6044  07E5  2FE8               	goto	u4685
  6045  07E6  0820               	movf	___lwdiv@divisor^(0+128),w
  6046  07E7  0222               	subwf	___lwdiv@dividend^(0+128),w
  6047  07E8                     u4685:	
  6048  07E8  1C03               	skipc
  6049  07E9  2FEF               	goto	l3744
  6050  07EA  0820               	movf	___lwdiv@divisor^(0+128),w
  6051  07EB  02A2               	subwf	___lwdiv@dividend^(0+128),f
  6052  07EC  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  6053  07ED  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  6054  07EE  1425               	bsf	___lwdiv@quotient^(0+128),0
  6055  07EF                     l3744:	
  6056  07EF  3001               	movlw	1
  6057  07F0                     u4695:	
  6058  07F0  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  6059  07F1  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  6060  07F2  0B89               	decfsz	9,f
  6061  07F3  2FF0               	goto	u4695
  6062  07F4  3001               	movlw	1
  6063  07F5  02A7               	subwf	___lwdiv@counter^(0+128),f
  6064  07F6  1D03               	btfss	3,2
  6065  07F7  2FDD               	goto	l3738
  6066  07F8                     l3748:	
  6067  07F8  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  6068  07F9  00A1               	movwf	(?___lwdiv+1)^(0+128)
  6069  07FA  0825               	movf	___lwdiv@quotient^(0+128),w
  6070  07FB  00A0               	movwf	?___lwdiv^(0+128)
  6071  07FC  0008               	return
  6072  07FD                     __end_of___lwdiv:	
  6073                           
  6074                           	psect	text14
  6075  10BD                     __ptext14:	
  6076 ;; *************** function _detect_display_error *****************
  6077 ;; Defined at:
  6078 ;;		line 1371 in file "main.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;		None
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;		None
  6083 ;; Return value:  Size  Location     Type
  6084 ;;		None               void
  6085 ;; Registers used:
  6086 ;;		wreg, status,2, status,0, pclath, cstack
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 0/0
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6094 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6095 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6096 ;;Total ram usage:        1 bytes
  6097 ;; Hardware stack levels used:    1
  6098 ;; Hardware stack levels required when called:    4
  6099 ;; This function calls:
  6100 ;;		_Update_PWM
  6101 ;; This function is called by:
  6102 ;;		_main
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           
  6107                           ;psect for function _detect_display_error
  6108  10BD                     _detect_display_error:	
  6109                           
  6110                           ;main.c: 1374: pstowfstru.pstowfstrs.error_code1=erroru.errorstatusbyte[0];
  6111                           
  6112                           ;incstack = 0
  6113                           ; Regs used in _detect_display_error: [wreg+status,2+status,0+pclath+cstack]
  6114  10BD  0022               	movlb	2	; select bank2
  6115  10BE  086A               	movf	_erroru^(0+256),w
  6116  10BF  0021               	movlb	1	; select bank1
  6117  10C0  00DB               	movwf	??_detect_display_error^(0+128)
  6118  10C1  085B               	movf	??_detect_display_error^(0+128),w
  6119  10C2  0024               	movlb	4	; select bank4
  6120  10C3  00DE               	movwf	(_pstowfstru^(0+512)+16)
  6121                           
  6122                           ;main.c: 1375: pstowfstru.pstowfstrs.error_code2=erroru.errorstatusbyte[1];
  6123  10C4  0022               	movlb	2	; select bank2
  6124  10C5  086B               	movf	(_erroru^(0+256)+1),w
  6125  10C6  0021               	movlb	1	; select bank1
  6126  10C7  00DB               	movwf	??_detect_display_error^(0+128)
  6127  10C8  085B               	movf	??_detect_display_error^(0+128),w
  6128  10C9  0024               	movlb	4	; select bank4
  6129  10CA  00DF               	movwf	(_pstowfstru^(0+512)+17)
  6130                           
  6131                           ;main.c: 1377: if(erroru.errors.uv_er1==1)
  6132  10CB  0022               	movlb	2	; select bank2
  6133  10CC  1C6A               	btfss	_erroru^(0+256),0
  6134  10CD  28D8               	goto	l857
  6135                           
  6136                           ;main.c: 1378: {
  6137                           ;main.c: 1379: universal_error=1;
  6138  10CE  3001               	movlw	1
  6139  10CF  0021               	movlb	1	; select bank1
  6140  10D0  00DB               	movwf	??_detect_display_error^(0+128)
  6141  10D1  085B               	movf	??_detect_display_error^(0+128),w
  6142  10D2  0022               	movlb	2	; select bank2
  6143  10D3  00E6               	movwf	_universal_error^(0+256)	;volatile
  6144                           
  6145                           ;main.c: 1380: diswin1[5]=1;
  6146  10D4  0023               	movlb	3	; select bank3
  6147  10D5  01DF               	clrf	(_diswin1^(0+384)+5)
  6148  10D6  0ADF               	incf	(_diswin1^(0+384)+5),f
  6149                           
  6150                           ;main.c: 1381: }
  6151  10D7  293D               	goto	l4806
  6152  10D8                     l857:	
  6153                           
  6154                           ;main.c: 1382: else if(erroru.errors.ov_er2==1)
  6155  10D8  1CEA               	btfss	_erroru^(0+256),1
  6156  10D9  28E2               	goto	l859
  6157                           
  6158                           ;main.c: 1383: {
  6159                           ;main.c: 1384: universal_error=1;
  6160  10DA  3001               	movlw	1
  6161  10DB  0021               	movlb	1	; select bank1
  6162  10DC  00DB               	movwf	??_detect_display_error^(0+128)
  6163  10DD  085B               	movf	??_detect_display_error^(0+128),w
  6164  10DE  0022               	movlb	2	; select bank2
  6165  10DF  00E6               	movwf	_universal_error^(0+256)	;volatile
  6166                           
  6167                           ;main.c: 1385: diswin1[5]=2;
  6168  10E0  3002               	movlw	2
  6169  10E1  2928               	goto	L18
  6170  10E2                     l859:	
  6171                           ;main.c: 1386: }
  6172                           
  6173                           
  6174                           ;main.c: 1387: else if(erroru.errors.th_er3==1)
  6175  10E2  1D6A               	btfss	_erroru^(0+256),2
  6176  10E3  28EC               	goto	l861
  6177                           
  6178                           ;main.c: 1388: {
  6179                           ;main.c: 1389: universal_error=1;
  6180  10E4  3001               	movlw	1
  6181  10E5  0021               	movlb	1	; select bank1
  6182  10E6  00DB               	movwf	??_detect_display_error^(0+128)
  6183  10E7  085B               	movf	??_detect_display_error^(0+128),w
  6184  10E8  0022               	movlb	2	; select bank2
  6185  10E9  00E6               	movwf	_universal_error^(0+256)	;volatile
  6186                           
  6187                           ;main.c: 1390: diswin1[5]=3;
  6188  10EA  3003               	movlw	3
  6189  10EB  2928               	goto	L18
  6190  10EC                     l861:	
  6191                           ;main.c: 1391: }
  6192                           
  6193                           
  6194                           ;main.c: 1392: else if(erroru.errors.no_curr_er4==1)
  6195  10EC  1DEA               	btfss	_erroru^(0+256),3
  6196  10ED  28F6               	goto	l863
  6197                           
  6198                           ;main.c: 1393: {
  6199                           ;main.c: 1394: universal_error=1;
  6200  10EE  3001               	movlw	1
  6201  10EF  0021               	movlb	1	; select bank1
  6202  10F0  00DB               	movwf	??_detect_display_error^(0+128)
  6203  10F1  085B               	movf	??_detect_display_error^(0+128),w
  6204  10F2  0022               	movlb	2	; select bank2
  6205  10F3  00E6               	movwf	_universal_error^(0+256)	;volatile
  6206                           
  6207                           ;main.c: 1395: diswin1[5]=4;
  6208  10F4  3004               	movlw	4
  6209  10F5  2928               	goto	L18
  6210  10F6                     l863:	
  6211                           ;main.c: 1396: }else if(erroru.errors.motor_over_ld_er5==1)
  6212                           
  6213  10F6  1E6A               	btfss	_erroru^(0+256),4
  6214  10F7  2900               	goto	l865
  6215                           
  6216                           ;main.c: 1397: {
  6217                           ;main.c: 1398: universal_error=1;
  6218  10F8  3001               	movlw	1
  6219  10F9  0021               	movlb	1	; select bank1
  6220  10FA  00DB               	movwf	??_detect_display_error^(0+128)
  6221  10FB  085B               	movf	??_detect_display_error^(0+128),w
  6222  10FC  0022               	movlb	2	; select bank2
  6223  10FD  00E6               	movwf	_universal_error^(0+256)	;volatile
  6224                           
  6225                           ;main.c: 1399: diswin1[5]=5;
  6226  10FE  3005               	movlw	5
  6227  10FF  2928               	goto	L18
  6228  1100                     l865:	
  6229                           ;main.c: 1400: }
  6230                           
  6231                           
  6232                           ;main.c: 1401: else if(erroru.errors.wirefdr_er6==1)
  6233  1100  1EEA               	btfss	_erroru^(0+256),5
  6234  1101  290A               	goto	l867
  6235                           
  6236                           ;main.c: 1402: {
  6237                           ;main.c: 1403: universal_error=1;
  6238  1102  3001               	movlw	1
  6239  1103  0021               	movlb	1	; select bank1
  6240  1104  00DB               	movwf	??_detect_display_error^(0+128)
  6241  1105  085B               	movf	??_detect_display_error^(0+128),w
  6242  1106  0022               	movlb	2	; select bank2
  6243  1107  00E6               	movwf	_universal_error^(0+256)	;volatile
  6244                           
  6245                           ;main.c: 1404: diswin1[5]=6;
  6246  1108  3006               	movlw	6
  6247  1109  2928               	goto	L18
  6248  110A                     l867:	
  6249                           ;main.c: 1405: }
  6250                           
  6251                           
  6252                           ;main.c: 1406: else if(erroru.errors.water_press_er7==1 && ( (weldmode=='P') || (weldmod
      +                          e=='G') ) )
  6253  110A  1F6A               	btfss	_erroru^(0+256),6
  6254  110B  291D               	goto	l4794
  6255  110C  3050               	movlw	80
  6256  110D  0020               	movlb	0	; select bank0
  6257  110E  0664               	xorwf	_weldmode,w	;volatile
  6258  110F  1903               	btfsc	3,2
  6259  1110  2915               	goto	l4792
  6260  1111  3047               	movlw	71
  6261  1112  0664               	xorwf	_weldmode,w	;volatile
  6262  1113  1D03               	btfss	3,2
  6263  1114  291D               	goto	l4794
  6264  1115                     l4792:	
  6265                           
  6266                           ;main.c: 1407: {
  6267                           ;main.c: 1408: universal_error=1;
  6268  1115  3001               	movlw	1
  6269  1116  0021               	movlb	1	; select bank1
  6270  1117  00DB               	movwf	??_detect_display_error^(0+128)
  6271  1118  085B               	movf	??_detect_display_error^(0+128),w
  6272  1119  0022               	movlb	2	; select bank2
  6273  111A  00E6               	movwf	_universal_error^(0+256)	;volatile
  6274                           
  6275                           ;main.c: 1409: diswin1[5]=7;
  6276  111B  3007               	movlw	7
  6277  111C  2928               	goto	L18
  6278  111D                     l4794:	
  6279                           ;main.c: 1410: }
  6280                           
  6281                           
  6282                           ;main.c: 1411: else if(error8==1)
  6283  111D  0022               	movlb	2	; select bank2
  6284  111E  0346               	decf	_error8^(0+256),w	;volatile
  6285  111F  1D03               	btfss	3,2
  6286  1120  292E               	goto	l873
  6287                           
  6288                           ;main.c: 1412: {
  6289                           ;main.c: 1413: universal_error=1;
  6290  1121  3001               	movlw	1
  6291  1122  0021               	movlb	1	; select bank1
  6292  1123  00DB               	movwf	??_detect_display_error^(0+128)
  6293  1124  085B               	movf	??_detect_display_error^(0+128),w
  6294  1125  0022               	movlb	2	; select bank2
  6295  1126  00E6               	movwf	_universal_error^(0+256)	;volatile
  6296                           
  6297                           ;main.c: 1414: diswin1[5]=8;
  6298  1127  3008               	movlw	8
  6299  1128                     L18:	
  6300  1128  0021               	movlb	1	; select bank1
  6301  1129  00DB               	movwf	??_detect_display_error^(0+128)
  6302  112A  085B               	movf	??_detect_display_error^(0+128),w
  6303  112B  0023               	movlb	3	; select bank3
  6304  112C  00DF               	movwf	(_diswin1^(0+384)+5)
  6305                           
  6306                           ;main.c: 1415: }
  6307  112D  293D               	goto	l4806
  6308  112E                     l873:	
  6309                           
  6310                           ;main.c: 1416: else if(erroru.errors.motor_fb_err==1)
  6311  112E  1D6B               	btfss	(_erroru^(0+256)+1),2
  6312  112F  293B               	goto	l4804
  6313                           
  6314                           ;main.c: 1417: {
  6315                           ;main.c: 1418: universal_error=1;
  6316  1130  3001               	movlw	1
  6317  1131  0021               	movlb	1	; select bank1
  6318  1132  00DB               	movwf	??_detect_display_error^(0+128)
  6319  1133  085B               	movf	??_detect_display_error^(0+128),w
  6320  1134  0022               	movlb	2	; select bank2
  6321  1135  00E6               	movwf	_universal_error^(0+256)	;volatile
  6322                           
  6323                           ;main.c: 1419: diswin1[4]=1;
  6324  1136  0023               	movlb	3	; select bank3
  6325  1137  01DE               	clrf	(_diswin1^(0+384)+4)
  6326  1138  0ADE               	incf	(_diswin1^(0+384)+4),f
  6327                           
  6328                           ;main.c: 1420: diswin1[5]=0;
  6329  1139  01DF               	clrf	(_diswin1^(0+384)+5)
  6330                           
  6331                           ;main.c: 1421: }
  6332  113A  293D               	goto	l4806
  6333  113B                     l4804:	
  6334                           
  6335                           ;main.c: 1422: else
  6336                           ;main.c: 1423: universal_error=0;
  6337  113B  0022               	movlb	2	; select bank2
  6338  113C  01E6               	clrf	_universal_error^(0+256)	;volatile
  6339  113D                     l4806:	
  6340                           
  6341                           ;main.c: 1425: if(universal_error==1)
  6342  113D  0022               	movlb	2	; select bank2
  6343  113E  0366               	decf	_universal_error^(0+256),w	;volatile
  6344  113F  1D03               	btfss	3,2
  6345  1140  0008               	return
  6346                           
  6347                           ;main.c: 1426: {
  6348                           ;main.c: 1427: universal_error_latch=1;
  6349  1141  3001               	movlw	1
  6350  1142  0021               	movlb	1	; select bank1
  6351  1143  00DB               	movwf	??_detect_display_error^(0+128)
  6352  1144  085B               	movf	??_detect_display_error^(0+128),w
  6353  1145  0022               	movlb	2	; select bank2
  6354  1146  00E7               	movwf	_universal_error_latch^(0+256)	;volatile
  6355                           
  6356                           ;main.c: 1428: diswin1[0]=0x0F;
  6357  1147  300F               	movlw	15
  6358  1148  0021               	movlb	1	; select bank1
  6359  1149  00DB               	movwf	??_detect_display_error^(0+128)
  6360  114A  085B               	movf	??_detect_display_error^(0+128),w
  6361  114B  0023               	movlb	3	; select bank3
  6362  114C  00DA               	movwf	_diswin1^(0+384)
  6363                           
  6364                           ;main.c: 1429: diswin1[1]=0x1C;
  6365  114D  301C               	movlw	28
  6366  114E  0021               	movlb	1	; select bank1
  6367  114F  00DB               	movwf	??_detect_display_error^(0+128)
  6368  1150  085B               	movf	??_detect_display_error^(0+128),w
  6369  1151  0023               	movlb	3	; select bank3
  6370  1152  00DB               	movwf	(_diswin1^(0+384)+1)
  6371                           
  6372                           ;main.c: 1430: diswin1[2]=0x1C;
  6373  1153  301C               	movlw	28
  6374  1154  0021               	movlb	1	; select bank1
  6375  1155  00DB               	movwf	??_detect_display_error^(0+128)
  6376  1156  085B               	movf	??_detect_display_error^(0+128),w
  6377  1157  0023               	movlb	3	; select bank3
  6378  1158  00DC               	movwf	(_diswin1^(0+384)+2)
  6379                           
  6380                           ;main.c: 1432: diswin1[3]=0;
  6381  1159  01DD               	clrf	(_diswin1^(0+384)+3)
  6382                           
  6383                           ;main.c: 1433: diswin1[4]=0;
  6384  115A  01DE               	clrf	(_diswin1^(0+384)+4)
  6385                           
  6386                           ;main.c: 1435: PORTCbits.RC3 =0;
  6387  115B  0020               	movlb	0	; select bank0
  6388  115C  118E               	bcf	14,3	;volatile
  6389                           
  6390                           ;main.c: 1436: Update_PWM(0);
  6391  115D  3000               	movlw	0
  6392  115E  0021               	movlb	1	; select bank1
  6393  115F  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  6394  1160  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  6395  1161  3199  2128         	fcall	_Update_PWM
  6396                           
  6397                           ;main.c: 1437: TypeDP.DPGROUP[0]=0;
  6398  1163  0020               	movlb	0	; select bank0
  6399  1164  01EB               	clrf	_TypeDP
  6400                           
  6401                           ;main.c: 1438: erroru.errors.comm_er8=1;
  6402  1165  0022               	movlb	2	; select bank2
  6403  1166  17EA               	bsf	_erroru^(0+256),7
  6404  1167  0008               	return
  6405  1168                     __end_of_detect_display_error:	
  6406                           
  6407                           	psect	text15
  6408  1811                     __ptext15:	
  6409 ;; *************** function _capture_init *****************
  6410 ;; Defined at:
  6411 ;;		line 1257 in file "main.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;		None
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;		None
  6416 ;; Return value:  Size  Location     Type
  6417 ;;		None               void
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6429 ;;Total ram usage:        0 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:    3
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_main
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           
  6440                           ;psect for function _capture_init
  6441  1811                     _capture_init:	
  6442                           
  6443                           ;main.c: 1259: TRISCbits.TRISC1 =1;
  6444                           
  6445                           ;incstack = 0
  6446                           ; Regs used in _capture_init: [wreg+status,2+status,0]
  6447  1811  0021               	movlb	1	; select bank1
  6448  1812  148E               	bsf	14,1	;volatile
  6449                           
  6450                           ;main.c: 1261: PIE2bits.CCP2IE = 1;
  6451  1813  1412               	bsf	18,0	;volatile
  6452                           
  6453                           ;main.c: 1262: CCP2CONbits.CCP2M=0x05;
  6454  1814  0025               	movlb	5	; select bank5
  6455  1815  081A               	movf	26,w	;volatile
  6456  1816  39F0               	andlw	-16
  6457  1817  3805               	iorlw	5
  6458  1818  009A               	movwf	26	;volatile
  6459                           
  6460                           ;main.c: 1263: TMR1H = 0x00;
  6461  1819  0020               	movlb	0	; select bank0
  6462  181A  0197               	clrf	23	;volatile
  6463                           
  6464                           ;main.c: 1264: TMR1L = 0x00;
  6465  181B  0196               	clrf	22	;volatile
  6466                           
  6467                           ;main.c: 1265: PIR1 = 0x00;
  6468  181C  0191               	clrf	17	;volatile
  6469                           
  6470                           ;main.c: 1267: T1CON = 0x21;
  6471  181D  3021               	movlw	33
  6472  181E  0098               	movwf	24	;volatile
  6473                           
  6474                           ;main.c: 1268: INTCONbits.GIE = 1;
  6475  181F  178B               	bsf	11,7	;volatile
  6476                           
  6477                           ;main.c: 1269: INTCONbits.PEIE = 1;
  6478  1820  170B               	bsf	11,6	;volatile
  6479  1821  0008               	return
  6480  1822                     __end_of_capture_init:	
  6481                           
  6482                           	psect	text16
  6483  1800                     __ptext16:	
  6484 ;; *************** function _Timer0_init *****************
  6485 ;; Defined at:
  6486 ;;		line 1215 in file "main.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;		None
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;		None
  6491 ;; Return value:  Size  Location     Type
  6492 ;;		None               void
  6493 ;; Registers used:
  6494 ;;		wreg, status,2, status,0
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6504 ;;Total ram usage:        0 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    3
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_main
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           
  6515                           ;psect for function _Timer0_init
  6516  1800                     _Timer0_init:	
  6517                           
  6518                           ;main.c: 1217: TMR0=0;
  6519                           
  6520                           ;incstack = 0
  6521                           ; Regs used in _Timer0_init: [wreg+status,2+status,0]
  6522  1800  0020               	movlb	0	; select bank0
  6523  1801  0195               	clrf	21	;volatile
  6524                           
  6525                           ;main.c: 1218: OPTION_REGbits.PSA=0;
  6526  1802  0021               	movlb	1	; select bank1
  6527  1803  1195               	bcf	21,3	;volatile
  6528                           
  6529                           ;main.c: 1219: OPTION_REGbits.T0CS=0;
  6530  1804  1295               	bcf	21,5	;volatile
  6531                           
  6532                           ;main.c: 1220: OPTION_REGbits.PS=5;
  6533  1805  0815               	movf	21,w	;volatile
  6534  1806  39F8               	andlw	-8
  6535  1807  3805               	iorlw	5
  6536  1808  0095               	movwf	21	;volatile
  6537                           
  6538                           ;main.c: 1221: INTCONbits.GIE=0;
  6539  1809  138B               	bcf	11,7	;volatile
  6540                           
  6541                           ;main.c: 1222: INTCONbits.PEIE=0;
  6542  180A  130B               	bcf	11,6	;volatile
  6543                           
  6544                           ;main.c: 1223: INTCONbits.T0IF=0;
  6545  180B  110B               	bcf	11,2	;volatile
  6546                           
  6547                           ;main.c: 1229: TMR0=0x85;
  6548  180C  3085               	movlw	133
  6549  180D  0020               	movlb	0	; select bank0
  6550  180E  0095               	movwf	21	;volatile
  6551                           
  6552                           ;main.c: 1230: INTCONbits.T0IE=1;
  6553  180F  168B               	bsf	11,5	;volatile
  6554  1810  0008               	return
  6555  1811                     __end_of_Timer0_init:	
  6556                           
  6557                           	psect	text17
  6558  1C56                     __ptext17:	
  6559 ;; *************** function _SCANENCODER2 *****************
  6560 ;; Defined at:
  6561 ;;		line 94 in file "ENCODER.C"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  result          1    6[BANK1 ] unsigned char 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      unsigned char 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0, pclath, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6576 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6577 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6578 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6579 ;;Total ram usage:        2 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    4
  6582 ;; This function calls:
  6583 ;;		_enc2_port
  6584 ;; This function is called by:
  6585 ;;		_main
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           
  6590                           ;psect for function _SCANENCODER2
  6591  1C56                     _SCANENCODER2:	
  6592                           
  6593                           ;ENCODER.C: 96: unsigned char result=0;
  6594                           
  6595                           ;incstack = 0
  6596                           ; Regs used in _SCANENCODER2: [wreg+status,2+status,0+pclath+cstack]
  6597  1C56  0021               	movlb	1	; select bank1
  6598  1C57  01A6               	clrf	SCANENCODER2@result^(0+128)
  6599                           
  6600                           ;ENCODER.C: 97: if(enc2_port() == 1)
  6601  1C58  319A  2224  319C   	fcall	_enc2_port
  6602  1C5B  3A01               	xorlw	1
  6603  1C5C  1D03               	skipz
  6604  1C5D  2CCA               	goto	l4460
  6605                           
  6606                           ;ENCODER.C: 98: {
  6607                           ;ENCODER.C: 99: if(firstpulse2==0 && secondpulse2==0)
  6608  1C5E  0022               	movlb	2	; select bank2
  6609  1C5F  0848               	movf	_firstpulse2^(0+256),w
  6610  1C60  1D03               	btfss	3,2
  6611  1C61  2C82               	goto	l4422
  6612  1C62  085F               	movf	_secondpulse2^(0+256),w
  6613  1C63  1D03               	btfss	3,2
  6614  1C64  2C82               	goto	l4422
  6615                           
  6616                           ;ENCODER.C: 100: {
  6617                           ;ENCODER.C: 101: if(new2==0x02)
  6618  1C65  3002               	movlw	2
  6619  1C66  0020               	movlb	0	; select bank0
  6620  1C67  0658               	xorwf	_new2,w
  6621  1C68  0459               	iorwf	_new2+1,w
  6622  1C69  1D03               	btfss	3,2
  6623  1C6A  2C76               	goto	l4412
  6624                           
  6625                           ;ENCODER.C: 102: {
  6626                           ;ENCODER.C: 103: firstpulse2=1;
  6627  1C6B  0022               	movlb	2	; select bank2
  6628  1C6C  01C8               	clrf	_firstpulse2^(0+256)
  6629  1C6D  0AC8               	incf	_firstpulse2^(0+256),f
  6630                           
  6631                           ;ENCODER.C: 104: secondpulse2=0;
  6632  1C6E  01DF               	clrf	_secondpulse2^(0+256)
  6633                           
  6634                           ;ENCODER.C: 105: plus222=1;
  6635  1C6F  01D6               	clrf	_plus222^(0+256)
  6636  1C70  0AD6               	incf	_plus222^(0+256),f
  6637                           
  6638                           ;ENCODER.C: 106: result='$';
  6639  1C71  3024               	movlw	36
  6640  1C72  0021               	movlb	1	; select bank1
  6641  1C73  00A5               	movwf	??_SCANENCODER2^(0+128)
  6642  1C74  0825               	movf	??_SCANENCODER2^(0+128),w
  6643  1C75  00A6               	movwf	SCANENCODER2@result^(0+128)
  6644  1C76                     l4412:	
  6645                           
  6646                           ;ENCODER.C: 107: }
  6647                           ;ENCODER.C: 108: if(new2==0x01)
  6648  1C76  0020               	movlb	0	; select bank0
  6649  1C77  0358               	decf	_new2,w
  6650  1C78  0459               	iorwf	_new2+1,w
  6651  1C79  1D03               	btfss	3,2
  6652  1C7A  2CCA               	goto	l4460
  6653                           
  6654                           ;ENCODER.C: 109: {
  6655                           ;ENCODER.C: 110: firstpulse2=1;
  6656  1C7B  0022               	movlb	2	; select bank2
  6657  1C7C  01C8               	clrf	_firstpulse2^(0+256)
  6658  1C7D  0AC8               	incf	_firstpulse2^(0+256),f
  6659                           
  6660                           ;ENCODER.C: 111: secondpulse2=0;
  6661  1C7E  01DF               	clrf	_secondpulse2^(0+256)
  6662                           
  6663                           ;ENCODER.C: 112: minus222=1;
  6664  1C7F  01CE               	clrf	_minus222^(0+256)
  6665  1C80  0ACE               	incf	_minus222^(0+256),f
  6666  1C81  2CC5               	goto	l4458
  6667  1C82                     l4422:	
  6668                           ;ENCODER.C: 114: }
  6669                           ;ENCODER.C: 115: }
  6670                           
  6671                           ;ENCODER.C: 113: result='$';
  6672                           
  6673                           
  6674                           ;ENCODER.C: 116: else if(firstpulse2==1 && secondpulse2==0)
  6675  1C82  0022               	movlb	2	; select bank2
  6676  1C83  0348               	decf	_firstpulse2^(0+256),w
  6677  1C84  1D03               	btfss	3,2
  6678  1C85  2C95               	goto	l4432
  6679  1C86  085F               	movf	_secondpulse2^(0+256),w
  6680  1C87  1D03               	btfss	3,2
  6681  1C88  2C95               	goto	l4432
  6682                           
  6683                           ;ENCODER.C: 117: {
  6684                           ;ENCODER.C: 118: if(new2==0x03)
  6685  1C89  3003               	movlw	3
  6686  1C8A  0020               	movlb	0	; select bank0
  6687  1C8B  0658               	xorwf	_new2,w
  6688  1C8C  0459               	iorwf	_new2+1,w
  6689  1C8D  1D03               	btfss	3,2
  6690  1C8E  2CCA               	goto	l4460
  6691                           
  6692                           ;ENCODER.C: 119: {
  6693                           ;ENCODER.C: 120: firstpulse2=1;
  6694  1C8F  0022               	movlb	2	; select bank2
  6695  1C90  01C8               	clrf	_firstpulse2^(0+256)
  6696  1C91  0AC8               	incf	_firstpulse2^(0+256),f
  6697                           
  6698                           ;ENCODER.C: 121: secondpulse2=1;
  6699  1C92  01DF               	clrf	_secondpulse2^(0+256)
  6700  1C93  0ADF               	incf	_secondpulse2^(0+256),f
  6701  1C94  2CC5               	goto	l4458
  6702  1C95                     l4432:	
  6703                           ;ENCODER.C: 123: }
  6704                           ;ENCODER.C: 124: }
  6705                           
  6706                           ;ENCODER.C: 122: result='$';
  6707                           
  6708                           
  6709                           ;ENCODER.C: 125: else if(firstpulse2==1 && secondpulse2==1)
  6710  1C95  0022               	movlb	2	; select bank2
  6711  1C96  0348               	decf	_firstpulse2^(0+256),w
  6712  1C97  1D03               	btfss	3,2
  6713  1C98  2CC1               	goto	l4456
  6714  1C99  035F               	decf	_secondpulse2^(0+256),w
  6715  1C9A  1D03               	btfss	3,2
  6716  1C9B  2CC1               	goto	l4456
  6717                           
  6718                           ;ENCODER.C: 126: {
  6719                           ;ENCODER.C: 127: if(new2==0x01 && plus222==1)
  6720  1C9C  0020               	movlb	0	; select bank0
  6721  1C9D  0358               	decf	_new2,w
  6722  1C9E  0459               	iorwf	_new2+1,w
  6723  1C9F  1D03               	btfss	3,2
  6724  1CA0  2CAC               	goto	l4444
  6725  1CA1  0022               	movlb	2	; select bank2
  6726  1CA2  0356               	decf	_plus222^(0+256),w
  6727  1CA3  1D03               	btfss	3,2
  6728  1CA4  2CAC               	goto	l4444
  6729                           
  6730                           ;ENCODER.C: 128: {
  6731                           ;ENCODER.C: 129: firstpulse2=0;
  6732  1CA5  01C8               	clrf	_firstpulse2^(0+256)
  6733                           
  6734                           ;ENCODER.C: 130: plus222=0;
  6735  1CA6  01D6               	clrf	_plus222^(0+256)
  6736                           
  6737                           ;ENCODER.C: 131: result='+';
  6738  1CA7  302B               	movlw	43
  6739  1CA8  0021               	movlb	1	; select bank1
  6740  1CA9  00A5               	movwf	??_SCANENCODER2^(0+128)
  6741  1CAA  0825               	movf	??_SCANENCODER2^(0+128),w
  6742  1CAB  00A6               	movwf	SCANENCODER2@result^(0+128)
  6743  1CAC                     l4444:	
  6744                           
  6745                           ;ENCODER.C: 132: }
  6746                           ;ENCODER.C: 133: if(new2==0x02 && minus222==1)
  6747  1CAC  3002               	movlw	2
  6748  1CAD  0020               	movlb	0	; select bank0
  6749  1CAE  0658               	xorwf	_new2,w
  6750  1CAF  0459               	iorwf	_new2+1,w
  6751  1CB0  1D03               	btfss	3,2
  6752  1CB1  2CBD               	goto	l4452
  6753  1CB2  0022               	movlb	2	; select bank2
  6754  1CB3  034E               	decf	_minus222^(0+256),w
  6755  1CB4  1D03               	btfss	3,2
  6756  1CB5  2CBD               	goto	l4452
  6757                           
  6758                           ;ENCODER.C: 134: {
  6759                           ;ENCODER.C: 135: firstpulse2=0;
  6760  1CB6  01C8               	clrf	_firstpulse2^(0+256)
  6761                           
  6762                           ;ENCODER.C: 136: minus222=0;
  6763  1CB7  01CE               	clrf	_minus222^(0+256)
  6764                           
  6765                           ;ENCODER.C: 137: result='-';
  6766  1CB8  302D               	movlw	45
  6767  1CB9  0021               	movlb	1	; select bank1
  6768  1CBA  00A5               	movwf	??_SCANENCODER2^(0+128)
  6769  1CBB  0825               	movf	??_SCANENCODER2^(0+128),w
  6770  1CBC  00A6               	movwf	SCANENCODER2@result^(0+128)
  6771  1CBD                     l4452:	
  6772                           
  6773                           ;ENCODER.C: 138: }
  6774                           ;ENCODER.C: 139: firstpulse2=0;
  6775  1CBD  0022               	movlb	2	; select bank2
  6776  1CBE  01C8               	clrf	_firstpulse2^(0+256)
  6777                           
  6778                           ;ENCODER.C: 140: secondpulse2=0;
  6779  1CBF  01DF               	clrf	_secondpulse2^(0+256)
  6780                           
  6781                           ;ENCODER.C: 141: }
  6782  1CC0  2CCA               	goto	l4460
  6783  1CC1                     l4456:	
  6784                           
  6785                           ;ENCODER.C: 142: else
  6786                           ;ENCODER.C: 143: {
  6787                           ;ENCODER.C: 144: plus222=0;
  6788  1CC1  01D6               	clrf	_plus222^(0+256)
  6789                           
  6790                           ;ENCODER.C: 145: minus222=0;
  6791  1CC2  01CE               	clrf	_minus222^(0+256)
  6792                           
  6793                           ;ENCODER.C: 146: firstpulse2=0;
  6794  1CC3  01C8               	clrf	_firstpulse2^(0+256)
  6795                           
  6796                           ;ENCODER.C: 147: secondpulse2=0;
  6797  1CC4  01DF               	clrf	_secondpulse2^(0+256)
  6798  1CC5                     l4458:	
  6799                           
  6800                           ;ENCODER.C: 148: result='$';
  6801  1CC5  3024               	movlw	36
  6802  1CC6  0021               	movlb	1	; select bank1
  6803  1CC7  00A5               	movwf	??_SCANENCODER2^(0+128)
  6804  1CC8  0825               	movf	??_SCANENCODER2^(0+128),w
  6805  1CC9  00A6               	movwf	SCANENCODER2@result^(0+128)
  6806  1CCA                     l4460:	
  6807                           
  6808                           ;ENCODER.C: 149: }
  6809                           ;ENCODER.C: 150: }
  6810                           ;ENCODER.C: 151: return(result);
  6811  1CCA  0021               	movlb	1	; select bank1
  6812  1CCB  0826               	movf	SCANENCODER2@result^(0+128),w
  6813  1CCC  0008               	return
  6814  1CCD                     __end_of_SCANENCODER2:	
  6815                           
  6816                           	psect	text18
  6817  1A24                     __ptext18:	
  6818 ;; *************** function _enc2_port *****************
  6819 ;; Defined at:
  6820 ;;		line 154 in file "ENCODER.C"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;		None
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;  portvalue       2    3[BANK1 ] unsigned int 
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      unsigned char 
  6827 ;; Registers used:
  6828 ;;		wreg, status,2, status,0
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6835 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6836 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6837 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6838 ;;Total ram usage:        5 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:    3
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		_SCANENCODER2
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           
  6849                           ;psect for function _enc2_port
  6850  1A24                     _enc2_port:	
  6851                           
  6852                           ;ENCODER.C: 156: unsigned int portvalue=0x0000;
  6853                           
  6854                           ;incstack = 0
  6855                           ; Regs used in _enc2_port: [wreg+status,2+status,0]
  6856  1A24  0021               	movlb	1	; select bank1
  6857  1A25  01A3               	clrf	enc2_port@portvalue^(0+128)
  6858  1A26  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6859                           
  6860                           ;ENCODER.C: 157: portvalue=0x0000;
  6861  1A27  01A3               	clrf	enc2_port@portvalue^(0+128)
  6862  1A28  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6863                           
  6864                           ;ENCODER.C: 158: portvalue=PORTAbits.RA2;
  6865  1A29  0020               	movlb	0	; select bank0
  6866  1A2A  0C0C               	rrf	12,w	;volatile
  6867  1A2B  0C89               	rrf	9,f
  6868  1A2C  3901               	andlw	1
  6869  1A2D  0021               	movlb	1	; select bank1
  6870  1A2E  00A0               	movwf	??_enc2_port^(0+128)
  6871  1A2F  01A1               	clrf	(??_enc2_port^(0+128)+1)
  6872  1A30  0820               	movf	??_enc2_port^(0+128),w
  6873  1A31  00A3               	movwf	enc2_port@portvalue^(0+128)
  6874  1A32  0821               	movf	(??_enc2_port+1)^(0+128),w
  6875  1A33  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6876                           
  6877                           ;ENCODER.C: 159: portvalue=portvalue<<1;
  6878  1A34  3523               	lslf	enc2_port@portvalue^(0+128),w
  6879  1A35  00A3               	movwf	enc2_port@portvalue^(0+128)
  6880  1A36  0D24               	rlf	(enc2_port@portvalue+1)^(0+128),w
  6881  1A37  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6882                           
  6883                           ;ENCODER.C: 160: portvalue=portvalue|PORTAbits.RA1;
  6884  1A38  0020               	movlb	0	; select bank0
  6885  1A39  0C0C               	rrf	12,w	;volatile
  6886  1A3A  3901               	andlw	1
  6887  1A3B  0021               	movlb	1	; select bank1
  6888  1A3C  00A0               	movwf	??_enc2_port^(0+128)
  6889  1A3D  0823               	movf	enc2_port@portvalue^(0+128),w
  6890  1A3E  0420               	iorwf	??_enc2_port^(0+128),w
  6891  1A3F  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6892  1A40  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6893  1A41  00A2               	movwf	(??_enc2_port+2)^(0+128)
  6894  1A42  0821               	movf	(??_enc2_port+1)^(0+128),w
  6895  1A43  00A3               	movwf	enc2_port@portvalue^(0+128)
  6896  1A44  0822               	movf	(??_enc2_port+2)^(0+128),w
  6897  1A45  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6898                           
  6899                           ;ENCODER.C: 161: portvalue=(portvalue & 0X0003);
  6900  1A46  3003               	movlw	3
  6901  1A47  0523               	andwf	enc2_port@portvalue^(0+128),w
  6902  1A48  00A3               	movwf	enc2_port@portvalue^(0+128)
  6903  1A49  3000               	movlw	0
  6904  1A4A  0524               	andwf	(enc2_port@portvalue+1)^(0+128),w
  6905  1A4B  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6906                           
  6907                           ;ENCODER.C: 162: new2=portvalue;
  6908  1A4C  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6909  1A4D  0020               	movlb	0	; select bank0
  6910  1A4E  00D9               	movwf	_new2+1
  6911  1A4F  0021               	movlb	1	; select bank1
  6912  1A50  0823               	movf	enc2_port@portvalue^(0+128),w
  6913  1A51  0020               	movlb	0	; select bank0
  6914  1A52  00D8               	movwf	_new2
  6915                           
  6916                           ;ENCODER.C: 163: temp=new2;
  6917  1A53  0858               	movf	_new2,w
  6918  1A54  0021               	movlb	1	; select bank1
  6919  1A55  00A0               	movwf	??_enc2_port^(0+128)
  6920  1A56  0820               	movf	??_enc2_port^(0+128),w
  6921  1A57  0020               	movlb	0	; select bank0
  6922  1A58  00E3               	movwf	_temp
  6923                           
  6924                           ;ENCODER.C: 164: if((temp ^ old2) !=0)
  6925  1A59  0023               	movlb	3	; select bank3
  6926  1A5A  083C               	movf	_old2^(0+384),w
  6927  1A5B  0020               	movlb	0	; select bank0
  6928  1A5C  0663               	xorwf	_temp,w
  6929  1A5D  0021               	movlb	1	; select bank1
  6930  1A5E  00A0               	movwf	??_enc2_port^(0+128)
  6931  1A5F  0023               	movlb	3	; select bank3
  6932  1A60  083D               	movf	(_old2+1)^(0+384),w
  6933  1A61  0021               	movlb	1	; select bank1
  6934  1A62  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6935  1A63  0820               	movf	??_enc2_port^(0+128),w
  6936  1A64  0421               	iorwf	(??_enc2_port^(0+128)+1),w
  6937  1A65  1903               	btfsc	3,2
  6938  1A66  2A71               	goto	l3828
  6939                           
  6940                           ;ENCODER.C: 165: {
  6941                           ;ENCODER.C: 166: old2=new2;
  6942  1A67  0020               	movlb	0	; select bank0
  6943  1A68  0859               	movf	_new2+1,w
  6944  1A69  0023               	movlb	3	; select bank3
  6945  1A6A  00BD               	movwf	(_old2+1)^(0+384)
  6946  1A6B  0020               	movlb	0	; select bank0
  6947  1A6C  0858               	movf	_new2,w
  6948  1A6D  0023               	movlb	3	; select bank3
  6949  1A6E  00BC               	movwf	_old2^(0+384)
  6950                           
  6951                           ;ENCODER.C: 167: return 1;
  6952  1A6F  3001               	movlw	1
  6953                           
  6954                           ;ENCODER.C: 168: }
  6955  1A70  0008               	return
  6956  1A71                     l3828:	
  6957                           
  6958                           ;ENCODER.C: 169: else
  6959                           ;ENCODER.C: 170: {
  6960                           ;ENCODER.C: 171: old2=new2;
  6961  1A71  0020               	movlb	0	; select bank0
  6962  1A72  0859               	movf	_new2+1,w
  6963  1A73  0023               	movlb	3	; select bank3
  6964  1A74  00BD               	movwf	(_old2+1)^(0+384)
  6965  1A75  0020               	movlb	0	; select bank0
  6966  1A76  0858               	movf	_new2,w
  6967  1A77  0023               	movlb	3	; select bank3
  6968  1A78  00BC               	movwf	_old2^(0+384)
  6969                           
  6970                           ;ENCODER.C: 172: return 0;
  6971  1A79  3000               	movlw	0
  6972  1A7A  0008               	return
  6973  1A7B                     __end_of_enc2_port:	
  6974                           
  6975                           	psect	text19
  6976  1CCD                     __ptext19:	
  6977 ;; *************** function _SCANENCODER1 *****************
  6978 ;; Defined at:
  6979 ;;		line 12 in file "ENCODER.C"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;		None
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;  result          1    7[BANK1 ] unsigned char 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      unsigned char 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0, pclath, cstack
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6994 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6995 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6996 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6997 ;;Total ram usage:        2 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:    4
  7000 ;; This function calls:
  7001 ;;		_enc1_port
  7002 ;; This function is called by:
  7003 ;;		_main
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           
  7008                           ;psect for function _SCANENCODER1
  7009  1CCD                     _SCANENCODER1:	
  7010                           
  7011                           ;ENCODER.C: 14: unsigned char result=0;
  7012                           
  7013                           ;incstack = 0
  7014                           ; Regs used in _SCANENCODER1: [wreg+status,2+status,0+pclath+cstack]
  7015  1CCD  0021               	movlb	1	; select bank1
  7016  1CCE  01A7               	clrf	SCANENCODER1@result^(0+128)
  7017                           
  7018                           ;ENCODER.C: 15: if(enc1_port() == 1)
  7019  1CCF  319A  22D3  319C   	fcall	_enc1_port
  7020  1CD2  3A01               	xorlw	1
  7021  1CD3  1D03               	skipz
  7022  1CD4  2D42               	goto	l4390
  7023                           
  7024                           ;ENCODER.C: 16: {
  7025                           ;ENCODER.C: 17: if(firstpulse1==0 && secondpulse1==0)
  7026  1CD5  0022               	movlb	2	; select bank2
  7027  1CD6  0847               	movf	_firstpulse1^(0+256),w
  7028  1CD7  1D03               	btfss	3,2
  7029  1CD8  2CF9               	goto	l4350
  7030  1CD9  085E               	movf	_secondpulse1^(0+256),w
  7031  1CDA  1D03               	btfss	3,2
  7032  1CDB  2CF9               	goto	l4350
  7033                           
  7034                           ;ENCODER.C: 18: {
  7035                           ;ENCODER.C: 19: if(new1==0x02)
  7036  1CDC  3002               	movlw	2
  7037  1CDD  0020               	movlb	0	; select bank0
  7038  1CDE  0656               	xorwf	_new1,w
  7039  1CDF  0457               	iorwf	_new1+1,w
  7040  1CE0  1D03               	btfss	3,2
  7041  1CE1  2CED               	goto	l4340
  7042                           
  7043                           ;ENCODER.C: 20: {
  7044                           ;ENCODER.C: 21: firstpulse1=1;
  7045  1CE2  0022               	movlb	2	; select bank2
  7046  1CE3  01C7               	clrf	_firstpulse1^(0+256)
  7047  1CE4  0AC7               	incf	_firstpulse1^(0+256),f
  7048                           
  7049                           ;ENCODER.C: 22: secondpulse1=0;
  7050  1CE5  01DE               	clrf	_secondpulse1^(0+256)
  7051                           
  7052                           ;ENCODER.C: 23: plus111=1;
  7053  1CE6  01D5               	clrf	_plus111^(0+256)
  7054  1CE7  0AD5               	incf	_plus111^(0+256),f
  7055                           
  7056                           ;ENCODER.C: 24: result='$';
  7057  1CE8  3024               	movlw	36
  7058  1CE9  0021               	movlb	1	; select bank1
  7059  1CEA  00A6               	movwf	??_SCANENCODER1^(0+128)
  7060  1CEB  0826               	movf	??_SCANENCODER1^(0+128),w
  7061  1CEC  00A7               	movwf	SCANENCODER1@result^(0+128)
  7062  1CED                     l4340:	
  7063                           
  7064                           ;ENCODER.C: 25: }
  7065                           ;ENCODER.C: 26: if(new1==0x01)
  7066  1CED  0020               	movlb	0	; select bank0
  7067  1CEE  0356               	decf	_new1,w
  7068  1CEF  0457               	iorwf	_new1+1,w
  7069  1CF0  1D03               	btfss	3,2
  7070  1CF1  2D42               	goto	l4390
  7071                           
  7072                           ;ENCODER.C: 27: {
  7073                           ;ENCODER.C: 28: firstpulse1=1;
  7074  1CF2  0022               	movlb	2	; select bank2
  7075  1CF3  01C7               	clrf	_firstpulse1^(0+256)
  7076  1CF4  0AC7               	incf	_firstpulse1^(0+256),f
  7077                           
  7078                           ;ENCODER.C: 29: secondpulse1=0;
  7079  1CF5  01DE               	clrf	_secondpulse1^(0+256)
  7080                           
  7081                           ;ENCODER.C: 30: minus111=1;
  7082  1CF6  01CD               	clrf	_minus111^(0+256)
  7083  1CF7  0ACD               	incf	_minus111^(0+256),f
  7084  1CF8  2D3D               	goto	l4388
  7085  1CF9                     l4350:	
  7086                           ;ENCODER.C: 32: }
  7087                           ;ENCODER.C: 33: }
  7088                           
  7089                           ;ENCODER.C: 31: result='$';
  7090                           
  7091                           
  7092                           ;ENCODER.C: 34: else if(firstpulse1==1 && secondpulse1==0)
  7093  1CF9  0022               	movlb	2	; select bank2
  7094  1CFA  0347               	decf	_firstpulse1^(0+256),w
  7095  1CFB  1D03               	btfss	3,2
  7096  1CFC  2D0C               	goto	l4360
  7097  1CFD  085E               	movf	_secondpulse1^(0+256),w
  7098  1CFE  1D03               	btfss	3,2
  7099  1CFF  2D0C               	goto	l4360
  7100                           
  7101                           ;ENCODER.C: 35: {
  7102                           ;ENCODER.C: 36: if(new1==0x03)
  7103  1D00  3003               	movlw	3
  7104  1D01  0020               	movlb	0	; select bank0
  7105  1D02  0656               	xorwf	_new1,w
  7106  1D03  0457               	iorwf	_new1+1,w
  7107  1D04  1D03               	btfss	3,2
  7108  1D05  2D42               	goto	l4390
  7109                           
  7110                           ;ENCODER.C: 37: {
  7111                           ;ENCODER.C: 38: firstpulse1=1;
  7112  1D06  0022               	movlb	2	; select bank2
  7113  1D07  01C7               	clrf	_firstpulse1^(0+256)
  7114  1D08  0AC7               	incf	_firstpulse1^(0+256),f
  7115                           
  7116                           ;ENCODER.C: 39: secondpulse1=1;
  7117  1D09  01DE               	clrf	_secondpulse1^(0+256)
  7118  1D0A  0ADE               	incf	_secondpulse1^(0+256),f
  7119  1D0B  2D3D               	goto	l4388
  7120  1D0C                     l4360:	
  7121                           ;ENCODER.C: 41: }
  7122                           ;ENCODER.C: 42: }
  7123                           
  7124                           ;ENCODER.C: 40: result='$';
  7125                           
  7126                           
  7127                           ;ENCODER.C: 43: else if(firstpulse1==1 && secondpulse1==1)
  7128  1D0C  0022               	movlb	2	; select bank2
  7129  1D0D  0347               	decf	_firstpulse1^(0+256),w
  7130  1D0E  1D03               	btfss	3,2
  7131  1D0F  2D39               	goto	l4386
  7132  1D10  035E               	decf	_secondpulse1^(0+256),w
  7133  1D11  1D03               	btfss	3,2
  7134  1D12  2D39               	goto	l4386
  7135                           
  7136                           ;ENCODER.C: 44: {
  7137                           ;ENCODER.C: 45: if(new1==0x01 && plus111==1)
  7138  1D13  0020               	movlb	0	; select bank0
  7139  1D14  0356               	decf	_new1,w
  7140  1D15  0457               	iorwf	_new1+1,w
  7141  1D16  1D03               	btfss	3,2
  7142  1D17  2D24               	goto	l4374
  7143  1D18  0022               	movlb	2	; select bank2
  7144  1D19  0355               	decf	_plus111^(0+256),w
  7145  1D1A  1D03               	btfss	3,2
  7146  1D1B  2D24               	goto	l4374
  7147                           
  7148                           ;ENCODER.C: 46: {
  7149                           ;ENCODER.C: 47: firstpulse1=1;
  7150  1D1C  01C7               	clrf	_firstpulse1^(0+256)
  7151  1D1D  0AC7               	incf	_firstpulse1^(0+256),f
  7152                           
  7153                           ;ENCODER.C: 48: plus111=0;
  7154  1D1E  01D5               	clrf	_plus111^(0+256)
  7155                           
  7156                           ;ENCODER.C: 49: result='+';
  7157  1D1F  302B               	movlw	43
  7158  1D20  0021               	movlb	1	; select bank1
  7159  1D21  00A6               	movwf	??_SCANENCODER1^(0+128)
  7160  1D22  0826               	movf	??_SCANENCODER1^(0+128),w
  7161  1D23  00A7               	movwf	SCANENCODER1@result^(0+128)
  7162  1D24                     l4374:	
  7163                           
  7164                           ;ENCODER.C: 50: }
  7165                           ;ENCODER.C: 51: if(new1==0x02 && minus111==1)
  7166  1D24  3002               	movlw	2
  7167  1D25  0020               	movlb	0	; select bank0
  7168  1D26  0656               	xorwf	_new1,w
  7169  1D27  0457               	iorwf	_new1+1,w
  7170  1D28  1D03               	btfss	3,2
  7171  1D29  2D35               	goto	l4382
  7172  1D2A  0022               	movlb	2	; select bank2
  7173  1D2B  034D               	decf	_minus111^(0+256),w
  7174  1D2C  1D03               	btfss	3,2
  7175  1D2D  2D35               	goto	l4382
  7176                           
  7177                           ;ENCODER.C: 52: {
  7178                           ;ENCODER.C: 53: firstpulse1=0;
  7179  1D2E  01C7               	clrf	_firstpulse1^(0+256)
  7180                           
  7181                           ;ENCODER.C: 54: minus111=0;
  7182  1D2F  01CD               	clrf	_minus111^(0+256)
  7183                           
  7184                           ;ENCODER.C: 55: result='-';
  7185  1D30  302D               	movlw	45
  7186  1D31  0021               	movlb	1	; select bank1
  7187  1D32  00A6               	movwf	??_SCANENCODER1^(0+128)
  7188  1D33  0826               	movf	??_SCANENCODER1^(0+128),w
  7189  1D34  00A7               	movwf	SCANENCODER1@result^(0+128)
  7190  1D35                     l4382:	
  7191                           
  7192                           ;ENCODER.C: 56: }
  7193                           ;ENCODER.C: 57: firstpulse1=0;
  7194  1D35  0022               	movlb	2	; select bank2
  7195  1D36  01C7               	clrf	_firstpulse1^(0+256)
  7196                           
  7197                           ;ENCODER.C: 58: secondpulse1=0;
  7198  1D37  01DE               	clrf	_secondpulse1^(0+256)
  7199                           
  7200                           ;ENCODER.C: 59: }
  7201  1D38  2D42               	goto	l4390
  7202  1D39                     l4386:	
  7203                           
  7204                           ;ENCODER.C: 60: else
  7205                           ;ENCODER.C: 61: {
  7206                           ;ENCODER.C: 62: plus111=0;
  7207  1D39  01D5               	clrf	_plus111^(0+256)
  7208                           
  7209                           ;ENCODER.C: 63: minus111=0;
  7210  1D3A  01CD               	clrf	_minus111^(0+256)
  7211                           
  7212                           ;ENCODER.C: 64: firstpulse1=0;
  7213  1D3B  01C7               	clrf	_firstpulse1^(0+256)
  7214                           
  7215                           ;ENCODER.C: 65: secondpulse1=0;
  7216  1D3C  01DE               	clrf	_secondpulse1^(0+256)
  7217  1D3D                     l4388:	
  7218                           
  7219                           ;ENCODER.C: 66: result='$';
  7220  1D3D  3024               	movlw	36
  7221  1D3E  0021               	movlb	1	; select bank1
  7222  1D3F  00A6               	movwf	??_SCANENCODER1^(0+128)
  7223  1D40  0826               	movf	??_SCANENCODER1^(0+128),w
  7224  1D41  00A7               	movwf	SCANENCODER1@result^(0+128)
  7225  1D42                     l4390:	
  7226                           
  7227                           ;ENCODER.C: 67: }
  7228                           ;ENCODER.C: 68: }
  7229                           ;ENCODER.C: 69: return(result);
  7230  1D42  0021               	movlb	1	; select bank1
  7231  1D43  0827               	movf	SCANENCODER1@result^(0+128),w
  7232  1D44  0008               	return
  7233  1D45                     __end_of_SCANENCODER1:	
  7234                           
  7235                           	psect	text20
  7236  1AD3                     __ptext20:	
  7237 ;; *************** function _enc1_port *****************
  7238 ;; Defined at:
  7239 ;;		line 72 in file "ENCODER.C"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;		None
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  portvalue       2    4[BANK1 ] unsigned int 
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  1    wreg      unsigned char 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2, status,0
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7254 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7255 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7256 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7257 ;;Total ram usage:        6 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:    3
  7260 ;; This function calls:
  7261 ;;		Nothing
  7262 ;; This function is called by:
  7263 ;;		_SCANENCODER1
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           
  7268                           ;psect for function _enc1_port
  7269  1AD3                     _enc1_port:	
  7270                           
  7271                           ;ENCODER.C: 74: unsigned int portvalue=0x0000;
  7272                           
  7273                           ;incstack = 0
  7274                           ; Regs used in _enc1_port: [wreg+status,2+status,0]
  7275  1AD3  0021               	movlb	1	; select bank1
  7276  1AD4  01A4               	clrf	enc1_port@portvalue^(0+128)
  7277  1AD5  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  7278                           
  7279                           ;ENCODER.C: 75: portvalue=0x0000;
  7280  1AD6  01A4               	clrf	enc1_port@portvalue^(0+128)
  7281  1AD7  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  7282                           
  7283                           ;ENCODER.C: 76: portvalue=PORTAbits.RA4;
  7284  1AD8  0020               	movlb	0	; select bank0
  7285  1AD9  0E0C               	swapf	12,w	;volatile
  7286  1ADA  3901               	andlw	1
  7287  1ADB  0021               	movlb	1	; select bank1
  7288  1ADC  00A0               	movwf	??_enc1_port^(0+128)
  7289  1ADD  01A1               	clrf	(??_enc1_port^(0+128)+1)
  7290  1ADE  0820               	movf	??_enc1_port^(0+128),w
  7291  1ADF  00A4               	movwf	enc1_port@portvalue^(0+128)
  7292  1AE0  0821               	movf	(??_enc1_port+1)^(0+128),w
  7293  1AE1  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7294                           
  7295                           ;ENCODER.C: 77: portvalue=portvalue<<1;
  7296  1AE2  3524               	lslf	enc1_port@portvalue^(0+128),w
  7297  1AE3  00A4               	movwf	enc1_port@portvalue^(0+128)
  7298  1AE4  0D25               	rlf	(enc1_port@portvalue+1)^(0+128),w
  7299  1AE5  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7300                           
  7301                           ;ENCODER.C: 78: portvalue=portvalue|PORTAbits.RA3;
  7302  1AE6  0020               	movlb	0	; select bank0
  7303  1AE7  0C0C               	rrf	12,w	;volatile
  7304  1AE8  0021               	movlb	1	; select bank1
  7305  1AE9  00A0               	movwf	??_enc1_port^(0+128)
  7306  1AEA  0CA0               	rrf	??_enc1_port^(0+128),f
  7307  1AEB  0C20               	rrf	??_enc1_port^(0+128),w
  7308  1AEC  3901               	andlw	1
  7309  1AED  00A1               	movwf	(??_enc1_port+1)^(0+128)
  7310  1AEE  0824               	movf	enc1_port@portvalue^(0+128),w
  7311  1AEF  0421               	iorwf	(??_enc1_port+1)^(0+128),w
  7312  1AF0  00A2               	movwf	(??_enc1_port+2)^(0+128)
  7313  1AF1  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  7314  1AF2  00A3               	movwf	(??_enc1_port+3)^(0+128)
  7315  1AF3  0822               	movf	(??_enc1_port+2)^(0+128),w
  7316  1AF4  00A4               	movwf	enc1_port@portvalue^(0+128)
  7317  1AF5  0823               	movf	(??_enc1_port+3)^(0+128),w
  7318  1AF6  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7319                           
  7320                           ;ENCODER.C: 79: portvalue=(portvalue & 0X0003);
  7321  1AF7  3003               	movlw	3
  7322  1AF8  0524               	andwf	enc1_port@portvalue^(0+128),w
  7323  1AF9  00A4               	movwf	enc1_port@portvalue^(0+128)
  7324  1AFA  3000               	movlw	0
  7325  1AFB  0525               	andwf	(enc1_port@portvalue+1)^(0+128),w
  7326  1AFC  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7327                           
  7328                           ;ENCODER.C: 80: new1=portvalue;
  7329  1AFD  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  7330  1AFE  0020               	movlb	0	; select bank0
  7331  1AFF  00D7               	movwf	_new1+1
  7332  1B00  0021               	movlb	1	; select bank1
  7333  1B01  0824               	movf	enc1_port@portvalue^(0+128),w
  7334  1B02  0020               	movlb	0	; select bank0
  7335  1B03  00D6               	movwf	_new1
  7336                           
  7337                           ;ENCODER.C: 81: temp=new1;
  7338  1B04  0856               	movf	_new1,w
  7339  1B05  0021               	movlb	1	; select bank1
  7340  1B06  00A0               	movwf	??_enc1_port^(0+128)
  7341  1B07  0820               	movf	??_enc1_port^(0+128),w
  7342  1B08  0020               	movlb	0	; select bank0
  7343  1B09  00E3               	movwf	_temp
  7344                           
  7345                           ;ENCODER.C: 82: if((temp ^ old1) !=0)
  7346  1B0A  0023               	movlb	3	; select bank3
  7347  1B0B  083A               	movf	_old1^(0+384),w
  7348  1B0C  0020               	movlb	0	; select bank0
  7349  1B0D  0663               	xorwf	_temp,w
  7350  1B0E  0021               	movlb	1	; select bank1
  7351  1B0F  00A0               	movwf	??_enc1_port^(0+128)
  7352  1B10  0023               	movlb	3	; select bank3
  7353  1B11  083B               	movf	(_old1+1)^(0+384),w
  7354  1B12  0021               	movlb	1	; select bank1
  7355  1B13  00A1               	movwf	(??_enc1_port+1)^(0+128)
  7356  1B14  0820               	movf	??_enc1_port^(0+128),w
  7357  1B15  0421               	iorwf	(??_enc1_port^(0+128)+1),w
  7358  1B16  1903               	btfsc	3,2
  7359  1B17  2B22               	goto	l3802
  7360                           
  7361                           ;ENCODER.C: 83: {
  7362                           ;ENCODER.C: 84: old1=new1;
  7363  1B18  0020               	movlb	0	; select bank0
  7364  1B19  0857               	movf	_new1+1,w
  7365  1B1A  0023               	movlb	3	; select bank3
  7366  1B1B  00BB               	movwf	(_old1+1)^(0+384)
  7367  1B1C  0020               	movlb	0	; select bank0
  7368  1B1D  0856               	movf	_new1,w
  7369  1B1E  0023               	movlb	3	; select bank3
  7370  1B1F  00BA               	movwf	_old1^(0+384)
  7371                           
  7372                           ;ENCODER.C: 85: return 1;
  7373  1B20  3001               	movlw	1
  7374                           
  7375                           ;ENCODER.C: 86: }
  7376  1B21  0008               	return
  7377  1B22                     l3802:	
  7378                           
  7379                           ;ENCODER.C: 87: else
  7380                           ;ENCODER.C: 88: {
  7381                           ;ENCODER.C: 89: old1=new1;
  7382  1B22  0020               	movlb	0	; select bank0
  7383  1B23  0857               	movf	_new1+1,w
  7384  1B24  0023               	movlb	3	; select bank3
  7385  1B25  00BB               	movwf	(_old1+1)^(0+384)
  7386  1B26  0020               	movlb	0	; select bank0
  7387  1B27  0856               	movf	_new1,w
  7388  1B28  0023               	movlb	3	; select bank3
  7389  1B29  00BA               	movwf	_old1^(0+384)
  7390                           
  7391                           ;ENCODER.C: 90: return 0;
  7392  1B2A  3000               	movlw	0
  7393  1B2B  0008               	return
  7394  1B2C                     __end_of_enc1_port:	
  7395                           
  7396                           	psect	text21
  7397  188B                     __ptext21:	
  7398 ;; *************** function _PWM_init *****************
  7399 ;; Defined at:
  7400 ;;		line 1233 in file "main.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;		None
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;		None
  7405 ;; Return value:  Size  Location     Type
  7406 ;;		None               void
  7407 ;; Registers used:
  7408 ;;		wreg, status,2, status,0
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7418 ;;Total ram usage:        0 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:    3
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		_main
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           
  7429                           ;psect for function _PWM_init
  7430  188B                     _PWM_init:	
  7431                           
  7432                           ;main.c: 1236: CCP1CONbits.CCP1M=13;
  7433                           
  7434                           ;incstack = 0
  7435                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
  7436  188B  0025               	movlb	5	; select bank5
  7437  188C  0813               	movf	19,w	;volatile
  7438  188D  39F0               	andlw	-16
  7439  188E  380D               	iorlw	13
  7440  188F  0093               	movwf	19	;volatile
  7441                           
  7442                           ;main.c: 1237: CCP1CONbits.DC1B=0;
  7443  1890  30CF               	movlw	-49
  7444  1891  0593               	andwf	19,f	;volatile
  7445                           
  7446                           ;main.c: 1238: CCPR1L=0;
  7447  1892  0191               	clrf	17	;volatile
  7448                           
  7449                           ;main.c: 1239: TRISCbits.TRISC2=0;
  7450  1893  0021               	movlb	1	; select bank1
  7451  1894  110E               	bcf	14,2	;volatile
  7452                           
  7453                           ;main.c: 1240: PR2=0xC7;
  7454  1895  30C7               	movlw	199
  7455  1896  0020               	movlb	0	; select bank0
  7456  1897  009B               	movwf	27	;volatile
  7457                           
  7458                           ;main.c: 1241: T2CONbits.T2CKPS=1;
  7459  1898  081C               	movf	28,w	;volatile
  7460  1899  39FC               	andlw	-4
  7461  189A  3801               	iorlw	1
  7462  189B  009C               	movwf	28	;volatile
  7463                           
  7464                           ;main.c: 1242: T2CONbits.T2OUTPS=0;
  7465  189C  3087               	movlw	-121
  7466  189D  059C               	andwf	28,f	;volatile
  7467                           
  7468                           ;main.c: 1243: PIR1bits.TMR2IF=0;
  7469  189E  1091               	bcf	17,1	;volatile
  7470                           
  7471                           ;main.c: 1244: PIE1bits.TMR2IE=1;
  7472  189F  0021               	movlb	1	; select bank1
  7473  18A0  1491               	bsf	17,1	;volatile
  7474                           
  7475                           ;main.c: 1245: T2CONbits.TMR2ON=1;
  7476  18A1  0020               	movlb	0	; select bank0
  7477  18A2  151C               	bsf	28,2	;volatile
  7478  18A3  0008               	return
  7479  18A4                     __end_of_PWM_init:	
  7480                           
  7481                           	psect	text22
  7482  1900                     __ptext22:	
  7483 ;; *************** function _Delayms *****************
  7484 ;; Defined at:
  7485 ;;		line 200 in file "DISPLAY.C"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;  delay           2    0[BANK1 ] unsigned int 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  yyy             2    4[BANK1 ] unsigned int 
  7490 ;;  xxx             2    2[BANK1 ] unsigned int 
  7491 ;; Return value:  Size  Location     Type
  7492 ;;		None               void
  7493 ;; Registers used:
  7494 ;;		wreg, status,2
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7500 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7501 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7503 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7504 ;;Total ram usage:        6 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; Hardware stack levels required when called:    3
  7507 ;; This function calls:
  7508 ;;		Nothing
  7509 ;; This function is called by:
  7510 ;;		_main
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           
  7515                           ;psect for function _Delayms
  7516  1900                     _Delayms:	
  7517                           
  7518                           ;DISPLAY.C: 203: unsigned int yyy=0,xxx=0;
  7519                           
  7520                           ;incstack = 0
  7521                           ; Regs used in _Delayms: [wreg+status,2]
  7522  1900  0021               	movlb	1	; select bank1
  7523  1901  01A4               	clrf	Delayms@yyy^(0+128)
  7524  1902  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  7525  1903  01A2               	clrf	Delayms@xxx^(0+128)
  7526  1904  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  7527                           
  7528                           ;DISPLAY.C: 204: for(xxx=0;xxx<delay;xxx++)
  7529  1905  01A2               	clrf	Delayms@xxx^(0+128)
  7530  1906  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  7531  1907                     l501:	
  7532  1907  0821               	movf	(Delayms@delay+1)^(0+128),w
  7533  1908  0223               	subwf	(Delayms@xxx+1)^(0+128),w
  7534  1909  1D03               	skipz
  7535  190A  290D               	goto	u5885
  7536  190B  0820               	movf	Delayms@delay^(0+128),w
  7537  190C  0222               	subwf	Delayms@xxx^(0+128),w
  7538  190D                     u5885:	
  7539  190D  1803               	btfsc	3,0
  7540  190E  0008               	return
  7541                           
  7542                           ;DISPLAY.C: 205: {
  7543                           ;DISPLAY.C: 206: for(yyy=0;yyy<138;yyy++);
  7544  190F  01A4               	clrf	Delayms@yyy^(0+128)
  7545  1910  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  7546  1911  3000               	movlw	0
  7547  1912  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  7548  1913  308A               	movlw	138
  7549  1914  1903               	skipnz
  7550  1915  0224               	subwf	Delayms@yyy^(0+128),w
  7551  1916  1803               	btfsc	3,0
  7552  1917  2923               	goto	l4320
  7553  1918                     l4318:	
  7554  1918  3001               	movlw	1
  7555  1919  07A4               	addwf	Delayms@yyy^(0+128),f
  7556  191A  3000               	movlw	0
  7557  191B  3DA5               	addwfc	(Delayms@yyy+1)^(0+128),f
  7558  191C  3000               	movlw	0
  7559  191D  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  7560  191E  308A               	movlw	138
  7561  191F  1903               	skipnz
  7562  1920  0224               	subwf	Delayms@yyy^(0+128),w
  7563  1921  1C03               	skipc
  7564  1922  2918               	goto	l4318
  7565  1923                     l4320:	
  7566  1923  3001               	movlw	1
  7567  1924  07A2               	addwf	Delayms@xxx^(0+128),f
  7568  1925  3000               	movlw	0
  7569  1926  3DA3               	addwfc	(Delayms@xxx+1)^(0+128),f
  7570  1927  2907               	goto	l501
  7571  1928                     __end_of_Delayms:	
  7572                           
  7573                           	psect	text23
  7574  1471                     __ptext23:	
  7575 ;; *************** function _Adaptive_base_pid *****************
  7576 ;; Defined at:
  7577 ;;		line 34 in file "MOTORCONTROL.C"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;		None
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;		None
  7582 ;; Return value:  Size  Location     Type
  7583 ;;		None               void
  7584 ;; Registers used:
  7585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7592 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7593 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7594 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7595 ;;Total ram usage:       18 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; Hardware stack levels required when called:    5
  7598 ;; This function calls:
  7599 ;;		_Update_PWM
  7600 ;;		___aldiv
  7601 ;;		___altoft
  7602 ;;		___ftadd
  7603 ;;		___ftdiv
  7604 ;;		___ftge
  7605 ;;		___ftmul
  7606 ;;		___ftneg
  7607 ;;		___fttol
  7608 ;;		___lwtoft
  7609 ;;		___wmul
  7610 ;; This function is called by:
  7611 ;;		_main
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           
  7616                           ;psect for function _Adaptive_base_pid
  7617  1471                     _Adaptive_base_pid:	
  7618                           
  7619                           ;MOTORCONTROL.C: 39: pidParams2.Kp2=2;
  7620                           
  7621                           ;incstack = 0
  7622                           ; Regs used in _Adaptive_base_pid: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7623  1471  3096               	movlw	150
  7624  1472  0086               	movwf	6
  7625  1473  3027               	movlw	39
  7626  1474  0087               	movwf	7
  7627  1475  3000               	movlw	0
  7628  1476  3FC0               	movwi [0]fsr1
  7629  1477  3000               	movlw	0
  7630  1478  3FC1               	movwi [1]fsr1
  7631  1479  3040               	movlw	64
  7632  147A  3FC2               	movwi [2]fsr1
  7633                           
  7634                           ;MOTORCONTROL.C: 40: pidParams2.Ki2=1;
  7635  147B  3096               	movlw	150
  7636  147C  0086               	movwf	6
  7637  147D  3027               	movlw	39
  7638  147E  0087               	movwf	7
  7639  147F  3143               	addfsr 1,3
  7640  1480  3000               	movlw	0
  7641  1481  3FC0               	movwi [0]fsr1
  7642  1482  3080               	movlw	128
  7643  1483  3FC1               	movwi [1]fsr1
  7644  1484  303F               	movlw	63
  7645  1485  3FC2               	movwi [2]fsr1
  7646                           
  7647                           ;MOTORCONTROL.C: 41: pidParams2.Kd2=0;
  7648  1486  3096               	movlw	150
  7649  1487  0086               	movwf	6
  7650  1488  3027               	movlw	39
  7651  1489  0087               	movwf	7
  7652  148A  3146               	addfsr 1,6
  7653  148B  3000               	movlw	0
  7654  148C  3FC0               	movwi [0]fsr1
  7655  148D  3000               	movlw	0
  7656  148E  3FC1               	movwi [1]fsr1
  7657  148F  3000               	movlw	0
  7658  1490  3FC2               	movwi [2]fsr1
  7659                           
  7660                           ;MOTORCONTROL.C: 51: pidParams2.ReferenceSetpoint2=setpfreq;
  7661  1491  0024               	movlb	4	; select bank4
  7662  1492  084C               	movf	_setpfreq^(0+512),w
  7663  1493  0021               	movlb	1	; select bank1
  7664  1494  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7665  1495  0024               	movlb	4	; select bank4
  7666  1496  084D               	movf	(_setpfreq+1)^(0+512),w
  7667  1497  0021               	movlb	1	; select bank1
  7668  1498  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7669  1499  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7670  149A  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7671  149B  30C4               	movlw	196
  7672  149C  0086               	movwf	6
  7673  149D  3027               	movlw	39
  7674  149E  0087               	movwf	7
  7675  149F  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7676  14A0  3FC0               	movwi [0]fsr1
  7677  14A1  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7678  14A2  3FC1               	movwi [1]fsr1
  7679  14A3  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7680  14A4  3FC2               	movwi [2]fsr1
  7681  14A5  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7682  14A6  3FC3               	movwi [3]fsr1
  7683                           
  7684                           ;MOTORCONTROL.C: 52: pidParams2.feedback2=Fltpfreq;
  7685  14A7  0022               	movlb	2	; select bank2
  7686  14A8  0820               	movf	_Fltpfreq^(0+256),w
  7687  14A9  0021               	movlb	1	; select bank1
  7688  14AA  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7689  14AB  0022               	movlb	2	; select bank2
  7690  14AC  0821               	movf	(_Fltpfreq+1)^(0+256),w
  7691  14AD  0021               	movlb	1	; select bank1
  7692  14AE  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7693  14AF  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7694  14B0  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7695  14B1  30C8               	movlw	200
  7696  14B2  0086               	movwf	6
  7697  14B3  3027               	movlw	39
  7698  14B4  0087               	movwf	7
  7699  14B5  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7700  14B6  3FC0               	movwi [0]fsr1
  7701  14B7  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7702  14B8  3FC1               	movwi [1]fsr1
  7703  14B9  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7704  14BA  3FC2               	movwi [2]fsr1
  7705  14BB  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7706  14BC  3FC3               	movwi [3]fsr1
  7707                           
  7708                           ;MOTORCONTROL.C: 53: disp1term=pidParams2.ReferenceSetpoint2;
  7709  14BD  30C4               	movlw	196
  7710  14BE  0086               	movwf	6
  7711  14BF  3027               	movlw	39
  7712  14C0  0087               	movwf	7
  7713  14C1  3F40               	moviw [0]fsr1
  7714  14C2  0024               	movlb	4	; select bank4
  7715  14C3  00B6               	movwf	_disp1term^(0+512)
  7716  14C4  3F41               	moviw [1]fsr1
  7717  14C5  00B7               	movwf	(_disp1term+1)^(0+512)
  7718                           
  7719                           ;MOTORCONTROL.C: 54: disp2term=pidParams2.feedback2;
  7720  14C6  30C8               	movlw	200
  7721  14C7  0086               	movwf	6
  7722  14C8  3027               	movlw	39
  7723  14C9  0087               	movwf	7
  7724  14CA  3F40               	moviw [0]fsr1
  7725  14CB  00B8               	movwf	_disp2term^(0+512)
  7726  14CC  3F41               	moviw [1]fsr1
  7727  14CD  00B9               	movwf	(_disp2term+1)^(0+512)
  7728                           
  7729                           ;MOTORCONTROL.C: 56: pidParams2.error2 = pidParams2.ReferenceSetpoint2 - pidParams2.feed
      +                          back2;
  7730  14CE  30C4               	movlw	196
  7731  14CF  0086               	movwf	6
  7732  14D0  3027               	movlw	39
  7733  14D1  0087               	movwf	7
  7734  14D2  3F40               	moviw [0]fsr1
  7735  14D3  0021               	movlb	1	; select bank1
  7736  14D4  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7737  14D5  3F41               	moviw [1]fsr1
  7738  14D6  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7739  14D7  3F42               	moviw [2]fsr1
  7740  14D8  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7741  14D9  3F43               	moviw [3]fsr1
  7742  14DA  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7743  14DB  30C8               	movlw	200
  7744  14DC  0086               	movwf	6
  7745  14DD  3027               	movlw	39
  7746  14DE  0087               	movwf	7
  7747  14DF  3F40               	moviw [0]fsr1
  7748  14E0  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  7749  14E1  3F41               	moviw [1]fsr1
  7750  14E2  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  7751  14E3  3F42               	moviw [2]fsr1
  7752  14E4  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  7753  14E5  3F43               	moviw [3]fsr1
  7754  14E6  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  7755  14E7  09DF               	comf	(??_Adaptive_base_pid+4)^(0+128),f
  7756  14E8  09E0               	comf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7757  14E9  09E1               	comf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7758  14EA  09E2               	comf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7759  14EB  0ADF               	incf	(??_Adaptive_base_pid+4)^(0+128),f
  7760  14EC  1903               	skipnz
  7761  14ED  0AE0               	incf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7762  14EE  1903               	skipnz
  7763  14EF  0AE1               	incf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7764  14F0  1903               	skipnz
  7765  14F1  0AE2               	incf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7766  14F2  085F               	movf	(??_Adaptive_base_pid+4)^(0+128),w
  7767  14F3  07DB               	addwf	??_Adaptive_base_pid^(0+128),f
  7768  14F4  0860               	movf	(??_Adaptive_base_pid+5)^(0+128),w
  7769  14F5  3DDC               	addwfc	(??_Adaptive_base_pid^(0+128)+1),f
  7770  14F6  0861               	movf	(??_Adaptive_base_pid+6)^(0+128),w
  7771  14F7  3DDD               	addwfc	(??_Adaptive_base_pid^(0+128)+2),f
  7772  14F8  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  7773  14F9  3DDE               	addwfc	(??_Adaptive_base_pid^(0+128)+3),f
  7774  14FA  3096               	movlw	150
  7775  14FB  0086               	movwf	6
  7776  14FC  3027               	movlw	39
  7777  14FD  0087               	movwf	7
  7778  14FE  314C               	addfsr 1,12
  7779  14FF  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7780  1500  3FC0               	movwi [0]fsr1
  7781  1501  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7782  1502  3FC1               	movwi [1]fsr1
  7783  1503  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7784  1504  3FC2               	movwi [2]fsr1
  7785  1505  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7786  1506  3FC3               	movwi [3]fsr1
  7787                           
  7788                           ;MOTORCONTROL.C: 57: pidParams2.feedback2=0;
  7789  1507  30C8               	movlw	200
  7790  1508  0086               	movwf	6
  7791  1509  3027               	movlw	39
  7792  150A  0087               	movwf	7
  7793  150B  3000               	movlw	0
  7794  150C  3FC0               	movwi [0]fsr1
  7795  150D  3FC1               	movwi [1]fsr1
  7796  150E  3FC2               	movwi [2]fsr1
  7797  150F  3FC3               	movwi [3]fsr1
  7798                           
  7799                           ;MOTORCONTROL.C: 58: pidParams2.outmax2=50000;
  7800  1510  30C0               	movlw	192
  7801  1511  0086               	movwf	6
  7802  1512  3027               	movlw	39
  7803  1513  0087               	movwf	7
  7804  1514  3050               	movlw	80
  7805  1515  3FC0               	movwi [0]fsr1
  7806  1516  30C3               	movlw	195
  7807  1517  3FC1               	movwi [1]fsr1
  7808  1518  3000               	movlw	0
  7809  1519  3FC2               	movwi [2]fsr1
  7810  151A  3000               	movlw	0
  7811  151B  3FC3               	movwi [3]fsr1
  7812                           
  7813                           ;MOTORCONTROL.C: 59: scalefactor2=66.0;
  7814  151C  3042               	movlw	66
  7815  151D  0023               	movlb	3	; select bank3
  7816  151E  00EC               	movwf	_scalefactor2^(0+384)
  7817  151F  3000               	movlw	0
  7818  1520  00ED               	movwf	(_scalefactor2^(0+384)+1)
  7819                           
  7820                           ;MOTORCONTROL.C: 62: {
  7821                           ;MOTORCONTROL.C: 63: error_new =pidParams2.error2;
  7822  1521  3096               	movlw	150
  7823  1522  0086               	movwf	6
  7824  1523  3027               	movlw	39
  7825  1524  0087               	movwf	7
  7826  1525  314C               	addfsr 1,12
  7827  1526  3F40               	moviw [0]fsr1
  7828  1527  0021               	movlb	1	; select bank1
  7829  1528  00A8               	movwf	___altoft@c^(0+128)
  7830  1529  3F41               	moviw [1]fsr1
  7831  152A  00A9               	movwf	(___altoft@c+1)^(0+128)
  7832  152B  3F42               	moviw [2]fsr1
  7833  152C  00AA               	movwf	(___altoft@c+2)^(0+128)
  7834  152D  3F43               	moviw [3]fsr1
  7835  152E  00AB               	movwf	(___altoft@c+3)^(0+128)
  7836  152F  3199  2191  3194   	fcall	___altoft
  7837  1532  0021               	movlb	1	; select bank1
  7838  1533  0828               	movf	?___altoft^(0+128),w
  7839  1534  0023               	movlb	3	; select bank3
  7840  1535  00A0               	movwf	_error_new^(0+384)
  7841  1536  0021               	movlb	1	; select bank1
  7842  1537  0829               	movf	(?___altoft+1)^(0+128),w
  7843  1538  0023               	movlb	3	; select bank3
  7844  1539  00A1               	movwf	(_error_new+1)^(0+384)
  7845  153A  0021               	movlb	1	; select bank1
  7846  153B  082A               	movf	(?___altoft+2)^(0+128),w
  7847  153C  0023               	movlb	3	; select bank3
  7848  153D  00A2               	movwf	(_error_new+2)^(0+384)
  7849                           
  7850                           ;MOTORCONTROL.C: 64: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7851  153E  3096               	movlw	150
  7852  153F  0086               	movwf	6
  7853  1540  3027               	movlw	39
  7854  1541  0087               	movwf	7
  7855  1542  3143               	addfsr 1,3
  7856  1543  3F40               	moviw [0]fsr1
  7857  1544  0021               	movlb	1	; select bank1
  7858  1545  00B5               	movwf	___ftmul@f1^(0+128)
  7859  1546  3F41               	moviw [1]fsr1
  7860  1547  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7861  1548  3F42               	moviw [2]fsr1
  7862  1549  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7863  154A  0023               	movlb	3	; select bank3
  7864  154B  0823               	movf	_error_old^(0+384),w
  7865  154C  0021               	movlb	1	; select bank1
  7866  154D  00A8               	movwf	___ftadd@f1^(0+128)
  7867  154E  0023               	movlb	3	; select bank3
  7868  154F  0824               	movf	(_error_old+1)^(0+384),w
  7869  1550  0021               	movlb	1	; select bank1
  7870  1551  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7871  1552  0023               	movlb	3	; select bank3
  7872  1553  0825               	movf	(_error_old+2)^(0+384),w
  7873  1554  0021               	movlb	1	; select bank1
  7874  1555  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7875  1556  0023               	movlb	3	; select bank3
  7876  1557  0820               	movf	_error_new^(0+384),w
  7877  1558  0021               	movlb	1	; select bank1
  7878  1559  00AB               	movwf	___ftadd@f2^(0+128)
  7879  155A  0023               	movlb	3	; select bank3
  7880  155B  0821               	movf	(_error_new+1)^(0+384),w
  7881  155C  0021               	movlb	1	; select bank1
  7882  155D  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7883  155E  0023               	movlb	3	; select bank3
  7884  155F  0822               	movf	(_error_new+2)^(0+384),w
  7885  1560  0021               	movlb	1	; select bank1
  7886  1561  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7887  1562  3192  225E  3194   	fcall	___ftadd
  7888  1565  0021               	movlb	1	; select bank1
  7889  1566  0828               	movf	?___ftadd^(0+128),w
  7890  1567  00B8               	movwf	___ftmul@f2^(0+128)
  7891  1568  0829               	movf	(?___ftadd+1)^(0+128),w
  7892  1569  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7893  156A  082A               	movf	(?___ftadd+2)^(0+128),w
  7894  156B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7895  156C  3187  2714  3194   	fcall	___ftmul
  7896  156F  0021               	movlb	1	; select bank1
  7897  1570  0835               	movf	?___ftmul^(0+128),w
  7898  1571  00E4               	movwf	_Adaptive_base_pid$1788^(0+128)
  7899  1572  0836               	movf	(?___ftmul+1)^(0+128),w
  7900  1573  00E5               	movwf	(_Adaptive_base_pid$1788+1)^(0+128)
  7901  1574  0837               	movf	(?___ftmul+2)^(0+128),w
  7902  1575  00E6               	movwf	(_Adaptive_base_pid$1788+2)^(0+128)
  7903                           
  7904                           ;MOTORCONTROL.C: 64: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7905  1576  0023               	movlb	3	; select bank3
  7906  1577  0829               	movf	_integral_old^(0+384),w
  7907  1578  0021               	movlb	1	; select bank1
  7908  1579  00A8               	movwf	___ftadd@f1^(0+128)
  7909  157A  0023               	movlb	3	; select bank3
  7910  157B  082A               	movf	(_integral_old+1)^(0+384),w
  7911  157C  0021               	movlb	1	; select bank1
  7912  157D  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7913  157E  0023               	movlb	3	; select bank3
  7914  157F  082B               	movf	(_integral_old+2)^(0+384),w
  7915  1580  0021               	movlb	1	; select bank1
  7916  1581  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7917  1582  3000               	movlw	0
  7918  1583  00C5               	movwf	___ftdiv@f2^(0+128)
  7919  1584  3000               	movlw	0
  7920  1585  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  7921  1586  3040               	movlw	64
  7922  1587  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  7923  1588  0023               	movlb	3	; select bank3
  7924  1589  0865               	movf	_Tsampling^(0+384),w
  7925  158A  0021               	movlb	1	; select bank1
  7926  158B  00B5               	movwf	___ftmul@f1^(0+128)
  7927  158C  0023               	movlb	3	; select bank3
  7928  158D  0866               	movf	(_Tsampling+1)^(0+384),w
  7929  158E  0021               	movlb	1	; select bank1
  7930  158F  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7931  1590  0023               	movlb	3	; select bank3
  7932  1591  0867               	movf	(_Tsampling+2)^(0+384),w
  7933  1592  0021               	movlb	1	; select bank1
  7934  1593  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7935  1594  0864               	movf	_Adaptive_base_pid$1788^(0+128),w
  7936  1595  00B8               	movwf	___ftmul@f2^(0+128)
  7937  1596  0865               	movf	(_Adaptive_base_pid$1788+1)^(0+128),w
  7938  1597  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7939  1598  0866               	movf	(_Adaptive_base_pid$1788+2)^(0+128),w
  7940  1599  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7941  159A  3187  2714  3194   	fcall	___ftmul
  7942  159D  0021               	movlb	1	; select bank1
  7943  159E  0835               	movf	?___ftmul^(0+128),w
  7944  159F  00C8               	movwf	___ftdiv@f1^(0+128)
  7945  15A0  0836               	movf	(?___ftmul+1)^(0+128),w
  7946  15A1  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  7947  15A2  0837               	movf	(?___ftmul+2)^(0+128),w
  7948  15A3  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  7949  15A4  3190  2014  3194   	fcall	___ftdiv
  7950  15A7  0021               	movlb	1	; select bank1
  7951  15A8  0845               	movf	?___ftdiv^(0+128),w
  7952  15A9  00AB               	movwf	___ftadd@f2^(0+128)
  7953  15AA  0846               	movf	(?___ftdiv+1)^(0+128),w
  7954  15AB  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7955  15AC  0847               	movf	(?___ftdiv+2)^(0+128),w
  7956  15AD  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7957  15AE  3192  225E  3194   	fcall	___ftadd
  7958  15B1  0021               	movlb	1	; select bank1
  7959  15B2  0828               	movf	?___ftadd^(0+128),w
  7960  15B3  0023               	movlb	3	; select bank3
  7961  15B4  00A6               	movwf	_integral_new^(0+384)
  7962  15B5  0021               	movlb	1	; select bank1
  7963  15B6  0829               	movf	(?___ftadd+1)^(0+128),w
  7964  15B7  0023               	movlb	3	; select bank3
  7965  15B8  00A7               	movwf	(_integral_new+1)^(0+384)
  7966  15B9  0021               	movlb	1	; select bank1
  7967  15BA  082A               	movf	(?___ftadd+2)^(0+128),w
  7968  15BB  0023               	movlb	3	; select bank3
  7969  15BC  00A8               	movwf	(_integral_new+2)^(0+384)
  7970                           
  7971                           ;MOTORCONTROL.C: 66: if((integral_new > pidParams2.outmax2) || (integral_new < minoutmax
      +                          ))
  7972  15BD  30C0               	movlw	192
  7973  15BE  0086               	movwf	6
  7974  15BF  3027               	movlw	39
  7975  15C0  0087               	movwf	7
  7976  15C1  3F40               	moviw [0]fsr1
  7977  15C2  0021               	movlb	1	; select bank1
  7978  15C3  00A8               	movwf	___altoft@c^(0+128)
  7979  15C4  3F41               	moviw [1]fsr1
  7980  15C5  00A9               	movwf	(___altoft@c+1)^(0+128)
  7981  15C6  3F42               	moviw [2]fsr1
  7982  15C7  00AA               	movwf	(___altoft@c+2)^(0+128)
  7983  15C8  3F43               	moviw [3]fsr1
  7984  15C9  00AB               	movwf	(___altoft@c+3)^(0+128)
  7985  15CA  3199  2191  3194   	fcall	___altoft
  7986  15CD  0021               	movlb	1	; select bank1
  7987  15CE  0828               	movf	?___altoft^(0+128),w
  7988  15CF  00B0               	movwf	___ftge@ff1^(0+128)
  7989  15D0  0829               	movf	(?___altoft+1)^(0+128),w
  7990  15D1  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  7991  15D2  082A               	movf	(?___altoft+2)^(0+128),w
  7992  15D3  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  7993  15D4  0023               	movlb	3	; select bank3
  7994  15D5  0826               	movf	_integral_new^(0+384),w
  7995  15D6  0021               	movlb	1	; select bank1
  7996  15D7  00B3               	movwf	___ftge@ff2^(0+128)
  7997  15D8  0023               	movlb	3	; select bank3
  7998  15D9  0827               	movf	(_integral_new+1)^(0+384),w
  7999  15DA  0021               	movlb	1	; select bank1
  8000  15DB  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  8001  15DC  0023               	movlb	3	; select bank3
  8002  15DD  0828               	movf	(_integral_new+2)^(0+384),w
  8003  15DE  0021               	movlb	1	; select bank1
  8004  15DF  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  8005  15E0  3199  2155  3194   	fcall	___ftge
  8006  15E3  1C03               	btfss	3,0
  8007  15E4  2E02               	goto	l4478
  8008  15E5  0023               	movlb	3	; select bank3
  8009  15E6  0826               	movf	_integral_new^(0+384),w
  8010  15E7  0021               	movlb	1	; select bank1
  8011  15E8  00B0               	movwf	___ftge@ff1^(0+128)
  8012  15E9  0023               	movlb	3	; select bank3
  8013  15EA  0827               	movf	(_integral_new+1)^(0+384),w
  8014  15EB  0021               	movlb	1	; select bank1
  8015  15EC  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  8016  15ED  0023               	movlb	3	; select bank3
  8017  15EE  0828               	movf	(_integral_new+2)^(0+384),w
  8018  15EF  0021               	movlb	1	; select bank1
  8019  15F0  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  8020  15F1  0024               	movlb	4	; select bank4
  8021  15F2  0827               	movf	_minoutmax^(0+512),w
  8022  15F3  0021               	movlb	1	; select bank1
  8023  15F4  00B3               	movwf	___ftge@ff2^(0+128)
  8024  15F5  0024               	movlb	4	; select bank4
  8025  15F6  0828               	movf	(_minoutmax+1)^(0+512),w
  8026  15F7  0021               	movlb	1	; select bank1
  8027  15F8  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  8028  15F9  0024               	movlb	4	; select bank4
  8029  15FA  0829               	movf	(_minoutmax+2)^(0+512),w
  8030  15FB  0021               	movlb	1	; select bank1
  8031  15FC  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  8032  15FD  3199  2155  3194   	fcall	___ftge
  8033  1600  1803               	btfsc	3,0
  8034  1601  2E09               	goto	l4480
  8035  1602                     l4478:	
  8036                           
  8037                           ;MOTORCONTROL.C: 67: integral_new = integral_old;
  8038  1602  0023               	movlb	3	; select bank3
  8039  1603  0829               	movf	_integral_old^(0+384),w
  8040  1604  00A6               	movwf	_integral_new^(0+384)
  8041  1605  082A               	movf	(_integral_old+1)^(0+384),w
  8042  1606  00A7               	movwf	(_integral_new+1)^(0+384)
  8043  1607  082B               	movf	(_integral_old+2)^(0+384),w
  8044  1608  00A8               	movwf	(_integral_new+2)^(0+384)
  8045  1609                     l4480:	
  8046                           
  8047                           ;MOTORCONTROL.C: 69: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  8048  1609  0023               	movlb	3	; select bank3
  8049  160A  0865               	movf	_Tsampling^(0+384),w
  8050  160B  0021               	movlb	1	; select bank1
  8051  160C  00C5               	movwf	___ftdiv@f2^(0+128)
  8052  160D  0023               	movlb	3	; select bank3
  8053  160E  0866               	movf	(_Tsampling+1)^(0+384),w
  8054  160F  0021               	movlb	1	; select bank1
  8055  1610  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  8056  1611  0023               	movlb	3	; select bank3
  8057  1612  0867               	movf	(_Tsampling+2)^(0+384),w
  8058  1613  0021               	movlb	1	; select bank1
  8059  1614  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  8060  1615  3096               	movlw	150
  8061  1616  0086               	movwf	6
  8062  1617  3027               	movlw	39
  8063  1618  0087               	movwf	7
  8064  1619  3146               	addfsr 1,6
  8065  161A  3F40               	moviw [0]fsr1
  8066  161B  00B5               	movwf	___ftmul@f1^(0+128)
  8067  161C  3F41               	moviw [1]fsr1
  8068  161D  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  8069  161E  3F42               	moviw [2]fsr1
  8070  161F  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  8071  1620  0023               	movlb	3	; select bank3
  8072  1621  0820               	movf	_error_new^(0+384),w
  8073  1622  0021               	movlb	1	; select bank1
  8074  1623  00A8               	movwf	___ftadd@f1^(0+128)
  8075  1624  0023               	movlb	3	; select bank3
  8076  1625  0821               	movf	(_error_new+1)^(0+384),w
  8077  1626  0021               	movlb	1	; select bank1
  8078  1627  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  8079  1628  0023               	movlb	3	; select bank3
  8080  1629  0822               	movf	(_error_new+2)^(0+384),w
  8081  162A  0021               	movlb	1	; select bank1
  8082  162B  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  8083  162C  0023               	movlb	3	; select bank3
  8084  162D  0823               	movf	_error_old^(0+384),w
  8085  162E  0021               	movlb	1	; select bank1
  8086  162F  00A0               	movwf	___ftneg@f1^(0+128)
  8087  1630  0023               	movlb	3	; select bank3
  8088  1631  0824               	movf	(_error_old+1)^(0+384),w
  8089  1632  0021               	movlb	1	; select bank1
  8090  1633  00A1               	movwf	(___ftneg@f1+1)^(0+128)
  8091  1634  0023               	movlb	3	; select bank3
  8092  1635  0825               	movf	(_error_old+2)^(0+384),w
  8093  1636  0021               	movlb	1	; select bank1
  8094  1637  00A2               	movwf	(___ftneg@f1+2)^(0+128)
  8095  1638  31A7  27CB  3194   	fcall	___ftneg
  8096  163B  0021               	movlb	1	; select bank1
  8097  163C  0820               	movf	?___ftneg^(0+128),w
  8098  163D  00AB               	movwf	___ftadd@f2^(0+128)
  8099  163E  0821               	movf	(?___ftneg+1)^(0+128),w
  8100  163F  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  8101  1640  0822               	movf	(?___ftneg+2)^(0+128),w
  8102  1641  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  8103  1642  3192  225E  3194   	fcall	___ftadd
  8104  1645  0021               	movlb	1	; select bank1
  8105  1646  0828               	movf	?___ftadd^(0+128),w
  8106  1647  00B8               	movwf	___ftmul@f2^(0+128)
  8107  1648  0829               	movf	(?___ftadd+1)^(0+128),w
  8108  1649  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  8109  164A  082A               	movf	(?___ftadd+2)^(0+128),w
  8110  164B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  8111  164C  3187  2714  3194   	fcall	___ftmul
  8112  164F  0021               	movlb	1	; select bank1
  8113  1650  0835               	movf	?___ftmul^(0+128),w
  8114  1651  00C8               	movwf	___ftdiv@f1^(0+128)
  8115  1652  0836               	movf	(?___ftmul+1)^(0+128),w
  8116  1653  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  8117  1654  0837               	movf	(?___ftmul+2)^(0+128),w
  8118  1655  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  8119  1656  3190  2014  3194   	fcall	___ftdiv
  8120  1659  0021               	movlb	1	; select bank1
  8121  165A  0845               	movf	?___ftdiv^(0+128),w
  8122  165B  00E7               	movwf	_Adaptive_base_pid$1789^(0+128)
  8123  165C  0846               	movf	(?___ftdiv+1)^(0+128),w
  8124  165D  00E8               	movwf	(_Adaptive_base_pid$1789+1)^(0+128)
  8125  165E  0847               	movf	(?___ftdiv+2)^(0+128),w
  8126  165F  00E9               	movwf	(_Adaptive_base_pid$1789+2)^(0+128)
  8127                           
  8128                           ;MOTORCONTROL.C: 69: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  8129  1660  0867               	movf	_Adaptive_base_pid$1789^(0+128),w
  8130  1661  00A8               	movwf	___ftadd@f1^(0+128)
  8131  1662  0868               	movf	(_Adaptive_base_pid$1789+1)^(0+128),w
  8132  1663  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  8133  1664  0869               	movf	(_Adaptive_base_pid$1789+2)^(0+128),w
  8134  1665  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  8135  1666  0023               	movlb	3	; select bank3
  8136  1667  0820               	movf	_error_new^(0+384),w
  8137  1668  0021               	movlb	1	; select bank1
  8138  1669  00B5               	movwf	___ftmul@f1^(0+128)
  8139  166A  0023               	movlb	3	; select bank3
  8140  166B  0821               	movf	(_error_new+1)^(0+384),w
  8141  166C  0021               	movlb	1	; select bank1
  8142  166D  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  8143  166E  0023               	movlb	3	; select bank3
  8144  166F  0822               	movf	(_error_new+2)^(0+384),w
  8145  1670  0021               	movlb	1	; select bank1
  8146  1671  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  8147  1672  3096               	movlw	150
  8148  1673  0086               	movwf	6
  8149  1674  3027               	movlw	39
  8150  1675  0087               	movwf	7
  8151  1676  3F40               	moviw [0]fsr1
  8152  1677  00B8               	movwf	___ftmul@f2^(0+128)
  8153  1678  3F41               	moviw [1]fsr1
  8154  1679  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  8155  167A  3F42               	moviw [2]fsr1
  8156  167B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  8157  167C  3187  2714  3194   	fcall	___ftmul
  8158  167F  0021               	movlb	1	; select bank1
  8159  1680  0835               	movf	?___ftmul^(0+128),w
  8160  1681  00AB               	movwf	___ftadd@f2^(0+128)
  8161  1682  0836               	movf	(?___ftmul+1)^(0+128),w
  8162  1683  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  8163  1684  0837               	movf	(?___ftmul+2)^(0+128),w
  8164  1685  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  8165  1686  3192  225E  3194   	fcall	___ftadd
  8166  1689  0021               	movlb	1	; select bank1
  8167  168A  0828               	movf	?___ftadd^(0+128),w
  8168  168B  00EA               	movwf	_Adaptive_base_pid$1790^(0+128)
  8169  168C  0829               	movf	(?___ftadd+1)^(0+128),w
  8170  168D  00EB               	movwf	(_Adaptive_base_pid$1790+1)^(0+128)
  8171  168E  082A               	movf	(?___ftadd+2)^(0+128),w
  8172  168F  00EC               	movwf	(_Adaptive_base_pid$1790+2)^(0+128)
  8173                           
  8174                           ;MOTORCONTROL.C: 69: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  8175  1690  0023               	movlb	3	; select bank3
  8176  1691  0826               	movf	_integral_new^(0+384),w
  8177  1692  0021               	movlb	1	; select bank1
  8178  1693  00A8               	movwf	___ftadd@f1^(0+128)
  8179  1694  0023               	movlb	3	; select bank3
  8180  1695  0827               	movf	(_integral_new+1)^(0+384),w
  8181  1696  0021               	movlb	1	; select bank1
  8182  1697  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  8183  1698  0023               	movlb	3	; select bank3
  8184  1699  0828               	movf	(_integral_new+2)^(0+384),w
  8185  169A  0021               	movlb	1	; select bank1
  8186  169B  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  8187  169C  086A               	movf	_Adaptive_base_pid$1790^(0+128),w
  8188  169D  00AB               	movwf	___ftadd@f2^(0+128)
  8189  169E  086B               	movf	(_Adaptive_base_pid$1790+1)^(0+128),w
  8190  169F  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  8191  16A0  086C               	movf	(_Adaptive_base_pid$1790+2)^(0+128),w
  8192  16A1  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  8193  16A2  3192  225E  3194   	fcall	___ftadd
  8194  16A5  0021               	movlb	1	; select bank1
  8195  16A6  0828               	movf	?___ftadd^(0+128),w
  8196  16A7  0024               	movlb	4	; select bank4
  8197  16A8  00A4               	movwf	_controller_out^(0+512)
  8198  16A9  0021               	movlb	1	; select bank1
  8199  16AA  0829               	movf	(?___ftadd+1)^(0+128),w
  8200  16AB  0024               	movlb	4	; select bank4
  8201  16AC  00A5               	movwf	(_controller_out+1)^(0+512)
  8202  16AD  0021               	movlb	1	; select bank1
  8203  16AE  082A               	movf	(?___ftadd+2)^(0+128),w
  8204  16AF  0024               	movlb	4	; select bank4
  8205  16B0  00A6               	movwf	(_controller_out+2)^(0+512)
  8206                           
  8207                           ;MOTORCONTROL.C: 70: integral_old = integral_new;
  8208  16B1  0023               	movlb	3	; select bank3
  8209  16B2  0826               	movf	_integral_new^(0+384),w
  8210  16B3  00A9               	movwf	_integral_old^(0+384)
  8211  16B4  0827               	movf	(_integral_new+1)^(0+384),w
  8212  16B5  00AA               	movwf	(_integral_old+1)^(0+384)
  8213  16B6  0828               	movf	(_integral_new+2)^(0+384),w
  8214  16B7  00AB               	movwf	(_integral_old+2)^(0+384)
  8215                           
  8216                           ;MOTORCONTROL.C: 71: error_old = error_new;
  8217  16B8  0820               	movf	_error_new^(0+384),w
  8218  16B9  00A3               	movwf	_error_old^(0+384)
  8219  16BA  0821               	movf	(_error_new+1)^(0+384),w
  8220  16BB  00A4               	movwf	(_error_old+1)^(0+384)
  8221  16BC  0822               	movf	(_error_new+2)^(0+384),w
  8222  16BD  00A5               	movwf	(_error_old+2)^(0+384)
  8223                           
  8224                           ;MOTORCONTROL.C: 72: pidParams2.pidoutput2=controller_out;
  8225  16BE  0024               	movlb	4	; select bank4
  8226  16BF  0824               	movf	_controller_out^(0+512),w
  8227  16C0  0021               	movlb	1	; select bank1
  8228  16C1  00C5               	movwf	___fttol@f1^(0+128)
  8229  16C2  0024               	movlb	4	; select bank4
  8230  16C3  0825               	movf	(_controller_out+1)^(0+512),w
  8231  16C4  0021               	movlb	1	; select bank1
  8232  16C5  00C6               	movwf	(___fttol@f1+1)^(0+128)
  8233  16C6  0024               	movlb	4	; select bank4
  8234  16C7  0826               	movf	(_controller_out+2)^(0+512),w
  8235  16C8  0021               	movlb	1	; select bank1
  8236  16C9  00C7               	movwf	(___fttol@f1+2)^(0+128)
  8237  16CA  319E  26D0  3194   	fcall	___fttol
  8238  16CD  30E0               	movlw	224
  8239  16CE  0086               	movwf	6
  8240  16CF  3027               	movlw	39
  8241  16D0  0087               	movwf	7
  8242  16D1  0021               	movlb	1	; select bank1
  8243  16D2  0845               	movf	?___fttol^(0+128),w
  8244  16D3  3FC0               	movwi [0]fsr1
  8245  16D4  0846               	movf	(?___fttol+1)^(0+128),w
  8246  16D5  3FC1               	movwi [1]fsr1
  8247  16D6  0847               	movf	(?___fttol+2)^(0+128),w
  8248  16D7  3FC2               	movwi [2]fsr1
  8249  16D8  0848               	movf	(?___fttol+3)^(0+128),w
  8250  16D9  3FC3               	movwi [3]fsr1
  8251                           
  8252                           ;MOTORCONTROL.C: 75: if(pidParams2.pidoutput2<=0)
  8253  16DA  30E0               	movlw	224
  8254  16DB  0086               	movwf	6
  8255  16DC  3027               	movlw	39
  8256  16DD  0087               	movwf	7
  8257  16DE  3F43               	moviw [3]fsr1
  8258  16DF  1B89               	btfsc	9,7
  8259  16E0  2EF0               	goto	l4494
  8260  16E1  3F43               	moviw [3]fsr1
  8261  16E2  1D03               	btfss	3,2
  8262  16E3  2EFA               	goto	l4496
  8263  16E4  3F42               	moviw [2]fsr1
  8264  16E5  1D03               	btfss	3,2
  8265  16E6  2EFA               	goto	l4496
  8266  16E7  3F41               	moviw [1]fsr1
  8267  16E8  1D03               	btfss	3,2
  8268  16E9  2EFA               	goto	l4496
  8269  16EA  3F40               	moviw [0]fsr1
  8270  16EB  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8271  16EC  3001               	movlw	1
  8272  16ED  025B               	subwf	??_Adaptive_base_pid^(0+128),w
  8273  16EE  1803               	btfsc	3,0
  8274  16EF  2EFA               	goto	l4496
  8275  16F0                     l4494:	
  8276                           
  8277                           ;MOTORCONTROL.C: 76: pidParams2.pidoutput2=0;
  8278  16F0  30E0               	movlw	224
  8279  16F1  0086               	movwf	6
  8280  16F2  3027               	movlw	39
  8281  16F3  0087               	movwf	7
  8282  16F4  3000               	movlw	0
  8283  16F5  3FC0               	movwi [0]fsr1
  8284  16F6  3FC1               	movwi [1]fsr1
  8285  16F7  3FC2               	movwi [2]fsr1
  8286  16F8  3FC3               	movwi [3]fsr1
  8287  16F9  2F3E               	goto	l558
  8288  16FA                     l4496:	
  8289                           
  8290                           ;MOTORCONTROL.C: 77: else if(pidParams2.pidoutput2>pidParams2.outmax2)
  8291  16FA  30E0               	movlw	224
  8292  16FB  0086               	movwf	6
  8293  16FC  3027               	movlw	39
  8294  16FD  0087               	movwf	7
  8295  16FE  3F40               	moviw [0]fsr1
  8296  16FF  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8297  1700  3F41               	moviw [1]fsr1
  8298  1701  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8299  1702  3F42               	moviw [2]fsr1
  8300  1703  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8301  1704  3F43               	moviw [3]fsr1
  8302  1705  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8303  1706  30C0               	movlw	192
  8304  1707  0086               	movwf	6
  8305  1708  3027               	movlw	39
  8306  1709  0087               	movwf	7
  8307  170A  3F40               	moviw [0]fsr1
  8308  170B  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  8309  170C  3F41               	moviw [1]fsr1
  8310  170D  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  8311  170E  3F42               	moviw [2]fsr1
  8312  170F  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  8313  1710  3F43               	moviw [3]fsr1
  8314  1711  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  8315  1712  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  8316  1713  3A80               	xorlw	128
  8317  1714  00E3               	movwf	(??_Adaptive_base_pid+8)^(0+128)
  8318  1715  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8319  1716  3A80               	xorlw	128
  8320  1717  0263               	subwf	(??_Adaptive_base_pid+8)^(0+128),w
  8321  1718  1D03               	skipz
  8322  1719  2F24               	goto	u6203
  8323  171A  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8324  171B  0261               	subwf	(??_Adaptive_base_pid+6)^(0+128),w
  8325  171C  1D03               	skipz
  8326  171D  2F24               	goto	u6203
  8327  171E  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8328  171F  0260               	subwf	(??_Adaptive_base_pid+5)^(0+128),w
  8329  1720  1D03               	skipz
  8330  1721  2F24               	goto	u6203
  8331  1722  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8332  1723  025F               	subwf	(??_Adaptive_base_pid+4)^(0+128),w
  8333  1724                     u6203:	
  8334  1724  1803               	skipnc
  8335  1725  2F3E               	goto	l558
  8336                           
  8337                           ;MOTORCONTROL.C: 78: pidParams2.pidoutput2=pidParams2.outmax2;
  8338  1726  30C0               	movlw	192
  8339  1727  0086               	movwf	6
  8340  1728  3027               	movlw	39
  8341  1729  0087               	movwf	7
  8342  172A  3F40               	moviw [0]fsr1
  8343  172B  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8344  172C  3F41               	moviw [1]fsr1
  8345  172D  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8346  172E  3F42               	moviw [2]fsr1
  8347  172F  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8348  1730  3F43               	moviw [3]fsr1
  8349  1731  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8350  1732  30E0               	movlw	224
  8351  1733  0086               	movwf	6
  8352  1734  3027               	movlw	39
  8353  1735  0087               	movwf	7
  8354  1736  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8355  1737  3FC0               	movwi [0]fsr1
  8356  1738  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8357  1739  3FC1               	movwi [1]fsr1
  8358  173A  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8359  173B  3FC2               	movwi [2]fsr1
  8360  173C  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8361  173D  3FC3               	movwi [3]fsr1
  8362  173E                     l558:	
  8363                           
  8364                           ;MOTORCONTROL.C: 82: disp4term=pidParams2.pidoutput2;
  8365  173E  30E0               	movlw	224
  8366  173F  0086               	movwf	6
  8367  1740  3027               	movlw	39
  8368  1741  0087               	movwf	7
  8369  1742  3F40               	moviw [0]fsr1
  8370  1743  0024               	movlb	4	; select bank4
  8371  1744  00BC               	movwf	_disp4term^(0+512)
  8372  1745  3F41               	moviw [1]fsr1
  8373  1746  00BD               	movwf	(_disp4term+1)^(0+512)
  8374                           
  8375                           ;MOTORCONTROL.C: 83: scaled_baseval2=(pidParams2.pidoutput2/scalefactor2);
  8376  1747  0023               	movlb	3	; select bank3
  8377  1748  086C               	movf	_scalefactor2^(0+384),w
  8378  1749  0021               	movlb	1	; select bank1
  8379  174A  00A0               	movwf	___aldiv@divisor^(0+128)
  8380  174B  0023               	movlb	3	; select bank3
  8381  174C  086D               	movf	(_scalefactor2+1)^(0+384),w
  8382  174D  0021               	movlb	1	; select bank1
  8383  174E  00A1               	movwf	(___aldiv@divisor^(0+128)+1)
  8384  174F  01A2               	clrf	(___aldiv@divisor^(0+128)+2)
  8385  1750  01A3               	clrf	(___aldiv@divisor^(0+128)+3)
  8386  1751  30E0               	movlw	224
  8387  1752  0086               	movwf	6
  8388  1753  3027               	movlw	39
  8389  1754  0087               	movwf	7
  8390  1755  3F40               	moviw [0]fsr1
  8391  1756  00A4               	movwf	___aldiv@dividend^(0+128)
  8392  1757  3F41               	moviw [1]fsr1
  8393  1758  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  8394  1759  3F42               	moviw [2]fsr1
  8395  175A  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  8396  175B  3F43               	moviw [3]fsr1
  8397  175C  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  8398  175D  319D  25C7  3194   	fcall	___aldiv
  8399  1760  0021               	movlb	1	; select bank1
  8400  1761  0821               	movf	(?___aldiv^(0+128)+1),w
  8401  1762  0022               	movlb	2	; select bank2
  8402  1763  00A9               	movwf	(_scaled_baseval2+1)^(0+256)
  8403  1764  0021               	movlb	1	; select bank1
  8404  1765  0820               	movf	?___aldiv^(0+128),w
  8405  1766  0022               	movlb	2	; select bank2
  8406  1767  00A8               	movwf	_scaled_baseval2^(0+256)
  8407                           
  8408                           ;MOTORCONTROL.C: 85: if(scaled_baseval2>maxfmspeed)
  8409  1768  0829               	movf	(_scaled_baseval2+1)^(0+256),w
  8410  1769  0023               	movlb	3	; select bank3
  8411  176A  0269               	subwf	(_maxfmspeed+1)^(0+384),w
  8412  176B  1D03               	skipz
  8413  176C  2F71               	goto	u6215
  8414  176D  0022               	movlb	2	; select bank2
  8415  176E  0828               	movf	_scaled_baseval2^(0+256),w
  8416  176F  0023               	movlb	3	; select bank3
  8417  1770  0268               	subwf	_maxfmspeed^(0+384),w
  8418  1771                     u6215:	
  8419  1771  1803               	skipnc
  8420  1772  2F79               	goto	l4506
  8421                           
  8422                           ;MOTORCONTROL.C: 86: {
  8423                           ;MOTORCONTROL.C: 87: scaled_baseval2=maxfmspeed;
  8424  1773  0869               	movf	(_maxfmspeed+1)^(0+384),w
  8425  1774  0022               	movlb	2	; select bank2
  8426  1775  00A9               	movwf	(_scaled_baseval2+1)^(0+256)
  8427  1776  0023               	movlb	3	; select bank3
  8428  1777  0868               	movf	_maxfmspeed^(0+384),w
  8429  1778  2F8B               	goto	L19
  8430  1779                     l4506:	
  8431                           ;MOTORCONTROL.C: 88: }
  8432                           
  8433                           
  8434                           ;MOTORCONTROL.C: 89: else if(scaled_baseval2<minfmspeed)
  8435  1779  0023               	movlb	3	; select bank3
  8436  177A  086B               	movf	(_minfmspeed+1)^(0+384),w
  8437  177B  0022               	movlb	2	; select bank2
  8438  177C  0229               	subwf	(_scaled_baseval2+1)^(0+256),w
  8439  177D  1D03               	skipz
  8440  177E  2F83               	goto	u6225
  8441  177F  0023               	movlb	3	; select bank3
  8442  1780  086A               	movf	_minfmspeed^(0+384),w
  8443  1781  0022               	movlb	2	; select bank2
  8444  1782  0228               	subwf	_scaled_baseval2^(0+256),w
  8445  1783                     u6225:	
  8446  1783  1803               	skipnc
  8447  1784  2F8D               	goto	l4510
  8448                           
  8449                           ;MOTORCONTROL.C: 90: {
  8450                           ;MOTORCONTROL.C: 91: scaled_baseval2=minfmspeed;
  8451  1785  0023               	movlb	3	; select bank3
  8452  1786  086B               	movf	(_minfmspeed+1)^(0+384),w
  8453  1787  0022               	movlb	2	; select bank2
  8454  1788  00A9               	movwf	(_scaled_baseval2+1)^(0+256)
  8455  1789  0023               	movlb	3	; select bank3
  8456  178A  086A               	movf	_minfmspeed^(0+384),w
  8457  178B                     L19:	
  8458  178B  0022               	movlb	2	; select bank2
  8459  178C  00A8               	movwf	_scaled_baseval2^(0+256)
  8460  178D                     l4510:	
  8461                           
  8462                           ;MOTORCONTROL.C: 92: }
  8463                           ;MOTORCONTROL.C: 93: if(cyclestrtf==1 && closeloopf==1)
  8464  178D  0343               	decf	_cyclestrtf^(0+256),w
  8465  178E  1D03               	btfss	3,2
  8466  178F  2FCD               	goto	l4520
  8467  1790  033D               	decf	_closeloopf^(0+256),w
  8468  1791  1D03               	btfss	3,2
  8469  1792  2FCD               	goto	l4520
  8470                           
  8471                           ;MOTORCONTROL.C: 94: {
  8472                           ;MOTORCONTROL.C: 95: if(newsetwirespeed >= 35)
  8473  1793  3000               	movlw	0
  8474  1794  0020               	movlb	0	; select bank0
  8475  1795  0268               	subwf	_newsetwirespeed+1,w
  8476  1796  3023               	movlw	35
  8477  1797  1903               	skipnz
  8478  1798  0267               	subwf	_newsetwirespeed,w
  8479  1799  1C03               	skipc
  8480  179A  2FA3               	goto	l4518
  8481                           
  8482                           ;MOTORCONTROL.C: 96: {
  8483                           ;MOTORCONTROL.C: 97: Update_PWM(scaled_baseval2);
  8484  179B  0022               	movlb	2	; select bank2
  8485  179C  0829               	movf	(_scaled_baseval2+1)^(0+256),w
  8486  179D  0021               	movlb	1	; select bank1
  8487  179E  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  8488  179F  0022               	movlb	2	; select bank2
  8489  17A0  0828               	movf	_scaled_baseval2^(0+256),w
  8490  17A1  0021               	movlb	1	; select bank1
  8491  17A2  2FE2               	goto	L20
  8492  17A3                     l4518:	
  8493                           ;MOTORCONTROL.C: 98: }
  8494                           
  8495                           
  8496                           ;MOTORCONTROL.C: 99: else
  8497                           ;MOTORCONTROL.C: 100: {
  8498                           ;MOTORCONTROL.C: 101: Update_PWM(newsetwirespeed*3.4);
  8499  17A3  0020               	movlb	0	; select bank0
  8500  17A4  0868               	movf	_newsetwirespeed+1,w
  8501  17A5  0021               	movlb	1	; select bank1
  8502  17A6  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  8503  17A7  0020               	movlb	0	; select bank0
  8504  17A8  0867               	movf	_newsetwirespeed,w
  8505  17A9  0021               	movlb	1	; select bank1
  8506  17AA  00A8               	movwf	___lwtoft@c^(0+128)
  8507  17AB  3198  2035  3194   	fcall	___lwtoft
  8508  17AE  0021               	movlb	1	; select bank1
  8509  17AF  0828               	movf	?___lwtoft^(0+128),w
  8510  17B0  00B8               	movwf	___ftmul@f2^(0+128)
  8511  17B1  0829               	movf	(?___lwtoft+1)^(0+128),w
  8512  17B2  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  8513  17B3  082A               	movf	(?___lwtoft+2)^(0+128),w
  8514  17B4  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  8515  17B5  309A               	movlw	154
  8516  17B6  00B5               	movwf	___ftmul@f1^(0+128)
  8517  17B7  3059               	movlw	89
  8518  17B8  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  8519  17B9  3040               	movlw	64
  8520  17BA  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  8521  17BB  3187  2714  3194   	fcall	___ftmul
  8522  17BE  0021               	movlb	1	; select bank1
  8523  17BF  0835               	movf	?___ftmul^(0+128),w
  8524  17C0  00C5               	movwf	___fttol@f1^(0+128)
  8525  17C1  0836               	movf	(?___ftmul+1)^(0+128),w
  8526  17C2  00C6               	movwf	(___fttol@f1+1)^(0+128)
  8527  17C3  0837               	movf	(?___ftmul+2)^(0+128),w
  8528  17C4  00C7               	movwf	(___fttol@f1+2)^(0+128)
  8529  17C5  319E  26D0  3194   	fcall	___fttol
  8530  17C8  0021               	movlb	1	; select bank1
  8531  17C9  0846               	movf	(?___fttol^(0+128)+1),w
  8532  17CA  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  8533  17CB  0845               	movf	?___fttol^(0+128),w
  8534  17CC  2FE2               	goto	L20
  8535  17CD                     l4520:	
  8536                           ;MOTORCONTROL.C: 102: }
  8537                           ;MOTORCONTROL.C: 106: }
  8538                           
  8539                           
  8540                           ;MOTORCONTROL.C: 107: else if(cyclestrtf==0)
  8541  17CD  0022               	movlb	2	; select bank2
  8542  17CE  0843               	movf	_cyclestrtf^(0+256),w
  8543  17CF  1D03               	btfss	3,2
  8544  17D0  2FE5               	goto	l4524
  8545                           
  8546                           ;MOTORCONTROL.C: 108: {
  8547                           ;MOTORCONTROL.C: 109: Update_PWM(scaled_baseval2*0);
  8548  17D1  0829               	movf	(_scaled_baseval2+1)^(0+256),w
  8549  17D2  0021               	movlb	1	; select bank1
  8550  17D3  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  8551  17D4  0022               	movlb	2	; select bank2
  8552  17D5  0828               	movf	_scaled_baseval2^(0+256),w
  8553  17D6  0021               	movlb	1	; select bank1
  8554  17D7  00A0               	movwf	___wmul@multiplier^(0+128)
  8555  17D8  3000               	movlw	0
  8556  17D9  00A2               	movwf	___wmul@multiplicand^(0+128)
  8557  17DA  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  8558  17DB  3198  20BF  3194   	fcall	___wmul
  8559  17DE  0021               	movlb	1	; select bank1
  8560  17DF  0821               	movf	(?___wmul+1)^(0+128),w
  8561  17E0  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  8562  17E1  0820               	movf	?___wmul^(0+128),w
  8563  17E2                     L20:	
  8564  17E2  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  8565  17E3  3199  2128         	fcall	_Update_PWM
  8566  17E5                     l4524:	
  8567                           
  8568                           ;MOTORCONTROL.C: 110: }
  8569                           ;MOTORCONTROL.C: 111: }
  8570                           ;MOTORCONTROL.C: 112: pidParams2.previous_error2 = pidParams2.error2;
  8571  17E5  3096               	movlw	150
  8572  17E6  0086               	movwf	6
  8573  17E7  3027               	movlw	39
  8574  17E8  0087               	movwf	7
  8575  17E9  314C               	addfsr 1,12
  8576  17EA  3F40               	moviw [0]fsr1
  8577  17EB  0021               	movlb	1	; select bank1
  8578  17EC  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8579  17ED  3F41               	moviw [1]fsr1
  8580  17EE  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8581  17EF  3F42               	moviw [2]fsr1
  8582  17F0  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8583  17F1  3F43               	moviw [3]fsr1
  8584  17F2  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8585  17F3  30D4               	movlw	212
  8586  17F4  0086               	movwf	6
  8587  17F5  3027               	movlw	39
  8588  17F6  0087               	movwf	7
  8589  17F7  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8590  17F8  3FC0               	movwi [0]fsr1
  8591  17F9  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8592  17FA  3FC1               	movwi [1]fsr1
  8593  17FB  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8594  17FC  3FC2               	movwi [2]fsr1
  8595  17FD  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8596  17FE  3FC3               	movwi [3]fsr1
  8597  17FF  0008               	return
  8598  1800                     __end_of_Adaptive_base_pid:	
  8599                           
  8600                           	psect	text24
  8601  18BF                     __ptext24:	
  8602 ;; *************** function ___wmul *****************
  8603 ;; Defined at:
  8604 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  multiplier      2    0[BANK1 ] unsigned int 
  8607 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;  product         2    4[BANK1 ] unsigned int 
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  2    0[BANK1 ] unsigned int 
  8612 ;; Registers used:
  8613 ;;		wreg, status,2, status,0
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8619 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8620 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8622 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8623 ;;Total ram usage:        6 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    3
  8626 ;; This function calls:
  8627 ;;		Nothing
  8628 ;; This function is called by:
  8629 ;;		_Adaptive_base_pid
  8630 ;;		_main
  8631 ;;		_key_application
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           
  8636                           ;psect for function ___wmul
  8637  18BF                     ___wmul:	
  8638                           
  8639                           ;incstack = 0
  8640                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8641  18BF  0021               	movlb	1	; select bank1
  8642  18C0  01A4               	clrf	___wmul@product^(0+128)
  8643  18C1  01A5               	clrf	(___wmul@product+1)^(0+128)
  8644  18C2                     l3850:	
  8645  18C2  1C20               	btfss	___wmul@multiplier^(0+128),0
  8646  18C3  28C8               	goto	l962
  8647  18C4  0822               	movf	___wmul@multiplicand^(0+128),w
  8648  18C5  07A4               	addwf	___wmul@product^(0+128),f
  8649  18C6  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  8650  18C7  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  8651  18C8                     l962:	
  8652  18C8  3001               	movlw	1
  8653  18C9                     u4815:	
  8654  18C9  35A2               	lslf	___wmul@multiplicand^(0+128),f
  8655  18CA  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  8656  18CB  0B89               	decfsz	9,f
  8657  18CC  28C9               	goto	u4815
  8658  18CD  3001               	movlw	1
  8659  18CE                     u4825:	
  8660  18CE  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  8661  18CF  0CA0               	rrf	___wmul@multiplier^(0+128),f
  8662  18D0  0B89               	decfsz	9,f
  8663  18D1  28CE               	goto	u4825
  8664  18D2  0820               	movf	___wmul@multiplier^(0+128),w
  8665  18D3  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
  8666  18D4  1D03               	btfss	3,2
  8667  18D5  28C2               	goto	l3850
  8668  18D6  0825               	movf	(___wmul@product+1)^(0+128),w
  8669  18D7  00A1               	movwf	(?___wmul+1)^(0+128)
  8670  18D8  0824               	movf	___wmul@product^(0+128),w
  8671  18D9  00A0               	movwf	?___wmul^(0+128)
  8672  18DA  0008               	return
  8673  18DB                     __end_of___wmul:	
  8674                           
  8675                           	psect	text25
  8676  1835                     __ptext25:	
  8677 ;; *************** function ___lwtoft *****************
  8678 ;; Defined at:
  8679 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;  c               2    8[BANK1 ] unsigned int 
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;		None
  8684 ;; Return value:  Size  Location     Type
  8685 ;;                  3    8[BANK1 ] float 
  8686 ;; Registers used:
  8687 ;;		wreg, status,2, status,0, pclath, cstack
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8693 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8695 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8696 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8697 ;;Total ram usage:        4 bytes
  8698 ;; Hardware stack levels used:    1
  8699 ;; Hardware stack levels required when called:    4
  8700 ;; This function calls:
  8701 ;;		___ftpack
  8702 ;; This function is called by:
  8703 ;;		_Adaptive_base_pid
  8704 ;;		_main
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           
  8709                           ;psect for function ___lwtoft
  8710  1835                     ___lwtoft:	
  8711                           
  8712                           ;incstack = 0
  8713                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8714  1835  0021               	movlb	1	; select bank1
  8715  1836  0828               	movf	___lwtoft@c^(0+128),w
  8716  1837  00A0               	movwf	___ftpack@arg^(0+128)
  8717  1838  0829               	movf	(___lwtoft@c+1)^(0+128),w
  8718  1839  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  8719  183A  01A2               	clrf	(___ftpack@arg+2)^(0+128)
  8720  183B  308E               	movlw	142
  8721  183C  00AB               	movwf	??___lwtoft^(0+128)
  8722  183D  082B               	movf	??___lwtoft^(0+128),w
  8723  183E  00A3               	movwf	___ftpack@exp^(0+128)
  8724  183F  01A4               	clrf	___ftpack@sign^(0+128)
  8725  1840  319B  23F1         	fcall	___ftpack
  8726  1842  0021               	movlb	1	; select bank1
  8727  1843  0820               	movf	?___ftpack^(0+128),w
  8728  1844  00A8               	movwf	?___lwtoft^(0+128)
  8729  1845  0821               	movf	(?___ftpack+1)^(0+128),w
  8730  1846  00A9               	movwf	(?___lwtoft+1)^(0+128)
  8731  1847  0822               	movf	(?___ftpack+2)^(0+128),w
  8732  1848  00AA               	movwf	(?___lwtoft+2)^(0+128)
  8733  1849  0008               	return
  8734  184A                     __end_of___lwtoft:	
  8735                           
  8736                           	psect	text26
  8737  1ED0                     __ptext26:	
  8738 ;; *************** function ___fttol *****************
  8739 ;; Defined at:
  8740 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;  f1              3   37[BANK1 ] float 
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;  lval            4   46[BANK1 ] unsigned long 
  8745 ;;  exp1            1   50[BANK1 ] unsigned char 
  8746 ;;  sign1           1   45[BANK1 ] unsigned char 
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  4   37[BANK1 ] long 
  8749 ;; Registers used:
  8750 ;;		wreg, status,2, status,0
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8756 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8757 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8758 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8759 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8760 ;;Total ram usage:       14 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:    3
  8763 ;; This function calls:
  8764 ;;		Nothing
  8765 ;; This function is called by:
  8766 ;;		_Adaptive_base_pid
  8767 ;;		_main
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           
  8772                           ;psect for function ___fttol
  8773  1ED0                     ___fttol:	
  8774                           
  8775                           ;incstack = 0
  8776                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8777  1ED0  0021               	movlb	1	; select bank1
  8778  1ED1  0845               	movf	___fttol@f1^(0+128),w
  8779  1ED2  00C9               	movwf	??___fttol^(0+128)
  8780  1ED3  0846               	movf	(___fttol@f1+1)^(0+128),w
  8781  1ED4  00CA               	movwf	(??___fttol^(0+128)+1)
  8782  1ED5  0847               	movf	(___fttol@f1+2)^(0+128),w
  8783  1ED6  00CB               	movwf	(??___fttol^(0+128)+2)
  8784  1ED7  1003               	clrc
  8785  1ED8  0D4A               	rlf	(??___fttol^(0+128)+1),w
  8786  1ED9  0D4B               	rlf	(??___fttol^(0+128)+2),w
  8787  1EDA  00CC               	movwf	(??___fttol+3)^(0+128)
  8788  1EDB  084C               	movf	(??___fttol+3)^(0+128),w
  8789  1EDC  00D2               	movwf	___fttol@exp1^(0+128)
  8790  1EDD  0852               	movf	___fttol@exp1^(0+128),w
  8791  1EDE  1D03               	btfss	3,2
  8792  1EDF  2EE9               	goto	l4114
  8793  1EE0  3000               	movlw	0
  8794  1EE1  00C8               	movwf	(?___fttol+3)^(0+128)
  8795  1EE2  3000               	movlw	0
  8796  1EE3  00C7               	movwf	(?___fttol+2)^(0+128)
  8797  1EE4  3000               	movlw	0
  8798  1EE5  00C6               	movwf	(?___fttol+1)^(0+128)
  8799  1EE6  3000               	movlw	0
  8800  1EE7  00C5               	movwf	?___fttol^(0+128)
  8801  1EE8  0008               	return
  8802  1EE9                     l4114:	
  8803  1EE9  0845               	movf	___fttol@f1^(0+128),w
  8804  1EEA  00C9               	movwf	??___fttol^(0+128)
  8805  1EEB  0846               	movf	(___fttol@f1+1)^(0+128),w
  8806  1EEC  00CA               	movwf	(??___fttol^(0+128)+1)
  8807  1EED  0847               	movf	(___fttol@f1+2)^(0+128),w
  8808  1EEE  00CB               	movwf	(??___fttol^(0+128)+2)
  8809  1EEF  3017               	movlw	23
  8810  1EF0                     u5455:	
  8811  1EF0  36CB               	lsrf	(??___fttol^(0+128)+2),f
  8812  1EF1  0CCA               	rrf	(??___fttol^(0+128)+1),f
  8813  1EF2  0CC9               	rrf	??___fttol^(0+128),f
  8814  1EF3  0B89               	decfsz	9,f
  8815  1EF4  2EF0               	goto	u5455
  8816  1EF5  0849               	movf	??___fttol^(0+128),w
  8817  1EF6  00CC               	movwf	(??___fttol+3)^(0+128)
  8818  1EF7  084C               	movf	(??___fttol+3)^(0+128),w
  8819  1EF8  00CD               	movwf	___fttol@sign1^(0+128)
  8820  1EF9  17C6               	bsf	(___fttol@f1^(0+128)+1),7
  8821  1EFA  30FF               	movlw	255
  8822  1EFB  05C5               	andwf	___fttol@f1^(0+128),f
  8823  1EFC  30FF               	movlw	255
  8824  1EFD  05C6               	andwf	(___fttol@f1+1)^(0+128),f
  8825  1EFE  3000               	movlw	0
  8826  1EFF  05C7               	andwf	(___fttol@f1+2)^(0+128),f
  8827  1F00  0845               	movf	___fttol@f1^(0+128),w
  8828  1F01  00CE               	movwf	___fttol@lval^(0+128)
  8829  1F02  0846               	movf	(___fttol@f1+1)^(0+128),w
  8830  1F03  00CF               	movwf	(___fttol@lval^(0+128)+1)
  8831  1F04  0847               	movf	(___fttol@f1+2)^(0+128),w
  8832  1F05  00D0               	movwf	(___fttol@lval^(0+128)+2)
  8833  1F06  01D1               	clrf	(___fttol@lval^(0+128)+3)
  8834  1F07  308E               	movlw	142
  8835  1F08  02D2               	subwf	___fttol@exp1^(0+128),f
  8836  1F09  1FD2               	btfss	___fttol@exp1^(0+128),7
  8837  1F0A  2F27               	goto	l4134
  8838  1F0B  0852               	movf	___fttol@exp1^(0+128),w
  8839  1F0C  3A80               	xorlw	128
  8840  1F0D  3E8F               	addlw	143
  8841  1F0E  1803               	skipnc
  8842  1F0F  2F19               	goto	l4132
  8843  1F10  3000               	movlw	0
  8844  1F11  00C8               	movwf	(?___fttol+3)^(0+128)
  8845  1F12  3000               	movlw	0
  8846  1F13  00C7               	movwf	(?___fttol+2)^(0+128)
  8847  1F14  3000               	movlw	0
  8848  1F15  00C6               	movwf	(?___fttol+1)^(0+128)
  8849  1F16  3000               	movlw	0
  8850  1F17  00C5               	movwf	?___fttol^(0+128)
  8851  1F18  0008               	return
  8852  1F19                     l4132:	
  8853  1F19  3001               	movlw	1
  8854  1F1A                     u5485:	
  8855  1F1A  36D1               	lsrf	(___fttol@lval+3)^(0+128),f
  8856  1F1B  0CD0               	rrf	(___fttol@lval+2)^(0+128),f
  8857  1F1C  0CCF               	rrf	(___fttol@lval+1)^(0+128),f
  8858  1F1D  0CCE               	rrf	___fttol@lval^(0+128),f
  8859  1F1E  0B89               	decfsz	9,f
  8860  1F1F  2F1A               	goto	u5485
  8861  1F20  3001               	movlw	1
  8862  1F21  00C9               	movwf	??___fttol^(0+128)
  8863  1F22  0849               	movf	??___fttol^(0+128),w
  8864  1F23  07D2               	addwf	___fttol@exp1^(0+128),f
  8865  1F24  1903               	btfsc	3,2
  8866  1F25  2F40               	goto	l4142
  8867  1F26  2F19               	goto	l4132
  8868  1F27                     l4134:	
  8869  1F27  3018               	movlw	24
  8870  1F28  0252               	subwf	___fttol@exp1^(0+128),w
  8871  1F29  1C03               	skipc
  8872  1F2A  2F3D               	goto	l1214
  8873  1F2B  3000               	movlw	0
  8874  1F2C  00C8               	movwf	(?___fttol+3)^(0+128)
  8875  1F2D  3000               	movlw	0
  8876  1F2E  00C7               	movwf	(?___fttol+2)^(0+128)
  8877  1F2F  3000               	movlw	0
  8878  1F30  00C6               	movwf	(?___fttol+1)^(0+128)
  8879  1F31  3000               	movlw	0
  8880  1F32  00C5               	movwf	?___fttol^(0+128)
  8881  1F33  0008               	return
  8882  1F34                     l4140:	
  8883  1F34  3001               	movlw	1
  8884  1F35                     u5515:	
  8885  1F35  35CE               	lslf	___fttol@lval^(0+128),f
  8886  1F36  0DCF               	rlf	(___fttol@lval+1)^(0+128),f
  8887  1F37  0DD0               	rlf	(___fttol@lval+2)^(0+128),f
  8888  1F38  0DD1               	rlf	(___fttol@lval+3)^(0+128),f
  8889  1F39  0B89               	decfsz	9,f
  8890  1F3A  2F35               	goto	u5515
  8891  1F3B  3001               	movlw	1
  8892  1F3C  02D2               	subwf	___fttol@exp1^(0+128),f
  8893  1F3D                     l1214:	
  8894  1F3D  0852               	movf	___fttol@exp1^(0+128),w
  8895  1F3E  1D03               	btfss	3,2
  8896  1F3F  2F34               	goto	l4140
  8897  1F40                     l4142:	
  8898  1F40  084D               	movf	___fttol@sign1^(0+128),w
  8899  1F41  1903               	btfsc	3,2
  8900  1F42  2F4E               	goto	l4146
  8901  1F43  09CE               	comf	___fttol@lval^(0+128),f
  8902  1F44  09CF               	comf	(___fttol@lval+1)^(0+128),f
  8903  1F45  09D0               	comf	(___fttol@lval+2)^(0+128),f
  8904  1F46  09D1               	comf	(___fttol@lval+3)^(0+128),f
  8905  1F47  0ACE               	incf	___fttol@lval^(0+128),f
  8906  1F48  1903               	skipnz
  8907  1F49  0ACF               	incf	(___fttol@lval+1)^(0+128),f
  8908  1F4A  1903               	skipnz
  8909  1F4B  0AD0               	incf	(___fttol@lval+2)^(0+128),f
  8910  1F4C  1903               	skipnz
  8911  1F4D  0AD1               	incf	(___fttol@lval+3)^(0+128),f
  8912  1F4E                     l4146:	
  8913  1F4E  0851               	movf	(___fttol@lval+3)^(0+128),w
  8914  1F4F  00C8               	movwf	(?___fttol+3)^(0+128)
  8915  1F50  0850               	movf	(___fttol@lval+2)^(0+128),w
  8916  1F51  00C7               	movwf	(?___fttol+2)^(0+128)
  8917  1F52  084F               	movf	(___fttol@lval+1)^(0+128),w
  8918  1F53  00C6               	movwf	(?___fttol+1)^(0+128)
  8919  1F54  084E               	movf	___fttol@lval^(0+128),w
  8920  1F55  00C5               	movwf	?___fttol^(0+128)
  8921  1F56  0008               	return
  8922  1F57                     __end_of___fttol:	
  8923                           
  8924                           	psect	text27
  8925  27CB                     __ptext27:	
  8926 ;; *************** function ___ftneg *****************
  8927 ;; Defined at:
  8928 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  f1              3    0[BANK1 ] float 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;		None
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  3    0[BANK1 ] float 
  8935 ;; Registers used:
  8936 ;;		wreg
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8942 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8945 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8946 ;;Total ram usage:        3 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; Hardware stack levels required when called:    3
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		_Adaptive_base_pid
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           
  8957                           ;psect for function ___ftneg
  8958  27CB                     ___ftneg:	
  8959                           
  8960                           ;incstack = 0
  8961                           ; Regs used in ___ftneg: [wreg]
  8962  27CB  0021               	movlb	1	; select bank1
  8963  27CC  0822               	movf	(___ftneg@f1+2)^(0+128),w
  8964  27CD  0421               	iorwf	(___ftneg@f1+1)^(0+128),w
  8965  27CE  0420               	iorwf	___ftneg@f1^(0+128),w
  8966  27CF  1903               	skipnz
  8967  27D0  0008               	return
  8968  27D1  3080               	movlw	128
  8969  27D2  06A2               	xorwf	(___ftneg@f1+2)^(0+128),f
  8970  27D3  0008               	return
  8971  27D4                     __end_of___ftneg:	
  8972                           
  8973                           	psect	text28
  8974  0714                     __ptext28:	
  8975 ;; *************** function ___ftmul *****************
  8976 ;; Defined at:
  8977 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;  f1              3   21[BANK1 ] float 
  8980 ;;  f2              3   24[BANK1 ] float 
  8981 ;; Auto vars:     Size  Location     Type
  8982 ;;  f3_as_produc    3   32[BANK1 ] unsigned um
  8983 ;;  sign            1   36[BANK1 ] unsigned char 
  8984 ;;  cntr            1   35[BANK1 ] unsigned char 
  8985 ;;  exp             1   31[BANK1 ] unsigned char 
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  3   21[BANK1 ] float 
  8988 ;; Registers used:
  8989 ;;		wreg, status,2, status,0, pclath, cstack
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8995 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8996 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8997 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8998 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8999 ;;Total ram usage:       16 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; Hardware stack levels required when called:    4
  9002 ;; This function calls:
  9003 ;;		___ftpack
  9004 ;; This function is called by:
  9005 ;;		_Adaptive_base_pid
  9006 ;;		_main
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           
  9011                           ;psect for function ___ftmul
  9012  0714                     ___ftmul:	
  9013                           
  9014                           ;incstack = 0
  9015                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9016  0714  0021               	movlb	1	; select bank1
  9017  0715  0835               	movf	___ftmul@f1^(0+128),w
  9018  0716  00BB               	movwf	??___ftmul^(0+128)
  9019  0717  0836               	movf	(___ftmul@f1+1)^(0+128),w
  9020  0718  00BC               	movwf	(??___ftmul^(0+128)+1)
  9021  0719  0837               	movf	(___ftmul@f1+2)^(0+128),w
  9022  071A  00BD               	movwf	(??___ftmul^(0+128)+2)
  9023  071B  1003               	clrc
  9024  071C  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  9025  071D  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  9026  071E  00BE               	movwf	(??___ftmul+3)^(0+128)
  9027  071F  083E               	movf	(??___ftmul+3)^(0+128),w
  9028  0720  00BF               	movwf	___ftmul@exp^(0+128)
  9029  0721  083F               	movf	___ftmul@exp^(0+128),w
  9030  0722  1D03               	btfss	3,2
  9031  0723  2F2B               	goto	l4056
  9032  0724  3000               	movlw	0
  9033  0725  00B5               	movwf	?___ftmul^(0+128)
  9034  0726  3000               	movlw	0
  9035  0727  00B6               	movwf	(?___ftmul+1)^(0+128)
  9036  0728  3000               	movlw	0
  9037  0729  00B7               	movwf	(?___ftmul+2)^(0+128)
  9038  072A  0008               	return
  9039  072B                     l4056:	
  9040  072B  0838               	movf	___ftmul@f2^(0+128),w
  9041  072C  00BB               	movwf	??___ftmul^(0+128)
  9042  072D  0839               	movf	(___ftmul@f2+1)^(0+128),w
  9043  072E  00BC               	movwf	(??___ftmul^(0+128)+1)
  9044  072F  083A               	movf	(___ftmul@f2+2)^(0+128),w
  9045  0730  00BD               	movwf	(??___ftmul^(0+128)+2)
  9046  0731  1003               	clrc
  9047  0732  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  9048  0733  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  9049  0734  00BE               	movwf	(??___ftmul+3)^(0+128)
  9050  0735  083E               	movf	(??___ftmul+3)^(0+128),w
  9051  0736  00C4               	movwf	___ftmul@sign^(0+128)
  9052  0737  0844               	movf	___ftmul@sign^(0+128),w
  9053  0738  1D03               	btfss	3,2
  9054  0739  2F41               	goto	l4062
  9055  073A  3000               	movlw	0
  9056  073B  00B5               	movwf	?___ftmul^(0+128)
  9057  073C  3000               	movlw	0
  9058  073D  00B6               	movwf	(?___ftmul+1)^(0+128)
  9059  073E  3000               	movlw	0
  9060  073F  00B7               	movwf	(?___ftmul+2)^(0+128)
  9061  0740  0008               	return
  9062  0741                     l4062:	
  9063  0741  0844               	movf	___ftmul@sign^(0+128),w
  9064  0742  3E7B               	addlw	123
  9065  0743  00BB               	movwf	??___ftmul^(0+128)
  9066  0744  083B               	movf	??___ftmul^(0+128),w
  9067  0745  07BF               	addwf	___ftmul@exp^(0+128),f
  9068  0746  0835               	movf	___ftmul@f1^(0+128),w
  9069  0747  00BB               	movwf	??___ftmul^(0+128)
  9070  0748  0836               	movf	(___ftmul@f1+1)^(0+128),w
  9071  0749  00BC               	movwf	(??___ftmul^(0+128)+1)
  9072  074A  0837               	movf	(___ftmul@f1+2)^(0+128),w
  9073  074B  00BD               	movwf	(??___ftmul^(0+128)+2)
  9074  074C  3010               	movlw	16
  9075  074D                     u5335:	
  9076  074D  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  9077  074E  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  9078  074F  0CBB               	rrf	??___ftmul^(0+128),f
  9079  0750  0B89               	decfsz	9,f
  9080  0751  2F4D               	goto	u5335
  9081  0752  083B               	movf	??___ftmul^(0+128),w
  9082  0753  00BE               	movwf	(??___ftmul+3)^(0+128)
  9083  0754  083E               	movf	(??___ftmul+3)^(0+128),w
  9084  0755  00C4               	movwf	___ftmul@sign^(0+128)
  9085  0756  0838               	movf	___ftmul@f2^(0+128),w
  9086  0757  00BB               	movwf	??___ftmul^(0+128)
  9087  0758  0839               	movf	(___ftmul@f2+1)^(0+128),w
  9088  0759  00BC               	movwf	(??___ftmul^(0+128)+1)
  9089  075A  083A               	movf	(___ftmul@f2+2)^(0+128),w
  9090  075B  00BD               	movwf	(??___ftmul^(0+128)+2)
  9091  075C  3010               	movlw	16
  9092  075D                     u5345:	
  9093  075D  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  9094  075E  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  9095  075F  0CBB               	rrf	??___ftmul^(0+128),f
  9096  0760  0B89               	decfsz	9,f
  9097  0761  2F5D               	goto	u5345
  9098  0762  083B               	movf	??___ftmul^(0+128),w
  9099  0763  00BE               	movwf	(??___ftmul+3)^(0+128)
  9100  0764  083E               	movf	(??___ftmul+3)^(0+128),w
  9101  0765  06C4               	xorwf	___ftmul@sign^(0+128),f
  9102  0766  3080               	movlw	128
  9103  0767  00BB               	movwf	??___ftmul^(0+128)
  9104  0768  083B               	movf	??___ftmul^(0+128),w
  9105  0769  05C4               	andwf	___ftmul@sign^(0+128),f
  9106  076A  17B6               	bsf	(___ftmul@f1^(0+128)+1),7
  9107  076B  17B9               	bsf	(___ftmul@f2^(0+128)+1),7
  9108  076C  30FF               	movlw	255
  9109  076D  05B8               	andwf	___ftmul@f2^(0+128),f
  9110  076E  30FF               	movlw	255
  9111  076F  05B9               	andwf	(___ftmul@f2+1)^(0+128),f
  9112  0770  3000               	movlw	0
  9113  0771  05BA               	andwf	(___ftmul@f2+2)^(0+128),f
  9114  0772  3000               	movlw	0
  9115  0773  00C0               	movwf	___ftmul@f3_as_product^(0+128)
  9116  0774  3000               	movlw	0
  9117  0775  00C1               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  9118  0776  3000               	movlw	0
  9119  0777  00C2               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  9120  0778  3007               	movlw	7
  9121  0779  00BB               	movwf	??___ftmul^(0+128)
  9122  077A  083B               	movf	??___ftmul^(0+128),w
  9123  077B  00C3               	movwf	___ftmul@cntr^(0+128)
  9124  077C                     l4074:	
  9125  077C  1C35               	btfss	___ftmul@f1^(0+128),0
  9126  077D  2F84               	goto	l4078
  9127  077E  0838               	movf	___ftmul@f2^(0+128),w
  9128  077F  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  9129  0780  0839               	movf	(___ftmul@f2+1)^(0+128),w
  9130  0781  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  9131  0782  083A               	movf	(___ftmul@f2+2)^(0+128),w
  9132  0783  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  9133  0784                     l4078:	
  9134  0784  3001               	movlw	1
  9135  0785                     u5365:	
  9136  0785  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  9137  0786  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  9138  0787  0CB5               	rrf	___ftmul@f1^(0+128),f
  9139  0788  0B89               	decfsz	9,f
  9140  0789  2F85               	goto	u5365
  9141  078A  3001               	movlw	1
  9142  078B                     u5375:	
  9143  078B  35B8               	lslf	___ftmul@f2^(0+128),f
  9144  078C  0DB9               	rlf	(___ftmul@f2+1)^(0+128),f
  9145  078D  0DBA               	rlf	(___ftmul@f2+2)^(0+128),f
  9146  078E  0B89               	decfsz	9,f
  9147  078F  2F8B               	goto	u5375
  9148  0790  3001               	movlw	1
  9149  0791  02C3               	subwf	___ftmul@cntr^(0+128),f
  9150  0792  1D03               	btfss	3,2
  9151  0793  2F7C               	goto	l4074
  9152  0794  3009               	movlw	9
  9153  0795  00BB               	movwf	??___ftmul^(0+128)
  9154  0796  083B               	movf	??___ftmul^(0+128),w
  9155  0797  00C3               	movwf	___ftmul@cntr^(0+128)
  9156  0798                     l4086:	
  9157  0798  1C35               	btfss	___ftmul@f1^(0+128),0
  9158  0799  2FA0               	goto	l4090
  9159  079A  0838               	movf	___ftmul@f2^(0+128),w
  9160  079B  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  9161  079C  0839               	movf	(___ftmul@f2+1)^(0+128),w
  9162  079D  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  9163  079E  083A               	movf	(___ftmul@f2+2)^(0+128),w
  9164  079F  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  9165  07A0                     l4090:	
  9166  07A0  3001               	movlw	1
  9167  07A1                     u5405:	
  9168  07A1  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  9169  07A2  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  9170  07A3  0CB5               	rrf	___ftmul@f1^(0+128),f
  9171  07A4  0B89               	decfsz	9,f
  9172  07A5  2FA1               	goto	u5405
  9173  07A6  3001               	movlw	1
  9174  07A7                     u5415:	
  9175  07A7  36C2               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  9176  07A8  0CC1               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  9177  07A9  0CC0               	rrf	___ftmul@f3_as_product^(0+128),f
  9178  07AA  0B89               	decfsz	9,f
  9179  07AB  2FA7               	goto	u5415
  9180  07AC  3001               	movlw	1
  9181  07AD  02C3               	subwf	___ftmul@cntr^(0+128),f
  9182  07AE  1D03               	btfss	3,2
  9183  07AF  2F98               	goto	l4086
  9184  07B0  0840               	movf	___ftmul@f3_as_product^(0+128),w
  9185  07B1  00A0               	movwf	___ftpack@arg^(0+128)
  9186  07B2  0841               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  9187  07B3  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9188  07B4  0842               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  9189  07B5  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9190  07B6  083F               	movf	___ftmul@exp^(0+128),w
  9191  07B7  00BB               	movwf	??___ftmul^(0+128)
  9192  07B8  083B               	movf	??___ftmul^(0+128),w
  9193  07B9  00A3               	movwf	___ftpack@exp^(0+128)
  9194  07BA  0844               	movf	___ftmul@sign^(0+128),w
  9195  07BB  00BC               	movwf	(??___ftmul+1)^(0+128)
  9196  07BC  083C               	movf	(??___ftmul+1)^(0+128),w
  9197  07BD  00A4               	movwf	___ftpack@sign^(0+128)
  9198  07BE  319B  23F1         	fcall	___ftpack
  9199  07C0  0021               	movlb	1	; select bank1
  9200  07C1  0820               	movf	?___ftpack^(0+128),w
  9201  07C2  00B5               	movwf	?___ftmul^(0+128)
  9202  07C3  0821               	movf	(?___ftpack+1)^(0+128),w
  9203  07C4  00B6               	movwf	(?___ftmul+1)^(0+128)
  9204  07C5  0822               	movf	(?___ftpack+2)^(0+128),w
  9205  07C6  00B7               	movwf	(?___ftmul+2)^(0+128)
  9206  07C7  0008               	return
  9207  07C8                     __end_of___ftmul:	
  9208                           
  9209                           	psect	text29
  9210  1955                     __ptext29:	
  9211 ;; *************** function ___ftge *****************
  9212 ;; Defined at:
  9213 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;  ff1             3   16[BANK1 ] float 
  9216 ;;  ff2             3   19[BANK1 ] float 
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;		None
  9219 ;; Return value:  Size  Location     Type
  9220 ;;		None               void
  9221 ;; Registers used:
  9222 ;;		wreg, status,2, status,0
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9228 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9230 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9231 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9232 ;;Total ram usage:        9 bytes
  9233 ;; Hardware stack levels used:    1
  9234 ;; Hardware stack levels required when called:    3
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_Adaptive_base_pid
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           
  9243                           ;psect for function ___ftge
  9244  1955                     ___ftge:	
  9245                           
  9246                           ;incstack = 0
  9247                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9248  1955  0021               	movlb	1	; select bank1
  9249  1956  1FB2               	btfss	(___ftge@ff1+2)^(0+128),7
  9250  1957  296C               	goto	l4034
  9251  1958  0930               	comf	___ftge@ff1^(0+128),w
  9252  1959  00B6               	movwf	??___ftge^(0+128)
  9253  195A  0931               	comf	(___ftge@ff1+1)^(0+128),w
  9254  195B  00B7               	movwf	(??___ftge^(0+128)+1)
  9255  195C  0932               	comf	(___ftge@ff1+2)^(0+128),w
  9256  195D  00B8               	movwf	(??___ftge^(0+128)+2)
  9257  195E  0AB6               	incf	??___ftge^(0+128),f
  9258  195F  1903               	skipnz
  9259  1960  0AB7               	incf	(??___ftge^(0+128)+1),f
  9260  1961  1903               	skipnz
  9261  1962  0AB8               	incf	(??___ftge^(0+128)+2),f
  9262  1963  3000               	movlw	0
  9263  1964  0736               	addwf	??___ftge^(0+128),w
  9264  1965  00B0               	movwf	___ftge@ff1^(0+128)
  9265  1966  3000               	movlw	0
  9266  1967  3D37               	addwfc	(??___ftge+1)^(0+128),w
  9267  1968  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  9268  1969  3080               	movlw	128
  9269  196A  3D38               	addwfc	(??___ftge+2)^(0+128),w
  9270  196B  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  9271  196C                     l4034:	
  9272  196C  1FB5               	btfss	(___ftge@ff2+2)^(0+128),7
  9273  196D  2982               	goto	l4038
  9274  196E  0933               	comf	___ftge@ff2^(0+128),w
  9275  196F  00B6               	movwf	??___ftge^(0+128)
  9276  1970  0934               	comf	(___ftge@ff2+1)^(0+128),w
  9277  1971  00B7               	movwf	(??___ftge^(0+128)+1)
  9278  1972  0935               	comf	(___ftge@ff2+2)^(0+128),w
  9279  1973  00B8               	movwf	(??___ftge^(0+128)+2)
  9280  1974  0AB6               	incf	??___ftge^(0+128),f
  9281  1975  1903               	skipnz
  9282  1976  0AB7               	incf	(??___ftge^(0+128)+1),f
  9283  1977  1903               	skipnz
  9284  1978  0AB8               	incf	(??___ftge^(0+128)+2),f
  9285  1979  3000               	movlw	0
  9286  197A  0736               	addwf	??___ftge^(0+128),w
  9287  197B  00B3               	movwf	___ftge@ff2^(0+128)
  9288  197C  3000               	movlw	0
  9289  197D  3D37               	addwfc	(??___ftge+1)^(0+128),w
  9290  197E  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  9291  197F  3080               	movlw	128
  9292  1980  3D38               	addwfc	(??___ftge+2)^(0+128),w
  9293  1981  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  9294  1982                     l4038:	
  9295  1982  3080               	movlw	128
  9296  1983  06B2               	xorwf	(___ftge@ff1+2)^(0+128),f
  9297  1984  3080               	movlw	128
  9298  1985  06B5               	xorwf	(___ftge@ff2+2)^(0+128),f
  9299  1986  0835               	movf	(___ftge@ff2+2)^(0+128),w
  9300  1987  0232               	subwf	(___ftge@ff1+2)^(0+128),w
  9301  1988  1D03               	skipz
  9302  1989  0008               	return
  9303  198A  0834               	movf	(___ftge@ff2+1)^(0+128),w
  9304  198B  0231               	subwf	(___ftge@ff1+1)^(0+128),w
  9305  198C  1D03               	skipz
  9306  198D  0008               	return
  9307  198E  0833               	movf	___ftge@ff2^(0+128),w
  9308  198F  0230               	subwf	___ftge@ff1^(0+128),w
  9309  1990  0008               	return
  9310  1991                     __end_of___ftge:	
  9311                           
  9312                           	psect	text30
  9313  1014                     __ptext30:	
  9314 ;; *************** function ___ftdiv *****************
  9315 ;; Defined at:
  9316 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  f2              3   37[BANK1 ] float 
  9319 ;;  f1              3   40[BANK1 ] float 
  9320 ;; Auto vars:     Size  Location     Type
  9321 ;;  f3              3   48[BANK1 ] float 
  9322 ;;  sign            1   52[BANK1 ] unsigned char 
  9323 ;;  exp             1   51[BANK1 ] unsigned char 
  9324 ;;  cntr            1   47[BANK1 ] unsigned char 
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  3   37[BANK1 ] float 
  9327 ;; Registers used:
  9328 ;;		wreg, status,2, status,0, pclath, cstack
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9334 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9335 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9336 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9337 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9338 ;;Total ram usage:       16 bytes
  9339 ;; Hardware stack levels used:    1
  9340 ;; Hardware stack levels required when called:    4
  9341 ;; This function calls:
  9342 ;;		___ftpack
  9343 ;; This function is called by:
  9344 ;;		_Adaptive_base_pid
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           
  9349                           ;psect for function ___ftdiv
  9350  1014                     ___ftdiv:	
  9351                           
  9352                           ;incstack = 0
  9353                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9354  1014  0021               	movlb	1	; select bank1
  9355  1015  0848               	movf	___ftdiv@f1^(0+128),w
  9356  1016  00CB               	movwf	??___ftdiv^(0+128)
  9357  1017  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  9358  1018  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9359  1019  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  9360  101A  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9361  101B  1003               	clrc
  9362  101C  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  9363  101D  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  9364  101E  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9365  101F  084E               	movf	(??___ftdiv+3)^(0+128),w
  9366  1020  00D3               	movwf	___ftdiv@exp^(0+128)
  9367  1021  0853               	movf	___ftdiv@exp^(0+128),w
  9368  1022  1D03               	btfss	3,2
  9369  1023  282B               	goto	l3994
  9370  1024  3000               	movlw	0
  9371  1025  00C5               	movwf	?___ftdiv^(0+128)
  9372  1026  3000               	movlw	0
  9373  1027  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9374  1028  3000               	movlw	0
  9375  1029  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9376  102A  0008               	return
  9377  102B                     l3994:	
  9378  102B  0845               	movf	___ftdiv@f2^(0+128),w
  9379  102C  00CB               	movwf	??___ftdiv^(0+128)
  9380  102D  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9381  102E  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9382  102F  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9383  1030  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9384  1031  1003               	clrc
  9385  1032  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  9386  1033  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  9387  1034  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9388  1035  084E               	movf	(??___ftdiv+3)^(0+128),w
  9389  1036  00D4               	movwf	___ftdiv@sign^(0+128)
  9390  1037  0854               	movf	___ftdiv@sign^(0+128),w
  9391  1038  1D03               	btfss	3,2
  9392  1039  2841               	goto	l4000
  9393  103A  3000               	movlw	0
  9394  103B  00C5               	movwf	?___ftdiv^(0+128)
  9395  103C  3000               	movlw	0
  9396  103D  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9397  103E  3000               	movlw	0
  9398  103F  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9399  1040  0008               	return
  9400  1041                     l4000:	
  9401  1041  3000               	movlw	0
  9402  1042  00D0               	movwf	___ftdiv@f3^(0+128)
  9403  1043  3000               	movlw	0
  9404  1044  00D1               	movwf	(___ftdiv@f3+1)^(0+128)
  9405  1045  3000               	movlw	0
  9406  1046  00D2               	movwf	(___ftdiv@f3+2)^(0+128)
  9407  1047  3089               	movlw	137
  9408  1048  0754               	addwf	___ftdiv@sign^(0+128),w
  9409  1049  00CB               	movwf	??___ftdiv^(0+128)
  9410  104A  084B               	movf	??___ftdiv^(0+128),w
  9411  104B  02D3               	subwf	___ftdiv@exp^(0+128),f
  9412  104C  0848               	movf	___ftdiv@f1^(0+128),w
  9413  104D  00CB               	movwf	??___ftdiv^(0+128)
  9414  104E  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  9415  104F  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9416  1050  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  9417  1051  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9418  1052  3010               	movlw	16
  9419  1053                     u5225:	
  9420  1053  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  9421  1054  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  9422  1055  0CCB               	rrf	??___ftdiv^(0+128),f
  9423  1056  0B89               	decfsz	9,f
  9424  1057  2853               	goto	u5225
  9425  1058  084B               	movf	??___ftdiv^(0+128),w
  9426  1059  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9427  105A  084E               	movf	(??___ftdiv+3)^(0+128),w
  9428  105B  00D4               	movwf	___ftdiv@sign^(0+128)
  9429  105C  0845               	movf	___ftdiv@f2^(0+128),w
  9430  105D  00CB               	movwf	??___ftdiv^(0+128)
  9431  105E  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9432  105F  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9433  1060  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9434  1061  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9435  1062  3010               	movlw	16
  9436  1063                     u5235:	
  9437  1063  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  9438  1064  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  9439  1065  0CCB               	rrf	??___ftdiv^(0+128),f
  9440  1066  0B89               	decfsz	9,f
  9441  1067  2863               	goto	u5235
  9442  1068  084B               	movf	??___ftdiv^(0+128),w
  9443  1069  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9444  106A  084E               	movf	(??___ftdiv+3)^(0+128),w
  9445  106B  06D4               	xorwf	___ftdiv@sign^(0+128),f
  9446  106C  3080               	movlw	128
  9447  106D  00CB               	movwf	??___ftdiv^(0+128)
  9448  106E  084B               	movf	??___ftdiv^(0+128),w
  9449  106F  05D4               	andwf	___ftdiv@sign^(0+128),f
  9450  1070  17C9               	bsf	(___ftdiv@f1^(0+128)+1),7
  9451  1071  30FF               	movlw	255
  9452  1072  05C8               	andwf	___ftdiv@f1^(0+128),f
  9453  1073  30FF               	movlw	255
  9454  1074  05C9               	andwf	(___ftdiv@f1+1)^(0+128),f
  9455  1075  3000               	movlw	0
  9456  1076  05CA               	andwf	(___ftdiv@f1+2)^(0+128),f
  9457  1077  17C6               	bsf	(___ftdiv@f2^(0+128)+1),7
  9458  1078  30FF               	movlw	255
  9459  1079  05C5               	andwf	___ftdiv@f2^(0+128),f
  9460  107A  30FF               	movlw	255
  9461  107B  05C6               	andwf	(___ftdiv@f2+1)^(0+128),f
  9462  107C  3000               	movlw	0
  9463  107D  05C7               	andwf	(___ftdiv@f2+2)^(0+128),f
  9464  107E  3018               	movlw	24
  9465  107F  00CB               	movwf	??___ftdiv^(0+128)
  9466  1080  084B               	movf	??___ftdiv^(0+128),w
  9467  1081  00CF               	movwf	___ftdiv@cntr^(0+128)
  9468  1082                     l4014:	
  9469  1082  3001               	movlw	1
  9470  1083                     u5245:	
  9471  1083  35D0               	lslf	___ftdiv@f3^(0+128),f
  9472  1084  0DD1               	rlf	(___ftdiv@f3+1)^(0+128),f
  9473  1085  0DD2               	rlf	(___ftdiv@f3+2)^(0+128),f
  9474  1086  0B89               	decfsz	9,f
  9475  1087  2883               	goto	u5245
  9476  1088  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9477  1089  024A               	subwf	(___ftdiv@f1+2)^(0+128),w
  9478  108A  1D03               	skipz
  9479  108B  2892               	goto	u5255
  9480  108C  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9481  108D  0249               	subwf	(___ftdiv@f1+1)^(0+128),w
  9482  108E  1D03               	skipz
  9483  108F  2892               	goto	u5255
  9484  1090  0845               	movf	___ftdiv@f2^(0+128),w
  9485  1091  0248               	subwf	___ftdiv@f1^(0+128),w
  9486  1092                     u5255:	
  9487  1092  1C03               	skipc
  9488  1093  289B               	goto	l4022
  9489  1094  0845               	movf	___ftdiv@f2^(0+128),w
  9490  1095  02C8               	subwf	___ftdiv@f1^(0+128),f
  9491  1096  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9492  1097  3BC9               	subwfb	(___ftdiv@f1+1)^(0+128),f
  9493  1098  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9494  1099  3BCA               	subwfb	(___ftdiv@f1+2)^(0+128),f
  9495  109A  1450               	bsf	___ftdiv@f3^(0+128),0
  9496  109B                     l4022:	
  9497  109B  3001               	movlw	1
  9498  109C                     u5265:	
  9499  109C  35C8               	lslf	___ftdiv@f1^(0+128),f
  9500  109D  0DC9               	rlf	(___ftdiv@f1+1)^(0+128),f
  9501  109E  0DCA               	rlf	(___ftdiv@f1+2)^(0+128),f
  9502  109F  0B89               	decfsz	9,f
  9503  10A0  289C               	goto	u5265
  9504  10A1  3001               	movlw	1
  9505  10A2  02CF               	subwf	___ftdiv@cntr^(0+128),f
  9506  10A3  1D03               	btfss	3,2
  9507  10A4  2882               	goto	l4014
  9508  10A5  0850               	movf	___ftdiv@f3^(0+128),w
  9509  10A6  00A0               	movwf	___ftpack@arg^(0+128)
  9510  10A7  0851               	movf	(___ftdiv@f3+1)^(0+128),w
  9511  10A8  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9512  10A9  0852               	movf	(___ftdiv@f3+2)^(0+128),w
  9513  10AA  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9514  10AB  0853               	movf	___ftdiv@exp^(0+128),w
  9515  10AC  00CB               	movwf	??___ftdiv^(0+128)
  9516  10AD  084B               	movf	??___ftdiv^(0+128),w
  9517  10AE  00A3               	movwf	___ftpack@exp^(0+128)
  9518  10AF  0854               	movf	___ftdiv@sign^(0+128),w
  9519  10B0  00CC               	movwf	(??___ftdiv+1)^(0+128)
  9520  10B1  084C               	movf	(??___ftdiv+1)^(0+128),w
  9521  10B2  00A4               	movwf	___ftpack@sign^(0+128)
  9522  10B3  319B  23F1         	fcall	___ftpack
  9523  10B5  0021               	movlb	1	; select bank1
  9524  10B6  0820               	movf	?___ftpack^(0+128),w
  9525  10B7  00C5               	movwf	?___ftdiv^(0+128)
  9526  10B8  0821               	movf	(?___ftpack+1)^(0+128),w
  9527  10B9  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9528  10BA  0822               	movf	(?___ftpack+2)^(0+128),w
  9529  10BB  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9530  10BC  0008               	return
  9531  10BD                     __end_of___ftdiv:	
  9532                           
  9533                           	psect	text31
  9534  125E                     __ptext31:	
  9535 ;; *************** function ___ftadd *****************
  9536 ;; Defined at:
  9537 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  f1              3    8[BANK1 ] float 
  9540 ;;  f2              3   11[BANK1 ] float 
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;  exp1            1   20[BANK1 ] unsigned char 
  9543 ;;  exp2            1   19[BANK1 ] unsigned char 
  9544 ;;  sign            1   18[BANK1 ] unsigned char 
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  3    8[BANK1 ] float 
  9547 ;; Registers used:
  9548 ;;		wreg, status,2, status,0, pclath, cstack
  9549 ;; Tracked objects:
  9550 ;;		On entry : 0/0
  9551 ;;		On exit  : 0/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9554 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9555 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9556 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9557 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9558 ;;Total ram usage:       13 bytes
  9559 ;; Hardware stack levels used:    1
  9560 ;; Hardware stack levels required when called:    4
  9561 ;; This function calls:
  9562 ;;		___ftpack
  9563 ;; This function is called by:
  9564 ;;		_Adaptive_base_pid
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           
  9569                           ;psect for function ___ftadd
  9570  125E                     ___ftadd:	
  9571                           
  9572                           ;incstack = 0
  9573                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9574  125E  0021               	movlb	1	; select bank1
  9575  125F  0828               	movf	___ftadd@f1^(0+128),w
  9576  1260  00AE               	movwf	??___ftadd^(0+128)
  9577  1261  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9578  1262  00AF               	movwf	(??___ftadd^(0+128)+1)
  9579  1263  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9580  1264  00B0               	movwf	(??___ftadd^(0+128)+2)
  9581  1265  1003               	clrc
  9582  1266  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  9583  1267  0D30               	rlf	(??___ftadd^(0+128)+2),w
  9584  1268  00B1               	movwf	(??___ftadd+3)^(0+128)
  9585  1269  0831               	movf	(??___ftadd+3)^(0+128),w
  9586  126A  00B4               	movwf	___ftadd@exp1^(0+128)
  9587  126B  082B               	movf	___ftadd@f2^(0+128),w
  9588  126C  00AE               	movwf	??___ftadd^(0+128)
  9589  126D  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9590  126E  00AF               	movwf	(??___ftadd^(0+128)+1)
  9591  126F  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9592  1270  00B0               	movwf	(??___ftadd^(0+128)+2)
  9593  1271  1003               	clrc
  9594  1272  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  9595  1273  0D30               	rlf	(??___ftadd^(0+128)+2),w
  9596  1274  00B1               	movwf	(??___ftadd+3)^(0+128)
  9597  1275  0831               	movf	(??___ftadd+3)^(0+128),w
  9598  1276  00B3               	movwf	___ftadd@exp2^(0+128)
  9599  1277  0834               	movf	___ftadd@exp1^(0+128),w
  9600  1278  1903               	btfsc	3,2
  9601  1279  2A86               	goto	l3924
  9602  127A  0833               	movf	___ftadd@exp2^(0+128),w
  9603  127B  0234               	subwf	___ftadd@exp1^(0+128),w
  9604  127C  1803               	skipnc
  9605  127D  2A8D               	goto	l3928
  9606  127E  0334               	decf	___ftadd@exp1^(0+128),w
  9607  127F  3AFF               	xorlw	255
  9608  1280  0733               	addwf	___ftadd@exp2^(0+128),w
  9609  1281  00AE               	movwf	??___ftadd^(0+128)
  9610  1282  3019               	movlw	25
  9611  1283  022E               	subwf	??___ftadd^(0+128),w
  9612  1284  1C03               	skipc
  9613  1285  2A8D               	goto	l3928
  9614  1286                     l3924:	
  9615  1286  082B               	movf	___ftadd@f2^(0+128),w
  9616  1287  00A8               	movwf	?___ftadd^(0+128)
  9617  1288  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9618  1289  00A9               	movwf	(?___ftadd+1)^(0+128)
  9619  128A  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9620  128B  00AA               	movwf	(?___ftadd+2)^(0+128)
  9621  128C  0008               	return
  9622  128D                     l3928:	
  9623  128D  0833               	movf	___ftadd@exp2^(0+128),w
  9624  128E  1903               	btfsc	3,2
  9625  128F  0008               	return
  9626  1290  0834               	movf	___ftadd@exp1^(0+128),w
  9627  1291  0233               	subwf	___ftadd@exp2^(0+128),w
  9628  1292  1803               	skipnc
  9629  1293  2A9C               	goto	l3934
  9630  1294  0333               	decf	___ftadd@exp2^(0+128),w
  9631  1295  3AFF               	xorlw	255
  9632  1296  0734               	addwf	___ftadd@exp1^(0+128),w
  9633  1297  00AE               	movwf	??___ftadd^(0+128)
  9634  1298  3019               	movlw	25
  9635  1299  022E               	subwf	??___ftadd^(0+128),w
  9636  129A  1803               	btfsc	3,0
  9637  129B  0008               	return
  9638  129C                     l3934:	
  9639  129C  3006               	movlw	6
  9640  129D  00AE               	movwf	??___ftadd^(0+128)
  9641  129E  082E               	movf	??___ftadd^(0+128),w
  9642  129F  00B2               	movwf	___ftadd@sign^(0+128)
  9643  12A0  1BAA               	btfsc	(___ftadd@f1+2)^(0+128),7
  9644  12A1  17B2               	bsf	___ftadd@sign^(0+128),7
  9645  12A2  1BAD               	btfsc	(___ftadd@f2+2)^(0+128),7
  9646  12A3  1732               	bsf	___ftadd@sign^(0+128),6
  9647  12A4  17A9               	bsf	(___ftadd@f1^(0+128)+1),7
  9648  12A5  30FF               	movlw	255
  9649  12A6  05A8               	andwf	___ftadd@f1^(0+128),f
  9650  12A7  30FF               	movlw	255
  9651  12A8  05A9               	andwf	(___ftadd@f1+1)^(0+128),f
  9652  12A9  3000               	movlw	0
  9653  12AA  05AA               	andwf	(___ftadd@f1+2)^(0+128),f
  9654  12AB  17AC               	bsf	(___ftadd@f2^(0+128)+1),7
  9655  12AC  30FF               	movlw	255
  9656  12AD  05AB               	andwf	___ftadd@f2^(0+128),f
  9657  12AE  30FF               	movlw	255
  9658  12AF  05AC               	andwf	(___ftadd@f2+1)^(0+128),f
  9659  12B0  3000               	movlw	0
  9660  12B1  05AD               	andwf	(___ftadd@f2+2)^(0+128),f
  9661  12B2  0833               	movf	___ftadd@exp2^(0+128),w
  9662  12B3  0234               	subwf	___ftadd@exp1^(0+128),w
  9663  12B4  1803               	skipnc
  9664  12B5  2AD8               	goto	l3956
  9665  12B6                     l3946:	
  9666  12B6  3001               	movlw	1
  9667  12B7                     u5065:	
  9668  12B7  35AB               	lslf	___ftadd@f2^(0+128),f
  9669  12B8  0DAC               	rlf	(___ftadd@f2+1)^(0+128),f
  9670  12B9  0DAD               	rlf	(___ftadd@f2+2)^(0+128),f
  9671  12BA  0B89               	decfsz	9,f
  9672  12BB  2AB7               	goto	u5065
  9673  12BC  3001               	movlw	1
  9674  12BD  02B3               	subwf	___ftadd@exp2^(0+128),f
  9675  12BE  0833               	movf	___ftadd@exp2^(0+128),w
  9676  12BF  0634               	xorwf	___ftadd@exp1^(0+128),w
  9677  12C0  1903               	skipnz
  9678  12C1  2AD3               	goto	l3954
  9679  12C2  3001               	movlw	1
  9680  12C3  02B2               	subwf	___ftadd@sign^(0+128),f
  9681  12C4  0832               	movf	___ftadd@sign^(0+128),w
  9682  12C5  3907               	andlw	7
  9683  12C6  1903               	btfsc	3,2
  9684  12C7  2AD3               	goto	l3954
  9685  12C8  2AB6               	goto	l3946
  9686  12C9                     l3952:	
  9687  12C9  3001               	movlw	1
  9688  12CA                     u5095:	
  9689  12CA  36AA               	lsrf	(___ftadd@f1+2)^(0+128),f
  9690  12CB  0CA9               	rrf	(___ftadd@f1+1)^(0+128),f
  9691  12CC  0CA8               	rrf	___ftadd@f1^(0+128),f
  9692  12CD  0B89               	decfsz	9,f
  9693  12CE  2ACA               	goto	u5095
  9694  12CF  3001               	movlw	1
  9695  12D0  00AE               	movwf	??___ftadd^(0+128)
  9696  12D1  082E               	movf	??___ftadd^(0+128),w
  9697  12D2  07B4               	addwf	___ftadd@exp1^(0+128),f
  9698  12D3                     l3954:	
  9699  12D3  0834               	movf	___ftadd@exp1^(0+128),w
  9700  12D4  0633               	xorwf	___ftadd@exp2^(0+128),w
  9701  12D5  1903               	btfsc	3,2
  9702  12D6  2AFD               	goto	l1154
  9703  12D7  2AC9               	goto	l3952
  9704  12D8                     l3956:	
  9705  12D8  0834               	movf	___ftadd@exp1^(0+128),w
  9706  12D9  0233               	subwf	___ftadd@exp2^(0+128),w
  9707  12DA  1803               	skipnc
  9708  12DB  2AFD               	goto	l1154
  9709  12DC                     l3958:	
  9710  12DC  3001               	movlw	1
  9711  12DD                     u5125:	
  9712  12DD  35A8               	lslf	___ftadd@f1^(0+128),f
  9713  12DE  0DA9               	rlf	(___ftadd@f1+1)^(0+128),f
  9714  12DF  0DAA               	rlf	(___ftadd@f1+2)^(0+128),f
  9715  12E0  0B89               	decfsz	9,f
  9716  12E1  2ADD               	goto	u5125
  9717  12E2  3001               	movlw	1
  9718  12E3  02B4               	subwf	___ftadd@exp1^(0+128),f
  9719  12E4  0833               	movf	___ftadd@exp2^(0+128),w
  9720  12E5  0634               	xorwf	___ftadd@exp1^(0+128),w
  9721  12E6  1903               	skipnz
  9722  12E7  2AF9               	goto	l3966
  9723  12E8  3001               	movlw	1
  9724  12E9  02B2               	subwf	___ftadd@sign^(0+128),f
  9725  12EA  0832               	movf	___ftadd@sign^(0+128),w
  9726  12EB  3907               	andlw	7
  9727  12EC  1903               	btfsc	3,2
  9728  12ED  2AF9               	goto	l3966
  9729  12EE  2ADC               	goto	l3958
  9730  12EF                     l3964:	
  9731  12EF  3001               	movlw	1
  9732  12F0                     u5155:	
  9733  12F0  36AD               	lsrf	(___ftadd@f2+2)^(0+128),f
  9734  12F1  0CAC               	rrf	(___ftadd@f2+1)^(0+128),f
  9735  12F2  0CAB               	rrf	___ftadd@f2^(0+128),f
  9736  12F3  0B89               	decfsz	9,f
  9737  12F4  2AF0               	goto	u5155
  9738  12F5  3001               	movlw	1
  9739  12F6  00AE               	movwf	??___ftadd^(0+128)
  9740  12F7  082E               	movf	??___ftadd^(0+128),w
  9741  12F8  07B3               	addwf	___ftadd@exp2^(0+128),f
  9742  12F9                     l3966:	
  9743  12F9  0834               	movf	___ftadd@exp1^(0+128),w
  9744  12FA  0633               	xorwf	___ftadd@exp2^(0+128),w
  9745  12FB  1D03               	skipz
  9746  12FC  2AEF               	goto	l3964
  9747  12FD                     l1154:	
  9748  12FD  1FB2               	btfss	___ftadd@sign^(0+128),7
  9749  12FE  2B0F               	goto	l3970
  9750  12FF  30FF               	movlw	255
  9751  1300  06A8               	xorwf	___ftadd@f1^(0+128),f
  9752  1301  30FF               	movlw	255
  9753  1302  06A9               	xorwf	(___ftadd@f1+1)^(0+128),f
  9754  1303  30FF               	movlw	255
  9755  1304  06AA               	xorwf	(___ftadd@f1+2)^(0+128),f
  9756  1305  3001               	movlw	1
  9757  1306  07A8               	addwf	___ftadd@f1^(0+128),f
  9758  1307  3000               	movlw	0
  9759  1308  1803               	skipnc
  9760  1309  3001               	movlw	1
  9761  130A  07A9               	addwf	(___ftadd@f1+1)^(0+128),f
  9762  130B  3000               	movlw	0
  9763  130C  1803               	skipnc
  9764  130D  3001               	movlw	1
  9765  130E  07AA               	addwf	(___ftadd@f1+2)^(0+128),f
  9766  130F                     l3970:	
  9767  130F  1F32               	btfss	___ftadd@sign^(0+128),6
  9768  1310  2B21               	goto	l3974
  9769  1311  30FF               	movlw	255
  9770  1312  06AB               	xorwf	___ftadd@f2^(0+128),f
  9771  1313  30FF               	movlw	255
  9772  1314  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9773  1315  30FF               	movlw	255
  9774  1316  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9775  1317  3001               	movlw	1
  9776  1318  07AB               	addwf	___ftadd@f2^(0+128),f
  9777  1319  3000               	movlw	0
  9778  131A  1803               	skipnc
  9779  131B  3001               	movlw	1
  9780  131C  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9781  131D  3000               	movlw	0
  9782  131E  1803               	skipnc
  9783  131F  3001               	movlw	1
  9784  1320  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9785  1321                     l3974:	
  9786  1321  01B2               	clrf	___ftadd@sign^(0+128)
  9787  1322  0828               	movf	___ftadd@f1^(0+128),w
  9788  1323  07AB               	addwf	___ftadd@f2^(0+128),f
  9789  1324  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9790  1325  3DAC               	addwfc	(___ftadd@f2+1)^(0+128),f
  9791  1326  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9792  1327  3DAD               	addwfc	(___ftadd@f2+2)^(0+128),f
  9793  1328  1FAD               	btfss	(___ftadd@f2+2)^(0+128),7
  9794  1329  2B3C               	goto	l3984
  9795  132A  30FF               	movlw	255
  9796  132B  06AB               	xorwf	___ftadd@f2^(0+128),f
  9797  132C  30FF               	movlw	255
  9798  132D  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9799  132E  30FF               	movlw	255
  9800  132F  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9801  1330  3001               	movlw	1
  9802  1331  07AB               	addwf	___ftadd@f2^(0+128),f
  9803  1332  3000               	movlw	0
  9804  1333  1803               	skipnc
  9805  1334  3001               	movlw	1
  9806  1335  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9807  1336  3000               	movlw	0
  9808  1337  1803               	skipnc
  9809  1338  3001               	movlw	1
  9810  1339  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9811  133A  01B2               	clrf	___ftadd@sign^(0+128)
  9812  133B  0AB2               	incf	___ftadd@sign^(0+128),f
  9813  133C                     l3984:	
  9814  133C  082B               	movf	___ftadd@f2^(0+128),w
  9815  133D  00A0               	movwf	___ftpack@arg^(0+128)
  9816  133E  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9817  133F  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9818  1340  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9819  1341  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9820  1342  0834               	movf	___ftadd@exp1^(0+128),w
  9821  1343  00AE               	movwf	??___ftadd^(0+128)
  9822  1344  082E               	movf	??___ftadd^(0+128),w
  9823  1345  00A3               	movwf	___ftpack@exp^(0+128)
  9824  1346  0832               	movf	___ftadd@sign^(0+128),w
  9825  1347  00AF               	movwf	(??___ftadd+1)^(0+128)
  9826  1348  082F               	movf	(??___ftadd+1)^(0+128),w
  9827  1349  00A4               	movwf	___ftpack@sign^(0+128)
  9828  134A  319B  23F1         	fcall	___ftpack
  9829  134C  0021               	movlb	1	; select bank1
  9830  134D  0820               	movf	?___ftpack^(0+128),w
  9831  134E  00A8               	movwf	?___ftadd^(0+128)
  9832  134F  0821               	movf	(?___ftpack+1)^(0+128),w
  9833  1350  00A9               	movwf	(?___ftadd+1)^(0+128)
  9834  1351  0822               	movf	(?___ftpack+2)^(0+128),w
  9835  1352  00AA               	movwf	(?___ftadd+2)^(0+128)
  9836  1353  0008               	return
  9837  1354                     __end_of___ftadd:	
  9838                           
  9839                           	psect	text32
  9840  1991                     __ptext32:	
  9841 ;; *************** function ___altoft *****************
  9842 ;; Defined at:
  9843 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;  c               4    8[BANK1 ] long 
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;  sign            1   15[BANK1 ] unsigned char 
  9848 ;;  exp             1   14[BANK1 ] unsigned char 
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  3    8[BANK1 ] float 
  9851 ;; Registers used:
  9852 ;;		wreg, status,2, status,0, pclath, cstack
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9858 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9859 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9860 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9861 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9862 ;;Total ram usage:        8 bytes
  9863 ;; Hardware stack levels used:    1
  9864 ;; Hardware stack levels required when called:    4
  9865 ;; This function calls:
  9866 ;;		___ftpack
  9867 ;; This function is called by:
  9868 ;;		_Adaptive_base_pid
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           
  9873                           ;psect for function ___altoft
  9874  1991                     ___altoft:	
  9875                           
  9876                           ;incstack = 0
  9877                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  9878  1991  0021               	movlb	1	; select bank1
  9879  1992  01AF               	clrf	___altoft@sign^(0+128)
  9880  1993  308E               	movlw	142
  9881  1994  00AC               	movwf	??___altoft^(0+128)
  9882  1995  082C               	movf	??___altoft^(0+128),w
  9883  1996  00AE               	movwf	___altoft@exp^(0+128)
  9884  1997  1FAB               	btfss	(___altoft@c+3)^(0+128),7
  9885  1998  29A6               	goto	l3912
  9886  1999  09A8               	comf	___altoft@c^(0+128),f
  9887  199A  09A9               	comf	(___altoft@c+1)^(0+128),f
  9888  199B  09AA               	comf	(___altoft@c+2)^(0+128),f
  9889  199C  09AB               	comf	(___altoft@c+3)^(0+128),f
  9890  199D  0AA8               	incf	___altoft@c^(0+128),f
  9891  199E  1903               	skipnz
  9892  199F  0AA9               	incf	(___altoft@c+1)^(0+128),f
  9893  19A0  1903               	skipnz
  9894  19A1  0AAA               	incf	(___altoft@c+2)^(0+128),f
  9895  19A2  1903               	skipnz
  9896  19A3  0AAB               	incf	(___altoft@c+3)^(0+128),f
  9897  19A4  01AF               	clrf	___altoft@sign^(0+128)
  9898  19A5  0AAF               	incf	___altoft@sign^(0+128),f
  9899  19A6                     l3912:	
  9900  19A6  30FF               	movlw	255
  9901  19A7  052B               	andwf	(___altoft@c+3)^(0+128),w
  9902  19A8  1903               	btfsc	3,2
  9903  19A9  29B6               	goto	l3914
  9904  19AA  3001               	movlw	1
  9905  19AB                     u4955:	
  9906  19AB  36AB               	lsrf	(___altoft@c+3)^(0+128),f
  9907  19AC  0CAA               	rrf	(___altoft@c+2)^(0+128),f
  9908  19AD  0CA9               	rrf	(___altoft@c+1)^(0+128),f
  9909  19AE  0CA8               	rrf	___altoft@c^(0+128),f
  9910  19AF  0B89               	decfsz	9,f
  9911  19B0  29AB               	goto	u4955
  9912  19B1  3001               	movlw	1
  9913  19B2  00AC               	movwf	??___altoft^(0+128)
  9914  19B3  082C               	movf	??___altoft^(0+128),w
  9915  19B4  07AE               	addwf	___altoft@exp^(0+128),f
  9916  19B5  29A6               	goto	l3912
  9917  19B6                     l3914:	
  9918  19B6  0828               	movf	___altoft@c^(0+128),w
  9919  19B7  00A0               	movwf	___ftpack@arg^(0+128)
  9920  19B8  0829               	movf	(___altoft@c+1)^(0+128),w
  9921  19B9  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9922  19BA  082A               	movf	(___altoft@c+2)^(0+128),w
  9923  19BB  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9924  19BC  082E               	movf	___altoft@exp^(0+128),w
  9925  19BD  00AC               	movwf	??___altoft^(0+128)
  9926  19BE  082C               	movf	??___altoft^(0+128),w
  9927  19BF  00A3               	movwf	___ftpack@exp^(0+128)
  9928  19C0  082F               	movf	___altoft@sign^(0+128),w
  9929  19C1  00AD               	movwf	(??___altoft+1)^(0+128)
  9930  19C2  082D               	movf	(??___altoft+1)^(0+128),w
  9931  19C3  00A4               	movwf	___ftpack@sign^(0+128)
  9932  19C4  319B  23F1         	fcall	___ftpack
  9933  19C6  0021               	movlb	1	; select bank1
  9934  19C7  0820               	movf	?___ftpack^(0+128),w
  9935  19C8  00A8               	movwf	?___altoft^(0+128)
  9936  19C9  0821               	movf	(?___ftpack+1)^(0+128),w
  9937  19CA  00A9               	movwf	(?___altoft+1)^(0+128)
  9938  19CB  0822               	movf	(?___ftpack+2)^(0+128),w
  9939  19CC  00AA               	movwf	(?___altoft+2)^(0+128)
  9940  19CD  0008               	return
  9941  19CE                     __end_of___altoft:	
  9942                           
  9943                           	psect	text33
  9944  1BF1                     __ptext33:	
  9945 ;; *************** function ___ftpack *****************
  9946 ;; Defined at:
  9947 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;  arg             3    0[BANK1 ] unsigned um
  9950 ;;  exp             1    3[BANK1 ] unsigned char 
  9951 ;;  sign            1    4[BANK1 ] unsigned char 
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;		None
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  3    0[BANK1 ] float 
  9956 ;; Registers used:
  9957 ;;		wreg, status,2, status,0
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9963 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9965 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9966 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9967 ;;Total ram usage:        8 bytes
  9968 ;; Hardware stack levels used:    1
  9969 ;; Hardware stack levels required when called:    3
  9970 ;; This function calls:
  9971 ;;		Nothing
  9972 ;; This function is called by:
  9973 ;;		___altoft
  9974 ;;		___ftadd
  9975 ;;		___ftdiv
  9976 ;;		___ftmul
  9977 ;;		___lwtoft
  9978 ;; This function uses a non-reentrant model
  9979 ;;
  9980                           
  9981                           
  9982                           ;psect for function ___ftpack
  9983  1BF1                     ___ftpack:	
  9984                           
  9985                           ;incstack = 0
  9986                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9987  1BF1  0021               	movlb	1	; select bank1
  9988  1BF2  0823               	movf	___ftpack@exp^(0+128),w
  9989  1BF3  1903               	btfsc	3,2
  9990  1BF4  2BFA               	goto	l3698
  9991  1BF5  0822               	movf	(___ftpack@arg+2)^(0+128),w
  9992  1BF6  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  9993  1BF7  0420               	iorwf	___ftpack@arg^(0+128),w
  9994  1BF8  1D03               	skipz
  9995  1BF9  2C0B               	goto	l3704
  9996  1BFA                     l3698:	
  9997  1BFA  3000               	movlw	0
  9998  1BFB  00A0               	movwf	?___ftpack^(0+128)
  9999  1BFC  3000               	movlw	0
 10000  1BFD  00A1               	movwf	(?___ftpack+1)^(0+128)
 10001  1BFE  3000               	movlw	0
 10002  1BFF  00A2               	movwf	(?___ftpack+2)^(0+128)
 10003  1C00  0008               	return
 10004  1C01                     l3702:	
 10005  1C01  3001               	movlw	1
 10006  1C02  00A5               	movwf	??___ftpack^(0+128)
 10007  1C03  0825               	movf	??___ftpack^(0+128),w
 10008  1C04  07A3               	addwf	___ftpack@exp^(0+128),f
 10009  1C05  3001               	movlw	1
 10010  1C06                     u4545:	
 10011  1C06  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
 10012  1C07  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
 10013  1C08  0CA0               	rrf	___ftpack@arg^(0+128),f
 10014  1C09  0B89               	decfsz	9,f
 10015  1C0A  2C06               	goto	u4545
 10016  1C0B                     l3704:	
 10017  1C0B  30FE               	movlw	254
 10018  1C0C  0522               	andwf	(___ftpack@arg+2)^(0+128),w
 10019  1C0D  1903               	btfsc	3,2
 10020  1C0E  2C24               	goto	l1123
 10021  1C0F  2C01               	goto	l3702
 10022  1C10                     l3706:	
 10023  1C10  3001               	movlw	1
 10024  1C11  00A5               	movwf	??___ftpack^(0+128)
 10025  1C12  0825               	movf	??___ftpack^(0+128),w
 10026  1C13  07A3               	addwf	___ftpack@exp^(0+128),f
 10027  1C14  3001               	movlw	1
 10028  1C15  07A0               	addwf	___ftpack@arg^(0+128),f
 10029  1C16  3000               	movlw	0
 10030  1C17  1803               	skipnc
 10031  1C18  3001               	movlw	1
 10032  1C19  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
 10033  1C1A  3000               	movlw	0
 10034  1C1B  1803               	skipnc
 10035  1C1C  3001               	movlw	1
 10036  1C1D  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
 10037  1C1E  3001               	movlw	1
 10038  1C1F                     u4565:	
 10039  1C1F  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
 10040  1C20  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
 10041  1C21  0CA0               	rrf	___ftpack@arg^(0+128),f
 10042  1C22  0B89               	decfsz	9,f
 10043  1C23  2C1F               	goto	u4565
 10044  1C24                     l1123:	
 10045  1C24  30FF               	movlw	255
 10046  1C25  0522               	andwf	(___ftpack@arg+2)^(0+128),w
 10047  1C26  1903               	btfsc	3,2
 10048  1C27  2C35               	goto	l3714
 10049  1C28  2C10               	goto	l3706
 10050  1C29                     l3716:	
 10051  1C29  3002               	movlw	2
 10052  1C2A  0223               	subwf	___ftpack@exp^(0+128),w
 10053  1C2B  1C03               	btfss	3,0
 10054  1C2C  2C37               	goto	l1130
 10055  1C2D  3001               	movlw	1
 10056  1C2E  02A3               	subwf	___ftpack@exp^(0+128),f
 10057  1C2F  3001               	movlw	1
 10058  1C30                     u4585:	
 10059  1C30  35A0               	lslf	___ftpack@arg^(0+128),f
 10060  1C31  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
 10061  1C32  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
 10062  1C33  0B89               	decfsz	9,f
 10063  1C34  2C30               	goto	u4585
 10064  1C35                     l3714:	
 10065  1C35  1FA1               	btfss	(___ftpack@arg+1)^(0+128),7
 10066  1C36  2C29               	goto	l3716
 10067  1C37                     l1130:	
 10068  1C37  1823               	btfsc	___ftpack@exp^(0+128),0
 10069  1C38  2C3F               	goto	l1131
 10070  1C39  30FF               	movlw	255
 10071  1C3A  05A0               	andwf	___ftpack@arg^(0+128),f
 10072  1C3B  307F               	movlw	127
 10073  1C3C  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
 10074  1C3D  30FF               	movlw	255
 10075  1C3E  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
 10076  1C3F                     l1131:	
 10077  1C3F  1003               	clrc
 10078  1C40  0CA3               	rrf	___ftpack@exp^(0+128),f
 10079  1C41  0823               	movf	___ftpack@exp^(0+128),w
 10080  1C42  00A5               	movwf	??___ftpack^(0+128)
 10081  1C43  01A6               	clrf	(??___ftpack^(0+128)+1)
 10082  1C44  01A7               	clrf	(??___ftpack^(0+128)+2)
 10083  1C45  3010               	movlw	16
 10084  1C46                     u4625:	
 10085  1C46  35A5               	lslf	??___ftpack^(0+128),f
 10086  1C47  0DA6               	rlf	(??___ftpack^(0+128)+1),f
 10087  1C48  0DA7               	rlf	(??___ftpack^(0+128)+2),f
 10088  1C49  0B89               	decfsz	9,f
 10089  1C4A  2C46               	goto	u4625
 10090  1C4B  0825               	movf	??___ftpack^(0+128),w
 10091  1C4C  04A0               	iorwf	___ftpack@arg^(0+128),f
 10092  1C4D  0826               	movf	(??___ftpack+1)^(0+128),w
 10093  1C4E  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
 10094  1C4F  0827               	movf	(??___ftpack+2)^(0+128),w
 10095  1C50  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
 10096  1C51  0824               	movf	___ftpack@sign^(0+128),w
 10097  1C52  1903               	btfsc	3,2
 10098  1C53  0008               	return
 10099  1C54  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
 10100  1C55  0008               	return
 10101  1C56                     __end_of___ftpack:	
 10102                           
 10103                           	psect	text34
 10104  1DC7                     __ptext34:	
 10105 ;; *************** function ___aldiv *****************
 10106 ;; Defined at:
 10107 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  divisor         4    0[BANK1 ] long 
 10110 ;;  dividend        4    4[BANK1 ] long 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;  quotient        4   11[BANK1 ] long 
 10113 ;;  sign            1   10[BANK1 ] unsigned char 
 10114 ;;  counter         1    9[BANK1 ] unsigned char 
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  4    0[BANK1 ] long 
 10117 ;; Registers used:
 10118 ;;		wreg, status,2, status,0
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10124 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10125 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10126 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10127 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10128 ;;Total ram usage:       15 bytes
 10129 ;; Hardware stack levels used:    1
 10130 ;; Hardware stack levels required when called:    3
 10131 ;; This function calls:
 10132 ;;		Nothing
 10133 ;; This function is called by:
 10134 ;;		_Adaptive_base_pid
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           
 10139                           ;psect for function ___aldiv
 10140  1DC7                     ___aldiv:	
 10141                           
 10142                           ;incstack = 0
 10143                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10144  1DC7  0021               	movlb	1	; select bank1
 10145  1DC8  01AA               	clrf	___aldiv@sign^(0+128)
 10146  1DC9  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
 10147  1DCA  2DD8               	goto	l1017
 10148  1DCB  09A0               	comf	___aldiv@divisor^(0+128),f
 10149  1DCC  09A1               	comf	(___aldiv@divisor+1)^(0+128),f
 10150  1DCD  09A2               	comf	(___aldiv@divisor+2)^(0+128),f
 10151  1DCE  09A3               	comf	(___aldiv@divisor+3)^(0+128),f
 10152  1DCF  0AA0               	incf	___aldiv@divisor^(0+128),f
 10153  1DD0  1903               	skipnz
 10154  1DD1  0AA1               	incf	(___aldiv@divisor+1)^(0+128),f
 10155  1DD2  1903               	skipnz
 10156  1DD3  0AA2               	incf	(___aldiv@divisor+2)^(0+128),f
 10157  1DD4  1903               	skipnz
 10158  1DD5  0AA3               	incf	(___aldiv@divisor+3)^(0+128),f
 10159  1DD6  01AA               	clrf	___aldiv@sign^(0+128)
 10160  1DD7  0AAA               	incf	___aldiv@sign^(0+128),f
 10161  1DD8                     l1017:	
 10162  1DD8  1FA7               	btfss	(___aldiv@dividend+3)^(0+128),7
 10163  1DD9  2DE9               	goto	l3872
 10164  1DDA  09A4               	comf	___aldiv@dividend^(0+128),f
 10165  1DDB  09A5               	comf	(___aldiv@dividend+1)^(0+128),f
 10166  1DDC  09A6               	comf	(___aldiv@dividend+2)^(0+128),f
 10167  1DDD  09A7               	comf	(___aldiv@dividend+3)^(0+128),f
 10168  1DDE  0AA4               	incf	___aldiv@dividend^(0+128),f
 10169  1DDF  1903               	skipnz
 10170  1DE0  0AA5               	incf	(___aldiv@dividend+1)^(0+128),f
 10171  1DE1  1903               	skipnz
 10172  1DE2  0AA6               	incf	(___aldiv@dividend+2)^(0+128),f
 10173  1DE3  1903               	skipnz
 10174  1DE4  0AA7               	incf	(___aldiv@dividend+3)^(0+128),f
 10175  1DE5  3001               	movlw	1
 10176  1DE6  00A8               	movwf	??___aldiv^(0+128)
 10177  1DE7  0828               	movf	??___aldiv^(0+128),w
 10178  1DE8  06AA               	xorwf	___aldiv@sign^(0+128),f
 10179  1DE9                     l3872:	
 10180  1DE9  3000               	movlw	0
 10181  1DEA  00AE               	movwf	(___aldiv@quotient+3)^(0+128)
 10182  1DEB  3000               	movlw	0
 10183  1DEC  00AD               	movwf	(___aldiv@quotient+2)^(0+128)
 10184  1DED  3000               	movlw	0
 10185  1DEE  00AC               	movwf	(___aldiv@quotient+1)^(0+128)
 10186  1DEF  3000               	movlw	0
 10187  1DF0  00AB               	movwf	___aldiv@quotient^(0+128)
 10188  1DF1  0823               	movf	(___aldiv@divisor+3)^(0+128),w
 10189  1DF2  0422               	iorwf	(___aldiv@divisor+2)^(0+128),w
 10190  1DF3  0421               	iorwf	(___aldiv@divisor+1)^(0+128),w
 10191  1DF4  0420               	iorwf	___aldiv@divisor^(0+128),w
 10192  1DF5  1903               	skipnz
 10193  1DF6  2E32               	goto	l3894
 10194  1DF7  01A9               	clrf	___aldiv@counter^(0+128)
 10195  1DF8  0AA9               	incf	___aldiv@counter^(0+128),f
 10196  1DF9                     l3880:	
 10197  1DF9  1BA3               	btfsc	(___aldiv@divisor+3)^(0+128),7
 10198  1DFA  2E07               	goto	l3882
 10199  1DFB  3001               	movlw	1
 10200  1DFC                     u4875:	
 10201  1DFC  35A0               	lslf	___aldiv@divisor^(0+128),f
 10202  1DFD  0DA1               	rlf	(___aldiv@divisor+1)^(0+128),f
 10203  1DFE  0DA2               	rlf	(___aldiv@divisor+2)^(0+128),f
 10204  1DFF  0DA3               	rlf	(___aldiv@divisor+3)^(0+128),f
 10205  1E00  0B89               	decfsz	9,f
 10206  1E01  2DFC               	goto	u4875
 10207  1E02  3001               	movlw	1
 10208  1E03  00A8               	movwf	??___aldiv^(0+128)
 10209  1E04  0828               	movf	??___aldiv^(0+128),w
 10210  1E05  07A9               	addwf	___aldiv@counter^(0+128),f
 10211  1E06  2DF9               	goto	l3880
 10212  1E07                     l3882:	
 10213  1E07  3001               	movlw	1
 10214  1E08                     u4895:	
 10215  1E08  35AB               	lslf	___aldiv@quotient^(0+128),f
 10216  1E09  0DAC               	rlf	(___aldiv@quotient+1)^(0+128),f
 10217  1E0A  0DAD               	rlf	(___aldiv@quotient+2)^(0+128),f
 10218  1E0B  0DAE               	rlf	(___aldiv@quotient+3)^(0+128),f
 10219  1E0C  0B89               	decfsz	9,f
 10220  1E0D  2E08               	goto	u4895
 10221  1E0E  0823               	movf	(___aldiv@divisor+3)^(0+128),w
 10222  1E0F  0227               	subwf	(___aldiv@dividend+3)^(0+128),w
 10223  1E10  1D03               	skipz
 10224  1E11  2E1C               	goto	u4905
 10225  1E12  0822               	movf	(___aldiv@divisor+2)^(0+128),w
 10226  1E13  0226               	subwf	(___aldiv@dividend+2)^(0+128),w
 10227  1E14  1D03               	skipz
 10228  1E15  2E1C               	goto	u4905
 10229  1E16  0821               	movf	(___aldiv@divisor+1)^(0+128),w
 10230  1E17  0225               	subwf	(___aldiv@dividend+1)^(0+128),w
 10231  1E18  1D03               	skipz
 10232  1E19  2E1C               	goto	u4905
 10233  1E1A  0820               	movf	___aldiv@divisor^(0+128),w
 10234  1E1B  0224               	subwf	___aldiv@dividend^(0+128),w
 10235  1E1C                     u4905:	
 10236  1E1C  1C03               	skipc
 10237  1E1D  2E27               	goto	l3890
 10238  1E1E  0820               	movf	___aldiv@divisor^(0+128),w
 10239  1E1F  02A4               	subwf	___aldiv@dividend^(0+128),f
 10240  1E20  0821               	movf	(___aldiv@divisor+1)^(0+128),w
 10241  1E21  3BA5               	subwfb	(___aldiv@dividend+1)^(0+128),f
 10242  1E22  0822               	movf	(___aldiv@divisor+2)^(0+128),w
 10243  1E23  3BA6               	subwfb	(___aldiv@dividend+2)^(0+128),f
 10244  1E24  0823               	movf	(___aldiv@divisor+3)^(0+128),w
 10245  1E25  3BA7               	subwfb	(___aldiv@dividend+3)^(0+128),f
 10246  1E26  142B               	bsf	___aldiv@quotient^(0+128),0
 10247  1E27                     l3890:	
 10248  1E27  3001               	movlw	1
 10249  1E28                     u4915:	
 10250  1E28  36A3               	lsrf	(___aldiv@divisor+3)^(0+128),f
 10251  1E29  0CA2               	rrf	(___aldiv@divisor+2)^(0+128),f
 10252  1E2A  0CA1               	rrf	(___aldiv@divisor+1)^(0+128),f
 10253  1E2B  0CA0               	rrf	___aldiv@divisor^(0+128),f
 10254  1E2C  0B89               	decfsz	9,f
 10255  1E2D  2E28               	goto	u4915
 10256  1E2E  3001               	movlw	1
 10257  1E2F  02A9               	subwf	___aldiv@counter^(0+128),f
 10258  1E30  1D03               	btfss	3,2
 10259  1E31  2E07               	goto	l3882
 10260  1E32                     l3894:	
 10261  1E32  082A               	movf	___aldiv@sign^(0+128),w
 10262  1E33  1903               	btfsc	3,2
 10263  1E34  2E40               	goto	l3898
 10264  1E35  09AB               	comf	___aldiv@quotient^(0+128),f
 10265  1E36  09AC               	comf	(___aldiv@quotient+1)^(0+128),f
 10266  1E37  09AD               	comf	(___aldiv@quotient+2)^(0+128),f
 10267  1E38  09AE               	comf	(___aldiv@quotient+3)^(0+128),f
 10268  1E39  0AAB               	incf	___aldiv@quotient^(0+128),f
 10269  1E3A  1903               	skipnz
 10270  1E3B  0AAC               	incf	(___aldiv@quotient+1)^(0+128),f
 10271  1E3C  1903               	skipnz
 10272  1E3D  0AAD               	incf	(___aldiv@quotient+2)^(0+128),f
 10273  1E3E  1903               	skipnz
 10274  1E3F  0AAE               	incf	(___aldiv@quotient+3)^(0+128),f
 10275  1E40                     l3898:	
 10276  1E40  082E               	movf	(___aldiv@quotient+3)^(0+128),w
 10277  1E41  00A3               	movwf	(?___aldiv+3)^(0+128)
 10278  1E42  082D               	movf	(___aldiv@quotient+2)^(0+128),w
 10279  1E43  00A2               	movwf	(?___aldiv+2)^(0+128)
 10280  1E44  082C               	movf	(___aldiv@quotient+1)^(0+128),w
 10281  1E45  00A1               	movwf	(?___aldiv+1)^(0+128)
 10282  1E46  082B               	movf	___aldiv@quotient^(0+128),w
 10283  1E47  00A0               	movwf	?___aldiv^(0+128)
 10284  1E48  0008               	return
 10285  1E49                     __end_of___aldiv:	
 10286                           
 10287                           	psect	text35
 10288  1928                     __ptext35:	
 10289 ;; *************** function _Update_PWM *****************
 10290 ;; Defined at:
 10291 ;;		line 1247 in file "main.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;  setwsduty       2   51[BANK1 ] unsigned int 
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;  Dutycnt         2   57[BANK1 ] unsigned int 
 10296 ;;  Temp1           2   55[BANK1 ] unsigned int 
 10297 ;; Return value:  Size  Location     Type
 10298 ;;		None               void
 10299 ;; Registers used:
 10300 ;;		wreg, status,2, status,0
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10306 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10307 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10308 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10309 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10310 ;;Total ram usage:        8 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; Hardware stack levels required when called:    3
 10313 ;; This function calls:
 10314 ;;		Nothing
 10315 ;; This function is called by:
 10316 ;;		_Adaptive_base_pid
 10317 ;;		_main
 10318 ;;		_key_application
 10319 ;;		_detect_display_error
 10320 ;; This function uses a non-reentrant model
 10321 ;;
 10322                           
 10323                           
 10324                           ;psect for function _Update_PWM
 10325  1928                     _Update_PWM:	
 10326                           
 10327                           ;main.c: 1249: unsigned int Temp1=0x00, Dutycnt=0;
 10328                           
 10329                           ;incstack = 0
 10330                           ; Regs used in _Update_PWM: [wreg+status,2+status,0]
 10331  1928  0021               	movlb	1	; select bank1
 10332  1929  01D7               	clrf	Update_PWM@Temp1^(0+128)
 10333  192A  01D8               	clrf	(Update_PWM@Temp1+1)^(0+128)
 10334  192B  01D9               	clrf	Update_PWM@Dutycnt^(0+128)
 10335  192C  01DA               	clrf	(Update_PWM@Dutycnt+1)^(0+128)
 10336                           
 10337                           ;main.c: 1250: Dutycnt=setwsduty;
 10338  192D  0854               	movf	(Update_PWM@setwsduty+1)^(0+128),w
 10339  192E  00DA               	movwf	(Update_PWM@Dutycnt+1)^(0+128)
 10340  192F  0853               	movf	Update_PWM@setwsduty^(0+128),w
 10341  1930  00D9               	movwf	Update_PWM@Dutycnt^(0+128)
 10342                           
 10343                           ;main.c: 1251: CCP1CONbits.DC1B=Dutycnt;
 10344  1931  0859               	movf	Update_PWM@Dutycnt^(0+128),w
 10345  1932  00D5               	movwf	??_Update_PWM^(0+128)
 10346  1933  0ED5               	swapf	??_Update_PWM^(0+128),f
 10347  1934  0025               	movlb	5	; select bank5
 10348  1935  0813               	movf	19,w	;volatile
 10349  1936  0021               	movlb	1	; select bank1
 10350  1937  0655               	xorwf	??_Update_PWM^(0+128),w
 10351  1938  39CF               	andlw	-49
 10352  1939  0655               	xorwf	??_Update_PWM^(0+128),w
 10353  193A  0025               	movlb	5	; select bank5
 10354  193B  0093               	movwf	19	;volatile
 10355                           
 10356                           ;main.c: 1252: Temp1=Dutycnt >> 2;
 10357  193C  0021               	movlb	1	; select bank1
 10358  193D  085A               	movf	(Update_PWM@Dutycnt+1)^(0+128),w
 10359  193E  00D6               	movwf	(??_Update_PWM^(0+128)+1)
 10360  193F  0859               	movf	Update_PWM@Dutycnt^(0+128),w
 10361  1940  00D5               	movwf	??_Update_PWM^(0+128)
 10362  1941  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
 10363  1942  0CD5               	rrf	??_Update_PWM^(0+128),f
 10364  1943  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
 10365  1944  0CD5               	rrf	??_Update_PWM^(0+128),f
 10366  1945  0855               	movf	??_Update_PWM^(0+128),w
 10367  1946  00D7               	movwf	Update_PWM@Temp1^(0+128)
 10368  1947  0856               	movf	(??_Update_PWM+1)^(0+128),w
 10369  1948  00D8               	movwf	(Update_PWM@Temp1+1)^(0+128)
 10370                           
 10371                           ;main.c: 1253: CCPR1L=Temp1;
 10372  1949  0857               	movf	Update_PWM@Temp1^(0+128),w
 10373  194A  0025               	movlb	5	; select bank5
 10374  194B  0091               	movwf	17	;volatile
 10375                           
 10376                           ;main.c: 1254: iTest = Temp1;
 10377  194C  0021               	movlb	1	; select bank1
 10378  194D  0858               	movf	(Update_PWM@Temp1+1)^(0+128),w
 10379  194E  0024               	movlb	4	; select bank4
 10380  194F  00C5               	movwf	(_iTest+1)^(0+512)
 10381  1950  0021               	movlb	1	; select bank1
 10382  1951  0857               	movf	Update_PWM@Temp1^(0+128),w
 10383  1952  0024               	movlb	4	; select bank4
 10384  1953  00C4               	movwf	_iTest^(0+512)
 10385  1954  0008               	return
 10386  1955                     __end_of_Update_PWM:	
 10387                           
 10388                           	psect	intentry
 10389  0004                     __pintentry:	
 10390 ;; *************** function _ISR_Function *****************
 10391 ;; Defined at:
 10392 ;;		line 42 in file "main.c"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;		None
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;		None
 10397 ;; Return value:  Size  Location     Type
 10398 ;;		None               void
 10399 ;; Registers used:
 10400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10401 ;; Tracked objects:
 10402 ;;		On entry : 0/0
 10403 ;;		On exit  : 0/0
 10404 ;;		Unchanged: 0/0
 10405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10407 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10408 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10409 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10410 ;;Total ram usage:       11 bytes
 10411 ;; Hardware stack levels used:    1
 10412 ;; Hardware stack levels required when called:    2
 10413 ;; This function calls:
 10414 ;;		_Display
 10415 ;;		i1_Update_PWM
 10416 ;;		i1___aldiv
 10417 ;;		i1___ftadd
 10418 ;;		i1___ftdiv
 10419 ;;		i1___ftmul
 10420 ;;		i1___fttol
 10421 ;;		i1___lwtoft
 10422 ;;		i1___wmul
 10423 ;; This function is called by:
 10424 ;;		Interrupt level 1
 10425 ;; This function uses a non-reentrant model
 10426 ;;
 10427                           
 10428  0004                     _ISR_Function:	
 10429                           
 10430                           ;incstack = 0
 10431                           ; Regs used in _ISR_Function: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10432  0004  3180               	pagesel	$
 10433  0005  0020               	movlb	0	; select bank0
 10434  0006  087F               	movf	127,w
 10435  0007  00D3               	movwf	??_ISR_Function+8
 10436                           
 10437                           ;main.c: 44: if(INTCONbits.TMR0IF==1)
 10438  0008  1D0B               	btfss	11,2	;volatile
 10439  0009  2940               	goto	i1l5236
 10440                           
 10441                           ;main.c: 45: {
 10442                           ;main.c: 46: INTCONbits.TMR0IF=0;
 10443  000A  110B               	bcf	11,2	;volatile
 10444                           
 10445                           ;main.c: 47: TMR0=0x00;
 10446  000B  0195               	clrf	21	;volatile
 10447                           
 10448                           ;main.c: 48: updatedispf=0;
 10449  000C  0023               	movlb	3	; select bank3
 10450  000D  01D7               	clrf	_updatedispf^(0+384)	;volatile
 10451                           
 10452                           ;main.c: 49: Display();
 10453  000E  3185  25D1  3180   	fcall	_Display
 10454                           
 10455                           ;main.c: 50: count_1ms++;
 10456  0011  3001               	movlw	1
 10457  0012  0023               	movlb	3	; select bank3
 10458  0013  07B2               	addwf	_count_1ms^(0+384),f	;volatile
 10459  0014  3000               	movlw	0
 10460  0015  3DB3               	addwfc	(_count_1ms+1)^(0+384),f	;volatile
 10461                           
 10462                           ;main.c: 51: count_2ms++;
 10463  0016  3001               	movlw	1
 10464  0017  0020               	movlb	0	; select bank0
 10465  0018  00CB               	movwf	??_ISR_Function
 10466  0019  084B               	movf	??_ISR_Function,w
 10467  001A  0022               	movlb	2	; select bank2
 10468  001B  07C0               	addwf	_count_2ms^(0+256),f	;volatile
 10469                           
 10470                           ;main.c: 52: count_1msec++;
 10471  001C  3001               	movlw	1
 10472  001D  0020               	movlb	0	; select bank0
 10473  001E  00CB               	movwf	??_ISR_Function
 10474  001F  084B               	movf	??_ISR_Function,w
 10475  0020  0022               	movlb	2	; select bank2
 10476  0021  07BF               	addwf	_count_1msec^(0+256),f
 10477                           
 10478                           ;main.c: 53: count_pid++;
 10479  0022  3001               	movlw	1
 10480  0023  0020               	movlb	0	; select bank0
 10481  0024  00CB               	movwf	??_ISR_Function
 10482  0025  084B               	movf	??_ISR_Function,w
 10483  0026  0023               	movlb	3	; select bank3
 10484  0027  07CE               	addwf	_count_pid^(0+384),f	;volatile
 10485                           
 10486                           ;main.c: 54: count_transms++;
 10487  0028  3001               	movlw	1
 10488  0029  0024               	movlb	4	; select bank4
 10489  002A  07B0               	addwf	_count_transms^(0+512),f	;volatile
 10490  002B  3000               	movlw	0
 10491  002C  3DB1               	addwfc	(_count_transms+1)^(0+512),f	;volatile
 10492                           
 10493                           ;main.c: 56: if(cPowerOnErrSkipfg == 1)
 10494  002D  0022               	movlb	2	; select bank2
 10495  002E  0338               	decf	_cPowerOnErrSkipfg^(0+256),w
 10496  002F  1D03               	btfss	3,2
 10497  0030  2840               	goto	i1l5122
 10498                           
 10499                           ;main.c: 57: {
 10500                           ;main.c: 58: if(iPowerOnErrSkipCnt == 0)
 10501  0031  0024               	movlb	4	; select bank4
 10502  0032  0842               	movf	_iPowerOnErrSkipCnt^(0+512),w
 10503  0033  0443               	iorwf	(_iPowerOnErrSkipCnt+1)^(0+512),w
 10504  0034  1D03               	btfss	3,2
 10505  0035  283C               	goto	i1l5120
 10506                           
 10507                           ;main.c: 59: {
 10508                           ;main.c: 60: cPowerOnErrSkipfg = 0;
 10509  0036  0022               	movlb	2	; select bank2
 10510  0037  01B8               	clrf	_cPowerOnErrSkipfg^(0+256)
 10511                           
 10512                           ;main.c: 61: iPowerOnErrSkipCnt = 0;
 10513  0038  0024               	movlb	4	; select bank4
 10514  0039  01C2               	clrf	_iPowerOnErrSkipCnt^(0+512)
 10515  003A  01C3               	clrf	(_iPowerOnErrSkipCnt+1)^(0+512)
 10516                           
 10517                           ;main.c: 62: }else
 10518  003B  2840               	goto	i1l5122
 10519  003C                     i1l5120:	
 10520                           
 10521                           ;main.c: 63: {
 10522                           ;main.c: 64: iPowerOnErrSkipCnt--;
 10523  003C  3001               	movlw	1
 10524  003D  02C2               	subwf	_iPowerOnErrSkipCnt^(0+512),f
 10525  003E  3000               	movlw	0
 10526  003F  3BC3               	subwfb	(_iPowerOnErrSkipCnt+1)^(0+512),f
 10527  0040                     i1l5122:	
 10528                           
 10529                           ;main.c: 65: }
 10530                           ;main.c: 66: }
 10531                           ;main.c: 68: if(cGasRlyClrfg == 1)
 10532  0040  0022               	movlb	2	; select bank2
 10533  0041  0335               	decf	_cGasRlyClrfg^(0+256),w
 10534  0042  1D03               	btfss	3,2
 10535  0043  2858               	goto	i1l5134
 10536                           
 10537                           ;main.c: 69: {
 10538                           ;main.c: 70: if(iGasDbCnt == 0 )
 10539  0044  0023               	movlb	3	; select bank3
 10540  0045  0838               	movf	_iGasDbCnt^(0+384),w
 10541  0046  0439               	iorwf	(_iGasDbCnt+1)^(0+384),w
 10542  0047  1D03               	btfss	3,2
 10543  0048  2853               	goto	i1l5132
 10544                           
 10545                           ;main.c: 71: {
 10546                           ;main.c: 72: TypeU.TypeS.gason =0;
 10547  0049  0020               	movlb	0	; select bank0
 10548  004A  11E5               	bcf	_TypeU,3
 10549                           
 10550                           ;main.c: 73: PORTCbits.RC3 =0;
 10551  004B  118E               	bcf	14,3	;volatile
 10552                           
 10553                           ;main.c: 74: dispupdatef =1;
 10554  004C  3001               	movlw	1
 10555  004D  00CB               	movwf	??_ISR_Function
 10556  004E  084B               	movf	??_ISR_Function,w
 10557  004F  00EF               	movwf	_dispupdatef	;volatile
 10558                           
 10559                           ;main.c: 75: cGasRlyClrfg = 0;
 10560  0050  0022               	movlb	2	; select bank2
 10561  0051  01B5               	clrf	_cGasRlyClrfg^(0+256)
 10562                           
 10563                           ;main.c: 76: }
 10564  0052  2858               	goto	i1l5134
 10565  0053                     i1l5132:	
 10566                           
 10567                           ;main.c: 77: else
 10568                           ;main.c: 78: {
 10569                           ;main.c: 79: iGasDbCnt--;
 10570  0053  3001               	movlw	1
 10571  0054  0023               	movlb	3	; select bank3
 10572  0055  02B8               	subwf	_iGasDbCnt^(0+384),f
 10573  0056  3000               	movlw	0
 10574  0057  3BB9               	subwfb	(_iGasDbCnt+1)^(0+384),f
 10575  0058                     i1l5134:	
 10576                           
 10577                           ;main.c: 80: }
 10578                           ;main.c: 81: }
 10579                           ;main.c: 83: if((cMtrOverLdfg == 0)&&(cPowerOnErrSkipfg == 0))
 10580  0058  0022               	movlb	2	; select bank2
 10581  0059  0837               	movf	_cMtrOverLdfg^(0+256),w
 10582  005A  1D03               	btfss	3,2
 10583  005B  28A1               	goto	i1l5164
 10584  005C  0838               	movf	_cPowerOnErrSkipfg^(0+256),w
 10585  005D  1D03               	btfss	3,2
 10586  005E  28A1               	goto	i1l5164
 10587                           
 10588                           ;main.c: 84: {
 10589                           ;main.c: 85: if((PORTAbits.RA5 == 0)&&(cMtrOverLdDbfg == 0))
 10590  005F  0020               	movlb	0	; select bank0
 10591  0060  1A8C               	btfsc	12,5	;volatile
 10592  0061  286E               	goto	i1l579
 10593  0062  0022               	movlb	2	; select bank2
 10594  0063  0836               	movf	_cMtrOverLdDbfg^(0+256),w
 10595  0064  1D03               	btfss	3,2
 10596  0065  286E               	goto	i1l579
 10597                           
 10598                           ;main.c: 86: {
 10599                           ;main.c: 87: cMtrOverLdDbfg = 1;
 10600  0066  01B6               	clrf	_cMtrOverLdDbfg^(0+256)
 10601  0067  0AB6               	incf	_cMtrOverLdDbfg^(0+256),f
 10602                           
 10603                           ;main.c: 88: cMtrOverLdDbCnt = 1000;
 10604  0068  30E8               	movlw	232
 10605  0069  0024               	movlb	4	; select bank4
 10606  006A  00AE               	movwf	_cMtrOverLdDbCnt^(0+512)
 10607  006B  3003               	movlw	3
 10608  006C  00AF               	movwf	(_cMtrOverLdDbCnt^(0+512)+1)
 10609                           
 10610                           ;main.c: 89: }
 10611  006D  28A1               	goto	i1l5164
 10612  006E                     i1l579:	
 10613                           
 10614                           ;main.c: 90: else if((PORTAbits.RA5 == 0)&&(cMtrOverLdDbfg == 1))
 10615  006E  0020               	movlb	0	; select bank0
 10616  006F  1A8C               	btfsc	12,5	;volatile
 10617  0070  289C               	goto	i1l581
 10618  0071  0022               	movlb	2	; select bank2
 10619  0072  0336               	decf	_cMtrOverLdDbfg^(0+256),w
 10620  0073  1D03               	btfss	3,2
 10621  0074  289C               	goto	i1l581
 10622                           
 10623                           ;main.c: 91: {
 10624                           ;main.c: 92: cMtrOverLdDbCnt--;
 10625  0075  3001               	movlw	1
 10626  0076  0024               	movlb	4	; select bank4
 10627  0077  02AE               	subwf	_cMtrOverLdDbCnt^(0+512),f
 10628  0078  3000               	movlw	0
 10629  0079  3BAF               	subwfb	(_cMtrOverLdDbCnt+1)^(0+512),f
 10630                           
 10631                           ;main.c: 93: if(cMtrOverLdDbCnt == 0)
 10632  007A  082E               	movf	_cMtrOverLdDbCnt^(0+512),w
 10633  007B  042F               	iorwf	(_cMtrOverLdDbCnt+1)^(0+512),w
 10634  007C  1D03               	btfss	3,2
 10635  007D  28A1               	goto	i1l5164
 10636                           
 10637                           ;main.c: 94: {
 10638                           ;main.c: 95: cMtrOverLdDbfg = 0;
 10639  007E  0022               	movlb	2	; select bank2
 10640  007F  01B6               	clrf	_cMtrOverLdDbfg^(0+256)
 10641                           
 10642                           ;main.c: 96: cMtrOverLdfg = 1;
 10643  0080  01B7               	clrf	_cMtrOverLdfg^(0+256)
 10644  0081  0AB7               	incf	_cMtrOverLdfg^(0+256),f
 10645                           
 10646                           ;main.c: 97: cMtrOverLdDbCnt = 1000;
 10647  0082  30E8               	movlw	232
 10648  0083  0024               	movlb	4	; select bank4
 10649  0084  00AE               	movwf	_cMtrOverLdDbCnt^(0+512)
 10650  0085  3003               	movlw	3
 10651  0086  00AF               	movwf	(_cMtrOverLdDbCnt^(0+512)+1)
 10652                           
 10653                           ;main.c: 98: erroru.errors.motor_over_ld_er5 = 1;
 10654  0087  0022               	movlb	2	; select bank2
 10655  0088  166A               	bsf	_erroru^(0+256),4
 10656                           
 10657                           ;main.c: 99: Update_PWM(setwirespeed*0);
 10658  0089  0020               	movlb	0	; select bank0
 10659  008A  085D               	movf	_setwirespeed+1,w
 10660  008B  00F1               	movwf	i1___wmul@multiplier+1
 10661  008C  085C               	movf	_setwirespeed,w
 10662  008D  00F0               	movwf	i1___wmul@multiplier
 10663  008E  3000               	movlw	0
 10664  008F  00F2               	movwf	i1___wmul@multiplicand
 10665  0090  00F3               	movwf	i1___wmul@multiplicand+1
 10666  0091  3198  20A4  3180   	fcall	i1___wmul
 10667  0094  0871               	movf	?i1___wmul+1,w
 10668  0095  00F7               	movwf	i1Update_PWM@setwsduty+1
 10669  0096  0870               	movf	?i1___wmul,w
 10670  0097  00F6               	movwf	i1Update_PWM@setwsduty
 10671  0098  3198  20DB  3180   	fcall	i1_Update_PWM
 10672                           
 10673                           ;main.c: 100: }
 10674                           ;main.c: 101: }
 10675  009B  28A1               	goto	i1l5164
 10676  009C                     i1l581:	
 10677                           
 10678                           ;main.c: 102: else if(PORTAbits.RA5 == 1)
 10679  009C  0020               	movlb	0	; select bank0
 10680  009D  1E8C               	btfss	12,5	;volatile
 10681  009E  28A1               	goto	i1l5164
 10682                           
 10683                           ;main.c: 103: {
 10684                           ;main.c: 104: cMtrOverLdDbfg = 0;
 10685  009F  0022               	movlb	2	; select bank2
 10686  00A0  01B6               	clrf	_cMtrOverLdDbfg^(0+256)
 10687  00A1                     i1l5164:	
 10688                           
 10689                           ;main.c: 106: }
 10690                           ;main.c: 107: }
 10691                           ;main.c: 123: if(RCSTAbits.FERR==1 || RCSTAbits.OERR==1)
 10692  00A1  0023               	movlb	3	; select bank3
 10693  00A2  191D               	btfsc	29,2	;volatile
 10694  00A3  28A6               	goto	i1l587
 10695  00A4  1C9D               	btfss	29,1	;volatile
 10696  00A5  28AA               	goto	i1l5168
 10697  00A6                     i1l587:	
 10698                           
 10699                           ;main.c: 124: {
 10700                           ;main.c: 125: RCSTAbits.SPEN=0;
 10701  00A6  139D               	bcf	29,7	;volatile
 10702                           
 10703                           ;main.c: 126: RCSTAbits.CREN=0;
 10704  00A7  121D               	bcf	29,4	;volatile
 10705                           
 10706                           ;main.c: 127: RCSTAbits.SPEN=1;
 10707  00A8  179D               	bsf	29,7	;volatile
 10708                           
 10709                           ;main.c: 128: RCSTAbits.CREN=1;
 10710  00A9  161D               	bsf	29,4	;volatile
 10711  00AA                     i1l5168:	
 10712                           
 10713                           ;main.c: 129: }
 10714                           ;main.c: 130: if(count_1ms>=500)
 10715  00AA  3001               	movlw	1
 10716  00AB  0233               	subwf	(_count_1ms+1)^(0+384),w	;volatile
 10717  00AC  30F4               	movlw	244
 10718  00AD  1903               	skipnz
 10719  00AE  0232               	subwf	_count_1ms^(0+384),w	;volatile
 10720  00AF  1C03               	skipc
 10721  00B0  28D9               	goto	i1l5186
 10722                           
 10723                           ;main.c: 131: {
 10724                           ;main.c: 132: count_1ms=0;
 10725  00B1  01B2               	clrf	_count_1ms^(0+384)	;volatile
 10726  00B2  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
 10727                           
 10728                           ;main.c: 133: comm_error_count++;
 10729  00B3  3001               	movlw	1
 10730  00B4  0020               	movlb	0	; select bank0
 10731  00B5  00CB               	movwf	??_ISR_Function
 10732  00B6  084B               	movf	??_ISR_Function,w
 10733  00B7  0022               	movlb	2	; select bank2
 10734  00B8  07BE               	addwf	_comm_error_count^(0+256),f	;volatile
 10735                           
 10736                           ;main.c: 135: if(weldmode=='P' || weldmode=='G')
 10737  00B9  3050               	movlw	80
 10738  00BA  0020               	movlb	0	; select bank0
 10739  00BB  0664               	xorwf	_weldmode,w	;volatile
 10740  00BC  1903               	btfsc	3,2
 10741  00BD  28C2               	goto	i1l5178
 10742  00BE  3047               	movlw	71
 10743  00BF  0664               	xorwf	_weldmode,w	;volatile
 10744  00C0  1D03               	btfss	3,2
 10745  00C1  28D6               	goto	i1l5184
 10746  00C2                     i1l5178:	
 10747                           
 10748                           ;main.c: 136: {
 10749                           ;main.c: 137: if(comm_error_count>3)
 10750  00C2  3004               	movlw	4
 10751  00C3  0022               	movlb	2	; select bank2
 10752  00C4  023E               	subwf	_comm_error_count^(0+256),w	;volatile
 10753  00C5  1C03               	skipc
 10754  00C6  28D4               	goto	i1l5182
 10755                           
 10756                           ;main.c: 138: {
 10757                           ;main.c: 139: error8=1;
 10758  00C7  3001               	movlw	1
 10759  00C8  0020               	movlb	0	; select bank0
 10760  00C9  00CB               	movwf	??_ISR_Function
 10761  00CA  084B               	movf	??_ISR_Function,w
 10762  00CB  0022               	movlb	2	; select bank2
 10763  00CC  00C6               	movwf	_error8^(0+256)	;volatile
 10764                           
 10765                           ;main.c: 140: comm_error_count=4;
 10766  00CD  3004               	movlw	4
 10767  00CE  0020               	movlb	0	; select bank0
 10768  00CF  00CB               	movwf	??_ISR_Function
 10769  00D0  084B               	movf	??_ISR_Function,w
 10770  00D1  0022               	movlb	2	; select bank2
 10771  00D2  00BE               	movwf	_comm_error_count^(0+256)	;volatile
 10772                           
 10773                           ;main.c: 141: }
 10774  00D3  28D9               	goto	i1l5186
 10775  00D4                     i1l5182:	
 10776                           
 10777                           ;main.c: 142: else
 10778                           ;main.c: 143: error8=0;
 10779  00D4  01C6               	clrf	_error8^(0+256)	;volatile
 10780                           
 10781                           ;main.c: 144: }
 10782  00D5  28D9               	goto	i1l5186
 10783  00D6                     i1l5184:	
 10784                           
 10785                           ;main.c: 145: else
 10786                           ;main.c: 146: {
 10787                           ;main.c: 147: error8=0;
 10788  00D6  0022               	movlb	2	; select bank2
 10789  00D7  01C6               	clrf	_error8^(0+256)	;volatile
 10790                           
 10791                           ;main.c: 148: comm_error_count=0;
 10792  00D8  01BE               	clrf	_comm_error_count^(0+256)	;volatile
 10793  00D9                     i1l5186:	
 10794                           
 10795                           ;main.c: 149: }
 10796                           ;main.c: 165: }
 10797                           ;main.c: 166: if(count_2ms >=1)
 10798  00D9  0022               	movlb	2	; select bank2
 10799  00DA  0840               	movf	_count_2ms^(0+256),w	;volatile
 10800  00DB  1903               	btfsc	3,2
 10801  00DC  28E4               	goto	i1l5192
 10802                           
 10803                           ;main.c: 167: {
 10804                           ;main.c: 168: count_2ms=0;
 10805  00DD  01C0               	clrf	_count_2ms^(0+256)	;volatile
 10806                           
 10807                           ;main.c: 169: read_enc1f=1;
 10808  00DE  3001               	movlw	1
 10809  00DF  0020               	movlb	0	; select bank0
 10810  00E0  00CB               	movwf	??_ISR_Function
 10811  00E1  084B               	movf	??_ISR_Function,w
 10812  00E2  0022               	movlb	2	; select bank2
 10813  00E3  00DC               	movwf	_read_enc1f^(0+256)	;volatile
 10814  00E4                     i1l5192:	
 10815                           
 10816                           ;main.c: 170: }
 10817                           ;main.c: 172: if(count_1msec >= 2)
 10818  00E4  3002               	movlw	2
 10819  00E5  023F               	subwf	_count_1msec^(0+256),w
 10820  00E6  1C03               	skipc
 10821  00E7  2940               	goto	i1l5236
 10822                           
 10823                           ;main.c: 173: {
 10824                           ;main.c: 174: count_1msec=0;
 10825  00E8  01BF               	clrf	_count_1msec^(0+256)
 10826                           
 10827                           ;main.c: 175: if(kpressread==0)
 10828  00E9  084A               	movf	_kpressread^(0+256),w
 10829  00EA  1D03               	btfss	3,2
 10830  00EB  28F5               	goto	i1l5202
 10831                           
 10832                           ;main.c: 176: {
 10833                           ;main.c: 177: torchstatus1=PORTCbits.RC5;
 10834  00EC  3000               	movlw	0
 10835  00ED  0020               	movlb	0	; select bank0
 10836  00EE  1A8E               	btfsc	14,5	;volatile
 10837  00EF  3001               	movlw	1
 10838  00F0  0022               	movlb	2	; select bank2
 10839  00F1  00E3               	movwf	_torchstatus1^(0+256)
 10840                           
 10841                           ;main.c: 178: kpressread=1;
 10842  00F2  01CA               	clrf	_kpressread^(0+256)
 10843  00F3  0ACA               	incf	_kpressread^(0+256),f
 10844                           
 10845                           ;main.c: 179: }
 10846  00F4  2940               	goto	i1l5236
 10847  00F5                     i1l5202:	
 10848                           
 10849                           ;main.c: 180: else
 10850                           ;main.c: 181: {
 10851                           ;main.c: 182: kpressread=0;
 10852  00F5  01CA               	clrf	_kpressread^(0+256)
 10853                           
 10854                           ;main.c: 183: torchstatus2=PORTCbits.RC5;
 10855  00F6  3000               	movlw	0
 10856  00F7  0020               	movlb	0	; select bank0
 10857  00F8  1A8E               	btfsc	14,5	;volatile
 10858  00F9  3001               	movlw	1
 10859  00FA  0022               	movlb	2	; select bank2
 10860  00FB  00E4               	movwf	_torchstatus2^(0+256)
 10861                           
 10862                           ;main.c: 184: tans =(torchstatus1 == torchstatus2 ? 1:0);
 10863  00FC  0863               	movf	_torchstatus1^(0+256),w
 10864  00FD  0664               	xorwf	_torchstatus2^(0+256),w
 10865  00FE  1D03               	btfss	3,2
 10866  00FF  2902               	goto	u751_20
 10867  0100  3001               	movlw	1
 10868  0101  2903               	goto	u752_20
 10869  0102                     u751_20:	
 10870  0102  3000               	movlw	0
 10871  0103                     u752_20:	
 10872  0103  0020               	movlb	0	; select bank0
 10873  0104  00CB               	movwf	??_ISR_Function
 10874  0105  084B               	movf	??_ISR_Function,w
 10875  0106  0022               	movlb	2	; select bank2
 10876  0107  00E2               	movwf	_tans^(0+256)
 10877                           
 10878                           ;main.c: 185: if(tans==1)
 10879  0108  0362               	decf	_tans^(0+256),w
 10880  0109  1D03               	btfss	3,2
 10881  010A  2932               	goto	i1l5230
 10882                           
 10883                           ;main.c: 186: {
 10884                           ;main.c: 187: TORCH=(torchstatus2 == 0 ? 'P':'X');
 10885  010B  0864               	movf	_torchstatus2^(0+256),w
 10886  010C  1903               	btfsc	3,2
 10887  010D  2910               	goto	i1l5212
 10888  010E  3058               	movlw	88
 10889  010F  2911               	goto	L22
 10890  0110                     i1l5212:	
 10891  0110  3050               	movlw	80
 10892  0111                     L22:	
 10893  0111  0020               	movlb	0	; select bank0
 10894  0112  00D4               	movwf	_ISR_Function$1209
 10895  0113  3000               	movlw	0
 10896  0114  00D5               	movwf	_ISR_Function$1209+1
 10897  0115  0854               	movf	_ISR_Function$1209,w
 10898  0116  00CB               	movwf	??_ISR_Function
 10899  0117  084B               	movf	??_ISR_Function,w
 10900  0118  00EE               	movwf	_TORCH
 10901                           
 10902                           ;main.c: 188: if(TORCH=='P')
 10903  0119  3050               	movlw	80
 10904  011A  066E               	xorwf	_TORCH,w
 10905  011B  1D03               	btfss	3,2
 10906  011C  292D               	goto	i1l604
 10907                           
 10908                           ;main.c: 189: {
 10909                           ;main.c: 190: wfstatusu.wfstatuss.torchonstatus=1;
 10910  011D  14ED               	bsf	_wfstatusu,1
 10911                           
 10912                           ;main.c: 191: if(cTorchPressfg == 0)
 10913  011E  0022               	movlb	2	; select bank2
 10914  011F  083A               	movf	_cTorchPressfg^(0+256),w
 10915  0120  1D03               	btfss	3,2
 10916  0121  2932               	goto	i1l5230
 10917                           
 10918                           ;main.c: 192: {
 10919                           ;main.c: 193: cPowerOnErrSkipfg = 1;
 10920  0122  01B8               	clrf	_cPowerOnErrSkipfg^(0+256)
 10921  0123  0AB8               	incf	_cPowerOnErrSkipfg^(0+256),f
 10922                           
 10923                           ;main.c: 194: iPowerOnErrSkipCnt = 1000;
 10924  0124  30E8               	movlw	232
 10925  0125  0024               	movlb	4	; select bank4
 10926  0126  00C2               	movwf	_iPowerOnErrSkipCnt^(0+512)
 10927  0127  3003               	movlw	3
 10928  0128  00C3               	movwf	(_iPowerOnErrSkipCnt^(0+512)+1)
 10929                           
 10930                           ;main.c: 195: cTorchPressfg = 1;
 10931  0129  0022               	movlb	2	; select bank2
 10932  012A  01BA               	clrf	_cTorchPressfg^(0+256)
 10933  012B  0ABA               	incf	_cTorchPressfg^(0+256),f
 10934                           
 10935                           ;main.c: 196: }
 10936                           ;main.c: 197: }
 10937  012C  2932               	goto	i1l5230
 10938  012D                     i1l604:	
 10939                           
 10940                           ;main.c: 198: else
 10941                           ;main.c: 199: {
 10942                           ;main.c: 200: wfstatusu.wfstatuss.torchonstatus=0;
 10943  012D  10ED               	bcf	_wfstatusu,1
 10944                           
 10945                           ;main.c: 201: if(cTorchPressfg == 1)
 10946  012E  0022               	movlb	2	; select bank2
 10947  012F  033A               	decf	_cTorchPressfg^(0+256),w
 10948  0130  1903               	btfsc	3,2
 10949                           
 10950                           ;main.c: 202: {
 10951                           ;main.c: 203: cTorchPressfg = 0;
 10952  0131  01BA               	clrf	_cTorchPressfg^(0+256)
 10953  0132                     i1l5230:	
 10954                           
 10955                           ;main.c: 204: }
 10956                           ;main.c: 205: }
 10957                           ;main.c: 206: }
 10958                           ;main.c: 207: if(prevTORCH != TORCH)
 10959  0132  086D               	movf	_prevTORCH^(0+256),w
 10960  0133  0020               	movlb	0	; select bank0
 10961  0134  066E               	xorwf	_TORCH,w
 10962  0135  1903               	skipnz
 10963  0136  293A               	goto	i1l5234
 10964                           
 10965                           ;main.c: 208: {
 10966                           ;main.c: 209: count_1ms=0;
 10967  0137  0023               	movlb	3	; select bank3
 10968  0138  01B2               	clrf	_count_1ms^(0+384)	;volatile
 10969  0139  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
 10970  013A                     i1l5234:	
 10971                           
 10972                           ;main.c: 212: }
 10973                           ;main.c: 213: prevTORCH = TORCH;
 10974  013A  0020               	movlb	0	; select bank0
 10975  013B  086E               	movf	_TORCH,w
 10976  013C  00CB               	movwf	??_ISR_Function
 10977  013D  084B               	movf	??_ISR_Function,w
 10978  013E  0022               	movlb	2	; select bank2
 10979  013F  00ED               	movwf	_prevTORCH^(0+256)
 10980  0140                     i1l5236:	
 10981                           
 10982                           ;main.c: 214: }
 10983                           ;main.c: 215: }
 10984                           ;main.c: 216: }
 10985                           ;main.c: 218: if(PIE1bits.TMR2IE & PIR1bits.TMR2IF)
 10986  0140  0020               	movlb	0	; select bank0
 10987  0141  0C11               	rrf	17,w	;volatile
 10988  0142  3901               	andlw	1
 10989  0143  00CB               	movwf	??_ISR_Function
 10990  0144  0021               	movlb	1	; select bank1
 10991  0145  0C11               	rrf	17,w	;volatile
 10992  0146  3901               	andlw	1
 10993  0147  0020               	movlb	0	; select bank0
 10994  0148  054B               	andwf	??_ISR_Function,w
 10995  0149  1903               	btfsc	3,2
 10996  014A  294D               	goto	i1l5240
 10997                           
 10998                           ;main.c: 219: {
 10999                           ;main.c: 220: PIR1bits.TMR2IF=0;
 11000  014B  1091               	bcf	17,1	;volatile
 11001                           
 11002                           ;main.c: 221: return;
 11003  014C  2D46               	goto	i1l610
 11004  014D                     i1l5240:	
 11005                           
 11006                           ;main.c: 222: }
 11007                           ;main.c: 223: if(PIE1bits.TXIE & PIR1bits.TXIF)
 11008  014D  0E11               	swapf	17,w	;volatile
 11009  014E  3901               	andlw	1
 11010  014F  00CB               	movwf	??_ISR_Function
 11011  0150  0021               	movlb	1	; select bank1
 11012  0151  0E11               	swapf	17,w	;volatile
 11013  0152  3901               	andlw	1
 11014  0153  0020               	movlb	0	; select bank0
 11015  0154  054B               	andwf	??_ISR_Function,w
 11016  0155  1903               	btfsc	3,2
 11017  0156  2959               	goto	i1l5244
 11018                           
 11019                           ;main.c: 224: {
 11020                           ;main.c: 225: PIR1bits.TXIF=0;
 11021  0157  1211               	bcf	17,4	;volatile
 11022                           
 11023                           ;main.c: 226: return;
 11024  0158  2D46               	goto	i1l610
 11025  0159                     i1l5244:	
 11026                           
 11027                           ;main.c: 227: }
 11028                           ;main.c: 229: if(PIE2bits.CCP2IE & PIR2bits.CCP2IF)
 11029  0159  0812               	movf	18,w	;volatile
 11030  015A  3901               	andlw	1
 11031  015B  00CB               	movwf	??_ISR_Function
 11032  015C  0021               	movlb	1	; select bank1
 11033  015D  0812               	movf	18,w	;volatile
 11034  015E  3901               	andlw	1
 11035  015F  0020               	movlb	0	; select bank0
 11036  0160  054B               	andwf	??_ISR_Function,w
 11037  0161  1903               	btfsc	3,2
 11038  0162  2B3C               	goto	i1l5324
 11039                           
 11040                           ;main.c: 230: {
 11041                           ;main.c: 231: PIR2bits.CCP2IF =0;
 11042  0163  1012               	bcf	18,0	;volatile
 11043                           
 11044                           ;main.c: 232: if(Count == 0)
 11045  0164  0022               	movlb	2	; select bank2
 11046  0165  082E               	movf	_Count^(0+256),w	;volatile
 11047  0166  1D03               	btfss	3,2
 11048  0167  297D               	goto	i1l5252
 11049                           
 11050                           ;main.c: 233: {
 11051                           ;main.c: 234: OneH = CCPR2H;
 11052  0168  0025               	movlb	5	; select bank5
 11053  0169  0819               	movf	25,w	;volatile
 11054  016A  0020               	movlb	0	; select bank0
 11055  016B  00CB               	movwf	??_ISR_Function
 11056  016C  084B               	movf	??_ISR_Function,w
 11057  016D  0022               	movlb	2	; select bank2
 11058  016E  00AF               	movwf	_OneH^(0+256)	;volatile
 11059                           
 11060                           ;main.c: 235: OneL = CCPR2L;
 11061  016F  0025               	movlb	5	; select bank5
 11062  0170  0818               	movf	24,w	;volatile
 11063  0171  0020               	movlb	0	; select bank0
 11064  0172  00CB               	movwf	??_ISR_Function
 11065  0173  084B               	movf	??_ISR_Function,w
 11066  0174  0022               	movlb	2	; select bank2
 11067  0175  00B0               	movwf	_OneL^(0+256)	;volatile
 11068                           
 11069                           ;main.c: 236: Count = 1;
 11070  0176  3001               	movlw	1
 11071  0177  0020               	movlb	0	; select bank0
 11072  0178  00CB               	movwf	??_ISR_Function
 11073  0179  084B               	movf	??_ISR_Function,w
 11074  017A  0022               	movlb	2	; select bank2
 11075  017B  00AE               	movwf	_Count^(0+256)	;volatile
 11076                           
 11077                           ;main.c: 237: }
 11078  017C  2B3C               	goto	i1l5324
 11079  017D                     i1l5252:	
 11080                           
 11081                           ;main.c: 238: else
 11082                           ;main.c: 239: {
 11083                           ;main.c: 240: TwoH = CCPR2H;
 11084  017D  0025               	movlb	5	; select bank5
 11085  017E  0819               	movf	25,w	;volatile
 11086  017F  0020               	movlb	0	; select bank0
 11087  0180  00CB               	movwf	??_ISR_Function
 11088  0181  084B               	movf	??_ISR_Function,w
 11089  0182  0022               	movlb	2	; select bank2
 11090  0183  00B1               	movwf	_TwoH^(0+256)	;volatile
 11091                           
 11092                           ;main.c: 241: TwoL = CCPR2L;
 11093  0184  0025               	movlb	5	; select bank5
 11094  0185  0818               	movf	24,w	;volatile
 11095  0186  0020               	movlb	0	; select bank0
 11096  0187  00CB               	movwf	??_ISR_Function
 11097  0188  084B               	movf	??_ISR_Function,w
 11098  0189  0022               	movlb	2	; select bank2
 11099  018A  00B2               	movwf	_TwoL^(0+256)	;volatile
 11100                           
 11101                           ;main.c: 242: TMR1H = 0x00;
 11102  018B  0020               	movlb	0	; select bank0
 11103  018C  0197               	clrf	23	;volatile
 11104                           
 11105                           ;main.c: 243: TMR1L = 0x00;
 11106  018D  0196               	clrf	22	;volatile
 11107                           
 11108                           ;main.c: 244: Count = 0;
 11109  018E  0022               	movlb	2	; select bank2
 11110  018F  01AE               	clrf	_Count^(0+256)	;volatile
 11111                           
 11112                           ;main.c: 245: Two = TwoH;
 11113  0190  0831               	movf	_TwoH^(0+256),w	;volatile
 11114  0191  0020               	movlb	0	; select bank0
 11115  0192  00CB               	movwf	??_ISR_Function
 11116  0193  01CC               	clrf	??_ISR_Function+1
 11117  0194  084B               	movf	??_ISR_Function,w
 11118  0195  0023               	movlb	3	; select bank3
 11119  0196  00B0               	movwf	_Two^(0+384)	;volatile
 11120  0197  0020               	movlb	0	; select bank0
 11121  0198  084C               	movf	??_ISR_Function+1,w
 11122  0199  0023               	movlb	3	; select bank3
 11123  019A  00B1               	movwf	(_Two+1)^(0+384)	;volatile
 11124                           
 11125                           ;main.c: 246: Two <<= 8;
 11126  019B  3008               	movlw	8
 11127  019C                     u763_25:	
 11128  019C  35B0               	lslf	_Two^(0+384),f	;volatile
 11129  019D  0DB1               	rlf	(_Two+1)^(0+384),f	;volatile
 11130  019E  0B89               	decfsz	9,f
 11131  019F  299C               	goto	u763_25
 11132                           
 11133                           ;main.c: 247: Two |= TwoL;
 11134  01A0  0022               	movlb	2	; select bank2
 11135  01A1  0832               	movf	_TwoL^(0+256),w	;volatile
 11136  01A2  0020               	movlb	0	; select bank0
 11137  01A3  00CB               	movwf	??_ISR_Function
 11138  01A4  01CC               	clrf	??_ISR_Function+1
 11139  01A5  084B               	movf	??_ISR_Function,w
 11140  01A6  0023               	movlb	3	; select bank3
 11141  01A7  04B0               	iorwf	_Two^(0+384),f	;volatile
 11142  01A8  0020               	movlb	0	; select bank0
 11143  01A9  084C               	movf	??_ISR_Function+1,w
 11144  01AA  0023               	movlb	3	; select bank3
 11145  01AB  04B1               	iorwf	(_Two+1)^(0+384),f	;volatile
 11146                           
 11147                           ;main.c: 248: One = OneH;
 11148  01AC  0022               	movlb	2	; select bank2
 11149  01AD  082F               	movf	_OneH^(0+256),w	;volatile
 11150  01AE  0020               	movlb	0	; select bank0
 11151  01AF  00CB               	movwf	??_ISR_Function
 11152  01B0  01CC               	clrf	??_ISR_Function+1
 11153  01B1  084B               	movf	??_ISR_Function,w
 11154  01B2  0023               	movlb	3	; select bank3
 11155  01B3  00AC               	movwf	_One^(0+384)	;volatile
 11156  01B4  0020               	movlb	0	; select bank0
 11157  01B5  084C               	movf	??_ISR_Function+1,w
 11158  01B6  0023               	movlb	3	; select bank3
 11159  01B7  00AD               	movwf	(_One+1)^(0+384)	;volatile
 11160                           
 11161                           ;main.c: 249: One <<= 8;
 11162  01B8  3008               	movlw	8
 11163  01B9                     u764_25:	
 11164  01B9  35AC               	lslf	_One^(0+384),f	;volatile
 11165  01BA  0DAD               	rlf	(_One+1)^(0+384),f	;volatile
 11166  01BB  0B89               	decfsz	9,f
 11167  01BC  29B9               	goto	u764_25
 11168                           
 11169                           ;main.c: 250: One |= OneL;
 11170  01BD  0022               	movlb	2	; select bank2
 11171  01BE  0830               	movf	_OneL^(0+256),w	;volatile
 11172  01BF  0020               	movlb	0	; select bank0
 11173  01C0  00CB               	movwf	??_ISR_Function
 11174  01C1  01CC               	clrf	??_ISR_Function+1
 11175  01C2  084B               	movf	??_ISR_Function,w
 11176  01C3  0023               	movlb	3	; select bank3
 11177  01C4  04AC               	iorwf	_One^(0+384),f	;volatile
 11178  01C5  0020               	movlb	0	; select bank0
 11179  01C6  084C               	movf	??_ISR_Function+1,w
 11180  01C7  0023               	movlb	3	; select bank3
 11181  01C8  04AD               	iorwf	(_One+1)^(0+384),f	;volatile
 11182                           
 11183                           ;main.c: 251: Total_Count = Two - One;
 11184  01C9  092C               	comf	_One^(0+384),w	;volatile
 11185  01CA  0020               	movlb	0	; select bank0
 11186  01CB  00CB               	movwf	??_ISR_Function
 11187  01CC  0023               	movlb	3	; select bank3
 11188  01CD  092D               	comf	(_One+1)^(0+384),w	;volatile
 11189  01CE  0020               	movlb	0	; select bank0
 11190  01CF  00CC               	movwf	??_ISR_Function+1
 11191  01D0  0ACB               	incf	??_ISR_Function,f
 11192  01D1  1903               	skipnz
 11193  01D2  0ACC               	incf	??_ISR_Function+1,f
 11194  01D3  0023               	movlb	3	; select bank3
 11195  01D4  0830               	movf	_Two^(0+384),w	;volatile
 11196  01D5  0020               	movlb	0	; select bank0
 11197  01D6  074B               	addwf	??_ISR_Function,w
 11198  01D7  0023               	movlb	3	; select bank3
 11199  01D8  00AE               	movwf	_Total_Count^(0+384)	;volatile
 11200  01D9  0831               	movf	(_Two+1)^(0+384),w	;volatile
 11201  01DA  0020               	movlb	0	; select bank0
 11202  01DB  3D4C               	addwfc	??_ISR_Function+1,w
 11203  01DC  0023               	movlb	3	; select bank3
 11204  01DD  00AF               	movwf	(_Total_Count+1)^(0+384)	;volatile
 11205                           
 11206                           ;main.c: 253: pperiod=Total_Count;
 11207  01DE  082F               	movf	(_Total_Count+1)^(0+384),w	;volatile
 11208  01DF  00BF               	movwf	(_pperiod+1)^(0+384)	;volatile
 11209  01E0  082E               	movf	_Total_Count^(0+384),w	;volatile
 11210  01E1  00BE               	movwf	_pperiod^(0+384)	;volatile
 11211                           
 11212                           ;main.c: 254: Total_Period=Total_Period+pperiod;
 11213  01E2  0024               	movlb	4	; select bank4
 11214  01E3  0820               	movf	_Total_Period^(0+512),w
 11215  01E4  0020               	movlb	0	; select bank0
 11216  01E5  00CB               	movwf	??_ISR_Function
 11217  01E6  0024               	movlb	4	; select bank4
 11218  01E7  0821               	movf	(_Total_Period+1)^(0+512),w
 11219  01E8  0020               	movlb	0	; select bank0
 11220  01E9  00CC               	movwf	??_ISR_Function+1
 11221  01EA  0024               	movlb	4	; select bank4
 11222  01EB  0822               	movf	(_Total_Period+2)^(0+512),w
 11223  01EC  0020               	movlb	0	; select bank0
 11224  01ED  00CD               	movwf	??_ISR_Function+2
 11225  01EE  0024               	movlb	4	; select bank4
 11226  01EF  0823               	movf	(_Total_Period+3)^(0+512),w
 11227  01F0  0020               	movlb	0	; select bank0
 11228  01F1  00CE               	movwf	??_ISR_Function+3
 11229  01F2  0023               	movlb	3	; select bank3
 11230  01F3  083E               	movf	_pperiod^(0+384),w	;volatile
 11231  01F4  0020               	movlb	0	; select bank0
 11232  01F5  00CF               	movwf	??_ISR_Function+4
 11233  01F6  0023               	movlb	3	; select bank3
 11234  01F7  083F               	movf	(_pperiod+1)^(0+384),w	;volatile
 11235  01F8  0020               	movlb	0	; select bank0
 11236  01F9  00D0               	movwf	??_ISR_Function+5
 11237  01FA  01D1               	clrf	??_ISR_Function+6
 11238  01FB  01D2               	clrf	??_ISR_Function+7
 11239  01FC  084F               	movf	??_ISR_Function+4,w
 11240  01FD  07CB               	addwf	??_ISR_Function,f
 11241  01FE  0850               	movf	??_ISR_Function+5,w
 11242  01FF  3DCC               	addwfc	??_ISR_Function+1,f
 11243  0200  0851               	movf	??_ISR_Function+6,w
 11244  0201  3DCD               	addwfc	??_ISR_Function+2,f
 11245  0202  0852               	movf	??_ISR_Function+7,w
 11246  0203  3DCE               	addwfc	??_ISR_Function+3,f
 11247  0204  084E               	movf	??_ISR_Function+3,w
 11248  0205  0024               	movlb	4	; select bank4
 11249  0206  00A3               	movwf	(_Total_Period+3)^(0+512)
 11250  0207  0020               	movlb	0	; select bank0
 11251  0208  084D               	movf	??_ISR_Function+2,w
 11252  0209  0024               	movlb	4	; select bank4
 11253  020A  00A2               	movwf	(_Total_Period+2)^(0+512)
 11254  020B  0020               	movlb	0	; select bank0
 11255  020C  084C               	movf	??_ISR_Function+1,w
 11256  020D  0024               	movlb	4	; select bank4
 11257  020E  00A1               	movwf	(_Total_Period+1)^(0+512)
 11258  020F  0020               	movlb	0	; select bank0
 11259  0210  084B               	movf	??_ISR_Function,w
 11260  0211  0024               	movlb	4	; select bank4
 11261  0212  00A0               	movwf	_Total_Period^(0+512)
 11262                           
 11263                           ;main.c: 255: pcount++;
 11264  0213  3001               	movlw	1
 11265  0214  0020               	movlb	0	; select bank0
 11266  0215  00CB               	movwf	??_ISR_Function
 11267  0216  084B               	movf	??_ISR_Function,w
 11268  0217  0022               	movlb	2	; select bank2
 11269  0218  07D4               	addwf	_pcount^(0+256),f
 11270                           
 11271                           ;main.c: 256: if(pcount>=16)
 11272  0219  3010               	movlw	16
 11273  021A  0254               	subwf	_pcount^(0+256),w
 11274  021B  1C03               	skipc
 11275  021C  2B3C               	goto	i1l5324
 11276                           
 11277                           ;main.c: 257: {
 11278                           ;main.c: 258: pcount=0;
 11279  021D  01D4               	clrf	_pcount^(0+256)
 11280                           
 11281                           ;main.c: 259: avgpperiod=Total_Period>>5;
 11282  021E  0024               	movlb	4	; select bank4
 11283  021F  0820               	movf	_Total_Period^(0+512),w
 11284  0220  0020               	movlb	0	; select bank0
 11285  0221  00CB               	movwf	??_ISR_Function
 11286  0222  0024               	movlb	4	; select bank4
 11287  0223  0821               	movf	(_Total_Period+1)^(0+512),w
 11288  0224  0020               	movlb	0	; select bank0
 11289  0225  00CC               	movwf	??_ISR_Function+1
 11290  0226  0024               	movlb	4	; select bank4
 11291  0227  0822               	movf	(_Total_Period+2)^(0+512),w
 11292  0228  0020               	movlb	0	; select bank0
 11293  0229  00CD               	movwf	??_ISR_Function+2
 11294  022A  0024               	movlb	4	; select bank4
 11295  022B  0823               	movf	(_Total_Period+3)^(0+512),w
 11296  022C  0020               	movlb	0	; select bank0
 11297  022D  00CE               	movwf	??_ISR_Function+3
 11298  022E  3005               	movlw	5
 11299  022F                     u766_25:	
 11300  022F  36CE               	lsrf	??_ISR_Function+3,f
 11301  0230  0CCD               	rrf	??_ISR_Function+2,f
 11302  0231  0CCC               	rrf	??_ISR_Function+1,f
 11303  0232  0CCB               	rrf	??_ISR_Function,f
 11304  0233  0B89               	decfsz	9,f
 11305  0234  2A2F               	goto	u766_25
 11306  0235  084C               	movf	??_ISR_Function+1,w
 11307  0236  0022               	movlb	2	; select bank2
 11308  0237  00E9               	movwf	(_avgpperiod+1)^(0+256)	;volatile
 11309  0238  0020               	movlb	0	; select bank0
 11310  0239  084B               	movf	??_ISR_Function,w
 11311  023A  0022               	movlb	2	; select bank2
 11312  023B  00E8               	movwf	_avgpperiod^(0+256)	;volatile
 11313                           
 11314                           ;main.c: 260: pfreq=1000000/avgpperiod;
 11315  023C  0868               	movf	_avgpperiod^(0+256),w	;volatile
 11316  023D  00F0               	movwf	i1___aldiv@divisor
 11317  023E  0869               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 11318  023F  00F1               	movwf	i1___aldiv@divisor+1
 11319  0240  01F2               	clrf	i1___aldiv@divisor+2
 11320  0241  01F3               	clrf	i1___aldiv@divisor+3
 11321  0242  3000               	movlw	0
 11322  0243  00F7               	movwf	i1___aldiv@dividend+3
 11323  0244  300F               	movlw	15
 11324  0245  00F6               	movwf	i1___aldiv@dividend+2
 11325  0246  3042               	movlw	66
 11326  0247  00F5               	movwf	i1___aldiv@dividend+1
 11327  0248  3040               	movlw	64
 11328  0249  00F4               	movwf	i1___aldiv@dividend
 11329  024A  319D  2545  3180   	fcall	i1___aldiv
 11330  024D  0871               	movf	?i1___aldiv+1,w
 11331  024E  0020               	movlb	0	; select bank0
 11332  024F  00EA               	movwf	_pfreq+1	;volatile
 11333  0250  0870               	movf	?i1___aldiv,w
 11334  0251  00E9               	movwf	_pfreq	;volatile
 11335                           
 11336                           ;main.c: 261: Total_Period=0;
 11337  0252  3000               	movlw	0
 11338  0253  0024               	movlb	4	; select bank4
 11339  0254  00A3               	movwf	(_Total_Period+3)^(0+512)
 11340  0255  3000               	movlw	0
 11341  0256  00A2               	movwf	(_Total_Period+2)^(0+512)
 11342  0257  3000               	movlw	0
 11343  0258  00A1               	movwf	(_Total_Period+1)^(0+512)
 11344  0259  3000               	movlw	0
 11345  025A  00A0               	movwf	_Total_Period^(0+512)
 11346                           
 11347                           ;main.c: 263: Tsampling =avgpperiod/1000.0;
 11348  025B  3000               	movlw	0
 11349  025C  0020               	movlb	0	; select bank0
 11350  025D  00A0               	movwf	i1___ftdiv@f2
 11351  025E  307A               	movlw	122
 11352  025F  00A1               	movwf	i1___ftdiv@f2+1
 11353  0260  3044               	movlw	68
 11354  0261  00A2               	movwf	i1___ftdiv@f2+2
 11355  0262  0022               	movlb	2	; select bank2
 11356  0263  0869               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 11357  0264  00F9               	movwf	i1___lwtoft@c+1
 11358  0265  0868               	movf	_avgpperiod^(0+256),w	;volatile
 11359  0266  00F8               	movwf	i1___lwtoft@c
 11360  0267  3198  2022  3180   	fcall	i1___lwtoft
 11361  026A  0878               	movf	?i1___lwtoft,w
 11362  026B  0020               	movlb	0	; select bank0
 11363  026C  00A3               	movwf	i1___ftdiv@f1
 11364  026D  0879               	movf	?i1___lwtoft+1,w
 11365  026E  00A4               	movwf	i1___ftdiv@f1+1
 11366  026F  087A               	movf	?i1___lwtoft+2,w
 11367  0270  00A5               	movwf	i1___ftdiv@f1+2
 11368  0271  319F  2757  3180   	fcall	i1___ftdiv
 11369  0274  0020               	movlb	0	; select bank0
 11370  0275  0820               	movf	?i1___ftdiv,w
 11371  0276  0023               	movlb	3	; select bank3
 11372  0277  00E5               	movwf	_Tsampling^(0+384)
 11373  0278  0020               	movlb	0	; select bank0
 11374  0279  0821               	movf	?i1___ftdiv+1,w
 11375  027A  0023               	movlb	3	; select bank3
 11376  027B  00E6               	movwf	(_Tsampling+1)^(0+384)
 11377  027C  0020               	movlb	0	; select bank0
 11378  027D  0822               	movf	?i1___ftdiv+2,w
 11379  027E  0023               	movlb	3	; select bank3
 11380  027F  00E7               	movwf	(_Tsampling+2)^(0+384)
 11381                           
 11382                           ;main.c: 267: if(pfreq>=999)
 11383  0280  3003               	movlw	3
 11384  0281  0020               	movlb	0	; select bank0
 11385  0282  026A               	subwf	_pfreq+1,w	;volatile
 11386  0283  30E7               	movlw	231
 11387  0284  1903               	skipnz
 11388  0285  0269               	subwf	_pfreq,w	;volatile
 11389  0286  1C03               	skipc
 11390  0287  2A8D               	goto	i1l5296
 11391                           
 11392                           ;main.c: 268: pfreq=999;
 11393  0288  30E7               	movlw	231
 11394  0289  00E9               	movwf	_pfreq	;volatile
 11395  028A  3003               	movlw	3
 11396  028B  00EA               	movwf	_pfreq+1	;volatile
 11397  028C  2A93               	goto	i1l5300
 11398  028D                     i1l5296:	
 11399                           
 11400                           ;main.c: 269: else if(pfreq<=0)
 11401  028D  0869               	movf	_pfreq,w	;volatile
 11402  028E  046A               	iorwf	_pfreq+1,w	;volatile
 11403  028F  1D03               	btfss	3,2
 11404  0290  2A93               	goto	i1l5300
 11405                           
 11406                           ;main.c: 270: pfreq=0;
 11407  0291  01E9               	clrf	_pfreq	;volatile
 11408  0292  01EA               	clrf	_pfreq+1	;volatile
 11409  0293                     i1l5300:	
 11410                           
 11411                           ;main.c: 273: Fltpfreq=(0.2*pfreq)+(0.8)*prevFltpfreq;
 11412  0293  086A               	movf	_pfreq+1,w	;volatile
 11413  0294  00F9               	movwf	i1___lwtoft@c+1
 11414  0295  0869               	movf	_pfreq,w	;volatile
 11415  0296  00F8               	movwf	i1___lwtoft@c
 11416  0297  3198  2022  3180   	fcall	i1___lwtoft
 11417  029A  0878               	movf	?i1___lwtoft,w
 11418  029B  0020               	movlb	0	; select bank0
 11419  029C  00A3               	movwf	i1___ftmul@f2
 11420  029D  0879               	movf	?i1___lwtoft+1,w
 11421  029E  00A4               	movwf	i1___ftmul@f2+1
 11422  029F  087A               	movf	?i1___lwtoft+2,w
 11423  02A0  00A5               	movwf	i1___ftmul@f2+2
 11424  02A1  30CD               	movlw	205
 11425  02A2  00A0               	movwf	i1___ftmul@f1
 11426  02A3  304C               	movlw	76
 11427  02A4  00A1               	movwf	i1___ftmul@f1+1
 11428  02A5  303E               	movlw	62
 11429  02A6  00A2               	movwf	i1___ftmul@f1+2
 11430  02A7  3188  202D  3180   	fcall	i1___ftmul
 11431  02AA  0020               	movlb	0	; select bank0
 11432  02AB  0820               	movf	?i1___ftmul,w
 11433  02AC  00B3               	movwf	i1___ftadd@f2
 11434  02AD  0821               	movf	?i1___ftmul+1,w
 11435  02AE  00B4               	movwf	i1___ftadd@f2+1
 11436  02AF  0822               	movf	?i1___ftmul+2,w
 11437  02B0  00B5               	movwf	i1___ftadd@f2+2
 11438  02B1  0024               	movlb	4	; select bank4
 11439  02B2  084B               	movf	(_prevFltpfreq+1)^(0+512),w
 11440  02B3  00F9               	movwf	i1___lwtoft@c+1
 11441  02B4  084A               	movf	_prevFltpfreq^(0+512),w
 11442  02B5  00F8               	movwf	i1___lwtoft@c
 11443  02B6  3198  2022  3180   	fcall	i1___lwtoft
 11444  02B9  0878               	movf	?i1___lwtoft,w
 11445  02BA  0020               	movlb	0	; select bank0
 11446  02BB  00A3               	movwf	i1___ftmul@f2
 11447  02BC  0879               	movf	?i1___lwtoft+1,w
 11448  02BD  00A4               	movwf	i1___ftmul@f2+1
 11449  02BE  087A               	movf	?i1___lwtoft+2,w
 11450  02BF  00A5               	movwf	i1___ftmul@f2+2
 11451  02C0  30CD               	movlw	205
 11452  02C1  00A0               	movwf	i1___ftmul@f1
 11453  02C2  304C               	movlw	76
 11454  02C3  00A1               	movwf	i1___ftmul@f1+1
 11455  02C4  303F               	movlw	63
 11456  02C5  00A2               	movwf	i1___ftmul@f1+2
 11457  02C6  3188  202D  3180   	fcall	i1___ftmul
 11458  02C9  0020               	movlb	0	; select bank0
 11459  02CA  0820               	movf	?i1___ftmul,w
 11460  02CB  00B0               	movwf	i1___ftadd@f1
 11461  02CC  0821               	movf	?i1___ftmul+1,w
 11462  02CD  00B1               	movwf	i1___ftadd@f1+1
 11463  02CE  0822               	movf	?i1___ftmul+2,w
 11464  02CF  00B2               	movwf	i1___ftadd@f1+2
 11465  02D0  3191  2168  3180   	fcall	i1___ftadd
 11466  02D3  0020               	movlb	0	; select bank0
 11467  02D4  0830               	movf	?i1___ftadd,w
 11468  02D5  00BD               	movwf	i1___fttol@f1
 11469  02D6  0831               	movf	?i1___ftadd+1,w
 11470  02D7  00BE               	movwf	i1___fttol@f1+1
 11471  02D8  0832               	movf	?i1___ftadd+2,w
 11472  02D9  00BF               	movwf	i1___fttol@f1+2
 11473  02DA  319E  2649  3180   	fcall	i1___fttol
 11474  02DD  0020               	movlb	0	; select bank0
 11475  02DE  083E               	movf	?i1___fttol+1,w
 11476  02DF  0022               	movlb	2	; select bank2
 11477  02E0  00A1               	movwf	(_Fltpfreq+1)^(0+256)
 11478  02E1  0020               	movlb	0	; select bank0
 11479  02E2  083D               	movf	?i1___fttol,w
 11480  02E3  0022               	movlb	2	; select bank2
 11481  02E4  00A0               	movwf	_Fltpfreq^(0+256)
 11482                           
 11483                           ;main.c: 275: pstowfstru.pstowfstrs.Hi_data1 = pfreq / 3.4;
 11484  02E5  0020               	movlb	0	; select bank0
 11485  02E6  086A               	movf	_pfreq+1,w	;volatile
 11486  02E7  00F9               	movwf	i1___lwtoft@c+1
 11487  02E8  0869               	movf	_pfreq,w	;volatile
 11488  02E9  00F8               	movwf	i1___lwtoft@c
 11489  02EA  3198  2022  3180   	fcall	i1___lwtoft
 11490  02ED  0878               	movf	?i1___lwtoft,w
 11491  02EE  0020               	movlb	0	; select bank0
 11492  02EF  00A3               	movwf	i1___ftdiv@f1
 11493  02F0  0879               	movf	?i1___lwtoft+1,w
 11494  02F1  00A4               	movwf	i1___ftdiv@f1+1
 11495  02F2  087A               	movf	?i1___lwtoft+2,w
 11496  02F3  00A5               	movwf	i1___ftdiv@f1+2
 11497  02F4  309A               	movlw	154
 11498  02F5  00A0               	movwf	i1___ftdiv@f2
 11499  02F6  3059               	movlw	89
 11500  02F7  00A1               	movwf	i1___ftdiv@f2+1
 11501  02F8  3040               	movlw	64
 11502  02F9  00A2               	movwf	i1___ftdiv@f2+2
 11503  02FA  319F  2757  3180   	fcall	i1___ftdiv
 11504  02FD  0020               	movlb	0	; select bank0
 11505  02FE  0820               	movf	?i1___ftdiv,w
 11506  02FF  00BD               	movwf	i1___fttol@f1
 11507  0300  0821               	movf	?i1___ftdiv+1,w
 11508  0301  00BE               	movwf	i1___fttol@f1+1
 11509  0302  0822               	movf	?i1___ftdiv+2,w
 11510  0303  00BF               	movwf	i1___fttol@f1+2
 11511  0304  319E  2649  3180   	fcall	i1___fttol
 11512  0307  0020               	movlb	0	; select bank0
 11513  0308  083D               	movf	?i1___fttol,w
 11514  0309  00CB               	movwf	??_ISR_Function
 11515  030A  084B               	movf	??_ISR_Function,w
 11516  030B  0024               	movlb	4	; select bank4
 11517  030C  00E3               	movwf	(_pstowfstru^(0+512)+21)
 11518                           
 11519                           ;main.c: 277: if(Fltpfreq>=999)
 11520  030D  3003               	movlw	3
 11521  030E  0022               	movlb	2	; select bank2
 11522  030F  0221               	subwf	(_Fltpfreq+1)^(0+256),w
 11523  0310  30E7               	movlw	231
 11524  0311  1903               	skipnz
 11525  0312  0220               	subwf	_Fltpfreq^(0+256),w
 11526  0313  1C03               	skipc
 11527  0314  2B1A               	goto	i1l5308
 11528                           
 11529                           ;main.c: 278: Fltpfreq=999;
 11530  0315  30E7               	movlw	231
 11531  0316  00A0               	movwf	_Fltpfreq^(0+256)
 11532  0317  3003               	movlw	3
 11533  0318  00A1               	movwf	(_Fltpfreq^(0+256)+1)
 11534  0319  2B20               	goto	i1l5312
 11535  031A                     i1l5308:	
 11536                           
 11537                           ;main.c: 279: else if(Fltpfreq<=0)
 11538  031A  0820               	movf	_Fltpfreq^(0+256),w
 11539  031B  0421               	iorwf	(_Fltpfreq+1)^(0+256),w
 11540  031C  1D03               	btfss	3,2
 11541  031D  2B20               	goto	i1l5312
 11542                           
 11543                           ;main.c: 280: Fltpfreq=0;
 11544  031E  01A0               	clrf	_Fltpfreq^(0+256)
 11545  031F  01A1               	clrf	(_Fltpfreq+1)^(0+256)
 11546  0320                     i1l5312:	
 11547                           
 11548                           ;main.c: 282: prevFltpfreq=Fltpfreq;
 11549  0320  0821               	movf	(_Fltpfreq+1)^(0+256),w
 11550  0321  0024               	movlb	4	; select bank4
 11551  0322  00CB               	movwf	(_prevFltpfreq+1)^(0+512)
 11552  0323  0022               	movlb	2	; select bank2
 11553  0324  0820               	movf	_Fltpfreq^(0+256),w
 11554  0325  0024               	movlb	4	; select bank4
 11555  0326  00CA               	movwf	_prevFltpfreq^(0+512)
 11556                           
 11557                           ;main.c: 283: capintervalf=1;
 11558  0327  3001               	movlw	1
 11559  0328  0020               	movlb	0	; select bank0
 11560  0329  00CB               	movwf	??_ISR_Function
 11561  032A  084B               	movf	??_ISR_Function,w
 11562  032B  0023               	movlb	3	; select bank3
 11563  032C  00CC               	movwf	_capintervalf^(0+384)	;volatile
 11564                           
 11565                           ;main.c: 284: fixintervalf=0;
 11566  032D  01D2               	clrf	_fixintervalf^(0+384)	;volatile
 11567                           
 11568                           ;main.c: 285: count_pid=0;
 11569  032E  01CE               	clrf	_count_pid^(0+384)	;volatile
 11570                           
 11571                           ;main.c: 288: if(cyclestrtf==1 && psstatusu.psstatuss.twinpulseon==0)
 11572  032F  0022               	movlb	2	; select bank2
 11573  0330  0343               	decf	_cyclestrtf^(0+256),w
 11574  0331  1D03               	btfss	3,2
 11575  0332  2B3A               	goto	i1l5322
 11576  0333  0020               	movlb	0	; select bank0
 11577  0334  1B6C               	btfsc	_psstatusu,6
 11578  0335  2B3A               	goto	i1l5322
 11579                           
 11580                           ;main.c: 289: adaptivepidf=1;
 11581  0336  0022               	movlb	2	; select bank2
 11582  0337  01B3               	clrf	_adaptivepidf^(0+256)
 11583  0338  0AB3               	incf	_adaptivepidf^(0+256),f
 11584  0339  2B3C               	goto	i1l5324
 11585  033A                     i1l5322:	
 11586                           
 11587                           ;main.c: 290: else
 11588                           ;main.c: 291: adaptivepidf=0;
 11589  033A  0022               	movlb	2	; select bank2
 11590  033B  01B3               	clrf	_adaptivepidf^(0+256)
 11591  033C                     i1l5324:	
 11592                           
 11593                           ;main.c: 293: }
 11594                           ;main.c: 294: }
 11595                           ;main.c: 295: }
 11596                           ;main.c: 297: if(PIE1bits.RCIE & PIR1bits.RCIF)
 11597  033C  0020               	movlb	0	; select bank0
 11598  033D  0E11               	swapf	17,w	;volatile
 11599  033E  0C89               	rrf	9,f
 11600  033F  3901               	andlw	1
 11601  0340  00CB               	movwf	??_ISR_Function
 11602  0341  0021               	movlb	1	; select bank1
 11603  0342  0E11               	swapf	17,w	;volatile
 11604  0343  0C89               	rrf	9,f
 11605  0344  3901               	andlw	1
 11606  0345  0020               	movlb	0	; select bank0
 11607  0346  054B               	andwf	??_ISR_Function,w
 11608  0347  1903               	btfsc	3,2
 11609  0348  2D46               	goto	i1l610
 11610                           
 11611                           ;main.c: 298: {
 11612                           ;main.c: 299: PIR1bits.RCIF=0;
 11613  0349  1291               	bcf	17,5	;volatile
 11614                           
 11615                           ;main.c: 300: rxdata= RCREG;
 11616  034A  0023               	movlb	3	; select bank3
 11617  034B  0819               	movf	25,w	;volatile
 11618  034C  0020               	movlb	0	; select bank0
 11619  034D  00CB               	movwf	??_ISR_Function
 11620  034E  084B               	movf	??_ISR_Function,w
 11621  034F  00E2               	movwf	_rxdata	;volatile
 11622                           
 11623                           ;main.c: 302: if(RCSTAbits.FERR)
 11624  0350  0023               	movlb	3	; select bank3
 11625  0351  1D1D               	btfss	29,2	;volatile
 11626  0352  2B55               	goto	i1l625
 11627                           
 11628                           ;main.c: 303: {
 11629                           ;main.c: 304: RCSTAbits.SPEN=0;
 11630  0353  139D               	bcf	29,7	;volatile
 11631                           
 11632                           ;main.c: 305: RCSTAbits.SPEN=1;
 11633  0354  179D               	bsf	29,7	;volatile
 11634  0355                     i1l625:	
 11635                           
 11636                           ;main.c: 306: }
 11637                           ;main.c: 307: if(RCSTAbits.OERR)
 11638  0355  1C9D               	btfss	29,1	;volatile
 11639  0356  2B5B               	goto	i1l5336
 11640                           
 11641                           ;main.c: 308: {
 11642                           ;main.c: 309: RCSTAbits.CREN=0;
 11643  0357  121D               	bcf	29,4	;volatile
 11644                           
 11645                           ;main.c: 310: RCSTAbits.CREN=1;
 11646  0358  161D               	bsf	29,4	;volatile
 11647                           
 11648                           ;main.c: 311: RCSTAbits.SPEN=0;
 11649  0359  139D               	bcf	29,7	;volatile
 11650                           
 11651                           ;main.c: 312: RCSTAbits.SPEN=1;
 11652  035A  179D               	bsf	29,7	;volatile
 11653  035B                     i1l5336:	
 11654                           
 11655                           ;main.c: 313: }
 11656                           ;main.c: 315: {
 11657                           ;main.c: 316: if(rxdata=='@' && startptr1==0 && statusptr1==0 )
 11658  035B  3040               	movlw	64
 11659  035C  0020               	movlb	0	; select bank0
 11660  035D  0662               	xorwf	_rxdata,w	;volatile
 11661  035E  1D03               	btfss	3,2
 11662  035F  2B6E               	goto	i1l5346
 11663  0360  0022               	movlb	2	; select bank2
 11664  0361  0861               	movf	_startptr1^(0+256),w
 11665  0362  1D03               	btfss	3,2
 11666  0363  2B6E               	goto	i1l5346
 11667  0364  082C               	movf	_statusptr1^(0+256),w
 11668  0365  042D               	iorwf	(_statusptr1+1)^(0+256),w
 11669  0366  1D03               	btfss	3,2
 11670  0367  2B6E               	goto	i1l5346
 11671                           
 11672                           ;main.c: 317: {
 11673                           ;main.c: 318: startptr1 =1;
 11674  0368  01E1               	clrf	_startptr1^(0+256)
 11675  0369  0AE1               	incf	_startptr1^(0+256),f
 11676                           
 11677                           ;main.c: 319: arrptr =0;
 11678  036A  01B4               	clrf	_arrptr^(0+256)
 11679                           
 11680                           ;main.c: 320: statusptr1 =0;
 11681  036B  01AC               	clrf	_statusptr1^(0+256)
 11682  036C  01AD               	clrf	(_statusptr1+1)^(0+256)
 11683  036D  2D45               	goto	L24
 11684  036E                     i1l5346:	
 11685                           ;main.c: 322: }
 11686                           
 11687                           ;main.c: 321: recchksum =0;
 11688                           
 11689                           
 11690                           ;main.c: 323: else if(rxdata=='#' && startptr1==0 && statusptr1==0)
 11691  036E  3023               	movlw	35
 11692  036F  0020               	movlb	0	; select bank0
 11693  0370  0662               	xorwf	_rxdata,w	;volatile
 11694  0371  1D03               	btfss	3,2
 11695  0372  2B81               	goto	i1l5360
 11696  0373  0022               	movlb	2	; select bank2
 11697  0374  0861               	movf	_startptr1^(0+256),w
 11698  0375  1D03               	btfss	3,2
 11699  0376  2B81               	goto	i1l5360
 11700  0377  082C               	movf	_statusptr1^(0+256),w
 11701  0378  042D               	iorwf	(_statusptr1+1)^(0+256),w
 11702  0379  1D03               	btfss	3,2
 11703  037A  2B81               	goto	i1l5360
 11704                           
 11705                           ;main.c: 324: {
 11706                           ;main.c: 325: startptr1 =0;
 11707  037B  01E1               	clrf	_startptr1^(0+256)
 11708                           
 11709                           ;main.c: 326: statusptr1 =1;
 11710  037C  3001               	movlw	1
 11711  037D  00AC               	movwf	_statusptr1^(0+256)
 11712  037E  3000               	movlw	0
 11713  037F  00AD               	movwf	(_statusptr1^(0+256)+1)
 11714  0380  2D44               	goto	L26
 11715  0381                     i1l5360:	
 11716                           ;main.c: 329: }
 11717                           
 11718                           ;main.c: 328: recchksum =0;
 11719                           
 11720                           ;main.c: 327: arrptr =0;
 11721                           
 11722                           
 11723                           ;main.c: 330: else if(startptr1==0 && statusptr1==1)
 11724  0381  0022               	movlb	2	; select bank2
 11725  0382  0861               	movf	_startptr1^(0+256),w
 11726  0383  1D03               	btfss	3,2
 11727  0384  2BE8               	goto	i1l5404
 11728  0385  032C               	decf	_statusptr1^(0+256),w
 11729  0386  042D               	iorwf	(_statusptr1+1)^(0+256),w
 11730  0387  1D03               	btfss	3,2
 11731  0388  2BE8               	goto	i1l5404
 11732                           
 11733                           ;main.c: 331: {
 11734                           ;main.c: 332: if(recstatus==0)
 11735  0389  0023               	movlb	3	; select bank3
 11736  038A  0846               	movf	_recstatus^(0+384),w
 11737  038B  0447               	iorwf	(_recstatus+1)^(0+384),w
 11738  038C  1D03               	btfss	3,2
 11739  038D  2B9E               	goto	i1l5368
 11740                           
 11741                           ;main.c: 333: {
 11742                           ;main.c: 334: recpsstatus=rxdata;
 11743  038E  0020               	movlb	0	; select bank0
 11744  038F  0862               	movf	_rxdata,w	;volatile
 11745  0390  00CB               	movwf	??_ISR_Function
 11746  0391  01CC               	clrf	??_ISR_Function+1
 11747  0392  084B               	movf	??_ISR_Function,w
 11748  0393  0023               	movlb	3	; select bank3
 11749  0394  00C4               	movwf	_recpsstatus^(0+384)
 11750  0395  0020               	movlb	0	; select bank0
 11751  0396  084C               	movf	??_ISR_Function+1,w
 11752  0397  0023               	movlb	3	; select bank3
 11753  0398  00C5               	movwf	(_recpsstatus+1)^(0+384)
 11754                           
 11755                           ;main.c: 335: recstatus=1;
 11756  0399  3001               	movlw	1
 11757  039A  00C6               	movwf	_recstatus^(0+384)
 11758  039B  3000               	movlw	0
 11759  039C  00C7               	movwf	(_recstatus^(0+384)+1)
 11760                           
 11761                           ;main.c: 336: }
 11762  039D  2D46               	goto	i1l610
 11763  039E                     i1l5368:	
 11764                           
 11765                           ;main.c: 337: else if(recstatus==1)
 11766  039E  0346               	decf	_recstatus^(0+384),w
 11767  039F  0447               	iorwf	(_recstatus+1)^(0+384),w
 11768  03A0  1D03               	btfss	3,2
 11769  03A1  2D46               	goto	i1l610
 11770                           
 11771                           ;main.c: 338: {
 11772                           ;main.c: 339: if(rxdata==recpsstatus)
 11773  03A2  0020               	movlb	0	; select bank0
 11774  03A3  0862               	movf	_rxdata,w	;volatile
 11775  03A4  00CB               	movwf	??_ISR_Function
 11776  03A5  01CC               	clrf	??_ISR_Function+1
 11777  03A6  0023               	movlb	3	; select bank3
 11778  03A7  0845               	movf	(_recpsstatus+1)^(0+384),w
 11779  03A8  0020               	movlb	0	; select bank0
 11780  03A9  064C               	xorwf	??_ISR_Function+1,w
 11781  03AA  1D03               	skipz
 11782  03AB  2BB0               	goto	u786_25
 11783  03AC  0023               	movlb	3	; select bank3
 11784  03AD  0844               	movf	_recpsstatus^(0+384),w
 11785  03AE  0020               	movlb	0	; select bank0
 11786  03AF  064B               	xorwf	??_ISR_Function,w
 11787  03B0                     u786_25:	
 11788  03B0  1D03               	skipz
 11789  03B1  2D3D               	goto	i1l5464
 11790                           
 11791                           ;main.c: 340: {
 11792                           ;main.c: 341: comm_error_count=0;
 11793  03B2  0022               	movlb	2	; select bank2
 11794  03B3  01BE               	clrf	_comm_error_count^(0+256)	;volatile
 11795                           
 11796                           ;main.c: 342: psstatusu.psstatusbyte[0]=recpsstatus;
 11797  03B4  0023               	movlb	3	; select bank3
 11798  03B5  0844               	movf	_recpsstatus^(0+384),w
 11799  03B6  0020               	movlb	0	; select bank0
 11800  03B7  00CB               	movwf	??_ISR_Function
 11801  03B8  084B               	movf	??_ISR_Function,w
 11802  03B9  00EC               	movwf	_psstatusu
 11803                           
 11804                           ;main.c: 343: pstowfstru.pstowfstrs.psstatusbyte=recpsstatus;
 11805  03BA  0023               	movlb	3	; select bank3
 11806  03BB  0844               	movf	_recpsstatus^(0+384),w
 11807  03BC  0020               	movlb	0	; select bank0
 11808  03BD  00CB               	movwf	??_ISR_Function
 11809  03BE  084B               	movf	??_ISR_Function,w
 11810  03BF  0024               	movlb	4	; select bank4
 11811  03C0  00DA               	movwf	(_pstowfstru^(0+512)+12)
 11812                           
 11813                           ;main.c: 345: if(psstatusu.psstatuss.motoroncommand==1 && psstatusu.psstatuss.twinpulseo
      +                          n==1 )
 11814  03C1  0020               	movlb	0	; select bank0
 11815  03C2  19EC               	btfsc	_psstatusu,3
 11816  03C3  1F6C               	btfss	_psstatusu,6
 11817  03C4  2BDC               	goto	i1l5390
 11818                           
 11819                           ;main.c: 346: {
 11820                           ;main.c: 347: if(psstatusu.psstatuss.Hi_speedon==1)
 11821  03C5  1FEC               	btfss	_psstatusu,7
 11822  03C6  2BD0               	goto	i1l637
 11823                           
 11824                           ;main.c: 348: {
 11825                           ;main.c: 349: TRISAbits.TRISA0=0;
 11826  03C7  0021               	movlb	1	; select bank1
 11827  03C8  100C               	bcf	12,0	;volatile
 11828                           
 11829                           ;main.c: 350: PORTAbits.RA0=1;
 11830  03C9  0020               	movlb	0	; select bank0
 11831  03CA  140C               	bsf	12,0	;volatile
 11832                           
 11833                           ;main.c: 353: Update_PWM(Hi_setppwm);
 11834  03CB  0024               	movlb	4	; select bank4
 11835  03CC  082B               	movf	(_Hi_setppwm+1)^(0+512),w
 11836  03CD  00F7               	movwf	i1Update_PWM@setwsduty+1
 11837  03CE  082A               	movf	_Hi_setppwm^(0+512),w
 11838  03CF  2BD8               	goto	L25
 11839  03D0                     i1l637:	
 11840                           ;main.c: 355: }
 11841                           
 11842                           
 11843                           ;main.c: 356: else
 11844                           ;main.c: 357: {
 11845                           ;main.c: 358: TRISAbits.TRISA0=0;
 11846  03D0  0021               	movlb	1	; select bank1
 11847  03D1  100C               	bcf	12,0	;volatile
 11848                           
 11849                           ;main.c: 359: PORTAbits.RA0=0;
 11850  03D2  0020               	movlb	0	; select bank0
 11851  03D3  100C               	bcf	12,0	;volatile
 11852                           
 11853                           ;main.c: 362: Update_PWM(Lo_setppwm);
 11854  03D4  0024               	movlb	4	; select bank4
 11855  03D5  082D               	movf	(_Lo_setppwm+1)^(0+512),w
 11856  03D6  00F7               	movwf	i1Update_PWM@setwsduty+1
 11857  03D7  082C               	movf	_Lo_setppwm^(0+512),w
 11858  03D8                     L25:	
 11859  03D8  00F6               	movwf	i1Update_PWM@setwsduty
 11860  03D9  3198  20DB  3180   	fcall	i1_Update_PWM
 11861  03DC                     i1l5390:	
 11862                           
 11863                           ;main.c: 364: }
 11864                           ;main.c: 365: }
 11865                           ;main.c: 377: recstatus=0;
 11866  03DC  0023               	movlb	3	; select bank3
 11867  03DD  01C6               	clrf	_recstatus^(0+384)
 11868  03DE  01C7               	clrf	(_recstatus+1)^(0+384)
 11869                           
 11870                           ;main.c: 378: startptr1=0;
 11871  03DF  0022               	movlb	2	; select bank2
 11872  03E0  01E1               	clrf	_startptr1^(0+256)
 11873                           
 11874                           ;main.c: 379: statusptr1=0;
 11875  03E1  01AC               	clrf	_statusptr1^(0+256)
 11876  03E2  01AD               	clrf	(_statusptr1+1)^(0+256)
 11877                           
 11878                           ;main.c: 380: arrptr=0;
 11879  03E3  01B4               	clrf	_arrptr^(0+256)
 11880                           
 11881                           ;main.c: 381: recchksum=0;
 11882  03E4  01DD               	clrf	_recchksum^(0+256)
 11883                           
 11884                           ;main.c: 382: send_statusf=1;
 11885  03E5  01E0               	clrf	_send_statusf^(0+256)
 11886  03E6  0AE0               	incf	_send_statusf^(0+256),f
 11887                           
 11888                           ;main.c: 384: }
 11889  03E7  2D46               	goto	i1l610
 11890  03E8                     i1l5404:	
 11891                           ;main.c: 392: }
 11892                           ;main.c: 393: }
 11893                           ;main.c: 394: }
 11894                           
 11895                           ;main.c: 391: recchksum=0;
 11896                           
 11897                           ;main.c: 390: arrptr=0;
 11898                           
 11899                           ;main.c: 389: statusptr1=0;
 11900                           
 11901                           ;main.c: 388: startptr1=0;
 11902                           
 11903                           ;main.c: 385: else
 11904                           ;main.c: 386: {
 11905                           ;main.c: 387: recstatus=0;
 11906                           
 11907                           
 11908                           ;main.c: 395: else if(startptr1==1 && statusptr1==0)
 11909  03E8  0361               	decf	_startptr1^(0+256),w
 11910  03E9  1D03               	btfss	3,2
 11911  03EA  2D46               	goto	i1l610
 11912  03EB  082C               	movf	_statusptr1^(0+256),w
 11913  03EC  042D               	iorwf	(_statusptr1+1)^(0+256),w
 11914  03ED  1D03               	btfss	3,2
 11915  03EE  2D46               	goto	i1l610
 11916                           
 11917                           ;main.c: 396: {
 11918                           ;main.c: 397: if(arrptr<=22)
 11919  03EF  3017               	movlw	23
 11920  03F0  0234               	subwf	_arrptr^(0+256),w
 11921  03F1  1803               	skipnc
 11922  03F2  2C0E               	goto	i1l5416
 11923                           
 11924                           ;main.c: 398: {
 11925                           ;main.c: 399: rec_arr[arrptr]=rxdata;
 11926  03F3  0020               	movlb	0	; select bank0
 11927  03F4  0862               	movf	_rxdata,w	;volatile
 11928  03F5  00CB               	movwf	??_ISR_Function
 11929  03F6  0022               	movlb	2	; select bank2
 11930  03F7  0834               	movf	_arrptr^(0+256),w
 11931  03F8  3EA0               	addlw	(low (_rec_arr| (0+512)))& (0+255)
 11932  03F9  0086               	movwf	6
 11933  03FA  3002               	movlw	2	; select bank5/6
 11934  03FB  0087               	movwf	7
 11935  03FC  0020               	movlb	0	; select bank0
 11936  03FD  084B               	movf	??_ISR_Function,w
 11937  03FE  0081               	movwf	1
 11938                           
 11939                           ;main.c: 400: recchksum=recchksum+rxdata;
 11940  03FF  0022               	movlb	2	; select bank2
 11941  0400  085D               	movf	_recchksum^(0+256),w
 11942  0401  0020               	movlb	0	; select bank0
 11943  0402  0762               	addwf	_rxdata,w	;volatile
 11944  0403  00CB               	movwf	??_ISR_Function
 11945  0404  084B               	movf	??_ISR_Function,w
 11946  0405  0022               	movlb	2	; select bank2
 11947  0406  00DD               	movwf	_recchksum^(0+256)
 11948                           
 11949                           ;main.c: 401: arrptr++;
 11950  0407  3001               	movlw	1
 11951  0408  0020               	movlb	0	; select bank0
 11952  0409  00CB               	movwf	??_ISR_Function
 11953  040A  084B               	movf	??_ISR_Function,w
 11954  040B  0022               	movlb	2	; select bank2
 11955  040C  07B4               	addwf	_arrptr^(0+256),f
 11956                           
 11957                           ;main.c: 403: }
 11958  040D  2D46               	goto	i1l610
 11959  040E                     i1l5416:	
 11960                           
 11961                           ;main.c: 404: else if(recchksum==rxdata)
 11962  040E  085D               	movf	_recchksum^(0+256),w
 11963  040F  0020               	movlb	0	; select bank0
 11964  0410  0662               	xorwf	_rxdata,w	;volatile
 11965  0411  1D03               	skipz
 11966  0412  2D3D               	goto	i1l5464
 11967                           
 11968                           ;main.c: 405: {
 11969                           ;main.c: 406: comm_error_count=0;
 11970  0413  0022               	movlb	2	; select bank2
 11971  0414  01BE               	clrf	_comm_error_count^(0+256)	;volatile
 11972                           
 11973                           ;main.c: 408: for(ijk=0;ijk<=22;ijk++)
 11974  0415  01A2               	clrf	_ijk^(0+256)
 11975  0416  01A3               	clrf	(_ijk+1)^(0+256)
 11976  0417  3000               	movlw	0
 11977  0418  0223               	subwf	(_ijk+1)^(0+256),w
 11978  0419  3017               	movlw	23
 11979  041A  1903               	skipnz
 11980  041B  0222               	subwf	_ijk^(0+256),w
 11981  041C  1803               	btfsc	3,0
 11982  041D  2C3B               	goto	i1l5430
 11983  041E                     i1l5424:	
 11984                           
 11985                           ;main.c: 409: {
 11986                           ;main.c: 410: pstowfstru.pstransarr[ijk]=rec_arr[ijk];
 11987  041E  0822               	movf	_ijk^(0+256),w
 11988  041F  3EA0               	addlw	(low (_rec_arr| (0+512)))& (0+255)
 11989  0420  0086               	movwf	6
 11990  0421  3002               	movlw	2	; select bank5/6
 11991  0422  0087               	movwf	7
 11992  0423  0801               	movf	1,w
 11993  0424  0020               	movlb	0	; select bank0
 11994  0425  00CB               	movwf	??_ISR_Function
 11995  0426  0022               	movlb	2	; select bank2
 11996  0427  0822               	movf	_ijk^(0+256),w
 11997  0428  3E4E               	addlw	(low (_pstowfstru| (0+512)))& (0+255)
 11998  0429  0086               	movwf	6
 11999  042A  3002               	movlw	2	; select bank4/5
 12000  042B  0087               	movwf	7
 12001  042C  0020               	movlb	0	; select bank0
 12002  042D  084B               	movf	??_ISR_Function,w
 12003  042E  0081               	movwf	1
 12004  042F  3001               	movlw	1
 12005  0430  0022               	movlb	2	; select bank2
 12006  0431  07A2               	addwf	_ijk^(0+256),f
 12007  0432  3000               	movlw	0
 12008  0433  3DA3               	addwfc	(_ijk+1)^(0+256),f
 12009  0434  3000               	movlw	0
 12010  0435  0223               	subwf	(_ijk+1)^(0+256),w
 12011  0436  3017               	movlw	23
 12012  0437  1903               	skipnz
 12013  0438  0222               	subwf	_ijk^(0+256),w
 12014  0439  1C03               	skipc
 12015  043A  2C1E               	goto	i1l5424
 12016  043B                     i1l5430:	
 12017                           
 12018                           ;main.c: 411: }
 12019                           ;main.c: 413: weldmode=pstowfstru.pstowfstrs.weldmode;
 12020  043B  0024               	movlb	4	; select bank4
 12021  043C  084E               	movf	_pstowfstru^(0+512),w
 12022  043D  0020               	movlb	0	; select bank0
 12023  043E  00CB               	movwf	??_ISR_Function
 12024  043F  084B               	movf	??_ISR_Function,w
 12025  0440  00E4               	movwf	_weldmode	;volatile
 12026                           
 12027                           ;main.c: 414: if(cEditfg == 0)
 12028  0441  085E               	movf	_cEditfg,w
 12029  0442  1D03               	btfss	3,2
 12030  0443  2C4D               	goto	i1l647
 12031                           
 12032                           ;main.c: 415: {
 12033                           ;main.c: 416: setwirespeed=pstowfstru.pstowfstrs.setwspeed;
 12034  0444  0024               	movlb	4	; select bank4
 12035  0445  084F               	movf	(_pstowfstru^(0+512)+1),w
 12036  0446  0020               	movlb	0	; select bank0
 12037  0447  00CB               	movwf	??_ISR_Function
 12038  0448  01CC               	clrf	??_ISR_Function+1
 12039  0449  084B               	movf	??_ISR_Function,w
 12040  044A  00DC               	movwf	_setwirespeed
 12041  044B  084C               	movf	??_ISR_Function+1,w
 12042  044C  00DD               	movwf	_setwirespeed+1
 12043  044D                     i1l647:	
 12044                           
 12045                           ;main.c: 417: }
 12046                           ;main.c: 419: wfstatusu.wfstatusbyte[0]=pstowfstru.pstowfstrs.wfstatusbyte;
 12047  044D  0024               	movlb	4	; select bank4
 12048  044E  085B               	movf	(_pstowfstru^(0+512)+13),w
 12049  044F  0020               	movlb	0	; select bank0
 12050  0450  00CB               	movwf	??_ISR_Function
 12051  0451  084B               	movf	??_ISR_Function,w
 12052  0452  00ED               	movwf	_wfstatusu
 12053                           
 12054                           ;main.c: 421: if(wfstatusu.wfstatuss.twotfourtmode1==1)
 12055  0453  1C6D               	btfss	_wfstatusu,0
 12056  0454  2C58               	goto	i1l648
 12057                           
 12058                           ;main.c: 422: {
 12059                           ;main.c: 423: TypeU.TypeS.twot=0;
 12060  0455  1265               	bcf	_TypeU,4
 12061                           
 12062                           ;main.c: 424: TypeU.TypeS.fourt=1;
 12063  0456  16E5               	bsf	_TypeU,5
 12064                           
 12065                           ;main.c: 425: }
 12066  0457  2C5A               	goto	i1l5440
 12067  0458                     i1l648:	
 12068                           
 12069                           ;main.c: 426: else
 12070                           ;main.c: 427: {
 12071                           ;main.c: 428: TypeU.TypeS.twot=1;
 12072  0458  1665               	bsf	_TypeU,4
 12073                           
 12074                           ;main.c: 429: TypeU.TypeS.fourt=0;
 12075  0459  12E5               	bcf	_TypeU,5
 12076  045A                     i1l5440:	
 12077                           
 12078                           ;main.c: 430: }
 12079                           ;main.c: 432: if(cEditfg == 0)
 12080  045A  085E               	movf	_cEditfg,w
 12081  045B  1D03               	btfss	3,2
 12082  045C  2C74               	goto	i1l650
 12083                           
 12084                           ;main.c: 433: {
 12085                           ;main.c: 434: setvoltage=pstowfstru.pstowfstrs.Hi_setvoltage;
 12086  045D  0024               	movlb	4	; select bank4
 12087  045E  0853               	movf	(_pstowfstru^(0+512)+5),w
 12088  045F  0020               	movlb	0	; select bank0
 12089  0460  00CB               	movwf	??_ISR_Function
 12090  0461  01CC               	clrf	??_ISR_Function+1
 12091  0462  084B               	movf	??_ISR_Function,w
 12092  0463  00DA               	movwf	_setvoltage
 12093  0464  084C               	movf	??_ISR_Function+1,w
 12094  0465  00DB               	movwf	_setvoltage+1
 12095                           
 12096                           ;main.c: 435: setvoltage<<=8;
 12097  0466  3008               	movlw	8
 12098  0467                     u799_25:	
 12099  0467  35DA               	lslf	_setvoltage,f
 12100  0468  0DDB               	rlf	_setvoltage+1,f
 12101  0469  0B89               	decfsz	9,f
 12102  046A  2C67               	goto	u799_25
 12103                           
 12104                           ;main.c: 436: setvoltage|=pstowfstru.pstowfstrs.Lo_setvoltage;
 12105  046B  0024               	movlb	4	; select bank4
 12106  046C  0854               	movf	(_pstowfstru^(0+512)+6),w
 12107  046D  0020               	movlb	0	; select bank0
 12108  046E  00CB               	movwf	??_ISR_Function
 12109  046F  01CC               	clrf	??_ISR_Function+1
 12110  0470  084B               	movf	??_ISR_Function,w
 12111  0471  04DA               	iorwf	_setvoltage,f
 12112  0472  084C               	movf	??_ISR_Function+1,w
 12113  0473  04DB               	iorwf	_setvoltage+1,f
 12114  0474                     i1l650:	
 12115                           
 12116                           ;main.c: 437: }
 12117                           ;main.c: 438: setcurrent=pstowfstru.pstowfstrs.Hi_setcurrent;
 12118  0474  0024               	movlb	4	; select bank4
 12119  0475  0850               	movf	(_pstowfstru^(0+512)+2),w
 12120  0476  0020               	movlb	0	; select bank0
 12121  0477  00CB               	movwf	??_ISR_Function
 12122  0478  01CC               	clrf	??_ISR_Function+1
 12123  0479  084B               	movf	??_ISR_Function,w
 12124  047A  0022               	movlb	2	; select bank2
 12125  047B  00AA               	movwf	_setcurrent^(0+256)
 12126  047C  0020               	movlb	0	; select bank0
 12127  047D  084C               	movf	??_ISR_Function+1,w
 12128  047E  0022               	movlb	2	; select bank2
 12129  047F  00AB               	movwf	(_setcurrent+1)^(0+256)
 12130                           
 12131                           ;main.c: 439: setcurrent<<=8;
 12132  0480  3008               	movlw	8
 12133  0481                     u800_25:	
 12134  0481  35AA               	lslf	_setcurrent^(0+256),f
 12135  0482  0DAB               	rlf	(_setcurrent+1)^(0+256),f
 12136  0483  0B89               	decfsz	9,f
 12137  0484  2C81               	goto	u800_25
 12138                           
 12139                           ;main.c: 440: setcurrent|=pstowfstru.pstowfstrs.Lo_setcurrent;
 12140  0485  0024               	movlb	4	; select bank4
 12141  0486  0851               	movf	(_pstowfstru^(0+512)+3),w
 12142  0487  0020               	movlb	0	; select bank0
 12143  0488  00CB               	movwf	??_ISR_Function
 12144  0489  01CC               	clrf	??_ISR_Function+1
 12145  048A  084B               	movf	??_ISR_Function,w
 12146  048B  0022               	movlb	2	; select bank2
 12147  048C  04AA               	iorwf	_setcurrent^(0+256),f
 12148  048D  0020               	movlb	0	; select bank0
 12149  048E  084C               	movf	??_ISR_Function+1,w
 12150  048F  0022               	movlb	2	; select bank2
 12151  0490  04AB               	iorwf	(_setcurrent+1)^(0+256),f
 12152                           
 12153                           ;main.c: 442: Actual_amp=pstowfstru.pstowfstrs.Hi_actualcurrent;
 12154  0491  0024               	movlb	4	; select bank4
 12155  0492  0856               	movf	(_pstowfstru^(0+512)+8),w
 12156  0493  0020               	movlb	0	; select bank0
 12157  0494  00CB               	movwf	??_ISR_Function
 12158  0495  01CC               	clrf	??_ISR_Function+1
 12159  0496  084B               	movf	??_ISR_Function,w
 12160  0497  0024               	movlb	4	; select bank4
 12161  0498  00E5               	movwf	_Actual_amp^(0+512)
 12162  0499  0020               	movlb	0	; select bank0
 12163  049A  084C               	movf	??_ISR_Function+1,w
 12164  049B  0024               	movlb	4	; select bank4
 12165  049C  00E6               	movwf	(_Actual_amp+1)^(0+512)
 12166                           
 12167                           ;main.c: 443: Actual_amp<<=8;
 12168  049D  3008               	movlw	8
 12169  049E                     u801_25:	
 12170  049E  35E5               	lslf	_Actual_amp^(0+512),f
 12171  049F  0DE6               	rlf	(_Actual_amp+1)^(0+512),f
 12172  04A0  0B89               	decfsz	9,f
 12173  04A1  2C9E               	goto	u801_25
 12174                           
 12175                           ;main.c: 444: Actual_amp|=pstowfstru.pstowfstrs.Lo_actualcurrent;
 12176  04A2  0857               	movf	(_pstowfstru^(0+512)+9),w
 12177  04A3  0020               	movlb	0	; select bank0
 12178  04A4  00CB               	movwf	??_ISR_Function
 12179  04A5  01CC               	clrf	??_ISR_Function+1
 12180  04A6  084B               	movf	??_ISR_Function,w
 12181  04A7  0024               	movlb	4	; select bank4
 12182  04A8  04E5               	iorwf	_Actual_amp^(0+512),f
 12183  04A9  0020               	movlb	0	; select bank0
 12184  04AA  084C               	movf	??_ISR_Function+1,w
 12185  04AB  0024               	movlb	4	; select bank4
 12186  04AC  04E6               	iorwf	(_Actual_amp+1)^(0+512),f
 12187                           
 12188                           ;main.c: 446: Actual_vtg=pstowfstru.pstowfstrs.Hi_actualvoltage;
 12189  04AD  0858               	movf	(_pstowfstru^(0+512)+10),w
 12190  04AE  0020               	movlb	0	; select bank0
 12191  04AF  00CB               	movwf	??_ISR_Function
 12192  04B0  01CC               	clrf	??_ISR_Function+1
 12193  04B1  084B               	movf	??_ISR_Function,w
 12194  04B2  0024               	movlb	4	; select bank4
 12195  04B3  00E7               	movwf	_Actual_vtg^(0+512)
 12196  04B4  0020               	movlb	0	; select bank0
 12197  04B5  084C               	movf	??_ISR_Function+1,w
 12198  04B6  0024               	movlb	4	; select bank4
 12199  04B7  00E8               	movwf	(_Actual_vtg+1)^(0+512)
 12200                           
 12201                           ;main.c: 447: Actual_vtg<<=8;
 12202  04B8  3008               	movlw	8
 12203  04B9                     u802_25:	
 12204  04B9  35E7               	lslf	_Actual_vtg^(0+512),f
 12205  04BA  0DE8               	rlf	(_Actual_vtg+1)^(0+512),f
 12206  04BB  0B89               	decfsz	9,f
 12207  04BC  2CB9               	goto	u802_25
 12208                           
 12209                           ;main.c: 448: Actual_vtg|=pstowfstru.pstowfstrs.Lo_actualvoltage;
 12210  04BD  0859               	movf	(_pstowfstru^(0+512)+11),w
 12211  04BE  0020               	movlb	0	; select bank0
 12212  04BF  00CB               	movwf	??_ISR_Function
 12213  04C0  01CC               	clrf	??_ISR_Function+1
 12214  04C1  084B               	movf	??_ISR_Function,w
 12215  04C2  0024               	movlb	4	; select bank4
 12216  04C3  04E7               	iorwf	_Actual_vtg^(0+512),f
 12217  04C4  0020               	movlb	0	; select bank0
 12218  04C5  084C               	movf	??_ISR_Function+1,w
 12219  04C6  0024               	movlb	4	; select bank4
 12220  04C7  04E8               	iorwf	(_Actual_vtg+1)^(0+512),f
 12221                           
 12222                           ;main.c: 452: cRelSpeedSign = pstowfstru.pstowfstrs.pulse_freq;
 12223  04C8  085D               	movf	(_pstowfstru^(0+512)+15),w
 12224  04C9  0020               	movlb	0	; select bank0
 12225  04CA  00CB               	movwf	??_ISR_Function
 12226  04CB  084B               	movf	??_ISR_Function,w
 12227  04CC  0022               	movlb	2	; select bank2
 12228  04CD  00B9               	movwf	_cRelSpeedSign^(0+256)
 12229                           
 12230                           ;main.c: 454: rel_wirespeed=pstowfstru.pstowfstrs.rel_wirespeed;
 12231  04CE  0024               	movlb	4	; select bank4
 12232  04CF  085C               	movf	(_pstowfstru^(0+512)+14),w
 12233  04D0  0020               	movlb	0	; select bank0
 12234  04D1  00CB               	movwf	??_ISR_Function
 12235  04D2  01CC               	clrf	??_ISR_Function+1
 12236  04D3  084B               	movf	??_ISR_Function,w
 12237  04D4  0023               	movlb	3	; select bank3
 12238  04D5  00C8               	movwf	_rel_wirespeed^(0+384)
 12239  04D6  0020               	movlb	0	; select bank0
 12240  04D7  084C               	movf	??_ISR_Function+1,w
 12241  04D8  0023               	movlb	3	; select bank3
 12242  04D9  00C9               	movwf	(_rel_wirespeed+1)^(0+384)
 12243                           
 12244                           ;main.c: 456: crater_speed=pstowfstru.pstowfstrs.crater_speed;
 12245  04DA  0024               	movlb	4	; select bank4
 12246  04DB  0860               	movf	(_pstowfstru^(0+512)+18),w
 12247  04DC  0020               	movlb	0	; select bank0
 12248  04DD  00CB               	movwf	??_ISR_Function
 12249  04DE  084B               	movf	??_ISR_Function,w
 12250  04DF  0022               	movlb	2	; select bank2
 12251  04E0  00C1               	movwf	_crater_speed^(0+256)	;volatile
 12252                           
 12253                           ;main.c: 458: if(cEditfg == 0)
 12254  04E1  0020               	movlb	0	; select bank0
 12255  04E2  085E               	movf	_cEditfg,w
 12256  04E3  1D03               	btfss	3,2
 12257  04E4  2CEB               	goto	i1l651
 12258                           
 12259                           ;main.c: 459: {
 12260                           ;main.c: 460: psstatusu.psstatusbyte[0]=pstowfstru.pstowfstrs.psstatusbyte;
 12261  04E5  0024               	movlb	4	; select bank4
 12262  04E6  085A               	movf	(_pstowfstru^(0+512)+12),w
 12263  04E7  0020               	movlb	0	; select bank0
 12264  04E8  00CB               	movwf	??_ISR_Function
 12265  04E9  084B               	movf	??_ISR_Function,w
 12266  04EA  00EC               	movwf	_psstatusu
 12267  04EB                     i1l651:	
 12268                           
 12269                           ;main.c: 461: }
 12270                           ;main.c: 463: error_code1=pstowfstru.pstowfstrs.error_code1;
 12271  04EB  0024               	movlb	4	; select bank4
 12272  04EC  085E               	movf	(_pstowfstru^(0+512)+16),w
 12273  04ED  0020               	movlb	0	; select bank0
 12274  04EE  00CB               	movwf	??_ISR_Function
 12275  04EF  084B               	movf	??_ISR_Function,w
 12276  04F0  0023               	movlb	3	; select bank3
 12277  04F1  00D0               	movwf	_error_code1^(0+384)	;volatile
 12278                           
 12279                           ;main.c: 464: error_code2=pstowfstru.pstowfstrs.error_code2;
 12280  04F2  0024               	movlb	4	; select bank4
 12281  04F3  085F               	movf	(_pstowfstru^(0+512)+17),w
 12282  04F4  0020               	movlb	0	; select bank0
 12283  04F5  00CB               	movwf	??_ISR_Function
 12284  04F6  084B               	movf	??_ISR_Function,w
 12285  04F7  0023               	movlb	3	; select bank3
 12286  04F8  00D1               	movwf	_error_code2^(0+384)	;volatile
 12287                           
 12288                           ;main.c: 466: commandu.commandbyte[0]=pstowfstru.pstowfstrs.command_to_wf;
 12289  04F9  0024               	movlb	4	; select bank4
 12290  04FA  0862               	movf	(_pstowfstru^(0+512)+20),w
 12291  04FB  0020               	movlb	0	; select bank0
 12292  04FC  00CB               	movwf	??_ISR_Function
 12293  04FD  084B               	movf	??_ISR_Function,w
 12294  04FE  0023               	movlb	3	; select bank3
 12295  04FF  00D9               	movwf	_commandu^(0+384)
 12296                           
 12297                           ;main.c: 467: if(cMtrOverLdfg == 0)
 12298  0500  0022               	movlb	2	; select bank2
 12299  0501  0837               	movf	_cMtrOverLdfg^(0+256),w
 12300  0502  1D03               	btfss	3,2
 12301  0503  2D12               	goto	i1l652
 12302                           
 12303                           ;main.c: 468: {
 12304                           ;main.c: 469: erroru.errorstatusbyte[0]=pstowfstru.pstowfstrs.error_code1;
 12305  0504  0024               	movlb	4	; select bank4
 12306  0505  085E               	movf	(_pstowfstru^(0+512)+16),w
 12307  0506  0020               	movlb	0	; select bank0
 12308  0507  00CB               	movwf	??_ISR_Function
 12309  0508  084B               	movf	??_ISR_Function,w
 12310  0509  0022               	movlb	2	; select bank2
 12311  050A  00EA               	movwf	_erroru^(0+256)
 12312                           
 12313                           ;main.c: 470: erroru.errorstatusbyte[1]=pstowfstru.pstowfstrs.error_code2;
 12314  050B  0024               	movlb	4	; select bank4
 12315  050C  085F               	movf	(_pstowfstru^(0+512)+17),w
 12316  050D  0020               	movlb	0	; select bank0
 12317  050E  00CB               	movwf	??_ISR_Function
 12318  050F  084B               	movf	??_ISR_Function,w
 12319  0510  0022               	movlb	2	; select bank2
 12320  0511  00EB               	movwf	(_erroru^(0+256)+1)
 12321  0512                     i1l652:	
 12322                           
 12323                           ;main.c: 471: }
 12324                           ;main.c: 473: creep_speed=pstowfstru.pstowfstrs.creep_speed;
 12325  0512  0024               	movlb	4	; select bank4
 12326  0513  0861               	movf	(_pstowfstru^(0+512)+19),w
 12327  0514  0020               	movlb	0	; select bank0
 12328  0515  00CB               	movwf	??_ISR_Function
 12329  0516  084B               	movf	??_ISR_Function,w
 12330  0517  0022               	movlb	2	; select bank2
 12331  0518  00C2               	movwf	_creep_speed^(0+256)	;volatile
 12332                           
 12333                           ;main.c: 475: if(commandu.commands.volt_or_arc==1)
 12334  0519  0023               	movlb	3	; select bank3
 12335  051A  1C59               	btfss	_commandu^(0+384),0
 12336  051B  2D20               	goto	i1l653
 12337                           
 12338                           ;main.c: 477: {
 12339                           ;main.c: 478: TypeU.TypeS.arclength=0;
 12340  051C  0020               	movlb	0	; select bank0
 12341  051D  1165               	bcf	_TypeU,2
 12342                           
 12343                           ;main.c: 479: TypeU.TypeS.vtg =1;
 12344  051E  14E6               	bsf	_TypeU+1,1
 12345                           
 12346                           ;main.c: 480: }
 12347  051F  2D23               	goto	i1l654
 12348  0520                     i1l653:	
 12349                           
 12350                           ;main.c: 481: else
 12351                           ;main.c: 482: {
 12352                           ;main.c: 483: TypeU.TypeS.arclength=1;
 12353  0520  0020               	movlb	0	; select bank0
 12354  0521  1565               	bsf	_TypeU,2
 12355                           
 12356                           ;main.c: 484: TypeU.TypeS.vtg =0;
 12357  0522  10E6               	bcf	_TypeU+1,1
 12358  0523                     i1l654:	
 12359                           
 12360                           ;main.c: 485: }
 12361                           ;main.c: 486: if(wfstatusu.wfstatuss.twotfourtmode1 == 1)
 12362  0523  1C6D               	btfss	_wfstatusu,0
 12363  0524  2D29               	goto	i1l5458
 12364                           
 12365                           ;main.c: 487: {
 12366                           ;main.c: 488: cWf2t4tmodefg = 1;
 12367  0525  0022               	movlb	2	; select bank2
 12368  0526  01BB               	clrf	_cWf2t4tmodefg^(0+256)
 12369  0527  0ABB               	incf	_cWf2t4tmodefg^(0+256),f
 12370                           
 12371                           ;main.c: 489: }
 12372  0528  2D2B               	goto	i1l656
 12373  0529                     i1l5458:	
 12374                           
 12375                           ;main.c: 490: else
 12376                           ;main.c: 491: {
 12377                           ;main.c: 492: cWf2t4tmodefg = 0;
 12378  0529  0022               	movlb	2	; select bank2
 12379  052A  01BB               	clrf	_cWf2t4tmodefg^(0+256)
 12380  052B                     i1l656:	
 12381                           
 12382                           ;main.c: 493: }
 12383                           ;main.c: 494: startptr1=0;
 12384  052B  01E1               	clrf	_startptr1^(0+256)
 12385                           
 12386                           ;main.c: 495: arrptr=0;
 12387  052C  01B4               	clrf	_arrptr^(0+256)
 12388                           
 12389                           ;main.c: 496: recchksum=0;
 12390  052D  01DD               	clrf	_recchksum^(0+256)
 12391                           
 12392                           ;main.c: 497: recstatus=0;
 12393  052E  0023               	movlb	3	; select bank3
 12394  052F  01C6               	clrf	_recstatus^(0+384)
 12395  0530  01C7               	clrf	(_recstatus+1)^(0+384)
 12396                           
 12397                           ;main.c: 498: statusptr1=0;
 12398  0531  0022               	movlb	2	; select bank2
 12399  0532  01AC               	clrf	_statusptr1^(0+256)
 12400  0533  01AD               	clrf	(_statusptr1+1)^(0+256)
 12401                           
 12402                           ;main.c: 499: transmitonf=1;
 12403  0534  01E5               	clrf	_transmitonf^(0+256)
 12404  0535  0AE5               	incf	_transmitonf^(0+256),f
 12405                           
 12406                           ;main.c: 500: onesecf=1;
 12407  0536  3001               	movlw	1
 12408  0537  0020               	movlb	0	; select bank0
 12409  0538  00CB               	movwf	??_ISR_Function
 12410  0539  084B               	movf	??_ISR_Function,w
 12411  053A  0022               	movlb	2	; select bank2
 12412  053B  00D3               	movwf	_onesecf^(0+256)	;volatile
 12413                           
 12414                           ;main.c: 501: }
 12415  053C  2D46               	goto	i1l610
 12416  053D                     i1l5464:	
 12417                           
 12418                           ;main.c: 502: else
 12419                           ;main.c: 503: {
 12420                           ;main.c: 505: recstatus=0;
 12421  053D  0023               	movlb	3	; select bank3
 12422  053E  01C6               	clrf	_recstatus^(0+384)
 12423  053F  01C7               	clrf	(_recstatus+1)^(0+384)
 12424                           
 12425                           ;main.c: 506: startptr1=0;
 12426  0540  0022               	movlb	2	; select bank2
 12427  0541  01E1               	clrf	_startptr1^(0+256)
 12428                           
 12429                           ;main.c: 507: statusptr1=0;
 12430  0542  01AC               	clrf	_statusptr1^(0+256)
 12431  0543  01AD               	clrf	(_statusptr1+1)^(0+256)
 12432  0544                     L26:	
 12433                           
 12434                           ;main.c: 508: arrptr=0;
 12435  0544  01B4               	clrf	_arrptr^(0+256)
 12436  0545                     L24:	
 12437                           
 12438                           ;main.c: 509: recchksum=0;
 12439  0545  01DD               	clrf	_recchksum^(0+256)
 12440  0546                     i1l610:	
 12441  0546  0020               	movlb	0	; select bank0
 12442  0547  0853               	movf	??_ISR_Function+8,w
 12443  0548  00FF               	movwf	127
 12444  0549  0009               	retfie
 12445  054A                     __end_of_ISR_Function:	
 12446                           
 12447                           	psect	text37
 12448  18A4                     __ptext37:	
 12449 ;; *************** function i1___wmul *****************
 12450 ;; Defined at:
 12451 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;  multiplier      2    0[COMMON] unsigned int 
 12454 ;;  multiplicand    2    2[COMMON] unsigned int 
 12455 ;; Auto vars:     Size  Location     Type
 12456 ;;  __wmul          2    4[COMMON] unsigned int 
 12457 ;; Return value:  Size  Location     Type
 12458 ;;                  2    0[COMMON] unsigned int 
 12459 ;; Registers used:
 12460 ;;		wreg, status,2, status,0
 12461 ;; Tracked objects:
 12462 ;;		On entry : 0/0
 12463 ;;		On exit  : 0/0
 12464 ;;		Unchanged: 0/0
 12465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12469 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12470 ;;Total ram usage:        6 bytes
 12471 ;; Hardware stack levels used:    1
 12472 ;; This function calls:
 12473 ;;		Nothing
 12474 ;; This function is called by:
 12475 ;;		_ISR_Function
 12476 ;; This function uses a non-reentrant model
 12477 ;;
 12478                           
 12479                           
 12480                           ;psect for function i1___wmul
 12481  18A4                     i1___wmul:	
 12482                           
 12483                           ;incstack = 0
 12484                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 12485  18A4  01F4               	clrf	i1___wmul@product
 12486  18A5  01F5               	clrf	i1___wmul@product+1
 12487  18A6                     i1l4836:	
 12488  18A6  1C70               	btfss	i1___wmul@multiplier,0
 12489  18A7  28AC               	goto	i1l962
 12490  18A8  0872               	movf	i1___wmul@multiplicand,w
 12491  18A9  07F4               	addwf	i1___wmul@product,f
 12492  18AA  0873               	movf	i1___wmul@multiplicand+1,w
 12493  18AB  3DF5               	addwfc	i1___wmul@product+1,f
 12494  18AC                     i1l962:	
 12495  18AC  3001               	movlw	1
 12496  18AD                     u663_25:	
 12497  18AD  35F2               	lslf	i1___wmul@multiplicand,f
 12498  18AE  0DF3               	rlf	i1___wmul@multiplicand+1,f
 12499  18AF  0B89               	decfsz	9,f
 12500  18B0  28AD               	goto	u663_25
 12501  18B1  3001               	movlw	1
 12502  18B2                     u664_25:	
 12503  18B2  36F1               	lsrf	i1___wmul@multiplier+1,f
 12504  18B3  0CF0               	rrf	i1___wmul@multiplier,f
 12505  18B4  0B89               	decfsz	9,f
 12506  18B5  28B2               	goto	u664_25
 12507  18B6  0870               	movf	i1___wmul@multiplier,w
 12508  18B7  0471               	iorwf	i1___wmul@multiplier+1,w
 12509  18B8  1D03               	btfss	3,2
 12510  18B9  28A6               	goto	i1l4836
 12511  18BA  0875               	movf	i1___wmul@product+1,w
 12512  18BB  00F1               	movwf	?i1___wmul+1
 12513  18BC  0874               	movf	i1___wmul@product,w
 12514  18BD  00F0               	movwf	?i1___wmul
 12515  18BE  0008               	return
 12516  18BF                     __end_ofi1___wmul:	
 12517                           
 12518                           	psect	text38
 12519  1822                     __ptext38:	
 12520 ;; *************** function i1___lwtoft *****************
 12521 ;; Defined at:
 12522 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 12523 ;; Parameters:    Size  Location     Type
 12524 ;;  c               2    8[COMMON] unsigned int 
 12525 ;; Auto vars:     Size  Location     Type
 12526 ;;		None
 12527 ;; Return value:  Size  Location     Type
 12528 ;;                  3    8[COMMON] float 
 12529 ;; Registers used:
 12530 ;;		wreg, status,2, status,0, pclath, cstack
 12531 ;; Tracked objects:
 12532 ;;		On entry : 0/0
 12533 ;;		On exit  : 0/0
 12534 ;;		Unchanged: 0/0
 12535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12536 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12539 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12540 ;;Total ram usage:        4 bytes
 12541 ;; Hardware stack levels used:    1
 12542 ;; Hardware stack levels required when called:    1
 12543 ;; This function calls:
 12544 ;;		i1___ftpack
 12545 ;; This function is called by:
 12546 ;;		_ISR_Function
 12547 ;; This function uses a non-reentrant model
 12548 ;;
 12549                           
 12550                           
 12551                           ;psect for function i1___lwtoft
 12552  1822                     i1___lwtoft:	
 12553                           
 12554                           ;incstack = 0
 12555                           ; Regs used in i1___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 12556  1822  0878               	movf	i1___lwtoft@c,w
 12557  1823  00F0               	movwf	i1___ftpack@arg
 12558  1824  0879               	movf	i1___lwtoft@c+1,w
 12559  1825  00F1               	movwf	i1___ftpack@arg+1
 12560  1826  01F2               	clrf	i1___ftpack@arg+2
 12561  1827  308E               	movlw	142
 12562  1828  00FB               	movwf	??i1___lwtoft
 12563  1829  087B               	movf	??i1___lwtoft,w
 12564  182A  00F3               	movwf	i1___ftpack@exp
 12565  182B  01F4               	clrf	i1___ftpack@sign
 12566  182C  319B  238D         	fcall	i1___ftpack
 12567  182E  0870               	movf	?i1___ftpack,w
 12568  182F  00F8               	movwf	?i1___lwtoft
 12569  1830  0871               	movf	?i1___ftpack+1,w
 12570  1831  00F9               	movwf	?i1___lwtoft+1
 12571  1832  0872               	movf	?i1___ftpack+2,w
 12572  1833  00FA               	movwf	?i1___lwtoft+2
 12573  1834  0008               	return
 12574  1835                     __end_ofi1___lwtoft:	
 12575                           
 12576                           	psect	text39
 12577  1E49                     __ptext39:	
 12578 ;; *************** function i1___fttol *****************
 12579 ;; Defined at:
 12580 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;  f1              3   29[BANK0 ] float 
 12583 ;; Auto vars:     Size  Location     Type
 12584 ;;  __fttol         4   38[BANK0 ] unsigned long 
 12585 ;;  __fttol         1   42[BANK0 ] unsigned char 
 12586 ;;  __fttol         1   37[BANK0 ] unsigned char 
 12587 ;; Return value:  Size  Location     Type
 12588 ;;                  4   29[BANK0 ] long 
 12589 ;; Registers used:
 12590 ;;		wreg, status,2, status,0
 12591 ;; Tracked objects:
 12592 ;;		On entry : 0/0
 12593 ;;		On exit  : 0/0
 12594 ;;		Unchanged: 0/0
 12595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12596 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12597 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12598 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12599 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12600 ;;Total ram usage:       14 bytes
 12601 ;; Hardware stack levels used:    1
 12602 ;; This function calls:
 12603 ;;		Nothing
 12604 ;; This function is called by:
 12605 ;;		_ISR_Function
 12606 ;; This function uses a non-reentrant model
 12607 ;;
 12608                           
 12609                           
 12610                           ;psect for function i1___fttol
 12611  1E49                     i1___fttol:	
 12612                           
 12613                           ;incstack = 0
 12614                           ; Regs used in i1___fttol: [wreg+status,2+status,0]
 12615  1E49  0020               	movlb	0	; select bank0
 12616  1E4A  083D               	movf	i1___fttol@f1,w
 12617  1E4B  00C1               	movwf	??i1___fttol
 12618  1E4C  083E               	movf	i1___fttol@f1+1,w
 12619  1E4D  00C2               	movwf	??i1___fttol+1
 12620  1E4E  083F               	movf	i1___fttol@f1+2,w
 12621  1E4F  00C3               	movwf	??i1___fttol+2
 12622  1E50  1003               	clrc
 12623  1E51  0D42               	rlf	??i1___fttol+1,w
 12624  1E52  0D43               	rlf	??i1___fttol+2,w
 12625  1E53  00C4               	movwf	??i1___fttol+3
 12626  1E54  0844               	movf	??i1___fttol+3,w
 12627  1E55  00CA               	movwf	i1___fttol@exp1
 12628  1E56  084A               	movf	i1___fttol@exp1,w
 12629  1E57  1D03               	btfss	3,2
 12630  1E58  2E62               	goto	i1l5056
 12631  1E59  3000               	movlw	0
 12632  1E5A  00C0               	movwf	?i1___fttol+3
 12633  1E5B  3000               	movlw	0
 12634  1E5C  00BF               	movwf	?i1___fttol+2
 12635  1E5D  3000               	movlw	0
 12636  1E5E  00BE               	movwf	?i1___fttol+1
 12637  1E5F  3000               	movlw	0
 12638  1E60  00BD               	movwf	?i1___fttol
 12639  1E61  0008               	return
 12640  1E62                     i1l5056:	
 12641  1E62  083D               	movf	i1___fttol@f1,w
 12642  1E63  00C1               	movwf	??i1___fttol
 12643  1E64  083E               	movf	i1___fttol@f1+1,w
 12644  1E65  00C2               	movwf	??i1___fttol+1
 12645  1E66  083F               	movf	i1___fttol@f1+2,w
 12646  1E67  00C3               	movwf	??i1___fttol+2
 12647  1E68  3017               	movlw	23
 12648  1E69                     u720_25:	
 12649  1E69  36C3               	lsrf	??i1___fttol+2,f
 12650  1E6A  0CC2               	rrf	??i1___fttol+1,f
 12651  1E6B  0CC1               	rrf	??i1___fttol,f
 12652  1E6C  0B89               	decfsz	9,f
 12653  1E6D  2E69               	goto	u720_25
 12654  1E6E  0841               	movf	??i1___fttol,w
 12655  1E6F  00C4               	movwf	??i1___fttol+3
 12656  1E70  0844               	movf	??i1___fttol+3,w
 12657  1E71  00C5               	movwf	i1___fttol@sign1
 12658  1E72  17BE               	bsf	i1___fttol@f1+1,7
 12659  1E73  30FF               	movlw	255
 12660  1E74  05BD               	andwf	i1___fttol@f1,f
 12661  1E75  30FF               	movlw	255
 12662  1E76  05BE               	andwf	i1___fttol@f1+1,f
 12663  1E77  3000               	movlw	0
 12664  1E78  05BF               	andwf	i1___fttol@f1+2,f
 12665  1E79  083D               	movf	i1___fttol@f1,w
 12666  1E7A  00C6               	movwf	i1___fttol@lval
 12667  1E7B  083E               	movf	i1___fttol@f1+1,w
 12668  1E7C  00C7               	movwf	i1___fttol@lval+1
 12669  1E7D  083F               	movf	i1___fttol@f1+2,w
 12670  1E7E  00C8               	movwf	i1___fttol@lval+2
 12671  1E7F  01C9               	clrf	i1___fttol@lval+3
 12672  1E80  308E               	movlw	142
 12673  1E81  02CA               	subwf	i1___fttol@exp1,f
 12674  1E82  1FCA               	btfss	i1___fttol@exp1,7
 12675  1E83  2EA0               	goto	i1l5076
 12676  1E84  084A               	movf	i1___fttol@exp1,w
 12677  1E85  3A80               	xorlw	128
 12678  1E86  3E8F               	addlw	143
 12679  1E87  1803               	skipnc
 12680  1E88  2E92               	goto	i1l5074
 12681  1E89  3000               	movlw	0
 12682  1E8A  00C0               	movwf	?i1___fttol+3
 12683  1E8B  3000               	movlw	0
 12684  1E8C  00BF               	movwf	?i1___fttol+2
 12685  1E8D  3000               	movlw	0
 12686  1E8E  00BE               	movwf	?i1___fttol+1
 12687  1E8F  3000               	movlw	0
 12688  1E90  00BD               	movwf	?i1___fttol
 12689  1E91  0008               	return
 12690  1E92                     i1l5074:	
 12691  1E92  3001               	movlw	1
 12692  1E93                     u723_25:	
 12693  1E93  36C9               	lsrf	i1___fttol@lval+3,f
 12694  1E94  0CC8               	rrf	i1___fttol@lval+2,f
 12695  1E95  0CC7               	rrf	i1___fttol@lval+1,f
 12696  1E96  0CC6               	rrf	i1___fttol@lval,f
 12697  1E97  0B89               	decfsz	9,f
 12698  1E98  2E93               	goto	u723_25
 12699  1E99  3001               	movlw	1
 12700  1E9A  00C1               	movwf	??i1___fttol
 12701  1E9B  0841               	movf	??i1___fttol,w
 12702  1E9C  07CA               	addwf	i1___fttol@exp1,f
 12703  1E9D  1903               	btfsc	3,2
 12704  1E9E  2EB9               	goto	i1l5084
 12705  1E9F  2E92               	goto	i1l5074
 12706  1EA0                     i1l5076:	
 12707  1EA0  3018               	movlw	24
 12708  1EA1  024A               	subwf	i1___fttol@exp1,w
 12709  1EA2  1C03               	skipc
 12710  1EA3  2EB6               	goto	i1l1214
 12711  1EA4  3000               	movlw	0
 12712  1EA5  00C0               	movwf	?i1___fttol+3
 12713  1EA6  3000               	movlw	0
 12714  1EA7  00BF               	movwf	?i1___fttol+2
 12715  1EA8  3000               	movlw	0
 12716  1EA9  00BE               	movwf	?i1___fttol+1
 12717  1EAA  3000               	movlw	0
 12718  1EAB  00BD               	movwf	?i1___fttol
 12719  1EAC  0008               	return
 12720  1EAD                     i1l5082:	
 12721  1EAD  3001               	movlw	1
 12722  1EAE                     u726_25:	
 12723  1EAE  35C6               	lslf	i1___fttol@lval,f
 12724  1EAF  0DC7               	rlf	i1___fttol@lval+1,f
 12725  1EB0  0DC8               	rlf	i1___fttol@lval+2,f
 12726  1EB1  0DC9               	rlf	i1___fttol@lval+3,f
 12727  1EB2  0B89               	decfsz	9,f
 12728  1EB3  2EAE               	goto	u726_25
 12729  1EB4  3001               	movlw	1
 12730  1EB5  02CA               	subwf	i1___fttol@exp1,f
 12731  1EB6                     i1l1214:	
 12732  1EB6  084A               	movf	i1___fttol@exp1,w
 12733  1EB7  1D03               	btfss	3,2
 12734  1EB8  2EAD               	goto	i1l5082
 12735  1EB9                     i1l5084:	
 12736  1EB9  0845               	movf	i1___fttol@sign1,w
 12737  1EBA  1903               	btfsc	3,2
 12738  1EBB  2EC7               	goto	i1l5088
 12739  1EBC  09C6               	comf	i1___fttol@lval,f
 12740  1EBD  09C7               	comf	i1___fttol@lval+1,f
 12741  1EBE  09C8               	comf	i1___fttol@lval+2,f
 12742  1EBF  09C9               	comf	i1___fttol@lval+3,f
 12743  1EC0  0AC6               	incf	i1___fttol@lval,f
 12744  1EC1  1903               	skipnz
 12745  1EC2  0AC7               	incf	i1___fttol@lval+1,f
 12746  1EC3  1903               	skipnz
 12747  1EC4  0AC8               	incf	i1___fttol@lval+2,f
 12748  1EC5  1903               	skipnz
 12749  1EC6  0AC9               	incf	i1___fttol@lval+3,f
 12750  1EC7                     i1l5088:	
 12751  1EC7  0849               	movf	i1___fttol@lval+3,w
 12752  1EC8  00C0               	movwf	?i1___fttol+3
 12753  1EC9  0848               	movf	i1___fttol@lval+2,w
 12754  1ECA  00BF               	movwf	?i1___fttol+2
 12755  1ECB  0847               	movf	i1___fttol@lval+1,w
 12756  1ECC  00BE               	movwf	?i1___fttol+1
 12757  1ECD  0846               	movf	i1___fttol@lval,w
 12758  1ECE  00BD               	movwf	?i1___fttol
 12759  1ECF  0008               	return
 12760  1ED0                     __end_ofi1___fttol:	
 12761                           
 12762                           	psect	text40
 12763  082D                     __ptext40:	
 12764 ;; *************** function i1___ftmul *****************
 12765 ;; Defined at:
 12766 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 12767 ;; Parameters:    Size  Location     Type
 12768 ;;  f1              3    0[BANK0 ] float 
 12769 ;;  f2              3    3[BANK0 ] float 
 12770 ;; Auto vars:     Size  Location     Type
 12771 ;;  __ftmul         3   11[BANK0 ] unsigned um
 12772 ;;  __ftmul         1   15[BANK0 ] unsigned char 
 12773 ;;  __ftmul         1   14[BANK0 ] unsigned char 
 12774 ;;  __ftmul         1   10[BANK0 ] unsigned char 
 12775 ;; Return value:  Size  Location     Type
 12776 ;;                  3    0[BANK0 ] float 
 12777 ;; Registers used:
 12778 ;;		wreg, status,2, status,0, pclath, cstack
 12779 ;; Tracked objects:
 12780 ;;		On entry : 0/0
 12781 ;;		On exit  : 0/0
 12782 ;;		Unchanged: 0/0
 12783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12784 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12785 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12786 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12787 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12788 ;;Total ram usage:       16 bytes
 12789 ;; Hardware stack levels used:    1
 12790 ;; Hardware stack levels required when called:    1
 12791 ;; This function calls:
 12792 ;;		i1___ftpack
 12793 ;; This function is called by:
 12794 ;;		_ISR_Function
 12795 ;; This function uses a non-reentrant model
 12796 ;;
 12797                           
 12798                           
 12799                           ;psect for function i1___ftmul
 12800  082D                     i1___ftmul:	
 12801                           
 12802                           ;incstack = 0
 12803                           ; Regs used in i1___ftmul: [wreg+status,2+status,0+pclath+cstack]
 12804  082D  0020               	movlb	0	; select bank0
 12805  082E  0820               	movf	i1___ftmul@f1,w
 12806  082F  00A6               	movwf	??i1___ftmul
 12807  0830  0821               	movf	i1___ftmul@f1+1,w
 12808  0831  00A7               	movwf	??i1___ftmul+1
 12809  0832  0822               	movf	i1___ftmul@f1+2,w
 12810  0833  00A8               	movwf	??i1___ftmul+2
 12811  0834  1003               	clrc
 12812  0835  0D27               	rlf	??i1___ftmul+1,w
 12813  0836  0D28               	rlf	??i1___ftmul+2,w
 12814  0837  00A9               	movwf	??i1___ftmul+3
 12815  0838  0829               	movf	??i1___ftmul+3,w
 12816  0839  00AA               	movwf	i1___ftmul@exp
 12817  083A  082A               	movf	i1___ftmul@exp,w
 12818  083B  1D03               	btfss	3,2
 12819  083C  2844               	goto	i1l5006
 12820  083D  3000               	movlw	0
 12821  083E  00A0               	movwf	?i1___ftmul
 12822  083F  3000               	movlw	0
 12823  0840  00A1               	movwf	?i1___ftmul+1
 12824  0841  3000               	movlw	0
 12825  0842  00A2               	movwf	?i1___ftmul+2
 12826  0843  0008               	return
 12827  0844                     i1l5006:	
 12828  0844  0823               	movf	i1___ftmul@f2,w
 12829  0845  00A6               	movwf	??i1___ftmul
 12830  0846  0824               	movf	i1___ftmul@f2+1,w
 12831  0847  00A7               	movwf	??i1___ftmul+1
 12832  0848  0825               	movf	i1___ftmul@f2+2,w
 12833  0849  00A8               	movwf	??i1___ftmul+2
 12834  084A  1003               	clrc
 12835  084B  0D27               	rlf	??i1___ftmul+1,w
 12836  084C  0D28               	rlf	??i1___ftmul+2,w
 12837  084D  00A9               	movwf	??i1___ftmul+3
 12838  084E  0829               	movf	??i1___ftmul+3,w
 12839  084F  00AF               	movwf	i1___ftmul@sign
 12840  0850  082F               	movf	i1___ftmul@sign,w
 12841  0851  1D03               	btfss	3,2
 12842  0852  285A               	goto	i1l5012
 12843  0853  3000               	movlw	0
 12844  0854  00A0               	movwf	?i1___ftmul
 12845  0855  3000               	movlw	0
 12846  0856  00A1               	movwf	?i1___ftmul+1
 12847  0857  3000               	movlw	0
 12848  0858  00A2               	movwf	?i1___ftmul+2
 12849  0859  0008               	return
 12850  085A                     i1l5012:	
 12851  085A  082F               	movf	i1___ftmul@sign,w
 12852  085B  3E7B               	addlw	123
 12853  085C  00A6               	movwf	??i1___ftmul
 12854  085D  0826               	movf	??i1___ftmul,w
 12855  085E  07AA               	addwf	i1___ftmul@exp,f
 12856  085F  0820               	movf	i1___ftmul@f1,w
 12857  0860  00A6               	movwf	??i1___ftmul
 12858  0861  0821               	movf	i1___ftmul@f1+1,w
 12859  0862  00A7               	movwf	??i1___ftmul+1
 12860  0863  0822               	movf	i1___ftmul@f1+2,w
 12861  0864  00A8               	movwf	??i1___ftmul+2
 12862  0865  3010               	movlw	16
 12863  0866                     u709_25:	
 12864  0866  36A8               	lsrf	??i1___ftmul+2,f
 12865  0867  0CA7               	rrf	??i1___ftmul+1,f
 12866  0868  0CA6               	rrf	??i1___ftmul,f
 12867  0869  0B89               	decfsz	9,f
 12868  086A  2866               	goto	u709_25
 12869  086B  0826               	movf	??i1___ftmul,w
 12870  086C  00A9               	movwf	??i1___ftmul+3
 12871  086D  0829               	movf	??i1___ftmul+3,w
 12872  086E  00AF               	movwf	i1___ftmul@sign
 12873  086F  0823               	movf	i1___ftmul@f2,w
 12874  0870  00A6               	movwf	??i1___ftmul
 12875  0871  0824               	movf	i1___ftmul@f2+1,w
 12876  0872  00A7               	movwf	??i1___ftmul+1
 12877  0873  0825               	movf	i1___ftmul@f2+2,w
 12878  0874  00A8               	movwf	??i1___ftmul+2
 12879  0875  3010               	movlw	16
 12880  0876                     u710_25:	
 12881  0876  36A8               	lsrf	??i1___ftmul+2,f
 12882  0877  0CA7               	rrf	??i1___ftmul+1,f
 12883  0878  0CA6               	rrf	??i1___ftmul,f
 12884  0879  0B89               	decfsz	9,f
 12885  087A  2876               	goto	u710_25
 12886  087B  0826               	movf	??i1___ftmul,w
 12887  087C  00A9               	movwf	??i1___ftmul+3
 12888  087D  0829               	movf	??i1___ftmul+3,w
 12889  087E  06AF               	xorwf	i1___ftmul@sign,f
 12890  087F  3080               	movlw	128
 12891  0880  00A6               	movwf	??i1___ftmul
 12892  0881  0826               	movf	??i1___ftmul,w
 12893  0882  05AF               	andwf	i1___ftmul@sign,f
 12894  0883  17A1               	bsf	i1___ftmul@f1+1,7
 12895  0884  17A4               	bsf	i1___ftmul@f2+1,7
 12896  0885  30FF               	movlw	255
 12897  0886  05A3               	andwf	i1___ftmul@f2,f
 12898  0887  30FF               	movlw	255
 12899  0888  05A4               	andwf	i1___ftmul@f2+1,f
 12900  0889  3000               	movlw	0
 12901  088A  05A5               	andwf	i1___ftmul@f2+2,f
 12902  088B  3000               	movlw	0
 12903  088C  00AB               	movwf	i1___ftmul@f3_as_product
 12904  088D  3000               	movlw	0
 12905  088E  00AC               	movwf	i1___ftmul@f3_as_product+1
 12906  088F  3000               	movlw	0
 12907  0890  00AD               	movwf	i1___ftmul@f3_as_product+2
 12908  0891  3007               	movlw	7
 12909  0892  00A6               	movwf	??i1___ftmul
 12910  0893  0826               	movf	??i1___ftmul,w
 12911  0894  00AE               	movwf	i1___ftmul@cntr
 12912  0895                     i1l5024:	
 12913  0895  1C20               	btfss	i1___ftmul@f1,0
 12914  0896  289D               	goto	i1l5028
 12915  0897  0823               	movf	i1___ftmul@f2,w
 12916  0898  07AB               	addwf	i1___ftmul@f3_as_product,f
 12917  0899  0824               	movf	i1___ftmul@f2+1,w
 12918  089A  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12919  089B  0825               	movf	i1___ftmul@f2+2,w
 12920  089C  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12921  089D                     i1l5028:	
 12922  089D  3001               	movlw	1
 12923  089E                     u712_25:	
 12924  089E  36A2               	lsrf	i1___ftmul@f1+2,f
 12925  089F  0CA1               	rrf	i1___ftmul@f1+1,f
 12926  08A0  0CA0               	rrf	i1___ftmul@f1,f
 12927  08A1  0B89               	decfsz	9,f
 12928  08A2  289E               	goto	u712_25
 12929  08A3  3001               	movlw	1
 12930  08A4                     u713_25:	
 12931  08A4  35A3               	lslf	i1___ftmul@f2,f
 12932  08A5  0DA4               	rlf	i1___ftmul@f2+1,f
 12933  08A6  0DA5               	rlf	i1___ftmul@f2+2,f
 12934  08A7  0B89               	decfsz	9,f
 12935  08A8  28A4               	goto	u713_25
 12936  08A9  3001               	movlw	1
 12937  08AA  02AE               	subwf	i1___ftmul@cntr,f
 12938  08AB  1D03               	btfss	3,2
 12939  08AC  2895               	goto	i1l5024
 12940  08AD  3009               	movlw	9
 12941  08AE  00A6               	movwf	??i1___ftmul
 12942  08AF  0826               	movf	??i1___ftmul,w
 12943  08B0  00AE               	movwf	i1___ftmul@cntr
 12944  08B1                     i1l5036:	
 12945  08B1  1C20               	btfss	i1___ftmul@f1,0
 12946  08B2  28B9               	goto	i1l5040
 12947  08B3  0823               	movf	i1___ftmul@f2,w
 12948  08B4  07AB               	addwf	i1___ftmul@f3_as_product,f
 12949  08B5  0824               	movf	i1___ftmul@f2+1,w
 12950  08B6  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12951  08B7  0825               	movf	i1___ftmul@f2+2,w
 12952  08B8  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12953  08B9                     i1l5040:	
 12954  08B9  3001               	movlw	1
 12955  08BA                     u716_25:	
 12956  08BA  36A2               	lsrf	i1___ftmul@f1+2,f
 12957  08BB  0CA1               	rrf	i1___ftmul@f1+1,f
 12958  08BC  0CA0               	rrf	i1___ftmul@f1,f
 12959  08BD  0B89               	decfsz	9,f
 12960  08BE  28BA               	goto	u716_25
 12961  08BF  3001               	movlw	1
 12962  08C0                     u717_25:	
 12963  08C0  36AD               	lsrf	i1___ftmul@f3_as_product+2,f
 12964  08C1  0CAC               	rrf	i1___ftmul@f3_as_product+1,f
 12965  08C2  0CAB               	rrf	i1___ftmul@f3_as_product,f
 12966  08C3  0B89               	decfsz	9,f
 12967  08C4  28C0               	goto	u717_25
 12968  08C5  3001               	movlw	1
 12969  08C6  02AE               	subwf	i1___ftmul@cntr,f
 12970  08C7  1D03               	btfss	3,2
 12971  08C8  28B1               	goto	i1l5036
 12972  08C9  082B               	movf	i1___ftmul@f3_as_product,w
 12973  08CA  00F0               	movwf	i1___ftpack@arg
 12974  08CB  082C               	movf	i1___ftmul@f3_as_product+1,w
 12975  08CC  00F1               	movwf	i1___ftpack@arg+1
 12976  08CD  082D               	movf	i1___ftmul@f3_as_product+2,w
 12977  08CE  00F2               	movwf	i1___ftpack@arg+2
 12978  08CF  082A               	movf	i1___ftmul@exp,w
 12979  08D0  00A6               	movwf	??i1___ftmul
 12980  08D1  0826               	movf	??i1___ftmul,w
 12981  08D2  00F3               	movwf	i1___ftpack@exp
 12982  08D3  082F               	movf	i1___ftmul@sign,w
 12983  08D4  00A7               	movwf	??i1___ftmul+1
 12984  08D5  0827               	movf	??i1___ftmul+1,w
 12985  08D6  00F4               	movwf	i1___ftpack@sign
 12986  08D7  319B  238D         	fcall	i1___ftpack
 12987  08D9  0870               	movf	?i1___ftpack,w
 12988  08DA  0020               	movlb	0	; select bank0
 12989  08DB  00A0               	movwf	?i1___ftmul
 12990  08DC  0871               	movf	?i1___ftpack+1,w
 12991  08DD  00A1               	movwf	?i1___ftmul+1
 12992  08DE  0872               	movf	?i1___ftpack+2,w
 12993  08DF  00A2               	movwf	?i1___ftmul+2
 12994  08E0  0008               	return
 12995  08E1                     __end_ofi1___ftmul:	
 12996                           
 12997                           	psect	text41
 12998  1F57                     __ptext41:	
 12999 ;; *************** function i1___ftdiv *****************
 13000 ;; Defined at:
 13001 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 13002 ;; Parameters:    Size  Location     Type
 13003 ;;  f2              3    0[BANK0 ] float 
 13004 ;;  f1              3    3[BANK0 ] float 
 13005 ;; Auto vars:     Size  Location     Type
 13006 ;;  __ftdiv         3   11[BANK0 ] float 
 13007 ;;  __ftdiv         1   15[BANK0 ] unsigned char 
 13008 ;;  __ftdiv         1   14[BANK0 ] unsigned char 
 13009 ;;  __ftdiv         1   10[BANK0 ] unsigned char 
 13010 ;; Return value:  Size  Location     Type
 13011 ;;                  3    0[BANK0 ] float 
 13012 ;; Registers used:
 13013 ;;		wreg, status,2, status,0, pclath, cstack
 13014 ;; Tracked objects:
 13015 ;;		On entry : 0/0
 13016 ;;		On exit  : 0/0
 13017 ;;		Unchanged: 0/0
 13018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13019 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13020 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13021 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13022 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13023 ;;Total ram usage:       16 bytes
 13024 ;; Hardware stack levels used:    1
 13025 ;; Hardware stack levels required when called:    1
 13026 ;; This function calls:
 13027 ;;		i1___ftpack
 13028 ;; This function is called by:
 13029 ;;		_ISR_Function
 13030 ;; This function uses a non-reentrant model
 13031 ;;
 13032                           
 13033                           
 13034                           ;psect for function i1___ftdiv
 13035  1F57                     i1___ftdiv:	
 13036                           
 13037                           ;incstack = 0
 13038                           ; Regs used in i1___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 13039  1F57  0020               	movlb	0	; select bank0
 13040  1F58  0823               	movf	i1___ftdiv@f1,w
 13041  1F59  00A6               	movwf	??i1___ftdiv
 13042  1F5A  0824               	movf	i1___ftdiv@f1+1,w
 13043  1F5B  00A7               	movwf	??i1___ftdiv+1
 13044  1F5C  0825               	movf	i1___ftdiv@f1+2,w
 13045  1F5D  00A8               	movwf	??i1___ftdiv+2
 13046  1F5E  1003               	clrc
 13047  1F5F  0D27               	rlf	??i1___ftdiv+1,w
 13048  1F60  0D28               	rlf	??i1___ftdiv+2,w
 13049  1F61  00A9               	movwf	??i1___ftdiv+3
 13050  1F62  0829               	movf	??i1___ftdiv+3,w
 13051  1F63  00AE               	movwf	i1___ftdiv@exp
 13052  1F64  082E               	movf	i1___ftdiv@exp,w
 13053  1F65  1D03               	btfss	3,2
 13054  1F66  2F6E               	goto	i1l4964
 13055  1F67  3000               	movlw	0
 13056  1F68  00A0               	movwf	?i1___ftdiv
 13057  1F69  3000               	movlw	0
 13058  1F6A  00A1               	movwf	?i1___ftdiv+1
 13059  1F6B  3000               	movlw	0
 13060  1F6C  00A2               	movwf	?i1___ftdiv+2
 13061  1F6D  0008               	return
 13062  1F6E                     i1l4964:	
 13063  1F6E  0820               	movf	i1___ftdiv@f2,w
 13064  1F6F  00A6               	movwf	??i1___ftdiv
 13065  1F70  0821               	movf	i1___ftdiv@f2+1,w
 13066  1F71  00A7               	movwf	??i1___ftdiv+1
 13067  1F72  0822               	movf	i1___ftdiv@f2+2,w
 13068  1F73  00A8               	movwf	??i1___ftdiv+2
 13069  1F74  1003               	clrc
 13070  1F75  0D27               	rlf	??i1___ftdiv+1,w
 13071  1F76  0D28               	rlf	??i1___ftdiv+2,w
 13072  1F77  00A9               	movwf	??i1___ftdiv+3
 13073  1F78  0829               	movf	??i1___ftdiv+3,w
 13074  1F79  00AF               	movwf	i1___ftdiv@sign
 13075  1F7A  082F               	movf	i1___ftdiv@sign,w
 13076  1F7B  1D03               	btfss	3,2
 13077  1F7C  2F84               	goto	i1l4970
 13078  1F7D  3000               	movlw	0
 13079  1F7E  00A0               	movwf	?i1___ftdiv
 13080  1F7F  3000               	movlw	0
 13081  1F80  00A1               	movwf	?i1___ftdiv+1
 13082  1F81  3000               	movlw	0
 13083  1F82  00A2               	movwf	?i1___ftdiv+2
 13084  1F83  0008               	return
 13085  1F84                     i1l4970:	
 13086  1F84  3000               	movlw	0
 13087  1F85  00AB               	movwf	i1___ftdiv@f3
 13088  1F86  3000               	movlw	0
 13089  1F87  00AC               	movwf	i1___ftdiv@f3+1
 13090  1F88  3000               	movlw	0
 13091  1F89  00AD               	movwf	i1___ftdiv@f3+2
 13092  1F8A  3089               	movlw	137
 13093  1F8B  072F               	addwf	i1___ftdiv@sign,w
 13094  1F8C  00A6               	movwf	??i1___ftdiv
 13095  1F8D  0826               	movf	??i1___ftdiv,w
 13096  1F8E  02AE               	subwf	i1___ftdiv@exp,f
 13097  1F8F  0823               	movf	i1___ftdiv@f1,w
 13098  1F90  00A6               	movwf	??i1___ftdiv
 13099  1F91  0824               	movf	i1___ftdiv@f1+1,w
 13100  1F92  00A7               	movwf	??i1___ftdiv+1
 13101  1F93  0825               	movf	i1___ftdiv@f1+2,w
 13102  1F94  00A8               	movwf	??i1___ftdiv+2
 13103  1F95  3010               	movlw	16
 13104  1F96                     u701_25:	
 13105  1F96  36A8               	lsrf	??i1___ftdiv+2,f
 13106  1F97  0CA7               	rrf	??i1___ftdiv+1,f
 13107  1F98  0CA6               	rrf	??i1___ftdiv,f
 13108  1F99  0B89               	decfsz	9,f
 13109  1F9A  2F96               	goto	u701_25
 13110  1F9B  0826               	movf	??i1___ftdiv,w
 13111  1F9C  00A9               	movwf	??i1___ftdiv+3
 13112  1F9D  0829               	movf	??i1___ftdiv+3,w
 13113  1F9E  00AF               	movwf	i1___ftdiv@sign
 13114  1F9F  0820               	movf	i1___ftdiv@f2,w
 13115  1FA0  00A6               	movwf	??i1___ftdiv
 13116  1FA1  0821               	movf	i1___ftdiv@f2+1,w
 13117  1FA2  00A7               	movwf	??i1___ftdiv+1
 13118  1FA3  0822               	movf	i1___ftdiv@f2+2,w
 13119  1FA4  00A8               	movwf	??i1___ftdiv+2
 13120  1FA5  3010               	movlw	16
 13121  1FA6                     u702_25:	
 13122  1FA6  36A8               	lsrf	??i1___ftdiv+2,f
 13123  1FA7  0CA7               	rrf	??i1___ftdiv+1,f
 13124  1FA8  0CA6               	rrf	??i1___ftdiv,f
 13125  1FA9  0B89               	decfsz	9,f
 13126  1FAA  2FA6               	goto	u702_25
 13127  1FAB  0826               	movf	??i1___ftdiv,w
 13128  1FAC  00A9               	movwf	??i1___ftdiv+3
 13129  1FAD  0829               	movf	??i1___ftdiv+3,w
 13130  1FAE  06AF               	xorwf	i1___ftdiv@sign,f
 13131  1FAF  3080               	movlw	128
 13132  1FB0  00A6               	movwf	??i1___ftdiv
 13133  1FB1  0826               	movf	??i1___ftdiv,w
 13134  1FB2  05AF               	andwf	i1___ftdiv@sign,f
 13135  1FB3  17A4               	bsf	i1___ftdiv@f1+1,7
 13136  1FB4  30FF               	movlw	255
 13137  1FB5  05A3               	andwf	i1___ftdiv@f1,f
 13138  1FB6  30FF               	movlw	255
 13139  1FB7  05A4               	andwf	i1___ftdiv@f1+1,f
 13140  1FB8  3000               	movlw	0
 13141  1FB9  05A5               	andwf	i1___ftdiv@f1+2,f
 13142  1FBA  17A1               	bsf	i1___ftdiv@f2+1,7
 13143  1FBB  30FF               	movlw	255
 13144  1FBC  05A0               	andwf	i1___ftdiv@f2,f
 13145  1FBD  30FF               	movlw	255
 13146  1FBE  05A1               	andwf	i1___ftdiv@f2+1,f
 13147  1FBF  3000               	movlw	0
 13148  1FC0  05A2               	andwf	i1___ftdiv@f2+2,f
 13149  1FC1  3018               	movlw	24
 13150  1FC2  00A6               	movwf	??i1___ftdiv
 13151  1FC3  0826               	movf	??i1___ftdiv,w
 13152  1FC4  00AA               	movwf	i1___ftdiv@cntr
 13153  1FC5                     i1l4984:	
 13154  1FC5  3001               	movlw	1
 13155  1FC6                     u703_25:	
 13156  1FC6  35AB               	lslf	i1___ftdiv@f3,f
 13157  1FC7  0DAC               	rlf	i1___ftdiv@f3+1,f
 13158  1FC8  0DAD               	rlf	i1___ftdiv@f3+2,f
 13159  1FC9  0B89               	decfsz	9,f
 13160  1FCA  2FC6               	goto	u703_25
 13161  1FCB  0822               	movf	i1___ftdiv@f2+2,w
 13162  1FCC  0225               	subwf	i1___ftdiv@f1+2,w
 13163  1FCD  1D03               	skipz
 13164  1FCE  2FD5               	goto	u704_25
 13165  1FCF  0821               	movf	i1___ftdiv@f2+1,w
 13166  1FD0  0224               	subwf	i1___ftdiv@f1+1,w
 13167  1FD1  1D03               	skipz
 13168  1FD2  2FD5               	goto	u704_25
 13169  1FD3  0820               	movf	i1___ftdiv@f2,w
 13170  1FD4  0223               	subwf	i1___ftdiv@f1,w
 13171  1FD5                     u704_25:	
 13172  1FD5  1C03               	skipc
 13173  1FD6  2FDE               	goto	i1l4992
 13174  1FD7  0820               	movf	i1___ftdiv@f2,w
 13175  1FD8  02A3               	subwf	i1___ftdiv@f1,f
 13176  1FD9  0821               	movf	i1___ftdiv@f2+1,w
 13177  1FDA  3BA4               	subwfb	i1___ftdiv@f1+1,f
 13178  1FDB  0822               	movf	i1___ftdiv@f2+2,w
 13179  1FDC  3BA5               	subwfb	i1___ftdiv@f1+2,f
 13180  1FDD  142B               	bsf	i1___ftdiv@f3,0
 13181  1FDE                     i1l4992:	
 13182  1FDE  3001               	movlw	1
 13183  1FDF                     u705_25:	
 13184  1FDF  35A3               	lslf	i1___ftdiv@f1,f
 13185  1FE0  0DA4               	rlf	i1___ftdiv@f1+1,f
 13186  1FE1  0DA5               	rlf	i1___ftdiv@f1+2,f
 13187  1FE2  0B89               	decfsz	9,f
 13188  1FE3  2FDF               	goto	u705_25
 13189  1FE4  3001               	movlw	1
 13190  1FE5  02AA               	subwf	i1___ftdiv@cntr,f
 13191  1FE6  1D03               	btfss	3,2
 13192  1FE7  2FC5               	goto	i1l4984
 13193  1FE8  082B               	movf	i1___ftdiv@f3,w
 13194  1FE9  00F0               	movwf	i1___ftpack@arg
 13195  1FEA  082C               	movf	i1___ftdiv@f3+1,w
 13196  1FEB  00F1               	movwf	i1___ftpack@arg+1
 13197  1FEC  082D               	movf	i1___ftdiv@f3+2,w
 13198  1FED  00F2               	movwf	i1___ftpack@arg+2
 13199  1FEE  082E               	movf	i1___ftdiv@exp,w
 13200  1FEF  00A6               	movwf	??i1___ftdiv
 13201  1FF0  0826               	movf	??i1___ftdiv,w
 13202  1FF1  00F3               	movwf	i1___ftpack@exp
 13203  1FF2  082F               	movf	i1___ftdiv@sign,w
 13204  1FF3  00A7               	movwf	??i1___ftdiv+1
 13205  1FF4  0827               	movf	??i1___ftdiv+1,w
 13206  1FF5  00F4               	movwf	i1___ftpack@sign
 13207  1FF6  319B  238D         	fcall	i1___ftpack
 13208  1FF8  0870               	movf	?i1___ftpack,w
 13209  1FF9  0020               	movlb	0	; select bank0
 13210  1FFA  00A0               	movwf	?i1___ftdiv
 13211  1FFB  0871               	movf	?i1___ftpack+1,w
 13212  1FFC  00A1               	movwf	?i1___ftdiv+1
 13213  1FFD  0872               	movf	?i1___ftpack+2,w
 13214  1FFE  00A2               	movwf	?i1___ftdiv+2
 13215  1FFF  0008               	return
 13216  2000                     __end_ofi1___ftdiv:	
 13217                           
 13218                           	psect	text42
 13219  1168                     __ptext42:	
 13220 ;; *************** function i1___ftadd *****************
 13221 ;; Defined at:
 13222 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 13223 ;; Parameters:    Size  Location     Type
 13224 ;;  f1              3   16[BANK0 ] float 
 13225 ;;  f2              3   19[BANK0 ] float 
 13226 ;; Auto vars:     Size  Location     Type
 13227 ;;  __ftadd         1   28[BANK0 ] unsigned char 
 13228 ;;  __ftadd         1   27[BANK0 ] unsigned char 
 13229 ;;  __ftadd         1   26[BANK0 ] unsigned char 
 13230 ;; Return value:  Size  Location     Type
 13231 ;;                  3   16[BANK0 ] float 
 13232 ;; Registers used:
 13233 ;;		wreg, status,2, status,0, pclath, cstack
 13234 ;; Tracked objects:
 13235 ;;		On entry : 0/0
 13236 ;;		On exit  : 0/0
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13239 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13240 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13241 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13242 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13243 ;;Total ram usage:       13 bytes
 13244 ;; Hardware stack levels used:    1
 13245 ;; Hardware stack levels required when called:    1
 13246 ;; This function calls:
 13247 ;;		i1___ftpack
 13248 ;; This function is called by:
 13249 ;;		_ISR_Function
 13250 ;; This function uses a non-reentrant model
 13251 ;;
 13252                           
 13253                           
 13254                           ;psect for function i1___ftadd
 13255  1168                     i1___ftadd:	
 13256                           
 13257                           ;incstack = 0
 13258                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
 13259  1168  0020               	movlb	0	; select bank0
 13260  1169  0830               	movf	i1___ftadd@f1,w
 13261  116A  00B6               	movwf	??i1___ftadd
 13262  116B  0831               	movf	i1___ftadd@f1+1,w
 13263  116C  00B7               	movwf	??i1___ftadd+1
 13264  116D  0832               	movf	i1___ftadd@f1+2,w
 13265  116E  00B8               	movwf	??i1___ftadd+2
 13266  116F  1003               	clrc
 13267  1170  0D37               	rlf	??i1___ftadd+1,w
 13268  1171  0D38               	rlf	??i1___ftadd+2,w
 13269  1172  00B9               	movwf	??i1___ftadd+3
 13270  1173  0839               	movf	??i1___ftadd+3,w
 13271  1174  00BC               	movwf	i1___ftadd@exp1
 13272  1175  0833               	movf	i1___ftadd@f2,w
 13273  1176  00B6               	movwf	??i1___ftadd
 13274  1177  0834               	movf	i1___ftadd@f2+1,w
 13275  1178  00B7               	movwf	??i1___ftadd+1
 13276  1179  0835               	movf	i1___ftadd@f2+2,w
 13277  117A  00B8               	movwf	??i1___ftadd+2
 13278  117B  1003               	clrc
 13279  117C  0D37               	rlf	??i1___ftadd+1,w
 13280  117D  0D38               	rlf	??i1___ftadd+2,w
 13281  117E  00B9               	movwf	??i1___ftadd+3
 13282  117F  0839               	movf	??i1___ftadd+3,w
 13283  1180  00BB               	movwf	i1___ftadd@exp2
 13284  1181  083C               	movf	i1___ftadd@exp1,w
 13285  1182  1903               	btfsc	3,2
 13286  1183  2990               	goto	i1l4894
 13287  1184  083B               	movf	i1___ftadd@exp2,w
 13288  1185  023C               	subwf	i1___ftadd@exp1,w
 13289  1186  1803               	skipnc
 13290  1187  2997               	goto	i1l4898
 13291  1188  033C               	decf	i1___ftadd@exp1,w
 13292  1189  3AFF               	xorlw	255
 13293  118A  073B               	addwf	i1___ftadd@exp2,w
 13294  118B  00B6               	movwf	??i1___ftadd
 13295  118C  3019               	movlw	25
 13296  118D  0236               	subwf	??i1___ftadd,w
 13297  118E  1C03               	skipc
 13298  118F  2997               	goto	i1l4898
 13299  1190                     i1l4894:	
 13300  1190  0833               	movf	i1___ftadd@f2,w
 13301  1191  00B0               	movwf	?i1___ftadd
 13302  1192  0834               	movf	i1___ftadd@f2+1,w
 13303  1193  00B1               	movwf	?i1___ftadd+1
 13304  1194  0835               	movf	i1___ftadd@f2+2,w
 13305  1195  00B2               	movwf	?i1___ftadd+2
 13306  1196  0008               	return
 13307  1197                     i1l4898:	
 13308  1197  083B               	movf	i1___ftadd@exp2,w
 13309  1198  1903               	btfsc	3,2
 13310  1199  0008               	return
 13311  119A  083C               	movf	i1___ftadd@exp1,w
 13312  119B  023B               	subwf	i1___ftadd@exp2,w
 13313  119C  1803               	skipnc
 13314  119D  29A6               	goto	i1l4904
 13315  119E  033B               	decf	i1___ftadd@exp2,w
 13316  119F  3AFF               	xorlw	255
 13317  11A0  073C               	addwf	i1___ftadd@exp1,w
 13318  11A1  00B6               	movwf	??i1___ftadd
 13319  11A2  3019               	movlw	25
 13320  11A3  0236               	subwf	??i1___ftadd,w
 13321  11A4  1803               	btfsc	3,0
 13322  11A5  0008               	return
 13323  11A6                     i1l4904:	
 13324  11A6  3006               	movlw	6
 13325  11A7  00B6               	movwf	??i1___ftadd
 13326  11A8  0836               	movf	??i1___ftadd,w
 13327  11A9  00BA               	movwf	i1___ftadd@sign
 13328  11AA  1BB2               	btfsc	i1___ftadd@f1+2,7
 13329  11AB  17BA               	bsf	i1___ftadd@sign,7
 13330  11AC  1BB5               	btfsc	i1___ftadd@f2+2,7
 13331  11AD  173A               	bsf	i1___ftadd@sign,6
 13332  11AE  17B1               	bsf	i1___ftadd@f1+1,7
 13333  11AF  30FF               	movlw	255
 13334  11B0  05B0               	andwf	i1___ftadd@f1,f
 13335  11B1  30FF               	movlw	255
 13336  11B2  05B1               	andwf	i1___ftadd@f1+1,f
 13337  11B3  3000               	movlw	0
 13338  11B4  05B2               	andwf	i1___ftadd@f1+2,f
 13339  11B5  17B4               	bsf	i1___ftadd@f2+1,7
 13340  11B6  30FF               	movlw	255
 13341  11B7  05B3               	andwf	i1___ftadd@f2,f
 13342  11B8  30FF               	movlw	255
 13343  11B9  05B4               	andwf	i1___ftadd@f2+1,f
 13344  11BA  3000               	movlw	0
 13345  11BB  05B5               	andwf	i1___ftadd@f2+2,f
 13346  11BC  083B               	movf	i1___ftadd@exp2,w
 13347  11BD  023C               	subwf	i1___ftadd@exp1,w
 13348  11BE  1803               	skipnc
 13349  11BF  29E2               	goto	i1l4926
 13350  11C0                     i1l4916:	
 13351  11C0  3001               	movlw	1
 13352  11C1                     u685_25:	
 13353  11C1  35B3               	lslf	i1___ftadd@f2,f
 13354  11C2  0DB4               	rlf	i1___ftadd@f2+1,f
 13355  11C3  0DB5               	rlf	i1___ftadd@f2+2,f
 13356  11C4  0B89               	decfsz	9,f
 13357  11C5  29C1               	goto	u685_25
 13358  11C6  3001               	movlw	1
 13359  11C7  02BB               	subwf	i1___ftadd@exp2,f
 13360  11C8  083B               	movf	i1___ftadd@exp2,w
 13361  11C9  063C               	xorwf	i1___ftadd@exp1,w
 13362  11CA  1903               	skipnz
 13363  11CB  29DD               	goto	i1l4924
 13364  11CC  3001               	movlw	1
 13365  11CD  02BA               	subwf	i1___ftadd@sign,f
 13366  11CE  083A               	movf	i1___ftadd@sign,w
 13367  11CF  3907               	andlw	7
 13368  11D0  1903               	btfsc	3,2
 13369  11D1  29DD               	goto	i1l4924
 13370  11D2  29C0               	goto	i1l4916
 13371  11D3                     i1l4922:	
 13372  11D3  3001               	movlw	1
 13373  11D4                     u688_25:	
 13374  11D4  36B2               	lsrf	i1___ftadd@f1+2,f
 13375  11D5  0CB1               	rrf	i1___ftadd@f1+1,f
 13376  11D6  0CB0               	rrf	i1___ftadd@f1,f
 13377  11D7  0B89               	decfsz	9,f
 13378  11D8  29D4               	goto	u688_25
 13379  11D9  3001               	movlw	1
 13380  11DA  00B6               	movwf	??i1___ftadd
 13381  11DB  0836               	movf	??i1___ftadd,w
 13382  11DC  07BC               	addwf	i1___ftadd@exp1,f
 13383  11DD                     i1l4924:	
 13384  11DD  083C               	movf	i1___ftadd@exp1,w
 13385  11DE  063B               	xorwf	i1___ftadd@exp2,w
 13386  11DF  1903               	btfsc	3,2
 13387  11E0  2A07               	goto	i1l1154
 13388  11E1  29D3               	goto	i1l4922
 13389  11E2                     i1l4926:	
 13390  11E2  083C               	movf	i1___ftadd@exp1,w
 13391  11E3  023B               	subwf	i1___ftadd@exp2,w
 13392  11E4  1803               	skipnc
 13393  11E5  2A07               	goto	i1l1154
 13394  11E6                     i1l4928:	
 13395  11E6  3001               	movlw	1
 13396  11E7                     u691_25:	
 13397  11E7  35B0               	lslf	i1___ftadd@f1,f
 13398  11E8  0DB1               	rlf	i1___ftadd@f1+1,f
 13399  11E9  0DB2               	rlf	i1___ftadd@f1+2,f
 13400  11EA  0B89               	decfsz	9,f
 13401  11EB  29E7               	goto	u691_25
 13402  11EC  3001               	movlw	1
 13403  11ED  02BC               	subwf	i1___ftadd@exp1,f
 13404  11EE  083B               	movf	i1___ftadd@exp2,w
 13405  11EF  063C               	xorwf	i1___ftadd@exp1,w
 13406  11F0  1903               	skipnz
 13407  11F1  2A03               	goto	i1l4936
 13408  11F2  3001               	movlw	1
 13409  11F3  02BA               	subwf	i1___ftadd@sign,f
 13410  11F4  083A               	movf	i1___ftadd@sign,w
 13411  11F5  3907               	andlw	7
 13412  11F6  1903               	btfsc	3,2
 13413  11F7  2A03               	goto	i1l4936
 13414  11F8  29E6               	goto	i1l4928
 13415  11F9                     i1l4934:	
 13416  11F9  3001               	movlw	1
 13417  11FA                     u694_25:	
 13418  11FA  36B5               	lsrf	i1___ftadd@f2+2,f
 13419  11FB  0CB4               	rrf	i1___ftadd@f2+1,f
 13420  11FC  0CB3               	rrf	i1___ftadd@f2,f
 13421  11FD  0B89               	decfsz	9,f
 13422  11FE  29FA               	goto	u694_25
 13423  11FF  3001               	movlw	1
 13424  1200  00B6               	movwf	??i1___ftadd
 13425  1201  0836               	movf	??i1___ftadd,w
 13426  1202  07BB               	addwf	i1___ftadd@exp2,f
 13427  1203                     i1l4936:	
 13428  1203  083C               	movf	i1___ftadd@exp1,w
 13429  1204  063B               	xorwf	i1___ftadd@exp2,w
 13430  1205  1D03               	skipz
 13431  1206  29F9               	goto	i1l4934
 13432  1207                     i1l1154:	
 13433  1207  1FBA               	btfss	i1___ftadd@sign,7
 13434  1208  2A19               	goto	i1l4940
 13435  1209  30FF               	movlw	255
 13436  120A  06B0               	xorwf	i1___ftadd@f1,f
 13437  120B  30FF               	movlw	255
 13438  120C  06B1               	xorwf	i1___ftadd@f1+1,f
 13439  120D  30FF               	movlw	255
 13440  120E  06B2               	xorwf	i1___ftadd@f1+2,f
 13441  120F  3001               	movlw	1
 13442  1210  07B0               	addwf	i1___ftadd@f1,f
 13443  1211  3000               	movlw	0
 13444  1212  1803               	skipnc
 13445  1213  3001               	movlw	1
 13446  1214  07B1               	addwf	i1___ftadd@f1+1,f
 13447  1215  3000               	movlw	0
 13448  1216  1803               	skipnc
 13449  1217  3001               	movlw	1
 13450  1218  07B2               	addwf	i1___ftadd@f1+2,f
 13451  1219                     i1l4940:	
 13452  1219  1F3A               	btfss	i1___ftadd@sign,6
 13453  121A  2A2B               	goto	i1l4944
 13454  121B  30FF               	movlw	255
 13455  121C  06B3               	xorwf	i1___ftadd@f2,f
 13456  121D  30FF               	movlw	255
 13457  121E  06B4               	xorwf	i1___ftadd@f2+1,f
 13458  121F  30FF               	movlw	255
 13459  1220  06B5               	xorwf	i1___ftadd@f2+2,f
 13460  1221  3001               	movlw	1
 13461  1222  07B3               	addwf	i1___ftadd@f2,f
 13462  1223  3000               	movlw	0
 13463  1224  1803               	skipnc
 13464  1225  3001               	movlw	1
 13465  1226  07B4               	addwf	i1___ftadd@f2+1,f
 13466  1227  3000               	movlw	0
 13467  1228  1803               	skipnc
 13468  1229  3001               	movlw	1
 13469  122A  07B5               	addwf	i1___ftadd@f2+2,f
 13470  122B                     i1l4944:	
 13471  122B  01BA               	clrf	i1___ftadd@sign
 13472  122C  0830               	movf	i1___ftadd@f1,w
 13473  122D  07B3               	addwf	i1___ftadd@f2,f
 13474  122E  0831               	movf	i1___ftadd@f1+1,w
 13475  122F  3DB4               	addwfc	i1___ftadd@f2+1,f
 13476  1230  0832               	movf	i1___ftadd@f1+2,w
 13477  1231  3DB5               	addwfc	i1___ftadd@f2+2,f
 13478  1232  1FB5               	btfss	i1___ftadd@f2+2,7
 13479  1233  2A46               	goto	i1l4954
 13480  1234  30FF               	movlw	255
 13481  1235  06B3               	xorwf	i1___ftadd@f2,f
 13482  1236  30FF               	movlw	255
 13483  1237  06B4               	xorwf	i1___ftadd@f2+1,f
 13484  1238  30FF               	movlw	255
 13485  1239  06B5               	xorwf	i1___ftadd@f2+2,f
 13486  123A  3001               	movlw	1
 13487  123B  07B3               	addwf	i1___ftadd@f2,f
 13488  123C  3000               	movlw	0
 13489  123D  1803               	skipnc
 13490  123E  3001               	movlw	1
 13491  123F  07B4               	addwf	i1___ftadd@f2+1,f
 13492  1240  3000               	movlw	0
 13493  1241  1803               	skipnc
 13494  1242  3001               	movlw	1
 13495  1243  07B5               	addwf	i1___ftadd@f2+2,f
 13496  1244  01BA               	clrf	i1___ftadd@sign
 13497  1245  0ABA               	incf	i1___ftadd@sign,f
 13498  1246                     i1l4954:	
 13499  1246  0833               	movf	i1___ftadd@f2,w
 13500  1247  00F0               	movwf	i1___ftpack@arg
 13501  1248  0834               	movf	i1___ftadd@f2+1,w
 13502  1249  00F1               	movwf	i1___ftpack@arg+1
 13503  124A  0835               	movf	i1___ftadd@f2+2,w
 13504  124B  00F2               	movwf	i1___ftpack@arg+2
 13505  124C  083C               	movf	i1___ftadd@exp1,w
 13506  124D  00B6               	movwf	??i1___ftadd
 13507  124E  0836               	movf	??i1___ftadd,w
 13508  124F  00F3               	movwf	i1___ftpack@exp
 13509  1250  083A               	movf	i1___ftadd@sign,w
 13510  1251  00B7               	movwf	??i1___ftadd+1
 13511  1252  0837               	movf	??i1___ftadd+1,w
 13512  1253  00F4               	movwf	i1___ftpack@sign
 13513  1254  319B  238D         	fcall	i1___ftpack
 13514  1256  0870               	movf	?i1___ftpack,w
 13515  1257  0020               	movlb	0	; select bank0
 13516  1258  00B0               	movwf	?i1___ftadd
 13517  1259  0871               	movf	?i1___ftpack+1,w
 13518  125A  00B1               	movwf	?i1___ftadd+1
 13519  125B  0872               	movf	?i1___ftpack+2,w
 13520  125C  00B2               	movwf	?i1___ftadd+2
 13521  125D  0008               	return
 13522  125E                     __end_ofi1___ftadd:	
 13523                           
 13524                           	psect	text43
 13525  1B8D                     __ptext43:	
 13526 ;; *************** function i1___ftpack *****************
 13527 ;; Defined at:
 13528 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 13529 ;; Parameters:    Size  Location     Type
 13530 ;;  arg             3    0[COMMON] unsigned um
 13531 ;;  exp             1    3[COMMON] unsigned char 
 13532 ;;  sign            1    4[COMMON] unsigned char 
 13533 ;; Auto vars:     Size  Location     Type
 13534 ;;		None
 13535 ;; Return value:  Size  Location     Type
 13536 ;;                  3    0[COMMON] float 
 13537 ;; Registers used:
 13538 ;;		wreg, status,2, status,0
 13539 ;; Tracked objects:
 13540 ;;		On entry : 0/0
 13541 ;;		On exit  : 0/0
 13542 ;;		Unchanged: 0/0
 13543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13544 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13546 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13547 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13548 ;;Total ram usage:        8 bytes
 13549 ;; Hardware stack levels used:    1
 13550 ;; This function calls:
 13551 ;;		Nothing
 13552 ;; This function is called by:
 13553 ;;		i1___ftadd
 13554 ;;		i1___ftdiv
 13555 ;;		i1___ftmul
 13556 ;;		i1___lwtoft
 13557 ;; This function uses a non-reentrant model
 13558 ;;
 13559                           
 13560                           
 13561                           ;psect for function i1___ftpack
 13562  1B8D                     i1___ftpack:	
 13563                           
 13564                           ;incstack = 0
 13565                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
 13566  1B8D  0873               	movf	i1___ftpack@exp,w
 13567  1B8E  1903               	btfsc	3,2
 13568  1B8F  2B95               	goto	i1l4158
 13569  1B90  0872               	movf	i1___ftpack@arg+2,w
 13570  1B91  0471               	iorwf	i1___ftpack@arg+1,w
 13571  1B92  0470               	iorwf	i1___ftpack@arg,w
 13572  1B93  1D03               	skipz
 13573  1B94  2BA6               	goto	i1l4164
 13574  1B95                     i1l4158:	
 13575  1B95  3000               	movlw	0
 13576  1B96  00F0               	movwf	?i1___ftpack
 13577  1B97  3000               	movlw	0
 13578  1B98  00F1               	movwf	?i1___ftpack+1
 13579  1B99  3000               	movlw	0
 13580  1B9A  00F2               	movwf	?i1___ftpack+2
 13581  1B9B  0008               	return
 13582  1B9C                     i1l4162:	
 13583  1B9C  3001               	movlw	1
 13584  1B9D  00F5               	movwf	??i1___ftpack
 13585  1B9E  0875               	movf	??i1___ftpack,w
 13586  1B9F  07F3               	addwf	i1___ftpack@exp,f
 13587  1BA0  3001               	movlw	1
 13588  1BA1                     u556_25:	
 13589  1BA1  36F2               	lsrf	i1___ftpack@arg+2,f
 13590  1BA2  0CF1               	rrf	i1___ftpack@arg+1,f
 13591  1BA3  0CF0               	rrf	i1___ftpack@arg,f
 13592  1BA4  0B89               	decfsz	9,f
 13593  1BA5  2BA1               	goto	u556_25
 13594  1BA6                     i1l4164:	
 13595  1BA6  30FE               	movlw	254
 13596  1BA7  0572               	andwf	i1___ftpack@arg+2,w
 13597  1BA8  1903               	btfsc	3,2
 13598  1BA9  2BBF               	goto	i1l1123
 13599  1BAA  2B9C               	goto	i1l4162
 13600  1BAB                     i1l4166:	
 13601  1BAB  3001               	movlw	1
 13602  1BAC  00F5               	movwf	??i1___ftpack
 13603  1BAD  0875               	movf	??i1___ftpack,w
 13604  1BAE  07F3               	addwf	i1___ftpack@exp,f
 13605  1BAF  3001               	movlw	1
 13606  1BB0  07F0               	addwf	i1___ftpack@arg,f
 13607  1BB1  3000               	movlw	0
 13608  1BB2  1803               	skipnc
 13609  1BB3  3001               	movlw	1
 13610  1BB4  07F1               	addwf	i1___ftpack@arg+1,f
 13611  1BB5  3000               	movlw	0
 13612  1BB6  1803               	skipnc
 13613  1BB7  3001               	movlw	1
 13614  1BB8  07F2               	addwf	i1___ftpack@arg+2,f
 13615  1BB9  3001               	movlw	1
 13616  1BBA                     u558_25:	
 13617  1BBA  36F2               	lsrf	i1___ftpack@arg+2,f
 13618  1BBB  0CF1               	rrf	i1___ftpack@arg+1,f
 13619  1BBC  0CF0               	rrf	i1___ftpack@arg,f
 13620  1BBD  0B89               	decfsz	9,f
 13621  1BBE  2BBA               	goto	u558_25
 13622  1BBF                     i1l1123:	
 13623  1BBF  30FF               	movlw	255
 13624  1BC0  0572               	andwf	i1___ftpack@arg+2,w
 13625  1BC1  1903               	btfsc	3,2
 13626  1BC2  2BD0               	goto	i1l4174
 13627  1BC3  2BAB               	goto	i1l4166
 13628  1BC4                     i1l4176:	
 13629  1BC4  3002               	movlw	2
 13630  1BC5  0273               	subwf	i1___ftpack@exp,w
 13631  1BC6  1C03               	btfss	3,0
 13632  1BC7  2BD2               	goto	i1l1130
 13633  1BC8  3001               	movlw	1
 13634  1BC9  02F3               	subwf	i1___ftpack@exp,f
 13635  1BCA  3001               	movlw	1
 13636  1BCB                     u560_25:	
 13637  1BCB  35F0               	lslf	i1___ftpack@arg,f
 13638  1BCC  0DF1               	rlf	i1___ftpack@arg+1,f
 13639  1BCD  0DF2               	rlf	i1___ftpack@arg+2,f
 13640  1BCE  0B89               	decfsz	9,f
 13641  1BCF  2BCB               	goto	u560_25
 13642  1BD0                     i1l4174:	
 13643  1BD0  1FF1               	btfss	i1___ftpack@arg+1,7
 13644  1BD1  2BC4               	goto	i1l4176
 13645  1BD2                     i1l1130:	
 13646  1BD2  1873               	btfsc	i1___ftpack@exp,0
 13647  1BD3  2BDA               	goto	i1l1131
 13648  1BD4  30FF               	movlw	255
 13649  1BD5  05F0               	andwf	i1___ftpack@arg,f
 13650  1BD6  307F               	movlw	127
 13651  1BD7  05F1               	andwf	i1___ftpack@arg+1,f
 13652  1BD8  30FF               	movlw	255
 13653  1BD9  05F2               	andwf	i1___ftpack@arg+2,f
 13654  1BDA                     i1l1131:	
 13655  1BDA  1003               	clrc
 13656  1BDB  0CF3               	rrf	i1___ftpack@exp,f
 13657  1BDC  0873               	movf	i1___ftpack@exp,w
 13658  1BDD  00F5               	movwf	??i1___ftpack
 13659  1BDE  01F6               	clrf	??i1___ftpack+1
 13660  1BDF  01F7               	clrf	??i1___ftpack+2
 13661  1BE0  3010               	movlw	16
 13662  1BE1                     u564_25:	
 13663  1BE1  35F5               	lslf	??i1___ftpack,f
 13664  1BE2  0DF6               	rlf	??i1___ftpack+1,f
 13665  1BE3  0DF7               	rlf	??i1___ftpack+2,f
 13666  1BE4  0B89               	decfsz	9,f
 13667  1BE5  2BE1               	goto	u564_25
 13668  1BE6  0875               	movf	??i1___ftpack,w
 13669  1BE7  04F0               	iorwf	i1___ftpack@arg,f
 13670  1BE8  0876               	movf	??i1___ftpack+1,w
 13671  1BE9  04F1               	iorwf	i1___ftpack@arg+1,f
 13672  1BEA  0877               	movf	??i1___ftpack+2,w
 13673  1BEB  04F2               	iorwf	i1___ftpack@arg+2,f
 13674  1BEC  0874               	movf	i1___ftpack@sign,w
 13675  1BED  1903               	btfsc	3,2
 13676  1BEE  0008               	return
 13677  1BEF  17F2               	bsf	i1___ftpack@arg+2,7
 13678  1BF0  0008               	return
 13679  1BF1                     __end_ofi1___ftpack:	
 13680                           
 13681                           	psect	text44
 13682  1D45                     __ptext44:	
 13683 ;; *************** function i1___aldiv *****************
 13684 ;; Defined at:
 13685 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
 13686 ;; Parameters:    Size  Location     Type
 13687 ;;  divisor         4    0[COMMON] long 
 13688 ;;  dividend        4    4[COMMON] long 
 13689 ;; Auto vars:     Size  Location     Type
 13690 ;;  __aldiv         4    2[BANK0 ] long 
 13691 ;;  __aldiv         1    1[BANK0 ] unsigned char 
 13692 ;;  __aldiv         1    0[BANK0 ] unsigned char 
 13693 ;; Return value:  Size  Location     Type
 13694 ;;                  4    0[COMMON] long 
 13695 ;; Registers used:
 13696 ;;		wreg, status,2, status,0
 13697 ;; Tracked objects:
 13698 ;;		On entry : 0/0
 13699 ;;		On exit  : 0/0
 13700 ;;		Unchanged: 0/0
 13701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13702 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13703 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13705 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13706 ;;Total ram usage:       15 bytes
 13707 ;; Hardware stack levels used:    1
 13708 ;; This function calls:
 13709 ;;		Nothing
 13710 ;; This function is called by:
 13711 ;;		_ISR_Function
 13712 ;; This function uses a non-reentrant model
 13713 ;;
 13714                           
 13715                           
 13716                           ;psect for function i1___aldiv
 13717  1D45                     i1___aldiv:	
 13718                           
 13719                           ;incstack = 0
 13720                           ; Regs used in i1___aldiv: [wreg+status,2+status,0]
 13721  1D45  0020               	movlb	0	; select bank0
 13722  1D46  01A1               	clrf	i1___aldiv@sign
 13723  1D47  1FF3               	btfss	i1___aldiv@divisor+3,7
 13724  1D48  2D56               	goto	i1l1017
 13725  1D49  09F0               	comf	i1___aldiv@divisor,f
 13726  1D4A  09F1               	comf	i1___aldiv@divisor+1,f
 13727  1D4B  09F2               	comf	i1___aldiv@divisor+2,f
 13728  1D4C  09F3               	comf	i1___aldiv@divisor+3,f
 13729  1D4D  0AF0               	incf	i1___aldiv@divisor,f
 13730  1D4E  1903               	skipnz
 13731  1D4F  0AF1               	incf	i1___aldiv@divisor+1,f
 13732  1D50  1903               	skipnz
 13733  1D51  0AF2               	incf	i1___aldiv@divisor+2,f
 13734  1D52  1903               	skipnz
 13735  1D53  0AF3               	incf	i1___aldiv@divisor+3,f
 13736  1D54  01A1               	clrf	i1___aldiv@sign
 13737  1D55  0AA1               	incf	i1___aldiv@sign,f
 13738  1D56                     i1l1017:	
 13739  1D56  1FF7               	btfss	i1___aldiv@dividend+3,7
 13740  1D57  2D67               	goto	i1l4858
 13741  1D58  09F4               	comf	i1___aldiv@dividend,f
 13742  1D59  09F5               	comf	i1___aldiv@dividend+1,f
 13743  1D5A  09F6               	comf	i1___aldiv@dividend+2,f
 13744  1D5B  09F7               	comf	i1___aldiv@dividend+3,f
 13745  1D5C  0AF4               	incf	i1___aldiv@dividend,f
 13746  1D5D  1903               	skipnz
 13747  1D5E  0AF5               	incf	i1___aldiv@dividend+1,f
 13748  1D5F  1903               	skipnz
 13749  1D60  0AF6               	incf	i1___aldiv@dividend+2,f
 13750  1D61  1903               	skipnz
 13751  1D62  0AF7               	incf	i1___aldiv@dividend+3,f
 13752  1D63  3001               	movlw	1
 13753  1D64  00F8               	movwf	??i1___aldiv
 13754  1D65  0878               	movf	??i1___aldiv,w
 13755  1D66  06A1               	xorwf	i1___aldiv@sign,f
 13756  1D67                     i1l4858:	
 13757  1D67  3000               	movlw	0
 13758  1D68  00A5               	movwf	i1___aldiv@quotient+3
 13759  1D69  3000               	movlw	0
 13760  1D6A  00A4               	movwf	i1___aldiv@quotient+2
 13761  1D6B  3000               	movlw	0
 13762  1D6C  00A3               	movwf	i1___aldiv@quotient+1
 13763  1D6D  3000               	movlw	0
 13764  1D6E  00A2               	movwf	i1___aldiv@quotient
 13765  1D6F  0873               	movf	i1___aldiv@divisor+3,w
 13766  1D70  0472               	iorwf	i1___aldiv@divisor+2,w
 13767  1D71  0471               	iorwf	i1___aldiv@divisor+1,w
 13768  1D72  0470               	iorwf	i1___aldiv@divisor,w
 13769  1D73  1903               	skipnz
 13770  1D74  2DB0               	goto	i1l4880
 13771  1D75  01A0               	clrf	i1___aldiv@counter
 13772  1D76  0AA0               	incf	i1___aldiv@counter,f
 13773  1D77                     i1l4866:	
 13774  1D77  1BF3               	btfsc	i1___aldiv@divisor+3,7
 13775  1D78  2D85               	goto	i1l4868
 13776  1D79  3001               	movlw	1
 13777  1D7A                     u669_25:	
 13778  1D7A  35F0               	lslf	i1___aldiv@divisor,f
 13779  1D7B  0DF1               	rlf	i1___aldiv@divisor+1,f
 13780  1D7C  0DF2               	rlf	i1___aldiv@divisor+2,f
 13781  1D7D  0DF3               	rlf	i1___aldiv@divisor+3,f
 13782  1D7E  0B89               	decfsz	9,f
 13783  1D7F  2D7A               	goto	u669_25
 13784  1D80  3001               	movlw	1
 13785  1D81  00F8               	movwf	??i1___aldiv
 13786  1D82  0878               	movf	??i1___aldiv,w
 13787  1D83  07A0               	addwf	i1___aldiv@counter,f
 13788  1D84  2D77               	goto	i1l4866
 13789  1D85                     i1l4868:	
 13790  1D85  3001               	movlw	1
 13791  1D86                     u671_25:	
 13792  1D86  35A2               	lslf	i1___aldiv@quotient,f
 13793  1D87  0DA3               	rlf	i1___aldiv@quotient+1,f
 13794  1D88  0DA4               	rlf	i1___aldiv@quotient+2,f
 13795  1D89  0DA5               	rlf	i1___aldiv@quotient+3,f
 13796  1D8A  0B89               	decfsz	9,f
 13797  1D8B  2D86               	goto	u671_25
 13798  1D8C  0873               	movf	i1___aldiv@divisor+3,w
 13799  1D8D  0277               	subwf	i1___aldiv@dividend+3,w
 13800  1D8E  1D03               	skipz
 13801  1D8F  2D9A               	goto	u672_25
 13802  1D90  0872               	movf	i1___aldiv@divisor+2,w
 13803  1D91  0276               	subwf	i1___aldiv@dividend+2,w
 13804  1D92  1D03               	skipz
 13805  1D93  2D9A               	goto	u672_25
 13806  1D94  0871               	movf	i1___aldiv@divisor+1,w
 13807  1D95  0275               	subwf	i1___aldiv@dividend+1,w
 13808  1D96  1D03               	skipz
 13809  1D97  2D9A               	goto	u672_25
 13810  1D98  0870               	movf	i1___aldiv@divisor,w
 13811  1D99  0274               	subwf	i1___aldiv@dividend,w
 13812  1D9A                     u672_25:	
 13813  1D9A  1C03               	skipc
 13814  1D9B  2DA5               	goto	i1l4876
 13815  1D9C  0870               	movf	i1___aldiv@divisor,w
 13816  1D9D  02F4               	subwf	i1___aldiv@dividend,f
 13817  1D9E  0871               	movf	i1___aldiv@divisor+1,w
 13818  1D9F  3BF5               	subwfb	i1___aldiv@dividend+1,f
 13819  1DA0  0872               	movf	i1___aldiv@divisor+2,w
 13820  1DA1  3BF6               	subwfb	i1___aldiv@dividend+2,f
 13821  1DA2  0873               	movf	i1___aldiv@divisor+3,w
 13822  1DA3  3BF7               	subwfb	i1___aldiv@dividend+3,f
 13823  1DA4  1422               	bsf	i1___aldiv@quotient,0
 13824  1DA5                     i1l4876:	
 13825  1DA5  3001               	movlw	1
 13826  1DA6                     u673_25:	
 13827  1DA6  36F3               	lsrf	i1___aldiv@divisor+3,f
 13828  1DA7  0CF2               	rrf	i1___aldiv@divisor+2,f
 13829  1DA8  0CF1               	rrf	i1___aldiv@divisor+1,f
 13830  1DA9  0CF0               	rrf	i1___aldiv@divisor,f
 13831  1DAA  0B89               	decfsz	9,f
 13832  1DAB  2DA6               	goto	u673_25
 13833  1DAC  3001               	movlw	1
 13834  1DAD  02A0               	subwf	i1___aldiv@counter,f
 13835  1DAE  1D03               	btfss	3,2
 13836  1DAF  2D85               	goto	i1l4868
 13837  1DB0                     i1l4880:	
 13838  1DB0  0821               	movf	i1___aldiv@sign,w
 13839  1DB1  1903               	btfsc	3,2
 13840  1DB2  2DBE               	goto	i1l4884
 13841  1DB3  09A2               	comf	i1___aldiv@quotient,f
 13842  1DB4  09A3               	comf	i1___aldiv@quotient+1,f
 13843  1DB5  09A4               	comf	i1___aldiv@quotient+2,f
 13844  1DB6  09A5               	comf	i1___aldiv@quotient+3,f
 13845  1DB7  0AA2               	incf	i1___aldiv@quotient,f
 13846  1DB8  1903               	skipnz
 13847  1DB9  0AA3               	incf	i1___aldiv@quotient+1,f
 13848  1DBA  1903               	skipnz
 13849  1DBB  0AA4               	incf	i1___aldiv@quotient+2,f
 13850  1DBC  1903               	skipnz
 13851  1DBD  0AA5               	incf	i1___aldiv@quotient+3,f
 13852  1DBE                     i1l4884:	
 13853  1DBE  0825               	movf	i1___aldiv@quotient+3,w
 13854  1DBF  00F3               	movwf	?i1___aldiv+3
 13855  1DC0  0824               	movf	i1___aldiv@quotient+2,w
 13856  1DC1  00F2               	movwf	?i1___aldiv+2
 13857  1DC2  0823               	movf	i1___aldiv@quotient+1,w
 13858  1DC3  00F1               	movwf	?i1___aldiv+1
 13859  1DC4  0822               	movf	i1___aldiv@quotient,w
 13860  1DC5  00F0               	movwf	?i1___aldiv
 13861  1DC6  0008               	return
 13862  1DC7                     __end_ofi1___aldiv:	
 13863                           
 13864                           	psect	text45
 13865  18DB                     __ptext45:	
 13866 ;; *************** function i1_Update_PWM *****************
 13867 ;; Defined at:
 13868 ;;		line 1247 in file "main.c"
 13869 ;; Parameters:    Size  Location     Type
 13870 ;;  setwsduty       2    6[COMMON] unsigned int 
 13871 ;; Auto vars:     Size  Location     Type
 13872 ;;  Update_PWM      2   12[COMMON] unsigned int 
 13873 ;;  Update_PWM      2   10[COMMON] unsigned int 
 13874 ;; Return value:  Size  Location     Type
 13875 ;;		None               void
 13876 ;; Registers used:
 13877 ;;		wreg, status,2, status,0
 13878 ;; Tracked objects:
 13879 ;;		On entry : 0/0
 13880 ;;		On exit  : 0/0
 13881 ;;		Unchanged: 0/0
 13882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13884 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13886 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13887 ;;Total ram usage:        8 bytes
 13888 ;; Hardware stack levels used:    1
 13889 ;; This function calls:
 13890 ;;		Nothing
 13891 ;; This function is called by:
 13892 ;;		_ISR_Function
 13893 ;; This function uses a non-reentrant model
 13894 ;;
 13895                           
 13896                           
 13897                           ;psect for function i1_Update_PWM
 13898  18DB                     i1_Update_PWM:	
 13899                           
 13900                           ;main.c: 1249: unsigned int Temp1=0x00, Dutycnt=0;
 13901                           
 13902                           ;incstack = 0
 13903                           ; Regs used in i1_Update_PWM: [wreg+status,2+status,0]
 13904  18DB  01FA               	clrf	i1Update_PWM@Temp1
 13905  18DC  01FB               	clrf	i1Update_PWM@Temp1+1
 13906  18DD  01FC               	clrf	i1Update_PWM@Dutycnt
 13907  18DE  01FD               	clrf	i1Update_PWM@Dutycnt+1
 13908                           
 13909                           ;main.c: 1250: Dutycnt=setwsduty;
 13910  18DF  0877               	movf	i1Update_PWM@setwsduty+1,w
 13911  18E0  00FD               	movwf	i1Update_PWM@Dutycnt+1
 13912  18E1  0876               	movf	i1Update_PWM@setwsduty,w
 13913  18E2  00FC               	movwf	i1Update_PWM@Dutycnt
 13914                           
 13915                           ;main.c: 1251: CCP1CONbits.DC1B=Dutycnt;
 13916  18E3  087C               	movf	i1Update_PWM@Dutycnt,w
 13917  18E4  00F8               	movwf	??i1_Update_PWM
 13918  18E5  0EF8               	swapf	??i1_Update_PWM,f
 13919  18E6  0025               	movlb	5	; select bank5
 13920  18E7  0813               	movf	19,w	;volatile
 13921  18E8  0678               	xorwf	??i1_Update_PWM,w
 13922  18E9  39CF               	andlw	-49
 13923  18EA  0678               	xorwf	??i1_Update_PWM,w
 13924  18EB  0093               	movwf	19	;volatile
 13925                           
 13926                           ;main.c: 1252: Temp1=Dutycnt >> 2;
 13927  18EC  087D               	movf	i1Update_PWM@Dutycnt+1,w
 13928  18ED  00F9               	movwf	??i1_Update_PWM+1
 13929  18EE  087C               	movf	i1Update_PWM@Dutycnt,w
 13930  18EF  00F8               	movwf	??i1_Update_PWM
 13931  18F0  36F9               	lsrf	??i1_Update_PWM+1,f
 13932  18F1  0CF8               	rrf	??i1_Update_PWM,f
 13933  18F2  36F9               	lsrf	??i1_Update_PWM+1,f
 13934  18F3  0CF8               	rrf	??i1_Update_PWM,f
 13935  18F4  0878               	movf	??i1_Update_PWM,w
 13936  18F5  00FA               	movwf	i1Update_PWM@Temp1
 13937  18F6  0879               	movf	??i1_Update_PWM+1,w
 13938  18F7  00FB               	movwf	i1Update_PWM@Temp1+1
 13939                           
 13940                           ;main.c: 1253: CCPR1L=Temp1;
 13941  18F8  087A               	movf	i1Update_PWM@Temp1,w
 13942  18F9  0091               	movwf	17	;volatile
 13943                           
 13944                           ;main.c: 1254: iTest = Temp1;
 13945  18FA  087B               	movf	i1Update_PWM@Temp1+1,w
 13946  18FB  0024               	movlb	4	; select bank4
 13947  18FC  00C5               	movwf	(_iTest+1)^(0+512)
 13948  18FD  087A               	movf	i1Update_PWM@Temp1,w
 13949  18FE  00C4               	movwf	_iTest^(0+512)
 13950  18FF  0008               	return
 13951  1900                     __end_ofi1_Update_PWM:	
 13952                           
 13953                           	psect	text46
 13954  05D1                     __ptext46:	
 13955 ;; *************** function _Display *****************
 13956 ;; Defined at:
 13957 ;;		line 8 in file "DISPLAY.C"
 13958 ;; Parameters:    Size  Location     Type
 13959 ;;		None
 13960 ;; Auto vars:     Size  Location     Type
 13961 ;;		None
 13962 ;; Return value:  Size  Location     Type
 13963 ;;		None               void
 13964 ;; Registers used:
 13965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13966 ;; Tracked objects:
 13967 ;;		On entry : 0/0
 13968 ;;		On exit  : 0/0
 13969 ;;		Unchanged: 0/0
 13970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13974 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13975 ;;Total ram usage:        2 bytes
 13976 ;; Hardware stack levels used:    1
 13977 ;; This function calls:
 13978 ;;		Nothing
 13979 ;; This function is called by:
 13980 ;;		_ISR_Function
 13981 ;; This function uses a non-reentrant model
 13982 ;;
 13983                           
 13984                           
 13985                           ;psect for function _Display
 13986  05D1                     _Display:	
 13987                           
 13988                           ;DISPLAY.C: 10: PORTB=0x00;
 13989                           
 13990                           ;incstack = 0
 13991                           ; Regs used in _Display: [wreg-fsr1h+status,2+status,0+pclath]
 13992  05D1  0020               	movlb	0	; select bank0
 13993  05D2  018D               	clrf	13	;volatile
 13994                           
 13995                           ;DISPLAY.C: 11: if(digit<=5)
 13996  05D3  3006               	movlw	6
 13997  05D4  025F               	subwf	_digit,w
 13998  05D5  1C03               	btfss	3,0
 13999  05D6  2E85               	goto	i1l4230
 14000  05D7  2E91               	goto	i1l4232
 14001  05D8                     i1l445:	
 14002                           ;DISPLAY.C: 14: {
 14003                           ;DISPLAY.C: 15: case 0:
 14004                           
 14005                           ;DISPLAY.C: 12: {
 14006                           ;DISPLAY.C: 13: switch(digit)
 14007                           
 14008                           
 14009                           ;DISPLAY.C: 16: LATCbits.LATC4=0;
 14010  05D8  0022               	movlb	2	; select bank2
 14011  05D9  120E               	bcf	14,4	;volatile
 14012                           
 14013                           ;DISPLAY.C: 17: LATAbits.LATA6=0;
 14014  05DA  130C               	bcf	12,6	;volatile
 14015                           
 14016                           ;DISPLAY.C: 18: LATAbits.LATA7=0;
 14017  05DB  138C               	bcf	12,7	;volatile
 14018                           
 14019                           ;DISPLAY.C: 19: LATB=lookup_table[diswin1[digit]];
 14020  05DC  0020               	movlb	0	; select bank0
 14021  05DD  085F               	movf	_digit,w
 14022  05DE  3EDA               	addlw	(low (_diswin1| (0+256)))& (0+255)
 14023  05DF  0086               	movwf	6
 14024  05E0  3001               	movlw	1	; select bank3/4
 14025  05E1  0087               	movwf	7
 14026  05E2  0801               	movf	1,w
 14027  05E3  00F0               	movwf	??_Display
 14028  05E4  01F1               	clrf	??_Display+1
 14029  05E5  35F0               	lslf	??_Display,f
 14030  05E6  0DF1               	rlf	??_Display+1,f
 14031  05E7  3000               	movlw	low (_lookup_table| (0+32768))
 14032  05E8  0770               	addwf	??_Display,w
 14033  05E9  0084               	movwf	4
 14034  05EA  30A0               	movlw	high (_lookup_table| (0+32768))
 14035  05EB  3D71               	addwfc	??_Display+1,w
 14036  05EC  0085               	movwf	5
 14037  05ED  0800               	movf	0,w	;code access
 14038  05EE  0022               	movlb	2	; select bank2
 14039  05EF  008D               	movwf	13	;volatile
 14040                           
 14041                           ;DISPLAY.C: 20: if(TypeDP.TypeD.digitdp1==1)
 14042  05F0  0020               	movlb	0	; select bank0
 14043  05F1  1C6B               	btfss	_TypeDP,0
 14044  05F2  2E82               	goto	i1l462
 14045  05F3  2E7F               	goto	i1l4226
 14046  05F4                     i1l449:	
 14047                           ;DISPLAY.C: 25: case 1:
 14048                           
 14049                           ;DISPLAY.C: 24: break;
 14050                           
 14051                           ;DISPLAY.C: 22: else
 14052                           ;DISPLAY.C: 23: LATBbits.LATB7=0;
 14053                           
 14054                           ;DISPLAY.C: 21: LATBbits.LATB7=1;
 14055                           
 14056                           
 14057                           ;DISPLAY.C: 26: LATCbits.LATC4=1;
 14058  05F4  0022               	movlb	2	; select bank2
 14059  05F5  160E               	bsf	14,4	;volatile
 14060                           
 14061                           ;DISPLAY.C: 27: LATAbits.LATA6=0;
 14062  05F6  130C               	bcf	12,6	;volatile
 14063                           
 14064                           ;DISPLAY.C: 28: LATAbits.LATA7=0;
 14065  05F7  138C               	bcf	12,7	;volatile
 14066                           
 14067                           ;DISPLAY.C: 29: LATB=lookup_table[diswin1[digit]];
 14068  05F8  0020               	movlb	0	; select bank0
 14069  05F9  085F               	movf	_digit,w
 14070  05FA  3EDA               	addlw	(low (_diswin1| (0+256)))& (0+255)
 14071  05FB  0086               	movwf	6
 14072  05FC  3001               	movlw	1	; select bank3/4
 14073  05FD  0087               	movwf	7
 14074  05FE  0801               	movf	1,w
 14075  05FF  00F0               	movwf	??_Display
 14076  0600  01F1               	clrf	??_Display+1
 14077  0601  35F0               	lslf	??_Display,f
 14078  0602  0DF1               	rlf	??_Display+1,f
 14079  0603  3000               	movlw	low (_lookup_table| (0+32768))
 14080  0604  0770               	addwf	??_Display,w
 14081  0605  0084               	movwf	4
 14082  0606  30A0               	movlw	high (_lookup_table| (0+32768))
 14083  0607  3D71               	addwfc	??_Display+1,w
 14084  0608  0085               	movwf	5
 14085  0609  0800               	movf	0,w	;code access
 14086  060A  0022               	movlb	2	; select bank2
 14087  060B  008D               	movwf	13	;volatile
 14088                           
 14089                           ;DISPLAY.C: 30: if(TypeDP.TypeD.digitdp2==1)
 14090  060C  0020               	movlb	0	; select bank0
 14091  060D  1CEB               	btfss	_TypeDP,1
 14092  060E  2E82               	goto	i1l462
 14093  060F  2E7F               	goto	i1l4226
 14094  0610                     i1l452:	
 14095                           ;DISPLAY.C: 35: case 2:
 14096                           
 14097                           ;DISPLAY.C: 34: break;
 14098                           
 14099                           ;DISPLAY.C: 32: else
 14100                           ;DISPLAY.C: 33: LATBbits.LATB7=0;
 14101                           
 14102                           ;DISPLAY.C: 31: LATBbits.LATB7=1;
 14103                           
 14104                           
 14105                           ;DISPLAY.C: 36: LATCbits.LATC4=0;
 14106  0610  0022               	movlb	2	; select bank2
 14107  0611  120E               	bcf	14,4	;volatile
 14108                           
 14109                           ;DISPLAY.C: 37: LATAbits.LATA6=1;
 14110  0612  170C               	bsf	12,6	;volatile
 14111                           
 14112                           ;DISPLAY.C: 38: LATAbits.LATA7=0;
 14113  0613  138C               	bcf	12,7	;volatile
 14114                           
 14115                           ;DISPLAY.C: 39: LATB=lookup_table[diswin1[digit]];
 14116  0614  0020               	movlb	0	; select bank0
 14117  0615  085F               	movf	_digit,w
 14118  0616  3EDA               	addlw	(low (_diswin1| (0+256)))& (0+255)
 14119  0617  0086               	movwf	6
 14120  0618  3001               	movlw	1	; select bank3/4
 14121  0619  0087               	movwf	7
 14122  061A  0801               	movf	1,w
 14123  061B  00F0               	movwf	??_Display
 14124  061C  01F1               	clrf	??_Display+1
 14125  061D  35F0               	lslf	??_Display,f
 14126  061E  0DF1               	rlf	??_Display+1,f
 14127  061F  3000               	movlw	low (_lookup_table| (0+32768))
 14128  0620  0770               	addwf	??_Display,w
 14129  0621  0084               	movwf	4
 14130  0622  30A0               	movlw	high (_lookup_table| (0+32768))
 14131  0623  3D71               	addwfc	??_Display+1,w
 14132  0624  0085               	movwf	5
 14133  0625  0800               	movf	0,w	;code access
 14134  0626  0022               	movlb	2	; select bank2
 14135  0627  008D               	movwf	13	;volatile
 14136                           
 14137                           ;DISPLAY.C: 40: if(TypeDP.TypeD.digitdp3==1)
 14138  0628  0020               	movlb	0	; select bank0
 14139  0629  1D6B               	btfss	_TypeDP,2
 14140  062A  2E82               	goto	i1l462
 14141  062B  2E7F               	goto	i1l4226
 14142  062C                     i1l455:	
 14143                           ;DISPLAY.C: 45: case 3:
 14144                           
 14145                           ;DISPLAY.C: 44: break;
 14146                           
 14147                           ;DISPLAY.C: 42: else
 14148                           ;DISPLAY.C: 43: LATBbits.LATB7=0;
 14149                           
 14150                           ;DISPLAY.C: 41: LATBbits.LATB7=1;
 14151                           
 14152                           
 14153                           ;DISPLAY.C: 46: LATCbits.LATC4=1;
 14154  062C  0022               	movlb	2	; select bank2
 14155  062D  160E               	bsf	14,4	;volatile
 14156                           
 14157                           ;DISPLAY.C: 47: LATAbits.LATA6=1;
 14158  062E  170C               	bsf	12,6	;volatile
 14159                           
 14160                           ;DISPLAY.C: 48: LATAbits.LATA7=0;
 14161  062F  138C               	bcf	12,7	;volatile
 14162                           
 14163                           ;DISPLAY.C: 49: LATB=lookup_table[diswin1[digit]];
 14164  0630  0020               	movlb	0	; select bank0
 14165  0631  085F               	movf	_digit,w
 14166  0632  3EDA               	addlw	(low (_diswin1| (0+256)))& (0+255)
 14167  0633  0086               	movwf	6
 14168  0634  3001               	movlw	1	; select bank3/4
 14169  0635  0087               	movwf	7
 14170  0636  0801               	movf	1,w
 14171  0637  00F0               	movwf	??_Display
 14172  0638  01F1               	clrf	??_Display+1
 14173  0639  35F0               	lslf	??_Display,f
 14174  063A  0DF1               	rlf	??_Display+1,f
 14175  063B  3000               	movlw	low (_lookup_table| (0+32768))
 14176  063C  0770               	addwf	??_Display,w
 14177  063D  0084               	movwf	4
 14178  063E  30A0               	movlw	high (_lookup_table| (0+32768))
 14179  063F  3D71               	addwfc	??_Display+1,w
 14180  0640  0085               	movwf	5
 14181  0641  0800               	movf	0,w	;code access
 14182  0642  0022               	movlb	2	; select bank2
 14183  0643  008D               	movwf	13	;volatile
 14184                           
 14185                           ;DISPLAY.C: 50: if(TypeDP.TypeD.digitdp4==1)
 14186  0644  0020               	movlb	0	; select bank0
 14187  0645  1DEB               	btfss	_TypeDP,3
 14188  0646  2E82               	goto	i1l462
 14189  0647  2E7F               	goto	i1l4226
 14190  0648                     i1l458:	
 14191                           ;DISPLAY.C: 55: case 4:
 14192                           
 14193                           ;DISPLAY.C: 54: break;
 14194                           
 14195                           ;DISPLAY.C: 52: else
 14196                           ;DISPLAY.C: 53: LATBbits.LATB7=0;
 14197                           
 14198                           ;DISPLAY.C: 51: LATBbits.LATB7=1;
 14199                           
 14200                           
 14201                           ;DISPLAY.C: 56: LATCbits.LATC4=0;
 14202  0648  0022               	movlb	2	; select bank2
 14203  0649  120E               	bcf	14,4	;volatile
 14204                           
 14205                           ;DISPLAY.C: 57: LATAbits.LATA6=0;
 14206  064A  130C               	bcf	12,6	;volatile
 14207                           
 14208                           ;DISPLAY.C: 58: LATAbits.LATA7=1;
 14209  064B  178C               	bsf	12,7	;volatile
 14210                           
 14211                           ;DISPLAY.C: 59: LATB=lookup_table[diswin1[digit]];
 14212  064C  0020               	movlb	0	; select bank0
 14213  064D  085F               	movf	_digit,w
 14214  064E  3EDA               	addlw	(low (_diswin1| (0+256)))& (0+255)
 14215  064F  0086               	movwf	6
 14216  0650  3001               	movlw	1	; select bank3/4
 14217  0651  0087               	movwf	7
 14218  0652  0801               	movf	1,w
 14219  0653  00F0               	movwf	??_Display
 14220  0654  01F1               	clrf	??_Display+1
 14221  0655  35F0               	lslf	??_Display,f
 14222  0656  0DF1               	rlf	??_Display+1,f
 14223  0657  3000               	movlw	low (_lookup_table| (0+32768))
 14224  0658  0770               	addwf	??_Display,w
 14225  0659  0084               	movwf	4
 14226  065A  30A0               	movlw	high (_lookup_table| (0+32768))
 14227  065B  3D71               	addwfc	??_Display+1,w
 14228  065C  0085               	movwf	5
 14229  065D  0800               	movf	0,w	;code access
 14230  065E  0022               	movlb	2	; select bank2
 14231  065F  008D               	movwf	13	;volatile
 14232                           
 14233                           ;DISPLAY.C: 60: if(TypeDP.TypeD.digitdp5==1)
 14234  0660  0020               	movlb	0	; select bank0
 14235  0661  1E6B               	btfss	_TypeDP,4
 14236  0662  2E82               	goto	i1l462
 14237  0663  2E7F               	goto	i1l4226
 14238  0664                     i1l461:	
 14239                           ;DISPLAY.C: 65: case 5:
 14240                           
 14241                           ;DISPLAY.C: 64: break;
 14242                           
 14243                           ;DISPLAY.C: 62: else
 14244                           ;DISPLAY.C: 63: LATBbits.LATB7=0;
 14245                           
 14246                           ;DISPLAY.C: 61: LATBbits.LATB7=1;
 14247                           
 14248                           
 14249                           ;DISPLAY.C: 66: LATCbits.LATC4=1;
 14250  0664  0022               	movlb	2	; select bank2
 14251  0665  160E               	bsf	14,4	;volatile
 14252                           
 14253                           ;DISPLAY.C: 67: LATAbits.LATA6=0;
 14254  0666  130C               	bcf	12,6	;volatile
 14255                           
 14256                           ;DISPLAY.C: 68: LATAbits.LATA7=1;
 14257  0667  178C               	bsf	12,7	;volatile
 14258                           
 14259                           ;DISPLAY.C: 69: LATB=lookup_table[diswin1[digit]];
 14260  0668  0020               	movlb	0	; select bank0
 14261  0669  085F               	movf	_digit,w
 14262  066A  3EDA               	addlw	(low (_diswin1| (0+256)))& (0+255)
 14263  066B  0086               	movwf	6
 14264  066C  3001               	movlw	1	; select bank3/4
 14265  066D  0087               	movwf	7
 14266  066E  0801               	movf	1,w
 14267  066F  00F0               	movwf	??_Display
 14268  0670  01F1               	clrf	??_Display+1
 14269  0671  35F0               	lslf	??_Display,f
 14270  0672  0DF1               	rlf	??_Display+1,f
 14271  0673  3000               	movlw	low (_lookup_table| (0+32768))
 14272  0674  0770               	addwf	??_Display,w
 14273  0675  0084               	movwf	4
 14274  0676  30A0               	movlw	high (_lookup_table| (0+32768))
 14275  0677  3D71               	addwfc	??_Display+1,w
 14276  0678  0085               	movwf	5
 14277  0679  0800               	movf	0,w	;code access
 14278  067A  0022               	movlb	2	; select bank2
 14279  067B  008D               	movwf	13	;volatile
 14280                           
 14281                           ;DISPLAY.C: 70: if(TypeDP.TypeD.digitdp6==1)
 14282  067C  0020               	movlb	0	; select bank0
 14283  067D  1EEB               	btfss	_TypeDP,5
 14284  067E  2E82               	goto	i1l462
 14285  067F                     i1l4226:	
 14286                           
 14287                           ;DISPLAY.C: 71: LATBbits.LATB7=1;
 14288  067F  0022               	movlb	2	; select bank2
 14289  0680  178D               	bsf	13,7	;volatile
 14290  0681  2F09               	goto	i1l4300
 14291  0682                     i1l462:	
 14292                           
 14293                           ;DISPLAY.C: 72: else
 14294                           ;DISPLAY.C: 73: LATBbits.LATB7=0;
 14295  0682  0022               	movlb	2	; select bank2
 14296  0683  138D               	bcf	13,7	;volatile
 14297                           
 14298                           ;DISPLAY.C: 77: }
 14299                           
 14300                           ;DISPLAY.C: 76: break;
 14301                           
 14302                           ;DISPLAY.C: 75: default:
 14303                           
 14304                           ;DISPLAY.C: 74: break;
 14305  0684  2F09               	goto	i1l4300
 14306  0685                     i1l4230:	
 14307  0685  0020               	movlb	0	; select bank0
 14308  0686  085F               	movf	_digit,w
 14309                           
 14310                           ; Switch size 1, requested type "space"
 14311                           ; Number of cases is 6, Range of values is 0 to 5
 14312                           ; switch strategies available:
 14313                           ; Name         Instructions Cycles
 14314                           ; direct_byte           18     6 (fixed)
 14315                           ; simple_byte           19    10 (average)
 14316                           ; jumptable            260     6 (fixed)
 14317                           ;	Chosen strategy is direct_byte
 14318  0687  0084               	movwf	4
 14319  0688  3006               	movlw	6
 14320  0689  0204               	subwf	4,w
 14321  068A  1803               	skipnc
 14322  068B  2F09               	goto	i1l4300
 14323  068C  31A0               	movlp	high i1S6030
 14324  068D  3504               	lslf	4,w
 14325  068E  3E6E               	addlw	low i1S6030
 14326  068F  0082               	movwf	2
 14327                           
 14328                           ;DISPLAY.C: 78: }
 14329  0690  2F09               	goto	i1l4300
 14330  0691                     i1l4232:	
 14331                           
 14332                           ;DISPLAY.C: 79: else if(digit == 6)
 14333  0691  3006               	movlw	6
 14334  0692  065F               	xorwf	_digit,w
 14335  0693  1D03               	btfss	3,2
 14336  0694  2E9C               	goto	i1l4238
 14337                           
 14338                           ;DISPLAY.C: 80: {
 14339                           ;DISPLAY.C: 81: LATCbits.LATC4=0;
 14340  0695  0022               	movlb	2	; select bank2
 14341  0696  120E               	bcf	14,4	;volatile
 14342                           
 14343                           ;DISPLAY.C: 82: LATAbits.LATA6=1;
 14344  0697  170C               	bsf	12,6	;volatile
 14345                           
 14346                           ;DISPLAY.C: 83: LATAbits.LATA7=1;
 14347  0698  178C               	bsf	12,7	;volatile
 14348                           
 14349                           ;DISPLAY.C: 85: LATB=TypeU.LEDGROUP[0];
 14350  0699  0020               	movlb	0	; select bank0
 14351  069A  0865               	movf	_TypeU,w
 14352  069B  2EA7               	goto	L27
 14353  069C                     i1l4238:	
 14354                           ;DISPLAY.C: 86: }
 14355                           
 14356                           
 14357                           ;DISPLAY.C: 87: else if(digit == 7)
 14358  069C  3007               	movlw	7
 14359  069D  0020               	movlb	0	; select bank0
 14360  069E  065F               	xorwf	_digit,w
 14361  069F  1D03               	btfss	3,2
 14362  06A0  2EAA               	goto	i1l4244
 14363                           
 14364                           ;DISPLAY.C: 88: {
 14365                           ;DISPLAY.C: 89: LATCbits.LATC4=1;
 14366  06A1  0022               	movlb	2	; select bank2
 14367  06A2  160E               	bsf	14,4	;volatile
 14368                           
 14369                           ;DISPLAY.C: 90: LATAbits.LATA6=1;
 14370  06A3  170C               	bsf	12,6	;volatile
 14371                           
 14372                           ;DISPLAY.C: 91: LATAbits.LATA7=1;
 14373  06A4  178C               	bsf	12,7	;volatile
 14374                           
 14375                           ;DISPLAY.C: 93: LATB=TypeU.LEDGROUP[1];
 14376  06A5  0020               	movlb	0	; select bank0
 14377  06A6  0866               	movf	_TypeU+1,w
 14378  06A7                     L27:	
 14379  06A7  0022               	movlb	2	; select bank2
 14380  06A8  008D               	movwf	13	;volatile
 14381                           
 14382                           ;DISPLAY.C: 95: }
 14383  06A9  2F09               	goto	i1l4300
 14384  06AA                     i1l4244:	
 14385                           
 14386                           ;DISPLAY.C: 96: else if(digit == 8)
 14387  06AA  3008               	movlw	8
 14388  06AB  0020               	movlb	0	; select bank0
 14389  06AC  065F               	xorwf	_digit,w
 14390  06AD  1D03               	btfss	3,2
 14391  06AE  2F09               	goto	i1l4300
 14392                           
 14393                           ;DISPLAY.C: 97: {
 14394                           ;DISPLAY.C: 98: TRISB=0X0F;
 14395  06AF  300F               	movlw	15
 14396  06B0  0021               	movlb	1	; select bank1
 14397  06B1  008D               	movwf	13	;volatile
 14398                           
 14399                           ;DISPLAY.C: 99: for(i=0;i>=100;i++);
 14400  06B2  0022               	movlb	2	; select bank2
 14401  06B3  01C9               	clrf	_i^(0+256)
 14402  06B4  3064               	movlw	100
 14403  06B5  0249               	subwf	_i^(0+256),w
 14404  06B6  1C03               	btfss	3,0
 14405  06B7  2EC0               	goto	i1l4258
 14406  06B8                     i1l4254:	
 14407  06B8  3001               	movlw	1
 14408  06B9  00F0               	movwf	??_Display
 14409  06BA  0870               	movf	??_Display,w
 14410  06BB  07C9               	addwf	_i^(0+256),f
 14411  06BC  3064               	movlw	100
 14412  06BD  0249               	subwf	_i^(0+256),w
 14413  06BE  1803               	skipnc
 14414  06BF  2EB8               	goto	i1l4254
 14415  06C0                     i1l4258:	
 14416                           
 14417                           ;DISPLAY.C: 100: portbstatus=PORTB;
 14418  06C0  0020               	movlb	0	; select bank0
 14419  06C1  080D               	movf	13,w	;volatile
 14420  06C2  00F0               	movwf	??_Display
 14421  06C3  0870               	movf	??_Display,w
 14422  06C4  00E1               	movwf	_portbstatus	;volatile
 14423                           
 14424                           ;DISPLAY.C: 101: for(i=0;i>=200;i++);
 14425  06C5  0022               	movlb	2	; select bank2
 14426  06C6  01C9               	clrf	_i^(0+256)
 14427  06C7  30C8               	movlw	200
 14428  06C8  0249               	subwf	_i^(0+256),w
 14429  06C9  1C03               	btfss	3,0
 14430  06CA  2ED3               	goto	i1l4270
 14431  06CB                     i1l4266:	
 14432  06CB  3001               	movlw	1
 14433  06CC  00F0               	movwf	??_Display
 14434  06CD  0870               	movf	??_Display,w
 14435  06CE  07C9               	addwf	_i^(0+256),f
 14436  06CF  30C8               	movlw	200
 14437  06D0  0249               	subwf	_i^(0+256),w
 14438  06D1  1803               	skipnc
 14439  06D2  2ECB               	goto	i1l4266
 14440  06D3                     i1l4270:	
 14441                           
 14442                           ;DISPLAY.C: 102: if(pportb==portbstatus)
 14443  06D3  085B               	movf	_pportb^(0+256),w	;volatile
 14444  06D4  0020               	movlb	0	; select bank0
 14445  06D5  0661               	xorwf	_portbstatus,w	;volatile
 14446  06D6  1D03               	skipz
 14447  06D7  2EFF               	goto	i1l4294
 14448                           
 14449                           ;DISPLAY.C: 103: {
 14450                           ;DISPLAY.C: 104: temp=portbstatus;
 14451  06D8  0861               	movf	_portbstatus,w	;volatile
 14452  06D9  00F0               	movwf	??_Display
 14453  06DA  0870               	movf	??_Display,w
 14454  06DB  00E3               	movwf	_temp
 14455                           
 14456                           ;DISPLAY.C: 105: temp=(temp & 0x0F);
 14457  06DC  0863               	movf	_temp,w
 14458  06DD  390F               	andlw	15
 14459  06DE  00F0               	movwf	??_Display
 14460  06DF  0870               	movf	??_Display,w
 14461  06E0  00E3               	movwf	_temp
 14462                           
 14463                           ;DISPLAY.C: 106: if(temp==0x01)
 14464  06E1  0363               	decf	_temp,w
 14465  06E2  1D03               	btfss	3,2
 14466  06E3  2EE6               	goto	i1l4280
 14467                           
 14468                           ;DISPLAY.C: 107: key=1;
 14469  06E4  3001               	movlw	1
 14470  06E5  2EFA               	goto	L30
 14471  06E6                     i1l4280:	
 14472                           
 14473                           ;DISPLAY.C: 108: else if(temp==0x02)
 14474  06E6  3002               	movlw	2
 14475  06E7  0020               	movlb	0	; select bank0
 14476  06E8  0663               	xorwf	_temp,w
 14477  06E9  1D03               	btfss	3,2
 14478  06EA  2EED               	goto	i1l4284
 14479                           
 14480                           ;DISPLAY.C: 109: key=2;
 14481  06EB  3002               	movlw	2
 14482  06EC  2EFA               	goto	L30
 14483  06ED                     i1l4284:	
 14484                           
 14485                           ;DISPLAY.C: 110: else if(temp==0x04)
 14486  06ED  3004               	movlw	4
 14487  06EE  0020               	movlb	0	; select bank0
 14488  06EF  0663               	xorwf	_temp,w
 14489  06F0  1D03               	btfss	3,2
 14490  06F1  2EF4               	goto	i1l4288
 14491                           
 14492                           ;DISPLAY.C: 111: key=3;
 14493  06F2  3003               	movlw	3
 14494  06F3  2EFA               	goto	L30
 14495  06F4                     i1l4288:	
 14496                           
 14497                           ;DISPLAY.C: 112: else if(temp==0x08)
 14498  06F4  3008               	movlw	8
 14499  06F5  0020               	movlb	0	; select bank0
 14500  06F6  0663               	xorwf	_temp,w
 14501  06F7  1D03               	btfss	3,2
 14502  06F8  2EFF               	goto	i1l4294
 14503                           
 14504                           ;DISPLAY.C: 113: key=4;
 14505  06F9  3004               	movlw	4
 14506  06FA                     L30:	
 14507  06FA  00F0               	movwf	??_Display
 14508  06FB  0870               	movf	??_Display,w
 14509  06FC  0021               	movlb	1	; select bank1
 14510  06FD  00EF               	movwf	_key^(0+128)	;volatile
 14511  06FE  2F01               	goto	i1l4296
 14512  06FF                     i1l4294:	
 14513                           ;DISPLAY.C: 116: }
 14514                           
 14515                           ;DISPLAY.C: 114: else
 14516                           ;DISPLAY.C: 115: key=0;
 14517                           
 14518                           
 14519                           ;DISPLAY.C: 117: else
 14520                           ;DISPLAY.C: 118: {
 14521                           ;DISPLAY.C: 119: key=0;
 14522  06FF  0021               	movlb	1	; select bank1
 14523  0700  01EF               	clrf	_key^(0+128)	;volatile
 14524  0701                     i1l4296:	
 14525                           
 14526                           ;DISPLAY.C: 120: }
 14527                           ;DISPLAY.C: 121: pportb=portbstatus;
 14528  0701  0020               	movlb	0	; select bank0
 14529  0702  0861               	movf	_portbstatus,w	;volatile
 14530  0703  00F0               	movwf	??_Display
 14531  0704  0870               	movf	??_Display,w
 14532  0705  0022               	movlb	2	; select bank2
 14533  0706  00DB               	movwf	_pportb^(0+256)	;volatile
 14534                           
 14535                           ;DISPLAY.C: 122: TRISB=0X00;
 14536  0707  0021               	movlb	1	; select bank1
 14537  0708  018D               	clrf	13	;volatile
 14538  0709                     i1l4300:	
 14539                           
 14540                           ;DISPLAY.C: 123: }
 14541                           ;DISPLAY.C: 124: if(++digit >=9)
 14542  0709  3001               	movlw	1
 14543  070A  00F0               	movwf	??_Display
 14544  070B  0870               	movf	??_Display,w
 14545  070C  0020               	movlb	0	; select bank0
 14546  070D  07DF               	addwf	_digit,f
 14547  070E  3009               	movlw	9
 14548  070F  025F               	subwf	_digit,w
 14549  0710  1C03               	skipc
 14550  0711  0008               	return
 14551                           
 14552                           ;DISPLAY.C: 125: digit=0;
 14553  0712  01DF               	clrf	_digit
 14554  0713  0008               	return
 14555  0714                     __end_of_Display:	
 14556  007E                     btemp	set	126	;btemp
 14557  007E                     wtemp	set	126
 14558  007E                     wtemp0	set	126
 14559  0080                     wtemp1	set	128
 14560  0082                     wtemp2	set	130
 14561  0084                     wtemp3	set	132
 14562  0086                     wtemp4	set	134
 14563  0088                     wtemp5	set	136
 14564  007F                     wtemp6	set	127
 14565  007E                     ttemp	set	126
 14566  007E                     ttemp0	set	126
 14567  0081                     ttemp1	set	129
 14568  0084                     ttemp2	set	132
 14569  0087                     ttemp3	set	135
 14570  007F                     ttemp4	set	127
 14571  007E                     ltemp	set	126
 14572  007E                     ltemp0	set	126
 14573  0082                     ltemp1	set	130
 14574  0086                     ltemp2	set	134
 14575  0080                     ltemp3	set	128
 14576  2796                     
 14577                           	psect	swtext1
 14578  206E                     __pswtext1:	
 14579  206E                     i1S6030:	
 14580  206E  3185  2DD8         	ljmp	i1l445
 14581  2070  3185  2DF4         	ljmp	i1l449
 14582  2072  3186  2E10         	ljmp	i1l452
 14583  2074  3186  2E2C         	ljmp	i1l455
 14584  2076  3186  2E48         	ljmp	i1l458
 14585  2078  3186  2E64         	ljmp	i1l461


Data Sizes:
    Strings     0
    Constant    110
    Data        36
    BSS         323
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     54      80
    BANK1            80     79      80
    BANK2            80      0      80
    BANK3            80      0      80
    BANK4            80      0      77
    BANK5            80      0      22
    BANK6            80      0      73
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           22      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_Function in COMMON

    _ISR_Function->i1_Update_PWM
    i1___lwtoft->i1___ftpack
    i1___fttol->i1___lwtoft
    i1___ftmul->i1___lwtoft
    i1___ftdiv->i1___lwtoft
    i1___ftadd->i1___lwtoft
    i1_Update_PWM->i1___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_Function in BANK0

    _ISR_Function->i1___fttol
    i1___fttol->i1___ftadd
    i1___ftadd->i1___ftmul

Critical Paths under _main in BANK1

    _main->_Adaptive_base_pid
    _transmittops->_Send_Byte
    _send_status->_Send_Byte
    _key_application->_Update_PWM
    _disp_hex_window2->___lwdiv
    _disp_hex_window1->___lwdiv
    _detect_display_error->_Update_PWM
    _SCANENCODER2->_enc2_port
    _SCANENCODER1->_enc1_port
    _Adaptive_base_pid->_Update_PWM
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftadd
    ___ftge->___altoft
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _Update_PWM->___fttol

Critical Paths under _ISR_Function in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Function in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR_Function in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR_Function in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR_Function in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR_Function in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR_Function in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR_Function in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR_Function in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR_Function in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR_Function in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR_Function in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR_Function in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR_Function in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR_Function in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   39874
                                             77 BANK1      2     2      0
                  _Adaptive_base_pid
                            _Delayms
                           _PWM_init
                       _SCANENCODER1
                       _SCANENCODER2
                        _Timer0_init
                         _Update_PWM
                            ___ftmul
                            ___fttol
                           ___lwtoft
                             ___wmul
                       _capture_init
               _detect_display_error
                   _disp_hex_window1
                  _disp_hex_window11
                   _disp_hex_window2
                  _disp_hex_window22
                    _key_application
                       _portpin_init
                        _send_status
                        _system_init
                       _transmittops
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _transmittops                                         1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status                                          1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Send_Byte                                            1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _portpin_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_application                                      3     3      0    4139
                                             59 BANK1      3     3      0
                         _Update_PWM
                             ___wmul
                   _disp_hex_window2
 ---------------------------------------------------------------------------------
 (2) _disp_hex_window2                                     3     1      2    2033
                                              8 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window22                                    2     0      2      64
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window11                                    2     0      2      64
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window1                                     3     1      2    2033
                                              8 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     927
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     674
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _detect_display_error                                 1     1      0     932
                                             59 BANK1      1     1      0
                         _Update_PWM
 ---------------------------------------------------------------------------------
 (1) _capture_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER2                                         2     2      0     123
                                              5 BANK1      2     2      0
                          _enc2_port
 ---------------------------------------------------------------------------------
 (2) _enc2_port                                            5     5      0      94
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER1                                         2     2      0     123
                                              6 BANK1      2     2      0
                          _enc1_port
 ---------------------------------------------------------------------------------
 (2) _enc1_port                                            6     6      0      94
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delayms                                              6     4      2     286
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Adaptive_base_pid                                   18    18      0   20023
                                             59 BANK1     18    18      0
                         _Update_PWM
                            ___aldiv
                           ___altoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1064
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2859
                                              8 BANK1      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     904
                                             37 BANK1     14    10      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    4251
                                             21 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     392
                                             16 BANK1      9     3      6
                           ___altoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2797
                                             37 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3767
                                              8 BANK1     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    2375
                                              8 BANK1      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2109
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     504
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (2) _Update_PWM                                           8     6      2     932
                                             51 BANK1      8     6      2
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Function                                        11    11      0    5020
                                             43 BANK0     11    11      0
                            _Display
                       i1_Update_PWM
                          i1___aldiv
                          i1___ftadd
                          i1___ftdiv
                          i1___ftmul
                          i1___fttol
                         i1___lwtoft
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) i1___lwtoft                                           4     1      3     669
                                              8 COMMON     4     1      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (5) i1___fttol                                           14    10      4     304
                                             29 BANK0     14    10      4
                          i1___ftadd (ARG)
                          i1___ftdiv (ARG)
                          i1___ftmul (ARG)
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftmul                                           16    10      6     973
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftdiv                                           16    10      6     927
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftadd                                           13     7      6    1435
                                             16 BANK0     13     7      6
                          i1___ftmul (ARG)
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___ftpack                                           8     3      5     543
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) i1___aldiv                                           15     7      8     352
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) i1_Update_PWM                                         8     6      2     192
                                              6 COMMON     8     6      2
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _Display                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adaptive_base_pid
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___aldiv
     ___altoft
       ___ftpack
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
       ___altoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftneg
     ___fttol
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft
       ___ftpack
       ___wmul (ARG)
     ___wmul
   _Delayms
   _PWM_init
   _SCANENCODER1
     _enc1_port
   _SCANENCODER2
     _enc2_port
   _Timer0_init
   _Update_PWM
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___ftmul
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___fttol
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
     ___wmul (ARG)
   ___wmul
   _capture_init
   _detect_display_error
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
   _disp_hex_window1
     ___lwdiv
     ___lwmod
   _disp_hex_window11
   _disp_hex_window2
     ___lwdiv
     ___lwmod
   _disp_hex_window22
   _key_application
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _disp_hex_window2
       ___lwdiv
       ___lwmod
   _portpin_init
   _send_status
     _Send_Byte
   _system_init
   _transmittops
     _Send_Byte
   _uart_init

 _ISR_Function (ROOT)
   _Display
   i1_Update_PWM
     i1___wmul (ARG)
   i1___aldiv
   i1___ftadd
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftpack (ARG)
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftdiv
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftmul
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___fttol
     i1___ftadd (ARG)
       i1___ftmul (ARG)
         i1___ftpack
         i1___lwtoft (ARG)
           i1___ftpack
       i1___ftpack (ARG)
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftdiv (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___lwtoft
     i1___ftpack
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     36      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4D      13       96.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1FA      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      16      16       27.5%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      49      18       91.3%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1FA      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              16      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Sep 04 17:28:00 2023

          Update_PWM@setwsduty 00D3                    _portbstatus 0061                    _updatedispf 01D7  
                 ___altoft@exp 00AE                     __CFG_CP$ON 0000                              _i 0149  
                            pc 0002                     i1___ftpack 1B8D                  ___altoft@sign 00AF  
    __end_of_Adaptive_base_pid 1800                    __CFG_CPD$ON 0000                     i1___lwtoft 1822  
          ___wmul@multiplicand 00A2               i1___wmul@product 0074                   _portpin_init 185F  
          __end_of_system_init 27E8                   ___ftadd@exp1 00B4                   ___ftadd@exp2 00B3  
                  __CFG_LVP$ON 0000                   ___ftadd@sign 00B2                            l501 1907  
                          l721 0D3B                            l802 143A                            l715 0B7D  
                          l708 0B3B                            l660 08E4                            l733 0C46  
                          l725 0BDD                            l558 173E                            l726 0BEC  
                          l807 1452                            l736 0C98                            l728 0BFD  
                          l809 1458                            l737 0CBE                            l673 0A42  
                          l755 0DA3                            l691 0AED                            l844 1B3B  
                          l756 0DA4                            l676 0A35                            l861 10EC  
                          l757 0F9D                            l838 27D6                            l758 0E3A  
                          l694 0AE0                            l863 10F6                            l768 0EF1  
                          l688 0AF4                            l873 112E                            l865 1100  
                          l857 10D8                   i1___ftadd@f1 0030                            l962 18C8  
                 i1___ftadd@f2 0033                            l867 110A                            l859 10E2  
                          l787 135A                            _PR2 001B                    _transmitonf 0165  
                          _One 01AC                            _Two 01B0                            _iii 0246  
                          _ijk 0122                            _key 00EF                            _lmn 0124  
                 i1___ftdiv@f1 0023                   i1___ftdiv@f2 0020                   i1___ftdiv@f3 002B  
                 __CFG_BORV$LO 0000                            wreg 0009                   i1___ftmul@f1 0020  
                 i1___ftmul@f2 0023                   i1___fttol@f1 003D                _key_application 1354  
               i1___aldiv@sign 0021                   ___ftdiv@cntr 00CF                   ___ftdiv@sign 00D4  
                         l1017 1DD8                           l1130 1C37                           l1131 1C3F  
                         l1123 1C24                           l1214 1F3D                           l1154 12FD  
                         l4000 1041                           l4022 109B                           l4014 1082  
                         l4034 196C                           l4114 1EE9                           l4140 1F34  
                         l4132 1F19                           l4038 1982                           l4062 0741  
                         l4142 1F40                           l4134 1F27                           l4056 072B  
                         l4320 1923                           l4090 07A0                           l4074 077C  
                         l4146 1F4E                           l4340 1CED                           l4412 1C76  
                         l6004 0FF3                           l3702 1C01                           l4086 0798  
                         l4078 0784                           l4510 178D                           l4318 1918  
                         l4350 1CF9                           l4422 1C82                           l3704 1C0B  
                         l4520 17CD                           l4360 1D0C                           l4432 1C95  
                         l6008 0FFC                           l3714 1C35                           l3706 1C10  
                         l4506 1779                           l3802 1B22                           l3716 1C29  
                         l4524 17E5                           l4452 1CBD                           l4444 1CAC  
                         l4460 1CCA                           l4518 17A3                           l4382 1D35  
                         l4374 1D24                           l4390 1D42                           l4710 13FA  
                         l3912 19A6                           l4480 1609                           l4456 1CC1  
                         l3744 07EF                           l3736 07D1                           l3760 0807  
                         l4712 1405                           l4640 1B3D                           l3914 19B6  
                         l3850 18C2                           l4386 1D39                           l4458 1CC5  
                         l3738 07DD                           l3762 0813                           l3770 0828  
                         l4714 13A6                           l4650 1B53                           l5602 0A2A  
                         l3924 1286                           l4388 1D3D                           l3828 1A71  
                         l4804 113B                           l3748 07F8                           l4716 140A  
                         l4724 142B                           l5700 0B52                           l3934 129C  
                         l4494 16F0                           l4478 1602                           l4806 113D  
                         l3766 081F                           l4734 1441                           l5630 0A74  
                         l5614 0A52                           l5470 08F2                           l3880 1DF9  
                         l3872 1DE9                           l3952 12C9                           l3928 128D  
                         l4496 16FA                           l4760 145F                           l4736 1445  
                         l4664 1B7E                           l4656 1B5D                           l5720 0B7B  
                         l5704 0B5E                           l5608 0A40                           l5544 097E  
                         l3890 1E27                           l3882 1E07                           l3698 1BFA  
                         l3970 130F                           l3954 12D3                           l3946 12B6  
                         l4762 1460                           l5634 0A7A                           l5618 0A5D  
                         l5722 0B7F                           l3964 12EF                           l3956 12D8  
                         l4764 1467                           l4668 1B84                           l5812 0CCF  
                         l5716 0B75                           l5652 0AAB                           l5636 0A7C  
                         l5556 09A3                           l5548 0998                           l3894 1E32  
                         l3974 1321                           l3966 12F9                           l3958 12DC  
                         l4678 1389                           l4686 139C                           l5734 0B9B  
                         l5638 0A83                           l3984 133C                           l4792 1115  
                         l5808 0CAC                           l5680 0B20                           l5664 0AEB  
                         l5568 09B2                           l3898 1E40                           l3994 102B  
                         l4794 111D                           l5922 0E48                           l5914 0E07  
                         l5906 0DB7                           l5834 0CED                           l5746 0BC3  
                         l5674 0B0F                           l5658 0AD5                           l5578 09D5  
                         l5924 0E4B                           l5852 0D19                           l5844 0D0F  
                         l5764 0C11                           l5772 0C27                           l5692 0B3E  
                         l5596 0A00                           l5854 0D2E                           l5686 0B36  
                         l5694 0B41                           l5960 0F35                           l5880 0D6A  
                         l5946 0EDF                           l5956 0F24                           l5948 0EE1  
                         l5966 0FA4                           l5894 0D9E                           l5798 0C83  
                         l5976 0FC2                           l5998 0FE7                           _LATB 010D  
                         u5125 12DD                           u5065 12B7                           u5225 1053  
                         u5155 12F0                           u5235 1063                           u6203 1724  
                         u5245 1083                           u5405 07A1                           u5095 12CA  
                         u5255 1092                           u5415 07A7                           u5335 074D  
                         u6215 1771                           u4625 1C46                           u4545 1C06  
                         u5265 109C                           u5345 075D                           u6225 1783  
                         u5515 1F35                           u4565 1C1F                           u5365 0785  
                         u4725 080A                           u5375 078B                           u5455 1EF0  
                         u4815 18C9                           u4655 07D4                           u4905 1E1C  
                         u4585 1C30                           u4825 18CE                           u4745 0819  
                         _PIR1 0011                           u4915 1E28                           u4675 07DE  
                         u4755 0820                           u5485 1F1A                           u4685 07E8  
                         u8205 0A12                           u4695 07F0                           u4875 1DFC  
                         u4955 19AB                           u4895 1E08                           u8335 0ABD  
                         u5885 190D                           u8605 0BD8                           u8645 0C40  
                         u8565 0BB2                           u8815 0D4A                           u8575 0BBD  
                         u8835 0D77                           u8675 0C92                           u8595 0BCD  
                         _TMR0 0015                           _OneH 012F                           _OneL 0130  
                 __CFG_WRT$OFF 0000                           _TwoH 0131                           _TwoL 0132  
                 _transmittops 1B2C                     _Actual_amp 0265                           _old1 01BA  
                         _old2 01BC                           _new1 0056                           _new2 0058  
                         _main 08E1                   ___ftpack@arg 00A0                     _Actual_vtg 0267  
                 ___ftpack@exp 00A3                           _tans 0162                           _temp 0063  
                 i1___lwtoft@c 0078                           fsr0h 0005                           fsr1h 0007  
                         fsr0l 0004                           indf0 0000                           indf1 0001  
                         fsr1l 0006                           btemp 007E                  i1___ftdiv@exp 002E  
                         ltemp 007E                           start 054A                           ttemp 007E  
                         wtemp 007E                  __CFG_IESO$OFF 0000                __end_of_Delayms 1928  
     disp_hex_window1@hex_data 00A8         ??_detect_display_error 00DB                  __CFG_MCLRE$ON 0000  
                 ___ftmul@cntr 00C3                __end_of_Display 0714                   ___ftmul@sign 00C4  
                i1___ftmul@exp 002A       disp_hex_window2@hex_data 00A8                   ___fttol@exp1 00D2  
                 ___fttol@lval 00CE                  __CFG_PLLEN$ON 0000                   _torchstatus1 0163  
                 _torchstatus2 0164        i1___ftmul@f3_as_product 002B             enc2_port@portvalue 00A3  
              __end_of___aldiv 1E49                          ?_main 0070                __end_of___ftadd 1354  
                __CFG_WDTE$OFF 0000                __end_of___ftdiv 10BD                __end_of___ftneg 27D4  
              __end_of___ftmul 07C8                          _T1CON 0018                __end_of___fttol 1F57  
              __end_of___lwdiv 07FD                __end_of___lwmod 082D                          i1l610 0546  
                        i1l452 0610                          i1l604 012D                          i1l461 0664  
                        i1l445 05D8                          i1l462 0682                          i1l455 062C  
                        i1l449 05F4                          i1l625 0355                          i1l458 0648  
                        i1l650 0474                          i1l651 04EB                          i1l652 0512  
                        i1l653 0520                          i1l637 03D0                          i1l581 009C  
                        i1l654 0523                          i1l647 044D                          i1l656 052B  
                        i1l648 0458                          i1l587 00A6                          i1l579 006E  
                        i1l962 18AC                          _RCREG 0199                  ?_SCANENCODER1 0070  
                ?_SCANENCODER2 0070                          _TMR1H 0017                          _TMR1L 0016  
                        _SPBRG 019B                          _PORTA 000C                          _PORTB 000D  
                        _PORTC 000E                 i1___ftadd@exp1 003C                 i1___ftadd@exp2 003B  
                        _TORCH 006E                          _TRISA 008C                          _TRISB 008D  
                        _TRISC 008E                          _TXREG 019A                 i1___ftadd@sign 003A  
                        _TXSTA 019E                  _cTorchPressfg 013A                          _Count 012E  
                   _Hi_setppwm 022A                 __CFG_FCMEN$OFF 0000                   _wfstatusbyte 01D8  
                        _TypeU 0065                     _Displayarr 2058                          _iTest 0244  
                        _delay 0234                          _digit 005F           __end_of_capture_init 1822  
                        _pfreq 0069                  ___ftpack@sign 00A4                          _txonf 01D6  
               __CFG_BOREN$OFF 0000     __size_of_disp_hex_window11 0001     __size_of_disp_hex_window22 0001  
             __end_ofi1___wmul 18BF                          ltemp0 007E                          ltemp1 0082  
                        ltemp2 0086                          ltemp3 0080                 i1___ftdiv@cntr 002A  
               i1___ftdiv@sign 002F               __end_of_PWM_init 18A4                          ttemp0 007E  
                        ttemp1 0081                          ttemp2 0084                          ttemp3 0087  
                        ttemp4 007F                          status 0003            i1___wmul@multiplier 0070  
           __size_ofi1___aldiv 0082                          wtemp0 007E                          wtemp1 0080  
                        wtemp2 0082                          wtemp3 0084                          wtemp4 0086  
                        wtemp5 0088                          wtemp6 007F             __size_ofi1___ftadd 00F6  
           __size_ofi1___ftdiv 00A9             __size_ofi1___ftmul 00B4             __size_ofi1___fttol 0087  
               i1___ftpack@arg 0070                 i1___ftpack@exp 0073                __initialization 054C  
                  _system_init 27DE                   __end_of_main 1000          _universal_error_latch 0167  
                  ?i1___ftpack 0070                 i1___ftmul@cntr 002E                 i1___ftmul@sign 002F  
   __size_of_Adaptive_base_pid 038F                 __CFG_LPBOR$OFF 0000                    ?i1___lwtoft 0078  
               i1___fttol@exp1 004A                 i1___fttol@lval 0046                         ??_main 00ED  
                ___fttol@sign1 00CD        __end_of_key_application 1471                 ??_SCANENCODER1 00A6  
               ??_SCANENCODER2 00A5                     _Lo_setppwm 022C                  _count_transms 0230  
             __end_of___altoft 19CE                         i1S6030 206E                         _CCPR2H 0299  
                       _CCPR1L 0291                         _CCPR2L 0298                         _ANSELA 018C  
                       _ANSELB 018D               __end_of___ftpack 1C56                   _adaptivepidf 0133  
                       i1l1017 1D56                         i1l1130 1BD2                         i1l1131 1BDA  
                       i1l1123 1BBF                         i1l1214 1EB6                         i1l1154 1207  
                       i1l4300 0709                         i1l5012 085A                         i1l4230 0685  
                       i1l5006 0844                         i1l4232 0691                         i1l5040 08B9  
                       i1l5024 0895                         i1l5120 003C                         i1l4226 067F  
                       i1l4162 1B9C                         i1l5202 00F5                         i1l5122 0040  
                       i1l4244 06AA                         i1l4164 1BA6                         i1l5036 08B1  
                       i1l5028 089D                         i1l5300 0293                         i1l5212 0110  
                       i1l5132 0053                         i1l4270 06D3                         i1l4254 06B8  
                       i1l4238 069C                         i1l4174 1BD0                         i1l4166 1BAB  
                       i1l4158 1B95                         i1l5230 0132                         i1l5134 0058  
                       i1l4280 06E6                         i1l4176 1BC4                         i1l5056 1E62  
                       i1l5312 0320                         i1l5240 014D                         i1l4266 06CB  
                       i1l4258 06C0                         i1l5082 1EAD                         i1l5074 1E92  
                       i1l5322 033A                         i1l5234 013A                         i1l4284 06ED  
                       i1l5084 1EB9                         i1l5076 1EA0                         i1l5404 03E8  
                       i1l5308 031A                         i1l5252 017D                         i1l5324 033C  
                       i1l5244 0159                         i1l5164 00A1                         i1l5236 0140  
                       i1l4294 06FF                         i1l5430 043B                         i1l5182 00D4  
                       i1l4288 06F4                         i1l4296 0701                         i1l5088 1EC7  
                       i1l5440 045A                         i1l5424 041E                         i1l5416 040E  
                       i1l5360 0381                         i1l5336 035B                         i1l5192 00E4  
                       i1l5184 00D6                         i1l5168 00AA                         i1l5346 036E  
                       i1l5178 00C2                         i1l5186 00D9                         i1l5390 03DC  
                       i1l4904 11A6                         i1l5464 053D                         i1l5368 039E  
                       i1l5296 028D                         i1l4922 11D3                         i1l5458 0529  
                       i1l4940 1219                         i1l4924 11DD                         i1l4916 11C0  
                       i1l4836 18A6                         i1l4934 11F9                         i1l4926 11E2  
                       i1l4880 1DB0                         i1l4944 122B                         i1l4936 1203  
                       i1l4928 11E6                         i1l4866 1D77                         i1l4858 1D67  
                       i1l4954 1246                         i1l4970 1F84                         i1l4884 1DBE  
                       i1l4876 1DA5                         i1l4868 1D85                         i1l4964 1F6E  
                       i1l4894 1190                   ?_send_status 0070                         i1l4992 1FDE  
                       i1l4984 1FC5                         i1l4898 1197               __end_of___lwtoft 184A  
                       u701_25 1F96                         u702_25 1FA6                         u710_25 0876  
                    ??_Delayms 00A2                         u703_25 1FC6                         u560_25 1BCB  
                       u704_25 1FD5                         u712_25 089E                         u720_25 1E69  
                       u800_25 0481                         u705_25 1FDF                         u713_25 08A4  
                       u801_25 049E                         u802_25 04B9                         u723_25 1E93  
                       u564_25 1BE1                         u556_25 1BA1                         u716_25 08BA  
                       u717_25 08C0                         u709_25 0866                         u558_25 1BBA  
                       u726_25 1EAE                         u751_20 0102                         u671_25 1D86  
                       u663_25 18AD                         u752_20 0103                         u672_25 1D9A  
                       u664_25 18B2                         u673_25 1DA6                         u691_25 11E7  
                       u763_25 019C                         u764_25 01B9                         u669_25 1D7A  
                       u685_25 11C1                         u694_25 11FA                         u766_25 022F  
                       u688_25 11D4                         u786_25 03B0                         u799_25 0467  
                    ??_Display 0070                 __CFG_PWRTE$OFF 0000                  ??_Timer0_init 00A0  
                       _TypeDP 006B                         ___ftge 1955                         _Tx_ptr 01CA  
                    ??___aldiv 00A8             __size_of_Send_Byte 000A                         ___wmul 18BF  
            i1Update_PWM@Temp1 007A                      ??___ftadd 00AE                 __CFG_STVREN$ON 0000  
                    ??___ftdiv 00CB                      ??___ftneg 00A3                      ??___ftmul 00BB  
                    ??___fttol 00C9                         _encod1 0145                         _encod2 0060  
                       _chksum 013C                      ??___lwdiv 00A4                      ??___lwmod 00A4  
                       _arrptr 0134                         _error4 01CF                         _error8 0146  
                       _erroru 016A                         _pcount 0154                         _pportb 015B  
                       _rxdata 0062              __end_ofi1___aldiv 1DC7          ___ftmul@f3_as_product 00C0  
            __end_ofi1___ftadd 125E              __end_ofi1___ftdiv 2000              __end_ofi1___ftmul 08E1  
            __end_ofi1___fttol 1ED0                     _Update_PWM 1928                 _controller_out 0224  
          __size_ofi1___ftpack 0064                 _wfspeedchangef 016F        __end_of__initialization 05CE  
                   ___altoft@c 00A8            __size_ofi1___lwtoft 0013                     ___ftadd@f1 00A8  
                   ___ftadd@f2 00AB                     ___ftge@ff1 00B0                     ___ftge@ff2 00B3  
              i1___ftpack@sign 0074                     ___ftdiv@f1 00C8                     ___ftdiv@f2 00C5  
                   ___ftdiv@f3 00D0                     ___ftneg@f1 00A0      __size_of_disp_hex_window1 0056  
    __size_of_disp_hex_window2 0058                     ___ftmul@f1 00B5                     ___ftmul@f2 00B8  
                   ___fttol@f1 00C5             __size_of_enc1_port 0059             __size_of_enc2_port 0057  
               __pcstackCOMMON 0070              _ISR_Function$1209 0054                   __pidataBANK0 0002  
                 __pidataBANK1 1000                   __pidataBANK2 07FD                   __pidataBANK3 1875  
                 __pidataBANK4 27C3            __end_of_Timer0_init 1811                     ___lwtoft@c 00A8  
                 _capintervalf 01CC                      ?i1___wmul 0070               ?_key_application 0070  
        __size_of_capture_init 0011                      ?_PWM_init 0070                 _OPTION_REGbits 0095  
              i1___fttol@sign1 0045              __end_of_Send_Byte 27DE              i1___aldiv@divisor 0070  
            i1___aldiv@counter 0020                     __pbssBANK0 0056                     __pbssBANK2 0120  
                   __pbssBANK3 01A0                     __pbssBANK4 0220                     __pbssBANK5 02A0  
                   __pbssBANK6 0320                __CFG_VCAPEN$OFF 0000                  ?_ISR_Function 0070  
         __end_of_SCANENCODER1 1D45           __end_of_SCANENCODER2 1CCD              _cPowerOnErrSkipfg 0138  
                   __pmaintext 08E1                        ?___ftge 00B0                        ?___wmul 00A0  
                 _capture_init 1811                     __pintentry 0004                      ?___altoft 00A8  
                    ?___ftpack 00A0             SCANENCODER1@result 00A7             SCANENCODER2@result 00A6  
                   ??i1___wmul 0074                      ?___lwtoft 00A8                     ??_PWM_init 00A0  
           __size_of_uart_init 0013                    ?_Update_PWM 00D3                     _creepspeed 0232  
            __end_of_enc1_port 1B2C              __end_of_enc2_port 1A7B                     _closeloopf 013D  
                   _displayonf 01EE                     _avgpperiod 0168                        _Delayms 1900  
               ??_ISR_Function 004B                        _Display 05D1           __size_of_send_status 0015  
                   _cyclestrtf 0143                        _cEditfg 005E                    _Timer0_init 1800  
                 ?_system_init 0070                     _pidParams2 2796                        ___aldiv 1DC7  
              __size_of___ftge 003C  __size_of_detect_display_error 00AB                        _cTestfg 01CB  
                 ??i1___ftpack 0075                        ___ftadd 125E                        ___ftdiv 1014  
                      ___ftneg 27CB                __size_of___wmul 001C                        ___ftmul 0714  
                      ___fttol 1ED0                        ___lwdiv 07C8                        ___lwmod 0800  
                 ??i1___lwtoft 007B                     ??___altoft 00AC                     _read_enc1f 015C  
                   ??___ftpack 00A5                        _delinch 01B4                        _gapfreq 0240  
                      __ptext1 1001                        __ptext2 1B2C                        __ptext3 27DE  
                      __ptext4 184A                        __ptext5 27D4                        __ptext6 185F  
                      __ptext7 1354                        __ptext8 1A7B                        __ptext9 27C2  
                   _maxfmspeed 01E8      disp_hex_window11@hex_data 00A0                     ??___lwtoft 00AB  
                      _diswin1 01DA                        _inchcnt 016C                     _parclength 026B  
                    _T2CONbits 001C                        _rec_arr 02A0                        _plus111 0155  
             ___aldiv@dividend 00A4                        _plus222 0156                        _onesecf 0153  
                   _minfmspeed 01EA                        _pperiod 01BE                        _prevkey 016E  
                      clrloop0 27F5           end_of_initialization 05CE      disp_hex_window22@hex_data 00A0  
                   _minuspara1 0151                     _minuspara2 0152             __end_ofi1___ftpack 1BF1  
                      init_ram 27E8                        initloop 27E9             __end_ofi1___lwtoft 1835  
                   _kpressread 014A              Update_PWM@Dutycnt 00D9              __end_of_uart_init 1014  
             _disp_hex_window1 19CE               _disp_hex_window2 1A7B         _Adaptive_base_pid$1790 00EA  
       _Adaptive_base_pid$1788 00E4         _Adaptive_base_pid$1789 00E7            __size_of_Update_PWM 002D  
        i1Update_PWM@setwsduty 0076                   _crater_speed 0141                      _RCSTAbits 019D  
             ___aldiv@quotient 00AB                   __pstringtext 2000          i1___wmul@multiplicand 0072  
                   _setcurrent 012A                      _PORTAbits 000C                    _Total_Count 01AE  
                    _PORTCbits 000E                     _pluscount1 0157                     _pluscount2 0158  
             __CFG_FOSC$INTOSC 0000                     _setvoltage 005A                      _TRISAbits 008C  
                    _TRISCbits 008E                  _cWf2t4tmodefg 013B                      i1___aldiv 1D45  
                    i1___ftadd 1168                      i1___ftdiv 1F57                      i1___ftmul 082D  
                    i1___fttol 1E49                     _softstartf 01D4          __size_of_SCANENCODER1 0078  
        __size_of_SCANENCODER2 0077                    _CCP1CONbits 0293                    ___ftdiv@exp 00D3  
                   _statusptr1 012C                    _CCP2CONbits 029A                      _TXSTAbits 019E  
                   _pstowfstru 024E                  ?i1_Update_PWM 0076                _newsetwirespeed 0067  
                  ___ftmul@exp 00BF             enc1_port@portvalue 00A4             __end_of_Displayarr 206E  
               __end_of___ftge 1991                 __end_of___wmul 18DB                    _BAUDCTLbits 019F  
                ?_portpin_init 0070           __end_of_ISR_Function 054A                   _SCANENCODER1 1CCD  
                 _SCANENCODER2 1C56            start_initialization 054C               _MTR_VTG_CONSTANT 01E2  
            __size_ofi1___wmul 001B              __size_of_PWM_init 0019                     ?i1___aldiv 0070  
                   ?i1___ftadd 0030                     ?i1___ftdiv 0020                     ?i1___ftmul 0020  
                   ?i1___fttol 003D                  ?_transmittops 0070               _comm_error_count 013E  
                    _Send_Byte 27D4                 ??i1_Update_PWM 0078                   _fixintervalf 01D2  
                _rel_wirespeed 01C8                _cMtrOverLdDbCnt 022E           __end_of_lookup_table 2058  
                     ??___ftge 00B6                      _iGasDbCnt 01B8                       ??___wmul 00A4  
                  __pdataBANK0 006E                    __pdataBANK1 00EF                    __pdataBANK2 016D  
                  __pdataBANK3 01DA                    __pdataBANK4 0265           __size_of_system_init 000A  
               ??_portpin_init 00A0             i1___aldiv@dividend 0074                Update_PWM@Temp1 00D7  
                    _Tsampling 01E5                _scaled_baseval2 0128              __size_of___altoft 003D  
                 Delayms@delay 00A0              __size_of___ftpack 0065                   ??_Update_PWM 00D5  
                  __pbssBIGRAM 2796                      ___latbits 0003        key_application@keypress 00DD  
            __size_of___lwtoft 0015                  __pcstackBANK0 0020                  __pcstackBANK1 00A0  
     __size_of_key_application 011D                 ??_transmittops 00A1                      _enc1_port 1AD3  
                     ?_Delayms 00A0                      _enc2_port 1A24             _iPowerOnErrSkipCnt 0242  
           i1___aldiv@quotient 0022                     ?_Send_Byte 0070                       ?_Display 0070  
             ___lwdiv@dividend 00A2                   ?_Timer0_init 0070             __end_of_Update_PWM 1955  
                     ?___aldiv 00A0                      _disp1term 0236                      _disp2term 0238  
                    _disp3term 023A                      _disp4term 023C                       ?___ftadd 00A8  
                     ?___ftdiv 00C5               _prevsetwirespeed 0126                       ?___ftneg 00A0  
                     ?___ftmul 00B5                       ?___fttol 00C5                       ?___lwdiv 00A0  
                     ?___lwmod 00A0                      __pswtext1 206E                      _mili1_100 014B  
                    _mili2_100 014C                   _cGasRlyClrfg 0135                      _count_1ms 01B2  
                    _count_2ms 0140       __end_of_disp_hex_window1 1A24       __end_of_disp_hex_window2 1AD3  
                    _count_pid 01CE                      _inchkeyon 01D3                    ??i1___aldiv 0078  
 __end_of_detect_display_error 1168                    ??i1___ftadd 0036                    ??i1___ftdiv 0026  
                 _integral_old 01A9                   _integral_new 01A6                    ??i1___ftmul 0026  
                  ??i1___fttol 0041               ___lwdiv@quotient 00A5                   _scalefactor2 01EC  
                    _error_old 01A3                      _error_new 01A0                  ??_send_status 00A1  
                    _recchksum 015D                     ?_enc1_port 0070                ___aldiv@divisor 00A0  
                   ?_enc2_port 0070                ___aldiv@counter 00A9                 ___wmul@product 00A4  
                     _LATAbits 010C                       _LATBbits 010D                       _LATCbits 010E  
                    _minoutmax 0227                      clear_ram0 27F4                      _recstatus 01C6  
                     _PIE1bits 0091                    _creep_speed 0142                       _PIE2bits 0092  
                    _prevTORCH 016D                       _PIR1bits 0011                       _PIR2bits 0012  
              _universal_error 0166                    _closeloop1f 01CD                      _uart_init 1001  
        __size_of_ISR_Function 0546                      _pluspara1 0159                      _pluspara2 015A  
                    _togglepin 01EF              ___wmul@multiplier 00A0                       i1___wmul 18A4  
                     _PWM_init 188B                    _dispupdatef 006F                      _startptr1 0161  
                    _psstatusu 006C           __end_ofi1_Update_PWM 1900                      _wfstatusu 006D  
                  _mahesh_test 0269                  _cRelSpeedSign 0139                    _count_1msec 013F  
         __end_of_portpin_init 1875                       _Fltpfreq 0120                    ??_Send_Byte 00A0  
             __size_of_Delayms 0028                   _ISR_Function 0004               __size_of_Display 0143  
            ??_key_application 00DB            __end_of_send_status 185F                    _firstpulse1 0147  
                  _firstpulse2 0148                 _cMtrOverLdDbfg 0136                   _secondpulse1 015E  
                 _secondpulse2 015F                     ?_uart_init 0070               __size_of___aldiv 0082  
             __size_of___ftadd 00F6               __size_of___ftdiv 00A9               __size_of___ftneg 0009  
                     ___altoft 1991               __size_of___ftmul 00B4               __size_of___fttol 0087  
             __size_of___lwdiv 0035               __size_of___lwmod 002D           __end_of_transmittops 1B8D  
                     ___ftpack 1BF1                       ___lwtoft 1835            i1Update_PWM@Dutycnt 007C  
                 _send_statusf 0160                    _error_code1 01D0                    _error_code2 01D1  
                     _delinch1 01B6                   _lookup_table 2000                ___lwdiv@divisor 00A0  
              ___lwdiv@counter 00A7                       __ptext10 27C1                       __ptext11 19CE  
                     __ptext20 1AD3                       __ptext12 0800                       __ptext21 188B  
                     __ptext13 07C8                       __ptext30 1014                       __ptext22 1900  
                     __ptext14 10BD                       __ptext31 125E                       __ptext23 1471  
                     __ptext15 1811                       __ptext40 082D                       __ptext32 1991  
                     __ptext24 18BF                       __ptext16 1800                       __ptext41 1F57  
                     __ptext33 1BF1                       __ptext25 1835                       __ptext17 1C56  
                     __ptext42 1168                       __ptext34 1DC7                       __ptext26 1ED0  
                     __ptext18 1A24                       __ptext43 1B8D                       __ptext35 1928  
                     __ptext27 27CB                       __ptext19 1CCD                       __ptext44 1D45  
                     __ptext28 0714                       __ptext45 18DB                       __ptext37 18A4  
                     __ptext29 1955                       __ptext46 05D1                       __ptext38 1822  
                     __ptext39 1E49                       _enccount 0144                       _commandu 01D9  
           Send_Byte@transbyte 00A0                    ??_enc1_port 00A0                    ??_enc2_port 00A0  
                __size_of_main 071F                       _minus111 014D                       _minus222 014E  
                     _setpfreq 024C                  ?_capture_init 0070                       _weldmode 0064  
         _detect_display_error 10BD           __size_of_Timer0_init 0011                       _torchonf 01D5  
                 _prevFltpfreq 024A                    _OSCTUNEbits 0098                     _INTCONbits 000B  
                  _PID_sParams 0320                    _minuscount1 014F                    _minuscount2 0150  
                  _recpsstatus 01C4                 _prevsetcurrent 01C0                     Delayms@xxx 00A2  
                   Delayms@yyy 00A4                       intlevel1 0000                    _send_status 184A  
             ___lwmod@dividend 00A2                 _prevsetvoltage 01C2              _disp_hex_window11 27C1  
            _disp_hex_window22 27C2              __CFG_CLKOUTEN$OFF 0000             ?_disp_hex_window11 00A0  
           ?_disp_hex_window22 00A0                     _OSCCONbits 0099                    _openloopcnt 0248  
                ??_system_init 00A0                 ??_capture_init 00A0          ?_detect_display_error 0070  
                  ??_uart_init 00A0            ??_disp_hex_window11 00A2            ??_disp_hex_window22 00A2  
        __size_ofi1_Update_PWM 0025                   _cMtrOverLdfg 0137              _Adaptive_base_pid 1471  
                _disparclength 023E                ___lwmod@divisor 00A0             ?_Adaptive_base_pid 0070  
              ___lwmod@counter 00A5              ?_disp_hex_window1 00A8              ?_disp_hex_window2 00A8  
                 ___aldiv@sign 00AA          __size_of_portpin_init 0016             ??_disp_hex_window1 00AA  
           ??_disp_hex_window2 00AA                   _Total_Period 0220                   _setwirespeed 005C  
          ??_Adaptive_base_pid 00DB      __end_of_disp_hex_window11 27C2      __end_of_disp_hex_window22 27C3  
                 i1_Update_PWM 18DB          __size_of_transmittops 0061  
