

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Aug 04 16:29:03 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1788
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	idataBANK4,global,class=CODE,delta=2
     9                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	text42,local,class=CODE,merge=1,delta=2
    70                           	psect	text43,local,class=CODE,merge=1,delta=2
    71                           	psect	text44,local,class=CODE,merge=1,delta=2
    72                           	psect	text45,local,class=CODE,merge=1,delta=2
    73                           	psect	text46,local,class=CODE,merge=1,delta=2
    74                           	psect	swtext1,local,class=CONST,delta=2
    75                           	dabs	1,0xCA0,32
    76                           	dabs	1,0xC36,58
    77                           	dabs	1,0x2796,0,_pidParams2
    78                           	dabs	1,0x7E,2
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  0111                     	;# 
   132  0112                     	;# 
   133  0113                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011B                     	;# 
   142  011C                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011D                     	;# 
   146  011E                     	;# 
   147  011F                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018E                     	;# 
   151  0191                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  020E                     	;# 
   189  0210                     	;# 
   190  0211                     	;# 
   191  0211                     	;# 
   192  0212                     	;# 
   193  0212                     	;# 
   194  0213                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0214                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0216                     	;# 
   204  0217                     	;# 
   205  0217                     	;# 
   206  028C                     	;# 
   207  028D                     	;# 
   208  028E                     	;# 
   209  0291                     	;# 
   210  0291                     	;# 
   211  0292                     	;# 
   212  0293                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  030C                     	;# 
   218  030D                     	;# 
   219  030E                     	;# 
   220  0311                     	;# 
   221  0311                     	;# 
   222  0312                     	;# 
   223  0313                     	;# 
   224  038C                     	;# 
   225  038D                     	;# 
   226  038E                     	;# 
   227  0390                     	;# 
   228  0391                     	;# 
   229  0392                     	;# 
   230  0393                     	;# 
   231  0394                     	;# 
   232  0395                     	;# 
   233  0396                     	;# 
   234  0397                     	;# 
   235  0398                     	;# 
   236  0399                     	;# 
   237  039D                     	;# 
   238  039E                     	;# 
   239  039F                     	;# 
   240  0511                     	;# 
   241  0513                     	;# 
   242  051A                     	;# 
   243  0591                     	;# 
   244  0592                     	;# 
   245  0592                     	;# 
   246  0593                     	;# 
   247  0594                     	;# 
   248  0594                     	;# 
   249  0595                     	;# 
   250  0596                     	;# 
   251  0596                     	;# 
   252  0E91                     	;# 
   253  0E92                     	;# 
   254  0E93                     	;# 
   255  0E94                     	;# 
   256  0E95                     	;# 
   257  0E96                     	;# 
   258  0E97                     	;# 
   259  0E98                     	;# 
   260  0E99                     	;# 
   261  0E9A                     	;# 
   262  0E9B                     	;# 
   263  0E9C                     	;# 
   264  0E9D                     	;# 
   265  0E9E                     	;# 
   266  0E9F                     	;# 
   267  0EA0                     	;# 
   268  0EA1                     	;# 
   269  0EA1                     	;# 
   270  0EA2                     	;# 
   271  0EA3                     	;# 
   272  0EA3                     	;# 
   273  0EA4                     	;# 
   274  0EA5                     	;# 
   275  0EA5                     	;# 
   276  0EA6                     	;# 
   277  0EA7                     	;# 
   278  0EA7                     	;# 
   279  0EA8                     	;# 
   280  0EA9                     	;# 
   281  0EAA                     	;# 
   282  0EAB                     	;# 
   283  0EAC                     	;# 
   284  0EAD                     	;# 
   285  0EAE                     	;# 
   286  0EAF                     	;# 
   287  0EB1                     	;# 
   288  0EB2                     	;# 
   289  0EB3                     	;# 
   290  0EB4                     	;# 
   291  0EB5                     	;# 
   292  0EB6                     	;# 
   293  0EB7                     	;# 
   294  0EB8                     	;# 
   295  0EB9                     	;# 
   296  0EBA                     	;# 
   297  0EBB                     	;# 
   298  0EBC                     	;# 
   299  0EBD                     	;# 
   300  0EBE                     	;# 
   301  0EBF                     	;# 
   302  0EC0                     	;# 
   303  0EC1                     	;# 
   304  0EC1                     	;# 
   305  0EC2                     	;# 
   306  0EC3                     	;# 
   307  0EC3                     	;# 
   308  0EC4                     	;# 
   309  0EC5                     	;# 
   310  0EC5                     	;# 
   311  0EC6                     	;# 
   312  0EC7                     	;# 
   313  0EC7                     	;# 
   314  0EC8                     	;# 
   315  0EC9                     	;# 
   316  0ECA                     	;# 
   317  0ECB                     	;# 
   318  0ECC                     	;# 
   319  0ECD                     	;# 
   320  0ECE                     	;# 
   321  0ECF                     	;# 
   322  0ED1                     	;# 
   323  0ED2                     	;# 
   324  0ED3                     	;# 
   325  0ED4                     	;# 
   326  0ED5                     	;# 
   327  0ED6                     	;# 
   328  0ED7                     	;# 
   329  0ED8                     	;# 
   330  0ED9                     	;# 
   331  0EDA                     	;# 
   332  0EDB                     	;# 
   333  0EDC                     	;# 
   334  0EDD                     	;# 
   335  0EDE                     	;# 
   336  0EDF                     	;# 
   337  0EE0                     	;# 
   338  0EE1                     	;# 
   339  0EE1                     	;# 
   340  0EE2                     	;# 
   341  0EE3                     	;# 
   342  0EE3                     	;# 
   343  0EE4                     	;# 
   344  0EE5                     	;# 
   345  0EE5                     	;# 
   346  0EE6                     	;# 
   347  0EE7                     	;# 
   348  0EE7                     	;# 
   349  0EE8                     	;# 
   350  0EE9                     	;# 
   351  0EEA                     	;# 
   352  0EEB                     	;# 
   353  0EEC                     	;# 
   354  0EED                     	;# 
   355  0EEE                     	;# 
   356  0EEF                     	;# 
   357  0F11                     	;# 
   358  0F12                     	;# 
   359  0F13                     	;# 
   360  0F14                     	;# 
   361  0F15                     	;# 
   362  0F16                     	;# 
   363  0F17                     	;# 
   364  0F18                     	;# 
   365  0F19                     	;# 
   366  0F1A                     	;# 
   367  0F1B                     	;# 
   368  0F1C                     	;# 
   369  0F1D                     	;# 
   370  0F1E                     	;# 
   371  0F1F                     	;# 
   372  0F20                     	;# 
   373  0F21                     	;# 
   374  0F21                     	;# 
   375  0F22                     	;# 
   376  0F23                     	;# 
   377  0F23                     	;# 
   378  0F24                     	;# 
   379  0F25                     	;# 
   380  0F25                     	;# 
   381  0F26                     	;# 
   382  0F27                     	;# 
   383  0F27                     	;# 
   384  0F28                     	;# 
   385  0F29                     	;# 
   386  0F2A                     	;# 
   387  0F2B                     	;# 
   388  0F2C                     	;# 
   389  0F2D                     	;# 
   390  0F2E                     	;# 
   391  0F2F                     	;# 
   392  0FE4                     	;# 
   393  0FE5                     	;# 
   394  0FE6                     	;# 
   395  0FE7                     	;# 
   396  0FE8                     	;# 
   397  0FE9                     	;# 
   398  0FEA                     	;# 
   399  0FEB                     	;# 
   400  0FED                     	;# 
   401  0FEE                     	;# 
   402  0FEF                     	;_pidParams2
   403                           
   404                           	psect	idataBANK0
   405  0002                     __pidataBANK0:	
   406                           
   407                           ;initializer for _TORCH
   408  0002  3458               	retlw	88
   409                           
   410                           ;initializer for _dispupdatef
   411  0003  3401               	retlw	1
   412                           
   413                           	psect	idataBANK1
   414  0803                     __pidataBANK1:	
   415                           
   416                           ;initializer for _key
   417  0803  3458               	retlw	88
   418                           
   419                           	psect	idataBANK2
   420  0804                     __pidataBANK2:	
   421                           
   422                           ;initializer for _prevTORCH
   423  0804  34FF               	retlw	255
   424                           
   425                           ;initializer for _prevkey
   426  0805  345A               	retlw	90
   427                           
   428                           	psect	idataBANK3
   429  1848                     __pidataBANK3:	
   430                           
   431                           ;initializer for _diswin1
   432  1848  3430               	retlw	48
   433  1849  3430               	retlw	48
   434  184A  3430               	retlw	48
   435  184B  3430               	retlw	48
   436  184C  3430               	retlw	48
   437  184D  3430               	retlw	48
   438  184E  3430               	retlw	48
   439  184F  3430               	retlw	48
   440                           
   441                           ;initializer for _Tsampling
   442  1850  3400               	retlw	0
   443  1851  3480               	retlw	128
   444  1852  343F               	retlw	63
   445                           
   446                           ;initializer for _maxfmspeed
   447  1853  34EE               	retlw	238
   448  1854  3402               	retlw	2
   449                           
   450                           ;initializer for _minfmspeed
   451  1855  3432               	retlw	50
   452  1856  3400               	retlw	0
   453                           
   454                           ;initializer for _scalefactor2
   455  1857  3447               	retlw	71
   456  1858  3400               	retlw	0
   457                           
   458                           ;initializer for _speeedrate
   459  1859  340A               	retlw	10
   460  185A  3400               	retlw	0
   461                           
   462                           ;initializer for _displayonf
   463  185B  3401               	retlw	1
   464                           
   465                           ;initializer for _togglepin
   466  185C  3401               	retlw	1
   467                           
   468                           ;initializer for _wfspeedchangef
   469  185D  3401               	retlw	1
   470                           
   471                           	psect	idataBANK4
   472  1800                     __pidataBANK4:	
   473                           
   474                           ;initializer for _Actual_amp
   475  1800  34FF               	retlw	255
   476  1801  34FF               	retlw	255
   477                           
   478                           ;initializer for _Actual_vtg
   479  1802  34FF               	retlw	255
   480  1803  34FF               	retlw	255
   481                           
   482                           ;initializer for _mahesh_test
   483  1804  3432               	retlw	50
   484  1805  3400               	retlw	0
   485                           
   486                           ;initializer for _parclength
   487  1806  34FF               	retlw	255
   488  1807  34FF               	retlw	255
   489                           
   490                           	psect	stringtext
   491  2000                     __pstringtext:	
   492  2000                     _lookup_table:	
   493  2000  343F               	retlw	63
   494  2001  3400               	retlw	0
   495  2002  3406               	retlw	6
   496  2003  3400               	retlw	0
   497  2004  345B               	retlw	91
   498  2005  3400               	retlw	0
   499  2006  344F               	retlw	79
   500  2007  3400               	retlw	0
   501  2008  3466               	retlw	102
   502  2009  3400               	retlw	0
   503  200A  346D               	retlw	109
   504  200B  3400               	retlw	0
   505  200C  347D               	retlw	125
   506  200D  3400               	retlw	0
   507  200E  3407               	retlw	7
   508  200F  3400               	retlw	0
   509  2010  347F               	retlw	127
   510  2011  3400               	retlw	0
   511  2012  346F               	retlw	111
   512  2013  3400               	retlw	0
   513  2014  3480               	retlw	128
   514  2015  3400               	retlw	0
   515  2016  3477               	retlw	119
   516  2017  3400               	retlw	0
   517  2018  347C               	retlw	124
   518  2019  3400               	retlw	0
   519  201A  3439               	retlw	57
   520  201B  3400               	retlw	0
   521  201C  345E               	retlw	94
   522  201D  3400               	retlw	0
   523  201E  3479               	retlw	121
   524  201F  3400               	retlw	0
   525  2020  3471               	retlw	113
   526  2021  3400               	retlw	0
   527  2022  343D               	retlw	61
   528  2023  3400               	retlw	0
   529  2024  3476               	retlw	118
   530  2025  3400               	retlw	0
   531  2026  3406               	retlw	6
   532  2027  3400               	retlw	0
   533  2028  341E               	retlw	30
   534  2029  3400               	retlw	0
   535  202A  3470               	retlw	112
   536  202B  3400               	retlw	0
   537  202C  3438               	retlw	56
   538  202D  3400               	retlw	0
   539  202E  3455               	retlw	85
   540  202F  3400               	retlw	0
   541  2030  3454               	retlw	84
   542  2031  3400               	retlw	0
   543  2032  343F               	retlw	63
   544  2033  3400               	retlw	0
   545  2034  3473               	retlw	115
   546  2035  3400               	retlw	0
   547  2036  3467               	retlw	103
   548  2037  3400               	retlw	0
   549  2038  3450               	retlw	80
   550  2039  3400               	retlw	0
   551  203A  346D               	retlw	109
   552  203B  3400               	retlw	0
   553  203C  3478               	retlw	120
   554  203D  3400               	retlw	0
   555  203E  341C               	retlw	28
   556  203F  3400               	retlw	0
   557  2040  343E               	retlw	62
   558  2041  3400               	retlw	0
   559  2042  346A               	retlw	106
   560  2043  3400               	retlw	0
   561  2044  3468               	retlw	104
   562  2045  3400               	retlw	0
   563  2046  346E               	retlw	110
   564  2047  3400               	retlw	0
   565  2048  3489               	retlw	137
   566  2049  3400               	retlw	0
   567  204A  3400               	retlw	0
   568  204B  3400               	retlw	0
   569  204C  3440               	retlw	64
   570  204D  3400               	retlw	0
   571  204E  34FF               	retlw	255
   572  204F  3400               	retlw	0
   573  2050  3400               	retlw	0
   574  2051  3400               	retlw	0
   575  2052  3400               	retlw	0
   576  2053  3400               	retlw	0
   577  2054  3400               	retlw	0
   578  2055  3400               	retlw	0
   579  2056  3400               	retlw	0
   580  2057  3400               	retlw	0
   581  2058                     __end_of_lookup_table:	
   582  2058                     _Displayarr:	
   583  2058  343F               	retlw	63
   584  2059  3400               	retlw	0
   585  205A  3406               	retlw	6
   586  205B  3400               	retlw	0
   587  205C  345B               	retlw	91
   588  205D  3400               	retlw	0
   589  205E  344F               	retlw	79
   590  205F  3400               	retlw	0
   591  2060  3466               	retlw	102
   592  2061  3400               	retlw	0
   593  2062  346D               	retlw	109
   594  2063  3400               	retlw	0
   595  2064  347D               	retlw	125
   596  2065  3400               	retlw	0
   597  2066  3407               	retlw	7
   598  2067  3400               	retlw	0
   599  2068  347F               	retlw	127
   600  2069  3400               	retlw	0
   601  206A  346F               	retlw	111
   602  206B  3400               	retlw	0
   603  206C  34FF               	retlw	255
   604  206D  3400               	retlw	0
   605  206E                     __end_of_Displayarr:	
   606  000B                     _INTCONbits	set	11
   607  0011                     _PIR1	set	17
   608  0011                     _PIR1bits	set	17
   609  0012                     _PIR2bits	set	18
   610  000C                     _PORTA	set	12
   611  000C                     _PORTAbits	set	12
   612  000D                     _PORTB	set	13
   613  000E                     _PORTC	set	14
   614  000E                     _PORTCbits	set	14
   615  001B                     _PR2	set	27
   616  0018                     _T1CON	set	24
   617  001C                     _T2CONbits	set	28
   618  0015                     _TMR0	set	21
   619  0017                     _TMR1H	set	23
   620  0016                     _TMR1L	set	22
   621  0095                     _OPTION_REGbits	set	149
   622  0099                     _OSCCONbits	set	153
   623  0098                     _OSCTUNEbits	set	152
   624  0091                     _PIE1bits	set	145
   625  0092                     _PIE2bits	set	146
   626  008C                     _TRISA	set	140
   627  008C                     _TRISAbits	set	140
   628  008D                     _TRISB	set	141
   629  008E                     _TRISC	set	142
   630  008E                     _TRISCbits	set	142
   631  010C                     _LATAbits	set	268
   632  010D                     _LATB	set	269
   633  010D                     _LATBbits	set	269
   634  010E                     _LATCbits	set	270
   635  018C                     _ANSELA	set	396
   636  018D                     _ANSELB	set	397
   637  019F                     _BAUDCTLbits	set	415
   638  0199                     _RCREG	set	409
   639  019D                     _RCSTAbits	set	413
   640  019B                     _SPBRG	set	411
   641  019A                     _TXREG	set	410
   642  019E                     _TXSTA	set	414
   643  019E                     _TXSTAbits	set	414
   644  0293                     _CCP1CONbits	set	659
   645  029A                     _CCP2CONbits	set	666
   646  0291                     _CCPR1L	set	657
   647  0299                     _CCPR2H	set	665
   648  0298                     _CCPR2L	set	664
   649                           
   650                           ; #config settings
   651  0000                     
   652                           	psect	cinit
   653  0553                     start_initialization:	
   654  0553                     __initialization:		;BIGRAM
   655                           
   656                           ; Clear objects allocated to BIGRAM
   657  0553  3096               	movlw	low (0+10134)
   658  0554  0084               	movwf	4
   659  0555  3027               	movlw	high (0+10134)
   660  0556  0085               	movwf	5
   661  0557  305A               	movlw	90
   662  0558  00FE               	movwf	btemp
   663  0559  3000               	movlw	0
   664  055A  00FF               	movwf	btemp+1
   665  055B  3190  2000  3185   	fcall	clear_ram0
   666                           
   667                           ; Clear objects allocated to BANK0
   668  055E  3056               	movlw	low __pbssBANK0
   669  055F  0084               	movwf	4
   670  0560  3000               	movlw	high __pbssBANK0
   671  0561  0085               	movwf	5
   672  0562  3018               	movlw	24
   673  0563  00FE               	movwf	btemp
   674  0564  3000               	movlw	0
   675  0565  00FF               	movwf	btemp+1
   676  0566  3190  2000  3185   	fcall	clear_ram0
   677                           
   678                           ; Clear objects allocated to BANK2
   679  0569  3020               	movlw	low __pbssBANK2
   680  056A  0084               	movwf	4
   681  056B  3001               	movlw	high __pbssBANK2
   682  056C  0085               	movwf	5
   683  056D  304E               	movlw	78
   684  056E  00FE               	movwf	btemp
   685  056F  3000               	movlw	0
   686  0570  00FF               	movwf	btemp+1
   687  0571  3190  2000  3185   	fcall	clear_ram0
   688                           
   689                           ; Clear objects allocated to BANK3
   690  0574  30A0               	movlw	low __pbssBANK3
   691  0575  0084               	movwf	4
   692  0576  3001               	movlw	high __pbssBANK3
   693  0577  0085               	movwf	5
   694  0578  3039               	movlw	57
   695  0579  00FE               	movwf	btemp
   696  057A  3000               	movlw	0
   697  057B  00FF               	movwf	btemp+1
   698  057C  3190  2000  3185   	fcall	clear_ram0
   699                           
   700                           ; Clear objects allocated to BANK4
   701  057F  3020               	movlw	low __pbssBANK4
   702  0580  0084               	movwf	4
   703  0581  3002               	movlw	high __pbssBANK4
   704  0582  0085               	movwf	5
   705  0583  3045               	movlw	69
   706  0584  00FE               	movwf	btemp
   707  0585  3000               	movlw	0
   708  0586  00FF               	movwf	btemp+1
   709  0587  3190  2000  3185   	fcall	clear_ram0
   710                           
   711                           ; Clear objects allocated to BANK5
   712  058A  30A0               	movlw	low __pbssBANK5
   713  058B  0084               	movwf	4
   714  058C  3002               	movlw	high __pbssBANK5
   715  058D  0085               	movwf	5
   716  058E  3016               	movlw	22
   717  058F  00FE               	movwf	btemp
   718  0590  3000               	movlw	0
   719  0591  00FF               	movwf	btemp+1
   720  0592  3190  2000  3185   	fcall	clear_ram0
   721                           
   722                           ; Clear objects allocated to BANK6
   723  0595  3020               	movlw	low __pbssBANK6
   724  0596  0084               	movwf	4
   725  0597  3003               	movlw	high __pbssBANK6
   726  0598  0085               	movwf	5
   727  0599  3049               	movlw	73
   728  059A  00FE               	movwf	btemp
   729  059B  3000               	movlw	0
   730  059C  00FF               	movwf	btemp+1
   731  059D  3190  2000  3185   	fcall	clear_ram0
   732                           
   733                           ; Initialize objects allocated to BANK0
   734  05A0  3180  2002  3185   	fcall	__pidataBANK0	;fetch initializer
   735  05A3  00EE               	movwf	__pdataBANK0& (0+127)
   736  05A4  3180  2003  3185   	fcall	__pidataBANK0+1	;fetch initializer
   737  05A7  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   738                           
   739                           ; Initialize objects allocated to BANK1
   740  05A8  0021               	movlb	1	; select bank1
   741  05A9  3188  2003  3185   	fcall	__pidataBANK1	;fetch initializer
   742  05AC  00EF               	movwf	__pdataBANK1& (0+127)
   743                           
   744                           ; Initialize objects allocated to BANK2
   745  05AD  0022               	movlb	2	; select bank2
   746  05AE  3188  2004  3185   	fcall	__pidataBANK2	;fetch initializer
   747  05B1  00EE               	movwf	__pdataBANK2& (0+127)
   748  05B2  3188  2005  3185   	fcall	__pidataBANK2+1	;fetch initializer
   749  05B5  00EF               	movwf	(__pdataBANK2+1)& (0+127)
   750                           
   751                           ; Initialize objects allocated to BANK3
   752  05B6  3048               	movlw	low __pidataBANK3
   753  05B7  0084               	movwf	4
   754  05B8  3098               	movlw	(high __pidataBANK3)| (0+128)
   755  05B9  0085               	movwf	5
   756  05BA  30D9               	movlw	low __pdataBANK3
   757  05BB  0086               	movwf	6
   758  05BC  3001               	movlw	high __pdataBANK3
   759  05BD  0087               	movwf	7
   760  05BE  3000               	movlw	0
   761  05BF  00FF               	movwf	btemp+1
   762  05C0  3016               	movlw	22
   763  05C1  31A7  27AC  3185   	fcall	init_ram
   764                           
   765                           ; Initialize objects allocated to BANK4
   766  05C4  3000               	movlw	low __pidataBANK4
   767  05C5  0084               	movwf	4
   768  05C6  3098               	movlw	(high __pidataBANK4)| (0+128)
   769  05C7  0085               	movwf	5
   770  05C8  3065               	movlw	low __pdataBANK4
   771  05C9  0086               	movwf	6
   772  05CA  3002               	movlw	high __pdataBANK4
   773  05CB  0087               	movwf	7
   774  05CC  3000               	movlw	0
   775  05CD  00FF               	movwf	btemp+1
   776  05CE  3008               	movlw	8
   777  05CF  31A7  27AC         	fcall	init_ram
   778  05D1                     end_of_initialization:	
   779                           ;End of C runtime variable initialization code
   780                           
   781  05D1                     __end_of__initialization:	
   782  05D1  0020               	movlb	0
   783  05D2  3188  28B1         	ljmp	_main	;jump to C main() function
   784                           
   785                           	psect	bssBANK0
   786  0056                     __pbssBANK0:	
   787  0056                     _new1:	
   788  0056                     	ds	2
   789  0058                     _new2:	
   790  0058                     	ds	2
   791  005A                     _setvoltage:	
   792  005A                     	ds	2
   793  005C                     _setwirespeed:	
   794  005C                     	ds	2
   795  005E                     _cEditfg:	
   796  005E                     	ds	1
   797  005F                     _digit:	
   798  005F                     	ds	1
   799  0060                     _encod2:	
   800  0060                     	ds	1
   801  0061                     _portbstatus:	
   802  0061                     	ds	1
   803  0062                     _rxdata:	
   804  0062                     	ds	1
   805  0063                     _temp:	
   806  0063                     	ds	1
   807  0064                     _weldmode:	
   808  0064                     	ds	1
   809  0065                     _TypeU:	
   810  0065                     	ds	2
   811  0067                     _newsetwirespeed:	
   812  0067                     	ds	2
   813  0069                     _pfreq:	
   814  0069                     	ds	2
   815  006B                     _TypeDP:	
   816  006B                     	ds	1
   817  006C                     _psstatusu:	
   818  006C                     	ds	1
   819  006D                     _wfstatusu:	
   820  006D                     	ds	1
   821                           
   822                           	psect	dataBANK0
   823  006E                     __pdataBANK0:	
   824  006E                     _TORCH:	
   825  006E                     	ds	1
   826  006F                     _dispupdatef:	
   827  006F                     	ds	1
   828                           
   829                           	psect	dataBANK1
   830  00EF                     __pdataBANK1:	
   831  00EF                     _key:	
   832  00EF                     	ds	1
   833                           
   834                           	psect	bssBANK2
   835  0120                     __pbssBANK2:	
   836  0120                     _Fltpfreq:	
   837  0120                     	ds	2
   838  0122                     _delinch:	
   839  0122                     	ds	2
   840  0124                     _delinch1:	
   841  0124                     	ds	2
   842  0126                     _ijk:	
   843  0126                     	ds	2
   844  0128                     _lmn:	
   845  0128                     	ds	2
   846  012A                     _prevsetwirespeed:	
   847  012A                     	ds	2
   848  012C                     _scaled_baseval2:	
   849  012C                     	ds	2
   850  012E                     _setcurrent:	
   851  012E                     	ds	2
   852  0130                     _statusptr1:	
   853  0130                     	ds	2
   854  0132                     _Count:	
   855  0132                     	ds	1
   856  0133                     _OneH:	
   857  0133                     	ds	1
   858  0134                     _OneL:	
   859  0134                     	ds	1
   860  0135                     _TwoH:	
   861  0135                     	ds	1
   862  0136                     _TwoL:	
   863  0136                     	ds	1
   864  0137                     _adaptivepidf:	
   865  0137                     	ds	1
   866  0138                     _arrptr:	
   867  0138                     	ds	1
   868  0139                     _cGasRlyClrfg:	
   869  0139                     	ds	1
   870  013A                     _cMtrOverLdDbfg:	
   871  013A                     	ds	1
   872  013B                     _cMtrOverLdfg:	
   873  013B                     	ds	1
   874  013C                     _cPowerOnErrSkipfg:	
   875  013C                     	ds	1
   876  013D                     _cTorchPressfg:	
   877  013D                     	ds	1
   878  013E                     _chksum:	
   879  013E                     	ds	1
   880  013F                     _closeloopf:	
   881  013F                     	ds	1
   882  0140                     _comm_error_count:	
   883  0140                     	ds	1
   884  0141                     _count_1msec:	
   885  0141                     	ds	1
   886  0142                     _count_2ms:	
   887  0142                     	ds	1
   888  0143                     _crater_speed:	
   889  0143                     	ds	1
   890  0144                     _creep_speed:	
   891  0144                     	ds	1
   892  0145                     _cyclestrtf:	
   893  0145                     	ds	1
   894  0146                     _enccount:	
   895  0146                     	ds	1
   896  0147                     _encod1:	
   897  0147                     	ds	1
   898  0148                     _error8:	
   899  0148                     	ds	1
   900  0149                     _firstpulse1:	
   901  0149                     	ds	1
   902  014A                     _firstpulse2:	
   903  014A                     	ds	1
   904  014B                     _i:	
   905  014B                     	ds	1
   906  014C                     _kpressread:	
   907  014C                     	ds	1
   908  014D                     _mili1_100:	
   909  014D                     	ds	1
   910  014E                     _mili2_100:	
   911  014E                     	ds	1
   912  014F                     _minus111:	
   913  014F                     	ds	1
   914  0150                     _minus222:	
   915  0150                     	ds	1
   916  0151                     _minuscount1:	
   917  0151                     	ds	1
   918  0152                     _minuscount2:	
   919  0152                     	ds	1
   920  0153                     _minuspara1:	
   921  0153                     	ds	1
   922  0154                     _minuspara2:	
   923  0154                     	ds	1
   924  0155                     _onesecf:	
   925  0155                     	ds	1
   926  0156                     _pcount:	
   927  0156                     	ds	1
   928  0157                     _plus111:	
   929  0157                     	ds	1
   930  0158                     _plus222:	
   931  0158                     	ds	1
   932  0159                     _pluscount1:	
   933  0159                     	ds	1
   934  015A                     _pluscount2:	
   935  015A                     	ds	1
   936  015B                     _pluspara1:	
   937  015B                     	ds	1
   938  015C                     _pluspara2:	
   939  015C                     	ds	1
   940  015D                     _pportb:	
   941  015D                     	ds	1
   942  015E                     _read_enc1f:	
   943  015E                     	ds	1
   944  015F                     _recchksum:	
   945  015F                     	ds	1
   946  0160                     _secondpulse1:	
   947  0160                     	ds	1
   948  0161                     _secondpulse2:	
   949  0161                     	ds	1
   950  0162                     _send_statusf:	
   951  0162                     	ds	1
   952  0163                     _startptr1:	
   953  0163                     	ds	1
   954  0164                     _tans:	
   955  0164                     	ds	1
   956  0165                     _torchstatus2:	
   957  0165                     	ds	1
   958  0166                     _transmitonf:	
   959  0166                     	ds	1
   960  0167                     _universal_error:	
   961  0167                     	ds	1
   962  0168                     _universal_error_latch:	
   963  0168                     	ds	1
   964  0169                     _avgpperiod:	
   965  0169                     	ds	2
   966  016B                     _erroru:	
   967  016B                     	ds	2
   968  016D                     _inchcnt:	
   969  016D                     	ds	1
   970                           
   971                           	psect	dataBANK2
   972  016E                     __pdataBANK2:	
   973  016E                     _prevTORCH:	
   974  016E                     	ds	1
   975  016F                     _prevkey:	
   976  016F                     	ds	1
   977                           
   978                           	psect	bssBANK3
   979  01A0                     __pbssBANK3:	
   980  01A0                     _error_new:	
   981  01A0                     	ds	3
   982  01A3                     _error_old:	
   983  01A3                     	ds	3
   984  01A6                     _integral_new:	
   985  01A6                     	ds	3
   986  01A9                     _integral_old:	
   987  01A9                     	ds	3
   988  01AC                     _One:	
   989  01AC                     	ds	2
   990  01AE                     _Total_Count:	
   991  01AE                     	ds	2
   992  01B0                     _Two:	
   993  01B0                     	ds	2
   994  01B2                     _count_1ms:	
   995  01B2                     	ds	2
   996  01B4                     _iGasDbCnt:	
   997  01B4                     	ds	2
   998  01B6                     _old1:	
   999  01B6                     	ds	2
  1000  01B8                     _old2:	
  1001  01B8                     	ds	2
  1002  01BA                     _pperiod:	
  1003  01BA                     	ds	2
  1004  01BC                     _prevsetcurrent:	
  1005  01BC                     	ds	2
  1006  01BE                     _prevsetvoltage:	
  1007  01BE                     	ds	2
  1008  01C0                     _recpsstatus:	
  1009  01C0                     	ds	2
  1010  01C2                     _recstatus:	
  1011  01C2                     	ds	2
  1012  01C4                     _rel_wirespeed:	
  1013  01C4                     	ds	2
  1014  01C6                     _Tx_ptr:	
  1015  01C6                     	ds	1
  1016  01C7                     _cRelSpeedSign:	
  1017  01C7                     	ds	1
  1018  01C8                     _cTestfg:	
  1019  01C8                     	ds	1
  1020  01C9                     _cWf2t4tmodefg:	
  1021  01C9                     	ds	1
  1022  01CA                     _capintervalf:	
  1023  01CA                     	ds	1
  1024  01CB                     _closeloop1f:	
  1025  01CB                     	ds	1
  1026  01CC                     _count_pid:	
  1027  01CC                     	ds	1
  1028  01CD                     _error4:	
  1029  01CD                     	ds	1
  1030  01CE                     _error_code1:	
  1031  01CE                     	ds	1
  1032  01CF                     _error_code2:	
  1033  01CF                     	ds	1
  1034  01D0                     _fixintervalf:	
  1035  01D0                     	ds	1
  1036  01D1                     _inchkeyon:	
  1037  01D1                     	ds	1
  1038  01D2                     _softstartf:	
  1039  01D2                     	ds	1
  1040  01D3                     _torchonf:	
  1041  01D3                     	ds	1
  1042  01D4                     _torchstatus1:	
  1043  01D4                     	ds	1
  1044  01D5                     _txonf:	
  1045  01D5                     	ds	1
  1046  01D6                     _updatedispf:	
  1047  01D6                     	ds	1
  1048  01D7                     _wfstatusbyte:	
  1049  01D7                     	ds	1
  1050  01D8                     _commandu:	
  1051  01D8                     	ds	1
  1052                           
  1053                           	psect	dataBANK3
  1054  01D9                     __pdataBANK3:	
  1055  01D9                     _diswin1:	
  1056  01D9                     	ds	8
  1057  01E1                     _Tsampling:	
  1058  01E1                     	ds	3
  1059  01E4                     _maxfmspeed:	
  1060  01E4                     	ds	2
  1061  01E6                     _minfmspeed:	
  1062  01E6                     	ds	2
  1063  01E8                     _scalefactor2:	
  1064  01E8                     	ds	2
  1065  01EA                     _speeedrate:	
  1066  01EA                     	ds	2
  1067  01EC                     _displayonf:	
  1068  01EC                     	ds	1
  1069  01ED                     _togglepin:	
  1070  01ED                     	ds	1
  1071  01EE                     _wfspeedchangef:	
  1072  01EE                     	ds	1
  1073                           
  1074                           	psect	bssBANK4
  1075  0220                     __pbssBANK4:	
  1076  0220                     _Total_Period:	
  1077  0220                     	ds	4
  1078  0224                     _controller_out:	
  1079  0224                     	ds	3
  1080  0227                     _minoutmax:	
  1081  0227                     	ds	3
  1082  022A                     _Hi_setppwm:	
  1083  022A                     	ds	2
  1084  022C                     _Lo_setppwm:	
  1085  022C                     	ds	2
  1086  022E                     _cMtrOverLdDbCnt:	
  1087  022E                     	ds	2
  1088  0230                     _count_transms:	
  1089  0230                     	ds	2
  1090  0232                     _creepspeed:	
  1091  0232                     	ds	2
  1092  0234                     _delay:	
  1093  0234                     	ds	2
  1094  0236                     _disp1term:	
  1095  0236                     	ds	2
  1096  0238                     _disp2term:	
  1097  0238                     	ds	2
  1098  023A                     _disp3term:	
  1099  023A                     	ds	2
  1100  023C                     _disp4term:	
  1101  023C                     	ds	2
  1102  023E                     _disparclength:	
  1103  023E                     	ds	2
  1104  0240                     _gapfreq:	
  1105  0240                     	ds	2
  1106  0242                     _iPowerOnErrSkipCnt:	
  1107  0242                     	ds	2
  1108  0244                     _iTest:	
  1109  0244                     	ds	2
  1110  0246                     _iii:	
  1111  0246                     	ds	2
  1112  0248                     _openloopcnt:	
  1113  0248                     	ds	2
  1114  024A                     _prevFltpfreq:	
  1115  024A                     	ds	2
  1116  024C                     _setpfreq:	
  1117  024C                     	ds	2
  1118  024E                     _pstowfstru:	
  1119  024E                     	ds	23
  1120                           
  1121                           	psect	dataBANK4
  1122  0265                     __pdataBANK4:	
  1123  0265                     _Actual_amp:	
  1124  0265                     	ds	2
  1125  0267                     _Actual_vtg:	
  1126  0267                     	ds	2
  1127  0269                     _mahesh_test:	
  1128  0269                     	ds	2
  1129  026B                     _parclength:	
  1130  026B                     	ds	2
  1131                           
  1132                           	psect	bssBANK5
  1133  02A0                     __pbssBANK5:	
  1134  02A0                     _rec_arr:	
  1135  02A0                     	ds	22
  1136                           
  1137                           	psect	bssBANK6
  1138  0320                     __pbssBANK6:	
  1139  0320                     _PID_sParams:	
  1140  0320                     	ds	73
  1141                           
  1142                           	psect	clrtext
  1143  1000                     clear_ram0:	
  1144                           ;	Called with FSR0 containing the base address, and
  1145                           ;	btemp/btemp+1 has the size to clear
  1146                           
  1147  1000  0064               	clrwdt	;clear the watchdog before getting into this loop
  1148  1001                     clrloop0:	
  1149  1001  0180               	clrf	0	;clear RAM location pointed to by FSR
  1150  1002  3101               	addfsr 0,1
  1151  1003  3001               	movlw	1
  1152  1004  02FE               	subwf	126,f
  1153  1005  3000               	movlw	0
  1154  1006  3BFF               	subwfb	127,f
  1155  1007  087F               	movf	127,w
  1156  1008  047E               	iorwf	126,w
  1157  1009  1903               	btfsc	3,2
  1158  100A  3400               	retlw	0	;all done for this memory range, return
  1159  100B  2801               	goto	clrloop0	;have we reached the end yet?
  1160                           
  1161                           	psect	inittext
  1162  27AC                     init_ram:	
  1163  27AC  00FE               	movwf	126
  1164  27AD                     initloop:	
  1165  27AD  0012               	moviw fsr0++
  1166  27AE  001E               	movwi fsr1++
  1167  27AF  3001               	movlw	1
  1168  27B0  02FE               	subwf	126,f
  1169  27B1  3000               	movlw	0
  1170  27B2  3BFF               	subwfb	127,f
  1171  27B3  087F               	movf	127,w
  1172  27B4  047E               	iorwf	126,w
  1173  27B5  1903               	btfsc	3,2
  1174  27B6  3400               	retlw	0
  1175  27B7  2FAD               	goto	initloop
  1176                           
  1177                           	psect	cstackBANK1
  1178  00A0                     __pcstackBANK1:	
  1179  00A0                     ??_enc1_port:	
  1180  00A0                     ??_enc2_port:	
  1181                           ; 0 bytes @ 0x0
  1182                           
  1183  00A0                     ??_system_init:	
  1184                           ; 0 bytes @ 0x0
  1185                           
  1186  00A0                     ??_portpin_init:	
  1187                           ; 0 bytes @ 0x0
  1188                           
  1189  00A0                     ??_Timer0_init:	
  1190                           ; 0 bytes @ 0x0
  1191                           
  1192  00A0                     ??_PWM_init:	
  1193                           ; 0 bytes @ 0x0
  1194                           
  1195  00A0                     ??_capture_init:	
  1196                           ; 0 bytes @ 0x0
  1197                           
  1198  00A0                     ??_uart_init:	
  1199                           ; 0 bytes @ 0x0
  1200                           
  1201  00A0                     ?_disp_hex_window11:	
  1202                           ; 0 bytes @ 0x0
  1203                           
  1204  00A0                     ?_disp_hex_window22:	
  1205                           ; 0 bytes @ 0x0
  1206                           
  1207  00A0                     ?_Delayms:	
  1208                           ; 0 bytes @ 0x0
  1209                           
  1210  00A0                     ??_Send_Byte:	
  1211                           ; 0 bytes @ 0x0
  1212                           
  1213  00A0                     ?___wmul:	
  1214                           ; 0 bytes @ 0x0
  1215                           
  1216  00A0                     ?___lwdiv:	
  1217                           ; 2 bytes @ 0x0
  1218                           
  1219  00A0                     ?___lwmod:	
  1220                           ; 2 bytes @ 0x0
  1221                           
  1222  00A0                     ?___ftpack:	
  1223                           ; 2 bytes @ 0x0
  1224                           
  1225  00A0                     ?___ftneg:	
  1226                           ; 3 bytes @ 0x0
  1227                           
  1228  00A0                     ?___aldiv:	
  1229                           ; 3 bytes @ 0x0
  1230                           
  1231  00A0                     Send_Byte@transbyte:	
  1232                           ; 4 bytes @ 0x0
  1233                           
  1234  00A0                     disp_hex_window11@hex_data:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  00A0                     disp_hex_window22@hex_data:	
  1238                           ; 2 bytes @ 0x0
  1239                           
  1240  00A0                     Delayms@delay:	
  1241                           ; 2 bytes @ 0x0
  1242                           
  1243  00A0                     ___wmul@multiplier:	
  1244                           ; 2 bytes @ 0x0
  1245                           
  1246  00A0                     ___lwdiv@divisor:	
  1247                           ; 2 bytes @ 0x0
  1248                           
  1249  00A0                     ___lwmod@divisor:	
  1250                           ; 2 bytes @ 0x0
  1251                           
  1252  00A0                     ___ftpack@arg:	
  1253                           ; 2 bytes @ 0x0
  1254                           
  1255  00A0                     ___ftneg@f1:	
  1256                           ; 3 bytes @ 0x0
  1257                           
  1258  00A0                     ___aldiv@divisor:	
  1259                           ; 3 bytes @ 0x0
  1260                           
  1261                           
  1262                           ; 4 bytes @ 0x0
  1263  00A0                     	ds	1
  1264  00A1                     ??_send_status:	
  1265  00A1                     ??_transmittops:	
  1266                           ; 0 bytes @ 0x1
  1267                           
  1268                           
  1269                           ; 0 bytes @ 0x1
  1270  00A1                     	ds	1
  1271  00A2                     ??_disp_hex_window11:	
  1272  00A2                     ??_disp_hex_window22:	
  1273                           ; 0 bytes @ 0x2
  1274                           
  1275  00A2                     ??_Delayms:	
  1276                           ; 0 bytes @ 0x2
  1277                           
  1278  00A2                     Delayms@xxx:	
  1279                           ; 0 bytes @ 0x2
  1280                           
  1281  00A2                     ___wmul@multiplicand:	
  1282                           ; 2 bytes @ 0x2
  1283                           
  1284  00A2                     ___lwdiv@dividend:	
  1285                           ; 2 bytes @ 0x2
  1286                           
  1287  00A2                     ___lwmod@dividend:	
  1288                           ; 2 bytes @ 0x2
  1289                           
  1290                           
  1291                           ; 2 bytes @ 0x2
  1292  00A2                     	ds	1
  1293  00A3                     ??___ftneg:	
  1294  00A3                     ___ftpack@exp:	
  1295                           ; 0 bytes @ 0x3
  1296                           
  1297  00A3                     enc2_port@portvalue:	
  1298                           ; 1 bytes @ 0x3
  1299                           
  1300                           
  1301                           ; 2 bytes @ 0x3
  1302  00A3                     	ds	1
  1303  00A4                     ??___wmul:	
  1304  00A4                     ??___lwdiv:	
  1305                           ; 0 bytes @ 0x4
  1306                           
  1307  00A4                     ??___lwmod:	
  1308                           ; 0 bytes @ 0x4
  1309                           
  1310  00A4                     ___ftpack@sign:	
  1311                           ; 0 bytes @ 0x4
  1312                           
  1313  00A4                     Delayms@yyy:	
  1314                           ; 1 bytes @ 0x4
  1315                           
  1316  00A4                     enc1_port@portvalue:	
  1317                           ; 2 bytes @ 0x4
  1318                           
  1319  00A4                     ___wmul@product:	
  1320                           ; 2 bytes @ 0x4
  1321                           
  1322  00A4                     ___aldiv@dividend:	
  1323                           ; 2 bytes @ 0x4
  1324                           
  1325                           
  1326                           ; 4 bytes @ 0x4
  1327  00A4                     	ds	1
  1328  00A5                     ??___ftpack:	
  1329  00A5                     ??_SCANENCODER2:	
  1330                           ; 0 bytes @ 0x5
  1331                           
  1332  00A5                     ___lwmod@counter:	
  1333                           ; 0 bytes @ 0x5
  1334                           
  1335  00A5                     ___lwdiv@quotient:	
  1336                           ; 1 bytes @ 0x5
  1337                           
  1338                           
  1339                           ; 2 bytes @ 0x5
  1340  00A5                     	ds	1
  1341  00A6                     ??_SCANENCODER1:	
  1342  00A6                     SCANENCODER2@result:	
  1343                           ; 0 bytes @ 0x6
  1344                           
  1345                           
  1346                           ; 1 bytes @ 0x6
  1347  00A6                     	ds	1
  1348  00A7                     SCANENCODER1@result:	
  1349  00A7                     ___lwdiv@counter:	
  1350                           ; 1 bytes @ 0x7
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0x7
  1354  00A7                     	ds	1
  1355  00A8                     ?_disp_hex_window1:	
  1356  00A8                     ?_disp_hex_window2:	
  1357                           ; 0 bytes @ 0x8
  1358                           
  1359  00A8                     ??___aldiv:	
  1360                           ; 0 bytes @ 0x8
  1361                           
  1362  00A8                     ?___altoft:	
  1363                           ; 0 bytes @ 0x8
  1364                           
  1365  00A8                     ?___ftadd:	
  1366                           ; 3 bytes @ 0x8
  1367                           
  1368  00A8                     ?___lwtoft:	
  1369                           ; 3 bytes @ 0x8
  1370                           
  1371  00A8                     disp_hex_window1@hex_data:	
  1372                           ; 3 bytes @ 0x8
  1373                           
  1374  00A8                     disp_hex_window2@hex_data:	
  1375                           ; 2 bytes @ 0x8
  1376                           
  1377  00A8                     ___lwtoft@c:	
  1378                           ; 2 bytes @ 0x8
  1379                           
  1380  00A8                     ___ftadd@f1:	
  1381                           ; 2 bytes @ 0x8
  1382                           
  1383  00A8                     ___altoft@c:	
  1384                           ; 3 bytes @ 0x8
  1385                           
  1386                           
  1387                           ; 4 bytes @ 0x8
  1388  00A8                     	ds	1
  1389  00A9                     ___aldiv@counter:	
  1390                           
  1391                           ; 1 bytes @ 0x9
  1392  00A9                     	ds	1
  1393  00AA                     ??_disp_hex_window1:	
  1394  00AA                     ??_disp_hex_window2:	
  1395                           ; 0 bytes @ 0xA
  1396                           
  1397  00AA                     ___aldiv@sign:	
  1398                           ; 0 bytes @ 0xA
  1399                           
  1400                           
  1401                           ; 1 bytes @ 0xA
  1402  00AA                     	ds	1
  1403  00AB                     ??___lwtoft:	
  1404  00AB                     ___ftadd@f2:	
  1405                           ; 0 bytes @ 0xB
  1406                           
  1407  00AB                     ___aldiv@quotient:	
  1408                           ; 3 bytes @ 0xB
  1409                           
  1410                           
  1411                           ; 4 bytes @ 0xB
  1412  00AB                     	ds	1
  1413  00AC                     ??___altoft:	
  1414                           
  1415                           ; 0 bytes @ 0xC
  1416  00AC                     	ds	2
  1417  00AE                     ??___ftadd:	
  1418  00AE                     ___altoft@exp:	
  1419                           ; 0 bytes @ 0xE
  1420                           
  1421                           
  1422                           ; 1 bytes @ 0xE
  1423  00AE                     	ds	1
  1424  00AF                     ___altoft@sign:	
  1425                           
  1426                           ; 1 bytes @ 0xF
  1427  00AF                     	ds	1
  1428  00B0                     ?___ftge:	
  1429  00B0                     ___ftge@ff1:	
  1430                           ; 1 bit 
  1431                           
  1432                           
  1433                           ; 3 bytes @ 0x10
  1434  00B0                     	ds	2
  1435  00B2                     ___ftadd@sign:	
  1436                           
  1437                           ; 1 bytes @ 0x12
  1438  00B2                     	ds	1
  1439  00B3                     ___ftadd@exp2:	
  1440  00B3                     ___ftge@ff2:	
  1441                           ; 1 bytes @ 0x13
  1442                           
  1443                           
  1444                           ; 3 bytes @ 0x13
  1445  00B3                     	ds	1
  1446  00B4                     ___ftadd@exp1:	
  1447                           
  1448                           ; 1 bytes @ 0x14
  1449  00B4                     	ds	1
  1450  00B5                     ?___ftmul:	
  1451  00B5                     ___ftmul@f1:	
  1452                           ; 3 bytes @ 0x15
  1453                           
  1454                           
  1455                           ; 3 bytes @ 0x15
  1456  00B5                     	ds	1
  1457  00B6                     ??___ftge:	
  1458                           
  1459                           ; 0 bytes @ 0x16
  1460  00B6                     	ds	2
  1461  00B8                     ___ftmul@f2:	
  1462                           
  1463                           ; 3 bytes @ 0x18
  1464  00B8                     	ds	3
  1465  00BB                     ??___ftmul:	
  1466                           
  1467                           ; 0 bytes @ 0x1B
  1468  00BB                     	ds	4
  1469  00BF                     ___ftmul@exp:	
  1470                           
  1471                           ; 1 bytes @ 0x1F
  1472  00BF                     	ds	1
  1473  00C0                     ___ftmul@f3_as_product:	
  1474                           
  1475                           ; 3 bytes @ 0x20
  1476  00C0                     	ds	3
  1477  00C3                     ___ftmul@cntr:	
  1478                           
  1479                           ; 1 bytes @ 0x23
  1480  00C3                     	ds	1
  1481  00C4                     ___ftmul@sign:	
  1482                           
  1483                           ; 1 bytes @ 0x24
  1484  00C4                     	ds	1
  1485  00C5                     ?___ftdiv:	
  1486  00C5                     ?___fttol:	
  1487                           ; 3 bytes @ 0x25
  1488                           
  1489  00C5                     ___ftdiv@f2:	
  1490                           ; 4 bytes @ 0x25
  1491                           
  1492  00C5                     ___fttol@f1:	
  1493                           ; 3 bytes @ 0x25
  1494                           
  1495                           
  1496                           ; 3 bytes @ 0x25
  1497  00C5                     	ds	3
  1498  00C8                     ___ftdiv@f1:	
  1499                           
  1500                           ; 3 bytes @ 0x28
  1501  00C8                     	ds	1
  1502  00C9                     ??___fttol:	
  1503                           
  1504                           ; 0 bytes @ 0x29
  1505  00C9                     	ds	2
  1506  00CB                     ??___ftdiv:	
  1507                           
  1508                           ; 0 bytes @ 0x2B
  1509  00CB                     	ds	2
  1510  00CD                     ___fttol@sign1:	
  1511                           
  1512                           ; 1 bytes @ 0x2D
  1513  00CD                     	ds	1
  1514  00CE                     ___fttol@lval:	
  1515                           
  1516                           ; 4 bytes @ 0x2E
  1517  00CE                     	ds	1
  1518  00CF                     ___ftdiv@cntr:	
  1519                           
  1520                           ; 1 bytes @ 0x2F
  1521  00CF                     	ds	1
  1522  00D0                     ___ftdiv@f3:	
  1523                           
  1524                           ; 3 bytes @ 0x30
  1525  00D0                     	ds	2
  1526  00D2                     ___fttol@exp1:	
  1527                           
  1528                           ; 1 bytes @ 0x32
  1529  00D2                     	ds	1
  1530  00D3                     ?_Update_PWM:	
  1531  00D3                     ___ftdiv@exp:	
  1532                           ; 0 bytes @ 0x33
  1533                           
  1534  00D3                     Update_PWM@setwsduty:	
  1535                           ; 1 bytes @ 0x33
  1536                           
  1537                           
  1538                           ; 2 bytes @ 0x33
  1539  00D3                     	ds	1
  1540  00D4                     ___ftdiv@sign:	
  1541                           
  1542                           ; 1 bytes @ 0x34
  1543  00D4                     	ds	1
  1544  00D5                     ??_Update_PWM:	
  1545                           
  1546                           ; 0 bytes @ 0x35
  1547  00D5                     	ds	2
  1548  00D7                     Update_PWM@Temp1:	
  1549                           
  1550                           ; 2 bytes @ 0x37
  1551  00D7                     	ds	2
  1552  00D9                     Update_PWM@Dutycnt:	
  1553                           
  1554                           ; 2 bytes @ 0x39
  1555  00D9                     	ds	2
  1556  00DB                     ??_key_application:	
  1557  00DB                     ??_detect_display_error:	
  1558                           ; 0 bytes @ 0x3B
  1559                           
  1560  00DB                     ??_Adaptive_base_pid:	
  1561                           ; 0 bytes @ 0x3B
  1562                           
  1563                           
  1564                           ; 0 bytes @ 0x3B
  1565  00DB                     	ds	2
  1566  00DD                     key_application@keypress:	
  1567                           
  1568                           ; 1 bytes @ 0x3D
  1569  00DD                     	ds	7
  1570  00E4                     _Adaptive_base_pid$1788:	
  1571                           
  1572                           ; 3 bytes @ 0x44
  1573  00E4                     	ds	3
  1574  00E7                     _Adaptive_base_pid$1789:	
  1575                           
  1576                           ; 3 bytes @ 0x47
  1577  00E7                     	ds	3
  1578  00EA                     _Adaptive_base_pid$1790:	
  1579                           
  1580                           ; 3 bytes @ 0x4A
  1581  00EA                     	ds	3
  1582  00ED                     ??_main:	
  1583                           
  1584                           ; 0 bytes @ 0x4D
  1585  00ED                     	ds	2
  1586                           
  1587                           	psect	cstackCOMMON
  1588  0070                     __pcstackCOMMON:	
  1589  0070                     ?_system_init:	
  1590  0070                     ?_portpin_init:	
  1591                           ; 0 bytes @ 0x0
  1592                           
  1593  0070                     ?_Timer0_init:	
  1594                           ; 0 bytes @ 0x0
  1595                           
  1596  0070                     ?_PWM_init:	
  1597                           ; 0 bytes @ 0x0
  1598                           
  1599  0070                     ?_capture_init:	
  1600                           ; 0 bytes @ 0x0
  1601                           
  1602  0070                     ?_uart_init:	
  1603                           ; 0 bytes @ 0x0
  1604                           
  1605  0070                     ?_send_status:	
  1606                           ; 0 bytes @ 0x0
  1607                           
  1608  0070                     ?_transmittops:	
  1609                           ; 0 bytes @ 0x0
  1610                           
  1611  0070                     ?_key_application:	
  1612                           ; 0 bytes @ 0x0
  1613                           
  1614  0070                     ?_detect_display_error:	
  1615                           ; 0 bytes @ 0x0
  1616                           
  1617  0070                     ?_Display:	
  1618                           ; 0 bytes @ 0x0
  1619                           
  1620  0070                     ??_Display:	
  1621                           ; 0 bytes @ 0x0
  1622                           
  1623  0070                     ?_Adaptive_base_pid:	
  1624                           ; 0 bytes @ 0x0
  1625                           
  1626  0070                     ?_ISR_Function:	
  1627                           ; 0 bytes @ 0x0
  1628                           
  1629  0070                     ?_main:	
  1630                           ; 0 bytes @ 0x0
  1631                           
  1632  0070                     ?_Send_Byte:	
  1633                           ; 0 bytes @ 0x0
  1634                           
  1635  0070                     ?_enc1_port:	
  1636                           ; 0 bytes @ 0x0
  1637                           
  1638  0070                     ?_enc2_port:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0070                     ?_SCANENCODER1:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644  0070                     ?_SCANENCODER2:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647  0070                     ?i1___wmul:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650  0070                     ?i1___ftpack:	
  1651                           ; 2 bytes @ 0x0
  1652                           
  1653  0070                     ?i1___aldiv:	
  1654                           ; 3 bytes @ 0x0
  1655                           
  1656  0070                     i1___wmul@multiplier:	
  1657                           ; 4 bytes @ 0x0
  1658                           
  1659  0070                     i1___ftpack@arg:	
  1660                           ; 2 bytes @ 0x0
  1661                           
  1662  0070                     i1___aldiv@divisor:	
  1663                           ; 3 bytes @ 0x0
  1664                           
  1665                           
  1666                           ; 4 bytes @ 0x0
  1667  0070                     	ds	2
  1668  0072                     i1___wmul@multiplicand:	
  1669                           
  1670                           ; 2 bytes @ 0x2
  1671  0072                     	ds	1
  1672  0073                     i1___ftpack@exp:	
  1673                           
  1674                           ; 1 bytes @ 0x3
  1675  0073                     	ds	1
  1676  0074                     ??i1___wmul:	
  1677  0074                     i1___ftpack@sign:	
  1678                           ; 0 bytes @ 0x4
  1679                           
  1680  0074                     i1___wmul@product:	
  1681                           ; 1 bytes @ 0x4
  1682                           
  1683  0074                     i1___aldiv@dividend:	
  1684                           ; 2 bytes @ 0x4
  1685                           
  1686                           
  1687                           ; 4 bytes @ 0x4
  1688  0074                     	ds	1
  1689  0075                     ??i1___ftpack:	
  1690                           
  1691                           ; 0 bytes @ 0x5
  1692  0075                     	ds	1
  1693  0076                     ?i1_Update_PWM:	
  1694  0076                     i1Update_PWM@setwsduty:	
  1695                           ; 0 bytes @ 0x6
  1696                           
  1697                           
  1698                           ; 2 bytes @ 0x6
  1699  0076                     	ds	2
  1700  0078                     ??i1_Update_PWM:	
  1701  0078                     ??i1___aldiv:	
  1702                           ; 0 bytes @ 0x8
  1703                           
  1704  0078                     ?i1___lwtoft:	
  1705                           ; 0 bytes @ 0x8
  1706                           
  1707  0078                     i1___lwtoft@c:	
  1708                           ; 3 bytes @ 0x8
  1709                           
  1710                           
  1711                           ; 2 bytes @ 0x8
  1712  0078                     	ds	2
  1713  007A                     i1Update_PWM@Temp1:	
  1714                           
  1715                           ; 2 bytes @ 0xA
  1716  007A                     	ds	1
  1717  007B                     ??i1___lwtoft:	
  1718                           
  1719                           ; 0 bytes @ 0xB
  1720  007B                     	ds	1
  1721  007C                     i1Update_PWM@Dutycnt:	
  1722                           
  1723                           ; 2 bytes @ 0xC
  1724  007C                     	ds	2
  1725                           
  1726                           	psect	cstackBANK0
  1727  0020                     __pcstackBANK0:	
  1728  0020                     ?i1___ftdiv:	
  1729  0020                     ?i1___ftmul:	
  1730                           ; 3 bytes @ 0x0
  1731                           
  1732  0020                     i1___aldiv@counter:	
  1733                           ; 3 bytes @ 0x0
  1734                           
  1735  0020                     i1___ftdiv@f2:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738  0020                     i1___ftmul@f1:	
  1739                           ; 3 bytes @ 0x0
  1740                           
  1741                           
  1742                           ; 3 bytes @ 0x0
  1743  0020                     	ds	1
  1744  0021                     i1___aldiv@sign:	
  1745                           
  1746                           ; 1 bytes @ 0x1
  1747  0021                     	ds	1
  1748  0022                     i1___aldiv@quotient:	
  1749                           
  1750                           ; 4 bytes @ 0x2
  1751  0022                     	ds	1
  1752  0023                     i1___ftdiv@f1:	
  1753  0023                     i1___ftmul@f2:	
  1754                           ; 3 bytes @ 0x3
  1755                           
  1756                           
  1757                           ; 3 bytes @ 0x3
  1758  0023                     	ds	3
  1759  0026                     ??i1___ftdiv:	
  1760  0026                     ??i1___ftmul:	
  1761                           ; 0 bytes @ 0x6
  1762                           
  1763                           
  1764                           ; 0 bytes @ 0x6
  1765  0026                     	ds	4
  1766  002A                     i1___ftdiv@cntr:	
  1767  002A                     i1___ftmul@exp:	
  1768                           ; 1 bytes @ 0xA
  1769                           
  1770                           
  1771                           ; 1 bytes @ 0xA
  1772  002A                     	ds	1
  1773  002B                     i1___ftdiv@f3:	
  1774  002B                     i1___ftmul@f3_as_product:	
  1775                           ; 3 bytes @ 0xB
  1776                           
  1777                           
  1778                           ; 3 bytes @ 0xB
  1779  002B                     	ds	3
  1780  002E                     i1___ftdiv@exp:	
  1781  002E                     i1___ftmul@cntr:	
  1782                           ; 1 bytes @ 0xE
  1783                           
  1784                           
  1785                           ; 1 bytes @ 0xE
  1786  002E                     	ds	1
  1787  002F                     i1___ftdiv@sign:	
  1788  002F                     i1___ftmul@sign:	
  1789                           ; 1 bytes @ 0xF
  1790                           
  1791                           
  1792                           ; 1 bytes @ 0xF
  1793  002F                     	ds	1
  1794  0030                     ?i1___ftadd:	
  1795  0030                     i1___ftadd@f1:	
  1796                           ; 3 bytes @ 0x10
  1797                           
  1798                           
  1799                           ; 3 bytes @ 0x10
  1800  0030                     	ds	3
  1801  0033                     i1___ftadd@f2:	
  1802                           
  1803                           ; 3 bytes @ 0x13
  1804  0033                     	ds	3
  1805  0036                     ??i1___ftadd:	
  1806                           
  1807                           ; 0 bytes @ 0x16
  1808  0036                     	ds	4
  1809  003A                     i1___ftadd@sign:	
  1810                           
  1811                           ; 1 bytes @ 0x1A
  1812  003A                     	ds	1
  1813  003B                     i1___ftadd@exp2:	
  1814                           
  1815                           ; 1 bytes @ 0x1B
  1816  003B                     	ds	1
  1817  003C                     i1___ftadd@exp1:	
  1818                           
  1819                           ; 1 bytes @ 0x1C
  1820  003C                     	ds	1
  1821  003D                     ?i1___fttol:	
  1822  003D                     i1___fttol@f1:	
  1823                           ; 4 bytes @ 0x1D
  1824                           
  1825                           
  1826                           ; 3 bytes @ 0x1D
  1827  003D                     	ds	4
  1828  0041                     ??i1___fttol:	
  1829                           
  1830                           ; 0 bytes @ 0x21
  1831  0041                     	ds	4
  1832  0045                     i1___fttol@sign1:	
  1833                           
  1834                           ; 1 bytes @ 0x25
  1835  0045                     	ds	1
  1836  0046                     i1___fttol@lval:	
  1837                           
  1838                           ; 4 bytes @ 0x26
  1839  0046                     	ds	4
  1840  004A                     i1___fttol@exp1:	
  1841                           
  1842                           ; 1 bytes @ 0x2A
  1843  004A                     	ds	1
  1844  004B                     ??_ISR_Function:	
  1845                           
  1846                           ; 0 bytes @ 0x2B
  1847  004B                     	ds	9
  1848  0054                     _ISR_Function$1209:	
  1849                           
  1850                           ; 2 bytes @ 0x34
  1851  0054                     	ds	2
  1852                           
  1853                           	psect	maintext
  1854  08B1                     __pmaintext:	
  1855 ;;
  1856 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1857 ;;
  1858 ;; *************** function _main *****************
  1859 ;; Defined at:
  1860 ;;		line 527 in file "main.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;		None               void
  1867 ;; Registers used:
  1868 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : B1F/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1876 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1877 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1878 ;;Total ram usage:        2 bytes
  1879 ;; Hardware stack levels required when called:    6
  1880 ;; This function calls:
  1881 ;;		_Adaptive_base_pid
  1882 ;;		_Delayms
  1883 ;;		_PWM_init
  1884 ;;		_SCANENCODER1
  1885 ;;		_SCANENCODER2
  1886 ;;		_Timer0_init
  1887 ;;		_Update_PWM
  1888 ;;		___ftmul
  1889 ;;		___fttol
  1890 ;;		___lwtoft
  1891 ;;		___wmul
  1892 ;;		_capture_init
  1893 ;;		_detect_display_error
  1894 ;;		_disp_hex_window1
  1895 ;;		_disp_hex_window11
  1896 ;;		_disp_hex_window2
  1897 ;;		_disp_hex_window22
  1898 ;;		_key_application
  1899 ;;		_portpin_init
  1900 ;;		_send_status
  1901 ;;		_system_init
  1902 ;;		_transmittops
  1903 ;;		_uart_init
  1904 ;; This function is called by:
  1905 ;;		Startup code after reset
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _main
  1911  08B1                     _main:	
  1912                           
  1913                           ;main.c: 530: system_init();
  1914                           
  1915                           ;incstack = 0
  1916                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1917  08B1  31A7  27A2  3188   	fcall	_system_init
  1918  08B4                     l660:	
  1919  08B4  3013               	movlw	19
  1920  08B5  0024               	movlb	4	; select bank4
  1921  08B6  0235               	subwf	(_delay+1)^(0+512),w
  1922  08B7  3088               	movlw	136
  1923  08B8  1903               	skipnz
  1924  08B9  0234               	subwf	_delay^(0+512),w
  1925  08BA  1803               	btfsc	3,0
  1926  08BB  28C2               	goto	l5499
  1927  08BC  3001               	movlw	1
  1928  08BD  0024               	movlb	4	; select bank4
  1929  08BE  07B4               	addwf	_delay^(0+512),f
  1930  08BF  3000               	movlw	0
  1931  08C0  3DB5               	addwfc	(_delay+1)^(0+512),f
  1932  08C1  28B4               	goto	l660
  1933  08C2                     l5499:	
  1934                           
  1935                           ;main.c: 532: Delayms(1000);
  1936  08C2  30E8               	movlw	232
  1937  08C3  0021               	movlb	1	; select bank1
  1938  08C4  00A0               	movwf	Delayms@delay^(0+128)
  1939  08C5  3003               	movlw	3
  1940  08C6  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1941  08C7  3198  20D3  3188   	fcall	_Delayms
  1942                           
  1943                           ;main.c: 533: portpin_init();
  1944  08CA  3198  2032  3188   	fcall	_portpin_init
  1945                           
  1946                           ;main.c: 534: Timer0_init();
  1947  08CD  31A7  27B8  3188   	fcall	_Timer0_init
  1948                           
  1949                           ;main.c: 535: PWM_init();
  1950  08D0  3198  205E  3188   	fcall	_PWM_init
  1951                           
  1952                           ;main.c: 536: capture_init();
  1953  08D3  31A7  27C9  3188   	fcall	_capture_init
  1954                           
  1955                           ;main.c: 537: uart_init();
  1956  08D6  31A7  27ED  3188   	fcall	_uart_init
  1957                           
  1958                           ;main.c: 538: INTCONbits.GIE =1;
  1959  08D9  178B               	bsf	11,7	;volatile
  1960                           
  1961                           ;main.c: 539: INTCONbits.PEIE =1;
  1962  08DA  170B               	bsf	11,6	;volatile
  1963                           
  1964                           ;main.c: 542: PORTCbits.RC3=0;
  1965  08DB  0020               	movlb	0	; select bank0
  1966  08DC  118E               	bcf	14,3	;volatile
  1967                           
  1968                           ;main.c: 544: TRISAbits.TRISA0 = 0;
  1969  08DD  0021               	movlb	1	; select bank1
  1970  08DE  100C               	bcf	12,0	;volatile
  1971                           
  1972                           ;main.c: 545: cPowerOnErrSkipfg = 1;
  1973  08DF  0022               	movlb	2	; select bank2
  1974  08E0  01BC               	clrf	_cPowerOnErrSkipfg^(0+256)
  1975  08E1  0ABC               	incf	_cPowerOnErrSkipfg^(0+256),f
  1976                           
  1977                           ;main.c: 546: iPowerOnErrSkipCnt = 2000;
  1978  08E2  30D0               	movlw	208
  1979  08E3  0024               	movlb	4	; select bank4
  1980  08E4  00C2               	movwf	_iPowerOnErrSkipCnt^(0+512)
  1981  08E5  3007               	movlw	7
  1982  08E6  00C3               	movwf	(_iPowerOnErrSkipCnt^(0+512)+1)
  1983                           
  1984                           ;main.c: 548: diswin1[0]=0x0B;
  1985  08E7  300B               	movlw	11
  1986  08E8  0021               	movlb	1	; select bank1
  1987  08E9  00ED               	movwf	??_main^(0+128)
  1988  08EA  086D               	movf	??_main^(0+128),w
  1989  08EB  0023               	movlb	3	; select bank3
  1990  08EC  00D9               	movwf	_diswin1^(0+384)
  1991                           
  1992                           ;main.c: 549: diswin1[1]=0x0E;
  1993  08ED  300E               	movlw	14
  1994  08EE  0021               	movlb	1	; select bank1
  1995  08EF  00ED               	movwf	??_main^(0+128)
  1996  08F0  086D               	movf	??_main^(0+128),w
  1997  08F1  0023               	movlb	3	; select bank3
  1998  08F2  00DA               	movwf	(_diswin1^(0+384)+1)
  1999                           
  2000                           ;main.c: 550: diswin1[2]=0x1C;
  2001  08F3  301C               	movlw	28
  2002  08F4  0021               	movlb	1	; select bank1
  2003  08F5  00ED               	movwf	??_main^(0+128)
  2004  08F6  086D               	movf	??_main^(0+128),w
  2005  08F7  0023               	movlb	3	; select bank3
  2006  08F8  00DB               	movwf	(_diswin1^(0+384)+2)
  2007                           
  2008                           ;main.c: 551: diswin1[3]=0x1C;
  2009  08F9  301C               	movlw	28
  2010  08FA  0021               	movlb	1	; select bank1
  2011  08FB  00ED               	movwf	??_main^(0+128)
  2012  08FC  086D               	movf	??_main^(0+128),w
  2013  08FD  0023               	movlb	3	; select bank3
  2014  08FE  00DC               	movwf	(_diswin1^(0+384)+3)
  2015                           
  2016                           ;main.c: 552: diswin1[4]='2'-0x30;
  2017  08FF  3002               	movlw	2
  2018  0900  0021               	movlb	1	; select bank1
  2019  0901  00ED               	movwf	??_main^(0+128)
  2020  0902  086D               	movf	??_main^(0+128),w
  2021  0903  0023               	movlb	3	; select bank3
  2022  0904  00DD               	movwf	(_diswin1^(0+384)+4)
  2023                           
  2024                           ;main.c: 553: diswin1[5]='3'-0x30;
  2025  0905  3003               	movlw	3
  2026  0906  0021               	movlb	1	; select bank1
  2027  0907  00ED               	movwf	??_main^(0+128)
  2028  0908  086D               	movf	??_main^(0+128),w
  2029  0909  0023               	movlb	3	; select bank3
  2030  090A  00DE               	movwf	(_diswin1^(0+384)+5)
  2031                           
  2032                           ;main.c: 554: TypeDP.TypeD.digitdp5=1;
  2033  090B  0020               	movlb	0	; select bank0
  2034  090C  166B               	bsf	_TypeDP,4
  2035                           
  2036                           ;main.c: 556: Delayms(2000);
  2037  090D  30D0               	movlw	208
  2038  090E  0021               	movlb	1	; select bank1
  2039  090F  00A0               	movwf	Delayms@delay^(0+128)
  2040  0910  3007               	movlw	7
  2041  0911  00A1               	movwf	(Delayms@delay^(0+128)+1)
  2042  0912  3198  20D3  3188   	fcall	_Delayms
  2043                           
  2044                           ;main.c: 558: LATCbits.LATC0=0;
  2045  0915  0022               	movlb	2	; select bank2
  2046  0916  100E               	bcf	14,0	;volatile
  2047                           
  2048                           ;main.c: 559: TypeDP.TypeD.digitdp5=0;
  2049  0917  0020               	movlb	0	; select bank0
  2050  0918  126B               	bcf	_TypeDP,4
  2051                           
  2052                           ;main.c: 560: TypeU.LEDGROUP[0] =0x00;
  2053  0919  01E5               	clrf	_TypeU
  2054                           
  2055                           ;main.c: 561: TypeU.LEDGROUP[1] =0x00;
  2056  091A  01E6               	clrf	_TypeU+1
  2057                           
  2058                           ;main.c: 562: TypeU.TypeS.wirespeed =1;
  2059  091B  1465               	bsf	_TypeU,0
  2060                           
  2061                           ;main.c: 563: TypeU.TypeS.vtg =1;
  2062  091C  14E6               	bsf	_TypeU+1,1
  2063                           
  2064                           ;main.c: 564: TypeU.TypeS.twot =1;
  2065  091D  1665               	bsf	_TypeU,4
  2066                           
  2067                           ;main.c: 565: TypeDP.DPGROUP[0] =0x00;
  2068  091E  01EB               	clrf	_TypeDP
  2069                           
  2070                           ;main.c: 566: TypeDP.TypeD.digitdp2 =1;
  2071  091F  14EB               	bsf	_TypeDP,1
  2072                           
  2073                           ;main.c: 567: TypeDP.TypeD.digitdp5 =1;
  2074  0920  166B               	bsf	_TypeDP,4
  2075                           
  2076                           ;main.c: 569: psstatusu.psstatusbyte[0]=0x00;
  2077  0921  01EC               	clrf	_psstatusu
  2078                           
  2079                           ;main.c: 572: setcurrent=0;
  2080  0922  0022               	movlb	2	; select bank2
  2081  0923  01AE               	clrf	_setcurrent^(0+256)
  2082  0924  01AF               	clrf	(_setcurrent+1)^(0+256)
  2083                           
  2084                           ;main.c: 573: setvoltage=0;
  2085  0925  0020               	movlb	0	; select bank0
  2086  0926  01DA               	clrf	_setvoltage
  2087  0927  01DB               	clrf	_setvoltage+1
  2088                           
  2089                           ;main.c: 574: disp_hex_window1(setcurrent);
  2090  0928  0022               	movlb	2	; select bank2
  2091  0929  082F               	movf	(_setcurrent+1)^(0+256),w
  2092  092A  0021               	movlb	1	; select bank1
  2093  092B  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  2094  092C  0022               	movlb	2	; select bank2
  2095  092D  082E               	movf	_setcurrent^(0+256),w
  2096  092E  0021               	movlb	1	; select bank1
  2097  092F  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  2098  0930  3199  21CE  3188   	fcall	_disp_hex_window1
  2099                           
  2100                           ;main.c: 575: disp_hex_window2(setvoltage);
  2101  0933  0020               	movlb	0	; select bank0
  2102  0934  085B               	movf	_setvoltage+1,w
  2103  0935  0021               	movlb	1	; select bank1
  2104  0936  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  2105  0937  0020               	movlb	0	; select bank0
  2106  0938  085A               	movf	_setvoltage,w
  2107  0939  0021               	movlb	1	; select bank1
  2108  093A  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  2109  093B  319A  227B  3188   	fcall	_disp_hex_window2
  2110                           
  2111                           ;main.c: 576: TXSTAbits.TXEN =1;
  2112  093E  0023               	movlb	3	; select bank3
  2113  093F  169E               	bsf	30,5	;volatile
  2114                           
  2115                           ;main.c: 577: RCSTAbits.CREN =1;
  2116  0940  161D               	bsf	29,4	;volatile
  2117                           
  2118                           ;main.c: 578: PIE1bits.RCIE =1;
  2119  0941  0021               	movlb	1	; select bank1
  2120  0942  1691               	bsf	17,5	;volatile
  2121                           
  2122                           ;main.c: 579: INTCONbits.GIE =1;
  2123  0943  178B               	bsf	11,7	;volatile
  2124                           
  2125                           ;main.c: 580: INTCONbits.PEIE =1;
  2126  0944  170B               	bsf	11,6	;volatile
  2127                           
  2128                           ;main.c: 581: Delayms(5000);
  2129  0945  3088               	movlw	136
  2130  0946  00A0               	movwf	Delayms@delay^(0+128)
  2131  0947  3013               	movlw	19
  2132  0948  00A1               	movwf	(Delayms@delay^(0+128)+1)
  2133  0949  3198  20D3  3188   	fcall	_Delayms
  2134                           
  2135                           ;main.c: 582: PIE1bits.TXIE =0;
  2136  094C  0021               	movlb	1	; select bank1
  2137  094D  1211               	bcf	17,4	;volatile
  2138  094E                     l5573:	
  2139                           ;main.c: 583: while(1)
  2140                           
  2141                           
  2142                           ;main.c: 584: {
  2143                           ;main.c: 586: if(cMtrOverLdfg == 1)
  2144  094E  0022               	movlb	2	; select bank2
  2145  094F  033B               	decf	_cMtrOverLdfg^(0+256),w
  2146  0950  1D03               	btfss	3,2
  2147  0951  296B               	goto	l5579
  2148                           
  2149                           ;main.c: 587: {
  2150                           ;main.c: 588: Update_PWM(setwirespeed*0);
  2151  0952  0020               	movlb	0	; select bank0
  2152  0953  085D               	movf	_setwirespeed+1,w
  2153  0954  0021               	movlb	1	; select bank1
  2154  0955  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  2155  0956  0020               	movlb	0	; select bank0
  2156  0957  085C               	movf	_setwirespeed,w
  2157  0958  0021               	movlb	1	; select bank1
  2158  0959  00A0               	movwf	___wmul@multiplier^(0+128)
  2159  095A  3000               	movlw	0
  2160  095B  00A2               	movwf	___wmul@multiplicand^(0+128)
  2161  095C  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  2162  095D  3198  2092  3188   	fcall	___wmul
  2163  0960  0021               	movlb	1	; select bank1
  2164  0961  0821               	movf	(?___wmul+1)^(0+128),w
  2165  0962  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  2166  0963  0820               	movf	?___wmul^(0+128),w
  2167  0964  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  2168  0965  3198  20FB  3188   	fcall	_Update_PWM
  2169                           
  2170                           ;main.c: 589: speeedrate=0;
  2171  0968  0023               	movlb	3	; select bank3
  2172  0969  01EA               	clrf	_speeedrate^(0+384)
  2173  096A  01EB               	clrf	(_speeedrate+1)^(0+384)
  2174  096B                     l5579:	
  2175                           
  2176                           ;main.c: 590: }
  2177                           ;main.c: 592: if(send_statusf==1 && onesecf==0)
  2178  096B  0022               	movlb	2	; select bank2
  2179  096C  0362               	decf	_send_statusf^(0+256),w
  2180  096D  1D03               	btfss	3,2
  2181  096E  2976               	goto	l5587
  2182  096F  0855               	movf	_onesecf^(0+256),w	;volatile
  2183  0970  1D03               	btfss	3,2
  2184  0971  2976               	goto	l5587
  2185                           
  2186                           ;main.c: 593: {
  2187                           ;main.c: 594: send_statusf=0;
  2188  0972  01E2               	clrf	_send_statusf^(0+256)
  2189                           
  2190                           ;main.c: 595: send_status();
  2191  0973  3198  201D  3188   	fcall	_send_status
  2192  0976                     l5587:	
  2193                           
  2194                           ;main.c: 596: }
  2195                           ;main.c: 597: if(onesecf==1 && transmitonf==1)
  2196  0976  0022               	movlb	2	; select bank2
  2197  0977  0355               	decf	_onesecf^(0+256),w	;volatile
  2198  0978  1D03               	btfss	3,2
  2199  0979  2985               	goto	l5599
  2200  097A  0366               	decf	_transmitonf^(0+256),w
  2201  097B  1D03               	btfss	3,2
  2202  097C  2985               	goto	l5599
  2203                           
  2204                           ;main.c: 598: {
  2205                           ;main.c: 599: onesecf=0;
  2206  097D  01D5               	clrf	_onesecf^(0+256)	;volatile
  2207                           
  2208                           ;main.c: 600: transmittops();
  2209  097E  319B  232C  3188   	fcall	_transmittops
  2210                           
  2211                           ;main.c: 601: txonf=0;
  2212  0981  0023               	movlb	3	; select bank3
  2213  0982  01D5               	clrf	_txonf^(0+384)	;volatile
  2214                           
  2215                           ;main.c: 602: cEditfg = 0;
  2216  0983  0020               	movlb	0	; select bank0
  2217  0984  01DE               	clrf	_cEditfg
  2218  0985                     l5599:	
  2219                           
  2220                           ;main.c: 617: }
  2221                           ;main.c: 620: if(universal_error==0)
  2222  0985  0022               	movlb	2	; select bank2
  2223  0986  0867               	movf	_universal_error^(0+256),w	;volatile
  2224  0987  1D03               	btfss	3,2
  2225  0988  2FE7               	goto	l6049
  2226                           
  2227                           ;main.c: 621: {
  2228                           ;main.c: 622: disp_hex_window11(crater_speed);
  2229  0989  0843               	movf	_crater_speed^(0+256),w	;volatile
  2230  098A  0021               	movlb	1	; select bank1
  2231  098B  00ED               	movwf	??_main^(0+128)
  2232  098C  01EE               	clrf	(??_main^(0+128)+1)
  2233  098D  086D               	movf	??_main^(0+128),w
  2234  098E  00A0               	movwf	disp_hex_window11@hex_data^(0+128)
  2235  098F  086E               	movf	(??_main+1)^(0+128),w
  2236  0990  00A1               	movwf	(disp_hex_window11@hex_data+1)^(0+128)
  2237  0991  3188  2001  3188   	fcall	_disp_hex_window11
  2238                           
  2239                           ;main.c: 623: disp_hex_window22(creep_speed);
  2240  0994  0022               	movlb	2	; select bank2
  2241  0995  0844               	movf	_creep_speed^(0+256),w	;volatile
  2242  0996  0021               	movlb	1	; select bank1
  2243  0997  00ED               	movwf	??_main^(0+128)
  2244  0998  01EE               	clrf	(??_main^(0+128)+1)
  2245  0999  086D               	movf	??_main^(0+128),w
  2246  099A  00A0               	movwf	disp_hex_window22@hex_data^(0+128)
  2247  099B  086E               	movf	(??_main+1)^(0+128),w
  2248  099C  00A1               	movwf	(disp_hex_window22@hex_data+1)^(0+128)
  2249  099D  3188  2002  3188   	fcall	_disp_hex_window22
  2250                           
  2251                           ;main.c: 625: if(adaptivepidf==1)
  2252  09A0  0022               	movlb	2	; select bank2
  2253  09A1  0337               	decf	_adaptivepidf^(0+256),w
  2254  09A2  1D03               	btfss	3,2
  2255  09A3  29A8               	goto	l5609
  2256                           
  2257                           ;main.c: 626: {
  2258                           ;main.c: 627: adaptivepidf=0;
  2259  09A4  01B7               	clrf	_adaptivepidf^(0+256)
  2260                           
  2261                           ;main.c: 628: Adaptive_base_pid();
  2262  09A5  3194  2471  3188   	fcall	_Adaptive_base_pid
  2263  09A8                     l5609:	
  2264                           
  2265                           ;main.c: 629: }
  2266                           ;main.c: 631: if(read_enc1f==1)
  2267  09A8  0022               	movlb	2	; select bank2
  2268  09A9  035E               	decf	_read_enc1f^(0+256),w	;volatile
  2269  09AA  1D03               	btfss	3,2
  2270  09AB  2B52               	goto	l5753
  2271                           
  2272                           ;main.c: 632: {
  2273                           ;main.c: 633: read_enc1f=0;
  2274  09AC  01DE               	clrf	_read_enc1f^(0+256)	;volatile
  2275                           
  2276                           ;main.c: 634: if(enccount==0)
  2277  09AD  0846               	movf	_enccount^(0+256),w	;volatile
  2278  09AE  1D03               	btfss	3,2
  2279  09AF  2A56               	goto	l5669
  2280                           
  2281                           ;main.c: 635: {
  2282                           ;main.c: 636: encod1=SCANENCODER1();
  2283  09B0  319C  24CD  3188   	fcall	_SCANENCODER1
  2284  09B3  0021               	movlb	1	; select bank1
  2285  09B4  00ED               	movwf	??_main^(0+128)
  2286  09B5  086D               	movf	??_main^(0+128),w
  2287  09B6  0022               	movlb	2	; select bank2
  2288  09B7  00C7               	movwf	_encod1^(0+256)
  2289                           
  2290                           ;main.c: 637: mili1_100++;
  2291  09B8  3001               	movlw	1
  2292  09B9  0021               	movlb	1	; select bank1
  2293  09BA  00ED               	movwf	??_main^(0+128)
  2294  09BB  086D               	movf	??_main^(0+128),w
  2295  09BC  0022               	movlb	2	; select bank2
  2296  09BD  07CD               	addwf	_mili1_100^(0+256),f
  2297                           
  2298                           ;main.c: 638: {
  2299                           ;main.c: 639: if(encod1=='+')
  2300  09BE  302B               	movlw	43
  2301  09BF  0647               	xorwf	_encod1^(0+256),w
  2302  09C0  1D03               	btfss	3,2
  2303  09C1  29D3               	goto	l5627
  2304                           
  2305                           ;main.c: 640: {
  2306                           ;main.c: 641: setwirespeed=setwirespeed+pluspara1;
  2307  09C2  085B               	movf	_pluspara1^(0+256),w
  2308  09C3  0020               	movlb	0	; select bank0
  2309  09C4  075C               	addwf	_setwirespeed,w
  2310  09C5  00DC               	movwf	_setwirespeed
  2311  09C6  085D               	movf	_setwirespeed+1,w
  2312  09C7  1803               	skipnc
  2313  09C8  0A5D               	incf	_setwirespeed+1,w
  2314  09C9  00DD               	movwf	_setwirespeed+1
  2315                           
  2316                           ;main.c: 642: if(setwirespeed >= 240)
  2317  09CA  3000               	movlw	0
  2318  09CB  025D               	subwf	_setwirespeed+1,w
  2319  09CC  30F0               	movlw	240
  2320  09CD  1903               	skipnz
  2321  09CE  025C               	subwf	_setwirespeed,w
  2322  09CF  1C03               	skipc
  2323  09D0  2A13               	goto	l5639
  2324                           
  2325                           ;main.c: 643: setwirespeed=240;
  2326  09D1  30F0               	movlw	240
  2327  09D2  2A10               	goto	L5
  2328  09D3                     l5627:	
  2329                           ;main.c: 645: }
  2330                           
  2331                           ;main.c: 644: cEditfg = 1;
  2332                           
  2333                           
  2334                           ;main.c: 646: else if(encod1=='-')
  2335  09D3  302D               	movlw	45
  2336  09D4  0022               	movlb	2	; select bank2
  2337  09D5  0647               	xorwf	_encod1^(0+256),w
  2338  09D6  1D03               	btfss	3,2
  2339  09D7  2A15               	goto	l673
  2340                           
  2341                           ;main.c: 647: {
  2342                           ;main.c: 648: if(setwirespeed >= minuspara1)
  2343  09D8  0853               	movf	_minuspara1^(0+256),w
  2344  09D9  0021               	movlb	1	; select bank1
  2345  09DA  00ED               	movwf	??_main^(0+128)
  2346  09DB  01EE               	clrf	(??_main^(0+128)+1)
  2347  09DC  086E               	movf	(??_main+1)^(0+128),w
  2348  09DD  0020               	movlb	0	; select bank0
  2349  09DE  025D               	subwf	_setwirespeed+1,w
  2350  09DF  1D03               	skipz
  2351  09E0  29E5               	goto	u8245
  2352  09E1  0021               	movlb	1	; select bank1
  2353  09E2  086D               	movf	??_main^(0+128),w
  2354  09E3  0020               	movlb	0	; select bank0
  2355  09E4  025C               	subwf	_setwirespeed,w
  2356  09E5                     u8245:	
  2357  09E5  1C03               	skipc
  2358  09E6  29FD               	goto	l5633
  2359                           
  2360                           ;main.c: 649: setwirespeed=setwirespeed-minuspara1;
  2361  09E7  0022               	movlb	2	; select bank2
  2362  09E8  0853               	movf	_minuspara1^(0+256),w
  2363  09E9  0021               	movlb	1	; select bank1
  2364  09EA  00ED               	movwf	??_main^(0+128)
  2365  09EB  01EE               	clrf	(??_main^(0+128)+1)
  2366  09EC  09ED               	comf	??_main^(0+128),f
  2367  09ED  09EE               	comf	(??_main^(0+128)+1),f
  2368  09EE  0AED               	incf	??_main^(0+128),f
  2369  09EF  1903               	skipnz
  2370  09F0  0AEE               	incf	(??_main^(0+128)+1),f
  2371  09F1  0020               	movlb	0	; select bank0
  2372  09F2  085C               	movf	_setwirespeed,w
  2373  09F3  0021               	movlb	1	; select bank1
  2374  09F4  076D               	addwf	??_main^(0+128),w
  2375  09F5  0020               	movlb	0	; select bank0
  2376  09F6  00DC               	movwf	_setwirespeed
  2377  09F7  085D               	movf	_setwirespeed+1,w
  2378  09F8  0021               	movlb	1	; select bank1
  2379  09F9  3D6E               	addwfc	(??_main+1)^(0+128),w
  2380  09FA  0020               	movlb	0	; select bank0
  2381  09FB  00DD               	movwf	_setwirespeed+1
  2382  09FC  2A08               	goto	l676
  2383  09FD                     l5633:	
  2384                           
  2385                           ;main.c: 651: setwirespeed=setwirespeed--;
  2386  09FD  3000               	movlw	0
  2387  09FE  025D               	subwf	_setwirespeed+1,w
  2388  09FF  300A               	movlw	10
  2389  0A00  1903               	skipnz
  2390  0A01  025C               	subwf	_setwirespeed,w
  2391  0A02  1C03               	skipc
  2392  0A03  2A08               	goto	l676
  2393  0A04  3001               	movlw	1
  2394  0A05  02DC               	subwf	_setwirespeed,f
  2395  0A06  3000               	movlw	0
  2396  0A07  3BDD               	subwfb	_setwirespeed+1,f
  2397  0A08                     l676:	
  2398                           
  2399                           ;main.c: 652: if(setwirespeed <= 10)
  2400  0A08  3000               	movlw	0
  2401  0A09  025D               	subwf	_setwirespeed+1,w
  2402  0A0A  300B               	movlw	11
  2403  0A0B  1903               	skipnz
  2404  0A0C  025C               	subwf	_setwirespeed,w
  2405  0A0D  1803               	skipnc
  2406  0A0E  2A13               	goto	l5639
  2407                           
  2408                           ;main.c: 653: setwirespeed=10;
  2409  0A0F  300A               	movlw	10
  2410  0A10                     L5:	
  2411  0A10  00DC               	movwf	_setwirespeed
  2412  0A11  3000               	movlw	0
  2413  0A12  00DD               	movwf	_setwirespeed+1
  2414  0A13                     l5639:	
  2415                           
  2416                           ;main.c: 654: cEditfg = 1;
  2417  0A13  01DE               	clrf	_cEditfg
  2418  0A14  0ADE               	incf	_cEditfg,f
  2419  0A15                     l673:	
  2420                           
  2421                           ;main.c: 655: }
  2422                           ;main.c: 656: }
  2423                           ;main.c: 657: if(mili1_100<200)
  2424  0A15  30C8               	movlw	200
  2425  0A16  0022               	movlb	2	; select bank2
  2426  0A17  024D               	subwf	_mili1_100^(0+256),w
  2427  0A18  1803               	skipnc
  2428  0A19  2A30               	goto	l5649
  2429                           
  2430                           ;main.c: 658: {
  2431                           ;main.c: 659: if(encod1=='+')
  2432  0A1A  302B               	movlw	43
  2433  0A1B  0647               	xorwf	_encod1^(0+256),w
  2434  0A1C  1D03               	btfss	3,2
  2435  0A1D  2A25               	goto	l5645
  2436                           
  2437                           ;main.c: 660: pluscount1++;
  2438  0A1E  3001               	movlw	1
  2439  0A1F  0021               	movlb	1	; select bank1
  2440  0A20  00ED               	movwf	??_main^(0+128)
  2441  0A21  086D               	movf	??_main^(0+128),w
  2442  0A22  0022               	movlb	2	; select bank2
  2443  0A23  07D9               	addwf	_pluscount1^(0+256),f
  2444  0A24  2A4F               	goto	l5667
  2445  0A25                     l5645:	
  2446                           
  2447                           ;main.c: 661: else if(encod1=='-')
  2448  0A25  302D               	movlw	45
  2449  0A26  0647               	xorwf	_encod1^(0+256),w
  2450  0A27  1D03               	btfss	3,2
  2451  0A28  2A4F               	goto	l5667
  2452                           
  2453                           ;main.c: 662: minuscount1++;
  2454  0A29  3001               	movlw	1
  2455  0A2A  0021               	movlb	1	; select bank1
  2456  0A2B  00ED               	movwf	??_main^(0+128)
  2457  0A2C  086D               	movf	??_main^(0+128),w
  2458  0A2D  0022               	movlb	2	; select bank2
  2459  0A2E  07D1               	addwf	_minuscount1^(0+256),f
  2460                           
  2461                           ;main.c: 663: }
  2462  0A2F  2A4F               	goto	l5667
  2463  0A30                     l5649:	
  2464                           
  2465                           ;main.c: 664: else if(mili1_100>=200)
  2466  0A30  30C8               	movlw	200
  2467  0A31  024D               	subwf	_mili1_100^(0+256),w
  2468  0A32  1C03               	skipc
  2469  0A33  2A4F               	goto	l5667
  2470                           
  2471                           ;main.c: 665: {
  2472                           ;main.c: 666: mili1_100=0;
  2473  0A34  01CD               	clrf	_mili1_100^(0+256)
  2474                           
  2475                           ;main.c: 667: pluspara1=pluscount1>>1;
  2476  0A35  3659               	lsrf	_pluscount1^(0+256),w
  2477  0A36  0021               	movlb	1	; select bank1
  2478  0A37  00ED               	movwf	??_main^(0+128)
  2479  0A38  086D               	movf	??_main^(0+128),w
  2480  0A39  0022               	movlb	2	; select bank2
  2481  0A3A  00DB               	movwf	_pluspara1^(0+256)
  2482                           
  2483                           ;main.c: 668: minuspara1=minuscount1>>1;
  2484  0A3B  3651               	lsrf	_minuscount1^(0+256),w
  2485  0A3C  0021               	movlb	1	; select bank1
  2486  0A3D  00ED               	movwf	??_main^(0+128)
  2487  0A3E  086D               	movf	??_main^(0+128),w
  2488  0A3F  0022               	movlb	2	; select bank2
  2489  0A40  00D3               	movwf	_minuspara1^(0+256)
  2490                           
  2491                           ;main.c: 669: if(pluspara1<=1)
  2492  0A41  3002               	movlw	2
  2493  0A42  025B               	subwf	_pluspara1^(0+256),w
  2494  0A43  1803               	skipnc
  2495  0A44  2A47               	goto	l5661
  2496                           
  2497                           ;main.c: 670: pluspara1=1;
  2498  0A45  01DB               	clrf	_pluspara1^(0+256)
  2499  0A46  0ADB               	incf	_pluspara1^(0+256),f
  2500  0A47                     l5661:	
  2501                           
  2502                           ;main.c: 671: if(minuspara1<=1)
  2503  0A47  3002               	movlw	2
  2504  0A48  0253               	subwf	_minuspara1^(0+256),w
  2505  0A49  1803               	skipnc
  2506  0A4A  2A4D               	goto	l5665
  2507                           
  2508                           ;main.c: 672: minuspara1=1;
  2509  0A4B  01D3               	clrf	_minuspara1^(0+256)
  2510  0A4C  0AD3               	incf	_minuspara1^(0+256),f
  2511  0A4D                     l5665:	
  2512                           
  2513                           ;main.c: 673: pluscount1=0;
  2514  0A4D  01D9               	clrf	_pluscount1^(0+256)
  2515                           
  2516                           ;main.c: 674: minuscount1=0;
  2517  0A4E  01D1               	clrf	_minuscount1^(0+256)
  2518  0A4F                     l5667:	
  2519                           
  2520                           ;main.c: 675: }
  2521                           ;main.c: 676: enccount++;
  2522  0A4F  3001               	movlw	1
  2523  0A50  0021               	movlb	1	; select bank1
  2524  0A51  00ED               	movwf	??_main^(0+128)
  2525  0A52  086D               	movf	??_main^(0+128),w
  2526  0A53  0022               	movlb	2	; select bank2
  2527  0A54  07C6               	addwf	_enccount^(0+256),f	;volatile
  2528                           
  2529                           ;main.c: 677: }
  2530  0A55  2B52               	goto	l5753
  2531  0A56                     l5669:	
  2532                           
  2533                           ;main.c: 678: else
  2534                           ;main.c: 679: {
  2535                           ;main.c: 680: mili2_100++;
  2536  0A56  3001               	movlw	1
  2537  0A57  0021               	movlb	1	; select bank1
  2538  0A58  00ED               	movwf	??_main^(0+128)
  2539  0A59  086D               	movf	??_main^(0+128),w
  2540  0A5A  0022               	movlb	2	; select bank2
  2541  0A5B  07CE               	addwf	_mili2_100^(0+256),f
  2542                           
  2543                           ;main.c: 681: encod2=SCANENCODER2();
  2544  0A5C  319C  2456  3188   	fcall	_SCANENCODER2
  2545  0A5F  0021               	movlb	1	; select bank1
  2546  0A60  00ED               	movwf	??_main^(0+128)
  2547  0A61  086D               	movf	??_main^(0+128),w
  2548  0A62  0020               	movlb	0	; select bank0
  2549  0A63  00E0               	movwf	_encod2
  2550                           
  2551                           ;main.c: 682: if(TypeU.TypeS.vtg==1)
  2552  0A64  1CE6               	btfss	_TypeU+1,1
  2553  0A65  2AC7               	goto	l688
  2554                           
  2555                           ;main.c: 683: {
  2556                           ;main.c: 684: if(encod2=='+')
  2557  0A66  302B               	movlw	43
  2558  0A67  0660               	xorwf	_encod2,w
  2559  0A68  1D03               	btfss	3,2
  2560  0A69  2A7E               	goto	l5683
  2561                           
  2562                           ;main.c: 685: {
  2563                           ;main.c: 686: setvoltage=setvoltage+pluspara2;
  2564  0A6A  0022               	movlb	2	; select bank2
  2565  0A6B  085C               	movf	_pluspara2^(0+256),w
  2566  0A6C  0020               	movlb	0	; select bank0
  2567  0A6D  075A               	addwf	_setvoltage,w
  2568  0A6E  00DA               	movwf	_setvoltage
  2569  0A6F  085B               	movf	_setvoltage+1,w
  2570  0A70  1803               	skipnc
  2571  0A71  0A5B               	incf	_setvoltage+1,w
  2572  0A72  00DB               	movwf	_setvoltage+1
  2573                           
  2574                           ;main.c: 687: if(setvoltage>440)
  2575  0A73  3001               	movlw	1
  2576  0A74  025B               	subwf	_setvoltage+1,w
  2577  0A75  30B9               	movlw	185
  2578  0A76  1903               	skipnz
  2579  0A77  025A               	subwf	_setvoltage,w
  2580  0A78  1C03               	skipc
  2581  0A79  2ABE               	goto	l5695
  2582                           
  2583                           ;main.c: 688: setvoltage=440;
  2584  0A7A  30B8               	movlw	184
  2585  0A7B  00DA               	movwf	_setvoltage
  2586  0A7C  3001               	movlw	1
  2587  0A7D  2ABD               	goto	L6
  2588  0A7E                     l5683:	
  2589                           ;main.c: 690: }
  2590                           
  2591                           ;main.c: 689: cEditfg = 1;
  2592                           
  2593                           
  2594                           ;main.c: 691: else if(encod2=='-')
  2595  0A7E  302D               	movlw	45
  2596  0A7F  0660               	xorwf	_encod2,w
  2597  0A80  1D03               	btfss	3,2
  2598  0A81  2AC0               	goto	l691
  2599                           
  2600                           ;main.c: 692: {
  2601                           ;main.c: 693: if(setvoltage>=minuspara2)
  2602  0A82  0022               	movlb	2	; select bank2
  2603  0A83  0854               	movf	_minuspara2^(0+256),w
  2604  0A84  0021               	movlb	1	; select bank1
  2605  0A85  00ED               	movwf	??_main^(0+128)
  2606  0A86  01EE               	clrf	(??_main^(0+128)+1)
  2607  0A87  086E               	movf	(??_main+1)^(0+128),w
  2608  0A88  0020               	movlb	0	; select bank0
  2609  0A89  025B               	subwf	_setvoltage+1,w
  2610  0A8A  1D03               	skipz
  2611  0A8B  2A90               	goto	u8375
  2612  0A8C  0021               	movlb	1	; select bank1
  2613  0A8D  086D               	movf	??_main^(0+128),w
  2614  0A8E  0020               	movlb	0	; select bank0
  2615  0A8F  025A               	subwf	_setvoltage,w
  2616  0A90                     u8375:	
  2617  0A90  1C03               	skipc
  2618  0A91  2AA8               	goto	l5689
  2619                           
  2620                           ;main.c: 694: setvoltage=setvoltage-minuspara2;
  2621  0A92  0022               	movlb	2	; select bank2
  2622  0A93  0854               	movf	_minuspara2^(0+256),w
  2623  0A94  0021               	movlb	1	; select bank1
  2624  0A95  00ED               	movwf	??_main^(0+128)
  2625  0A96  01EE               	clrf	(??_main^(0+128)+1)
  2626  0A97  09ED               	comf	??_main^(0+128),f
  2627  0A98  09EE               	comf	(??_main^(0+128)+1),f
  2628  0A99  0AED               	incf	??_main^(0+128),f
  2629  0A9A  1903               	skipnz
  2630  0A9B  0AEE               	incf	(??_main^(0+128)+1),f
  2631  0A9C  0020               	movlb	0	; select bank0
  2632  0A9D  085A               	movf	_setvoltage,w
  2633  0A9E  0021               	movlb	1	; select bank1
  2634  0A9F  076D               	addwf	??_main^(0+128),w
  2635  0AA0  0020               	movlb	0	; select bank0
  2636  0AA1  00DA               	movwf	_setvoltage
  2637  0AA2  085B               	movf	_setvoltage+1,w
  2638  0AA3  0021               	movlb	1	; select bank1
  2639  0AA4  3D6E               	addwfc	(??_main+1)^(0+128),w
  2640  0AA5  0020               	movlb	0	; select bank0
  2641  0AA6  00DB               	movwf	_setvoltage+1
  2642  0AA7  2AB3               	goto	l694
  2643  0AA8                     l5689:	
  2644                           
  2645                           ;main.c: 696: setvoltage=setvoltage--;
  2646  0AA8  3000               	movlw	0
  2647  0AA9  025B               	subwf	_setvoltage+1,w
  2648  0AAA  3064               	movlw	100
  2649  0AAB  1903               	skipnz
  2650  0AAC  025A               	subwf	_setvoltage,w
  2651  0AAD  1C03               	skipc
  2652  0AAE  2AB3               	goto	l694
  2653  0AAF  3001               	movlw	1
  2654  0AB0  02DA               	subwf	_setvoltage,f
  2655  0AB1  3000               	movlw	0
  2656  0AB2  3BDB               	subwfb	_setvoltage+1,f
  2657  0AB3                     l694:	
  2658                           
  2659                           ;main.c: 698: if(setvoltage<=100)
  2660  0AB3  3000               	movlw	0
  2661  0AB4  025B               	subwf	_setvoltage+1,w
  2662  0AB5  3065               	movlw	101
  2663  0AB6  1903               	skipnz
  2664  0AB7  025A               	subwf	_setvoltage,w
  2665  0AB8  1803               	skipnc
  2666  0AB9  2ABE               	goto	l5695
  2667                           
  2668                           ;main.c: 699: setvoltage=100;
  2669  0ABA  3064               	movlw	100
  2670  0ABB  00DA               	movwf	_setvoltage
  2671  0ABC  3000               	movlw	0
  2672  0ABD                     L6:	
  2673  0ABD  00DB               	movwf	_setvoltage+1
  2674  0ABE                     l5695:	
  2675                           
  2676                           ;main.c: 700: cEditfg = 1;
  2677  0ABE  01DE               	clrf	_cEditfg
  2678  0ABF  0ADE               	incf	_cEditfg,f
  2679  0AC0                     l691:	
  2680                           
  2681                           ;main.c: 701: }
  2682                           ;main.c: 703: encod2 = '$';
  2683  0AC0  3024               	movlw	36
  2684  0AC1  0021               	movlb	1	; select bank1
  2685  0AC2  00ED               	movwf	??_main^(0+128)
  2686  0AC3  086D               	movf	??_main^(0+128),w
  2687  0AC4  0020               	movlb	0	; select bank0
  2688  0AC5  00E0               	movwf	_encod2
  2689                           
  2690                           ;main.c: 705: }
  2691  0AC6  2B14               	goto	l5725
  2692  0AC7                     l688:	
  2693                           
  2694                           ;main.c: 706: else if(TypeU.TypeS.arclength==1)
  2695  0AC7  1D65               	btfss	_TypeU,2
  2696  0AC8  2B14               	goto	l5725
  2697                           
  2698                           ;main.c: 707: {
  2699                           ;main.c: 708: if(encod2=='+')
  2700  0AC9  302B               	movlw	43
  2701  0ACA  0660               	xorwf	_encod2,w
  2702  0ACB  1D03               	btfss	3,2
  2703  0ACC  2AF3               	goto	l5711
  2704                           
  2705                           ;main.c: 709: {
  2706                           ;main.c: 710: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength+pluspara2;
  2707  0ACD  0024               	movlb	4	; select bank4
  2708  0ACE  0855               	movf	(_pstowfstru^(0+512)+7),w
  2709  0ACF  0022               	movlb	2	; select bank2
  2710  0AD0  075C               	addwf	_pluspara2^(0+256),w
  2711  0AD1  0021               	movlb	1	; select bank1
  2712  0AD2  00ED               	movwf	??_main^(0+128)
  2713  0AD3  086D               	movf	??_main^(0+128),w
  2714  0AD4  0024               	movlb	4	; select bank4
  2715  0AD5  00D5               	movwf	(_pstowfstru^(0+512)+7)
  2716                           
  2717                           ;main.c: 712: if(weldmode=='P')
  2718  0AD6  3050               	movlw	80
  2719  0AD7  0020               	movlb	0	; select bank0
  2720  0AD8  0664               	xorwf	_weldmode,w	;volatile
  2721  0AD9  1D03               	btfss	3,2
  2722  0ADA  2AE2               	goto	l5705
  2723                           
  2724                           ;main.c: 713: {
  2725                           ;main.c: 714: if(pstowfstru.pstowfstrs.arclength>80)
  2726  0ADB  3051               	movlw	81
  2727  0ADC  0024               	movlb	4	; select bank4
  2728  0ADD  0255               	subwf	(_pstowfstru^(0+512)+7),w
  2729  0ADE  1C03               	skipc
  2730  0ADF  2B11               	goto	l5723
  2731                           
  2732                           ;main.c: 715: pstowfstru.pstowfstrs.arclength=80;
  2733  0AE0  3050               	movlw	80
  2734  0AE1  2AED               	goto	L1
  2735  0AE2                     l5705:	
  2736                           ;main.c: 716: }
  2737                           
  2738                           
  2739                           ;main.c: 717: else if(weldmode=='G')
  2740  0AE2  3047               	movlw	71
  2741  0AE3  0020               	movlb	0	; select bank0
  2742  0AE4  0664               	xorwf	_weldmode,w	;volatile
  2743  0AE5  1D03               	btfss	3,2
  2744  0AE6  2B11               	goto	l5723
  2745                           
  2746                           ;main.c: 718: {
  2747                           ;main.c: 719: if(pstowfstru.pstowfstrs.arclength>40)
  2748  0AE7  3029               	movlw	41
  2749  0AE8  0024               	movlb	4	; select bank4
  2750  0AE9  0255               	subwf	(_pstowfstru^(0+512)+7),w
  2751  0AEA  1C03               	skipc
  2752  0AEB  2B11               	goto	l5723
  2753                           
  2754                           ;main.c: 720: pstowfstru.pstowfstrs.arclength=40;
  2755  0AEC  3028               	movlw	40
  2756  0AED                     L1:	
  2757  0AED  0021               	movlb	1	; select bank1
  2758  0AEE  00ED               	movwf	??_main^(0+128)
  2759  0AEF  086D               	movf	??_main^(0+128),w
  2760  0AF0  0024               	movlb	4	; select bank4
  2761  0AF1  00D5               	movwf	(_pstowfstru^(0+512)+7)
  2762                           
  2763                           ;main.c: 721: }
  2764                           ;main.c: 725: }
  2765  0AF2  2B11               	goto	l5723
  2766  0AF3                     l5711:	
  2767                           
  2768                           ;main.c: 726: else if(encod2=='-')
  2769  0AF3  302D               	movlw	45
  2770  0AF4  0020               	movlb	0	; select bank0
  2771  0AF5  0660               	xorwf	_encod2,w
  2772  0AF6  1D03               	btfss	3,2
  2773  0AF7  2B11               	goto	l5723
  2774                           
  2775                           ;main.c: 727: {
  2776                           ;main.c: 728: if(pstowfstru.pstowfstrs.arclength>=minuspara2)
  2777  0AF8  0022               	movlb	2	; select bank2
  2778  0AF9  0854               	movf	_minuspara2^(0+256),w
  2779  0AFA  0024               	movlb	4	; select bank4
  2780  0AFB  0255               	subwf	(_pstowfstru^(0+512)+7),w
  2781  0AFC  1C03               	skipc
  2782  0AFD  2B09               	goto	l5717
  2783                           
  2784                           ;main.c: 729: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength-minuspara2
      +                          ;
  2785  0AFE  0022               	movlb	2	; select bank2
  2786  0AFF  0354               	decf	_minuspara2^(0+256),w
  2787  0B00  3AFF               	xorlw	255
  2788  0B01  0024               	movlb	4	; select bank4
  2789  0B02  0755               	addwf	(_pstowfstru^(0+512)+7),w
  2790  0B03  0021               	movlb	1	; select bank1
  2791  0B04  00ED               	movwf	??_main^(0+128)
  2792  0B05  086D               	movf	??_main^(0+128),w
  2793  0B06  0024               	movlb	4	; select bank4
  2794  0B07  00D5               	movwf	(_pstowfstru^(0+512)+7)
  2795  0B08  2B0E               	goto	l708
  2796  0B09                     l5717:	
  2797                           
  2798                           ;main.c: 731: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength--;
  2799  0B09  0855               	movf	(_pstowfstru^(0+512)+7),w
  2800  0B0A  1903               	btfsc	3,2
  2801  0B0B  2B0E               	goto	l708
  2802  0B0C  3001               	movlw	1
  2803  0B0D  02D5               	subwf	(_pstowfstru^(0+512)+7),f
  2804  0B0E                     l708:	
  2805                           
  2806                           ;main.c: 733: if(pstowfstru.pstowfstrs.arclength<=0)
  2807  0B0E  0855               	movf	(_pstowfstru^(0+512)+7),w
  2808  0B0F  1903               	btfsc	3,2
  2809                           
  2810                           ;main.c: 734: pstowfstru.pstowfstrs.arclength=0;
  2811  0B10  01D5               	clrf	(_pstowfstru^(0+512)+7)
  2812  0B11                     l5723:	
  2813                           
  2814                           ;main.c: 735: }
  2815                           ;main.c: 736: cEditfg = 1;
  2816  0B11  0020               	movlb	0	; select bank0
  2817  0B12  01DE               	clrf	_cEditfg
  2818  0B13  0ADE               	incf	_cEditfg,f
  2819  0B14                     l5725:	
  2820                           
  2821                           ;main.c: 737: }
  2822                           ;main.c: 738: if(mili2_100<200)
  2823  0B14  30C8               	movlw	200
  2824  0B15  0022               	movlb	2	; select bank2
  2825  0B16  024E               	subwf	_mili2_100^(0+256),w
  2826  0B17  1803               	skipnc
  2827  0B18  2B31               	goto	l5735
  2828                           
  2829                           ;main.c: 739: {
  2830                           ;main.c: 740: if(encod2=='+')
  2831  0B19  302B               	movlw	43
  2832  0B1A  0020               	movlb	0	; select bank0
  2833  0B1B  0660               	xorwf	_encod2,w
  2834  0B1C  1D03               	btfss	3,2
  2835  0B1D  2B25               	goto	l5731
  2836                           
  2837                           ;main.c: 741: pluscount2++;
  2838  0B1E  3001               	movlw	1
  2839  0B1F  0021               	movlb	1	; select bank1
  2840  0B20  00ED               	movwf	??_main^(0+128)
  2841  0B21  086D               	movf	??_main^(0+128),w
  2842  0B22  0022               	movlb	2	; select bank2
  2843  0B23  07DA               	addwf	_pluscount2^(0+256),f
  2844  0B24  2B50               	goto	l715
  2845  0B25                     l5731:	
  2846                           
  2847                           ;main.c: 742: else if(encod2=='-')
  2848  0B25  302D               	movlw	45
  2849  0B26  0020               	movlb	0	; select bank0
  2850  0B27  0660               	xorwf	_encod2,w
  2851  0B28  1D03               	btfss	3,2
  2852  0B29  2B50               	goto	l715
  2853                           
  2854                           ;main.c: 743: minuscount2++;
  2855  0B2A  3001               	movlw	1
  2856  0B2B  0021               	movlb	1	; select bank1
  2857  0B2C  00ED               	movwf	??_main^(0+128)
  2858  0B2D  086D               	movf	??_main^(0+128),w
  2859  0B2E  0022               	movlb	2	; select bank2
  2860  0B2F  07D2               	addwf	_minuscount2^(0+256),f
  2861                           
  2862                           ;main.c: 744: }
  2863  0B30  2B50               	goto	l715
  2864  0B31                     l5735:	
  2865                           
  2866                           ;main.c: 745: else if(mili2_100>=200)
  2867  0B31  30C8               	movlw	200
  2868  0B32  024E               	subwf	_mili2_100^(0+256),w
  2869  0B33  1C03               	skipc
  2870  0B34  2B50               	goto	l715
  2871                           
  2872                           ;main.c: 746: {
  2873                           ;main.c: 747: mili2_100=0;
  2874  0B35  01CE               	clrf	_mili2_100^(0+256)
  2875                           
  2876                           ;main.c: 748: pluspara2=pluscount2;
  2877  0B36  085A               	movf	_pluscount2^(0+256),w
  2878  0B37  0021               	movlb	1	; select bank1
  2879  0B38  00ED               	movwf	??_main^(0+128)
  2880  0B39  086D               	movf	??_main^(0+128),w
  2881  0B3A  0022               	movlb	2	; select bank2
  2882  0B3B  00DC               	movwf	_pluspara2^(0+256)
  2883                           
  2884                           ;main.c: 749: minuspara2=minuscount2;
  2885  0B3C  0852               	movf	_minuscount2^(0+256),w
  2886  0B3D  0021               	movlb	1	; select bank1
  2887  0B3E  00ED               	movwf	??_main^(0+128)
  2888  0B3F  086D               	movf	??_main^(0+128),w
  2889  0B40  0022               	movlb	2	; select bank2
  2890  0B41  00D4               	movwf	_minuspara2^(0+256)
  2891                           
  2892                           ;main.c: 750: if(pluspara2<=1)
  2893  0B42  3002               	movlw	2
  2894  0B43  025C               	subwf	_pluspara2^(0+256),w
  2895  0B44  1803               	skipnc
  2896  0B45  2B48               	goto	l5747
  2897                           
  2898                           ;main.c: 751: pluspara2=1;
  2899  0B46  01DC               	clrf	_pluspara2^(0+256)
  2900  0B47  0ADC               	incf	_pluspara2^(0+256),f
  2901  0B48                     l5747:	
  2902                           
  2903                           ;main.c: 752: if(minuspara2<=1)
  2904  0B48  3002               	movlw	2
  2905  0B49  0254               	subwf	_minuspara2^(0+256),w
  2906  0B4A  1803               	skipnc
  2907  0B4B  2B4E               	goto	l5751
  2908                           
  2909                           ;main.c: 753: minuspara2=1;
  2910  0B4C  01D4               	clrf	_minuspara2^(0+256)
  2911  0B4D  0AD4               	incf	_minuspara2^(0+256),f
  2912  0B4E                     l5751:	
  2913                           
  2914                           ;main.c: 754: pluscount2=0;
  2915  0B4E  01DA               	clrf	_pluscount2^(0+256)
  2916                           
  2917                           ;main.c: 755: minuscount2=0;
  2918  0B4F  01D2               	clrf	_minuscount2^(0+256)
  2919  0B50                     l715:	
  2920                           
  2921                           ;main.c: 756: }
  2922                           ;main.c: 757: enccount=0;
  2923  0B50  0022               	movlb	2	; select bank2
  2924  0B51  01C6               	clrf	_enccount^(0+256)	;volatile
  2925  0B52                     l5753:	
  2926                           
  2927                           ;main.c: 758: }
  2928                           ;main.c: 759: }
  2929                           ;main.c: 763: if(prevkey!=key)
  2930  0B52  086F               	movf	_prevkey^(0+256),w	;volatile
  2931  0B53  0021               	movlb	1	; select bank1
  2932  0B54  066F               	xorwf	_key^(0+128),w	;volatile
  2933  0B55  1903               	skipnz
  2934  0B56  2B6E               	goto	l5765
  2935                           
  2936                           ;main.c: 764: {
  2937                           ;main.c: 766: key_application(key);
  2938  0B57  086F               	movf	_key^(0+128),w	;volatile
  2939  0B58  3193  2355  3188   	fcall	_key_application
  2940                           
  2941                           ;main.c: 767: if(key!=0)
  2942  0B5B  0021               	movlb	1	; select bank1
  2943  0B5C  086F               	movf	_key^(0+128),w	;volatile
  2944  0B5D  1903               	btfsc	3,2
  2945  0B5E  2B6E               	goto	l5765
  2946                           
  2947                           ;main.c: 768: {
  2948                           ;main.c: 769: count_1ms=0;
  2949  0B5F  0023               	movlb	3	; select bank3
  2950  0B60  01B2               	clrf	_count_1ms^(0+384)	;volatile
  2951  0B61  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  2952                           
  2953                           ;main.c: 770: onesecf=1;
  2954  0B62  3001               	movlw	1
  2955  0B63  0021               	movlb	1	; select bank1
  2956  0B64  00ED               	movwf	??_main^(0+128)
  2957  0B65  086D               	movf	??_main^(0+128),w
  2958  0B66  0022               	movlb	2	; select bank2
  2959  0B67  00D5               	movwf	_onesecf^(0+256)	;volatile
  2960                           
  2961                           ;main.c: 771: txonf=1;
  2962  0B68  3001               	movlw	1
  2963  0B69  0021               	movlb	1	; select bank1
  2964  0B6A  00ED               	movwf	??_main^(0+128)
  2965  0B6B  086D               	movf	??_main^(0+128),w
  2966  0B6C  0023               	movlb	3	; select bank3
  2967  0B6D  00D5               	movwf	_txonf^(0+384)	;volatile
  2968  0B6E                     l5765:	
  2969                           
  2970                           ;main.c: 772: }
  2971                           ;main.c: 773: }
  2972                           ;main.c: 774: prevkey=key;
  2973  0B6E  0021               	movlb	1	; select bank1
  2974  0B6F  086F               	movf	_key^(0+128),w	;volatile
  2975  0B70  00ED               	movwf	??_main^(0+128)
  2976  0B71  086D               	movf	??_main^(0+128),w
  2977  0B72  0022               	movlb	2	; select bank2
  2978  0B73  00EF               	movwf	_prevkey^(0+256)	;volatile
  2979                           
  2980                           ;main.c: 778: if((psstatusu.psstatuss.weldoncyclestrt!=1)&&(cGasRlyClrfg == 0))
  2981  0B74  0020               	movlb	0	; select bank0
  2982  0B75  196C               	btfsc	_psstatusu,2
  2983  0B76  2D11               	goto	l721
  2984  0B77  0022               	movlb	2	; select bank2
  2985  0B78  0839               	movf	_cGasRlyClrfg^(0+256),w
  2986  0B79  1D03               	btfss	3,2
  2987  0B7A  2D11               	goto	l721
  2988                           
  2989                           ;main.c: 779: {
  2990                           ;main.c: 780: if( (prevsetwirespeed!=setwirespeed) || (prevsetcurrent!=setcurrent) || di
      +                          spupdatef==1 )
  2991  0B7B  0020               	movlb	0	; select bank0
  2992  0B7C  085D               	movf	_setwirespeed+1,w
  2993  0B7D  0022               	movlb	2	; select bank2
  2994  0B7E  062B               	xorwf	(_prevsetwirespeed+1)^(0+256),w
  2995  0B7F  1D03               	skipz
  2996  0B80  2B85               	goto	u8605
  2997  0B81  0020               	movlb	0	; select bank0
  2998  0B82  085C               	movf	_setwirespeed,w
  2999  0B83  0022               	movlb	2	; select bank2
  3000  0B84  062A               	xorwf	_prevsetwirespeed^(0+256),w
  3001  0B85                     u8605:	
  3002  0B85  1D03               	skipz
  3003  0B86  2B96               	goto	l5777
  3004  0B87  082F               	movf	(_setcurrent+1)^(0+256),w
  3005  0B88  0023               	movlb	3	; select bank3
  3006  0B89  063D               	xorwf	(_prevsetcurrent+1)^(0+384),w
  3007  0B8A  1D03               	skipz
  3008  0B8B  2B90               	goto	u8615
  3009  0B8C  0022               	movlb	2	; select bank2
  3010  0B8D  082E               	movf	_setcurrent^(0+256),w
  3011  0B8E  0023               	movlb	3	; select bank3
  3012  0B8F  063C               	xorwf	_prevsetcurrent^(0+384),w
  3013  0B90                     u8615:	
  3014  0B90  1D03               	skipz
  3015  0B91  2B96               	goto	l5777
  3016  0B92  0020               	movlb	0	; select bank0
  3017  0B93  036F               	decf	_dispupdatef,w	;volatile
  3018  0B94  1D03               	btfss	3,2
  3019  0B95  2BFA               	goto	l5803
  3020  0B96                     l5777:	
  3021                           
  3022                           ;main.c: 781: {
  3023                           ;main.c: 782: if((prevsetwirespeed!=setwirespeed) && (prevsetwirespeed > setwirespeed))
  3024  0B96  0020               	movlb	0	; select bank0
  3025  0B97  085D               	movf	_setwirespeed+1,w
  3026  0B98  0022               	movlb	2	; select bank2
  3027  0B99  062B               	xorwf	(_prevsetwirespeed+1)^(0+256),w
  3028  0B9A  1D03               	skipz
  3029  0B9B  2BA0               	goto	u8635
  3030  0B9C  0020               	movlb	0	; select bank0
  3031  0B9D  085C               	movf	_setwirespeed,w
  3032  0B9E  0022               	movlb	2	; select bank2
  3033  0B9F  062A               	xorwf	_prevsetwirespeed^(0+256),w
  3034  0BA0                     u8635:	
  3035  0BA0  1903               	skipnz
  3036  0BA1  2BB0               	goto	l725
  3037  0BA2  082B               	movf	(_prevsetwirespeed+1)^(0+256),w
  3038  0BA3  0020               	movlb	0	; select bank0
  3039  0BA4  025D               	subwf	_setwirespeed+1,w
  3040  0BA5  1D03               	skipz
  3041  0BA6  2BAB               	goto	u8645
  3042  0BA7  0022               	movlb	2	; select bank2
  3043  0BA8  082A               	movf	_prevsetwirespeed^(0+256),w
  3044  0BA9  0020               	movlb	0	; select bank0
  3045  0BAA  025C               	subwf	_setwirespeed,w
  3046  0BAB                     u8645:	
  3047  0BAB  1803               	skipnc
  3048  0BAC  2BB0               	goto	l725
  3049                           
  3050                           ;main.c: 783: {
  3051                           ;main.c: 784: wfspeedchangef=1;
  3052  0BAD  0023               	movlb	3	; select bank3
  3053  0BAE  01EE               	clrf	_wfspeedchangef^(0+384)
  3054  0BAF  0AEE               	incf	_wfspeedchangef^(0+384),f
  3055  0BB0                     l725:	
  3056                           
  3057                           ;main.c: 785: }
  3058                           ;main.c: 786: if(TypeU.TypeS.wirespeed==1)
  3059  0BB0  0020               	movlb	0	; select bank0
  3060  0BB1  1C65               	btfss	_TypeU,0
  3061  0BB2  2BBF               	goto	l726
  3062                           
  3063                           ;main.c: 787: {
  3064                           ;main.c: 788: TypeU.TypeS.wirespeed=1;
  3065  0BB3  1465               	bsf	_TypeU,0
  3066                           
  3067                           ;main.c: 789: TypeU.TypeS.amp=0;
  3068  0BB4  1066               	bcf	_TypeU+1,0
  3069                           
  3070                           ;main.c: 790: TypeU.TypeS.thickness=0;
  3071  0BB5  10E5               	bcf	_TypeU,1
  3072                           
  3073                           ;main.c: 792: TypeDP.TypeD.digitdp1 =0;
  3074  0BB6  106B               	bcf	_TypeDP,0
  3075                           
  3076                           ;main.c: 793: TypeDP.TypeD.digitdp2 =1;
  3077  0BB7  14EB               	bsf	_TypeDP,1
  3078                           
  3079                           ;main.c: 794: TypeDP.TypeD.digitdp3 =0;
  3080  0BB8  116B               	bcf	_TypeDP,2
  3081                           
  3082                           ;main.c: 795: disp_hex_window1(setwirespeed);
  3083  0BB9  085D               	movf	_setwirespeed+1,w
  3084  0BBA  0021               	movlb	1	; select bank1
  3085  0BBB  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  3086  0BBC  0020               	movlb	0	; select bank0
  3087  0BBD  085C               	movf	_setwirespeed,w
  3088  0BBE  2BCD               	goto	L9
  3089  0BBF                     l726:	
  3090                           ;main.c: 796: }
  3091                           
  3092                           
  3093                           ;main.c: 797: else if(TypeU.TypeS.amp==1)
  3094  0BBF  1C66               	btfss	_TypeU+1,0
  3095  0BC0  2BD0               	goto	l728
  3096                           
  3097                           ;main.c: 798: {
  3098                           ;main.c: 799: TypeU.TypeS.wirespeed=0;
  3099  0BC1  1065               	bcf	_TypeU,0
  3100                           
  3101                           ;main.c: 800: TypeU.TypeS.amp=1;
  3102  0BC2  1466               	bsf	_TypeU+1,0
  3103                           
  3104                           ;main.c: 801: TypeU.TypeS.thickness=0;
  3105  0BC3  10E5               	bcf	_TypeU,1
  3106                           
  3107                           ;main.c: 802: TypeDP.TypeD.digitdp1 =0;
  3108  0BC4  106B               	bcf	_TypeDP,0
  3109                           
  3110                           ;main.c: 803: TypeDP.TypeD.digitdp2 =0;
  3111  0BC5  10EB               	bcf	_TypeDP,1
  3112                           
  3113                           ;main.c: 804: TypeDP.TypeD.digitdp3 =0;
  3114  0BC6  116B               	bcf	_TypeDP,2
  3115                           
  3116                           ;main.c: 805: disp_hex_window1(setcurrent);
  3117  0BC7  0022               	movlb	2	; select bank2
  3118  0BC8  082F               	movf	(_setcurrent+1)^(0+256),w
  3119  0BC9  0021               	movlb	1	; select bank1
  3120  0BCA  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  3121  0BCB  0022               	movlb	2	; select bank2
  3122  0BCC  082E               	movf	_setcurrent^(0+256),w
  3123  0BCD                     L9:	
  3124  0BCD  0021               	movlb	1	; select bank1
  3125  0BCE  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  3126  0BCF  2BE1               	goto	L7
  3127  0BD0                     l728:	
  3128                           ;main.c: 806: }
  3129                           
  3130                           
  3131                           ;main.c: 807: else if(TypeU.TypeS.thickness==1)
  3132  0BD0  1CE5               	btfss	_TypeU,1
  3133  0BD1  2BE4               	goto	l5795
  3134                           
  3135                           ;main.c: 808: {
  3136                           ;main.c: 809: TypeU.TypeS.wirespeed =0;
  3137  0BD2  1065               	bcf	_TypeU,0
  3138                           
  3139                           ;main.c: 810: TypeU.TypeS.amp =0;
  3140  0BD3  1066               	bcf	_TypeU+1,0
  3141                           
  3142                           ;main.c: 811: TypeU.TypeS.thickness =1;
  3143  0BD4  14E5               	bsf	_TypeU,1
  3144                           
  3145                           ;main.c: 812: TypeDP.TypeD.digitdp1 =0;
  3146  0BD5  106B               	bcf	_TypeDP,0
  3147                           
  3148                           ;main.c: 813: TypeDP.TypeD.digitdp2 =1;
  3149  0BD6  14EB               	bsf	_TypeDP,1
  3150                           
  3151                           ;main.c: 814: TypeDP.TypeD.digitdp3 =0;
  3152  0BD7  116B               	bcf	_TypeDP,2
  3153                           
  3154                           ;main.c: 815: disp_hex_window1(pstowfstru.pstowfstrs.setthickness);
  3155  0BD8  0024               	movlb	4	; select bank4
  3156  0BD9  0852               	movf	(_pstowfstru^(0+512)+4),w
  3157  0BDA  0021               	movlb	1	; select bank1
  3158  0BDB  00ED               	movwf	??_main^(0+128)
  3159  0BDC  01EE               	clrf	(??_main^(0+128)+1)
  3160  0BDD  086D               	movf	??_main^(0+128),w
  3161  0BDE  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  3162  0BDF  086E               	movf	(??_main+1)^(0+128),w
  3163  0BE0  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  3164  0BE1                     L7:	
  3165  0BE1  3199  21CE  3188   	fcall	_disp_hex_window1
  3166  0BE4                     l5795:	
  3167                           
  3168                           ;main.c: 816: }
  3169                           ;main.c: 819: pstowfstru.pstowfstrs.setwspeed=setwirespeed;
  3170  0BE4  0020               	movlb	0	; select bank0
  3171  0BE5  085C               	movf	_setwirespeed,w
  3172  0BE6  0021               	movlb	1	; select bank1
  3173  0BE7  00ED               	movwf	??_main^(0+128)
  3174  0BE8  086D               	movf	??_main^(0+128),w
  3175  0BE9  0024               	movlb	4	; select bank4
  3176  0BEA  00CF               	movwf	(_pstowfstru^(0+512)+1)
  3177                           
  3178                           ;main.c: 821: count_1ms=0;
  3179  0BEB  0023               	movlb	3	; select bank3
  3180  0BEC  01B2               	clrf	_count_1ms^(0+384)	;volatile
  3181  0BED  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3182                           
  3183                           ;main.c: 822: onesecf=1;
  3184  0BEE  3001               	movlw	1
  3185  0BEF  0021               	movlb	1	; select bank1
  3186  0BF0  00ED               	movwf	??_main^(0+128)
  3187  0BF1  086D               	movf	??_main^(0+128),w
  3188  0BF2  0022               	movlb	2	; select bank2
  3189  0BF3  00D5               	movwf	_onesecf^(0+256)	;volatile
  3190                           
  3191                           ;main.c: 823: txonf=1;
  3192  0BF4  3001               	movlw	1
  3193  0BF5  0021               	movlb	1	; select bank1
  3194  0BF6  00ED               	movwf	??_main^(0+128)
  3195  0BF7  086D               	movf	??_main^(0+128),w
  3196  0BF8  0023               	movlb	3	; select bank3
  3197  0BF9  00D5               	movwf	_txonf^(0+384)	;volatile
  3198  0BFA                     l5803:	
  3199                           
  3200                           ;main.c: 824: }
  3201                           ;main.c: 825: prevsetwirespeed=setwirespeed;
  3202  0BFA  0020               	movlb	0	; select bank0
  3203  0BFB  085D               	movf	_setwirespeed+1,w
  3204  0BFC  0022               	movlb	2	; select bank2
  3205  0BFD  00AB               	movwf	(_prevsetwirespeed+1)^(0+256)
  3206  0BFE  0020               	movlb	0	; select bank0
  3207  0BFF  085C               	movf	_setwirespeed,w
  3208  0C00  0022               	movlb	2	; select bank2
  3209  0C01  00AA               	movwf	_prevsetwirespeed^(0+256)
  3210                           
  3211                           ;main.c: 826: prevsetcurrent=setcurrent;
  3212  0C02  082F               	movf	(_setcurrent+1)^(0+256),w
  3213  0C03  0023               	movlb	3	; select bank3
  3214  0C04  00BD               	movwf	(_prevsetcurrent+1)^(0+384)
  3215  0C05  0022               	movlb	2	; select bank2
  3216  0C06  082E               	movf	_setcurrent^(0+256),w
  3217  0C07  0023               	movlb	3	; select bank3
  3218  0C08  00BC               	movwf	_prevsetcurrent^(0+384)
  3219                           
  3220                           ;main.c: 828: if(((prevsetvoltage!=setvoltage) || dispupdatef==1) && (TypeU.TypeS.vtg==1
      +                          ) )
  3221  0C09  0020               	movlb	0	; select bank0
  3222  0C0A  085B               	movf	_setvoltage+1,w
  3223  0C0B  0023               	movlb	3	; select bank3
  3224  0C0C  063F               	xorwf	(_prevsetvoltage+1)^(0+384),w
  3225  0C0D  1D03               	skipz
  3226  0C0E  2C13               	goto	u8685
  3227  0C0F  0020               	movlb	0	; select bank0
  3228  0C10  085A               	movf	_setvoltage,w
  3229  0C11  0023               	movlb	3	; select bank3
  3230  0C12  063E               	xorwf	_prevsetvoltage^(0+384),w
  3231  0C13                     u8685:	
  3232  0C13  1D03               	skipz
  3233  0C14  2C19               	goto	l733
  3234  0C15  0020               	movlb	0	; select bank0
  3235  0C16  036F               	decf	_dispupdatef,w	;volatile
  3236  0C17  1D03               	btfss	3,2
  3237  0C18  2C56               	goto	l5829
  3238  0C19                     l733:	
  3239  0C19  0020               	movlb	0	; select bank0
  3240  0C1A  1CE6               	btfss	_TypeU+1,1
  3241  0C1B  2C56               	goto	l5829
  3242                           
  3243                           ;main.c: 829: {
  3244                           ;main.c: 830: TypeDP.TypeD.digitdp4 =0;
  3245  0C1C  11EB               	bcf	_TypeDP,3
  3246                           
  3247                           ;main.c: 831: TypeDP.TypeD.digitdp5 =1;
  3248  0C1D  166B               	bsf	_TypeDP,4
  3249                           
  3250                           ;main.c: 832: TypeDP.TypeD.digitdp6 =0;
  3251  0C1E  12EB               	bcf	_TypeDP,5
  3252                           
  3253                           ;main.c: 833: TypeU.TypeS.arclength =0;
  3254  0C1F  1165               	bcf	_TypeU,2
  3255                           
  3256                           ;main.c: 834: TypeU.TypeS.vtg =1;
  3257  0C20  14E6               	bsf	_TypeU+1,1
  3258                           
  3259                           ;main.c: 835: TypeU.TypeS.sec =0;
  3260  0C21  1166               	bcf	_TypeU+1,2
  3261                           
  3262                           ;main.c: 836: disp_hex_window2(setvoltage);
  3263  0C22  085B               	movf	_setvoltage+1,w
  3264  0C23  0021               	movlb	1	; select bank1
  3265  0C24  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  3266  0C25  0020               	movlb	0	; select bank0
  3267  0C26  085A               	movf	_setvoltage,w
  3268  0C27  0021               	movlb	1	; select bank1
  3269  0C28  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  3270  0C29  319A  227B  3188   	fcall	_disp_hex_window2
  3271                           
  3272                           ;main.c: 838: pstowfstru.pstowfstrs.Lo_setvoltage=setvoltage;
  3273  0C2C  0020               	movlb	0	; select bank0
  3274  0C2D  085A               	movf	_setvoltage,w
  3275  0C2E  0021               	movlb	1	; select bank1
  3276  0C2F  00ED               	movwf	??_main^(0+128)
  3277  0C30  086D               	movf	??_main^(0+128),w
  3278  0C31  0024               	movlb	4	; select bank4
  3279  0C32  00D4               	movwf	(_pstowfstru^(0+512)+6)
  3280                           
  3281                           ;main.c: 839: pstowfstru.pstowfstrs.Hi_setvoltage=setvoltage >> 8;
  3282  0C33  0020               	movlb	0	; select bank0
  3283  0C34  085B               	movf	_setvoltage+1,w
  3284  0C35  0021               	movlb	1	; select bank1
  3285  0C36  00ED               	movwf	??_main^(0+128)
  3286  0C37  086D               	movf	??_main^(0+128),w
  3287  0C38  0024               	movlb	4	; select bank4
  3288  0C39  00D3               	movwf	(_pstowfstru^(0+512)+5)
  3289                           
  3290                           ;main.c: 840: count_1ms=0;
  3291  0C3A  0023               	movlb	3	; select bank3
  3292  0C3B  01B2               	clrf	_count_1ms^(0+384)	;volatile
  3293  0C3C  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3294                           
  3295                           ;main.c: 841: onesecf=1;
  3296  0C3D  3001               	movlw	1
  3297  0C3E  0021               	movlb	1	; select bank1
  3298  0C3F  00ED               	movwf	??_main^(0+128)
  3299  0C40  086D               	movf	??_main^(0+128),w
  3300  0C41  0022               	movlb	2	; select bank2
  3301  0C42  00D5               	movwf	_onesecf^(0+256)	;volatile
  3302                           
  3303                           ;main.c: 842: txonf=1;
  3304  0C43  3001               	movlw	1
  3305  0C44  0021               	movlb	1	; select bank1
  3306  0C45  00ED               	movwf	??_main^(0+128)
  3307  0C46  086D               	movf	??_main^(0+128),w
  3308  0C47  0023               	movlb	3	; select bank3
  3309  0C48  00D5               	movwf	_txonf^(0+384)	;volatile
  3310                           
  3311                           ;main.c: 843: prevsetvoltage=setvoltage;
  3312  0C49  0020               	movlb	0	; select bank0
  3313  0C4A  085B               	movf	_setvoltage+1,w
  3314  0C4B  0023               	movlb	3	; select bank3
  3315  0C4C  00BF               	movwf	(_prevsetvoltage+1)^(0+384)
  3316  0C4D  0020               	movlb	0	; select bank0
  3317  0C4E  085A               	movf	_setvoltage,w
  3318  0C4F  0023               	movlb	3	; select bank3
  3319  0C50  00BE               	movwf	_prevsetvoltage^(0+384)
  3320                           
  3321                           ;main.c: 844: parclength=100;
  3322  0C51  3064               	movlw	100
  3323  0C52  0024               	movlb	4	; select bank4
  3324  0C53  00EB               	movwf	_parclength^(0+512)
  3325  0C54  3000               	movlw	0
  3326  0C55  00EC               	movwf	(_parclength^(0+512)+1)
  3327  0C56                     l5829:	
  3328                           
  3329                           ;main.c: 845: }
  3330                           ;main.c: 848: if(((parclength!=pstowfstru.pstowfstrs.arclength) || dispupdatef==1) && (T
      +                          ypeU.TypeS.arclength==1))
  3331  0C56  0024               	movlb	4	; select bank4
  3332  0C57  0855               	movf	(_pstowfstru^(0+512)+7),w
  3333  0C58  0021               	movlb	1	; select bank1
  3334  0C59  00ED               	movwf	??_main^(0+128)
  3335  0C5A  01EE               	clrf	(??_main^(0+128)+1)
  3336  0C5B  0024               	movlb	4	; select bank4
  3337  0C5C  086C               	movf	(_parclength+1)^(0+512),w
  3338  0C5D  0021               	movlb	1	; select bank1
  3339  0C5E  066E               	xorwf	(??_main+1)^(0+128),w
  3340  0C5F  1D03               	skipz
  3341  0C60  2C65               	goto	u8715
  3342  0C61  0024               	movlb	4	; select bank4
  3343  0C62  086B               	movf	_parclength^(0+512),w
  3344  0C63  0021               	movlb	1	; select bank1
  3345  0C64  066D               	xorwf	??_main^(0+128),w
  3346  0C65                     u8715:	
  3347  0C65  1D03               	skipz
  3348  0C66  2C6B               	goto	l736
  3349  0C67  0020               	movlb	0	; select bank0
  3350  0C68  036F               	decf	_dispupdatef,w	;volatile
  3351  0C69  1D03               	btfss	3,2
  3352  0C6A  2CE2               	goto	l5875
  3353  0C6B                     l736:	
  3354  0C6B  0020               	movlb	0	; select bank0
  3355  0C6C  1D65               	btfss	_TypeU,2
  3356  0C6D  2CE2               	goto	l5875
  3357                           
  3358                           ;main.c: 849: {
  3359                           ;main.c: 852: if(weldmode=='P')
  3360  0C6E  3050               	movlw	80
  3361  0C6F  0664               	xorwf	_weldmode,w	;volatile
  3362  0C70  1D03               	btfss	3,2
  3363  0C71  2C91               	goto	l737
  3364                           
  3365                           ;main.c: 853: {
  3366                           ;main.c: 854: if(pstowfstru.pstowfstrs.arclength>=40)
  3367  0C72  3028               	movlw	40
  3368  0C73  0024               	movlb	4	; select bank4
  3369  0C74  0255               	subwf	(_pstowfstru^(0+512)+7),w
  3370  0C75  1C03               	skipc
  3371  0C76  2C7F               	goto	l5839
  3372                           
  3373                           ;main.c: 855: disparclength=pstowfstru.pstowfstrs.arclength-40;
  3374  0C77  0855               	movf	(_pstowfstru^(0+512)+7),w
  3375  0C78  3ED8               	addlw	216
  3376  0C79  00BE               	movwf	_disparclength^(0+512)
  3377  0C7A  30FF               	movlw	255
  3378  0C7B  1803               	skipnc
  3379  0C7C  3000               	movlw	0
  3380  0C7D  00BF               	movwf	(_disparclength^(0+512)+1)
  3381  0C7E  2C91               	goto	l737
  3382  0C7F                     l5839:	
  3383                           
  3384                           ;main.c: 856: else
  3385                           ;main.c: 857: disparclength=40 - pstowfstru.pstowfstrs.arclength;
  3386  0C7F  0855               	movf	(_pstowfstru^(0+512)+7),w
  3387  0C80  0021               	movlb	1	; select bank1
  3388  0C81  00ED               	movwf	??_main^(0+128)
  3389  0C82  01EE               	clrf	(??_main^(0+128)+1)
  3390  0C83  09ED               	comf	??_main^(0+128),f
  3391  0C84  09EE               	comf	(??_main^(0+128)+1),f
  3392  0C85  0AED               	incf	??_main^(0+128),f
  3393  0C86  1903               	skipnz
  3394  0C87  0AEE               	incf	(??_main^(0+128)+1),f
  3395  0C88  086D               	movf	??_main^(0+128),w
  3396  0C89  3E28               	addlw	40
  3397  0C8A  0024               	movlb	4	; select bank4
  3398  0C8B  00BE               	movwf	_disparclength^(0+512)
  3399  0C8C  3000               	movlw	0
  3400  0C8D  0021               	movlb	1	; select bank1
  3401  0C8E  3D6E               	addwfc	(??_main+1)^(0+128),w
  3402  0C8F  0024               	movlb	4	; select bank4
  3403  0C90  00BF               	movwf	(_disparclength+1)^(0+512)
  3404  0C91                     l737:	
  3405                           
  3406                           ;main.c: 858: }
  3407                           ;main.c: 860: if(weldmode=='G')
  3408  0C91  3047               	movlw	71
  3409  0C92  0020               	movlb	0	; select bank0
  3410  0C93  0664               	xorwf	_weldmode,w	;volatile
  3411  0C94  1D03               	btfss	3,2
  3412  0C95  2CA2               	goto	l5843
  3413                           
  3414                           ;main.c: 861: {
  3415                           ;main.c: 862: disparclength=pstowfstru.pstowfstrs.arclength;
  3416  0C96  0024               	movlb	4	; select bank4
  3417  0C97  0855               	movf	(_pstowfstru^(0+512)+7),w
  3418  0C98  0021               	movlb	1	; select bank1
  3419  0C99  00ED               	movwf	??_main^(0+128)
  3420  0C9A  01EE               	clrf	(??_main^(0+128)+1)
  3421  0C9B  086D               	movf	??_main^(0+128),w
  3422  0C9C  0024               	movlb	4	; select bank4
  3423  0C9D  00BE               	movwf	_disparclength^(0+512)
  3424  0C9E  0021               	movlb	1	; select bank1
  3425  0C9F  086E               	movf	(??_main+1)^(0+128),w
  3426  0CA0  0024               	movlb	4	; select bank4
  3427  0CA1  00BF               	movwf	(_disparclength+1)^(0+512)
  3428  0CA2                     l5843:	
  3429                           
  3430                           ;main.c: 863: }
  3431                           ;main.c: 865: TypeDP.TypeD.digitdp4 =0;
  3432  0CA2  0020               	movlb	0	; select bank0
  3433  0CA3  11EB               	bcf	_TypeDP,3
  3434                           
  3435                           ;main.c: 866: TypeDP.TypeD.digitdp5 =0;
  3436  0CA4  126B               	bcf	_TypeDP,4
  3437                           
  3438                           ;main.c: 867: TypeDP.TypeD.digitdp6 =0;
  3439  0CA5  12EB               	bcf	_TypeDP,5
  3440                           
  3441                           ;main.c: 868: TypeU.TypeS.arclength =1;
  3442  0CA6  1565               	bsf	_TypeU,2
  3443                           
  3444                           ;main.c: 869: TypeU.TypeS.vtg =0;
  3445  0CA7  10E6               	bcf	_TypeU+1,1
  3446                           
  3447                           ;main.c: 870: TypeU.TypeS.sec =0;
  3448  0CA8  1166               	bcf	_TypeU+1,2
  3449                           
  3450                           ;main.c: 871: disp_hex_window2(disparclength);
  3451  0CA9  0024               	movlb	4	; select bank4
  3452  0CAA  083F               	movf	(_disparclength+1)^(0+512),w
  3453  0CAB  0021               	movlb	1	; select bank1
  3454  0CAC  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  3455  0CAD  0024               	movlb	4	; select bank4
  3456  0CAE  083E               	movf	_disparclength^(0+512),w
  3457  0CAF  0021               	movlb	1	; select bank1
  3458  0CB0  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  3459  0CB1  319A  227B  3188   	fcall	_disp_hex_window2
  3460                           
  3461                           ;main.c: 874: if(weldmode=='P')
  3462  0CB4  3050               	movlw	80
  3463  0CB5  0020               	movlb	0	; select bank0
  3464  0CB6  0664               	xorwf	_weldmode,w	;volatile
  3465  0CB7  1D03               	btfss	3,2
  3466  0CB8  2CC0               	goto	l5865
  3467                           
  3468                           ;main.c: 875: {
  3469                           ;main.c: 876: if(pstowfstru.pstowfstrs.arclength>=40)
  3470  0CB9  3028               	movlw	40
  3471  0CBA  0024               	movlb	4	; select bank4
  3472  0CBB  0255               	subwf	(_pstowfstru^(0+512)+7),w
  3473  0CBC  1803               	btfsc	3,0
  3474  0CBD  2CC0               	goto	l5865
  3475                           
  3476                           ;main.c: 878: else
  3477                           ;main.c: 879: diswin1[3]=0x26;
  3478                           
  3479                           ;main.c: 877: diswin1[3]=0x25;
  3480  0CBE  3026               	movlw	38
  3481  0CBF  2CC1               	goto	L3
  3482  0CC0                     l5865:	
  3483                           ;main.c: 880: }
  3484                           
  3485                           
  3486                           ;main.c: 881: else
  3487                           ;main.c: 882: diswin1[3]=0x25;
  3488  0CC0  3025               	movlw	37
  3489  0CC1                     L3:	
  3490  0CC1  0021               	movlb	1	; select bank1
  3491  0CC2  00ED               	movwf	??_main^(0+128)
  3492  0CC3  086D               	movf	??_main^(0+128),w
  3493  0CC4  0023               	movlb	3	; select bank3
  3494  0CC5  00DC               	movwf	(_diswin1^(0+384)+3)
  3495                           
  3496                           ;main.c: 885: count_1ms=0;
  3497  0CC6  01B2               	clrf	_count_1ms^(0+384)	;volatile
  3498  0CC7  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3499                           
  3500                           ;main.c: 886: onesecf=1;
  3501  0CC8  3001               	movlw	1
  3502  0CC9  0021               	movlb	1	; select bank1
  3503  0CCA  00ED               	movwf	??_main^(0+128)
  3504  0CCB  086D               	movf	??_main^(0+128),w
  3505  0CCC  0022               	movlb	2	; select bank2
  3506  0CCD  00D5               	movwf	_onesecf^(0+256)	;volatile
  3507                           
  3508                           ;main.c: 887: txonf=1;
  3509  0CCE  3001               	movlw	1
  3510  0CCF  0021               	movlb	1	; select bank1
  3511  0CD0  00ED               	movwf	??_main^(0+128)
  3512  0CD1  086D               	movf	??_main^(0+128),w
  3513  0CD2  0023               	movlb	3	; select bank3
  3514  0CD3  00D5               	movwf	_txonf^(0+384)	;volatile
  3515                           
  3516                           ;main.c: 888: prevsetvoltage=0;
  3517  0CD4  01BE               	clrf	_prevsetvoltage^(0+384)
  3518  0CD5  01BF               	clrf	(_prevsetvoltage+1)^(0+384)
  3519                           
  3520                           ;main.c: 889: parclength=pstowfstru.pstowfstrs.arclength;
  3521  0CD6  0024               	movlb	4	; select bank4
  3522  0CD7  0855               	movf	(_pstowfstru^(0+512)+7),w
  3523  0CD8  0021               	movlb	1	; select bank1
  3524  0CD9  00ED               	movwf	??_main^(0+128)
  3525  0CDA  01EE               	clrf	(??_main^(0+128)+1)
  3526  0CDB  086D               	movf	??_main^(0+128),w
  3527  0CDC  0024               	movlb	4	; select bank4
  3528  0CDD  00EB               	movwf	_parclength^(0+512)
  3529  0CDE  0021               	movlb	1	; select bank1
  3530  0CDF  086E               	movf	(??_main+1)^(0+128),w
  3531  0CE0  0024               	movlb	4	; select bank4
  3532  0CE1  00EC               	movwf	(_parclength+1)^(0+512)
  3533  0CE2                     l5875:	
  3534                           
  3535                           ;main.c: 890: }
  3536                           ;main.c: 893: if(psstatusu.psstatuss.gasoncommand!=1)
  3537  0CE2  0020               	movlb	0	; select bank0
  3538  0CE3  1CEC               	btfss	_psstatusu,1
  3539                           
  3540                           ;main.c: 894: PORTCbits.RC3 =0;
  3541  0CE4  118E               	bcf	14,3	;volatile
  3542                           
  3543                           ;main.c: 895: if((psstatusu.psstatuss.motoroncommand!=1) || ((TORCH == 'X') && (wfstatus
      +                          u.wfstatuss.twotfourtmode1 == 0)) )
  3544  0CE5  1DEC               	btfss	_psstatusu,3
  3545  0CE6  2CEC               	goto	l5883
  3546  0CE7  3058               	movlw	88
  3547  0CE8  066E               	xorwf	_TORCH,w
  3548  0CE9  1903               	btfsc	3,2
  3549  0CEA  186D               	btfsc	_wfstatusu,0
  3550  0CEB  2D01               	goto	l5885
  3551  0CEC                     l5883:	
  3552                           
  3553                           ;main.c: 896: Update_PWM(setwirespeed*0);
  3554  0CEC  085D               	movf	_setwirespeed+1,w
  3555  0CED  0021               	movlb	1	; select bank1
  3556  0CEE  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  3557  0CEF  0020               	movlb	0	; select bank0
  3558  0CF0  085C               	movf	_setwirespeed,w
  3559  0CF1  0021               	movlb	1	; select bank1
  3560  0CF2  00A0               	movwf	___wmul@multiplier^(0+128)
  3561  0CF3  3000               	movlw	0
  3562  0CF4  00A2               	movwf	___wmul@multiplicand^(0+128)
  3563  0CF5  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  3564  0CF6  3198  2092  3188   	fcall	___wmul
  3565  0CF9  0021               	movlb	1	; select bank1
  3566  0CFA  0821               	movf	(?___wmul+1)^(0+128),w
  3567  0CFB  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  3568  0CFC  0820               	movf	?___wmul^(0+128),w
  3569  0CFD  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  3570  0CFE  3198  20FB  3188   	fcall	_Update_PWM
  3571  0D01                     l5885:	
  3572                           
  3573                           ;main.c: 898: speeedrate=0;
  3574  0D01  0023               	movlb	3	; select bank3
  3575  0D02  01EA               	clrf	_speeedrate^(0+384)
  3576  0D03  01EB               	clrf	(_speeedrate+1)^(0+384)
  3577                           
  3578                           ;main.c: 899: openloopcnt =0;
  3579  0D04  0024               	movlb	4	; select bank4
  3580  0D05  01C8               	clrf	_openloopcnt^(0+512)
  3581  0D06  01C9               	clrf	(_openloopcnt+1)^(0+512)
  3582                           
  3583                           ;main.c: 900: softstartf =0;
  3584  0D07  0023               	movlb	3	; select bank3
  3585  0D08  01D2               	clrf	_softstartf^(0+384)	;volatile
  3586                           
  3587                           ;main.c: 901: dispupdatef =0;
  3588  0D09  0020               	movlb	0	; select bank0
  3589  0D0A  01EF               	clrf	_dispupdatef	;volatile
  3590                           
  3591                           ;main.c: 902: closeloopf=0;
  3592  0D0B  0022               	movlb	2	; select bank2
  3593  0D0C  01BF               	clrf	_closeloopf^(0+256)
  3594                           
  3595                           ;main.c: 903: cyclestrtf=0;
  3596  0D0D  01C5               	clrf	_cyclestrtf^(0+256)
  3597                           
  3598                           ;main.c: 905: psstatusu.psstatuss.creepspeedon=1;
  3599  0D0E  0020               	movlb	0	; select bank0
  3600  0D0F  16EC               	bsf	_psstatusu,5
  3601                           
  3602                           ;main.c: 908: }
  3603  0D10  2FE7               	goto	l6049
  3604  0D11                     l721:	
  3605                           
  3606                           ;main.c: 910: else if(psstatusu.psstatuss.weldoncyclestrt==1)
  3607  0D11  0020               	movlb	0	; select bank0
  3608  0D12  1D6C               	btfss	_psstatusu,2
  3609  0D13  2FE7               	goto	l6049
  3610                           
  3611                           ;main.c: 911: {
  3612                           ;main.c: 913: if(cEditfg == 1)
  3613  0D14  035E               	decf	_cEditfg,w
  3614  0D15  1D03               	btfss	3,2
  3615  0D16  2D71               	goto	l5917
  3616                           
  3617                           ;main.c: 914: {
  3618                           ;main.c: 915: if((prevsetwirespeed!=setwirespeed))
  3619  0D17  085D               	movf	_setwirespeed+1,w
  3620  0D18  0022               	movlb	2	; select bank2
  3621  0D19  062B               	xorwf	(_prevsetwirespeed+1)^(0+256),w
  3622  0D1A  1D03               	skipz
  3623  0D1B  2D20               	goto	u8855
  3624  0D1C  0020               	movlb	0	; select bank0
  3625  0D1D  085C               	movf	_setwirespeed,w
  3626  0D1E  0022               	movlb	2	; select bank2
  3627  0D1F  062A               	xorwf	_prevsetwirespeed^(0+256),w
  3628  0D20                     u8855:	
  3629  0D20  1903               	skipnz
  3630  0D21  2D71               	goto	l5917
  3631                           
  3632                           ;main.c: 916: {
  3633                           ;main.c: 917: pstowfstru.pstowfstrs.setwspeed=setwirespeed;
  3634  0D22  0020               	movlb	0	; select bank0
  3635  0D23  085C               	movf	_setwirespeed,w
  3636  0D24  0021               	movlb	1	; select bank1
  3637  0D25  00ED               	movwf	??_main^(0+128)
  3638  0D26  086D               	movf	??_main^(0+128),w
  3639  0D27  0024               	movlb	4	; select bank4
  3640  0D28  00CF               	movwf	(_pstowfstru^(0+512)+1)
  3641                           
  3642                           ;main.c: 919: count_1ms=0;
  3643  0D29  0023               	movlb	3	; select bank3
  3644  0D2A  01B2               	clrf	_count_1ms^(0+384)	;volatile
  3645  0D2B  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3646                           
  3647                           ;main.c: 920: onesecf=1;
  3648  0D2C  3001               	movlw	1
  3649  0D2D  0021               	movlb	1	; select bank1
  3650  0D2E  00ED               	movwf	??_main^(0+128)
  3651  0D2F  086D               	movf	??_main^(0+128),w
  3652  0D30  0022               	movlb	2	; select bank2
  3653  0D31  00D5               	movwf	_onesecf^(0+256)	;volatile
  3654                           
  3655                           ;main.c: 921: txonf=1;
  3656  0D32  3001               	movlw	1
  3657  0D33  0021               	movlb	1	; select bank1
  3658  0D34  00ED               	movwf	??_main^(0+128)
  3659  0D35  086D               	movf	??_main^(0+128),w
  3660  0D36  0023               	movlb	3	; select bank3
  3661  0D37  00D5               	movwf	_txonf^(0+384)	;volatile
  3662                           
  3663                           ;main.c: 923: prevsetwirespeed=setwirespeed;
  3664  0D38  0020               	movlb	0	; select bank0
  3665  0D39  085D               	movf	_setwirespeed+1,w
  3666  0D3A  0022               	movlb	2	; select bank2
  3667  0D3B  00AB               	movwf	(_prevsetwirespeed+1)^(0+256)
  3668  0D3C  0020               	movlb	0	; select bank0
  3669  0D3D  085C               	movf	_setwirespeed,w
  3670  0D3E  0022               	movlb	2	; select bank2
  3671  0D3F  00AA               	movwf	_prevsetwirespeed^(0+256)
  3672                           
  3673                           ;main.c: 924: newsetwirespeed=setwirespeed;
  3674  0D40  0020               	movlb	0	; select bank0
  3675  0D41  085D               	movf	_setwirespeed+1,w
  3676  0D42  00E8               	movwf	_newsetwirespeed+1
  3677  0D43  085C               	movf	_setwirespeed,w
  3678  0D44  00E7               	movwf	_newsetwirespeed
  3679                           
  3680                           ;main.c: 925: Update_PWM(newsetwirespeed*3.4);
  3681  0D45  0868               	movf	_newsetwirespeed+1,w
  3682  0D46  0021               	movlb	1	; select bank1
  3683  0D47  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  3684  0D48  0020               	movlb	0	; select bank0
  3685  0D49  0867               	movf	_newsetwirespeed,w
  3686  0D4A  0021               	movlb	1	; select bank1
  3687  0D4B  00A8               	movwf	___lwtoft@c^(0+128)
  3688  0D4C  3198  2008  3188   	fcall	___lwtoft
  3689  0D4F  0021               	movlb	1	; select bank1
  3690  0D50  0828               	movf	?___lwtoft^(0+128),w
  3691  0D51  00B8               	movwf	___ftmul@f2^(0+128)
  3692  0D52  0829               	movf	(?___lwtoft+1)^(0+128),w
  3693  0D53  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3694  0D54  082A               	movf	(?___lwtoft+2)^(0+128),w
  3695  0D55  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3696  0D56  309A               	movlw	154
  3697  0D57  00B5               	movwf	___ftmul@f1^(0+128)
  3698  0D58  3059               	movlw	89
  3699  0D59  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3700  0D5A  3040               	movlw	64
  3701  0D5B  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3702  0D5C  3187  2717  3188   	fcall	___ftmul
  3703  0D5F  0021               	movlb	1	; select bank1
  3704  0D60  0835               	movf	?___ftmul^(0+128),w
  3705  0D61  00C5               	movwf	___fttol@f1^(0+128)
  3706  0D62  0836               	movf	(?___ftmul+1)^(0+128),w
  3707  0D63  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3708  0D64  0837               	movf	(?___ftmul+2)^(0+128),w
  3709  0D65  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3710  0D66  319E  26D0  3188   	fcall	___fttol
  3711  0D69  0021               	movlb	1	; select bank1
  3712  0D6A  0846               	movf	(?___fttol^(0+128)+1),w
  3713  0D6B  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  3714  0D6C  0845               	movf	?___fttol^(0+128),w
  3715  0D6D  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  3716  0D6E  3198  20FB  3188   	fcall	_Update_PWM
  3717  0D71                     l5917:	
  3718                           
  3719                           ;main.c: 926: }
  3720                           ;main.c: 927: }
  3721                           ;main.c: 928: if(cEditfg == 1)
  3722  0D71  0020               	movlb	0	; select bank0
  3723  0D72  035E               	decf	_cEditfg,w
  3724  0D73  1D03               	btfss	3,2
  3725  0D74  2DA5               	goto	l5931
  3726                           
  3727                           ;main.c: 929: {
  3728                           ;main.c: 930: if(prevsetvoltage!=setvoltage)
  3729  0D75  085B               	movf	_setvoltage+1,w
  3730  0D76  0023               	movlb	3	; select bank3
  3731  0D77  063F               	xorwf	(_prevsetvoltage+1)^(0+384),w
  3732  0D78  1D03               	skipz
  3733  0D79  2D7E               	goto	u8875
  3734  0D7A  0020               	movlb	0	; select bank0
  3735  0D7B  085A               	movf	_setvoltage,w
  3736  0D7C  0023               	movlb	3	; select bank3
  3737  0D7D  063E               	xorwf	_prevsetvoltage^(0+384),w
  3738  0D7E                     u8875:	
  3739  0D7E  1903               	skipnz
  3740  0D7F  2DA5               	goto	l5931
  3741                           
  3742                           ;main.c: 931: {
  3743                           ;main.c: 932: pstowfstru.pstowfstrs.Lo_setvoltage=setvoltage;
  3744  0D80  0020               	movlb	0	; select bank0
  3745  0D81  085A               	movf	_setvoltage,w
  3746  0D82  0021               	movlb	1	; select bank1
  3747  0D83  00ED               	movwf	??_main^(0+128)
  3748  0D84  086D               	movf	??_main^(0+128),w
  3749  0D85  0024               	movlb	4	; select bank4
  3750  0D86  00D4               	movwf	(_pstowfstru^(0+512)+6)
  3751                           
  3752                           ;main.c: 933: pstowfstru.pstowfstrs.Hi_setvoltage=setvoltage >> 8;
  3753  0D87  0020               	movlb	0	; select bank0
  3754  0D88  085B               	movf	_setvoltage+1,w
  3755  0D89  0021               	movlb	1	; select bank1
  3756  0D8A  00ED               	movwf	??_main^(0+128)
  3757  0D8B  086D               	movf	??_main^(0+128),w
  3758  0D8C  0024               	movlb	4	; select bank4
  3759  0D8D  00D3               	movwf	(_pstowfstru^(0+512)+5)
  3760                           
  3761                           ;main.c: 934: count_1ms=0;
  3762  0D8E  0023               	movlb	3	; select bank3
  3763  0D8F  01B2               	clrf	_count_1ms^(0+384)	;volatile
  3764  0D90  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3765                           
  3766                           ;main.c: 935: onesecf=1;
  3767  0D91  3001               	movlw	1
  3768  0D92  0021               	movlb	1	; select bank1
  3769  0D93  00ED               	movwf	??_main^(0+128)
  3770  0D94  086D               	movf	??_main^(0+128),w
  3771  0D95  0022               	movlb	2	; select bank2
  3772  0D96  00D5               	movwf	_onesecf^(0+256)	;volatile
  3773                           
  3774                           ;main.c: 936: txonf=1;
  3775  0D97  3001               	movlw	1
  3776  0D98  0021               	movlb	1	; select bank1
  3777  0D99  00ED               	movwf	??_main^(0+128)
  3778  0D9A  086D               	movf	??_main^(0+128),w
  3779  0D9B  0023               	movlb	3	; select bank3
  3780  0D9C  00D5               	movwf	_txonf^(0+384)	;volatile
  3781                           
  3782                           ;main.c: 937: prevsetvoltage=setvoltage;
  3783  0D9D  0020               	movlb	0	; select bank0
  3784  0D9E  085B               	movf	_setvoltage+1,w
  3785  0D9F  0023               	movlb	3	; select bank3
  3786  0DA0  00BF               	movwf	(_prevsetvoltage+1)^(0+384)
  3787  0DA1  0020               	movlb	0	; select bank0
  3788  0DA2  085A               	movf	_setvoltage,w
  3789  0DA3  0023               	movlb	3	; select bank3
  3790  0DA4  00BE               	movwf	_prevsetvoltage^(0+384)
  3791  0DA5                     l5931:	
  3792                           
  3793                           ;main.c: 938: }
  3794                           ;main.c: 939: }
  3795                           ;main.c: 941: if(psstatusu.psstatuss.gasoncommand==1)
  3796  0DA5  0020               	movlb	0	; select bank0
  3797  0DA6  1CEC               	btfss	_psstatusu,1
  3798  0DA7  2DAA               	goto	l755
  3799                           
  3800                           ;main.c: 942: {
  3801                           ;main.c: 943: PORTCbits.RC3 =1;
  3802  0DA8  158E               	bsf	14,3	;volatile
  3803                           
  3804                           ;main.c: 944: }
  3805  0DA9  2DAB               	goto	l756
  3806  0DAA                     l755:	
  3807                           
  3808                           ;main.c: 945: else
  3809                           ;main.c: 946: {
  3810                           ;main.c: 947: PORTCbits.RC3 =0;
  3811  0DAA  118E               	bcf	14,3	;volatile
  3812  0DAB                     l756:	
  3813                           
  3814                           ;main.c: 948: }
  3815                           ;main.c: 949: if(psstatusu.psstatuss.motoroncommand==1)
  3816  0DAB  1DEC               	btfss	_psstatusu,3
  3817  0DAC  2F9D               	goto	l757
  3818                           
  3819                           ;main.c: 950: {
  3820                           ;main.c: 951: if(psstatusu.psstatuss.creepspeedon==1)
  3821  0DAD  1EEC               	btfss	_psstatusu,5
  3822  0DAE  2E42               	goto	l758
  3823                           
  3824                           ;main.c: 952: {
  3825                           ;main.c: 953: cyclestrtf=0;
  3826  0DAF  0022               	movlb	2	; select bank2
  3827  0DB0  01C5               	clrf	_cyclestrtf^(0+256)
  3828                           
  3829                           ;main.c: 956: newsetwirespeed=setwirespeed*creep_speed*0.01;
  3830  0DB1  0020               	movlb	0	; select bank0
  3831  0DB2  085D               	movf	_setwirespeed+1,w
  3832  0DB3  0021               	movlb	1	; select bank1
  3833  0DB4  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  3834  0DB5  0020               	movlb	0	; select bank0
  3835  0DB6  085C               	movf	_setwirespeed,w
  3836  0DB7  0021               	movlb	1	; select bank1
  3837  0DB8  00A2               	movwf	___wmul@multiplicand^(0+128)
  3838  0DB9  0022               	movlb	2	; select bank2
  3839  0DBA  0844               	movf	_creep_speed^(0+256),w	;volatile
  3840  0DBB  0021               	movlb	1	; select bank1
  3841  0DBC  00ED               	movwf	??_main^(0+128)
  3842  0DBD  01EE               	clrf	(??_main^(0+128)+1)
  3843  0DBE  086D               	movf	??_main^(0+128),w
  3844  0DBF  00A0               	movwf	___wmul@multiplier^(0+128)
  3845  0DC0  086E               	movf	(??_main+1)^(0+128),w
  3846  0DC1  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  3847  0DC2  3198  2092  3188   	fcall	___wmul
  3848  0DC5  0021               	movlb	1	; select bank1
  3849  0DC6  0821               	movf	(?___wmul+1)^(0+128),w
  3850  0DC7  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  3851  0DC8  0820               	movf	?___wmul^(0+128),w
  3852  0DC9  00A8               	movwf	___lwtoft@c^(0+128)
  3853  0DCA  3198  2008  3188   	fcall	___lwtoft
  3854  0DCD  0021               	movlb	1	; select bank1
  3855  0DCE  0828               	movf	?___lwtoft^(0+128),w
  3856  0DCF  00B8               	movwf	___ftmul@f2^(0+128)
  3857  0DD0  0829               	movf	(?___lwtoft+1)^(0+128),w
  3858  0DD1  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3859  0DD2  082A               	movf	(?___lwtoft+2)^(0+128),w
  3860  0DD3  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3861  0DD4  30D7               	movlw	215
  3862  0DD5  00B5               	movwf	___ftmul@f1^(0+128)
  3863  0DD6  3023               	movlw	35
  3864  0DD7  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3865  0DD8  303C               	movlw	60
  3866  0DD9  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3867  0DDA  3187  2717  3188   	fcall	___ftmul
  3868  0DDD  0021               	movlb	1	; select bank1
  3869  0DDE  0835               	movf	?___ftmul^(0+128),w
  3870  0DDF  00C5               	movwf	___fttol@f1^(0+128)
  3871  0DE0  0836               	movf	(?___ftmul+1)^(0+128),w
  3872  0DE1  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3873  0DE2  0837               	movf	(?___ftmul+2)^(0+128),w
  3874  0DE3  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3875  0DE4  319E  26D0  3188   	fcall	___fttol
  3876  0DE7  0021               	movlb	1	; select bank1
  3877  0DE8  0846               	movf	(?___fttol^(0+128)+1),w
  3878  0DE9  0020               	movlb	0	; select bank0
  3879  0DEA  00E8               	movwf	_newsetwirespeed+1
  3880  0DEB  0021               	movlb	1	; select bank1
  3881  0DEC  0845               	movf	?___fttol^(0+128),w
  3882  0DED  0020               	movlb	0	; select bank0
  3883  0DEE  00E7               	movwf	_newsetwirespeed
  3884                           
  3885                           ;main.c: 958: if(newsetwirespeed<=10)
  3886  0DEF  3000               	movlw	0
  3887  0DF0  0268               	subwf	_newsetwirespeed+1,w
  3888  0DF1  300B               	movlw	11
  3889  0DF2  1903               	skipnz
  3890  0DF3  0267               	subwf	_newsetwirespeed,w
  3891  0DF4  1803               	skipnc
  3892  0DF5  2DFA               	goto	l5945
  3893                           
  3894                           ;main.c: 959: newsetwirespeed=10;
  3895  0DF6  300A               	movlw	10
  3896  0DF7  00E7               	movwf	_newsetwirespeed
  3897  0DF8  3000               	movlw	0
  3898  0DF9  00E8               	movwf	_newsetwirespeed+1
  3899  0DFA                     l5945:	
  3900                           
  3901                           ;main.c: 963: Update_PWM(speeedrate*4);
  3902  0DFA  0023               	movlb	3	; select bank3
  3903  0DFB  086B               	movf	(_speeedrate+1)^(0+384),w
  3904  0DFC  0021               	movlb	1	; select bank1
  3905  0DFD  00EE               	movwf	(??_main^(0+128)+1)
  3906  0DFE  0023               	movlb	3	; select bank3
  3907  0DFF  086A               	movf	_speeedrate^(0+384),w
  3908  0E00  0021               	movlb	1	; select bank1
  3909  0E01  00ED               	movwf	??_main^(0+128)
  3910  0E02  35ED               	lslf	??_main^(0+128),f
  3911  0E03  0DEE               	rlf	(??_main^(0+128)+1),f
  3912  0E04  35ED               	lslf	??_main^(0+128),f
  3913  0E05  0DEE               	rlf	(??_main^(0+128)+1),f
  3914  0E06  086D               	movf	??_main^(0+128),w
  3915  0E07  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  3916  0E08  086E               	movf	(??_main+1)^(0+128),w
  3917  0E09  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  3918  0E0A  3198  20FB  3188   	fcall	_Update_PWM
  3919                           
  3920                           ;main.c: 965: if(speeedrate < newsetwirespeed)
  3921  0E0D  0020               	movlb	0	; select bank0
  3922  0E0E  0868               	movf	_newsetwirespeed+1,w
  3923  0E0F  0023               	movlb	3	; select bank3
  3924  0E10  026B               	subwf	(_speeedrate+1)^(0+384),w
  3925  0E11  1D03               	skipz
  3926  0E12  2E17               	goto	u8925
  3927  0E13  0020               	movlb	0	; select bank0
  3928  0E14  0867               	movf	_newsetwirespeed,w
  3929  0E15  0023               	movlb	3	; select bank3
  3930  0E16  026A               	subwf	_speeedrate^(0+384),w
  3931  0E17                     u8925:	
  3932  0E17  1803               	skipnc
  3933  0E18  2EE2               	goto	l5999
  3934                           
  3935                           ;main.c: 966: {
  3936                           ;main.c: 967: speeedrate=speeedrate+4;
  3937  0E19  086A               	movf	_speeedrate^(0+384),w
  3938  0E1A  3E04               	addlw	4
  3939  0E1B  00EA               	movwf	_speeedrate^(0+384)
  3940  0E1C  3000               	movlw	0
  3941  0E1D  3D6B               	addwfc	(_speeedrate+1)^(0+384),w
  3942  0E1E  00EB               	movwf	(_speeedrate+1)^(0+384)
  3943                           
  3944                           ;main.c: 968: for(delinch1=0;delinch1<3;delinch1++)
  3945  0E1F  0022               	movlb	2	; select bank2
  3946  0E20  01A4               	clrf	_delinch1^(0+256)
  3947  0E21  01A5               	clrf	(_delinch1+1)^(0+256)
  3948  0E22                     L8:	
  3949  0E22  3000               	movlw	0
  3950  0E23  0225               	subwf	(_delinch1+1)^(0+256),w
  3951  0E24  3003               	movlw	3
  3952  0E25  1903               	skipnz
  3953  0E26  0224               	subwf	_delinch1^(0+256),w
  3954  0E27  1803               	btfsc	3,0
  3955  0E28  2EE2               	goto	l5999
  3956                           
  3957                           ;main.c: 969: for(delinch=0;delinch<30000;delinch++);
  3958  0E29  01A2               	clrf	_delinch^(0+256)
  3959  0E2A  01A3               	clrf	(_delinch+1)^(0+256)
  3960  0E2B  3075               	movlw	117
  3961  0E2C  0223               	subwf	(_delinch+1)^(0+256),w
  3962  0E2D  3030               	movlw	48
  3963  0E2E  1903               	skipnz
  3964  0E2F  0222               	subwf	_delinch^(0+256),w
  3965  0E30  1803               	btfsc	3,0
  3966  0E31  2E3D               	goto	l5965
  3967  0E32                     l5963:	
  3968  0E32  3001               	movlw	1
  3969  0E33  07A2               	addwf	_delinch^(0+256),f
  3970  0E34  3000               	movlw	0
  3971  0E35  3DA3               	addwfc	(_delinch+1)^(0+256),f
  3972  0E36  3075               	movlw	117
  3973  0E37  0223               	subwf	(_delinch+1)^(0+256),w
  3974  0E38  3030               	movlw	48
  3975  0E39  1903               	skipnz
  3976  0E3A  0222               	subwf	_delinch^(0+256),w
  3977  0E3B  1C03               	skipc
  3978  0E3C  2E32               	goto	l5963
  3979  0E3D                     l5965:	
  3980  0E3D  3001               	movlw	1
  3981  0E3E  07A4               	addwf	_delinch1^(0+256),f
  3982  0E3F  3000               	movlw	0
  3983  0E40  3DA5               	addwfc	(_delinch1+1)^(0+256),f
  3984  0E41  2E22               	goto	L8
  3985  0E42                     l758:	
  3986                           ;main.c: 970: }
  3987                           ;main.c: 975: }
  3988                           
  3989                           
  3990                           ;main.c: 976: else if(psstatusu.psstatuss.creepspeedon==0)
  3991  0E42  1AEC               	btfsc	_psstatusu,5
  3992  0E43  2EE2               	goto	l5999
  3993                           
  3994                           ;main.c: 977: {
  3995                           ;main.c: 978: cyclestrtf=1;
  3996  0E44  0022               	movlb	2	; select bank2
  3997  0E45  01C5               	clrf	_cyclestrtf^(0+256)
  3998  0E46  0AC5               	incf	_cyclestrtf^(0+256),f
  3999                           
  4000                           ;main.c: 979: if(cMtrOverLdfg == 0)
  4001  0E47  083B               	movf	_cMtrOverLdfg^(0+256),w
  4002  0E48  1D03               	btfss	3,2
  4003  0E49  2E50               	goto	l5973
  4004                           
  4005                           ;main.c: 980: {
  4006                           ;main.c: 981: newsetwirespeed=setwirespeed;
  4007  0E4A  0020               	movlb	0	; select bank0
  4008  0E4B  085D               	movf	_setwirespeed+1,w
  4009  0E4C  00E8               	movwf	_newsetwirespeed+1
  4010  0E4D  085C               	movf	_setwirespeed,w
  4011  0E4E  00E7               	movwf	_newsetwirespeed
  4012                           
  4013                           ;main.c: 982: }else
  4014  0E4F  2E53               	goto	l5975
  4015  0E50                     l5973:	
  4016                           
  4017                           ;main.c: 983: {
  4018                           ;main.c: 984: newsetwirespeed=0;
  4019  0E50  0020               	movlb	0	; select bank0
  4020  0E51  01E7               	clrf	_newsetwirespeed
  4021  0E52  01E8               	clrf	_newsetwirespeed+1
  4022  0E53                     l5975:	
  4023                           
  4024                           ;main.c: 985: }
  4025                           ;main.c: 986: if(closeloopf==0)
  4026  0E53  0022               	movlb	2	; select bank2
  4027  0E54  083F               	movf	_closeloopf^(0+256),w
  4028  0E55  1D03               	btfss	3,2
  4029  0E56  2EE2               	goto	l5999
  4030                           
  4031                           ;main.c: 987: {
  4032                           ;main.c: 988: Update_PWM(newsetwirespeed*3.4);
  4033  0E57  0020               	movlb	0	; select bank0
  4034  0E58  0868               	movf	_newsetwirespeed+1,w
  4035  0E59  0021               	movlb	1	; select bank1
  4036  0E5A  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  4037  0E5B  0020               	movlb	0	; select bank0
  4038  0E5C  0867               	movf	_newsetwirespeed,w
  4039  0E5D  0021               	movlb	1	; select bank1
  4040  0E5E  00A8               	movwf	___lwtoft@c^(0+128)
  4041  0E5F  3198  2008  3188   	fcall	___lwtoft
  4042  0E62  0021               	movlb	1	; select bank1
  4043  0E63  0828               	movf	?___lwtoft^(0+128),w
  4044  0E64  00B8               	movwf	___ftmul@f2^(0+128)
  4045  0E65  0829               	movf	(?___lwtoft+1)^(0+128),w
  4046  0E66  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4047  0E67  082A               	movf	(?___lwtoft+2)^(0+128),w
  4048  0E68  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4049  0E69  309A               	movlw	154
  4050  0E6A  00B5               	movwf	___ftmul@f1^(0+128)
  4051  0E6B  3059               	movlw	89
  4052  0E6C  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4053  0E6D  3040               	movlw	64
  4054  0E6E  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4055  0E6F  3187  2717  3188   	fcall	___ftmul
  4056  0E72  0021               	movlb	1	; select bank1
  4057  0E73  0835               	movf	?___ftmul^(0+128),w
  4058  0E74  00C5               	movwf	___fttol@f1^(0+128)
  4059  0E75  0836               	movf	(?___ftmul+1)^(0+128),w
  4060  0E76  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4061  0E77  0837               	movf	(?___ftmul+2)^(0+128),w
  4062  0E78  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4063  0E79  319E  26D0  3188   	fcall	___fttol
  4064  0E7C  0021               	movlb	1	; select bank1
  4065  0E7D  0846               	movf	(?___fttol^(0+128)+1),w
  4066  0E7E  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  4067  0E7F  0845               	movf	?___fttol^(0+128),w
  4068  0E80  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  4069  0E81  3198  20FB  3188   	fcall	_Update_PWM
  4070                           
  4071                           ;main.c: 989: if(wfspeedchangef==1)
  4072  0E84  0023               	movlb	3	; select bank3
  4073  0E85  036E               	decf	_wfspeedchangef^(0+384),w
  4074  0E86  1D03               	btfss	3,2
  4075  0E87  2EDF               	goto	l5997
  4076                           
  4077                           ;main.c: 990: {
  4078                           ;main.c: 992: integral_old=newsetwirespeed*scalefactor2*2.6;
  4079  0E88  3066               	movlw	102
  4080  0E89  0021               	movlb	1	; select bank1
  4081  0E8A  00B5               	movwf	___ftmul@f1^(0+128)
  4082  0E8B  3026               	movlw	38
  4083  0E8C  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4084  0E8D  3040               	movlw	64
  4085  0E8E  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4086  0E8F  0020               	movlb	0	; select bank0
  4087  0E90  0868               	movf	_newsetwirespeed+1,w
  4088  0E91  0021               	movlb	1	; select bank1
  4089  0E92  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  4090  0E93  0020               	movlb	0	; select bank0
  4091  0E94  0867               	movf	_newsetwirespeed,w
  4092  0E95  0021               	movlb	1	; select bank1
  4093  0E96  00A0               	movwf	___wmul@multiplier^(0+128)
  4094  0E97  0023               	movlb	3	; select bank3
  4095  0E98  0869               	movf	(_scalefactor2+1)^(0+384),w
  4096  0E99  0021               	movlb	1	; select bank1
  4097  0E9A  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  4098  0E9B  0023               	movlb	3	; select bank3
  4099  0E9C  0868               	movf	_scalefactor2^(0+384),w
  4100  0E9D  0021               	movlb	1	; select bank1
  4101  0E9E  00A2               	movwf	___wmul@multiplicand^(0+128)
  4102  0E9F  3198  2092  3188   	fcall	___wmul
  4103  0EA2  0021               	movlb	1	; select bank1
  4104  0EA3  0821               	movf	(?___wmul+1)^(0+128),w
  4105  0EA4  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  4106  0EA5  0820               	movf	?___wmul^(0+128),w
  4107  0EA6  00A8               	movwf	___lwtoft@c^(0+128)
  4108  0EA7  3198  2008  3188   	fcall	___lwtoft
  4109  0EAA  0021               	movlb	1	; select bank1
  4110  0EAB  0828               	movf	?___lwtoft^(0+128),w
  4111  0EAC  00B8               	movwf	___ftmul@f2^(0+128)
  4112  0EAD  0829               	movf	(?___lwtoft+1)^(0+128),w
  4113  0EAE  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4114  0EAF  082A               	movf	(?___lwtoft+2)^(0+128),w
  4115  0EB0  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4116  0EB1  3187  2717  3188   	fcall	___ftmul
  4117  0EB4  0021               	movlb	1	; select bank1
  4118  0EB5  0835               	movf	?___ftmul^(0+128),w
  4119  0EB6  0023               	movlb	3	; select bank3
  4120  0EB7  00A9               	movwf	_integral_old^(0+384)
  4121  0EB8  0021               	movlb	1	; select bank1
  4122  0EB9  0836               	movf	(?___ftmul+1)^(0+128),w
  4123  0EBA  0023               	movlb	3	; select bank3
  4124  0EBB  00AA               	movwf	(_integral_old+1)^(0+384)
  4125  0EBC  0021               	movlb	1	; select bank1
  4126  0EBD  0837               	movf	(?___ftmul+2)^(0+128),w
  4127  0EBE  0023               	movlb	3	; select bank3
  4128  0EBF  00AB               	movwf	(_integral_old+2)^(0+384)
  4129                           
  4130                           ;main.c: 993: wfspeedchangef=0;
  4131  0EC0  01EE               	clrf	_wfspeedchangef^(0+384)
  4132                           
  4133                           ;main.c: 994: integral_new =0;
  4134  0EC1  3000               	movlw	0
  4135  0EC2  00A6               	movwf	_integral_new^(0+384)
  4136  0EC3  3000               	movlw	0
  4137  0EC4  00A7               	movwf	(_integral_new+1)^(0+384)
  4138  0EC5  3000               	movlw	0
  4139  0EC6  00A8               	movwf	(_integral_new+2)^(0+384)
  4140                           
  4141                           ;main.c: 996: error_old =0;
  4142  0EC7  3000               	movlw	0
  4143  0EC8  00A3               	movwf	_error_old^(0+384)
  4144  0EC9  3000               	movlw	0
  4145  0ECA  00A4               	movwf	(_error_old+1)^(0+384)
  4146  0ECB  3000               	movlw	0
  4147  0ECC  00A5               	movwf	(_error_old+2)^(0+384)
  4148                           
  4149                           ;main.c: 997: error_new=0;
  4150  0ECD  3000               	movlw	0
  4151  0ECE  00A0               	movwf	_error_new^(0+384)
  4152  0ECF  3000               	movlw	0
  4153  0ED0  00A1               	movwf	(_error_new+1)^(0+384)
  4154  0ED1  3000               	movlw	0
  4155  0ED2  00A2               	movwf	(_error_new+2)^(0+384)
  4156                           
  4157                           ;main.c: 998: controller_out=0;
  4158  0ED3  3000               	movlw	0
  4159  0ED4  0024               	movlb	4	; select bank4
  4160  0ED5  00A4               	movwf	_controller_out^(0+512)
  4161  0ED6  3000               	movlw	0
  4162  0ED7  00A5               	movwf	(_controller_out+1)^(0+512)
  4163  0ED8  3000               	movlw	0
  4164  0ED9  00A6               	movwf	(_controller_out+2)^(0+512)
  4165                           
  4166                           ;main.c: 999: prevFltpfreq=0;
  4167  0EDA  01CA               	clrf	_prevFltpfreq^(0+512)
  4168  0EDB  01CB               	clrf	(_prevFltpfreq+1)^(0+512)
  4169                           
  4170                           ;main.c: 1000: Fltpfreq=0;
  4171  0EDC  0022               	movlb	2	; select bank2
  4172  0EDD  01A0               	clrf	_Fltpfreq^(0+256)
  4173  0EDE  01A1               	clrf	(_Fltpfreq+1)^(0+256)
  4174  0EDF                     l5997:	
  4175                           
  4176                           ;main.c: 1001: }
  4177                           ;main.c: 1002: closeloopf=1;
  4178  0EDF  0022               	movlb	2	; select bank2
  4179  0EE0  01BF               	clrf	_closeloopf^(0+256)
  4180  0EE1  0ABF               	incf	_closeloopf^(0+256),f
  4181  0EE2                     l5999:	
  4182                           
  4183                           ;main.c: 1003: }
  4184                           ;main.c: 1006: }
  4185                           ;main.c: 1008: if(psstatusu.psstatuss.craterspeedon==1 && wfstatusu.wfstatuss.twotfourtm
      +                          ode1==1)
  4186  0EE2  0020               	movlb	0	; select bank0
  4187  0EE3  1A6C               	btfsc	_psstatusu,4
  4188  0EE4  1C6D               	btfss	_wfstatusu,0
  4189  0EE5  2EF2               	goto	l771
  4190                           
  4191                           ;main.c: 1009: newsetwirespeed=crater_speed;
  4192  0EE6  0022               	movlb	2	; select bank2
  4193  0EE7  0843               	movf	_crater_speed^(0+256),w	;volatile
  4194  0EE8  0021               	movlb	1	; select bank1
  4195  0EE9  00ED               	movwf	??_main^(0+128)
  4196  0EEA  01EE               	clrf	(??_main^(0+128)+1)
  4197  0EEB  086D               	movf	??_main^(0+128),w
  4198  0EEC  0020               	movlb	0	; select bank0
  4199  0EED  00E7               	movwf	_newsetwirespeed
  4200  0EEE  0021               	movlb	1	; select bank1
  4201  0EEF  086E               	movf	(??_main+1)^(0+128),w
  4202  0EF0  0020               	movlb	0	; select bank0
  4203  0EF1  00E8               	movwf	_newsetwirespeed+1
  4204  0EF2                     l771:	
  4205                           
  4206                           ;main.c: 1011: if(newsetwirespeed >= 10)
  4207  0EF2  3000               	movlw	0
  4208  0EF3  0268               	subwf	_newsetwirespeed+1,w
  4209  0EF4  300A               	movlw	10
  4210  0EF5  1903               	skipnz
  4211  0EF6  0267               	subwf	_newsetwirespeed,w
  4212  0EF7  1C03               	skipc
  4213  0EF8  2F25               	goto	l6007
  4214                           
  4215                           ;main.c: 1012: setpfreq=(3.4*newsetwirespeed);
  4216  0EF9  0868               	movf	_newsetwirespeed+1,w
  4217  0EFA  0021               	movlb	1	; select bank1
  4218  0EFB  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  4219  0EFC  0020               	movlb	0	; select bank0
  4220  0EFD  0867               	movf	_newsetwirespeed,w
  4221  0EFE  0021               	movlb	1	; select bank1
  4222  0EFF  00A8               	movwf	___lwtoft@c^(0+128)
  4223  0F00  3198  2008  3188   	fcall	___lwtoft
  4224  0F03  0021               	movlb	1	; select bank1
  4225  0F04  0828               	movf	?___lwtoft^(0+128),w
  4226  0F05  00B8               	movwf	___ftmul@f2^(0+128)
  4227  0F06  0829               	movf	(?___lwtoft+1)^(0+128),w
  4228  0F07  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4229  0F08  082A               	movf	(?___lwtoft+2)^(0+128),w
  4230  0F09  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4231  0F0A  309A               	movlw	154
  4232  0F0B  00B5               	movwf	___ftmul@f1^(0+128)
  4233  0F0C  3059               	movlw	89
  4234  0F0D  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4235  0F0E  3040               	movlw	64
  4236  0F0F  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4237  0F10  3187  2717  3188   	fcall	___ftmul
  4238  0F13  0021               	movlb	1	; select bank1
  4239  0F14  0835               	movf	?___ftmul^(0+128),w
  4240  0F15  00C5               	movwf	___fttol@f1^(0+128)
  4241  0F16  0836               	movf	(?___ftmul+1)^(0+128),w
  4242  0F17  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4243  0F18  0837               	movf	(?___ftmul+2)^(0+128),w
  4244  0F19  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4245  0F1A  319E  26D0  3188   	fcall	___fttol
  4246  0F1D  0021               	movlb	1	; select bank1
  4247  0F1E  0846               	movf	(?___fttol^(0+128)+1),w
  4248  0F1F  0024               	movlb	4	; select bank4
  4249  0F20  00CD               	movwf	(_setpfreq+1)^(0+512)
  4250  0F21  0021               	movlb	1	; select bank1
  4251  0F22  0845               	movf	?___fttol^(0+128),w
  4252  0F23  0024               	movlb	4	; select bank4
  4253  0F24  00CC               	movwf	_setpfreq^(0+512)
  4254  0F25                     l6007:	
  4255                           
  4256                           ;main.c: 1013: if(cRelSpeedSign == '+')
  4257  0F25  302B               	movlw	43
  4258  0F26  0023               	movlb	3	; select bank3
  4259  0F27  0647               	xorwf	_cRelSpeedSign^(0+384),w
  4260  0F28  1D03               	btfss	3,2
  4261  0F29  2F35               	goto	l6011
  4262                           
  4263                           ;main.c: 1014: {
  4264                           ;main.c: 1015: Hi_setppwm=(newsetwirespeed+rel_wirespeed)*3.4;
  4265  0F2A  0844               	movf	_rel_wirespeed^(0+384),w
  4266  0F2B  0020               	movlb	0	; select bank0
  4267  0F2C  0767               	addwf	_newsetwirespeed,w
  4268  0F2D  0021               	movlb	1	; select bank1
  4269  0F2E  00A8               	movwf	___lwtoft@c^(0+128)
  4270  0F2F  0023               	movlb	3	; select bank3
  4271  0F30  0845               	movf	(_rel_wirespeed+1)^(0+384),w
  4272  0F31  0020               	movlb	0	; select bank0
  4273  0F32  3D68               	addwfc	_newsetwirespeed+1,w
  4274  0F33  0021               	movlb	1	; select bank1
  4275  0F34  2F49               	goto	L4
  4276  0F35                     l6011:	
  4277                           ;main.c: 1016: }
  4278                           
  4279                           
  4280                           ;main.c: 1017: else
  4281                           ;main.c: 1018: {
  4282                           ;main.c: 1019: Hi_setppwm=(newsetwirespeed-rel_wirespeed)*3.4;
  4283  0F35  0023               	movlb	3	; select bank3
  4284  0F36  0944               	comf	_rel_wirespeed^(0+384),w
  4285  0F37  0021               	movlb	1	; select bank1
  4286  0F38  00ED               	movwf	??_main^(0+128)
  4287  0F39  0023               	movlb	3	; select bank3
  4288  0F3A  0945               	comf	(_rel_wirespeed+1)^(0+384),w
  4289  0F3B  0021               	movlb	1	; select bank1
  4290  0F3C  00EE               	movwf	(??_main^(0+128)+1)
  4291  0F3D  0AED               	incf	??_main^(0+128),f
  4292  0F3E  1903               	skipnz
  4293  0F3F  0AEE               	incf	(??_main^(0+128)+1),f
  4294  0F40  0020               	movlb	0	; select bank0
  4295  0F41  0867               	movf	_newsetwirespeed,w
  4296  0F42  0021               	movlb	1	; select bank1
  4297  0F43  076D               	addwf	??_main^(0+128),w
  4298  0F44  00A8               	movwf	___lwtoft@c^(0+128)
  4299  0F45  0020               	movlb	0	; select bank0
  4300  0F46  0868               	movf	_newsetwirespeed+1,w
  4301  0F47  0021               	movlb	1	; select bank1
  4302  0F48  3D6E               	addwfc	(??_main+1)^(0+128),w
  4303  0F49                     L4:	
  4304  0F49  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  4305  0F4A  3198  2008  3188   	fcall	___lwtoft
  4306  0F4D  0021               	movlb	1	; select bank1
  4307  0F4E  0828               	movf	?___lwtoft^(0+128),w
  4308  0F4F  00B8               	movwf	___ftmul@f2^(0+128)
  4309  0F50  0829               	movf	(?___lwtoft+1)^(0+128),w
  4310  0F51  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4311  0F52  082A               	movf	(?___lwtoft+2)^(0+128),w
  4312  0F53  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4313  0F54  309A               	movlw	154
  4314  0F55  00B5               	movwf	___ftmul@f1^(0+128)
  4315  0F56  3059               	movlw	89
  4316  0F57  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4317  0F58  3040               	movlw	64
  4318  0F59  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4319  0F5A  3187  2717  3188   	fcall	___ftmul
  4320  0F5D  0021               	movlb	1	; select bank1
  4321  0F5E  0835               	movf	?___ftmul^(0+128),w
  4322  0F5F  00C5               	movwf	___fttol@f1^(0+128)
  4323  0F60  0836               	movf	(?___ftmul+1)^(0+128),w
  4324  0F61  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4325  0F62  0837               	movf	(?___ftmul+2)^(0+128),w
  4326  0F63  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4327  0F64  319E  26D0  3188   	fcall	___fttol
  4328  0F67  0021               	movlb	1	; select bank1
  4329  0F68  0846               	movf	(?___fttol^(0+128)+1),w
  4330  0F69  0024               	movlb	4	; select bank4
  4331  0F6A  00AB               	movwf	(_Hi_setppwm+1)^(0+512)
  4332  0F6B  0021               	movlb	1	; select bank1
  4333  0F6C  0845               	movf	?___fttol^(0+128),w
  4334  0F6D  0024               	movlb	4	; select bank4
  4335  0F6E  00AA               	movwf	_Hi_setppwm^(0+512)
  4336                           
  4337                           ;main.c: 1020: }
  4338                           ;main.c: 1022: Lo_setppwm=(newsetwirespeed)*3.4;
  4339  0F6F  0020               	movlb	0	; select bank0
  4340  0F70  0868               	movf	_newsetwirespeed+1,w
  4341  0F71  0021               	movlb	1	; select bank1
  4342  0F72  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  4343  0F73  0020               	movlb	0	; select bank0
  4344  0F74  0867               	movf	_newsetwirespeed,w
  4345  0F75  0021               	movlb	1	; select bank1
  4346  0F76  00A8               	movwf	___lwtoft@c^(0+128)
  4347  0F77  3198  2008  3188   	fcall	___lwtoft
  4348  0F7A  0021               	movlb	1	; select bank1
  4349  0F7B  0828               	movf	?___lwtoft^(0+128),w
  4350  0F7C  00B8               	movwf	___ftmul@f2^(0+128)
  4351  0F7D  0829               	movf	(?___lwtoft+1)^(0+128),w
  4352  0F7E  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4353  0F7F  082A               	movf	(?___lwtoft+2)^(0+128),w
  4354  0F80  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4355  0F81  309A               	movlw	154
  4356  0F82  00B5               	movwf	___ftmul@f1^(0+128)
  4357  0F83  3059               	movlw	89
  4358  0F84  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4359  0F85  3040               	movlw	64
  4360  0F86  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4361  0F87  3187  2717  3188   	fcall	___ftmul
  4362  0F8A  0021               	movlb	1	; select bank1
  4363  0F8B  0835               	movf	?___ftmul^(0+128),w
  4364  0F8C  00C5               	movwf	___fttol@f1^(0+128)
  4365  0F8D  0836               	movf	(?___ftmul+1)^(0+128),w
  4366  0F8E  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4367  0F8F  0837               	movf	(?___ftmul+2)^(0+128),w
  4368  0F90  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4369  0F91  319E  26D0  3188   	fcall	___fttol
  4370  0F94  0021               	movlb	1	; select bank1
  4371  0F95  0846               	movf	(?___fttol^(0+128)+1),w
  4372  0F96  0024               	movlb	4	; select bank4
  4373  0F97  00AD               	movwf	(_Lo_setppwm+1)^(0+512)
  4374  0F98  0021               	movlb	1	; select bank1
  4375  0F99  0845               	movf	?___fttol^(0+128),w
  4376  0F9A  0024               	movlb	4	; select bank4
  4377  0F9B  00AC               	movwf	_Lo_setppwm^(0+512)
  4378                           
  4379                           ;main.c: 1023: }
  4380  0F9C  2FC2               	goto	l6027
  4381  0F9D                     l757:	
  4382                           
  4383                           ;main.c: 1024: else if((psstatusu.psstatuss.motoroncommand!=1) || ((TORCH == 'X') && (wf
      +                          statusu.wfstatuss.twotfourtmode1 == 0)) )
  4384  0F9D  1DEC               	btfss	_psstatusu,3
  4385  0F9E  2FA4               	goto	l6017
  4386  0F9F  3058               	movlw	88
  4387  0FA0  066E               	xorwf	_TORCH,w
  4388  0FA1  1903               	btfsc	3,2
  4389  0FA2  186D               	btfsc	_wfstatusu,0
  4390  0FA3  2FC2               	goto	l6027
  4391  0FA4                     l6017:	
  4392                           
  4393                           ;main.c: 1025: {
  4394                           ;main.c: 1026: Update_PWM(setwirespeed*0);
  4395  0FA4  085D               	movf	_setwirespeed+1,w
  4396  0FA5  0021               	movlb	1	; select bank1
  4397  0FA6  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  4398  0FA7  0020               	movlb	0	; select bank0
  4399  0FA8  085C               	movf	_setwirespeed,w
  4400  0FA9  0021               	movlb	1	; select bank1
  4401  0FAA  00A0               	movwf	___wmul@multiplier^(0+128)
  4402  0FAB  3000               	movlw	0
  4403  0FAC  00A2               	movwf	___wmul@multiplicand^(0+128)
  4404  0FAD  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  4405  0FAE  3198  2092  3188   	fcall	___wmul
  4406  0FB1  0021               	movlb	1	; select bank1
  4407  0FB2  0821               	movf	(?___wmul+1)^(0+128),w
  4408  0FB3  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  4409  0FB4  0820               	movf	?___wmul^(0+128),w
  4410  0FB5  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  4411  0FB6  3198  20FB  3188   	fcall	_Update_PWM
  4412                           
  4413                           ;main.c: 1027: openloopcnt =0;
  4414  0FB9  0024               	movlb	4	; select bank4
  4415  0FBA  01C8               	clrf	_openloopcnt^(0+512)
  4416  0FBB  01C9               	clrf	(_openloopcnt+1)^(0+512)
  4417                           
  4418                           ;main.c: 1028: closeloopf =0;
  4419  0FBC  0022               	movlb	2	; select bank2
  4420  0FBD  01BF               	clrf	_closeloopf^(0+256)
  4421                           
  4422                           ;main.c: 1029: closeloop1f =0;
  4423  0FBE  0023               	movlb	3	; select bank3
  4424  0FBF  01CB               	clrf	_closeloop1f^(0+384)
  4425                           
  4426                           ;main.c: 1030: cyclestrtf=0;
  4427  0FC0  0022               	movlb	2	; select bank2
  4428  0FC1  01C5               	clrf	_cyclestrtf^(0+256)
  4429  0FC2                     l6027:	
  4430                           
  4431                           ;main.c: 1032: }
  4432                           ;main.c: 1033: TypeU.TypeS.wirespeed=0;
  4433  0FC2  0020               	movlb	0	; select bank0
  4434  0FC3  1065               	bcf	_TypeU,0
  4435                           
  4436                           ;main.c: 1034: TypeU.TypeS.amp=1;
  4437  0FC4  1466               	bsf	_TypeU+1,0
  4438                           
  4439                           ;main.c: 1035: TypeU.TypeS.thickness=0;
  4440  0FC5  10E5               	bcf	_TypeU,1
  4441                           
  4442                           ;main.c: 1036: TypeU.TypeS.arclength =0;
  4443  0FC6  1165               	bcf	_TypeU,2
  4444                           
  4445                           ;main.c: 1037: TypeU.TypeS.vtg =1;
  4446  0FC7  14E6               	bsf	_TypeU+1,1
  4447                           
  4448                           ;main.c: 1038: TypeU.TypeS.sec =0;
  4449  0FC8  1166               	bcf	_TypeU+1,2
  4450                           
  4451                           ;main.c: 1040: TypeDP.DPGROUP[0]=0x00;
  4452  0FC9  01EB               	clrf	_TypeDP
  4453                           
  4454                           ;main.c: 1041: TypeDP.TypeD.digitdp5 =1;
  4455  0FCA  166B               	bsf	_TypeDP,4
  4456                           
  4457                           ;main.c: 1042: disp_hex_window1(Actual_amp);
  4458  0FCB  0024               	movlb	4	; select bank4
  4459  0FCC  0866               	movf	(_Actual_amp+1)^(0+512),w
  4460  0FCD  0021               	movlb	1	; select bank1
  4461  0FCE  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  4462  0FCF  0024               	movlb	4	; select bank4
  4463  0FD0  0865               	movf	_Actual_amp^(0+512),w
  4464  0FD1  0021               	movlb	1	; select bank1
  4465  0FD2  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  4466  0FD3  3199  21CE  3188   	fcall	_disp_hex_window1
  4467                           
  4468                           ;main.c: 1043: disp_hex_window2(Actual_vtg);
  4469  0FD6  0024               	movlb	4	; select bank4
  4470  0FD7  0868               	movf	(_Actual_vtg+1)^(0+512),w
  4471  0FD8  0021               	movlb	1	; select bank1
  4472  0FD9  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  4473  0FDA  0024               	movlb	4	; select bank4
  4474  0FDB  0867               	movf	_Actual_vtg^(0+512),w
  4475  0FDC  0021               	movlb	1	; select bank1
  4476  0FDD  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  4477  0FDE  319A  227B  3188   	fcall	_disp_hex_window2
  4478                           
  4479                           ;main.c: 1044: dispupdatef =1;
  4480  0FE1  3001               	movlw	1
  4481  0FE2  0021               	movlb	1	; select bank1
  4482  0FE3  00ED               	movwf	??_main^(0+128)
  4483  0FE4  086D               	movf	??_main^(0+128),w
  4484  0FE5  0020               	movlb	0	; select bank0
  4485  0FE6  00EF               	movwf	_dispupdatef	;volatile
  4486  0FE7                     l6049:	
  4487                           
  4488                           ;main.c: 1046: }
  4489                           ;main.c: 1047: }
  4490                           ;main.c: 1049: if(universal_error_latch==1)
  4491  0FE7  0022               	movlb	2	; select bank2
  4492  0FE8  0368               	decf	_universal_error_latch^(0+256),w	;volatile
  4493  0FE9  1D03               	btfss	3,2
  4494  0FEA  2FF3               	goto	l6055
  4495                           
  4496                           ;main.c: 1050: {
  4497                           ;main.c: 1051: dispupdatef=1;
  4498  0FEB  3001               	movlw	1
  4499  0FEC  0021               	movlb	1	; select bank1
  4500  0FED  00ED               	movwf	??_main^(0+128)
  4501  0FEE  086D               	movf	??_main^(0+128),w
  4502  0FEF  0020               	movlb	0	; select bank0
  4503  0FF0  00EF               	movwf	_dispupdatef	;volatile
  4504                           
  4505                           ;main.c: 1052: universal_error_latch=0;
  4506  0FF1  0022               	movlb	2	; select bank2
  4507  0FF2  01E8               	clrf	_universal_error_latch^(0+256)	;volatile
  4508  0FF3                     l6055:	
  4509                           
  4510                           ;main.c: 1053: }
  4511                           ;main.c: 1054: if(( (weldmode=='P') || (weldmode=='G') ))
  4512  0FF3  3050               	movlw	80
  4513  0FF4  0020               	movlb	0	; select bank0
  4514  0FF5  0664               	xorwf	_weldmode,w	;volatile
  4515  0FF6  1903               	btfsc	3,2
  4516  0FF7  2FFC               	goto	l6059
  4517  0FF8  3047               	movlw	71
  4518  0FF9  0664               	xorwf	_weldmode,w	;volatile
  4519  0FFA  1D03               	btfss	3,2
  4520  0FFB  294E               	goto	l5573
  4521  0FFC                     l6059:	
  4522                           
  4523                           ;main.c: 1055: detect_display_error();
  4524  0FFC  3188  2006  3188   	fcall	_detect_display_error
  4525  0FFF  294E               	goto	l5573
  4526  1000                     __end_of_main:	
  4527                           
  4528                           	psect	text1
  4529  27ED                     __ptext1:	
  4530 ;; *************** function _uart_init *****************
  4531 ;; Defined at:
  4532 ;;		line 1281 in file "main.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;		None               void
  4539 ;; Registers used:
  4540 ;;		wreg
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4550 ;;Total ram usage:        0 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    3
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_main
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           
  4561                           ;psect for function _uart_init
  4562  27ED                     _uart_init:	
  4563                           
  4564                           ;main.c: 1283: RCSTAbits.SPEN=1;
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _uart_init: [wreg]
  4568  27ED  0023               	movlb	3	; select bank3
  4569  27EE  179D               	bsf	29,7	;volatile
  4570                           
  4571                           ;main.c: 1284: TRISCbits.TRISC6=0;
  4572  27EF  0021               	movlb	1	; select bank1
  4573  27F0  130E               	bcf	14,6	;volatile
  4574                           
  4575                           ;main.c: 1285: TRISCbits.TRISC7=1;
  4576  27F1  178E               	bsf	14,7	;volatile
  4577                           
  4578                           ;main.c: 1286: TXSTAbits.BRGH=0;
  4579  27F2  0023               	movlb	3	; select bank3
  4580  27F3  111E               	bcf	30,2	;volatile
  4581                           
  4582                           ;main.c: 1287: BAUDCTLbits.BRG16=0;
  4583  27F4  119F               	bcf	31,3	;volatile
  4584                           
  4585                           ;main.c: 1288: TXSTAbits.SYNC=0;
  4586  27F5  121E               	bcf	30,4	;volatile
  4587                           
  4588                           ;main.c: 1289: SPBRG=51;
  4589  27F6  3033               	movlw	51
  4590  27F7  009B               	movwf	27	;volatile
  4591                           
  4592                           ;main.c: 1290: TXSTA=0x20;
  4593  27F8  3020               	movlw	32
  4594  27F9  009E               	movwf	30	;volatile
  4595                           
  4596                           ;main.c: 1291: TXSTAbits.TXEN=0;
  4597  27FA  129E               	bcf	30,5	;volatile
  4598                           
  4599                           ;main.c: 1292: RCSTAbits.CREN=0;
  4600  27FB  121D               	bcf	29,4	;volatile
  4601                           
  4602                           ;main.c: 1293: PIE1bits.RCIE=0;
  4603  27FC  0021               	movlb	1	; select bank1
  4604  27FD  1291               	bcf	17,5	;volatile
  4605                           
  4606                           ;main.c: 1294: PIE1bits.TXIE=0;
  4607  27FE  1211               	bcf	17,4	;volatile
  4608  27FF  0008               	return
  4609  2800                     __end_of_uart_init:	
  4610                           
  4611                           	psect	text2
  4612  1B2C                     __ptext2:	
  4613 ;; *************** function _transmittops *****************
  4614 ;; Defined at:
  4615 ;;		line 1323 in file "main.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;		None               void
  4622 ;; Registers used:
  4623 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4631 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4632 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4633 ;;Total ram usage:        1 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    4
  4636 ;; This function calls:
  4637 ;;		_Send_Byte
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function _transmittops
  4645  1B2C                     _transmittops:	
  4646                           
  4647                           ;main.c: 1325: chksum=0;
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in _transmittops: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4651  1B2C  0022               	movlb	2	; select bank2
  4652  1B2D  01BE               	clrf	_chksum^(0+256)
  4653                           
  4654                           ;main.c: 1326: pstowfstru.pstowfstrs.psstatusbyte=0xBB;
  4655  1B2E  30BB               	movlw	187
  4656  1B2F  0021               	movlb	1	; select bank1
  4657  1B30  00A1               	movwf	??_transmittops^(0+128)
  4658  1B31  0821               	movf	??_transmittops^(0+128),w
  4659  1B32  0024               	movlb	4	; select bank4
  4660  1B33  00DA               	movwf	(_pstowfstru^(0+512)+12)
  4661                           
  4662                           ;main.c: 1328: if(cWf2t4tmodefg == 1)
  4663  1B34  0023               	movlb	3	; select bank3
  4664  1B35  0349               	decf	_cWf2t4tmodefg^(0+384),w
  4665  1B36  1D03               	btfss	3,2
  4666  1B37  2B3B               	goto	l847
  4667                           
  4668                           ;main.c: 1329: {
  4669                           ;main.c: 1330: wfstatusu.wfstatuss.twotfourtmode1 = 1;
  4670  1B38  0020               	movlb	0	; select bank0
  4671  1B39  146D               	bsf	_wfstatusu,0
  4672                           
  4673                           ;main.c: 1331: }
  4674  1B3A  2B3D               	goto	l4667
  4675  1B3B                     l847:	
  4676                           
  4677                           ;main.c: 1332: else
  4678                           ;main.c: 1333: {
  4679                           ;main.c: 1334: wfstatusu.wfstatuss.twotfourtmode1 = 0;
  4680  1B3B  0020               	movlb	0	; select bank0
  4681  1B3C  106D               	bcf	_wfstatusu,0
  4682  1B3D                     l4667:	
  4683                           
  4684                           ;main.c: 1335: }
  4685                           ;main.c: 1336: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4686  1B3D  086D               	movf	_wfstatusu,w
  4687  1B3E  0021               	movlb	1	; select bank1
  4688  1B3F  00A1               	movwf	??_transmittops^(0+128)
  4689  1B40  0821               	movf	??_transmittops^(0+128),w
  4690  1B41  0024               	movlb	4	; select bank4
  4691  1B42  00DB               	movwf	(_pstowfstru^(0+512)+13)
  4692                           
  4693                           ;main.c: 1345: Tx_ptr=0;
  4694  1B43  0023               	movlb	3	; select bank3
  4695  1B44  01C6               	clrf	_Tx_ptr^(0+384)
  4696                           
  4697                           ;main.c: 1346: Send_Byte('@');
  4698  1B45  3040               	movlw	64
  4699  1B46  31A7  2798  319B   	fcall	_Send_Byte
  4700                           
  4701                           ;main.c: 1347: if(cMtrOverLdfg == 1)
  4702  1B49  0022               	movlb	2	; select bank2
  4703  1B4A  033B               	decf	_cMtrOverLdfg^(0+256),w
  4704  1B4B  1D03               	btfss	3,2
  4705  1B4C  2B53               	goto	l4677
  4706                           
  4707                           ;main.c: 1348: {
  4708                           ;main.c: 1349: pstowfstru.pstransarr[16] = 0x10;
  4709  1B4D  3010               	movlw	16
  4710  1B4E  0021               	movlb	1	; select bank1
  4711  1B4F  00A1               	movwf	??_transmittops^(0+128)
  4712  1B50  0821               	movf	??_transmittops^(0+128),w
  4713  1B51  0024               	movlb	4	; select bank4
  4714  1B52  00DE               	movwf	(_pstowfstru^(0+512)+16)
  4715  1B53                     l4677:	
  4716                           
  4717                           ;main.c: 1350: }
  4718                           ;main.c: 1351: for(lmn=0;lmn<=22;lmn++)
  4719  1B53  0022               	movlb	2	; select bank2
  4720  1B54  01A8               	clrf	_lmn^(0+256)
  4721  1B55  01A9               	clrf	(_lmn+1)^(0+256)
  4722  1B56  3000               	movlw	0
  4723  1B57  0229               	subwf	(_lmn+1)^(0+256),w
  4724  1B58  3017               	movlw	23
  4725  1B59  1903               	skipnz
  4726  1B5A  0228               	subwf	_lmn^(0+256),w
  4727  1B5B  1803               	btfsc	3,0
  4728  1B5C  2B7E               	goto	l4691
  4729  1B5D                     l4683:	
  4730                           
  4731                           ;main.c: 1352: {
  4732                           ;main.c: 1353: chksum=chksum+pstowfstru.pstransarr[lmn];
  4733  1B5D  0828               	movf	_lmn^(0+256),w
  4734  1B5E  3E4E               	addlw	(low (_pstowfstru| (0+512)))& (0+255)
  4735  1B5F  0086               	movwf	6
  4736  1B60  3002               	movlw	2	; select bank4/5
  4737  1B61  0087               	movwf	7
  4738  1B62  0801               	movf	1,w
  4739  1B63  073E               	addwf	_chksum^(0+256),w
  4740  1B64  0021               	movlb	1	; select bank1
  4741  1B65  00A1               	movwf	??_transmittops^(0+128)
  4742  1B66  0821               	movf	??_transmittops^(0+128),w
  4743  1B67  0022               	movlb	2	; select bank2
  4744  1B68  00BE               	movwf	_chksum^(0+256)
  4745                           
  4746                           ;main.c: 1354: Send_Byte(pstowfstru.pstransarr[lmn]);
  4747  1B69  0828               	movf	_lmn^(0+256),w
  4748  1B6A  3E4E               	addlw	(low (_pstowfstru| (0+512)))& (0+255)
  4749  1B6B  0086               	movwf	6
  4750  1B6C  3002               	movlw	2	; select bank4/5
  4751  1B6D  0087               	movwf	7
  4752  1B6E  0801               	movf	1,w
  4753  1B6F  31A7  2798  319B   	fcall	_Send_Byte
  4754  1B72  3001               	movlw	1
  4755  1B73  0022               	movlb	2	; select bank2
  4756  1B74  07A8               	addwf	_lmn^(0+256),f
  4757  1B75  3000               	movlw	0
  4758  1B76  3DA9               	addwfc	(_lmn+1)^(0+256),f
  4759  1B77  3000               	movlw	0
  4760  1B78  0229               	subwf	(_lmn+1)^(0+256),w
  4761  1B79  3017               	movlw	23
  4762  1B7A  1903               	skipnz
  4763  1B7B  0228               	subwf	_lmn^(0+256),w
  4764  1B7C  1C03               	skipc
  4765  1B7D  2B5D               	goto	l4683
  4766  1B7E                     l4691:	
  4767                           
  4768                           ;main.c: 1355: }
  4769                           ;main.c: 1356: if(cEditfg == 1)
  4770  1B7E  0020               	movlb	0	; select bank0
  4771  1B7F  035E               	decf	_cEditfg,w
  4772  1B80  1D03               	btfss	3,2
  4773  1B81  2B84               	goto	l4695
  4774                           
  4775                           ;main.c: 1357: {
  4776                           ;main.c: 1358: Send_Byte('E');
  4777  1B82  3045               	movlw	69
  4778  1B83  2B85               	goto	L10
  4779  1B84                     l4695:	
  4780                           ;main.c: 1359: }
  4781                           
  4782                           
  4783                           ;main.c: 1360: else
  4784                           ;main.c: 1361: {
  4785                           ;main.c: 1362: Send_Byte('X');
  4786  1B84  3058               	movlw	88
  4787  1B85                     L10:	
  4788  1B85  31A7  2798  319B   	fcall	_Send_Byte
  4789                           
  4790                           ;main.c: 1363: }
  4791                           ;main.c: 1364: Send_Byte(chksum);
  4792  1B88  0022               	movlb	2	; select bank2
  4793  1B89  083E               	movf	_chksum^(0+256),w
  4794  1B8A  31A7  2798         	fcall	_Send_Byte
  4795  1B8C  0008               	return
  4796  1B8D                     __end_of_transmittops:	
  4797                           
  4798                           	psect	text3
  4799  27A2                     __ptext3:	
  4800 ;; *************** function _system_init *****************
  4801 ;; Defined at:
  4802 ;;		line 1187 in file "main.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;		None
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;		None
  4807 ;; Return value:  Size  Location     Type
  4808 ;;		None               void
  4809 ;; Registers used:
  4810 ;;		wreg, status,2, status,0
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4820 ;;Total ram usage:        0 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:    3
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_main
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           
  4831                           ;psect for function _system_init
  4832  27A2                     _system_init:	
  4833                           
  4834                           ;main.c: 1191: OSCCONbits.IRCF=14;
  4835                           
  4836                           ;incstack = 0
  4837                           ; Regs used in _system_init: [wreg+status,2+status,0]
  4838  27A2  0021               	movlb	1	; select bank1
  4839  27A3  0819               	movf	25,w	;volatile
  4840  27A4  3987               	andlw	-121
  4841  27A5  3870               	iorlw	112
  4842  27A6  0099               	movwf	25	;volatile
  4843                           
  4844                           ;main.c: 1193: OSCCONbits.SCS=0;
  4845  27A7  30FC               	movlw	-4
  4846  27A8  0599               	andwf	25,f	;volatile
  4847                           
  4848                           ;main.c: 1194: OSCTUNEbits.TUN=0;
  4849  27A9  30C0               	movlw	-64
  4850  27AA  0598               	andwf	24,f	;volatile
  4851  27AB  0008               	return
  4852  27AC                     __end_of_system_init:	
  4853                           
  4854                           	psect	text4
  4855  181D                     __ptext4:	
  4856 ;; *************** function _send_status *****************
  4857 ;; Defined at:
  4858 ;;		line 1367 in file "main.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;		None               void
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0, pclath, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4874 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4875 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4876 ;;Total ram usage:        1 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    4
  4879 ;; This function calls:
  4880 ;;		_Send_Byte
  4881 ;; This function is called by:
  4882 ;;		_main
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           
  4887                           ;psect for function _send_status
  4888  181D                     _send_status:	
  4889                           
  4890                           ;main.c: 1369: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4891                           
  4892                           ;incstack = 0
  4893                           ; Regs used in _send_status: [wreg+status,2+status,0+pclath+cstack]
  4894  181D  0020               	movlb	0	; select bank0
  4895  181E  086D               	movf	_wfstatusu,w
  4896  181F  0021               	movlb	1	; select bank1
  4897  1820  00A1               	movwf	??_send_status^(0+128)
  4898  1821  0821               	movf	??_send_status^(0+128),w
  4899  1822  0024               	movlb	4	; select bank4
  4900  1823  00DB               	movwf	(_pstowfstru^(0+512)+13)
  4901                           
  4902                           ;main.c: 1370: Send_Byte('#');
  4903  1824  3023               	movlw	35
  4904  1825  31A7  2798  3198   	fcall	_Send_Byte
  4905                           
  4906                           ;main.c: 1371: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4907  1828  0024               	movlb	4	; select bank4
  4908  1829  085B               	movf	(_pstowfstru^(0+512)+13),w
  4909  182A  31A7  2798  3198   	fcall	_Send_Byte
  4910                           
  4911                           ;main.c: 1372: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4912  182D  0024               	movlb	4	; select bank4
  4913  182E  085B               	movf	(_pstowfstru^(0+512)+13),w
  4914  182F  31A7  2798         	fcall	_Send_Byte
  4915  1831  0008               	return
  4916  1832                     __end_of_send_status:	
  4917                           
  4918                           	psect	text5
  4919  2798                     __ptext5:	
  4920 ;; *************** function _Send_Byte *****************
  4921 ;; Defined at:
  4922 ;;		line 1314 in file "main.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  transbyte       1    wreg     unsigned char 
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  transbyte       1    0[BANK1 ] unsigned char 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;		None               void
  4929 ;; Registers used:
  4930 ;;		wreg
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4937 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4939 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4940 ;;Total ram usage:        1 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    3
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_transmittops
  4947 ;;		_send_status
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           
  4952                           ;psect for function _Send_Byte
  4953  2798                     _Send_Byte:	
  4954                           
  4955                           ;incstack = 0
  4956                           ; Regs used in _Send_Byte: [wreg]
  4957                           ;Send_Byte@transbyte stored from wreg
  4958  2798  0021               	movlb	1	; select bank1
  4959  2799  00A0               	movwf	Send_Byte@transbyte^(0+128)
  4960  279A                     l841:	
  4961                           ;main.c: 1316: while(TXSTAbits.TRMT != 1);
  4962                           
  4963  279A  0023               	movlb	3	; select bank3
  4964  279B  1C9E               	btfss	30,1	;volatile
  4965  279C  2F9A               	goto	l841
  4966                           
  4967                           ;main.c: 1317: TXREG=transbyte;
  4968  279D  0021               	movlb	1	; select bank1
  4969  279E  0820               	movf	Send_Byte@transbyte^(0+128),w
  4970  279F  0023               	movlb	3	; select bank3
  4971  27A0  009A               	movwf	26	;volatile
  4972  27A1  0008               	return
  4973  27A2                     __end_of_Send_Byte:	
  4974                           
  4975                           	psect	text6
  4976  1832                     __ptext6:	
  4977 ;; *************** function _portpin_init *****************
  4978 ;; Defined at:
  4979 ;;		line 1197 in file "main.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;		None
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;		None               void
  4986 ;; Registers used:
  4987 ;;		wreg, status,2
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4997 ;;Total ram usage:        0 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    3
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_main
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           
  5008                           ;psect for function _portpin_init
  5009  1832                     _portpin_init:	
  5010                           
  5011                           ;main.c: 1199: TRISA=0x1F;
  5012                           
  5013                           ;incstack = 0
  5014                           ; Regs used in _portpin_init: [wreg+status,2]
  5015  1832  301F               	movlw	31
  5016  1833  0021               	movlb	1	; select bank1
  5017  1834  008C               	movwf	12	;volatile
  5018                           
  5019                           ;main.c: 1200: TRISB=0x00;
  5020  1835  018D               	clrf	13	;volatile
  5021                           
  5022                           ;main.c: 1201: TRISC=0x00;
  5023  1836  018E               	clrf	14	;volatile
  5024                           
  5025                           ;main.c: 1202: ANSELA=0X00;
  5026  1837  0023               	movlb	3	; select bank3
  5027  1838  018C               	clrf	12	;volatile
  5028                           
  5029                           ;main.c: 1203: ANSELB=0X00;
  5030  1839  018D               	clrf	13	;volatile
  5031                           
  5032                           ;main.c: 1206: PORTA=0X00;
  5033  183A  0020               	movlb	0	; select bank0
  5034  183B  018C               	clrf	12	;volatile
  5035                           
  5036                           ;main.c: 1207: PORTC=0X00;
  5037  183C  018E               	clrf	14	;volatile
  5038                           
  5039                           ;main.c: 1208: TRISAbits.TRISA1 =1;
  5040  183D  0021               	movlb	1	; select bank1
  5041  183E  148C               	bsf	12,1	;volatile
  5042                           
  5043                           ;main.c: 1209: TRISAbits.TRISA2 =1;
  5044  183F  150C               	bsf	12,2	;volatile
  5045                           
  5046                           ;main.c: 1210: TRISAbits.TRISA3 =1;
  5047  1840  158C               	bsf	12,3	;volatile
  5048                           
  5049                           ;main.c: 1211: TRISAbits.TRISA4 =1;
  5050  1841  160C               	bsf	12,4	;volatile
  5051                           
  5052                           ;main.c: 1212: TRISCbits.TRISC1 =1;
  5053  1842  148E               	bsf	14,1	;volatile
  5054                           
  5055                           ;main.c: 1213: TRISCbits.TRISC3=0;
  5056  1843  118E               	bcf	14,3	;volatile
  5057                           
  5058                           ;main.c: 1214: TRISAbits.TRISA5=1;
  5059  1844  168C               	bsf	12,5	;volatile
  5060                           
  5061                           ;main.c: 1215: TRISCbits.TRISC5=1;
  5062  1845  168E               	bsf	14,5	;volatile
  5063                           
  5064                           ;main.c: 1216: TRISAbits.TRISA0=0;
  5065  1846  100C               	bcf	12,0	;volatile
  5066  1847  0008               	return
  5067  1848                     __end_of_portpin_init:	
  5068                           
  5069                           	psect	text7
  5070  1355                     __ptext7:	
  5071 ;; *************** function _key_application *****************
  5072 ;; Defined at:
  5073 ;;		line 1059 in file "main.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;  keypress        1    wreg     unsigned char 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  keypress        1   61[BANK1 ] unsigned char 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;		None               void
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0, pclath, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5088 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5089 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5090 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5091 ;;Total ram usage:        3 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    5
  5094 ;; This function calls:
  5095 ;;		_Update_PWM
  5096 ;;		___wmul
  5097 ;;		_disp_hex_window2
  5098 ;; This function is called by:
  5099 ;;		_main
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           
  5104                           ;psect for function _key_application
  5105  1355                     _key_application:	
  5106                           
  5107                           ;incstack = 0
  5108                           ; Regs used in _key_application: [wreg+status,2+status,0+pclath+cstack]
  5109                           ;key_application@keypress stored from wreg
  5110  1355  0021               	movlb	1	; select bank1
  5111  1356  00DD               	movwf	key_application@keypress^(0+128)
  5112                           
  5113                           ;main.c: 1061: if(keypress==1)
  5114  1357  035D               	decf	key_application@keypress^(0+128),w
  5115  1358  1903               	btfsc	3,2
  5116  1359  2B8A               	goto	l4705
  5117  135A  2B9D               	goto	l4713
  5118  135B                     l790:	
  5119                           ;main.c: 1062: {
  5120                           ;main.c: 1063: while(key==1)
  5121                           
  5122                           
  5123                           ;main.c: 1064: {
  5124                           ;main.c: 1065: TypeU.TypeS.gason =1;
  5125  135B  0020               	movlb	0	; select bank0
  5126  135C  15E5               	bsf	_TypeU,3
  5127                           
  5128                           ;main.c: 1066: PORTCbits.RC3 =1;
  5129  135D  158E               	bsf	14,3	;volatile
  5130                           
  5131                           ;main.c: 1069: diswin1[0]= 0x11;
  5132  135E  3011               	movlw	17
  5133  135F  0021               	movlb	1	; select bank1
  5134  1360  00DB               	movwf	??_key_application^(0+128)
  5135  1361  085B               	movf	??_key_application^(0+128),w
  5136  1362  0023               	movlb	3	; select bank3
  5137  1363  00D9               	movwf	_diswin1^(0+384)
  5138                           
  5139                           ;main.c: 1070: diswin1[1]= 0x0B;
  5140  1364  300B               	movlw	11
  5141  1365  0021               	movlb	1	; select bank1
  5142  1366  00DB               	movwf	??_key_application^(0+128)
  5143  1367  085B               	movf	??_key_application^(0+128),w
  5144  1368  0023               	movlb	3	; select bank3
  5145  1369  00DA               	movwf	(_diswin1^(0+384)+1)
  5146                           
  5147                           ;main.c: 1071: diswin1[2]= 0x1D;
  5148  136A  301D               	movlw	29
  5149  136B  0021               	movlb	1	; select bank1
  5150  136C  00DB               	movwf	??_key_application^(0+128)
  5151  136D  085B               	movf	??_key_application^(0+128),w
  5152  136E  0023               	movlb	3	; select bank3
  5153  136F  00DB               	movwf	(_diswin1^(0+384)+2)
  5154                           
  5155                           ;main.c: 1073: diswin1[3]= 0x19;
  5156  1370  3019               	movlw	25
  5157  1371  0021               	movlb	1	; select bank1
  5158  1372  00DB               	movwf	??_key_application^(0+128)
  5159  1373  085B               	movf	??_key_application^(0+128),w
  5160  1374  0023               	movlb	3	; select bank3
  5161  1375  00DC               	movwf	(_diswin1^(0+384)+3)
  5162                           
  5163                           ;main.c: 1074: diswin1[4]= 0x18;
  5164  1376  3018               	movlw	24
  5165  1377  0021               	movlb	1	; select bank1
  5166  1378  00DB               	movwf	??_key_application^(0+128)
  5167  1379  085B               	movf	??_key_application^(0+128),w
  5168  137A  0023               	movlb	3	; select bank3
  5169  137B  00DD               	movwf	(_diswin1^(0+384)+4)
  5170                           
  5171                           ;main.c: 1075: diswin1[5]= 0x25;
  5172  137C  3025               	movlw	37
  5173  137D  0021               	movlb	1	; select bank1
  5174  137E  00DB               	movwf	??_key_application^(0+128)
  5175  137F  085B               	movf	??_key_application^(0+128),w
  5176  1380  0023               	movlb	3	; select bank3
  5177  1381  00DE               	movwf	(_diswin1^(0+384)+5)
  5178                           
  5179                           ;main.c: 1076: cGasRlyClrfg = 1;
  5180  1382  0022               	movlb	2	; select bank2
  5181  1383  01B9               	clrf	_cGasRlyClrfg^(0+256)
  5182  1384  0AB9               	incf	_cGasRlyClrfg^(0+256),f
  5183                           
  5184                           ;main.c: 1077: iGasDbCnt = 500;
  5185  1385  30F4               	movlw	244
  5186  1386  0023               	movlb	3	; select bank3
  5187  1387  00B4               	movwf	_iGasDbCnt^(0+384)
  5188  1388  3001               	movlw	1
  5189  1389  00B5               	movwf	(_iGasDbCnt^(0+384)+1)
  5190  138A                     l4705:	
  5191  138A  0021               	movlb	1	; select bank1
  5192  138B  036F               	decf	_key^(0+128),w	;volatile
  5193  138C  1903               	btfsc	3,2
  5194  138D  2B5B               	goto	l790
  5195                           
  5196                           ;main.c: 1079: }
  5197                           ;main.c: 1080: if(iGasDbCnt == 0)
  5198  138E  0023               	movlb	3	; select bank3
  5199  138F  0834               	movf	_iGasDbCnt^(0+384),w
  5200  1390  0435               	iorwf	(_iGasDbCnt+1)^(0+384),w
  5201  1391  1D03               	btfss	3,2
  5202  1392  0008               	return
  5203                           
  5204                           ;main.c: 1081: {
  5205                           ;main.c: 1082: TypeU.TypeS.gason =0;
  5206  1393  0020               	movlb	0	; select bank0
  5207  1394  11E5               	bcf	_TypeU,3
  5208                           
  5209                           ;main.c: 1083: PORTCbits.RC3 =0;
  5210  1395  118E               	bcf	14,3	;volatile
  5211                           
  5212                           ;main.c: 1084: dispupdatef =1;
  5213  1396  3001               	movlw	1
  5214  1397  0021               	movlb	1	; select bank1
  5215  1398  00DB               	movwf	??_key_application^(0+128)
  5216  1399  085B               	movf	??_key_application^(0+128),w
  5217  139A  0020               	movlb	0	; select bank0
  5218  139B  00EF               	movwf	_dispupdatef	;volatile
  5219                           
  5220                           ;main.c: 1085: }
  5221                           ;main.c: 1087: }
  5222  139C  0008               	return
  5223  139D                     l4713:	
  5224                           
  5225                           ;main.c: 1088: else if(keypress==2)
  5226  139D  3002               	movlw	2
  5227  139E  0021               	movlb	1	; select bank1
  5228  139F  065D               	xorwf	key_application@keypress^(0+128),w
  5229  13A0  1D03               	btfss	3,2
  5230  13A1  2C2B               	goto	l4751
  5231                           
  5232                           ;main.c: 1089: {
  5233                           ;main.c: 1090: inchcnt=10;
  5234  13A2  300A               	movlw	10
  5235  13A3  00DB               	movwf	??_key_application^(0+128)
  5236  13A4  085B               	movf	??_key_application^(0+128),w
  5237  13A5  0022               	movlb	2	; select bank2
  5238  13A6  00ED               	movwf	_inchcnt^(0+256)
  5239  13A7                     l4741:	
  5240                           ;main.c: 1091: while(key==2)
  5241                           
  5242  13A7  3002               	movlw	2
  5243  13A8  0021               	movlb	1	; select bank1
  5244  13A9  066F               	xorwf	_key^(0+128),w	;volatile
  5245  13AA  1D03               	btfss	3,2
  5246  13AB  2C0A               	goto	l4743
  5247                           
  5248                           ;main.c: 1092: {
  5249                           ;main.c: 1093: TypeU.TypeS.inch =1;
  5250  13AC  0020               	movlb	0	; select bank0
  5251  13AD  15E6               	bsf	_TypeU+1,3
  5252                           
  5253                           ;main.c: 1096: diswin1[0] =0x13;
  5254  13AE  3013               	movlw	19
  5255  13AF  0021               	movlb	1	; select bank1
  5256  13B0  00DB               	movwf	??_key_application^(0+128)
  5257  13B1  085B               	movf	??_key_application^(0+128),w
  5258  13B2  0023               	movlb	3	; select bank3
  5259  13B3  00D9               	movwf	_diswin1^(0+384)
  5260                           
  5261                           ;main.c: 1097: diswin1[1] =0x18;
  5262  13B4  3018               	movlw	24
  5263  13B5  0021               	movlb	1	; select bank1
  5264  13B6  00DB               	movwf	??_key_application^(0+128)
  5265  13B7  085B               	movf	??_key_application^(0+128),w
  5266  13B8  0023               	movlb	3	; select bank3
  5267  13B9  00DA               	movwf	(_diswin1^(0+384)+1)
  5268                           
  5269                           ;main.c: 1098: diswin1[2] =0x0D;
  5270  13BA  300D               	movlw	13
  5271  13BB  0021               	movlb	1	; select bank1
  5272  13BC  00DB               	movwf	??_key_application^(0+128)
  5273  13BD  085B               	movf	??_key_application^(0+128),w
  5274  13BE  0023               	movlb	3	; select bank3
  5275  13BF  00DB               	movwf	(_diswin1^(0+384)+2)
  5276                           
  5277                           ;main.c: 1099: Update_PWM(inchcnt*4);
  5278  13C0  0022               	movlb	2	; select bank2
  5279  13C1  086D               	movf	_inchcnt^(0+256),w
  5280  13C2  0021               	movlb	1	; select bank1
  5281  13C3  00DB               	movwf	??_key_application^(0+128)
  5282  13C4  01DC               	clrf	(??_key_application^(0+128)+1)
  5283  13C5  35DB               	lslf	??_key_application^(0+128),f
  5284  13C6  0DDC               	rlf	(??_key_application^(0+128)+1),f
  5285  13C7  35DB               	lslf	??_key_application^(0+128),f
  5286  13C8  0DDC               	rlf	(??_key_application^(0+128)+1),f
  5287  13C9  085B               	movf	??_key_application^(0+128),w
  5288  13CA  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  5289  13CB  085C               	movf	(??_key_application+1)^(0+128),w
  5290  13CC  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  5291  13CD  3198  20FB  3193   	fcall	_Update_PWM
  5292                           
  5293                           ;main.c: 1100: disp_hex_window2(inchcnt);
  5294  13D0  0022               	movlb	2	; select bank2
  5295  13D1  086D               	movf	_inchcnt^(0+256),w
  5296  13D2  0021               	movlb	1	; select bank1
  5297  13D3  00DB               	movwf	??_key_application^(0+128)
  5298  13D4  01DC               	clrf	(??_key_application^(0+128)+1)
  5299  13D5  085B               	movf	??_key_application^(0+128),w
  5300  13D6  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  5301  13D7  085C               	movf	(??_key_application+1)^(0+128),w
  5302  13D8  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  5303  13D9  319A  227B  3193   	fcall	_disp_hex_window2
  5304                           
  5305                           ;main.c: 1101: if(inchcnt<100)
  5306  13DC  3064               	movlw	100
  5307  13DD  0022               	movlb	2	; select bank2
  5308  13DE  026D               	subwf	_inchcnt^(0+256),w
  5309  13DF  1803               	skipnc
  5310  13E0  2BA7               	goto	l4741
  5311                           
  5312                           ;main.c: 1102: {
  5313                           ;main.c: 1103: inchcnt=inchcnt+10;
  5314  13E1  086D               	movf	_inchcnt^(0+256),w
  5315  13E2  3E0A               	addlw	10
  5316  13E3  0021               	movlb	1	; select bank1
  5317  13E4  00DB               	movwf	??_key_application^(0+128)
  5318  13E5  085B               	movf	??_key_application^(0+128),w
  5319  13E6  0022               	movlb	2	; select bank2
  5320  13E7  00ED               	movwf	_inchcnt^(0+256)
  5321                           
  5322                           ;main.c: 1104: for(delinch1=0;delinch1<5;delinch1++)
  5323  13E8  01A4               	clrf	_delinch1^(0+256)
  5324  13E9  01A5               	clrf	(_delinch1+1)^(0+256)
  5325  13EA                     L11:	
  5326  13EA  3000               	movlw	0
  5327  13EB  0225               	subwf	(_delinch1+1)^(0+256),w
  5328  13EC  3005               	movlw	5
  5329  13ED  1903               	skipnz
  5330  13EE  0224               	subwf	_delinch1^(0+256),w
  5331  13EF  1803               	btfsc	3,0
  5332  13F0  2BA7               	goto	l4741
  5333                           
  5334                           ;main.c: 1105: for(delinch=0;delinch<50000;delinch++);
  5335  13F1  01A2               	clrf	_delinch^(0+256)
  5336  13F2  01A3               	clrf	(_delinch+1)^(0+256)
  5337  13F3  30C3               	movlw	195
  5338  13F4  0223               	subwf	(_delinch+1)^(0+256),w
  5339  13F5  3050               	movlw	80
  5340  13F6  1903               	skipnz
  5341  13F7  0222               	subwf	_delinch^(0+256),w
  5342  13F8  1803               	btfsc	3,0
  5343  13F9  2C05               	goto	l4739
  5344  13FA                     l4737:	
  5345  13FA  3001               	movlw	1
  5346  13FB  07A2               	addwf	_delinch^(0+256),f
  5347  13FC  3000               	movlw	0
  5348  13FD  3DA3               	addwfc	(_delinch+1)^(0+256),f
  5349  13FE  30C3               	movlw	195
  5350  13FF  0223               	subwf	(_delinch+1)^(0+256),w
  5351  1400  3050               	movlw	80
  5352  1401  1903               	skipnz
  5353  1402  0222               	subwf	_delinch^(0+256),w
  5354  1403  1C03               	skipc
  5355  1404  2BFA               	goto	l4737
  5356  1405                     l4739:	
  5357  1405  3001               	movlw	1
  5358  1406  07A4               	addwf	_delinch1^(0+256),f
  5359  1407  3000               	movlw	0
  5360  1408  3DA5               	addwfc	(_delinch1+1)^(0+256),f
  5361  1409  2BEA               	goto	L11
  5362  140A                     l4743:	
  5363                           
  5364                           ;main.c: 1106: }
  5365                           ;main.c: 1107: }
  5366                           ;main.c: 1108: Update_PWM(inchcnt*0);
  5367  140A  0022               	movlb	2	; select bank2
  5368  140B  086D               	movf	_inchcnt^(0+256),w
  5369  140C  0021               	movlb	1	; select bank1
  5370  140D  00DB               	movwf	??_key_application^(0+128)
  5371  140E  01DC               	clrf	(??_key_application^(0+128)+1)
  5372  140F  085B               	movf	??_key_application^(0+128),w
  5373  1410  00A0               	movwf	___wmul@multiplier^(0+128)
  5374  1411  085C               	movf	(??_key_application+1)^(0+128),w
  5375  1412  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  5376  1413  3000               	movlw	0
  5377  1414  00A2               	movwf	___wmul@multiplicand^(0+128)
  5378  1415  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  5379  1416  3198  2092  3193   	fcall	___wmul
  5380  1419  0021               	movlb	1	; select bank1
  5381  141A  0821               	movf	(?___wmul+1)^(0+128),w
  5382  141B  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  5383  141C  0820               	movf	?___wmul^(0+128),w
  5384  141D  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  5385  141E  3198  20FB         	fcall	_Update_PWM
  5386                           
  5387                           ;main.c: 1109: TypeU.TypeS.inch =0;
  5388  1420  0020               	movlb	0	; select bank0
  5389  1421  11E6               	bcf	_TypeU+1,3
  5390                           
  5391                           ;main.c: 1111: inchkeyon =0;
  5392  1422  0023               	movlb	3	; select bank3
  5393  1423  01D1               	clrf	_inchkeyon^(0+384)
  5394                           
  5395                           ;main.c: 1112: dispupdatef =1;
  5396  1424  3001               	movlw	1
  5397  1425  0021               	movlb	1	; select bank1
  5398  1426  00DB               	movwf	??_key_application^(0+128)
  5399  1427  085B               	movf	??_key_application^(0+128),w
  5400  1428  0020               	movlb	0	; select bank0
  5401  1429  00EF               	movwf	_dispupdatef	;volatile
  5402                           
  5403                           ;main.c: 1113: }
  5404  142A  0008               	return
  5405  142B                     l4751:	
  5406                           
  5407                           ;main.c: 1114: else if(keypress==3)
  5408  142B  3003               	movlw	3
  5409  142C  0021               	movlb	1	; select bank1
  5410  142D  065D               	xorwf	key_application@keypress^(0+128),w
  5411  142E  1D03               	btfss	3,2
  5412  142F  2C45               	goto	l4763
  5413                           
  5414                           ;main.c: 1115: {
  5415                           ;main.c: 1119: if(TypeU.TypeS.twot==1)
  5416  1430  0020               	movlb	0	; select bank0
  5417  1431  1E65               	btfss	_TypeU,4
  5418  1432  2C3A               	goto	l805
  5419                           
  5420                           ;main.c: 1120: {
  5421                           ;main.c: 1121: TypeU.TypeS.twot=0;
  5422  1433  1265               	bcf	_TypeU,4
  5423                           
  5424                           ;main.c: 1122: TypeU.TypeS.fourt=1;
  5425  1434  16E5               	bsf	_TypeU,5
  5426                           
  5427                           ;main.c: 1123: wfstatusu.wfstatuss.twotfourtmode1=1;
  5428  1435  146D               	bsf	_wfstatusu,0
  5429                           
  5430                           ;main.c: 1124: cWf2t4tmodefg = 1;
  5431  1436  0023               	movlb	3	; select bank3
  5432  1437  01C9               	clrf	_cWf2t4tmodefg^(0+384)
  5433  1438  0AC9               	incf	_cWf2t4tmodefg^(0+384),f
  5434                           
  5435                           ;main.c: 1125: }
  5436  1439  2C41               	goto	l4761
  5437  143A                     l805:	
  5438                           
  5439                           ;main.c: 1126: else if(TypeU.TypeS.fourt==1)
  5440  143A  1EE5               	btfss	_TypeU,5
  5441  143B  2C41               	goto	l4761
  5442                           
  5443                           ;main.c: 1127: {
  5444                           ;main.c: 1128: TypeU.TypeS.fourt=0;
  5445  143C  12E5               	bcf	_TypeU,5
  5446                           
  5447                           ;main.c: 1129: TypeU.TypeS.twot =1;
  5448  143D  1665               	bsf	_TypeU,4
  5449                           
  5450                           ;main.c: 1130: wfstatusu.wfstatuss.twotfourtmode1=0;
  5451  143E  106D               	bcf	_wfstatusu,0
  5452                           
  5453                           ;main.c: 1131: cWf2t4tmodefg = 0;
  5454  143F  0023               	movlb	3	; select bank3
  5455  1440  01C9               	clrf	_cWf2t4tmodefg^(0+384)
  5456  1441                     l4761:	
  5457                           
  5458                           ;main.c: 1132: }
  5459                           ;main.c: 1133: cEditfg = 1;
  5460  1441  0020               	movlb	0	; select bank0
  5461  1442  01DE               	clrf	_cEditfg
  5462  1443  0ADE               	incf	_cEditfg,f
  5463                           
  5464                           ;main.c: 1134: }
  5465  1444  0008               	return
  5466  1445                     l4763:	
  5467                           
  5468                           ;main.c: 1135: else if(keypress==4)
  5469  1445  3004               	movlw	4
  5470  1446  0021               	movlb	1	; select bank1
  5471  1447  065D               	xorwf	key_application@keypress^(0+128),w
  5472  1448  1D03               	btfss	3,2
  5473  1449  2C67               	goto	l4791
  5474                           
  5475                           ;main.c: 1136: {
  5476                           ;main.c: 1138: if(TypeU.TypeS.wirespeed==1)
  5477  144A  0020               	movlb	0	; select bank0
  5478  144B  1C65               	btfss	_TypeU,0
  5479  144C  2C52               	goto	l810
  5480                           
  5481                           ;main.c: 1139: {
  5482                           ;main.c: 1142: TypeU.TypeS.wirespeed=0;
  5483  144D  1065               	bcf	_TypeU,0
  5484                           
  5485                           ;main.c: 1143: TypeU.TypeS.amp=1;
  5486  144E  1466               	bsf	_TypeU+1,0
  5487                           
  5488                           ;main.c: 1144: TypeU.TypeS.thickness=0;
  5489  144F  10E5               	bcf	_TypeU,1
  5490                           
  5491                           ;main.c: 1145: TypeDP.DPGROUP[0]=0x00;
  5492  1450  01EB               	clrf	_TypeDP
  5493  1451  2C5F               	goto	l4787
  5494  1452                     l810:	
  5495                           ;main.c: 1148: }
  5496                           
  5497                           ;main.c: 1146: TypeDP.TypeD.digitdp5 =1;
  5498                           
  5499                           
  5500                           ;main.c: 1149: else if(TypeU.TypeS.amp==1)
  5501  1452  1C66               	btfss	_TypeU+1,0
  5502  1453  2C58               	goto	l812
  5503                           
  5504                           ;main.c: 1150: {
  5505                           ;main.c: 1153: TypeU.TypeS.wirespeed=0;
  5506  1454  1065               	bcf	_TypeU,0
  5507                           
  5508                           ;main.c: 1154: TypeU.TypeS.amp=0;
  5509  1455  1066               	bcf	_TypeU+1,0
  5510                           
  5511                           ;main.c: 1155: TypeU.TypeS.thickness=1;
  5512  1456  14E5               	bsf	_TypeU,1
  5513  1457  2C5D               	goto	L12
  5514  1458                     l812:	
  5515                           ;main.c: 1160: }
  5516                           
  5517                           ;main.c: 1158: TypeDP.TypeD.digitdp5 =1;
  5518                           
  5519                           ;main.c: 1157: TypeDP.TypeD.digitdp2 =1;
  5520                           
  5521                           ;main.c: 1156: TypeDP.DPGROUP[0]=0x00;
  5522                           
  5523                           
  5524                           ;main.c: 1162: else if(TypeU.TypeS.thickness==1)
  5525  1458  1CE5               	btfss	_TypeU,1
  5526  1459  2C60               	goto	l4789
  5527                           
  5528                           ;main.c: 1163: {
  5529                           ;main.c: 1166: TypeU.TypeS.wirespeed=1;
  5530  145A  1465               	bsf	_TypeU,0
  5531                           
  5532                           ;main.c: 1167: TypeU.TypeS.amp=0;
  5533  145B  1066               	bcf	_TypeU+1,0
  5534                           
  5535                           ;main.c: 1168: TypeU.TypeS.thickness=0;
  5536  145C  10E5               	bcf	_TypeU,1
  5537  145D                     L12:	
  5538                           
  5539                           ;main.c: 1169: TypeDP.DPGROUP[0]=0x00;
  5540  145D  01EB               	clrf	_TypeDP
  5541                           
  5542                           ;main.c: 1170: TypeDP.TypeD.digitdp2 =1;
  5543  145E  14EB               	bsf	_TypeDP,1
  5544  145F                     l4787:	
  5545                           
  5546                           ;main.c: 1171: TypeDP.TypeD.digitdp5 =1;
  5547  145F  166B               	bsf	_TypeDP,4
  5548  1460                     l4789:	
  5549                           
  5550                           ;main.c: 1173: }
  5551                           ;main.c: 1175: dispupdatef =1;
  5552  1460  3001               	movlw	1
  5553  1461  0021               	movlb	1	; select bank1
  5554  1462  00DB               	movwf	??_key_application^(0+128)
  5555  1463  085B               	movf	??_key_application^(0+128),w
  5556  1464  0020               	movlb	0	; select bank0
  5557  1465  00EF               	movwf	_dispupdatef	;volatile
  5558                           
  5559                           ;main.c: 1176: }
  5560  1466  0008               	return
  5561  1467                     l4791:	
  5562                           
  5563                           ;main.c: 1177: else if(keypress==0)
  5564  1467  0021               	movlb	1	; select bank1
  5565  1468  085D               	movf	key_application@keypress^(0+128),w
  5566  1469  1D03               	btfss	3,2
  5567  146A  0008               	return
  5568                           
  5569                           ;main.c: 1178: {
  5570                           ;main.c: 1179: TypeU.TypeS.gason =0;
  5571  146B  0020               	movlb	0	; select bank0
  5572  146C  11E5               	bcf	_TypeU,3
  5573                           
  5574                           ;main.c: 1180: TypeU.TypeS.inch =0;
  5575  146D  11E6               	bcf	_TypeU+1,3
  5576                           
  5577                           ;main.c: 1184: inchkeyon =0;
  5578  146E  0023               	movlb	3	; select bank3
  5579  146F  01D1               	clrf	_inchkeyon^(0+384)
  5580  1470  0008               	return
  5581  1471                     __end_of_key_application:	
  5582                           
  5583                           	psect	text8
  5584  1A7B                     __ptext8:	
  5585 ;; *************** function _disp_hex_window2 *****************
  5586 ;; Defined at:
  5587 ;;		line 163 in file "DISPLAY.C"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  hex_data        2    8[BANK1 ] unsigned int 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;		None               void
  5594 ;; Registers used:
  5595 ;;		wreg, status,2, status,0, pclath, cstack
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5601 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5603 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5604 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5605 ;;Total ram usage:        3 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:    4
  5608 ;; This function calls:
  5609 ;;		___lwdiv
  5610 ;;		___lwmod
  5611 ;; This function is called by:
  5612 ;;		_main
  5613 ;;		_key_application
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           
  5618                           ;psect for function _disp_hex_window2
  5619  1A7B                     _disp_hex_window2:	
  5620                           
  5621                           ;DISPLAY.C: 165: diswin1[5]= hex_data % 10;
  5622                           
  5623                           ;incstack = 0
  5624                           ; Regs used in _disp_hex_window2: [wreg+status,2+status,0+pclath+cstack]
  5625  1A7B  300A               	movlw	10
  5626  1A7C  0021               	movlb	1	; select bank1
  5627  1A7D  00A0               	movwf	___lwmod@divisor^(0+128)
  5628  1A7E  3000               	movlw	0
  5629  1A7F  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5630  1A80  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5631  1A81  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  5632  1A82  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5633  1A83  00A2               	movwf	___lwmod@dividend^(0+128)
  5634  1A84  3199  2128  319A   	fcall	___lwmod
  5635  1A87  0021               	movlb	1	; select bank1
  5636  1A88  0820               	movf	?___lwmod^(0+128),w
  5637  1A89  00AA               	movwf	??_disp_hex_window2^(0+128)
  5638  1A8A  082A               	movf	??_disp_hex_window2^(0+128),w
  5639  1A8B  0023               	movlb	3	; select bank3
  5640  1A8C  00DE               	movwf	(_diswin1^(0+384)+5)
  5641                           
  5642                           ;DISPLAY.C: 166: hex_data /= 10;
  5643  1A8D  300A               	movlw	10
  5644  1A8E  0021               	movlb	1	; select bank1
  5645  1A8F  00A0               	movwf	___lwdiv@divisor^(0+128)
  5646  1A90  3000               	movlw	0
  5647  1A91  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5648  1A92  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5649  1A93  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  5650  1A94  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5651  1A95  00A2               	movwf	___lwdiv@dividend^(0+128)
  5652  1A96  3187  27CB  319A   	fcall	___lwdiv
  5653  1A99  0021               	movlb	1	; select bank1
  5654  1A9A  0821               	movf	(?___lwdiv+1)^(0+128),w
  5655  1A9B  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  5656  1A9C  0820               	movf	?___lwdiv^(0+128),w
  5657  1A9D  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  5658                           
  5659                           ;DISPLAY.C: 167: diswin1[4]= hex_data % 10;
  5660  1A9E  300A               	movlw	10
  5661  1A9F  00A0               	movwf	___lwmod@divisor^(0+128)
  5662  1AA0  3000               	movlw	0
  5663  1AA1  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5664  1AA2  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5665  1AA3  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  5666  1AA4  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5667  1AA5  00A2               	movwf	___lwmod@dividend^(0+128)
  5668  1AA6  3199  2128  319A   	fcall	___lwmod
  5669  1AA9  0021               	movlb	1	; select bank1
  5670  1AAA  0820               	movf	?___lwmod^(0+128),w
  5671  1AAB  00AA               	movwf	??_disp_hex_window2^(0+128)
  5672  1AAC  082A               	movf	??_disp_hex_window2^(0+128),w
  5673  1AAD  0023               	movlb	3	; select bank3
  5674  1AAE  00DD               	movwf	(_diswin1^(0+384)+4)
  5675                           
  5676                           ;DISPLAY.C: 168: hex_data /= 10;
  5677  1AAF  300A               	movlw	10
  5678  1AB0  0021               	movlb	1	; select bank1
  5679  1AB1  00A0               	movwf	___lwdiv@divisor^(0+128)
  5680  1AB2  3000               	movlw	0
  5681  1AB3  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5682  1AB4  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5683  1AB5  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  5684  1AB6  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5685  1AB7  00A2               	movwf	___lwdiv@dividend^(0+128)
  5686  1AB8  3187  27CB  319A   	fcall	___lwdiv
  5687  1ABB  0021               	movlb	1	; select bank1
  5688  1ABC  0821               	movf	(?___lwdiv+1)^(0+128),w
  5689  1ABD  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  5690  1ABE  0820               	movf	?___lwdiv^(0+128),w
  5691  1ABF  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  5692                           
  5693                           ;DISPLAY.C: 169: diswin1[3]= hex_data % 10;
  5694  1AC0  300A               	movlw	10
  5695  1AC1  00A0               	movwf	___lwmod@divisor^(0+128)
  5696  1AC2  3000               	movlw	0
  5697  1AC3  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5698  1AC4  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5699  1AC5  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  5700  1AC6  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5701  1AC7  00A2               	movwf	___lwmod@dividend^(0+128)
  5702  1AC8  3199  2128         	fcall	___lwmod
  5703  1ACA  0021               	movlb	1	; select bank1
  5704  1ACB  0820               	movf	?___lwmod^(0+128),w
  5705  1ACC  00AA               	movwf	??_disp_hex_window2^(0+128)
  5706  1ACD  082A               	movf	??_disp_hex_window2^(0+128),w
  5707  1ACE  0023               	movlb	3	; select bank3
  5708  1ACF  00DC               	movwf	(_diswin1^(0+384)+3)
  5709                           
  5710                           ;DISPLAY.C: 170: diswin1[6]=0x00;
  5711  1AD0  01DF               	clrf	(_diswin1^(0+384)+6)
  5712                           
  5713                           ;DISPLAY.C: 171: diswin1[7]=0x00;
  5714  1AD1  01E0               	clrf	(_diswin1^(0+384)+7)
  5715  1AD2  0008               	return
  5716  1AD3                     __end_of_disp_hex_window2:	
  5717                           
  5718                           	psect	text9
  5719  0802                     __ptext9:	
  5720 ;; *************** function _disp_hex_window22 *****************
  5721 ;; Defined at:
  5722 ;;		line 186 in file "DISPLAY.C"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  hex_data        2    0[BANK1 ] unsigned int 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;		None
  5727 ;; Return value:  Size  Location     Type
  5728 ;;		None               void
  5729 ;; Registers used:
  5730 ;;		None
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5736 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5739 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5740 ;;Total ram usage:        2 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; Hardware stack levels required when called:    3
  5743 ;; This function calls:
  5744 ;;		Nothing
  5745 ;; This function is called by:
  5746 ;;		_main
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           
  5751                           ;psect for function _disp_hex_window22
  5752  0802                     _disp_hex_window22:	
  5753                           
  5754                           ;incstack = 0
  5755                           ; Regs used in _disp_hex_window22: []
  5756  0802  0008               	return
  5757  0803                     __end_of_disp_hex_window22:	
  5758                           
  5759                           	psect	text10
  5760  0801                     __ptext10:	
  5761 ;; *************** function _disp_hex_window11 *****************
  5762 ;; Defined at:
  5763 ;;		line 175 in file "DISPLAY.C"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  hex_data        2    0[BANK1 ] unsigned int 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;		None
  5768 ;; Return value:  Size  Location     Type
  5769 ;;		None               void
  5770 ;; Registers used:
  5771 ;;		None
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5777 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5780 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5781 ;;Total ram usage:        2 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; Hardware stack levels required when called:    3
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_main
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           
  5792                           ;psect for function _disp_hex_window11
  5793  0801                     _disp_hex_window11:	
  5794                           
  5795                           ;incstack = 0
  5796                           ; Regs used in _disp_hex_window11: []
  5797  0801  0008               	return
  5798  0802                     __end_of_disp_hex_window11:	
  5799                           
  5800                           	psect	text11
  5801  19CE                     __ptext11:	
  5802 ;; *************** function _disp_hex_window1 *****************
  5803 ;; Defined at:
  5804 ;;		line 152 in file "DISPLAY.C"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;  hex_data        2    8[BANK1 ] unsigned int 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;		None               void
  5811 ;; Registers used:
  5812 ;;		wreg, status,2, status,0, pclath, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5818 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5820 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5821 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5822 ;;Total ram usage:        3 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:    4
  5825 ;; This function calls:
  5826 ;;		___lwdiv
  5827 ;;		___lwmod
  5828 ;; This function is called by:
  5829 ;;		_main
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           
  5834                           ;psect for function _disp_hex_window1
  5835  19CE                     _disp_hex_window1:	
  5836                           
  5837                           ;DISPLAY.C: 155: diswin1[2]= hex_data % 10;
  5838                           
  5839                           ;incstack = 0
  5840                           ; Regs used in _disp_hex_window1: [wreg+status,2+status,0+pclath+cstack]
  5841  19CE  300A               	movlw	10
  5842  19CF  0021               	movlb	1	; select bank1
  5843  19D0  00A0               	movwf	___lwmod@divisor^(0+128)
  5844  19D1  3000               	movlw	0
  5845  19D2  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5846  19D3  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5847  19D4  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  5848  19D5  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5849  19D6  00A2               	movwf	___lwmod@dividend^(0+128)
  5850  19D7  3199  2128  3199   	fcall	___lwmod
  5851  19DA  0021               	movlb	1	; select bank1
  5852  19DB  0820               	movf	?___lwmod^(0+128),w
  5853  19DC  00AA               	movwf	??_disp_hex_window1^(0+128)
  5854  19DD  082A               	movf	??_disp_hex_window1^(0+128),w
  5855  19DE  0023               	movlb	3	; select bank3
  5856  19DF  00DB               	movwf	(_diswin1^(0+384)+2)
  5857                           
  5858                           ;DISPLAY.C: 156: hex_data /= 10;
  5859  19E0  300A               	movlw	10
  5860  19E1  0021               	movlb	1	; select bank1
  5861  19E2  00A0               	movwf	___lwdiv@divisor^(0+128)
  5862  19E3  3000               	movlw	0
  5863  19E4  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5864  19E5  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5865  19E6  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  5866  19E7  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5867  19E8  00A2               	movwf	___lwdiv@dividend^(0+128)
  5868  19E9  3187  27CB  3199   	fcall	___lwdiv
  5869  19EC  0021               	movlb	1	; select bank1
  5870  19ED  0821               	movf	(?___lwdiv+1)^(0+128),w
  5871  19EE  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  5872  19EF  0820               	movf	?___lwdiv^(0+128),w
  5873  19F0  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  5874                           
  5875                           ;DISPLAY.C: 157: diswin1[1]= hex_data % 10;
  5876  19F1  300A               	movlw	10
  5877  19F2  00A0               	movwf	___lwmod@divisor^(0+128)
  5878  19F3  3000               	movlw	0
  5879  19F4  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5880  19F5  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5881  19F6  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  5882  19F7  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5883  19F8  00A2               	movwf	___lwmod@dividend^(0+128)
  5884  19F9  3199  2128  3199   	fcall	___lwmod
  5885  19FC  0021               	movlb	1	; select bank1
  5886  19FD  0820               	movf	?___lwmod^(0+128),w
  5887  19FE  00AA               	movwf	??_disp_hex_window1^(0+128)
  5888  19FF  082A               	movf	??_disp_hex_window1^(0+128),w
  5889  1A00  0023               	movlb	3	; select bank3
  5890  1A01  00DA               	movwf	(_diswin1^(0+384)+1)
  5891                           
  5892                           ;DISPLAY.C: 158: hex_data /= 10;
  5893  1A02  300A               	movlw	10
  5894  1A03  0021               	movlb	1	; select bank1
  5895  1A04  00A0               	movwf	___lwdiv@divisor^(0+128)
  5896  1A05  3000               	movlw	0
  5897  1A06  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5898  1A07  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5899  1A08  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  5900  1A09  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5901  1A0A  00A2               	movwf	___lwdiv@dividend^(0+128)
  5902  1A0B  3187  27CB  3199   	fcall	___lwdiv
  5903  1A0E  0021               	movlb	1	; select bank1
  5904  1A0F  0821               	movf	(?___lwdiv+1)^(0+128),w
  5905  1A10  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  5906  1A11  0820               	movf	?___lwdiv^(0+128),w
  5907  1A12  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  5908                           
  5909                           ;DISPLAY.C: 159: diswin1[0]= hex_data % 10;
  5910  1A13  300A               	movlw	10
  5911  1A14  00A0               	movwf	___lwmod@divisor^(0+128)
  5912  1A15  3000               	movlw	0
  5913  1A16  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5914  1A17  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5915  1A18  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  5916  1A19  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5917  1A1A  00A2               	movwf	___lwmod@dividend^(0+128)
  5918  1A1B  3199  2128         	fcall	___lwmod
  5919  1A1D  0021               	movlb	1	; select bank1
  5920  1A1E  0820               	movf	?___lwmod^(0+128),w
  5921  1A1F  00AA               	movwf	??_disp_hex_window1^(0+128)
  5922  1A20  082A               	movf	??_disp_hex_window1^(0+128),w
  5923  1A21  0023               	movlb	3	; select bank3
  5924  1A22  00D9               	movwf	_diswin1^(0+384)
  5925  1A23  0008               	return
  5926  1A24                     __end_of_disp_hex_window1:	
  5927                           
  5928                           	psect	text12
  5929  1928                     __ptext12:	
  5930 ;; *************** function ___lwmod *****************
  5931 ;; Defined at:
  5932 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  divisor         2    0[BANK1 ] unsigned int 
  5935 ;;  dividend        2    2[BANK1 ] unsigned int 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  counter         1    5[BANK1 ] unsigned char 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  2    0[BANK1 ] unsigned int 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2, status,0
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5947 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5948 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5949 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5950 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5951 ;;Total ram usage:        6 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    3
  5954 ;; This function calls:
  5955 ;;		Nothing
  5956 ;; This function is called by:
  5957 ;;		_disp_hex_window1
  5958 ;;		_disp_hex_window2
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           
  5963                           ;psect for function ___lwmod
  5964  1928                     ___lwmod:	
  5965                           
  5966                           ;incstack = 0
  5967                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5968  1928  0021               	movlb	1	; select bank1
  5969  1929  0820               	movf	___lwmod@divisor^(0+128),w
  5970  192A  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  5971  192B  1903               	btfsc	3,2
  5972  192C  2950               	goto	l3797
  5973  192D  01A5               	clrf	___lwmod@counter^(0+128)
  5974  192E  0AA5               	incf	___lwmod@counter^(0+128),f
  5975  192F                     l3787:	
  5976  192F  1BA1               	btfsc	(___lwmod@divisor+1)^(0+128),7
  5977  1930  293B               	goto	l3789
  5978  1931  3001               	movlw	1
  5979  1932                     u4765:	
  5980  1932  35A0               	lslf	___lwmod@divisor^(0+128),f
  5981  1933  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  5982  1934  0B89               	decfsz	9,f
  5983  1935  2932               	goto	u4765
  5984  1936  3001               	movlw	1
  5985  1937  00A4               	movwf	??___lwmod^(0+128)
  5986  1938  0824               	movf	??___lwmod^(0+128),w
  5987  1939  07A5               	addwf	___lwmod@counter^(0+128),f
  5988  193A  292F               	goto	l3787
  5989  193B                     l3789:	
  5990  193B  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5991  193C  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  5992  193D  1D03               	skipz
  5993  193E  2941               	goto	u4785
  5994  193F  0820               	movf	___lwmod@divisor^(0+128),w
  5995  1940  0222               	subwf	___lwmod@dividend^(0+128),w
  5996  1941                     u4785:	
  5997  1941  1C03               	skipc
  5998  1942  2947               	goto	l3793
  5999  1943  0820               	movf	___lwmod@divisor^(0+128),w
  6000  1944  02A2               	subwf	___lwmod@dividend^(0+128),f
  6001  1945  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  6002  1946  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
  6003  1947                     l3793:	
  6004  1947  3001               	movlw	1
  6005  1948                     u4795:	
  6006  1948  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
  6007  1949  0CA0               	rrf	___lwmod@divisor^(0+128),f
  6008  194A  0B89               	decfsz	9,f
  6009  194B  2948               	goto	u4795
  6010  194C  3001               	movlw	1
  6011  194D  02A5               	subwf	___lwmod@counter^(0+128),f
  6012  194E  1D03               	btfss	3,2
  6013  194F  293B               	goto	l3789
  6014  1950                     l3797:	
  6015  1950  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  6016  1951  00A1               	movwf	(?___lwmod+1)^(0+128)
  6017  1952  0822               	movf	___lwmod@dividend^(0+128),w
  6018  1953  00A0               	movwf	?___lwmod^(0+128)
  6019  1954  0008               	return
  6020  1955                     __end_of___lwmod:	
  6021                           
  6022                           	psect	text13
  6023  07CB                     __ptext13:	
  6024 ;; *************** function ___lwdiv *****************
  6025 ;; Defined at:
  6026 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;  divisor         2    0[BANK1 ] unsigned int 
  6029 ;;  dividend        2    2[BANK1 ] unsigned int 
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;  quotient        2    5[BANK1 ] unsigned int 
  6032 ;;  counter         1    7[BANK1 ] unsigned char 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  2    0[BANK1 ] unsigned int 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6042 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6043 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6044 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6045 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6046 ;;Total ram usage:        8 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:    3
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_disp_hex_window1
  6053 ;;		_disp_hex_window2
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           
  6058                           ;psect for function ___lwdiv
  6059  07CB                     ___lwdiv:	
  6060                           
  6061                           ;incstack = 0
  6062                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6063  07CB  0021               	movlb	1	; select bank1
  6064  07CC  01A5               	clrf	___lwdiv@quotient^(0+128)
  6065  07CD  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  6066  07CE  0820               	movf	___lwdiv@divisor^(0+128),w
  6067  07CF  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  6068  07D0  1903               	btfsc	3,2
  6069  07D1  2FFB               	goto	l3775
  6070  07D2  01A7               	clrf	___lwdiv@counter^(0+128)
  6071  07D3  0AA7               	incf	___lwdiv@counter^(0+128),f
  6072  07D4                     l3763:	
  6073  07D4  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  6074  07D5  2FE0               	goto	l3765
  6075  07D6  3001               	movlw	1
  6076  07D7                     u4695:	
  6077  07D7  35A0               	lslf	___lwdiv@divisor^(0+128),f
  6078  07D8  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  6079  07D9  0B89               	decfsz	9,f
  6080  07DA  2FD7               	goto	u4695
  6081  07DB  3001               	movlw	1
  6082  07DC  00A4               	movwf	??___lwdiv^(0+128)
  6083  07DD  0824               	movf	??___lwdiv^(0+128),w
  6084  07DE  07A7               	addwf	___lwdiv@counter^(0+128),f
  6085  07DF  2FD4               	goto	l3763
  6086  07E0                     l3765:	
  6087  07E0  3001               	movlw	1
  6088  07E1                     u4715:	
  6089  07E1  35A5               	lslf	___lwdiv@quotient^(0+128),f
  6090  07E2  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  6091  07E3  0B89               	decfsz	9,f
  6092  07E4  2FE1               	goto	u4715
  6093  07E5  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  6094  07E6  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  6095  07E7  1D03               	skipz
  6096  07E8  2FEB               	goto	u4725
  6097  07E9  0820               	movf	___lwdiv@divisor^(0+128),w
  6098  07EA  0222               	subwf	___lwdiv@dividend^(0+128),w
  6099  07EB                     u4725:	
  6100  07EB  1C03               	skipc
  6101  07EC  2FF2               	goto	l3771
  6102  07ED  0820               	movf	___lwdiv@divisor^(0+128),w
  6103  07EE  02A2               	subwf	___lwdiv@dividend^(0+128),f
  6104  07EF  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  6105  07F0  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  6106  07F1  1425               	bsf	___lwdiv@quotient^(0+128),0
  6107  07F2                     l3771:	
  6108  07F2  3001               	movlw	1
  6109  07F3                     u4735:	
  6110  07F3  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  6111  07F4  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  6112  07F5  0B89               	decfsz	9,f
  6113  07F6  2FF3               	goto	u4735
  6114  07F7  3001               	movlw	1
  6115  07F8  02A7               	subwf	___lwdiv@counter^(0+128),f
  6116  07F9  1D03               	btfss	3,2
  6117  07FA  2FE0               	goto	l3765
  6118  07FB                     l3775:	
  6119  07FB  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  6120  07FC  00A1               	movwf	(?___lwdiv+1)^(0+128)
  6121  07FD  0825               	movf	___lwdiv@quotient^(0+128),w
  6122  07FE  00A0               	movwf	?___lwdiv^(0+128)
  6123  07FF  0008               	return
  6124  0800                     __end_of___lwdiv:	
  6125                           
  6126                           	psect	text14
  6127  0806                     __ptext14:	
  6128 ;; *************** function _detect_display_error *****************
  6129 ;; Defined at:
  6130 ;;		line 1376 in file "main.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;		None               void
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0, pclath, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6146 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6147 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6148 ;;Total ram usage:        1 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    4
  6151 ;; This function calls:
  6152 ;;		_Update_PWM
  6153 ;; This function is called by:
  6154 ;;		_main
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           
  6159                           ;psect for function _detect_display_error
  6160  0806                     _detect_display_error:	
  6161                           
  6162                           ;main.c: 1379: pstowfstru.pstowfstrs.error_code1=erroru.errorstatusbyte[0];
  6163                           
  6164                           ;incstack = 0
  6165                           ; Regs used in _detect_display_error: [wreg+status,2+status,0+pclath+cstack]
  6166  0806  0022               	movlb	2	; select bank2
  6167  0807  086B               	movf	_erroru^(0+256),w
  6168  0808  0021               	movlb	1	; select bank1
  6169  0809  00DB               	movwf	??_detect_display_error^(0+128)
  6170  080A  085B               	movf	??_detect_display_error^(0+128),w
  6171  080B  0024               	movlb	4	; select bank4
  6172  080C  00DE               	movwf	(_pstowfstru^(0+512)+16)
  6173                           
  6174                           ;main.c: 1380: pstowfstru.pstowfstrs.error_code2=erroru.errorstatusbyte[1];
  6175  080D  0022               	movlb	2	; select bank2
  6176  080E  086C               	movf	(_erroru^(0+256)+1),w
  6177  080F  0021               	movlb	1	; select bank1
  6178  0810  00DB               	movwf	??_detect_display_error^(0+128)
  6179  0811  085B               	movf	??_detect_display_error^(0+128),w
  6180  0812  0024               	movlb	4	; select bank4
  6181  0813  00DF               	movwf	(_pstowfstru^(0+512)+17)
  6182                           
  6183                           ;main.c: 1382: if(erroru.errors.uv_er1==1)
  6184  0814  0022               	movlb	2	; select bank2
  6185  0815  1C6B               	btfss	_erroru^(0+256),0
  6186  0816  2821               	goto	l860
  6187                           
  6188                           ;main.c: 1383: {
  6189                           ;main.c: 1384: universal_error=1;
  6190  0817  3001               	movlw	1
  6191  0818  0021               	movlb	1	; select bank1
  6192  0819  00DB               	movwf	??_detect_display_error^(0+128)
  6193  081A  085B               	movf	??_detect_display_error^(0+128),w
  6194  081B  0022               	movlb	2	; select bank2
  6195  081C  00E7               	movwf	_universal_error^(0+256)	;volatile
  6196                           
  6197                           ;main.c: 1385: diswin1[5]=1;
  6198  081D  0023               	movlb	3	; select bank3
  6199  081E  01DE               	clrf	(_diswin1^(0+384)+5)
  6200  081F  0ADE               	incf	(_diswin1^(0+384)+5),f
  6201                           
  6202                           ;main.c: 1386: }
  6203  0820  2886               	goto	l4833
  6204  0821                     l860:	
  6205                           
  6206                           ;main.c: 1387: else if(erroru.errors.ov_er2==1)
  6207  0821  1CEB               	btfss	_erroru^(0+256),1
  6208  0822  282B               	goto	l862
  6209                           
  6210                           ;main.c: 1388: {
  6211                           ;main.c: 1389: universal_error=1;
  6212  0823  3001               	movlw	1
  6213  0824  0021               	movlb	1	; select bank1
  6214  0825  00DB               	movwf	??_detect_display_error^(0+128)
  6215  0826  085B               	movf	??_detect_display_error^(0+128),w
  6216  0827  0022               	movlb	2	; select bank2
  6217  0828  00E7               	movwf	_universal_error^(0+256)	;volatile
  6218                           
  6219                           ;main.c: 1390: diswin1[5]=2;
  6220  0829  3002               	movlw	2
  6221  082A  2871               	goto	L18
  6222  082B                     l862:	
  6223                           ;main.c: 1391: }
  6224                           
  6225                           
  6226                           ;main.c: 1392: else if(erroru.errors.th_er3==1)
  6227  082B  1D6B               	btfss	_erroru^(0+256),2
  6228  082C  2835               	goto	l864
  6229                           
  6230                           ;main.c: 1393: {
  6231                           ;main.c: 1394: universal_error=1;
  6232  082D  3001               	movlw	1
  6233  082E  0021               	movlb	1	; select bank1
  6234  082F  00DB               	movwf	??_detect_display_error^(0+128)
  6235  0830  085B               	movf	??_detect_display_error^(0+128),w
  6236  0831  0022               	movlb	2	; select bank2
  6237  0832  00E7               	movwf	_universal_error^(0+256)	;volatile
  6238                           
  6239                           ;main.c: 1395: diswin1[5]=3;
  6240  0833  3003               	movlw	3
  6241  0834  2871               	goto	L18
  6242  0835                     l864:	
  6243                           ;main.c: 1396: }
  6244                           
  6245                           
  6246                           ;main.c: 1397: else if(erroru.errors.no_curr_er4==1)
  6247  0835  1DEB               	btfss	_erroru^(0+256),3
  6248  0836  283F               	goto	l866
  6249                           
  6250                           ;main.c: 1398: {
  6251                           ;main.c: 1399: universal_error=1;
  6252  0837  3001               	movlw	1
  6253  0838  0021               	movlb	1	; select bank1
  6254  0839  00DB               	movwf	??_detect_display_error^(0+128)
  6255  083A  085B               	movf	??_detect_display_error^(0+128),w
  6256  083B  0022               	movlb	2	; select bank2
  6257  083C  00E7               	movwf	_universal_error^(0+256)	;volatile
  6258                           
  6259                           ;main.c: 1400: diswin1[5]=4;
  6260  083D  3004               	movlw	4
  6261  083E  2871               	goto	L18
  6262  083F                     l866:	
  6263                           ;main.c: 1401: }else if(erroru.errors.motor_over_ld_er5==1)
  6264                           
  6265  083F  1E6B               	btfss	_erroru^(0+256),4
  6266  0840  2849               	goto	l868
  6267                           
  6268                           ;main.c: 1402: {
  6269                           ;main.c: 1403: universal_error=1;
  6270  0841  3001               	movlw	1
  6271  0842  0021               	movlb	1	; select bank1
  6272  0843  00DB               	movwf	??_detect_display_error^(0+128)
  6273  0844  085B               	movf	??_detect_display_error^(0+128),w
  6274  0845  0022               	movlb	2	; select bank2
  6275  0846  00E7               	movwf	_universal_error^(0+256)	;volatile
  6276                           
  6277                           ;main.c: 1404: diswin1[5]=5;
  6278  0847  3005               	movlw	5
  6279  0848  2871               	goto	L18
  6280  0849                     l868:	
  6281                           ;main.c: 1405: }
  6282                           
  6283                           
  6284                           ;main.c: 1406: else if(erroru.errors.wirefdr_er6==1)
  6285  0849  1EEB               	btfss	_erroru^(0+256),5
  6286  084A  2853               	goto	l870
  6287                           
  6288                           ;main.c: 1407: {
  6289                           ;main.c: 1408: universal_error=1;
  6290  084B  3001               	movlw	1
  6291  084C  0021               	movlb	1	; select bank1
  6292  084D  00DB               	movwf	??_detect_display_error^(0+128)
  6293  084E  085B               	movf	??_detect_display_error^(0+128),w
  6294  084F  0022               	movlb	2	; select bank2
  6295  0850  00E7               	movwf	_universal_error^(0+256)	;volatile
  6296                           
  6297                           ;main.c: 1409: diswin1[5]=6;
  6298  0851  3006               	movlw	6
  6299  0852  2871               	goto	L18
  6300  0853                     l870:	
  6301                           ;main.c: 1410: }
  6302                           
  6303                           
  6304                           ;main.c: 1411: else if(erroru.errors.water_press_er7==1 && ( (weldmode=='P') || (weldmod
      +                          e=='G') ) )
  6305  0853  1F6B               	btfss	_erroru^(0+256),6
  6306  0854  2866               	goto	l4821
  6307  0855  3050               	movlw	80
  6308  0856  0020               	movlb	0	; select bank0
  6309  0857  0664               	xorwf	_weldmode,w	;volatile
  6310  0858  1903               	btfsc	3,2
  6311  0859  285E               	goto	l4819
  6312  085A  3047               	movlw	71
  6313  085B  0664               	xorwf	_weldmode,w	;volatile
  6314  085C  1D03               	btfss	3,2
  6315  085D  2866               	goto	l4821
  6316  085E                     l4819:	
  6317                           
  6318                           ;main.c: 1412: {
  6319                           ;main.c: 1413: universal_error=1;
  6320  085E  3001               	movlw	1
  6321  085F  0021               	movlb	1	; select bank1
  6322  0860  00DB               	movwf	??_detect_display_error^(0+128)
  6323  0861  085B               	movf	??_detect_display_error^(0+128),w
  6324  0862  0022               	movlb	2	; select bank2
  6325  0863  00E7               	movwf	_universal_error^(0+256)	;volatile
  6326                           
  6327                           ;main.c: 1414: diswin1[5]=7;
  6328  0864  3007               	movlw	7
  6329  0865  2871               	goto	L18
  6330  0866                     l4821:	
  6331                           ;main.c: 1415: }
  6332                           
  6333                           
  6334                           ;main.c: 1416: else if(error8==1)
  6335  0866  0022               	movlb	2	; select bank2
  6336  0867  0348               	decf	_error8^(0+256),w	;volatile
  6337  0868  1D03               	btfss	3,2
  6338  0869  2877               	goto	l876
  6339                           
  6340                           ;main.c: 1417: {
  6341                           ;main.c: 1418: universal_error=1;
  6342  086A  3001               	movlw	1
  6343  086B  0021               	movlb	1	; select bank1
  6344  086C  00DB               	movwf	??_detect_display_error^(0+128)
  6345  086D  085B               	movf	??_detect_display_error^(0+128),w
  6346  086E  0022               	movlb	2	; select bank2
  6347  086F  00E7               	movwf	_universal_error^(0+256)	;volatile
  6348                           
  6349                           ;main.c: 1419: diswin1[5]=8;
  6350  0870  3008               	movlw	8
  6351  0871                     L18:	
  6352  0871  0021               	movlb	1	; select bank1
  6353  0872  00DB               	movwf	??_detect_display_error^(0+128)
  6354  0873  085B               	movf	??_detect_display_error^(0+128),w
  6355  0874  0023               	movlb	3	; select bank3
  6356  0875  00DE               	movwf	(_diswin1^(0+384)+5)
  6357                           
  6358                           ;main.c: 1420: }
  6359  0876  2886               	goto	l4833
  6360  0877                     l876:	
  6361                           
  6362                           ;main.c: 1421: else if(erroru.errors.motor_fb_err==1)
  6363  0877  1D6C               	btfss	(_erroru^(0+256)+1),2
  6364  0878  2884               	goto	l4831
  6365                           
  6366                           ;main.c: 1422: {
  6367                           ;main.c: 1423: universal_error=1;
  6368  0879  3001               	movlw	1
  6369  087A  0021               	movlb	1	; select bank1
  6370  087B  00DB               	movwf	??_detect_display_error^(0+128)
  6371  087C  085B               	movf	??_detect_display_error^(0+128),w
  6372  087D  0022               	movlb	2	; select bank2
  6373  087E  00E7               	movwf	_universal_error^(0+256)	;volatile
  6374                           
  6375                           ;main.c: 1424: diswin1[4]=1;
  6376  087F  0023               	movlb	3	; select bank3
  6377  0880  01DD               	clrf	(_diswin1^(0+384)+4)
  6378  0881  0ADD               	incf	(_diswin1^(0+384)+4),f
  6379                           
  6380                           ;main.c: 1425: diswin1[5]=0;
  6381  0882  01DE               	clrf	(_diswin1^(0+384)+5)
  6382                           
  6383                           ;main.c: 1426: }
  6384  0883  2886               	goto	l4833
  6385  0884                     l4831:	
  6386                           
  6387                           ;main.c: 1427: else
  6388                           ;main.c: 1428: universal_error=0;
  6389  0884  0022               	movlb	2	; select bank2
  6390  0885  01E7               	clrf	_universal_error^(0+256)	;volatile
  6391  0886                     l4833:	
  6392                           
  6393                           ;main.c: 1430: if(universal_error==1)
  6394  0886  0022               	movlb	2	; select bank2
  6395  0887  0367               	decf	_universal_error^(0+256),w	;volatile
  6396  0888  1D03               	btfss	3,2
  6397  0889  0008               	return
  6398                           
  6399                           ;main.c: 1431: {
  6400                           ;main.c: 1432: universal_error_latch=1;
  6401  088A  3001               	movlw	1
  6402  088B  0021               	movlb	1	; select bank1
  6403  088C  00DB               	movwf	??_detect_display_error^(0+128)
  6404  088D  085B               	movf	??_detect_display_error^(0+128),w
  6405  088E  0022               	movlb	2	; select bank2
  6406  088F  00E8               	movwf	_universal_error_latch^(0+256)	;volatile
  6407                           
  6408                           ;main.c: 1433: diswin1[0]=0x0F;
  6409  0890  300F               	movlw	15
  6410  0891  0021               	movlb	1	; select bank1
  6411  0892  00DB               	movwf	??_detect_display_error^(0+128)
  6412  0893  085B               	movf	??_detect_display_error^(0+128),w
  6413  0894  0023               	movlb	3	; select bank3
  6414  0895  00D9               	movwf	_diswin1^(0+384)
  6415                           
  6416                           ;main.c: 1434: diswin1[1]=0x1C;
  6417  0896  301C               	movlw	28
  6418  0897  0021               	movlb	1	; select bank1
  6419  0898  00DB               	movwf	??_detect_display_error^(0+128)
  6420  0899  085B               	movf	??_detect_display_error^(0+128),w
  6421  089A  0023               	movlb	3	; select bank3
  6422  089B  00DA               	movwf	(_diswin1^(0+384)+1)
  6423                           
  6424                           ;main.c: 1435: diswin1[2]=0x1C;
  6425  089C  301C               	movlw	28
  6426  089D  0021               	movlb	1	; select bank1
  6427  089E  00DB               	movwf	??_detect_display_error^(0+128)
  6428  089F  085B               	movf	??_detect_display_error^(0+128),w
  6429  08A0  0023               	movlb	3	; select bank3
  6430  08A1  00DB               	movwf	(_diswin1^(0+384)+2)
  6431                           
  6432                           ;main.c: 1437: diswin1[3]=0;
  6433  08A2  01DC               	clrf	(_diswin1^(0+384)+3)
  6434                           
  6435                           ;main.c: 1438: diswin1[4]=0;
  6436  08A3  01DD               	clrf	(_diswin1^(0+384)+4)
  6437                           
  6438                           ;main.c: 1440: PORTCbits.RC3 =0;
  6439  08A4  0020               	movlb	0	; select bank0
  6440  08A5  118E               	bcf	14,3	;volatile
  6441                           
  6442                           ;main.c: 1441: Update_PWM(0);
  6443  08A6  3000               	movlw	0
  6444  08A7  0021               	movlb	1	; select bank1
  6445  08A8  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  6446  08A9  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  6447  08AA  3198  20FB         	fcall	_Update_PWM
  6448                           
  6449                           ;main.c: 1442: TypeDP.DPGROUP[0]=0;
  6450  08AC  0020               	movlb	0	; select bank0
  6451  08AD  01EB               	clrf	_TypeDP
  6452                           
  6453                           ;main.c: 1443: erroru.errors.comm_er8=1;
  6454  08AE  0022               	movlb	2	; select bank2
  6455  08AF  17EB               	bsf	_erroru^(0+256),7
  6456  08B0  0008               	return
  6457  08B1                     __end_of_detect_display_error:	
  6458                           
  6459                           	psect	text15
  6460  27C9                     __ptext15:	
  6461 ;; *************** function _capture_init *****************
  6462 ;; Defined at:
  6463 ;;		line 1262 in file "main.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;		None
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;		None
  6468 ;; Return value:  Size  Location     Type
  6469 ;;		None               void
  6470 ;; Registers used:
  6471 ;;		wreg, status,2, status,0
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6481 ;;Total ram usage:        0 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    3
  6484 ;; This function calls:
  6485 ;;		Nothing
  6486 ;; This function is called by:
  6487 ;;		_main
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           
  6492                           ;psect for function _capture_init
  6493  27C9                     _capture_init:	
  6494                           
  6495                           ;main.c: 1264: TRISCbits.TRISC1 =1;
  6496                           
  6497                           ;incstack = 0
  6498                           ; Regs used in _capture_init: [wreg+status,2+status,0]
  6499  27C9  0021               	movlb	1	; select bank1
  6500  27CA  148E               	bsf	14,1	;volatile
  6501                           
  6502                           ;main.c: 1266: PIE2bits.CCP2IE = 1;
  6503  27CB  1412               	bsf	18,0	;volatile
  6504                           
  6505                           ;main.c: 1267: CCP2CONbits.CCP2M=0x05;
  6506  27CC  0025               	movlb	5	; select bank5
  6507  27CD  081A               	movf	26,w	;volatile
  6508  27CE  39F0               	andlw	-16
  6509  27CF  3805               	iorlw	5
  6510  27D0  009A               	movwf	26	;volatile
  6511                           
  6512                           ;main.c: 1268: TMR1H = 0x00;
  6513  27D1  0020               	movlb	0	; select bank0
  6514  27D2  0197               	clrf	23	;volatile
  6515                           
  6516                           ;main.c: 1269: TMR1L = 0x00;
  6517  27D3  0196               	clrf	22	;volatile
  6518                           
  6519                           ;main.c: 1270: PIR1 = 0x00;
  6520  27D4  0191               	clrf	17	;volatile
  6521                           
  6522                           ;main.c: 1272: T1CON = 0x21;
  6523  27D5  3021               	movlw	33
  6524  27D6  0098               	movwf	24	;volatile
  6525                           
  6526                           ;main.c: 1273: INTCONbits.GIE = 1;
  6527  27D7  178B               	bsf	11,7	;volatile
  6528                           
  6529                           ;main.c: 1274: INTCONbits.PEIE = 1;
  6530  27D8  170B               	bsf	11,6	;volatile
  6531  27D9  0008               	return
  6532  27DA                     __end_of_capture_init:	
  6533                           
  6534                           	psect	text16
  6535  27B8                     __ptext16:	
  6536 ;; *************** function _Timer0_init *****************
  6537 ;; Defined at:
  6538 ;;		line 1220 in file "main.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;		None               void
  6545 ;; Registers used:
  6546 ;;		wreg, status,2, status,0
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6556 ;;Total ram usage:        0 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; Hardware stack levels required when called:    3
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_main
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           
  6567                           ;psect for function _Timer0_init
  6568  27B8                     _Timer0_init:	
  6569                           
  6570                           ;main.c: 1222: TMR0=0;
  6571                           
  6572                           ;incstack = 0
  6573                           ; Regs used in _Timer0_init: [wreg+status,2+status,0]
  6574  27B8  0020               	movlb	0	; select bank0
  6575  27B9  0195               	clrf	21	;volatile
  6576                           
  6577                           ;main.c: 1223: OPTION_REGbits.PSA=0;
  6578  27BA  0021               	movlb	1	; select bank1
  6579  27BB  1195               	bcf	21,3	;volatile
  6580                           
  6581                           ;main.c: 1224: OPTION_REGbits.T0CS=0;
  6582  27BC  1295               	bcf	21,5	;volatile
  6583                           
  6584                           ;main.c: 1225: OPTION_REGbits.PS=5;
  6585  27BD  0815               	movf	21,w	;volatile
  6586  27BE  39F8               	andlw	-8
  6587  27BF  3805               	iorlw	5
  6588  27C0  0095               	movwf	21	;volatile
  6589                           
  6590                           ;main.c: 1226: INTCONbits.GIE=0;
  6591  27C1  138B               	bcf	11,7	;volatile
  6592                           
  6593                           ;main.c: 1227: INTCONbits.PEIE=0;
  6594  27C2  130B               	bcf	11,6	;volatile
  6595                           
  6596                           ;main.c: 1228: INTCONbits.T0IF=0;
  6597  27C3  110B               	bcf	11,2	;volatile
  6598                           
  6599                           ;main.c: 1234: TMR0=0x85;
  6600  27C4  3085               	movlw	133
  6601  27C5  0020               	movlb	0	; select bank0
  6602  27C6  0095               	movwf	21	;volatile
  6603                           
  6604                           ;main.c: 1235: INTCONbits.T0IE=1;
  6605  27C7  168B               	bsf	11,5	;volatile
  6606  27C8  0008               	return
  6607  27C9                     __end_of_Timer0_init:	
  6608                           
  6609                           	psect	text17
  6610  1C56                     __ptext17:	
  6611 ;; *************** function _SCANENCODER2 *****************
  6612 ;; Defined at:
  6613 ;;		line 94 in file "ENCODER.C"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;		None
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;  result          1    6[BANK1 ] unsigned char 
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  1    wreg      unsigned char 
  6620 ;; Registers used:
  6621 ;;		wreg, status,2, status,0, pclath, cstack
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6628 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6629 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6630 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6631 ;;Total ram usage:        2 bytes
  6632 ;; Hardware stack levels used:    1
  6633 ;; Hardware stack levels required when called:    4
  6634 ;; This function calls:
  6635 ;;		_enc2_port
  6636 ;; This function is called by:
  6637 ;;		_main
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           
  6642                           ;psect for function _SCANENCODER2
  6643  1C56                     _SCANENCODER2:	
  6644                           
  6645                           ;ENCODER.C: 96: unsigned char result=0;
  6646                           
  6647                           ;incstack = 0
  6648                           ; Regs used in _SCANENCODER2: [wreg+status,2+status,0+pclath+cstack]
  6649  1C56  0021               	movlb	1	; select bank1
  6650  1C57  01A6               	clrf	SCANENCODER2@result^(0+128)
  6651                           
  6652                           ;ENCODER.C: 97: if(enc2_port() == 1)
  6653  1C58  319A  2224  319C   	fcall	_enc2_port
  6654  1C5B  3A01               	xorlw	1
  6655  1C5C  1D03               	skipz
  6656  1C5D  2CCA               	goto	l4487
  6657                           
  6658                           ;ENCODER.C: 98: {
  6659                           ;ENCODER.C: 99: if(firstpulse2==0 && secondpulse2==0)
  6660  1C5E  0022               	movlb	2	; select bank2
  6661  1C5F  084A               	movf	_firstpulse2^(0+256),w
  6662  1C60  1D03               	btfss	3,2
  6663  1C61  2C82               	goto	l4449
  6664  1C62  0861               	movf	_secondpulse2^(0+256),w
  6665  1C63  1D03               	btfss	3,2
  6666  1C64  2C82               	goto	l4449
  6667                           
  6668                           ;ENCODER.C: 100: {
  6669                           ;ENCODER.C: 101: if(new2==0x02)
  6670  1C65  3002               	movlw	2
  6671  1C66  0020               	movlb	0	; select bank0
  6672  1C67  0658               	xorwf	_new2,w
  6673  1C68  0459               	iorwf	_new2+1,w
  6674  1C69  1D03               	btfss	3,2
  6675  1C6A  2C76               	goto	l4439
  6676                           
  6677                           ;ENCODER.C: 102: {
  6678                           ;ENCODER.C: 103: firstpulse2=1;
  6679  1C6B  0022               	movlb	2	; select bank2
  6680  1C6C  01CA               	clrf	_firstpulse2^(0+256)
  6681  1C6D  0ACA               	incf	_firstpulse2^(0+256),f
  6682                           
  6683                           ;ENCODER.C: 104: secondpulse2=0;
  6684  1C6E  01E1               	clrf	_secondpulse2^(0+256)
  6685                           
  6686                           ;ENCODER.C: 105: plus222=1;
  6687  1C6F  01D8               	clrf	_plus222^(0+256)
  6688  1C70  0AD8               	incf	_plus222^(0+256),f
  6689                           
  6690                           ;ENCODER.C: 106: result='$';
  6691  1C71  3024               	movlw	36
  6692  1C72  0021               	movlb	1	; select bank1
  6693  1C73  00A5               	movwf	??_SCANENCODER2^(0+128)
  6694  1C74  0825               	movf	??_SCANENCODER2^(0+128),w
  6695  1C75  00A6               	movwf	SCANENCODER2@result^(0+128)
  6696  1C76                     l4439:	
  6697                           
  6698                           ;ENCODER.C: 107: }
  6699                           ;ENCODER.C: 108: if(new2==0x01)
  6700  1C76  0020               	movlb	0	; select bank0
  6701  1C77  0358               	decf	_new2,w
  6702  1C78  0459               	iorwf	_new2+1,w
  6703  1C79  1D03               	btfss	3,2
  6704  1C7A  2CCA               	goto	l4487
  6705                           
  6706                           ;ENCODER.C: 109: {
  6707                           ;ENCODER.C: 110: firstpulse2=1;
  6708  1C7B  0022               	movlb	2	; select bank2
  6709  1C7C  01CA               	clrf	_firstpulse2^(0+256)
  6710  1C7D  0ACA               	incf	_firstpulse2^(0+256),f
  6711                           
  6712                           ;ENCODER.C: 111: secondpulse2=0;
  6713  1C7E  01E1               	clrf	_secondpulse2^(0+256)
  6714                           
  6715                           ;ENCODER.C: 112: minus222=1;
  6716  1C7F  01D0               	clrf	_minus222^(0+256)
  6717  1C80  0AD0               	incf	_minus222^(0+256),f
  6718  1C81  2CC5               	goto	l4485
  6719  1C82                     l4449:	
  6720                           ;ENCODER.C: 114: }
  6721                           ;ENCODER.C: 115: }
  6722                           
  6723                           ;ENCODER.C: 113: result='$';
  6724                           
  6725                           
  6726                           ;ENCODER.C: 116: else if(firstpulse2==1 && secondpulse2==0)
  6727  1C82  0022               	movlb	2	; select bank2
  6728  1C83  034A               	decf	_firstpulse2^(0+256),w
  6729  1C84  1D03               	btfss	3,2
  6730  1C85  2C95               	goto	l4459
  6731  1C86  0861               	movf	_secondpulse2^(0+256),w
  6732  1C87  1D03               	btfss	3,2
  6733  1C88  2C95               	goto	l4459
  6734                           
  6735                           ;ENCODER.C: 117: {
  6736                           ;ENCODER.C: 118: if(new2==0x03)
  6737  1C89  3003               	movlw	3
  6738  1C8A  0020               	movlb	0	; select bank0
  6739  1C8B  0658               	xorwf	_new2,w
  6740  1C8C  0459               	iorwf	_new2+1,w
  6741  1C8D  1D03               	btfss	3,2
  6742  1C8E  2CCA               	goto	l4487
  6743                           
  6744                           ;ENCODER.C: 119: {
  6745                           ;ENCODER.C: 120: firstpulse2=1;
  6746  1C8F  0022               	movlb	2	; select bank2
  6747  1C90  01CA               	clrf	_firstpulse2^(0+256)
  6748  1C91  0ACA               	incf	_firstpulse2^(0+256),f
  6749                           
  6750                           ;ENCODER.C: 121: secondpulse2=1;
  6751  1C92  01E1               	clrf	_secondpulse2^(0+256)
  6752  1C93  0AE1               	incf	_secondpulse2^(0+256),f
  6753  1C94  2CC5               	goto	l4485
  6754  1C95                     l4459:	
  6755                           ;ENCODER.C: 123: }
  6756                           ;ENCODER.C: 124: }
  6757                           
  6758                           ;ENCODER.C: 122: result='$';
  6759                           
  6760                           
  6761                           ;ENCODER.C: 125: else if(firstpulse2==1 && secondpulse2==1)
  6762  1C95  0022               	movlb	2	; select bank2
  6763  1C96  034A               	decf	_firstpulse2^(0+256),w
  6764  1C97  1D03               	btfss	3,2
  6765  1C98  2CC1               	goto	l4483
  6766  1C99  0361               	decf	_secondpulse2^(0+256),w
  6767  1C9A  1D03               	btfss	3,2
  6768  1C9B  2CC1               	goto	l4483
  6769                           
  6770                           ;ENCODER.C: 126: {
  6771                           ;ENCODER.C: 127: if(new2==0x01 && plus222==1)
  6772  1C9C  0020               	movlb	0	; select bank0
  6773  1C9D  0358               	decf	_new2,w
  6774  1C9E  0459               	iorwf	_new2+1,w
  6775  1C9F  1D03               	btfss	3,2
  6776  1CA0  2CAC               	goto	l4471
  6777  1CA1  0022               	movlb	2	; select bank2
  6778  1CA2  0358               	decf	_plus222^(0+256),w
  6779  1CA3  1D03               	btfss	3,2
  6780  1CA4  2CAC               	goto	l4471
  6781                           
  6782                           ;ENCODER.C: 128: {
  6783                           ;ENCODER.C: 129: firstpulse2=0;
  6784  1CA5  01CA               	clrf	_firstpulse2^(0+256)
  6785                           
  6786                           ;ENCODER.C: 130: plus222=0;
  6787  1CA6  01D8               	clrf	_plus222^(0+256)
  6788                           
  6789                           ;ENCODER.C: 131: result='+';
  6790  1CA7  302B               	movlw	43
  6791  1CA8  0021               	movlb	1	; select bank1
  6792  1CA9  00A5               	movwf	??_SCANENCODER2^(0+128)
  6793  1CAA  0825               	movf	??_SCANENCODER2^(0+128),w
  6794  1CAB  00A6               	movwf	SCANENCODER2@result^(0+128)
  6795  1CAC                     l4471:	
  6796                           
  6797                           ;ENCODER.C: 132: }
  6798                           ;ENCODER.C: 133: if(new2==0x02 && minus222==1)
  6799  1CAC  3002               	movlw	2
  6800  1CAD  0020               	movlb	0	; select bank0
  6801  1CAE  0658               	xorwf	_new2,w
  6802  1CAF  0459               	iorwf	_new2+1,w
  6803  1CB0  1D03               	btfss	3,2
  6804  1CB1  2CBD               	goto	l4479
  6805  1CB2  0022               	movlb	2	; select bank2
  6806  1CB3  0350               	decf	_minus222^(0+256),w
  6807  1CB4  1D03               	btfss	3,2
  6808  1CB5  2CBD               	goto	l4479
  6809                           
  6810                           ;ENCODER.C: 134: {
  6811                           ;ENCODER.C: 135: firstpulse2=0;
  6812  1CB6  01CA               	clrf	_firstpulse2^(0+256)
  6813                           
  6814                           ;ENCODER.C: 136: minus222=0;
  6815  1CB7  01D0               	clrf	_minus222^(0+256)
  6816                           
  6817                           ;ENCODER.C: 137: result='-';
  6818  1CB8  302D               	movlw	45
  6819  1CB9  0021               	movlb	1	; select bank1
  6820  1CBA  00A5               	movwf	??_SCANENCODER2^(0+128)
  6821  1CBB  0825               	movf	??_SCANENCODER2^(0+128),w
  6822  1CBC  00A6               	movwf	SCANENCODER2@result^(0+128)
  6823  1CBD                     l4479:	
  6824                           
  6825                           ;ENCODER.C: 138: }
  6826                           ;ENCODER.C: 139: firstpulse2=0;
  6827  1CBD  0022               	movlb	2	; select bank2
  6828  1CBE  01CA               	clrf	_firstpulse2^(0+256)
  6829                           
  6830                           ;ENCODER.C: 140: secondpulse2=0;
  6831  1CBF  01E1               	clrf	_secondpulse2^(0+256)
  6832                           
  6833                           ;ENCODER.C: 141: }
  6834  1CC0  2CCA               	goto	l4487
  6835  1CC1                     l4483:	
  6836                           
  6837                           ;ENCODER.C: 142: else
  6838                           ;ENCODER.C: 143: {
  6839                           ;ENCODER.C: 144: plus222=0;
  6840  1CC1  01D8               	clrf	_plus222^(0+256)
  6841                           
  6842                           ;ENCODER.C: 145: minus222=0;
  6843  1CC2  01D0               	clrf	_minus222^(0+256)
  6844                           
  6845                           ;ENCODER.C: 146: firstpulse2=0;
  6846  1CC3  01CA               	clrf	_firstpulse2^(0+256)
  6847                           
  6848                           ;ENCODER.C: 147: secondpulse2=0;
  6849  1CC4  01E1               	clrf	_secondpulse2^(0+256)
  6850  1CC5                     l4485:	
  6851                           
  6852                           ;ENCODER.C: 148: result='$';
  6853  1CC5  3024               	movlw	36
  6854  1CC6  0021               	movlb	1	; select bank1
  6855  1CC7  00A5               	movwf	??_SCANENCODER2^(0+128)
  6856  1CC8  0825               	movf	??_SCANENCODER2^(0+128),w
  6857  1CC9  00A6               	movwf	SCANENCODER2@result^(0+128)
  6858  1CCA                     l4487:	
  6859                           
  6860                           ;ENCODER.C: 149: }
  6861                           ;ENCODER.C: 150: }
  6862                           ;ENCODER.C: 151: return(result);
  6863  1CCA  0021               	movlb	1	; select bank1
  6864  1CCB  0826               	movf	SCANENCODER2@result^(0+128),w
  6865  1CCC  0008               	return
  6866  1CCD                     __end_of_SCANENCODER2:	
  6867                           
  6868                           	psect	text18
  6869  1A24                     __ptext18:	
  6870 ;; *************** function _enc2_port *****************
  6871 ;; Defined at:
  6872 ;;		line 154 in file "ENCODER.C"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;		None
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;  portvalue       2    3[BANK1 ] unsigned int 
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  1    wreg      unsigned char 
  6879 ;; Registers used:
  6880 ;;		wreg, status,2, status,0
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/0
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6887 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6888 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6889 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6890 ;;Total ram usage:        5 bytes
  6891 ;; Hardware stack levels used:    1
  6892 ;; Hardware stack levels required when called:    3
  6893 ;; This function calls:
  6894 ;;		Nothing
  6895 ;; This function is called by:
  6896 ;;		_SCANENCODER2
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           
  6901                           ;psect for function _enc2_port
  6902  1A24                     _enc2_port:	
  6903                           
  6904                           ;ENCODER.C: 156: unsigned int portvalue=0x0000;
  6905                           
  6906                           ;incstack = 0
  6907                           ; Regs used in _enc2_port: [wreg+status,2+status,0]
  6908  1A24  0021               	movlb	1	; select bank1
  6909  1A25  01A3               	clrf	enc2_port@portvalue^(0+128)
  6910  1A26  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6911                           
  6912                           ;ENCODER.C: 157: portvalue=0x0000;
  6913  1A27  01A3               	clrf	enc2_port@portvalue^(0+128)
  6914  1A28  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6915                           
  6916                           ;ENCODER.C: 158: portvalue=PORTAbits.RA2;
  6917  1A29  0020               	movlb	0	; select bank0
  6918  1A2A  0C0C               	rrf	12,w	;volatile
  6919  1A2B  0C89               	rrf	9,f
  6920  1A2C  3901               	andlw	1
  6921  1A2D  0021               	movlb	1	; select bank1
  6922  1A2E  00A0               	movwf	??_enc2_port^(0+128)
  6923  1A2F  01A1               	clrf	(??_enc2_port^(0+128)+1)
  6924  1A30  0820               	movf	??_enc2_port^(0+128),w
  6925  1A31  00A3               	movwf	enc2_port@portvalue^(0+128)
  6926  1A32  0821               	movf	(??_enc2_port+1)^(0+128),w
  6927  1A33  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6928                           
  6929                           ;ENCODER.C: 159: portvalue=portvalue<<1;
  6930  1A34  3523               	lslf	enc2_port@portvalue^(0+128),w
  6931  1A35  00A3               	movwf	enc2_port@portvalue^(0+128)
  6932  1A36  0D24               	rlf	(enc2_port@portvalue+1)^(0+128),w
  6933  1A37  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6934                           
  6935                           ;ENCODER.C: 160: portvalue=portvalue|PORTAbits.RA1;
  6936  1A38  0020               	movlb	0	; select bank0
  6937  1A39  0C0C               	rrf	12,w	;volatile
  6938  1A3A  3901               	andlw	1
  6939  1A3B  0021               	movlb	1	; select bank1
  6940  1A3C  00A0               	movwf	??_enc2_port^(0+128)
  6941  1A3D  0823               	movf	enc2_port@portvalue^(0+128),w
  6942  1A3E  0420               	iorwf	??_enc2_port^(0+128),w
  6943  1A3F  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6944  1A40  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6945  1A41  00A2               	movwf	(??_enc2_port+2)^(0+128)
  6946  1A42  0821               	movf	(??_enc2_port+1)^(0+128),w
  6947  1A43  00A3               	movwf	enc2_port@portvalue^(0+128)
  6948  1A44  0822               	movf	(??_enc2_port+2)^(0+128),w
  6949  1A45  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6950                           
  6951                           ;ENCODER.C: 161: portvalue=(portvalue & 0X0003);
  6952  1A46  3003               	movlw	3
  6953  1A47  0523               	andwf	enc2_port@portvalue^(0+128),w
  6954  1A48  00A3               	movwf	enc2_port@portvalue^(0+128)
  6955  1A49  3000               	movlw	0
  6956  1A4A  0524               	andwf	(enc2_port@portvalue+1)^(0+128),w
  6957  1A4B  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6958                           
  6959                           ;ENCODER.C: 162: new2=portvalue;
  6960  1A4C  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6961  1A4D  0020               	movlb	0	; select bank0
  6962  1A4E  00D9               	movwf	_new2+1
  6963  1A4F  0021               	movlb	1	; select bank1
  6964  1A50  0823               	movf	enc2_port@portvalue^(0+128),w
  6965  1A51  0020               	movlb	0	; select bank0
  6966  1A52  00D8               	movwf	_new2
  6967                           
  6968                           ;ENCODER.C: 163: temp=new2;
  6969  1A53  0858               	movf	_new2,w
  6970  1A54  0021               	movlb	1	; select bank1
  6971  1A55  00A0               	movwf	??_enc2_port^(0+128)
  6972  1A56  0820               	movf	??_enc2_port^(0+128),w
  6973  1A57  0020               	movlb	0	; select bank0
  6974  1A58  00E3               	movwf	_temp
  6975                           
  6976                           ;ENCODER.C: 164: if((temp ^ old2) !=0)
  6977  1A59  0023               	movlb	3	; select bank3
  6978  1A5A  0838               	movf	_old2^(0+384),w
  6979  1A5B  0020               	movlb	0	; select bank0
  6980  1A5C  0663               	xorwf	_temp,w
  6981  1A5D  0021               	movlb	1	; select bank1
  6982  1A5E  00A0               	movwf	??_enc2_port^(0+128)
  6983  1A5F  0023               	movlb	3	; select bank3
  6984  1A60  0839               	movf	(_old2+1)^(0+384),w
  6985  1A61  0021               	movlb	1	; select bank1
  6986  1A62  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6987  1A63  0820               	movf	??_enc2_port^(0+128),w
  6988  1A64  0421               	iorwf	(??_enc2_port^(0+128)+1),w
  6989  1A65  1903               	btfsc	3,2
  6990  1A66  2A71               	goto	l3855
  6991                           
  6992                           ;ENCODER.C: 165: {
  6993                           ;ENCODER.C: 166: old2=new2;
  6994  1A67  0020               	movlb	0	; select bank0
  6995  1A68  0859               	movf	_new2+1,w
  6996  1A69  0023               	movlb	3	; select bank3
  6997  1A6A  00B9               	movwf	(_old2+1)^(0+384)
  6998  1A6B  0020               	movlb	0	; select bank0
  6999  1A6C  0858               	movf	_new2,w
  7000  1A6D  0023               	movlb	3	; select bank3
  7001  1A6E  00B8               	movwf	_old2^(0+384)
  7002                           
  7003                           ;ENCODER.C: 167: return 1;
  7004  1A6F  3001               	movlw	1
  7005                           
  7006                           ;ENCODER.C: 168: }
  7007  1A70  0008               	return
  7008  1A71                     l3855:	
  7009                           
  7010                           ;ENCODER.C: 169: else
  7011                           ;ENCODER.C: 170: {
  7012                           ;ENCODER.C: 171: old2=new2;
  7013  1A71  0020               	movlb	0	; select bank0
  7014  1A72  0859               	movf	_new2+1,w
  7015  1A73  0023               	movlb	3	; select bank3
  7016  1A74  00B9               	movwf	(_old2+1)^(0+384)
  7017  1A75  0020               	movlb	0	; select bank0
  7018  1A76  0858               	movf	_new2,w
  7019  1A77  0023               	movlb	3	; select bank3
  7020  1A78  00B8               	movwf	_old2^(0+384)
  7021                           
  7022                           ;ENCODER.C: 172: return 0;
  7023  1A79  3000               	movlw	0
  7024  1A7A  0008               	return
  7025  1A7B                     __end_of_enc2_port:	
  7026                           
  7027                           	psect	text19
  7028  1CCD                     __ptext19:	
  7029 ;; *************** function _SCANENCODER1 *****************
  7030 ;; Defined at:
  7031 ;;		line 12 in file "ENCODER.C"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;		None
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  result          1    7[BANK1 ] unsigned char 
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      unsigned char 
  7038 ;; Registers used:
  7039 ;;		wreg, status,2, status,0, pclath, cstack
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7046 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7047 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7048 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7049 ;;Total ram usage:        2 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:    4
  7052 ;; This function calls:
  7053 ;;		_enc1_port
  7054 ;; This function is called by:
  7055 ;;		_main
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           
  7060                           ;psect for function _SCANENCODER1
  7061  1CCD                     _SCANENCODER1:	
  7062                           
  7063                           ;ENCODER.C: 14: unsigned char result=0;
  7064                           
  7065                           ;incstack = 0
  7066                           ; Regs used in _SCANENCODER1: [wreg+status,2+status,0+pclath+cstack]
  7067  1CCD  0021               	movlb	1	; select bank1
  7068  1CCE  01A7               	clrf	SCANENCODER1@result^(0+128)
  7069                           
  7070                           ;ENCODER.C: 15: if(enc1_port() == 1)
  7071  1CCF  319A  22D3  319C   	fcall	_enc1_port
  7072  1CD2  3A01               	xorlw	1
  7073  1CD3  1D03               	skipz
  7074  1CD4  2D42               	goto	l4417
  7075                           
  7076                           ;ENCODER.C: 16: {
  7077                           ;ENCODER.C: 17: if(firstpulse1==0 && secondpulse1==0)
  7078  1CD5  0022               	movlb	2	; select bank2
  7079  1CD6  0849               	movf	_firstpulse1^(0+256),w
  7080  1CD7  1D03               	btfss	3,2
  7081  1CD8  2CF9               	goto	l4377
  7082  1CD9  0860               	movf	_secondpulse1^(0+256),w
  7083  1CDA  1D03               	btfss	3,2
  7084  1CDB  2CF9               	goto	l4377
  7085                           
  7086                           ;ENCODER.C: 18: {
  7087                           ;ENCODER.C: 19: if(new1==0x02)
  7088  1CDC  3002               	movlw	2
  7089  1CDD  0020               	movlb	0	; select bank0
  7090  1CDE  0656               	xorwf	_new1,w
  7091  1CDF  0457               	iorwf	_new1+1,w
  7092  1CE0  1D03               	btfss	3,2
  7093  1CE1  2CED               	goto	l4367
  7094                           
  7095                           ;ENCODER.C: 20: {
  7096                           ;ENCODER.C: 21: firstpulse1=1;
  7097  1CE2  0022               	movlb	2	; select bank2
  7098  1CE3  01C9               	clrf	_firstpulse1^(0+256)
  7099  1CE4  0AC9               	incf	_firstpulse1^(0+256),f
  7100                           
  7101                           ;ENCODER.C: 22: secondpulse1=0;
  7102  1CE5  01E0               	clrf	_secondpulse1^(0+256)
  7103                           
  7104                           ;ENCODER.C: 23: plus111=1;
  7105  1CE6  01D7               	clrf	_plus111^(0+256)
  7106  1CE7  0AD7               	incf	_plus111^(0+256),f
  7107                           
  7108                           ;ENCODER.C: 24: result='$';
  7109  1CE8  3024               	movlw	36
  7110  1CE9  0021               	movlb	1	; select bank1
  7111  1CEA  00A6               	movwf	??_SCANENCODER1^(0+128)
  7112  1CEB  0826               	movf	??_SCANENCODER1^(0+128),w
  7113  1CEC  00A7               	movwf	SCANENCODER1@result^(0+128)
  7114  1CED                     l4367:	
  7115                           
  7116                           ;ENCODER.C: 25: }
  7117                           ;ENCODER.C: 26: if(new1==0x01)
  7118  1CED  0020               	movlb	0	; select bank0
  7119  1CEE  0356               	decf	_new1,w
  7120  1CEF  0457               	iorwf	_new1+1,w
  7121  1CF0  1D03               	btfss	3,2
  7122  1CF1  2D42               	goto	l4417
  7123                           
  7124                           ;ENCODER.C: 27: {
  7125                           ;ENCODER.C: 28: firstpulse1=1;
  7126  1CF2  0022               	movlb	2	; select bank2
  7127  1CF3  01C9               	clrf	_firstpulse1^(0+256)
  7128  1CF4  0AC9               	incf	_firstpulse1^(0+256),f
  7129                           
  7130                           ;ENCODER.C: 29: secondpulse1=0;
  7131  1CF5  01E0               	clrf	_secondpulse1^(0+256)
  7132                           
  7133                           ;ENCODER.C: 30: minus111=1;
  7134  1CF6  01CF               	clrf	_minus111^(0+256)
  7135  1CF7  0ACF               	incf	_minus111^(0+256),f
  7136  1CF8  2D3D               	goto	l4415
  7137  1CF9                     l4377:	
  7138                           ;ENCODER.C: 32: }
  7139                           ;ENCODER.C: 33: }
  7140                           
  7141                           ;ENCODER.C: 31: result='$';
  7142                           
  7143                           
  7144                           ;ENCODER.C: 34: else if(firstpulse1==1 && secondpulse1==0)
  7145  1CF9  0022               	movlb	2	; select bank2
  7146  1CFA  0349               	decf	_firstpulse1^(0+256),w
  7147  1CFB  1D03               	btfss	3,2
  7148  1CFC  2D0C               	goto	l4387
  7149  1CFD  0860               	movf	_secondpulse1^(0+256),w
  7150  1CFE  1D03               	btfss	3,2
  7151  1CFF  2D0C               	goto	l4387
  7152                           
  7153                           ;ENCODER.C: 35: {
  7154                           ;ENCODER.C: 36: if(new1==0x03)
  7155  1D00  3003               	movlw	3
  7156  1D01  0020               	movlb	0	; select bank0
  7157  1D02  0656               	xorwf	_new1,w
  7158  1D03  0457               	iorwf	_new1+1,w
  7159  1D04  1D03               	btfss	3,2
  7160  1D05  2D42               	goto	l4417
  7161                           
  7162                           ;ENCODER.C: 37: {
  7163                           ;ENCODER.C: 38: firstpulse1=1;
  7164  1D06  0022               	movlb	2	; select bank2
  7165  1D07  01C9               	clrf	_firstpulse1^(0+256)
  7166  1D08  0AC9               	incf	_firstpulse1^(0+256),f
  7167                           
  7168                           ;ENCODER.C: 39: secondpulse1=1;
  7169  1D09  01E0               	clrf	_secondpulse1^(0+256)
  7170  1D0A  0AE0               	incf	_secondpulse1^(0+256),f
  7171  1D0B  2D3D               	goto	l4415
  7172  1D0C                     l4387:	
  7173                           ;ENCODER.C: 41: }
  7174                           ;ENCODER.C: 42: }
  7175                           
  7176                           ;ENCODER.C: 40: result='$';
  7177                           
  7178                           
  7179                           ;ENCODER.C: 43: else if(firstpulse1==1 && secondpulse1==1)
  7180  1D0C  0022               	movlb	2	; select bank2
  7181  1D0D  0349               	decf	_firstpulse1^(0+256),w
  7182  1D0E  1D03               	btfss	3,2
  7183  1D0F  2D39               	goto	l4413
  7184  1D10  0360               	decf	_secondpulse1^(0+256),w
  7185  1D11  1D03               	btfss	3,2
  7186  1D12  2D39               	goto	l4413
  7187                           
  7188                           ;ENCODER.C: 44: {
  7189                           ;ENCODER.C: 45: if(new1==0x01 && plus111==1)
  7190  1D13  0020               	movlb	0	; select bank0
  7191  1D14  0356               	decf	_new1,w
  7192  1D15  0457               	iorwf	_new1+1,w
  7193  1D16  1D03               	btfss	3,2
  7194  1D17  2D24               	goto	l4401
  7195  1D18  0022               	movlb	2	; select bank2
  7196  1D19  0357               	decf	_plus111^(0+256),w
  7197  1D1A  1D03               	btfss	3,2
  7198  1D1B  2D24               	goto	l4401
  7199                           
  7200                           ;ENCODER.C: 46: {
  7201                           ;ENCODER.C: 47: firstpulse1=1;
  7202  1D1C  01C9               	clrf	_firstpulse1^(0+256)
  7203  1D1D  0AC9               	incf	_firstpulse1^(0+256),f
  7204                           
  7205                           ;ENCODER.C: 48: plus111=0;
  7206  1D1E  01D7               	clrf	_plus111^(0+256)
  7207                           
  7208                           ;ENCODER.C: 49: result='+';
  7209  1D1F  302B               	movlw	43
  7210  1D20  0021               	movlb	1	; select bank1
  7211  1D21  00A6               	movwf	??_SCANENCODER1^(0+128)
  7212  1D22  0826               	movf	??_SCANENCODER1^(0+128),w
  7213  1D23  00A7               	movwf	SCANENCODER1@result^(0+128)
  7214  1D24                     l4401:	
  7215                           
  7216                           ;ENCODER.C: 50: }
  7217                           ;ENCODER.C: 51: if(new1==0x02 && minus111==1)
  7218  1D24  3002               	movlw	2
  7219  1D25  0020               	movlb	0	; select bank0
  7220  1D26  0656               	xorwf	_new1,w
  7221  1D27  0457               	iorwf	_new1+1,w
  7222  1D28  1D03               	btfss	3,2
  7223  1D29  2D35               	goto	l4409
  7224  1D2A  0022               	movlb	2	; select bank2
  7225  1D2B  034F               	decf	_minus111^(0+256),w
  7226  1D2C  1D03               	btfss	3,2
  7227  1D2D  2D35               	goto	l4409
  7228                           
  7229                           ;ENCODER.C: 52: {
  7230                           ;ENCODER.C: 53: firstpulse1=0;
  7231  1D2E  01C9               	clrf	_firstpulse1^(0+256)
  7232                           
  7233                           ;ENCODER.C: 54: minus111=0;
  7234  1D2F  01CF               	clrf	_minus111^(0+256)
  7235                           
  7236                           ;ENCODER.C: 55: result='-';
  7237  1D30  302D               	movlw	45
  7238  1D31  0021               	movlb	1	; select bank1
  7239  1D32  00A6               	movwf	??_SCANENCODER1^(0+128)
  7240  1D33  0826               	movf	??_SCANENCODER1^(0+128),w
  7241  1D34  00A7               	movwf	SCANENCODER1@result^(0+128)
  7242  1D35                     l4409:	
  7243                           
  7244                           ;ENCODER.C: 56: }
  7245                           ;ENCODER.C: 57: firstpulse1=0;
  7246  1D35  0022               	movlb	2	; select bank2
  7247  1D36  01C9               	clrf	_firstpulse1^(0+256)
  7248                           
  7249                           ;ENCODER.C: 58: secondpulse1=0;
  7250  1D37  01E0               	clrf	_secondpulse1^(0+256)
  7251                           
  7252                           ;ENCODER.C: 59: }
  7253  1D38  2D42               	goto	l4417
  7254  1D39                     l4413:	
  7255                           
  7256                           ;ENCODER.C: 60: else
  7257                           ;ENCODER.C: 61: {
  7258                           ;ENCODER.C: 62: plus111=0;
  7259  1D39  01D7               	clrf	_plus111^(0+256)
  7260                           
  7261                           ;ENCODER.C: 63: minus111=0;
  7262  1D3A  01CF               	clrf	_minus111^(0+256)
  7263                           
  7264                           ;ENCODER.C: 64: firstpulse1=0;
  7265  1D3B  01C9               	clrf	_firstpulse1^(0+256)
  7266                           
  7267                           ;ENCODER.C: 65: secondpulse1=0;
  7268  1D3C  01E0               	clrf	_secondpulse1^(0+256)
  7269  1D3D                     l4415:	
  7270                           
  7271                           ;ENCODER.C: 66: result='$';
  7272  1D3D  3024               	movlw	36
  7273  1D3E  0021               	movlb	1	; select bank1
  7274  1D3F  00A6               	movwf	??_SCANENCODER1^(0+128)
  7275  1D40  0826               	movf	??_SCANENCODER1^(0+128),w
  7276  1D41  00A7               	movwf	SCANENCODER1@result^(0+128)
  7277  1D42                     l4417:	
  7278                           
  7279                           ;ENCODER.C: 67: }
  7280                           ;ENCODER.C: 68: }
  7281                           ;ENCODER.C: 69: return(result);
  7282  1D42  0021               	movlb	1	; select bank1
  7283  1D43  0827               	movf	SCANENCODER1@result^(0+128),w
  7284  1D44  0008               	return
  7285  1D45                     __end_of_SCANENCODER1:	
  7286                           
  7287                           	psect	text20
  7288  1AD3                     __ptext20:	
  7289 ;; *************** function _enc1_port *****************
  7290 ;; Defined at:
  7291 ;;		line 72 in file "ENCODER.C"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;		None
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  portvalue       2    4[BANK1 ] unsigned int 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  1    wreg      unsigned char 
  7298 ;; Registers used:
  7299 ;;		wreg, status,2, status,0
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7306 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7307 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7308 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7309 ;;Total ram usage:        6 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; Hardware stack levels required when called:    3
  7312 ;; This function calls:
  7313 ;;		Nothing
  7314 ;; This function is called by:
  7315 ;;		_SCANENCODER1
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318                           
  7319                           
  7320                           ;psect for function _enc1_port
  7321  1AD3                     _enc1_port:	
  7322                           
  7323                           ;ENCODER.C: 74: unsigned int portvalue=0x0000;
  7324                           
  7325                           ;incstack = 0
  7326                           ; Regs used in _enc1_port: [wreg+status,2+status,0]
  7327  1AD3  0021               	movlb	1	; select bank1
  7328  1AD4  01A4               	clrf	enc1_port@portvalue^(0+128)
  7329  1AD5  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  7330                           
  7331                           ;ENCODER.C: 75: portvalue=0x0000;
  7332  1AD6  01A4               	clrf	enc1_port@portvalue^(0+128)
  7333  1AD7  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  7334                           
  7335                           ;ENCODER.C: 76: portvalue=PORTAbits.RA4;
  7336  1AD8  0020               	movlb	0	; select bank0
  7337  1AD9  0E0C               	swapf	12,w	;volatile
  7338  1ADA  3901               	andlw	1
  7339  1ADB  0021               	movlb	1	; select bank1
  7340  1ADC  00A0               	movwf	??_enc1_port^(0+128)
  7341  1ADD  01A1               	clrf	(??_enc1_port^(0+128)+1)
  7342  1ADE  0820               	movf	??_enc1_port^(0+128),w
  7343  1ADF  00A4               	movwf	enc1_port@portvalue^(0+128)
  7344  1AE0  0821               	movf	(??_enc1_port+1)^(0+128),w
  7345  1AE1  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7346                           
  7347                           ;ENCODER.C: 77: portvalue=portvalue<<1;
  7348  1AE2  3524               	lslf	enc1_port@portvalue^(0+128),w
  7349  1AE3  00A4               	movwf	enc1_port@portvalue^(0+128)
  7350  1AE4  0D25               	rlf	(enc1_port@portvalue+1)^(0+128),w
  7351  1AE5  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7352                           
  7353                           ;ENCODER.C: 78: portvalue=portvalue|PORTAbits.RA3;
  7354  1AE6  0020               	movlb	0	; select bank0
  7355  1AE7  0C0C               	rrf	12,w	;volatile
  7356  1AE8  0021               	movlb	1	; select bank1
  7357  1AE9  00A0               	movwf	??_enc1_port^(0+128)
  7358  1AEA  0CA0               	rrf	??_enc1_port^(0+128),f
  7359  1AEB  0C20               	rrf	??_enc1_port^(0+128),w
  7360  1AEC  3901               	andlw	1
  7361  1AED  00A1               	movwf	(??_enc1_port+1)^(0+128)
  7362  1AEE  0824               	movf	enc1_port@portvalue^(0+128),w
  7363  1AEF  0421               	iorwf	(??_enc1_port+1)^(0+128),w
  7364  1AF0  00A2               	movwf	(??_enc1_port+2)^(0+128)
  7365  1AF1  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  7366  1AF2  00A3               	movwf	(??_enc1_port+3)^(0+128)
  7367  1AF3  0822               	movf	(??_enc1_port+2)^(0+128),w
  7368  1AF4  00A4               	movwf	enc1_port@portvalue^(0+128)
  7369  1AF5  0823               	movf	(??_enc1_port+3)^(0+128),w
  7370  1AF6  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7371                           
  7372                           ;ENCODER.C: 79: portvalue=(portvalue & 0X0003);
  7373  1AF7  3003               	movlw	3
  7374  1AF8  0524               	andwf	enc1_port@portvalue^(0+128),w
  7375  1AF9  00A4               	movwf	enc1_port@portvalue^(0+128)
  7376  1AFA  3000               	movlw	0
  7377  1AFB  0525               	andwf	(enc1_port@portvalue+1)^(0+128),w
  7378  1AFC  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7379                           
  7380                           ;ENCODER.C: 80: new1=portvalue;
  7381  1AFD  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  7382  1AFE  0020               	movlb	0	; select bank0
  7383  1AFF  00D7               	movwf	_new1+1
  7384  1B00  0021               	movlb	1	; select bank1
  7385  1B01  0824               	movf	enc1_port@portvalue^(0+128),w
  7386  1B02  0020               	movlb	0	; select bank0
  7387  1B03  00D6               	movwf	_new1
  7388                           
  7389                           ;ENCODER.C: 81: temp=new1;
  7390  1B04  0856               	movf	_new1,w
  7391  1B05  0021               	movlb	1	; select bank1
  7392  1B06  00A0               	movwf	??_enc1_port^(0+128)
  7393  1B07  0820               	movf	??_enc1_port^(0+128),w
  7394  1B08  0020               	movlb	0	; select bank0
  7395  1B09  00E3               	movwf	_temp
  7396                           
  7397                           ;ENCODER.C: 82: if((temp ^ old1) !=0)
  7398  1B0A  0023               	movlb	3	; select bank3
  7399  1B0B  0836               	movf	_old1^(0+384),w
  7400  1B0C  0020               	movlb	0	; select bank0
  7401  1B0D  0663               	xorwf	_temp,w
  7402  1B0E  0021               	movlb	1	; select bank1
  7403  1B0F  00A0               	movwf	??_enc1_port^(0+128)
  7404  1B10  0023               	movlb	3	; select bank3
  7405  1B11  0837               	movf	(_old1+1)^(0+384),w
  7406  1B12  0021               	movlb	1	; select bank1
  7407  1B13  00A1               	movwf	(??_enc1_port+1)^(0+128)
  7408  1B14  0820               	movf	??_enc1_port^(0+128),w
  7409  1B15  0421               	iorwf	(??_enc1_port^(0+128)+1),w
  7410  1B16  1903               	btfsc	3,2
  7411  1B17  2B22               	goto	l3829
  7412                           
  7413                           ;ENCODER.C: 83: {
  7414                           ;ENCODER.C: 84: old1=new1;
  7415  1B18  0020               	movlb	0	; select bank0
  7416  1B19  0857               	movf	_new1+1,w
  7417  1B1A  0023               	movlb	3	; select bank3
  7418  1B1B  00B7               	movwf	(_old1+1)^(0+384)
  7419  1B1C  0020               	movlb	0	; select bank0
  7420  1B1D  0856               	movf	_new1,w
  7421  1B1E  0023               	movlb	3	; select bank3
  7422  1B1F  00B6               	movwf	_old1^(0+384)
  7423                           
  7424                           ;ENCODER.C: 85: return 1;
  7425  1B20  3001               	movlw	1
  7426                           
  7427                           ;ENCODER.C: 86: }
  7428  1B21  0008               	return
  7429  1B22                     l3829:	
  7430                           
  7431                           ;ENCODER.C: 87: else
  7432                           ;ENCODER.C: 88: {
  7433                           ;ENCODER.C: 89: old1=new1;
  7434  1B22  0020               	movlb	0	; select bank0
  7435  1B23  0857               	movf	_new1+1,w
  7436  1B24  0023               	movlb	3	; select bank3
  7437  1B25  00B7               	movwf	(_old1+1)^(0+384)
  7438  1B26  0020               	movlb	0	; select bank0
  7439  1B27  0856               	movf	_new1,w
  7440  1B28  0023               	movlb	3	; select bank3
  7441  1B29  00B6               	movwf	_old1^(0+384)
  7442                           
  7443                           ;ENCODER.C: 90: return 0;
  7444  1B2A  3000               	movlw	0
  7445  1B2B  0008               	return
  7446  1B2C                     __end_of_enc1_port:	
  7447                           
  7448                           	psect	text21
  7449  185E                     __ptext21:	
  7450 ;; *************** function _PWM_init *****************
  7451 ;; Defined at:
  7452 ;;		line 1238 in file "main.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;		None
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;		None
  7457 ;; Return value:  Size  Location     Type
  7458 ;;		None               void
  7459 ;; Registers used:
  7460 ;;		wreg, status,2, status,0
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7470 ;;Total ram usage:        0 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; Hardware stack levels required when called:    3
  7473 ;; This function calls:
  7474 ;;		Nothing
  7475 ;; This function is called by:
  7476 ;;		_main
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           
  7481                           ;psect for function _PWM_init
  7482  185E                     _PWM_init:	
  7483                           
  7484                           ;main.c: 1241: CCP1CONbits.CCP1M=13;
  7485                           
  7486                           ;incstack = 0
  7487                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
  7488  185E  0025               	movlb	5	; select bank5
  7489  185F  0813               	movf	19,w	;volatile
  7490  1860  39F0               	andlw	-16
  7491  1861  380D               	iorlw	13
  7492  1862  0093               	movwf	19	;volatile
  7493                           
  7494                           ;main.c: 1242: CCP1CONbits.DC1B=0;
  7495  1863  30CF               	movlw	-49
  7496  1864  0593               	andwf	19,f	;volatile
  7497                           
  7498                           ;main.c: 1243: CCPR1L=0;
  7499  1865  0191               	clrf	17	;volatile
  7500                           
  7501                           ;main.c: 1244: TRISCbits.TRISC2=0;
  7502  1866  0021               	movlb	1	; select bank1
  7503  1867  110E               	bcf	14,2	;volatile
  7504                           
  7505                           ;main.c: 1245: PR2=0xC7;
  7506  1868  30C7               	movlw	199
  7507  1869  0020               	movlb	0	; select bank0
  7508  186A  009B               	movwf	27	;volatile
  7509                           
  7510                           ;main.c: 1246: T2CONbits.T2CKPS=1;
  7511  186B  081C               	movf	28,w	;volatile
  7512  186C  39FC               	andlw	-4
  7513  186D  3801               	iorlw	1
  7514  186E  009C               	movwf	28	;volatile
  7515                           
  7516                           ;main.c: 1247: T2CONbits.T2OUTPS=0;
  7517  186F  3087               	movlw	-121
  7518  1870  059C               	andwf	28,f	;volatile
  7519                           
  7520                           ;main.c: 1248: PIR1bits.TMR2IF=0;
  7521  1871  1091               	bcf	17,1	;volatile
  7522                           
  7523                           ;main.c: 1249: PIE1bits.TMR2IE=1;
  7524  1872  0021               	movlb	1	; select bank1
  7525  1873  1491               	bsf	17,1	;volatile
  7526                           
  7527                           ;main.c: 1250: T2CONbits.TMR2ON=1;
  7528  1874  0020               	movlb	0	; select bank0
  7529  1875  151C               	bsf	28,2	;volatile
  7530  1876  0008               	return
  7531  1877                     __end_of_PWM_init:	
  7532                           
  7533                           	psect	text22
  7534  18D3                     __ptext22:	
  7535 ;; *************** function _Delayms *****************
  7536 ;; Defined at:
  7537 ;;		line 200 in file "DISPLAY.C"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;  delay           2    0[BANK1 ] unsigned int 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;  yyy             2    4[BANK1 ] unsigned int 
  7542 ;;  xxx             2    2[BANK1 ] unsigned int 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;		None               void
  7545 ;; Registers used:
  7546 ;;		wreg, status,2
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7552 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7553 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7555 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7556 ;;Total ram usage:        6 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; Hardware stack levels required when called:    3
  7559 ;; This function calls:
  7560 ;;		Nothing
  7561 ;; This function is called by:
  7562 ;;		_main
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           
  7567                           ;psect for function _Delayms
  7568  18D3                     _Delayms:	
  7569                           
  7570                           ;DISPLAY.C: 203: unsigned int yyy=0,xxx=0;
  7571                           
  7572                           ;incstack = 0
  7573                           ; Regs used in _Delayms: [wreg+status,2]
  7574  18D3  0021               	movlb	1	; select bank1
  7575  18D4  01A4               	clrf	Delayms@yyy^(0+128)
  7576  18D5  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  7577  18D6  01A2               	clrf	Delayms@xxx^(0+128)
  7578  18D7  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  7579                           
  7580                           ;DISPLAY.C: 204: for(xxx=0;xxx<delay;xxx++)
  7581  18D8  01A2               	clrf	Delayms@xxx^(0+128)
  7582  18D9  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  7583  18DA                     l501:	
  7584  18DA  0821               	movf	(Delayms@delay+1)^(0+128),w
  7585  18DB  0223               	subwf	(Delayms@xxx+1)^(0+128),w
  7586  18DC  1D03               	skipz
  7587  18DD  28E0               	goto	u5925
  7588  18DE  0820               	movf	Delayms@delay^(0+128),w
  7589  18DF  0222               	subwf	Delayms@xxx^(0+128),w
  7590  18E0                     u5925:	
  7591  18E0  1803               	btfsc	3,0
  7592  18E1  0008               	return
  7593                           
  7594                           ;DISPLAY.C: 205: {
  7595                           ;DISPLAY.C: 206: for(yyy=0;yyy<138;yyy++);
  7596  18E2  01A4               	clrf	Delayms@yyy^(0+128)
  7597  18E3  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  7598  18E4  3000               	movlw	0
  7599  18E5  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  7600  18E6  308A               	movlw	138
  7601  18E7  1903               	skipnz
  7602  18E8  0224               	subwf	Delayms@yyy^(0+128),w
  7603  18E9  1803               	btfsc	3,0
  7604  18EA  28F6               	goto	l4347
  7605  18EB                     l4345:	
  7606  18EB  3001               	movlw	1
  7607  18EC  07A4               	addwf	Delayms@yyy^(0+128),f
  7608  18ED  3000               	movlw	0
  7609  18EE  3DA5               	addwfc	(Delayms@yyy+1)^(0+128),f
  7610  18EF  3000               	movlw	0
  7611  18F0  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  7612  18F1  308A               	movlw	138
  7613  18F2  1903               	skipnz
  7614  18F3  0224               	subwf	Delayms@yyy^(0+128),w
  7615  18F4  1C03               	skipc
  7616  18F5  28EB               	goto	l4345
  7617  18F6                     l4347:	
  7618  18F6  3001               	movlw	1
  7619  18F7  07A2               	addwf	Delayms@xxx^(0+128),f
  7620  18F8  3000               	movlw	0
  7621  18F9  3DA3               	addwfc	(Delayms@xxx+1)^(0+128),f
  7622  18FA  28DA               	goto	l501
  7623  18FB                     __end_of_Delayms:	
  7624                           
  7625                           	psect	text23
  7626  1471                     __ptext23:	
  7627 ;; *************** function _Adaptive_base_pid *****************
  7628 ;; Defined at:
  7629 ;;		line 34 in file "MOTORCONTROL.C"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;		None
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;		None               void
  7636 ;; Registers used:
  7637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7644 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7645 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7646 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7647 ;;Total ram usage:       18 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; Hardware stack levels required when called:    5
  7650 ;; This function calls:
  7651 ;;		_Update_PWM
  7652 ;;		___aldiv
  7653 ;;		___altoft
  7654 ;;		___ftadd
  7655 ;;		___ftdiv
  7656 ;;		___ftge
  7657 ;;		___ftmul
  7658 ;;		___ftneg
  7659 ;;		___fttol
  7660 ;;		___lwtoft
  7661 ;;		___wmul
  7662 ;; This function is called by:
  7663 ;;		_main
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           
  7668                           ;psect for function _Adaptive_base_pid
  7669  1471                     _Adaptive_base_pid:	
  7670                           
  7671                           ;MOTORCONTROL.C: 39: pidParams2.Kp2=2;
  7672                           
  7673                           ;incstack = 0
  7674                           ; Regs used in _Adaptive_base_pid: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7675  1471  3096               	movlw	150
  7676  1472  0086               	movwf	6
  7677  1473  3027               	movlw	39
  7678  1474  0087               	movwf	7
  7679  1475  3000               	movlw	0
  7680  1476  3FC0               	movwi [0]fsr1
  7681  1477  3000               	movlw	0
  7682  1478  3FC1               	movwi [1]fsr1
  7683  1479  3040               	movlw	64
  7684  147A  3FC2               	movwi [2]fsr1
  7685                           
  7686                           ;MOTORCONTROL.C: 40: pidParams2.Ki2=1;
  7687  147B  3096               	movlw	150
  7688  147C  0086               	movwf	6
  7689  147D  3027               	movlw	39
  7690  147E  0087               	movwf	7
  7691  147F  3143               	addfsr 1,3
  7692  1480  3000               	movlw	0
  7693  1481  3FC0               	movwi [0]fsr1
  7694  1482  3080               	movlw	128
  7695  1483  3FC1               	movwi [1]fsr1
  7696  1484  303F               	movlw	63
  7697  1485  3FC2               	movwi [2]fsr1
  7698                           
  7699                           ;MOTORCONTROL.C: 41: pidParams2.Kd2=0;
  7700  1486  3096               	movlw	150
  7701  1487  0086               	movwf	6
  7702  1488  3027               	movlw	39
  7703  1489  0087               	movwf	7
  7704  148A  3146               	addfsr 1,6
  7705  148B  3000               	movlw	0
  7706  148C  3FC0               	movwi [0]fsr1
  7707  148D  3000               	movlw	0
  7708  148E  3FC1               	movwi [1]fsr1
  7709  148F  3000               	movlw	0
  7710  1490  3FC2               	movwi [2]fsr1
  7711                           
  7712                           ;MOTORCONTROL.C: 51: pidParams2.ReferenceSetpoint2=setpfreq;
  7713  1491  0024               	movlb	4	; select bank4
  7714  1492  084C               	movf	_setpfreq^(0+512),w
  7715  1493  0021               	movlb	1	; select bank1
  7716  1494  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7717  1495  0024               	movlb	4	; select bank4
  7718  1496  084D               	movf	(_setpfreq+1)^(0+512),w
  7719  1497  0021               	movlb	1	; select bank1
  7720  1498  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7721  1499  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7722  149A  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7723  149B  30C4               	movlw	196
  7724  149C  0086               	movwf	6
  7725  149D  3027               	movlw	39
  7726  149E  0087               	movwf	7
  7727  149F  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7728  14A0  3FC0               	movwi [0]fsr1
  7729  14A1  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7730  14A2  3FC1               	movwi [1]fsr1
  7731  14A3  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7732  14A4  3FC2               	movwi [2]fsr1
  7733  14A5  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7734  14A6  3FC3               	movwi [3]fsr1
  7735                           
  7736                           ;MOTORCONTROL.C: 52: pidParams2.feedback2=Fltpfreq;
  7737  14A7  0022               	movlb	2	; select bank2
  7738  14A8  0820               	movf	_Fltpfreq^(0+256),w
  7739  14A9  0021               	movlb	1	; select bank1
  7740  14AA  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7741  14AB  0022               	movlb	2	; select bank2
  7742  14AC  0821               	movf	(_Fltpfreq+1)^(0+256),w
  7743  14AD  0021               	movlb	1	; select bank1
  7744  14AE  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7745  14AF  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7746  14B0  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7747  14B1  30C8               	movlw	200
  7748  14B2  0086               	movwf	6
  7749  14B3  3027               	movlw	39
  7750  14B4  0087               	movwf	7
  7751  14B5  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7752  14B6  3FC0               	movwi [0]fsr1
  7753  14B7  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7754  14B8  3FC1               	movwi [1]fsr1
  7755  14B9  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7756  14BA  3FC2               	movwi [2]fsr1
  7757  14BB  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7758  14BC  3FC3               	movwi [3]fsr1
  7759                           
  7760                           ;MOTORCONTROL.C: 53: disp1term=pidParams2.ReferenceSetpoint2;
  7761  14BD  30C4               	movlw	196
  7762  14BE  0086               	movwf	6
  7763  14BF  3027               	movlw	39
  7764  14C0  0087               	movwf	7
  7765  14C1  3F40               	moviw [0]fsr1
  7766  14C2  0024               	movlb	4	; select bank4
  7767  14C3  00B6               	movwf	_disp1term^(0+512)
  7768  14C4  3F41               	moviw [1]fsr1
  7769  14C5  00B7               	movwf	(_disp1term+1)^(0+512)
  7770                           
  7771                           ;MOTORCONTROL.C: 54: disp2term=pidParams2.feedback2;
  7772  14C6  30C8               	movlw	200
  7773  14C7  0086               	movwf	6
  7774  14C8  3027               	movlw	39
  7775  14C9  0087               	movwf	7
  7776  14CA  3F40               	moviw [0]fsr1
  7777  14CB  00B8               	movwf	_disp2term^(0+512)
  7778  14CC  3F41               	moviw [1]fsr1
  7779  14CD  00B9               	movwf	(_disp2term+1)^(0+512)
  7780                           
  7781                           ;MOTORCONTROL.C: 56: pidParams2.error2 = pidParams2.ReferenceSetpoint2 - pidParams2.feed
      +                          back2;
  7782  14CE  30C4               	movlw	196
  7783  14CF  0086               	movwf	6
  7784  14D0  3027               	movlw	39
  7785  14D1  0087               	movwf	7
  7786  14D2  3F40               	moviw [0]fsr1
  7787  14D3  0021               	movlb	1	; select bank1
  7788  14D4  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7789  14D5  3F41               	moviw [1]fsr1
  7790  14D6  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7791  14D7  3F42               	moviw [2]fsr1
  7792  14D8  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7793  14D9  3F43               	moviw [3]fsr1
  7794  14DA  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7795  14DB  30C8               	movlw	200
  7796  14DC  0086               	movwf	6
  7797  14DD  3027               	movlw	39
  7798  14DE  0087               	movwf	7
  7799  14DF  3F40               	moviw [0]fsr1
  7800  14E0  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  7801  14E1  3F41               	moviw [1]fsr1
  7802  14E2  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  7803  14E3  3F42               	moviw [2]fsr1
  7804  14E4  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  7805  14E5  3F43               	moviw [3]fsr1
  7806  14E6  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  7807  14E7  09DF               	comf	(??_Adaptive_base_pid+4)^(0+128),f
  7808  14E8  09E0               	comf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7809  14E9  09E1               	comf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7810  14EA  09E2               	comf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7811  14EB  0ADF               	incf	(??_Adaptive_base_pid+4)^(0+128),f
  7812  14EC  1903               	skipnz
  7813  14ED  0AE0               	incf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7814  14EE  1903               	skipnz
  7815  14EF  0AE1               	incf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7816  14F0  1903               	skipnz
  7817  14F1  0AE2               	incf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7818  14F2  085F               	movf	(??_Adaptive_base_pid+4)^(0+128),w
  7819  14F3  07DB               	addwf	??_Adaptive_base_pid^(0+128),f
  7820  14F4  0860               	movf	(??_Adaptive_base_pid+5)^(0+128),w
  7821  14F5  3DDC               	addwfc	(??_Adaptive_base_pid^(0+128)+1),f
  7822  14F6  0861               	movf	(??_Adaptive_base_pid+6)^(0+128),w
  7823  14F7  3DDD               	addwfc	(??_Adaptive_base_pid^(0+128)+2),f
  7824  14F8  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  7825  14F9  3DDE               	addwfc	(??_Adaptive_base_pid^(0+128)+3),f
  7826  14FA  3096               	movlw	150
  7827  14FB  0086               	movwf	6
  7828  14FC  3027               	movlw	39
  7829  14FD  0087               	movwf	7
  7830  14FE  314C               	addfsr 1,12
  7831  14FF  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7832  1500  3FC0               	movwi [0]fsr1
  7833  1501  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7834  1502  3FC1               	movwi [1]fsr1
  7835  1503  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7836  1504  3FC2               	movwi [2]fsr1
  7837  1505  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7838  1506  3FC3               	movwi [3]fsr1
  7839                           
  7840                           ;MOTORCONTROL.C: 57: pidParams2.feedback2=0;
  7841  1507  30C8               	movlw	200
  7842  1508  0086               	movwf	6
  7843  1509  3027               	movlw	39
  7844  150A  0087               	movwf	7
  7845  150B  3000               	movlw	0
  7846  150C  3FC0               	movwi [0]fsr1
  7847  150D  3FC1               	movwi [1]fsr1
  7848  150E  3FC2               	movwi [2]fsr1
  7849  150F  3FC3               	movwi [3]fsr1
  7850                           
  7851                           ;MOTORCONTROL.C: 58: pidParams2.outmax2=50000;
  7852  1510  30C0               	movlw	192
  7853  1511  0086               	movwf	6
  7854  1512  3027               	movlw	39
  7855  1513  0087               	movwf	7
  7856  1514  3050               	movlw	80
  7857  1515  3FC0               	movwi [0]fsr1
  7858  1516  30C3               	movlw	195
  7859  1517  3FC1               	movwi [1]fsr1
  7860  1518  3000               	movlw	0
  7861  1519  3FC2               	movwi [2]fsr1
  7862  151A  3000               	movlw	0
  7863  151B  3FC3               	movwi [3]fsr1
  7864                           
  7865                           ;MOTORCONTROL.C: 59: scalefactor2=66.0;
  7866  151C  3042               	movlw	66
  7867  151D  0023               	movlb	3	; select bank3
  7868  151E  00E8               	movwf	_scalefactor2^(0+384)
  7869  151F  3000               	movlw	0
  7870  1520  00E9               	movwf	(_scalefactor2^(0+384)+1)
  7871                           
  7872                           ;MOTORCONTROL.C: 62: {
  7873                           ;MOTORCONTROL.C: 63: error_new =pidParams2.error2;
  7874  1521  3096               	movlw	150
  7875  1522  0086               	movwf	6
  7876  1523  3027               	movlw	39
  7877  1524  0087               	movwf	7
  7878  1525  314C               	addfsr 1,12
  7879  1526  3F40               	moviw [0]fsr1
  7880  1527  0021               	movlb	1	; select bank1
  7881  1528  00A8               	movwf	___altoft@c^(0+128)
  7882  1529  3F41               	moviw [1]fsr1
  7883  152A  00A9               	movwf	(___altoft@c+1)^(0+128)
  7884  152B  3F42               	moviw [2]fsr1
  7885  152C  00AA               	movwf	(___altoft@c+2)^(0+128)
  7886  152D  3F43               	moviw [3]fsr1
  7887  152E  00AB               	movwf	(___altoft@c+3)^(0+128)
  7888  152F  3199  2191  3194   	fcall	___altoft
  7889  1532  0021               	movlb	1	; select bank1
  7890  1533  0828               	movf	?___altoft^(0+128),w
  7891  1534  0023               	movlb	3	; select bank3
  7892  1535  00A0               	movwf	_error_new^(0+384)
  7893  1536  0021               	movlb	1	; select bank1
  7894  1537  0829               	movf	(?___altoft+1)^(0+128),w
  7895  1538  0023               	movlb	3	; select bank3
  7896  1539  00A1               	movwf	(_error_new+1)^(0+384)
  7897  153A  0021               	movlb	1	; select bank1
  7898  153B  082A               	movf	(?___altoft+2)^(0+128),w
  7899  153C  0023               	movlb	3	; select bank3
  7900  153D  00A2               	movwf	(_error_new+2)^(0+384)
  7901                           
  7902                           ;MOTORCONTROL.C: 64: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7903  153E  3096               	movlw	150
  7904  153F  0086               	movwf	6
  7905  1540  3027               	movlw	39
  7906  1541  0087               	movwf	7
  7907  1542  3143               	addfsr 1,3
  7908  1543  3F40               	moviw [0]fsr1
  7909  1544  0021               	movlb	1	; select bank1
  7910  1545  00B5               	movwf	___ftmul@f1^(0+128)
  7911  1546  3F41               	moviw [1]fsr1
  7912  1547  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7913  1548  3F42               	moviw [2]fsr1
  7914  1549  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7915  154A  0023               	movlb	3	; select bank3
  7916  154B  0823               	movf	_error_old^(0+384),w
  7917  154C  0021               	movlb	1	; select bank1
  7918  154D  00A8               	movwf	___ftadd@f1^(0+128)
  7919  154E  0023               	movlb	3	; select bank3
  7920  154F  0824               	movf	(_error_old+1)^(0+384),w
  7921  1550  0021               	movlb	1	; select bank1
  7922  1551  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7923  1552  0023               	movlb	3	; select bank3
  7924  1553  0825               	movf	(_error_old+2)^(0+384),w
  7925  1554  0021               	movlb	1	; select bank1
  7926  1555  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7927  1556  0023               	movlb	3	; select bank3
  7928  1557  0820               	movf	_error_new^(0+384),w
  7929  1558  0021               	movlb	1	; select bank1
  7930  1559  00AB               	movwf	___ftadd@f2^(0+128)
  7931  155A  0023               	movlb	3	; select bank3
  7932  155B  0821               	movf	(_error_new+1)^(0+384),w
  7933  155C  0021               	movlb	1	; select bank1
  7934  155D  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7935  155E  0023               	movlb	3	; select bank3
  7936  155F  0822               	movf	(_error_new+2)^(0+384),w
  7937  1560  0021               	movlb	1	; select bank1
  7938  1561  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7939  1562  3192  225F  3194   	fcall	___ftadd
  7940  1565  0021               	movlb	1	; select bank1
  7941  1566  0828               	movf	?___ftadd^(0+128),w
  7942  1567  00B8               	movwf	___ftmul@f2^(0+128)
  7943  1568  0829               	movf	(?___ftadd+1)^(0+128),w
  7944  1569  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7945  156A  082A               	movf	(?___ftadd+2)^(0+128),w
  7946  156B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7947  156C  3187  2717  3194   	fcall	___ftmul
  7948  156F  0021               	movlb	1	; select bank1
  7949  1570  0835               	movf	?___ftmul^(0+128),w
  7950  1571  00E4               	movwf	_Adaptive_base_pid$1788^(0+128)
  7951  1572  0836               	movf	(?___ftmul+1)^(0+128),w
  7952  1573  00E5               	movwf	(_Adaptive_base_pid$1788+1)^(0+128)
  7953  1574  0837               	movf	(?___ftmul+2)^(0+128),w
  7954  1575  00E6               	movwf	(_Adaptive_base_pid$1788+2)^(0+128)
  7955                           
  7956                           ;MOTORCONTROL.C: 64: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7957  1576  0023               	movlb	3	; select bank3
  7958  1577  0829               	movf	_integral_old^(0+384),w
  7959  1578  0021               	movlb	1	; select bank1
  7960  1579  00A8               	movwf	___ftadd@f1^(0+128)
  7961  157A  0023               	movlb	3	; select bank3
  7962  157B  082A               	movf	(_integral_old+1)^(0+384),w
  7963  157C  0021               	movlb	1	; select bank1
  7964  157D  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7965  157E  0023               	movlb	3	; select bank3
  7966  157F  082B               	movf	(_integral_old+2)^(0+384),w
  7967  1580  0021               	movlb	1	; select bank1
  7968  1581  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7969  1582  3000               	movlw	0
  7970  1583  00C5               	movwf	___ftdiv@f2^(0+128)
  7971  1584  3000               	movlw	0
  7972  1585  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  7973  1586  3040               	movlw	64
  7974  1587  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  7975  1588  0023               	movlb	3	; select bank3
  7976  1589  0861               	movf	_Tsampling^(0+384),w
  7977  158A  0021               	movlb	1	; select bank1
  7978  158B  00B5               	movwf	___ftmul@f1^(0+128)
  7979  158C  0023               	movlb	3	; select bank3
  7980  158D  0862               	movf	(_Tsampling+1)^(0+384),w
  7981  158E  0021               	movlb	1	; select bank1
  7982  158F  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7983  1590  0023               	movlb	3	; select bank3
  7984  1591  0863               	movf	(_Tsampling+2)^(0+384),w
  7985  1592  0021               	movlb	1	; select bank1
  7986  1593  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7987  1594  0864               	movf	_Adaptive_base_pid$1788^(0+128),w
  7988  1595  00B8               	movwf	___ftmul@f2^(0+128)
  7989  1596  0865               	movf	(_Adaptive_base_pid$1788+1)^(0+128),w
  7990  1597  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7991  1598  0866               	movf	(_Adaptive_base_pid$1788+2)^(0+128),w
  7992  1599  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7993  159A  3187  2717  3194   	fcall	___ftmul
  7994  159D  0021               	movlb	1	; select bank1
  7995  159E  0835               	movf	?___ftmul^(0+128),w
  7996  159F  00C8               	movwf	___ftdiv@f1^(0+128)
  7997  15A0  0836               	movf	(?___ftmul+1)^(0+128),w
  7998  15A1  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  7999  15A2  0837               	movf	(?___ftmul+2)^(0+128),w
  8000  15A3  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  8001  15A4  3190  200C  3194   	fcall	___ftdiv
  8002  15A7  0021               	movlb	1	; select bank1
  8003  15A8  0845               	movf	?___ftdiv^(0+128),w
  8004  15A9  00AB               	movwf	___ftadd@f2^(0+128)
  8005  15AA  0846               	movf	(?___ftdiv+1)^(0+128),w
  8006  15AB  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  8007  15AC  0847               	movf	(?___ftdiv+2)^(0+128),w
  8008  15AD  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  8009  15AE  3192  225F  3194   	fcall	___ftadd
  8010  15B1  0021               	movlb	1	; select bank1
  8011  15B2  0828               	movf	?___ftadd^(0+128),w
  8012  15B3  0023               	movlb	3	; select bank3
  8013  15B4  00A6               	movwf	_integral_new^(0+384)
  8014  15B5  0021               	movlb	1	; select bank1
  8015  15B6  0829               	movf	(?___ftadd+1)^(0+128),w
  8016  15B7  0023               	movlb	3	; select bank3
  8017  15B8  00A7               	movwf	(_integral_new+1)^(0+384)
  8018  15B9  0021               	movlb	1	; select bank1
  8019  15BA  082A               	movf	(?___ftadd+2)^(0+128),w
  8020  15BB  0023               	movlb	3	; select bank3
  8021  15BC  00A8               	movwf	(_integral_new+2)^(0+384)
  8022                           
  8023                           ;MOTORCONTROL.C: 66: if((integral_new > pidParams2.outmax2) || (integral_new < minoutmax
      +                          ))
  8024  15BD  30C0               	movlw	192
  8025  15BE  0086               	movwf	6
  8026  15BF  3027               	movlw	39
  8027  15C0  0087               	movwf	7
  8028  15C1  3F40               	moviw [0]fsr1
  8029  15C2  0021               	movlb	1	; select bank1
  8030  15C3  00A8               	movwf	___altoft@c^(0+128)
  8031  15C4  3F41               	moviw [1]fsr1
  8032  15C5  00A9               	movwf	(___altoft@c+1)^(0+128)
  8033  15C6  3F42               	moviw [2]fsr1
  8034  15C7  00AA               	movwf	(___altoft@c+2)^(0+128)
  8035  15C8  3F43               	moviw [3]fsr1
  8036  15C9  00AB               	movwf	(___altoft@c+3)^(0+128)
  8037  15CA  3199  2191  3194   	fcall	___altoft
  8038  15CD  0021               	movlb	1	; select bank1
  8039  15CE  0828               	movf	?___altoft^(0+128),w
  8040  15CF  00B0               	movwf	___ftge@ff1^(0+128)
  8041  15D0  0829               	movf	(?___altoft+1)^(0+128),w
  8042  15D1  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  8043  15D2  082A               	movf	(?___altoft+2)^(0+128),w
  8044  15D3  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  8045  15D4  0023               	movlb	3	; select bank3
  8046  15D5  0826               	movf	_integral_new^(0+384),w
  8047  15D6  0021               	movlb	1	; select bank1
  8048  15D7  00B3               	movwf	___ftge@ff2^(0+128)
  8049  15D8  0023               	movlb	3	; select bank3
  8050  15D9  0827               	movf	(_integral_new+1)^(0+384),w
  8051  15DA  0021               	movlb	1	; select bank1
  8052  15DB  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  8053  15DC  0023               	movlb	3	; select bank3
  8054  15DD  0828               	movf	(_integral_new+2)^(0+384),w
  8055  15DE  0021               	movlb	1	; select bank1
  8056  15DF  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  8057  15E0  3199  2155  3194   	fcall	___ftge
  8058  15E3  1C03               	btfss	3,0
  8059  15E4  2E02               	goto	l4505
  8060  15E5  0023               	movlb	3	; select bank3
  8061  15E6  0826               	movf	_integral_new^(0+384),w
  8062  15E7  0021               	movlb	1	; select bank1
  8063  15E8  00B0               	movwf	___ftge@ff1^(0+128)
  8064  15E9  0023               	movlb	3	; select bank3
  8065  15EA  0827               	movf	(_integral_new+1)^(0+384),w
  8066  15EB  0021               	movlb	1	; select bank1
  8067  15EC  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  8068  15ED  0023               	movlb	3	; select bank3
  8069  15EE  0828               	movf	(_integral_new+2)^(0+384),w
  8070  15EF  0021               	movlb	1	; select bank1
  8071  15F0  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  8072  15F1  0024               	movlb	4	; select bank4
  8073  15F2  0827               	movf	_minoutmax^(0+512),w
  8074  15F3  0021               	movlb	1	; select bank1
  8075  15F4  00B3               	movwf	___ftge@ff2^(0+128)
  8076  15F5  0024               	movlb	4	; select bank4
  8077  15F6  0828               	movf	(_minoutmax+1)^(0+512),w
  8078  15F7  0021               	movlb	1	; select bank1
  8079  15F8  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  8080  15F9  0024               	movlb	4	; select bank4
  8081  15FA  0829               	movf	(_minoutmax+2)^(0+512),w
  8082  15FB  0021               	movlb	1	; select bank1
  8083  15FC  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  8084  15FD  3199  2155  3194   	fcall	___ftge
  8085  1600  1803               	btfsc	3,0
  8086  1601  2E09               	goto	l4507
  8087  1602                     l4505:	
  8088                           
  8089                           ;MOTORCONTROL.C: 67: integral_new = integral_old;
  8090  1602  0023               	movlb	3	; select bank3
  8091  1603  0829               	movf	_integral_old^(0+384),w
  8092  1604  00A6               	movwf	_integral_new^(0+384)
  8093  1605  082A               	movf	(_integral_old+1)^(0+384),w
  8094  1606  00A7               	movwf	(_integral_new+1)^(0+384)
  8095  1607  082B               	movf	(_integral_old+2)^(0+384),w
  8096  1608  00A8               	movwf	(_integral_new+2)^(0+384)
  8097  1609                     l4507:	
  8098                           
  8099                           ;MOTORCONTROL.C: 69: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  8100  1609  0023               	movlb	3	; select bank3
  8101  160A  0861               	movf	_Tsampling^(0+384),w
  8102  160B  0021               	movlb	1	; select bank1
  8103  160C  00C5               	movwf	___ftdiv@f2^(0+128)
  8104  160D  0023               	movlb	3	; select bank3
  8105  160E  0862               	movf	(_Tsampling+1)^(0+384),w
  8106  160F  0021               	movlb	1	; select bank1
  8107  1610  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  8108  1611  0023               	movlb	3	; select bank3
  8109  1612  0863               	movf	(_Tsampling+2)^(0+384),w
  8110  1613  0021               	movlb	1	; select bank1
  8111  1614  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  8112  1615  3096               	movlw	150
  8113  1616  0086               	movwf	6
  8114  1617  3027               	movlw	39
  8115  1618  0087               	movwf	7
  8116  1619  3146               	addfsr 1,6
  8117  161A  3F40               	moviw [0]fsr1
  8118  161B  00B5               	movwf	___ftmul@f1^(0+128)
  8119  161C  3F41               	moviw [1]fsr1
  8120  161D  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  8121  161E  3F42               	moviw [2]fsr1
  8122  161F  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  8123  1620  0023               	movlb	3	; select bank3
  8124  1621  0820               	movf	_error_new^(0+384),w
  8125  1622  0021               	movlb	1	; select bank1
  8126  1623  00A8               	movwf	___ftadd@f1^(0+128)
  8127  1624  0023               	movlb	3	; select bank3
  8128  1625  0821               	movf	(_error_new+1)^(0+384),w
  8129  1626  0021               	movlb	1	; select bank1
  8130  1627  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  8131  1628  0023               	movlb	3	; select bank3
  8132  1629  0822               	movf	(_error_new+2)^(0+384),w
  8133  162A  0021               	movlb	1	; select bank1
  8134  162B  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  8135  162C  0023               	movlb	3	; select bank3
  8136  162D  0823               	movf	_error_old^(0+384),w
  8137  162E  0021               	movlb	1	; select bank1
  8138  162F  00A0               	movwf	___ftneg@f1^(0+128)
  8139  1630  0023               	movlb	3	; select bank3
  8140  1631  0824               	movf	(_error_old+1)^(0+384),w
  8141  1632  0021               	movlb	1	; select bank1
  8142  1633  00A1               	movwf	(___ftneg@f1+1)^(0+128)
  8143  1634  0023               	movlb	3	; select bank3
  8144  1635  0825               	movf	(_error_old+2)^(0+384),w
  8145  1636  0021               	movlb	1	; select bank1
  8146  1637  00A2               	movwf	(___ftneg@f1+2)^(0+128)
  8147  1638  31A7  278F  3194   	fcall	___ftneg
  8148  163B  0021               	movlb	1	; select bank1
  8149  163C  0820               	movf	?___ftneg^(0+128),w
  8150  163D  00AB               	movwf	___ftadd@f2^(0+128)
  8151  163E  0821               	movf	(?___ftneg+1)^(0+128),w
  8152  163F  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  8153  1640  0822               	movf	(?___ftneg+2)^(0+128),w
  8154  1641  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  8155  1642  3192  225F  3194   	fcall	___ftadd
  8156  1645  0021               	movlb	1	; select bank1
  8157  1646  0828               	movf	?___ftadd^(0+128),w
  8158  1647  00B8               	movwf	___ftmul@f2^(0+128)
  8159  1648  0829               	movf	(?___ftadd+1)^(0+128),w
  8160  1649  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  8161  164A  082A               	movf	(?___ftadd+2)^(0+128),w
  8162  164B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  8163  164C  3187  2717  3194   	fcall	___ftmul
  8164  164F  0021               	movlb	1	; select bank1
  8165  1650  0835               	movf	?___ftmul^(0+128),w
  8166  1651  00C8               	movwf	___ftdiv@f1^(0+128)
  8167  1652  0836               	movf	(?___ftmul+1)^(0+128),w
  8168  1653  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  8169  1654  0837               	movf	(?___ftmul+2)^(0+128),w
  8170  1655  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  8171  1656  3190  200C  3194   	fcall	___ftdiv
  8172  1659  0021               	movlb	1	; select bank1
  8173  165A  0845               	movf	?___ftdiv^(0+128),w
  8174  165B  00E7               	movwf	_Adaptive_base_pid$1789^(0+128)
  8175  165C  0846               	movf	(?___ftdiv+1)^(0+128),w
  8176  165D  00E8               	movwf	(_Adaptive_base_pid$1789+1)^(0+128)
  8177  165E  0847               	movf	(?___ftdiv+2)^(0+128),w
  8178  165F  00E9               	movwf	(_Adaptive_base_pid$1789+2)^(0+128)
  8179                           
  8180                           ;MOTORCONTROL.C: 69: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  8181  1660  0867               	movf	_Adaptive_base_pid$1789^(0+128),w
  8182  1661  00A8               	movwf	___ftadd@f1^(0+128)
  8183  1662  0868               	movf	(_Adaptive_base_pid$1789+1)^(0+128),w
  8184  1663  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  8185  1664  0869               	movf	(_Adaptive_base_pid$1789+2)^(0+128),w
  8186  1665  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  8187  1666  0023               	movlb	3	; select bank3
  8188  1667  0820               	movf	_error_new^(0+384),w
  8189  1668  0021               	movlb	1	; select bank1
  8190  1669  00B5               	movwf	___ftmul@f1^(0+128)
  8191  166A  0023               	movlb	3	; select bank3
  8192  166B  0821               	movf	(_error_new+1)^(0+384),w
  8193  166C  0021               	movlb	1	; select bank1
  8194  166D  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  8195  166E  0023               	movlb	3	; select bank3
  8196  166F  0822               	movf	(_error_new+2)^(0+384),w
  8197  1670  0021               	movlb	1	; select bank1
  8198  1671  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  8199  1672  3096               	movlw	150
  8200  1673  0086               	movwf	6
  8201  1674  3027               	movlw	39
  8202  1675  0087               	movwf	7
  8203  1676  3F40               	moviw [0]fsr1
  8204  1677  00B8               	movwf	___ftmul@f2^(0+128)
  8205  1678  3F41               	moviw [1]fsr1
  8206  1679  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  8207  167A  3F42               	moviw [2]fsr1
  8208  167B  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  8209  167C  3187  2717  3194   	fcall	___ftmul
  8210  167F  0021               	movlb	1	; select bank1
  8211  1680  0835               	movf	?___ftmul^(0+128),w
  8212  1681  00AB               	movwf	___ftadd@f2^(0+128)
  8213  1682  0836               	movf	(?___ftmul+1)^(0+128),w
  8214  1683  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  8215  1684  0837               	movf	(?___ftmul+2)^(0+128),w
  8216  1685  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  8217  1686  3192  225F  3194   	fcall	___ftadd
  8218  1689  0021               	movlb	1	; select bank1
  8219  168A  0828               	movf	?___ftadd^(0+128),w
  8220  168B  00EA               	movwf	_Adaptive_base_pid$1790^(0+128)
  8221  168C  0829               	movf	(?___ftadd+1)^(0+128),w
  8222  168D  00EB               	movwf	(_Adaptive_base_pid$1790+1)^(0+128)
  8223  168E  082A               	movf	(?___ftadd+2)^(0+128),w
  8224  168F  00EC               	movwf	(_Adaptive_base_pid$1790+2)^(0+128)
  8225                           
  8226                           ;MOTORCONTROL.C: 69: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  8227  1690  0023               	movlb	3	; select bank3
  8228  1691  0826               	movf	_integral_new^(0+384),w
  8229  1692  0021               	movlb	1	; select bank1
  8230  1693  00A8               	movwf	___ftadd@f1^(0+128)
  8231  1694  0023               	movlb	3	; select bank3
  8232  1695  0827               	movf	(_integral_new+1)^(0+384),w
  8233  1696  0021               	movlb	1	; select bank1
  8234  1697  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  8235  1698  0023               	movlb	3	; select bank3
  8236  1699  0828               	movf	(_integral_new+2)^(0+384),w
  8237  169A  0021               	movlb	1	; select bank1
  8238  169B  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  8239  169C  086A               	movf	_Adaptive_base_pid$1790^(0+128),w
  8240  169D  00AB               	movwf	___ftadd@f2^(0+128)
  8241  169E  086B               	movf	(_Adaptive_base_pid$1790+1)^(0+128),w
  8242  169F  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  8243  16A0  086C               	movf	(_Adaptive_base_pid$1790+2)^(0+128),w
  8244  16A1  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  8245  16A2  3192  225F  3194   	fcall	___ftadd
  8246  16A5  0021               	movlb	1	; select bank1
  8247  16A6  0828               	movf	?___ftadd^(0+128),w
  8248  16A7  0024               	movlb	4	; select bank4
  8249  16A8  00A4               	movwf	_controller_out^(0+512)
  8250  16A9  0021               	movlb	1	; select bank1
  8251  16AA  0829               	movf	(?___ftadd+1)^(0+128),w
  8252  16AB  0024               	movlb	4	; select bank4
  8253  16AC  00A5               	movwf	(_controller_out+1)^(0+512)
  8254  16AD  0021               	movlb	1	; select bank1
  8255  16AE  082A               	movf	(?___ftadd+2)^(0+128),w
  8256  16AF  0024               	movlb	4	; select bank4
  8257  16B0  00A6               	movwf	(_controller_out+2)^(0+512)
  8258                           
  8259                           ;MOTORCONTROL.C: 70: integral_old = integral_new;
  8260  16B1  0023               	movlb	3	; select bank3
  8261  16B2  0826               	movf	_integral_new^(0+384),w
  8262  16B3  00A9               	movwf	_integral_old^(0+384)
  8263  16B4  0827               	movf	(_integral_new+1)^(0+384),w
  8264  16B5  00AA               	movwf	(_integral_old+1)^(0+384)
  8265  16B6  0828               	movf	(_integral_new+2)^(0+384),w
  8266  16B7  00AB               	movwf	(_integral_old+2)^(0+384)
  8267                           
  8268                           ;MOTORCONTROL.C: 71: error_old = error_new;
  8269  16B8  0820               	movf	_error_new^(0+384),w
  8270  16B9  00A3               	movwf	_error_old^(0+384)
  8271  16BA  0821               	movf	(_error_new+1)^(0+384),w
  8272  16BB  00A4               	movwf	(_error_old+1)^(0+384)
  8273  16BC  0822               	movf	(_error_new+2)^(0+384),w
  8274  16BD  00A5               	movwf	(_error_old+2)^(0+384)
  8275                           
  8276                           ;MOTORCONTROL.C: 72: pidParams2.pidoutput2=controller_out;
  8277  16BE  0024               	movlb	4	; select bank4
  8278  16BF  0824               	movf	_controller_out^(0+512),w
  8279  16C0  0021               	movlb	1	; select bank1
  8280  16C1  00C5               	movwf	___fttol@f1^(0+128)
  8281  16C2  0024               	movlb	4	; select bank4
  8282  16C3  0825               	movf	(_controller_out+1)^(0+512),w
  8283  16C4  0021               	movlb	1	; select bank1
  8284  16C5  00C6               	movwf	(___fttol@f1+1)^(0+128)
  8285  16C6  0024               	movlb	4	; select bank4
  8286  16C7  0826               	movf	(_controller_out+2)^(0+512),w
  8287  16C8  0021               	movlb	1	; select bank1
  8288  16C9  00C7               	movwf	(___fttol@f1+2)^(0+128)
  8289  16CA  319E  26D0  3194   	fcall	___fttol
  8290  16CD  30E0               	movlw	224
  8291  16CE  0086               	movwf	6
  8292  16CF  3027               	movlw	39
  8293  16D0  0087               	movwf	7
  8294  16D1  0021               	movlb	1	; select bank1
  8295  16D2  0845               	movf	?___fttol^(0+128),w
  8296  16D3  3FC0               	movwi [0]fsr1
  8297  16D4  0846               	movf	(?___fttol+1)^(0+128),w
  8298  16D5  3FC1               	movwi [1]fsr1
  8299  16D6  0847               	movf	(?___fttol+2)^(0+128),w
  8300  16D7  3FC2               	movwi [2]fsr1
  8301  16D8  0848               	movf	(?___fttol+3)^(0+128),w
  8302  16D9  3FC3               	movwi [3]fsr1
  8303                           
  8304                           ;MOTORCONTROL.C: 75: if(pidParams2.pidoutput2<=0)
  8305  16DA  30E0               	movlw	224
  8306  16DB  0086               	movwf	6
  8307  16DC  3027               	movlw	39
  8308  16DD  0087               	movwf	7
  8309  16DE  3F43               	moviw [3]fsr1
  8310  16DF  1B89               	btfsc	9,7
  8311  16E0  2EF0               	goto	l4521
  8312  16E1  3F43               	moviw [3]fsr1
  8313  16E2  1D03               	btfss	3,2
  8314  16E3  2EFA               	goto	l4523
  8315  16E4  3F42               	moviw [2]fsr1
  8316  16E5  1D03               	btfss	3,2
  8317  16E6  2EFA               	goto	l4523
  8318  16E7  3F41               	moviw [1]fsr1
  8319  16E8  1D03               	btfss	3,2
  8320  16E9  2EFA               	goto	l4523
  8321  16EA  3F40               	moviw [0]fsr1
  8322  16EB  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8323  16EC  3001               	movlw	1
  8324  16ED  025B               	subwf	??_Adaptive_base_pid^(0+128),w
  8325  16EE  1803               	btfsc	3,0
  8326  16EF  2EFA               	goto	l4523
  8327  16F0                     l4521:	
  8328                           
  8329                           ;MOTORCONTROL.C: 76: pidParams2.pidoutput2=0;
  8330  16F0  30E0               	movlw	224
  8331  16F1  0086               	movwf	6
  8332  16F2  3027               	movlw	39
  8333  16F3  0087               	movwf	7
  8334  16F4  3000               	movlw	0
  8335  16F5  3FC0               	movwi [0]fsr1
  8336  16F6  3FC1               	movwi [1]fsr1
  8337  16F7  3FC2               	movwi [2]fsr1
  8338  16F8  3FC3               	movwi [3]fsr1
  8339  16F9  2F3E               	goto	l558
  8340  16FA                     l4523:	
  8341                           
  8342                           ;MOTORCONTROL.C: 77: else if(pidParams2.pidoutput2>pidParams2.outmax2)
  8343  16FA  30E0               	movlw	224
  8344  16FB  0086               	movwf	6
  8345  16FC  3027               	movlw	39
  8346  16FD  0087               	movwf	7
  8347  16FE  3F40               	moviw [0]fsr1
  8348  16FF  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8349  1700  3F41               	moviw [1]fsr1
  8350  1701  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8351  1702  3F42               	moviw [2]fsr1
  8352  1703  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8353  1704  3F43               	moviw [3]fsr1
  8354  1705  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8355  1706  30C0               	movlw	192
  8356  1707  0086               	movwf	6
  8357  1708  3027               	movlw	39
  8358  1709  0087               	movwf	7
  8359  170A  3F40               	moviw [0]fsr1
  8360  170B  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  8361  170C  3F41               	moviw [1]fsr1
  8362  170D  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  8363  170E  3F42               	moviw [2]fsr1
  8364  170F  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  8365  1710  3F43               	moviw [3]fsr1
  8366  1711  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  8367  1712  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  8368  1713  3A80               	xorlw	128
  8369  1714  00E3               	movwf	(??_Adaptive_base_pid+8)^(0+128)
  8370  1715  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8371  1716  3A80               	xorlw	128
  8372  1717  0263               	subwf	(??_Adaptive_base_pid+8)^(0+128),w
  8373  1718  1D03               	skipz
  8374  1719  2F24               	goto	u6243
  8375  171A  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8376  171B  0261               	subwf	(??_Adaptive_base_pid+6)^(0+128),w
  8377  171C  1D03               	skipz
  8378  171D  2F24               	goto	u6243
  8379  171E  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8380  171F  0260               	subwf	(??_Adaptive_base_pid+5)^(0+128),w
  8381  1720  1D03               	skipz
  8382  1721  2F24               	goto	u6243
  8383  1722  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8384  1723  025F               	subwf	(??_Adaptive_base_pid+4)^(0+128),w
  8385  1724                     u6243:	
  8386  1724  1803               	skipnc
  8387  1725  2F3E               	goto	l558
  8388                           
  8389                           ;MOTORCONTROL.C: 78: pidParams2.pidoutput2=pidParams2.outmax2;
  8390  1726  30C0               	movlw	192
  8391  1727  0086               	movwf	6
  8392  1728  3027               	movlw	39
  8393  1729  0087               	movwf	7
  8394  172A  3F40               	moviw [0]fsr1
  8395  172B  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8396  172C  3F41               	moviw [1]fsr1
  8397  172D  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8398  172E  3F42               	moviw [2]fsr1
  8399  172F  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8400  1730  3F43               	moviw [3]fsr1
  8401  1731  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8402  1732  30E0               	movlw	224
  8403  1733  0086               	movwf	6
  8404  1734  3027               	movlw	39
  8405  1735  0087               	movwf	7
  8406  1736  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8407  1737  3FC0               	movwi [0]fsr1
  8408  1738  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8409  1739  3FC1               	movwi [1]fsr1
  8410  173A  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8411  173B  3FC2               	movwi [2]fsr1
  8412  173C  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8413  173D  3FC3               	movwi [3]fsr1
  8414  173E                     l558:	
  8415                           
  8416                           ;MOTORCONTROL.C: 82: disp4term=pidParams2.pidoutput2;
  8417  173E  30E0               	movlw	224
  8418  173F  0086               	movwf	6
  8419  1740  3027               	movlw	39
  8420  1741  0087               	movwf	7
  8421  1742  3F40               	moviw [0]fsr1
  8422  1743  0024               	movlb	4	; select bank4
  8423  1744  00BC               	movwf	_disp4term^(0+512)
  8424  1745  3F41               	moviw [1]fsr1
  8425  1746  00BD               	movwf	(_disp4term+1)^(0+512)
  8426                           
  8427                           ;MOTORCONTROL.C: 83: scaled_baseval2=(pidParams2.pidoutput2/scalefactor2);
  8428  1747  0023               	movlb	3	; select bank3
  8429  1748  0868               	movf	_scalefactor2^(0+384),w
  8430  1749  0021               	movlb	1	; select bank1
  8431  174A  00A0               	movwf	___aldiv@divisor^(0+128)
  8432  174B  0023               	movlb	3	; select bank3
  8433  174C  0869               	movf	(_scalefactor2+1)^(0+384),w
  8434  174D  0021               	movlb	1	; select bank1
  8435  174E  00A1               	movwf	(___aldiv@divisor^(0+128)+1)
  8436  174F  01A2               	clrf	(___aldiv@divisor^(0+128)+2)
  8437  1750  01A3               	clrf	(___aldiv@divisor^(0+128)+3)
  8438  1751  30E0               	movlw	224
  8439  1752  0086               	movwf	6
  8440  1753  3027               	movlw	39
  8441  1754  0087               	movwf	7
  8442  1755  3F40               	moviw [0]fsr1
  8443  1756  00A4               	movwf	___aldiv@dividend^(0+128)
  8444  1757  3F41               	moviw [1]fsr1
  8445  1758  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  8446  1759  3F42               	moviw [2]fsr1
  8447  175A  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  8448  175B  3F43               	moviw [3]fsr1
  8449  175C  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  8450  175D  319D  25C7  3194   	fcall	___aldiv
  8451  1760  0021               	movlb	1	; select bank1
  8452  1761  0821               	movf	(?___aldiv^(0+128)+1),w
  8453  1762  0022               	movlb	2	; select bank2
  8454  1763  00AD               	movwf	(_scaled_baseval2+1)^(0+256)
  8455  1764  0021               	movlb	1	; select bank1
  8456  1765  0820               	movf	?___aldiv^(0+128),w
  8457  1766  0022               	movlb	2	; select bank2
  8458  1767  00AC               	movwf	_scaled_baseval2^(0+256)
  8459                           
  8460                           ;MOTORCONTROL.C: 85: if(scaled_baseval2>maxfmspeed)
  8461  1768  082D               	movf	(_scaled_baseval2+1)^(0+256),w
  8462  1769  0023               	movlb	3	; select bank3
  8463  176A  0265               	subwf	(_maxfmspeed+1)^(0+384),w
  8464  176B  1D03               	skipz
  8465  176C  2F71               	goto	u6255
  8466  176D  0022               	movlb	2	; select bank2
  8467  176E  082C               	movf	_scaled_baseval2^(0+256),w
  8468  176F  0023               	movlb	3	; select bank3
  8469  1770  0264               	subwf	_maxfmspeed^(0+384),w
  8470  1771                     u6255:	
  8471  1771  1803               	skipnc
  8472  1772  2F79               	goto	l4533
  8473                           
  8474                           ;MOTORCONTROL.C: 86: {
  8475                           ;MOTORCONTROL.C: 87: scaled_baseval2=maxfmspeed;
  8476  1773  0865               	movf	(_maxfmspeed+1)^(0+384),w
  8477  1774  0022               	movlb	2	; select bank2
  8478  1775  00AD               	movwf	(_scaled_baseval2+1)^(0+256)
  8479  1776  0023               	movlb	3	; select bank3
  8480  1777  0864               	movf	_maxfmspeed^(0+384),w
  8481  1778  2F8B               	goto	L19
  8482  1779                     l4533:	
  8483                           ;MOTORCONTROL.C: 88: }
  8484                           
  8485                           
  8486                           ;MOTORCONTROL.C: 89: else if(scaled_baseval2<minfmspeed)
  8487  1779  0023               	movlb	3	; select bank3
  8488  177A  0867               	movf	(_minfmspeed+1)^(0+384),w
  8489  177B  0022               	movlb	2	; select bank2
  8490  177C  022D               	subwf	(_scaled_baseval2+1)^(0+256),w
  8491  177D  1D03               	skipz
  8492  177E  2F83               	goto	u6265
  8493  177F  0023               	movlb	3	; select bank3
  8494  1780  0866               	movf	_minfmspeed^(0+384),w
  8495  1781  0022               	movlb	2	; select bank2
  8496  1782  022C               	subwf	_scaled_baseval2^(0+256),w
  8497  1783                     u6265:	
  8498  1783  1803               	skipnc
  8499  1784  2F8D               	goto	l4537
  8500                           
  8501                           ;MOTORCONTROL.C: 90: {
  8502                           ;MOTORCONTROL.C: 91: scaled_baseval2=minfmspeed;
  8503  1785  0023               	movlb	3	; select bank3
  8504  1786  0867               	movf	(_minfmspeed+1)^(0+384),w
  8505  1787  0022               	movlb	2	; select bank2
  8506  1788  00AD               	movwf	(_scaled_baseval2+1)^(0+256)
  8507  1789  0023               	movlb	3	; select bank3
  8508  178A  0866               	movf	_minfmspeed^(0+384),w
  8509  178B                     L19:	
  8510  178B  0022               	movlb	2	; select bank2
  8511  178C  00AC               	movwf	_scaled_baseval2^(0+256)
  8512  178D                     l4537:	
  8513                           
  8514                           ;MOTORCONTROL.C: 92: }
  8515                           ;MOTORCONTROL.C: 93: if(cyclestrtf==1 && closeloopf==1)
  8516  178D  0345               	decf	_cyclestrtf^(0+256),w
  8517  178E  1D03               	btfss	3,2
  8518  178F  2FCD               	goto	l4547
  8519  1790  033F               	decf	_closeloopf^(0+256),w
  8520  1791  1D03               	btfss	3,2
  8521  1792  2FCD               	goto	l4547
  8522                           
  8523                           ;MOTORCONTROL.C: 94: {
  8524                           ;MOTORCONTROL.C: 95: if(newsetwirespeed >= 35)
  8525  1793  3000               	movlw	0
  8526  1794  0020               	movlb	0	; select bank0
  8527  1795  0268               	subwf	_newsetwirespeed+1,w
  8528  1796  3023               	movlw	35
  8529  1797  1903               	skipnz
  8530  1798  0267               	subwf	_newsetwirespeed,w
  8531  1799  1C03               	skipc
  8532  179A  2FA3               	goto	l4545
  8533                           
  8534                           ;MOTORCONTROL.C: 96: {
  8535                           ;MOTORCONTROL.C: 97: Update_PWM(scaled_baseval2);
  8536  179B  0022               	movlb	2	; select bank2
  8537  179C  082D               	movf	(_scaled_baseval2+1)^(0+256),w
  8538  179D  0021               	movlb	1	; select bank1
  8539  179E  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  8540  179F  0022               	movlb	2	; select bank2
  8541  17A0  082C               	movf	_scaled_baseval2^(0+256),w
  8542  17A1  0021               	movlb	1	; select bank1
  8543  17A2  2FE2               	goto	L20
  8544  17A3                     l4545:	
  8545                           ;MOTORCONTROL.C: 98: }
  8546                           
  8547                           
  8548                           ;MOTORCONTROL.C: 99: else
  8549                           ;MOTORCONTROL.C: 100: {
  8550                           ;MOTORCONTROL.C: 101: Update_PWM(newsetwirespeed*3.4);
  8551  17A3  0020               	movlb	0	; select bank0
  8552  17A4  0868               	movf	_newsetwirespeed+1,w
  8553  17A5  0021               	movlb	1	; select bank1
  8554  17A6  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  8555  17A7  0020               	movlb	0	; select bank0
  8556  17A8  0867               	movf	_newsetwirespeed,w
  8557  17A9  0021               	movlb	1	; select bank1
  8558  17AA  00A8               	movwf	___lwtoft@c^(0+128)
  8559  17AB  3198  2008  3194   	fcall	___lwtoft
  8560  17AE  0021               	movlb	1	; select bank1
  8561  17AF  0828               	movf	?___lwtoft^(0+128),w
  8562  17B0  00B8               	movwf	___ftmul@f2^(0+128)
  8563  17B1  0829               	movf	(?___lwtoft+1)^(0+128),w
  8564  17B2  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  8565  17B3  082A               	movf	(?___lwtoft+2)^(0+128),w
  8566  17B4  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  8567  17B5  309A               	movlw	154
  8568  17B6  00B5               	movwf	___ftmul@f1^(0+128)
  8569  17B7  3059               	movlw	89
  8570  17B8  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  8571  17B9  3040               	movlw	64
  8572  17BA  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  8573  17BB  3187  2717  3194   	fcall	___ftmul
  8574  17BE  0021               	movlb	1	; select bank1
  8575  17BF  0835               	movf	?___ftmul^(0+128),w
  8576  17C0  00C5               	movwf	___fttol@f1^(0+128)
  8577  17C1  0836               	movf	(?___ftmul+1)^(0+128),w
  8578  17C2  00C6               	movwf	(___fttol@f1+1)^(0+128)
  8579  17C3  0837               	movf	(?___ftmul+2)^(0+128),w
  8580  17C4  00C7               	movwf	(___fttol@f1+2)^(0+128)
  8581  17C5  319E  26D0  3194   	fcall	___fttol
  8582  17C8  0021               	movlb	1	; select bank1
  8583  17C9  0846               	movf	(?___fttol^(0+128)+1),w
  8584  17CA  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  8585  17CB  0845               	movf	?___fttol^(0+128),w
  8586  17CC  2FE2               	goto	L20
  8587  17CD                     l4547:	
  8588                           ;MOTORCONTROL.C: 102: }
  8589                           ;MOTORCONTROL.C: 106: }
  8590                           
  8591                           
  8592                           ;MOTORCONTROL.C: 107: else if(cyclestrtf==0)
  8593  17CD  0022               	movlb	2	; select bank2
  8594  17CE  0845               	movf	_cyclestrtf^(0+256),w
  8595  17CF  1D03               	btfss	3,2
  8596  17D0  2FE5               	goto	l4551
  8597                           
  8598                           ;MOTORCONTROL.C: 108: {
  8599                           ;MOTORCONTROL.C: 109: Update_PWM(scaled_baseval2*0);
  8600  17D1  082D               	movf	(_scaled_baseval2+1)^(0+256),w
  8601  17D2  0021               	movlb	1	; select bank1
  8602  17D3  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  8603  17D4  0022               	movlb	2	; select bank2
  8604  17D5  082C               	movf	_scaled_baseval2^(0+256),w
  8605  17D6  0021               	movlb	1	; select bank1
  8606  17D7  00A0               	movwf	___wmul@multiplier^(0+128)
  8607  17D8  3000               	movlw	0
  8608  17D9  00A2               	movwf	___wmul@multiplicand^(0+128)
  8609  17DA  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  8610  17DB  3198  2092  3194   	fcall	___wmul
  8611  17DE  0021               	movlb	1	; select bank1
  8612  17DF  0821               	movf	(?___wmul+1)^(0+128),w
  8613  17E0  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  8614  17E1  0820               	movf	?___wmul^(0+128),w
  8615  17E2                     L20:	
  8616  17E2  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  8617  17E3  3198  20FB         	fcall	_Update_PWM
  8618  17E5                     l4551:	
  8619                           
  8620                           ;MOTORCONTROL.C: 110: }
  8621                           ;MOTORCONTROL.C: 111: }
  8622                           ;MOTORCONTROL.C: 112: pidParams2.previous_error2 = pidParams2.error2;
  8623  17E5  3096               	movlw	150
  8624  17E6  0086               	movwf	6
  8625  17E7  3027               	movlw	39
  8626  17E8  0087               	movwf	7
  8627  17E9  314C               	addfsr 1,12
  8628  17EA  3F40               	moviw [0]fsr1
  8629  17EB  0021               	movlb	1	; select bank1
  8630  17EC  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8631  17ED  3F41               	moviw [1]fsr1
  8632  17EE  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8633  17EF  3F42               	moviw [2]fsr1
  8634  17F0  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8635  17F1  3F43               	moviw [3]fsr1
  8636  17F2  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8637  17F3  30D4               	movlw	212
  8638  17F4  0086               	movwf	6
  8639  17F5  3027               	movlw	39
  8640  17F6  0087               	movwf	7
  8641  17F7  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8642  17F8  3FC0               	movwi [0]fsr1
  8643  17F9  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8644  17FA  3FC1               	movwi [1]fsr1
  8645  17FB  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8646  17FC  3FC2               	movwi [2]fsr1
  8647  17FD  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8648  17FE  3FC3               	movwi [3]fsr1
  8649  17FF  0008               	return
  8650  1800                     __end_of_Adaptive_base_pid:	
  8651                           
  8652                           	psect	text24
  8653  1892                     __ptext24:	
  8654 ;; *************** function ___wmul *****************
  8655 ;; Defined at:
  8656 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;  multiplier      2    0[BANK1 ] unsigned int 
  8659 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  8660 ;; Auto vars:     Size  Location     Type
  8661 ;;  product         2    4[BANK1 ] unsigned int 
  8662 ;; Return value:  Size  Location     Type
  8663 ;;                  2    0[BANK1 ] unsigned int 
  8664 ;; Registers used:
  8665 ;;		wreg, status,2, status,0
  8666 ;; Tracked objects:
  8667 ;;		On entry : 0/0
  8668 ;;		On exit  : 0/0
  8669 ;;		Unchanged: 0/0
  8670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8671 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8672 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8674 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8675 ;;Total ram usage:        6 bytes
  8676 ;; Hardware stack levels used:    1
  8677 ;; Hardware stack levels required when called:    3
  8678 ;; This function calls:
  8679 ;;		Nothing
  8680 ;; This function is called by:
  8681 ;;		_Adaptive_base_pid
  8682 ;;		_main
  8683 ;;		_key_application
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           
  8688                           ;psect for function ___wmul
  8689  1892                     ___wmul:	
  8690                           
  8691                           ;incstack = 0
  8692                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8693  1892  0021               	movlb	1	; select bank1
  8694  1893  01A4               	clrf	___wmul@product^(0+128)
  8695  1894  01A5               	clrf	(___wmul@product+1)^(0+128)
  8696  1895                     l3877:	
  8697  1895  1C20               	btfss	___wmul@multiplier^(0+128),0
  8698  1896  289B               	goto	l965
  8699  1897  0822               	movf	___wmul@multiplicand^(0+128),w
  8700  1898  07A4               	addwf	___wmul@product^(0+128),f
  8701  1899  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  8702  189A  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  8703  189B                     l965:	
  8704  189B  3001               	movlw	1
  8705  189C                     u4855:	
  8706  189C  35A2               	lslf	___wmul@multiplicand^(0+128),f
  8707  189D  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  8708  189E  0B89               	decfsz	9,f
  8709  189F  289C               	goto	u4855
  8710  18A0  3001               	movlw	1
  8711  18A1                     u4865:	
  8712  18A1  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  8713  18A2  0CA0               	rrf	___wmul@multiplier^(0+128),f
  8714  18A3  0B89               	decfsz	9,f
  8715  18A4  28A1               	goto	u4865
  8716  18A5  0820               	movf	___wmul@multiplier^(0+128),w
  8717  18A6  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
  8718  18A7  1D03               	btfss	3,2
  8719  18A8  2895               	goto	l3877
  8720  18A9  0825               	movf	(___wmul@product+1)^(0+128),w
  8721  18AA  00A1               	movwf	(?___wmul+1)^(0+128)
  8722  18AB  0824               	movf	___wmul@product^(0+128),w
  8723  18AC  00A0               	movwf	?___wmul^(0+128)
  8724  18AD  0008               	return
  8725  18AE                     __end_of___wmul:	
  8726                           
  8727                           	psect	text25
  8728  1808                     __ptext25:	
  8729 ;; *************** function ___lwtoft *****************
  8730 ;; Defined at:
  8731 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;  c               2    8[BANK1 ] unsigned int 
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;		None
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  3    8[BANK1 ] float 
  8738 ;; Registers used:
  8739 ;;		wreg, status,2, status,0, pclath, cstack
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8745 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8747 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8748 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8749 ;;Total ram usage:        4 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    4
  8752 ;; This function calls:
  8753 ;;		___ftpack
  8754 ;; This function is called by:
  8755 ;;		_Adaptive_base_pid
  8756 ;;		_main
  8757 ;; This function uses a non-reentrant model
  8758 ;;
  8759                           
  8760                           
  8761                           ;psect for function ___lwtoft
  8762  1808                     ___lwtoft:	
  8763                           
  8764                           ;incstack = 0
  8765                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8766  1808  0021               	movlb	1	; select bank1
  8767  1809  0828               	movf	___lwtoft@c^(0+128),w
  8768  180A  00A0               	movwf	___ftpack@arg^(0+128)
  8769  180B  0829               	movf	(___lwtoft@c+1)^(0+128),w
  8770  180C  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  8771  180D  01A2               	clrf	(___ftpack@arg+2)^(0+128)
  8772  180E  308E               	movlw	142
  8773  180F  00AB               	movwf	??___lwtoft^(0+128)
  8774  1810  082B               	movf	??___lwtoft^(0+128),w
  8775  1811  00A3               	movwf	___ftpack@exp^(0+128)
  8776  1812  01A4               	clrf	___ftpack@sign^(0+128)
  8777  1813  319B  23F1         	fcall	___ftpack
  8778  1815  0021               	movlb	1	; select bank1
  8779  1816  0820               	movf	?___ftpack^(0+128),w
  8780  1817  00A8               	movwf	?___lwtoft^(0+128)
  8781  1818  0821               	movf	(?___ftpack+1)^(0+128),w
  8782  1819  00A9               	movwf	(?___lwtoft+1)^(0+128)
  8783  181A  0822               	movf	(?___ftpack+2)^(0+128),w
  8784  181B  00AA               	movwf	(?___lwtoft+2)^(0+128)
  8785  181C  0008               	return
  8786  181D                     __end_of___lwtoft:	
  8787                           
  8788                           	psect	text26
  8789  1ED0                     __ptext26:	
  8790 ;; *************** function ___fttol *****************
  8791 ;; Defined at:
  8792 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;  f1              3   37[BANK1 ] float 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;  lval            4   46[BANK1 ] unsigned long 
  8797 ;;  exp1            1   50[BANK1 ] unsigned char 
  8798 ;;  sign1           1   45[BANK1 ] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  4   37[BANK1 ] long 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8808 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8809 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8810 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8811 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8812 ;;Total ram usage:       14 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    3
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_Adaptive_base_pid
  8819 ;;		_main
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           
  8824                           ;psect for function ___fttol
  8825  1ED0                     ___fttol:	
  8826                           
  8827                           ;incstack = 0
  8828                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8829  1ED0  0021               	movlb	1	; select bank1
  8830  1ED1  0845               	movf	___fttol@f1^(0+128),w
  8831  1ED2  00C9               	movwf	??___fttol^(0+128)
  8832  1ED3  0846               	movf	(___fttol@f1+1)^(0+128),w
  8833  1ED4  00CA               	movwf	(??___fttol^(0+128)+1)
  8834  1ED5  0847               	movf	(___fttol@f1+2)^(0+128),w
  8835  1ED6  00CB               	movwf	(??___fttol^(0+128)+2)
  8836  1ED7  1003               	clrc
  8837  1ED8  0D4A               	rlf	(??___fttol^(0+128)+1),w
  8838  1ED9  0D4B               	rlf	(??___fttol^(0+128)+2),w
  8839  1EDA  00CC               	movwf	(??___fttol+3)^(0+128)
  8840  1EDB  084C               	movf	(??___fttol+3)^(0+128),w
  8841  1EDC  00D2               	movwf	___fttol@exp1^(0+128)
  8842  1EDD  0852               	movf	___fttol@exp1^(0+128),w
  8843  1EDE  1D03               	btfss	3,2
  8844  1EDF  2EE9               	goto	l4141
  8845  1EE0  3000               	movlw	0
  8846  1EE1  00C8               	movwf	(?___fttol+3)^(0+128)
  8847  1EE2  3000               	movlw	0
  8848  1EE3  00C7               	movwf	(?___fttol+2)^(0+128)
  8849  1EE4  3000               	movlw	0
  8850  1EE5  00C6               	movwf	(?___fttol+1)^(0+128)
  8851  1EE6  3000               	movlw	0
  8852  1EE7  00C5               	movwf	?___fttol^(0+128)
  8853  1EE8  0008               	return
  8854  1EE9                     l4141:	
  8855  1EE9  0845               	movf	___fttol@f1^(0+128),w
  8856  1EEA  00C9               	movwf	??___fttol^(0+128)
  8857  1EEB  0846               	movf	(___fttol@f1+1)^(0+128),w
  8858  1EEC  00CA               	movwf	(??___fttol^(0+128)+1)
  8859  1EED  0847               	movf	(___fttol@f1+2)^(0+128),w
  8860  1EEE  00CB               	movwf	(??___fttol^(0+128)+2)
  8861  1EEF  3017               	movlw	23
  8862  1EF0                     u5495:	
  8863  1EF0  36CB               	lsrf	(??___fttol^(0+128)+2),f
  8864  1EF1  0CCA               	rrf	(??___fttol^(0+128)+1),f
  8865  1EF2  0CC9               	rrf	??___fttol^(0+128),f
  8866  1EF3  0B89               	decfsz	9,f
  8867  1EF4  2EF0               	goto	u5495
  8868  1EF5  0849               	movf	??___fttol^(0+128),w
  8869  1EF6  00CC               	movwf	(??___fttol+3)^(0+128)
  8870  1EF7  084C               	movf	(??___fttol+3)^(0+128),w
  8871  1EF8  00CD               	movwf	___fttol@sign1^(0+128)
  8872  1EF9  17C6               	bsf	(___fttol@f1^(0+128)+1),7
  8873  1EFA  30FF               	movlw	255
  8874  1EFB  05C5               	andwf	___fttol@f1^(0+128),f
  8875  1EFC  30FF               	movlw	255
  8876  1EFD  05C6               	andwf	(___fttol@f1+1)^(0+128),f
  8877  1EFE  3000               	movlw	0
  8878  1EFF  05C7               	andwf	(___fttol@f1+2)^(0+128),f
  8879  1F00  0845               	movf	___fttol@f1^(0+128),w
  8880  1F01  00CE               	movwf	___fttol@lval^(0+128)
  8881  1F02  0846               	movf	(___fttol@f1+1)^(0+128),w
  8882  1F03  00CF               	movwf	(___fttol@lval^(0+128)+1)
  8883  1F04  0847               	movf	(___fttol@f1+2)^(0+128),w
  8884  1F05  00D0               	movwf	(___fttol@lval^(0+128)+2)
  8885  1F06  01D1               	clrf	(___fttol@lval^(0+128)+3)
  8886  1F07  308E               	movlw	142
  8887  1F08  02D2               	subwf	___fttol@exp1^(0+128),f
  8888  1F09  1FD2               	btfss	___fttol@exp1^(0+128),7
  8889  1F0A  2F27               	goto	l4161
  8890  1F0B  0852               	movf	___fttol@exp1^(0+128),w
  8891  1F0C  3A80               	xorlw	128
  8892  1F0D  3E8F               	addlw	143
  8893  1F0E  1803               	skipnc
  8894  1F0F  2F19               	goto	l4159
  8895  1F10  3000               	movlw	0
  8896  1F11  00C8               	movwf	(?___fttol+3)^(0+128)
  8897  1F12  3000               	movlw	0
  8898  1F13  00C7               	movwf	(?___fttol+2)^(0+128)
  8899  1F14  3000               	movlw	0
  8900  1F15  00C6               	movwf	(?___fttol+1)^(0+128)
  8901  1F16  3000               	movlw	0
  8902  1F17  00C5               	movwf	?___fttol^(0+128)
  8903  1F18  0008               	return
  8904  1F19                     l4159:	
  8905  1F19  3001               	movlw	1
  8906  1F1A                     u5525:	
  8907  1F1A  36D1               	lsrf	(___fttol@lval+3)^(0+128),f
  8908  1F1B  0CD0               	rrf	(___fttol@lval+2)^(0+128),f
  8909  1F1C  0CCF               	rrf	(___fttol@lval+1)^(0+128),f
  8910  1F1D  0CCE               	rrf	___fttol@lval^(0+128),f
  8911  1F1E  0B89               	decfsz	9,f
  8912  1F1F  2F1A               	goto	u5525
  8913  1F20  3001               	movlw	1
  8914  1F21  00C9               	movwf	??___fttol^(0+128)
  8915  1F22  0849               	movf	??___fttol^(0+128),w
  8916  1F23  07D2               	addwf	___fttol@exp1^(0+128),f
  8917  1F24  1903               	btfsc	3,2
  8918  1F25  2F40               	goto	l4169
  8919  1F26  2F19               	goto	l4159
  8920  1F27                     l4161:	
  8921  1F27  3018               	movlw	24
  8922  1F28  0252               	subwf	___fttol@exp1^(0+128),w
  8923  1F29  1C03               	skipc
  8924  1F2A  2F3D               	goto	l1217
  8925  1F2B  3000               	movlw	0
  8926  1F2C  00C8               	movwf	(?___fttol+3)^(0+128)
  8927  1F2D  3000               	movlw	0
  8928  1F2E  00C7               	movwf	(?___fttol+2)^(0+128)
  8929  1F2F  3000               	movlw	0
  8930  1F30  00C6               	movwf	(?___fttol+1)^(0+128)
  8931  1F31  3000               	movlw	0
  8932  1F32  00C5               	movwf	?___fttol^(0+128)
  8933  1F33  0008               	return
  8934  1F34                     l4167:	
  8935  1F34  3001               	movlw	1
  8936  1F35                     u5555:	
  8937  1F35  35CE               	lslf	___fttol@lval^(0+128),f
  8938  1F36  0DCF               	rlf	(___fttol@lval+1)^(0+128),f
  8939  1F37  0DD0               	rlf	(___fttol@lval+2)^(0+128),f
  8940  1F38  0DD1               	rlf	(___fttol@lval+3)^(0+128),f
  8941  1F39  0B89               	decfsz	9,f
  8942  1F3A  2F35               	goto	u5555
  8943  1F3B  3001               	movlw	1
  8944  1F3C  02D2               	subwf	___fttol@exp1^(0+128),f
  8945  1F3D                     l1217:	
  8946  1F3D  0852               	movf	___fttol@exp1^(0+128),w
  8947  1F3E  1D03               	btfss	3,2
  8948  1F3F  2F34               	goto	l4167
  8949  1F40                     l4169:	
  8950  1F40  084D               	movf	___fttol@sign1^(0+128),w
  8951  1F41  1903               	btfsc	3,2
  8952  1F42  2F4E               	goto	l4173
  8953  1F43  09CE               	comf	___fttol@lval^(0+128),f
  8954  1F44  09CF               	comf	(___fttol@lval+1)^(0+128),f
  8955  1F45  09D0               	comf	(___fttol@lval+2)^(0+128),f
  8956  1F46  09D1               	comf	(___fttol@lval+3)^(0+128),f
  8957  1F47  0ACE               	incf	___fttol@lval^(0+128),f
  8958  1F48  1903               	skipnz
  8959  1F49  0ACF               	incf	(___fttol@lval+1)^(0+128),f
  8960  1F4A  1903               	skipnz
  8961  1F4B  0AD0               	incf	(___fttol@lval+2)^(0+128),f
  8962  1F4C  1903               	skipnz
  8963  1F4D  0AD1               	incf	(___fttol@lval+3)^(0+128),f
  8964  1F4E                     l4173:	
  8965  1F4E  0851               	movf	(___fttol@lval+3)^(0+128),w
  8966  1F4F  00C8               	movwf	(?___fttol+3)^(0+128)
  8967  1F50  0850               	movf	(___fttol@lval+2)^(0+128),w
  8968  1F51  00C7               	movwf	(?___fttol+2)^(0+128)
  8969  1F52  084F               	movf	(___fttol@lval+1)^(0+128),w
  8970  1F53  00C6               	movwf	(?___fttol+1)^(0+128)
  8971  1F54  084E               	movf	___fttol@lval^(0+128),w
  8972  1F55  00C5               	movwf	?___fttol^(0+128)
  8973  1F56  0008               	return
  8974  1F57                     __end_of___fttol:	
  8975                           
  8976                           	psect	text27
  8977  278F                     __ptext27:	
  8978 ;; *************** function ___ftneg *****************
  8979 ;; Defined at:
  8980 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  f1              3    0[BANK1 ] float 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  3    0[BANK1 ] float 
  8987 ;; Registers used:
  8988 ;;		wreg
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8994 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8997 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8998 ;;Total ram usage:        3 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:    3
  9001 ;; This function calls:
  9002 ;;		Nothing
  9003 ;; This function is called by:
  9004 ;;		_Adaptive_base_pid
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           
  9009                           ;psect for function ___ftneg
  9010  278F                     ___ftneg:	
  9011                           
  9012                           ;incstack = 0
  9013                           ; Regs used in ___ftneg: [wreg]
  9014  278F  0021               	movlb	1	; select bank1
  9015  2790  0822               	movf	(___ftneg@f1+2)^(0+128),w
  9016  2791  0421               	iorwf	(___ftneg@f1+1)^(0+128),w
  9017  2792  0420               	iorwf	___ftneg@f1^(0+128),w
  9018  2793  1903               	skipnz
  9019  2794  0008               	return
  9020  2795  3080               	movlw	128
  9021  2796  06A2               	xorwf	(___ftneg@f1+2)^(0+128),f
  9022  2797  0008               	return
  9023  2798                     __end_of___ftneg:	
  9024                           
  9025                           	psect	text28
  9026  0717                     __ptext28:	
  9027 ;; *************** function ___ftmul *****************
  9028 ;; Defined at:
  9029 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  f1              3   21[BANK1 ] float 
  9032 ;;  f2              3   24[BANK1 ] float 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  f3_as_produc    3   32[BANK1 ] unsigned um
  9035 ;;  sign            1   36[BANK1 ] unsigned char 
  9036 ;;  cntr            1   35[BANK1 ] unsigned char 
  9037 ;;  exp             1   31[BANK1 ] unsigned char 
  9038 ;; Return value:  Size  Location     Type
  9039 ;;                  3   21[BANK1 ] float 
  9040 ;; Registers used:
  9041 ;;		wreg, status,2, status,0, pclath, cstack
  9042 ;; Tracked objects:
  9043 ;;		On entry : 0/0
  9044 ;;		On exit  : 0/0
  9045 ;;		Unchanged: 0/0
  9046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9047 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9048 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9049 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9050 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9051 ;;Total ram usage:       16 bytes
  9052 ;; Hardware stack levels used:    1
  9053 ;; Hardware stack levels required when called:    4
  9054 ;; This function calls:
  9055 ;;		___ftpack
  9056 ;; This function is called by:
  9057 ;;		_Adaptive_base_pid
  9058 ;;		_main
  9059 ;; This function uses a non-reentrant model
  9060 ;;
  9061                           
  9062                           
  9063                           ;psect for function ___ftmul
  9064  0717                     ___ftmul:	
  9065                           
  9066                           ;incstack = 0
  9067                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9068  0717  0021               	movlb	1	; select bank1
  9069  0718  0835               	movf	___ftmul@f1^(0+128),w
  9070  0719  00BB               	movwf	??___ftmul^(0+128)
  9071  071A  0836               	movf	(___ftmul@f1+1)^(0+128),w
  9072  071B  00BC               	movwf	(??___ftmul^(0+128)+1)
  9073  071C  0837               	movf	(___ftmul@f1+2)^(0+128),w
  9074  071D  00BD               	movwf	(??___ftmul^(0+128)+2)
  9075  071E  1003               	clrc
  9076  071F  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  9077  0720  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  9078  0721  00BE               	movwf	(??___ftmul+3)^(0+128)
  9079  0722  083E               	movf	(??___ftmul+3)^(0+128),w
  9080  0723  00BF               	movwf	___ftmul@exp^(0+128)
  9081  0724  083F               	movf	___ftmul@exp^(0+128),w
  9082  0725  1D03               	btfss	3,2
  9083  0726  2F2E               	goto	l4083
  9084  0727  3000               	movlw	0
  9085  0728  00B5               	movwf	?___ftmul^(0+128)
  9086  0729  3000               	movlw	0
  9087  072A  00B6               	movwf	(?___ftmul+1)^(0+128)
  9088  072B  3000               	movlw	0
  9089  072C  00B7               	movwf	(?___ftmul+2)^(0+128)
  9090  072D  0008               	return
  9091  072E                     l4083:	
  9092  072E  0838               	movf	___ftmul@f2^(0+128),w
  9093  072F  00BB               	movwf	??___ftmul^(0+128)
  9094  0730  0839               	movf	(___ftmul@f2+1)^(0+128),w
  9095  0731  00BC               	movwf	(??___ftmul^(0+128)+1)
  9096  0732  083A               	movf	(___ftmul@f2+2)^(0+128),w
  9097  0733  00BD               	movwf	(??___ftmul^(0+128)+2)
  9098  0734  1003               	clrc
  9099  0735  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  9100  0736  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  9101  0737  00BE               	movwf	(??___ftmul+3)^(0+128)
  9102  0738  083E               	movf	(??___ftmul+3)^(0+128),w
  9103  0739  00C4               	movwf	___ftmul@sign^(0+128)
  9104  073A  0844               	movf	___ftmul@sign^(0+128),w
  9105  073B  1D03               	btfss	3,2
  9106  073C  2F44               	goto	l4089
  9107  073D  3000               	movlw	0
  9108  073E  00B5               	movwf	?___ftmul^(0+128)
  9109  073F  3000               	movlw	0
  9110  0740  00B6               	movwf	(?___ftmul+1)^(0+128)
  9111  0741  3000               	movlw	0
  9112  0742  00B7               	movwf	(?___ftmul+2)^(0+128)
  9113  0743  0008               	return
  9114  0744                     l4089:	
  9115  0744  0844               	movf	___ftmul@sign^(0+128),w
  9116  0745  3E7B               	addlw	123
  9117  0746  00BB               	movwf	??___ftmul^(0+128)
  9118  0747  083B               	movf	??___ftmul^(0+128),w
  9119  0748  07BF               	addwf	___ftmul@exp^(0+128),f
  9120  0749  0835               	movf	___ftmul@f1^(0+128),w
  9121  074A  00BB               	movwf	??___ftmul^(0+128)
  9122  074B  0836               	movf	(___ftmul@f1+1)^(0+128),w
  9123  074C  00BC               	movwf	(??___ftmul^(0+128)+1)
  9124  074D  0837               	movf	(___ftmul@f1+2)^(0+128),w
  9125  074E  00BD               	movwf	(??___ftmul^(0+128)+2)
  9126  074F  3010               	movlw	16
  9127  0750                     u5375:	
  9128  0750  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  9129  0751  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  9130  0752  0CBB               	rrf	??___ftmul^(0+128),f
  9131  0753  0B89               	decfsz	9,f
  9132  0754  2F50               	goto	u5375
  9133  0755  083B               	movf	??___ftmul^(0+128),w
  9134  0756  00BE               	movwf	(??___ftmul+3)^(0+128)
  9135  0757  083E               	movf	(??___ftmul+3)^(0+128),w
  9136  0758  00C4               	movwf	___ftmul@sign^(0+128)
  9137  0759  0838               	movf	___ftmul@f2^(0+128),w
  9138  075A  00BB               	movwf	??___ftmul^(0+128)
  9139  075B  0839               	movf	(___ftmul@f2+1)^(0+128),w
  9140  075C  00BC               	movwf	(??___ftmul^(0+128)+1)
  9141  075D  083A               	movf	(___ftmul@f2+2)^(0+128),w
  9142  075E  00BD               	movwf	(??___ftmul^(0+128)+2)
  9143  075F  3010               	movlw	16
  9144  0760                     u5385:	
  9145  0760  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  9146  0761  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  9147  0762  0CBB               	rrf	??___ftmul^(0+128),f
  9148  0763  0B89               	decfsz	9,f
  9149  0764  2F60               	goto	u5385
  9150  0765  083B               	movf	??___ftmul^(0+128),w
  9151  0766  00BE               	movwf	(??___ftmul+3)^(0+128)
  9152  0767  083E               	movf	(??___ftmul+3)^(0+128),w
  9153  0768  06C4               	xorwf	___ftmul@sign^(0+128),f
  9154  0769  3080               	movlw	128
  9155  076A  00BB               	movwf	??___ftmul^(0+128)
  9156  076B  083B               	movf	??___ftmul^(0+128),w
  9157  076C  05C4               	andwf	___ftmul@sign^(0+128),f
  9158  076D  17B6               	bsf	(___ftmul@f1^(0+128)+1),7
  9159  076E  17B9               	bsf	(___ftmul@f2^(0+128)+1),7
  9160  076F  30FF               	movlw	255
  9161  0770  05B8               	andwf	___ftmul@f2^(0+128),f
  9162  0771  30FF               	movlw	255
  9163  0772  05B9               	andwf	(___ftmul@f2+1)^(0+128),f
  9164  0773  3000               	movlw	0
  9165  0774  05BA               	andwf	(___ftmul@f2+2)^(0+128),f
  9166  0775  3000               	movlw	0
  9167  0776  00C0               	movwf	___ftmul@f3_as_product^(0+128)
  9168  0777  3000               	movlw	0
  9169  0778  00C1               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  9170  0779  3000               	movlw	0
  9171  077A  00C2               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  9172  077B  3007               	movlw	7
  9173  077C  00BB               	movwf	??___ftmul^(0+128)
  9174  077D  083B               	movf	??___ftmul^(0+128),w
  9175  077E  00C3               	movwf	___ftmul@cntr^(0+128)
  9176  077F                     l4101:	
  9177  077F  1C35               	btfss	___ftmul@f1^(0+128),0
  9178  0780  2F87               	goto	l4105
  9179  0781  0838               	movf	___ftmul@f2^(0+128),w
  9180  0782  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  9181  0783  0839               	movf	(___ftmul@f2+1)^(0+128),w
  9182  0784  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  9183  0785  083A               	movf	(___ftmul@f2+2)^(0+128),w
  9184  0786  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  9185  0787                     l4105:	
  9186  0787  3001               	movlw	1
  9187  0788                     u5405:	
  9188  0788  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  9189  0789  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  9190  078A  0CB5               	rrf	___ftmul@f1^(0+128),f
  9191  078B  0B89               	decfsz	9,f
  9192  078C  2F88               	goto	u5405
  9193  078D  3001               	movlw	1
  9194  078E                     u5415:	
  9195  078E  35B8               	lslf	___ftmul@f2^(0+128),f
  9196  078F  0DB9               	rlf	(___ftmul@f2+1)^(0+128),f
  9197  0790  0DBA               	rlf	(___ftmul@f2+2)^(0+128),f
  9198  0791  0B89               	decfsz	9,f
  9199  0792  2F8E               	goto	u5415
  9200  0793  3001               	movlw	1
  9201  0794  02C3               	subwf	___ftmul@cntr^(0+128),f
  9202  0795  1D03               	btfss	3,2
  9203  0796  2F7F               	goto	l4101
  9204  0797  3009               	movlw	9
  9205  0798  00BB               	movwf	??___ftmul^(0+128)
  9206  0799  083B               	movf	??___ftmul^(0+128),w
  9207  079A  00C3               	movwf	___ftmul@cntr^(0+128)
  9208  079B                     l4113:	
  9209  079B  1C35               	btfss	___ftmul@f1^(0+128),0
  9210  079C  2FA3               	goto	l4117
  9211  079D  0838               	movf	___ftmul@f2^(0+128),w
  9212  079E  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  9213  079F  0839               	movf	(___ftmul@f2+1)^(0+128),w
  9214  07A0  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  9215  07A1  083A               	movf	(___ftmul@f2+2)^(0+128),w
  9216  07A2  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  9217  07A3                     l4117:	
  9218  07A3  3001               	movlw	1
  9219  07A4                     u5445:	
  9220  07A4  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  9221  07A5  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  9222  07A6  0CB5               	rrf	___ftmul@f1^(0+128),f
  9223  07A7  0B89               	decfsz	9,f
  9224  07A8  2FA4               	goto	u5445
  9225  07A9  3001               	movlw	1
  9226  07AA                     u5455:	
  9227  07AA  36C2               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  9228  07AB  0CC1               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  9229  07AC  0CC0               	rrf	___ftmul@f3_as_product^(0+128),f
  9230  07AD  0B89               	decfsz	9,f
  9231  07AE  2FAA               	goto	u5455
  9232  07AF  3001               	movlw	1
  9233  07B0  02C3               	subwf	___ftmul@cntr^(0+128),f
  9234  07B1  1D03               	btfss	3,2
  9235  07B2  2F9B               	goto	l4113
  9236  07B3  0840               	movf	___ftmul@f3_as_product^(0+128),w
  9237  07B4  00A0               	movwf	___ftpack@arg^(0+128)
  9238  07B5  0841               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  9239  07B6  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9240  07B7  0842               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  9241  07B8  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9242  07B9  083F               	movf	___ftmul@exp^(0+128),w
  9243  07BA  00BB               	movwf	??___ftmul^(0+128)
  9244  07BB  083B               	movf	??___ftmul^(0+128),w
  9245  07BC  00A3               	movwf	___ftpack@exp^(0+128)
  9246  07BD  0844               	movf	___ftmul@sign^(0+128),w
  9247  07BE  00BC               	movwf	(??___ftmul+1)^(0+128)
  9248  07BF  083C               	movf	(??___ftmul+1)^(0+128),w
  9249  07C0  00A4               	movwf	___ftpack@sign^(0+128)
  9250  07C1  319B  23F1         	fcall	___ftpack
  9251  07C3  0021               	movlb	1	; select bank1
  9252  07C4  0820               	movf	?___ftpack^(0+128),w
  9253  07C5  00B5               	movwf	?___ftmul^(0+128)
  9254  07C6  0821               	movf	(?___ftpack+1)^(0+128),w
  9255  07C7  00B6               	movwf	(?___ftmul+1)^(0+128)
  9256  07C8  0822               	movf	(?___ftpack+2)^(0+128),w
  9257  07C9  00B7               	movwf	(?___ftmul+2)^(0+128)
  9258  07CA  0008               	return
  9259  07CB                     __end_of___ftmul:	
  9260                           
  9261                           	psect	text29
  9262  1955                     __ptext29:	
  9263 ;; *************** function ___ftge *****************
  9264 ;; Defined at:
  9265 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;  ff1             3   16[BANK1 ] float 
  9268 ;;  ff2             3   19[BANK1 ] float 
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;		None
  9271 ;; Return value:  Size  Location     Type
  9272 ;;		None               void
  9273 ;; Registers used:
  9274 ;;		wreg, status,2, status,0
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9280 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9282 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9283 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9284 ;;Total ram usage:        9 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; Hardware stack levels required when called:    3
  9287 ;; This function calls:
  9288 ;;		Nothing
  9289 ;; This function is called by:
  9290 ;;		_Adaptive_base_pid
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           
  9295                           ;psect for function ___ftge
  9296  1955                     ___ftge:	
  9297                           
  9298                           ;incstack = 0
  9299                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9300  1955  0021               	movlb	1	; select bank1
  9301  1956  1FB2               	btfss	(___ftge@ff1+2)^(0+128),7
  9302  1957  296C               	goto	l4061
  9303  1958  0930               	comf	___ftge@ff1^(0+128),w
  9304  1959  00B6               	movwf	??___ftge^(0+128)
  9305  195A  0931               	comf	(___ftge@ff1+1)^(0+128),w
  9306  195B  00B7               	movwf	(??___ftge^(0+128)+1)
  9307  195C  0932               	comf	(___ftge@ff1+2)^(0+128),w
  9308  195D  00B8               	movwf	(??___ftge^(0+128)+2)
  9309  195E  0AB6               	incf	??___ftge^(0+128),f
  9310  195F  1903               	skipnz
  9311  1960  0AB7               	incf	(??___ftge^(0+128)+1),f
  9312  1961  1903               	skipnz
  9313  1962  0AB8               	incf	(??___ftge^(0+128)+2),f
  9314  1963  3000               	movlw	0
  9315  1964  0736               	addwf	??___ftge^(0+128),w
  9316  1965  00B0               	movwf	___ftge@ff1^(0+128)
  9317  1966  3000               	movlw	0
  9318  1967  3D37               	addwfc	(??___ftge+1)^(0+128),w
  9319  1968  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  9320  1969  3080               	movlw	128
  9321  196A  3D38               	addwfc	(??___ftge+2)^(0+128),w
  9322  196B  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  9323  196C                     l4061:	
  9324  196C  1FB5               	btfss	(___ftge@ff2+2)^(0+128),7
  9325  196D  2982               	goto	l4065
  9326  196E  0933               	comf	___ftge@ff2^(0+128),w
  9327  196F  00B6               	movwf	??___ftge^(0+128)
  9328  1970  0934               	comf	(___ftge@ff2+1)^(0+128),w
  9329  1971  00B7               	movwf	(??___ftge^(0+128)+1)
  9330  1972  0935               	comf	(___ftge@ff2+2)^(0+128),w
  9331  1973  00B8               	movwf	(??___ftge^(0+128)+2)
  9332  1974  0AB6               	incf	??___ftge^(0+128),f
  9333  1975  1903               	skipnz
  9334  1976  0AB7               	incf	(??___ftge^(0+128)+1),f
  9335  1977  1903               	skipnz
  9336  1978  0AB8               	incf	(??___ftge^(0+128)+2),f
  9337  1979  3000               	movlw	0
  9338  197A  0736               	addwf	??___ftge^(0+128),w
  9339  197B  00B3               	movwf	___ftge@ff2^(0+128)
  9340  197C  3000               	movlw	0
  9341  197D  3D37               	addwfc	(??___ftge+1)^(0+128),w
  9342  197E  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  9343  197F  3080               	movlw	128
  9344  1980  3D38               	addwfc	(??___ftge+2)^(0+128),w
  9345  1981  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  9346  1982                     l4065:	
  9347  1982  3080               	movlw	128
  9348  1983  06B2               	xorwf	(___ftge@ff1+2)^(0+128),f
  9349  1984  3080               	movlw	128
  9350  1985  06B5               	xorwf	(___ftge@ff2+2)^(0+128),f
  9351  1986  0835               	movf	(___ftge@ff2+2)^(0+128),w
  9352  1987  0232               	subwf	(___ftge@ff1+2)^(0+128),w
  9353  1988  1D03               	skipz
  9354  1989  0008               	return
  9355  198A  0834               	movf	(___ftge@ff2+1)^(0+128),w
  9356  198B  0231               	subwf	(___ftge@ff1+1)^(0+128),w
  9357  198C  1D03               	skipz
  9358  198D  0008               	return
  9359  198E  0833               	movf	___ftge@ff2^(0+128),w
  9360  198F  0230               	subwf	___ftge@ff1^(0+128),w
  9361  1990  0008               	return
  9362  1991                     __end_of___ftge:	
  9363                           
  9364                           	psect	text30
  9365  100C                     __ptext30:	
  9366 ;; *************** function ___ftdiv *****************
  9367 ;; Defined at:
  9368 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;  f2              3   37[BANK1 ] float 
  9371 ;;  f1              3   40[BANK1 ] float 
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;  f3              3   48[BANK1 ] float 
  9374 ;;  sign            1   52[BANK1 ] unsigned char 
  9375 ;;  exp             1   51[BANK1 ] unsigned char 
  9376 ;;  cntr            1   47[BANK1 ] unsigned char 
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  3   37[BANK1 ] float 
  9379 ;; Registers used:
  9380 ;;		wreg, status,2, status,0, pclath, cstack
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9386 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9387 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9388 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9389 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9390 ;;Total ram usage:       16 bytes
  9391 ;; Hardware stack levels used:    1
  9392 ;; Hardware stack levels required when called:    4
  9393 ;; This function calls:
  9394 ;;		___ftpack
  9395 ;; This function is called by:
  9396 ;;		_Adaptive_base_pid
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           
  9401                           ;psect for function ___ftdiv
  9402  100C                     ___ftdiv:	
  9403                           
  9404                           ;incstack = 0
  9405                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9406  100C  0021               	movlb	1	; select bank1
  9407  100D  0848               	movf	___ftdiv@f1^(0+128),w
  9408  100E  00CB               	movwf	??___ftdiv^(0+128)
  9409  100F  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  9410  1010  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9411  1011  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  9412  1012  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9413  1013  1003               	clrc
  9414  1014  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  9415  1015  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  9416  1016  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9417  1017  084E               	movf	(??___ftdiv+3)^(0+128),w
  9418  1018  00D3               	movwf	___ftdiv@exp^(0+128)
  9419  1019  0853               	movf	___ftdiv@exp^(0+128),w
  9420  101A  1D03               	btfss	3,2
  9421  101B  2823               	goto	l4021
  9422  101C  3000               	movlw	0
  9423  101D  00C5               	movwf	?___ftdiv^(0+128)
  9424  101E  3000               	movlw	0
  9425  101F  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9426  1020  3000               	movlw	0
  9427  1021  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9428  1022  0008               	return
  9429  1023                     l4021:	
  9430  1023  0845               	movf	___ftdiv@f2^(0+128),w
  9431  1024  00CB               	movwf	??___ftdiv^(0+128)
  9432  1025  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9433  1026  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9434  1027  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9435  1028  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9436  1029  1003               	clrc
  9437  102A  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  9438  102B  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  9439  102C  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9440  102D  084E               	movf	(??___ftdiv+3)^(0+128),w
  9441  102E  00D4               	movwf	___ftdiv@sign^(0+128)
  9442  102F  0854               	movf	___ftdiv@sign^(0+128),w
  9443  1030  1D03               	btfss	3,2
  9444  1031  2839               	goto	l4027
  9445  1032  3000               	movlw	0
  9446  1033  00C5               	movwf	?___ftdiv^(0+128)
  9447  1034  3000               	movlw	0
  9448  1035  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9449  1036  3000               	movlw	0
  9450  1037  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9451  1038  0008               	return
  9452  1039                     l4027:	
  9453  1039  3000               	movlw	0
  9454  103A  00D0               	movwf	___ftdiv@f3^(0+128)
  9455  103B  3000               	movlw	0
  9456  103C  00D1               	movwf	(___ftdiv@f3+1)^(0+128)
  9457  103D  3000               	movlw	0
  9458  103E  00D2               	movwf	(___ftdiv@f3+2)^(0+128)
  9459  103F  3089               	movlw	137
  9460  1040  0754               	addwf	___ftdiv@sign^(0+128),w
  9461  1041  00CB               	movwf	??___ftdiv^(0+128)
  9462  1042  084B               	movf	??___ftdiv^(0+128),w
  9463  1043  02D3               	subwf	___ftdiv@exp^(0+128),f
  9464  1044  0848               	movf	___ftdiv@f1^(0+128),w
  9465  1045  00CB               	movwf	??___ftdiv^(0+128)
  9466  1046  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  9467  1047  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9468  1048  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  9469  1049  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9470  104A  3010               	movlw	16
  9471  104B                     u5265:	
  9472  104B  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  9473  104C  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  9474  104D  0CCB               	rrf	??___ftdiv^(0+128),f
  9475  104E  0B89               	decfsz	9,f
  9476  104F  284B               	goto	u5265
  9477  1050  084B               	movf	??___ftdiv^(0+128),w
  9478  1051  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9479  1052  084E               	movf	(??___ftdiv+3)^(0+128),w
  9480  1053  00D4               	movwf	___ftdiv@sign^(0+128)
  9481  1054  0845               	movf	___ftdiv@f2^(0+128),w
  9482  1055  00CB               	movwf	??___ftdiv^(0+128)
  9483  1056  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9484  1057  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9485  1058  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9486  1059  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9487  105A  3010               	movlw	16
  9488  105B                     u5275:	
  9489  105B  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  9490  105C  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  9491  105D  0CCB               	rrf	??___ftdiv^(0+128),f
  9492  105E  0B89               	decfsz	9,f
  9493  105F  285B               	goto	u5275
  9494  1060  084B               	movf	??___ftdiv^(0+128),w
  9495  1061  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9496  1062  084E               	movf	(??___ftdiv+3)^(0+128),w
  9497  1063  06D4               	xorwf	___ftdiv@sign^(0+128),f
  9498  1064  3080               	movlw	128
  9499  1065  00CB               	movwf	??___ftdiv^(0+128)
  9500  1066  084B               	movf	??___ftdiv^(0+128),w
  9501  1067  05D4               	andwf	___ftdiv@sign^(0+128),f
  9502  1068  17C9               	bsf	(___ftdiv@f1^(0+128)+1),7
  9503  1069  30FF               	movlw	255
  9504  106A  05C8               	andwf	___ftdiv@f1^(0+128),f
  9505  106B  30FF               	movlw	255
  9506  106C  05C9               	andwf	(___ftdiv@f1+1)^(0+128),f
  9507  106D  3000               	movlw	0
  9508  106E  05CA               	andwf	(___ftdiv@f1+2)^(0+128),f
  9509  106F  17C6               	bsf	(___ftdiv@f2^(0+128)+1),7
  9510  1070  30FF               	movlw	255
  9511  1071  05C5               	andwf	___ftdiv@f2^(0+128),f
  9512  1072  30FF               	movlw	255
  9513  1073  05C6               	andwf	(___ftdiv@f2+1)^(0+128),f
  9514  1074  3000               	movlw	0
  9515  1075  05C7               	andwf	(___ftdiv@f2+2)^(0+128),f
  9516  1076  3018               	movlw	24
  9517  1077  00CB               	movwf	??___ftdiv^(0+128)
  9518  1078  084B               	movf	??___ftdiv^(0+128),w
  9519  1079  00CF               	movwf	___ftdiv@cntr^(0+128)
  9520  107A                     l4041:	
  9521  107A  3001               	movlw	1
  9522  107B                     u5285:	
  9523  107B  35D0               	lslf	___ftdiv@f3^(0+128),f
  9524  107C  0DD1               	rlf	(___ftdiv@f3+1)^(0+128),f
  9525  107D  0DD2               	rlf	(___ftdiv@f3+2)^(0+128),f
  9526  107E  0B89               	decfsz	9,f
  9527  107F  287B               	goto	u5285
  9528  1080  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9529  1081  024A               	subwf	(___ftdiv@f1+2)^(0+128),w
  9530  1082  1D03               	skipz
  9531  1083  288A               	goto	u5295
  9532  1084  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9533  1085  0249               	subwf	(___ftdiv@f1+1)^(0+128),w
  9534  1086  1D03               	skipz
  9535  1087  288A               	goto	u5295
  9536  1088  0845               	movf	___ftdiv@f2^(0+128),w
  9537  1089  0248               	subwf	___ftdiv@f1^(0+128),w
  9538  108A                     u5295:	
  9539  108A  1C03               	skipc
  9540  108B  2893               	goto	l4049
  9541  108C  0845               	movf	___ftdiv@f2^(0+128),w
  9542  108D  02C8               	subwf	___ftdiv@f1^(0+128),f
  9543  108E  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9544  108F  3BC9               	subwfb	(___ftdiv@f1+1)^(0+128),f
  9545  1090  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9546  1091  3BCA               	subwfb	(___ftdiv@f1+2)^(0+128),f
  9547  1092  1450               	bsf	___ftdiv@f3^(0+128),0
  9548  1093                     l4049:	
  9549  1093  3001               	movlw	1
  9550  1094                     u5305:	
  9551  1094  35C8               	lslf	___ftdiv@f1^(0+128),f
  9552  1095  0DC9               	rlf	(___ftdiv@f1+1)^(0+128),f
  9553  1096  0DCA               	rlf	(___ftdiv@f1+2)^(0+128),f
  9554  1097  0B89               	decfsz	9,f
  9555  1098  2894               	goto	u5305
  9556  1099  3001               	movlw	1
  9557  109A  02CF               	subwf	___ftdiv@cntr^(0+128),f
  9558  109B  1D03               	btfss	3,2
  9559  109C  287A               	goto	l4041
  9560  109D  0850               	movf	___ftdiv@f3^(0+128),w
  9561  109E  00A0               	movwf	___ftpack@arg^(0+128)
  9562  109F  0851               	movf	(___ftdiv@f3+1)^(0+128),w
  9563  10A0  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9564  10A1  0852               	movf	(___ftdiv@f3+2)^(0+128),w
  9565  10A2  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9566  10A3  0853               	movf	___ftdiv@exp^(0+128),w
  9567  10A4  00CB               	movwf	??___ftdiv^(0+128)
  9568  10A5  084B               	movf	??___ftdiv^(0+128),w
  9569  10A6  00A3               	movwf	___ftpack@exp^(0+128)
  9570  10A7  0854               	movf	___ftdiv@sign^(0+128),w
  9571  10A8  00CC               	movwf	(??___ftdiv+1)^(0+128)
  9572  10A9  084C               	movf	(??___ftdiv+1)^(0+128),w
  9573  10AA  00A4               	movwf	___ftpack@sign^(0+128)
  9574  10AB  319B  23F1         	fcall	___ftpack
  9575  10AD  0021               	movlb	1	; select bank1
  9576  10AE  0820               	movf	?___ftpack^(0+128),w
  9577  10AF  00C5               	movwf	?___ftdiv^(0+128)
  9578  10B0  0821               	movf	(?___ftpack+1)^(0+128),w
  9579  10B1  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9580  10B2  0822               	movf	(?___ftpack+2)^(0+128),w
  9581  10B3  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9582  10B4  0008               	return
  9583  10B5                     __end_of___ftdiv:	
  9584                           
  9585                           	psect	text31
  9586  125F                     __ptext31:	
  9587 ;; *************** function ___ftadd *****************
  9588 ;; Defined at:
  9589 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;  f1              3    8[BANK1 ] float 
  9592 ;;  f2              3   11[BANK1 ] float 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  exp1            1   20[BANK1 ] unsigned char 
  9595 ;;  exp2            1   19[BANK1 ] unsigned char 
  9596 ;;  sign            1   18[BANK1 ] unsigned char 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  3    8[BANK1 ] float 
  9599 ;; Registers used:
  9600 ;;		wreg, status,2, status,0, pclath, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9606 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9607 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9608 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9609 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9610 ;;Total ram usage:       13 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:    4
  9613 ;; This function calls:
  9614 ;;		___ftpack
  9615 ;; This function is called by:
  9616 ;;		_Adaptive_base_pid
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620                           
  9621                           ;psect for function ___ftadd
  9622  125F                     ___ftadd:	
  9623                           
  9624                           ;incstack = 0
  9625                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9626  125F  0021               	movlb	1	; select bank1
  9627  1260  0828               	movf	___ftadd@f1^(0+128),w
  9628  1261  00AE               	movwf	??___ftadd^(0+128)
  9629  1262  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9630  1263  00AF               	movwf	(??___ftadd^(0+128)+1)
  9631  1264  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9632  1265  00B0               	movwf	(??___ftadd^(0+128)+2)
  9633  1266  1003               	clrc
  9634  1267  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  9635  1268  0D30               	rlf	(??___ftadd^(0+128)+2),w
  9636  1269  00B1               	movwf	(??___ftadd+3)^(0+128)
  9637  126A  0831               	movf	(??___ftadd+3)^(0+128),w
  9638  126B  00B4               	movwf	___ftadd@exp1^(0+128)
  9639  126C  082B               	movf	___ftadd@f2^(0+128),w
  9640  126D  00AE               	movwf	??___ftadd^(0+128)
  9641  126E  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9642  126F  00AF               	movwf	(??___ftadd^(0+128)+1)
  9643  1270  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9644  1271  00B0               	movwf	(??___ftadd^(0+128)+2)
  9645  1272  1003               	clrc
  9646  1273  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  9647  1274  0D30               	rlf	(??___ftadd^(0+128)+2),w
  9648  1275  00B1               	movwf	(??___ftadd+3)^(0+128)
  9649  1276  0831               	movf	(??___ftadd+3)^(0+128),w
  9650  1277  00B3               	movwf	___ftadd@exp2^(0+128)
  9651  1278  0834               	movf	___ftadd@exp1^(0+128),w
  9652  1279  1903               	btfsc	3,2
  9653  127A  2A87               	goto	l3951
  9654  127B  0833               	movf	___ftadd@exp2^(0+128),w
  9655  127C  0234               	subwf	___ftadd@exp1^(0+128),w
  9656  127D  1803               	skipnc
  9657  127E  2A8E               	goto	l3955
  9658  127F  0334               	decf	___ftadd@exp1^(0+128),w
  9659  1280  3AFF               	xorlw	255
  9660  1281  0733               	addwf	___ftadd@exp2^(0+128),w
  9661  1282  00AE               	movwf	??___ftadd^(0+128)
  9662  1283  3019               	movlw	25
  9663  1284  022E               	subwf	??___ftadd^(0+128),w
  9664  1285  1C03               	skipc
  9665  1286  2A8E               	goto	l3955
  9666  1287                     l3951:	
  9667  1287  082B               	movf	___ftadd@f2^(0+128),w
  9668  1288  00A8               	movwf	?___ftadd^(0+128)
  9669  1289  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9670  128A  00A9               	movwf	(?___ftadd+1)^(0+128)
  9671  128B  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9672  128C  00AA               	movwf	(?___ftadd+2)^(0+128)
  9673  128D  0008               	return
  9674  128E                     l3955:	
  9675  128E  0833               	movf	___ftadd@exp2^(0+128),w
  9676  128F  1903               	btfsc	3,2
  9677  1290  0008               	return
  9678  1291  0834               	movf	___ftadd@exp1^(0+128),w
  9679  1292  0233               	subwf	___ftadd@exp2^(0+128),w
  9680  1293  1803               	skipnc
  9681  1294  2A9D               	goto	l3961
  9682  1295  0333               	decf	___ftadd@exp2^(0+128),w
  9683  1296  3AFF               	xorlw	255
  9684  1297  0734               	addwf	___ftadd@exp1^(0+128),w
  9685  1298  00AE               	movwf	??___ftadd^(0+128)
  9686  1299  3019               	movlw	25
  9687  129A  022E               	subwf	??___ftadd^(0+128),w
  9688  129B  1803               	btfsc	3,0
  9689  129C  0008               	return
  9690  129D                     l3961:	
  9691  129D  3006               	movlw	6
  9692  129E  00AE               	movwf	??___ftadd^(0+128)
  9693  129F  082E               	movf	??___ftadd^(0+128),w
  9694  12A0  00B2               	movwf	___ftadd@sign^(0+128)
  9695  12A1  1BAA               	btfsc	(___ftadd@f1+2)^(0+128),7
  9696  12A2  17B2               	bsf	___ftadd@sign^(0+128),7
  9697  12A3  1BAD               	btfsc	(___ftadd@f2+2)^(0+128),7
  9698  12A4  1732               	bsf	___ftadd@sign^(0+128),6
  9699  12A5  17A9               	bsf	(___ftadd@f1^(0+128)+1),7
  9700  12A6  30FF               	movlw	255
  9701  12A7  05A8               	andwf	___ftadd@f1^(0+128),f
  9702  12A8  30FF               	movlw	255
  9703  12A9  05A9               	andwf	(___ftadd@f1+1)^(0+128),f
  9704  12AA  3000               	movlw	0
  9705  12AB  05AA               	andwf	(___ftadd@f1+2)^(0+128),f
  9706  12AC  17AC               	bsf	(___ftadd@f2^(0+128)+1),7
  9707  12AD  30FF               	movlw	255
  9708  12AE  05AB               	andwf	___ftadd@f2^(0+128),f
  9709  12AF  30FF               	movlw	255
  9710  12B0  05AC               	andwf	(___ftadd@f2+1)^(0+128),f
  9711  12B1  3000               	movlw	0
  9712  12B2  05AD               	andwf	(___ftadd@f2+2)^(0+128),f
  9713  12B3  0833               	movf	___ftadd@exp2^(0+128),w
  9714  12B4  0234               	subwf	___ftadd@exp1^(0+128),w
  9715  12B5  1803               	skipnc
  9716  12B6  2AD9               	goto	l3983
  9717  12B7                     l3973:	
  9718  12B7  3001               	movlw	1
  9719  12B8                     u5105:	
  9720  12B8  35AB               	lslf	___ftadd@f2^(0+128),f
  9721  12B9  0DAC               	rlf	(___ftadd@f2+1)^(0+128),f
  9722  12BA  0DAD               	rlf	(___ftadd@f2+2)^(0+128),f
  9723  12BB  0B89               	decfsz	9,f
  9724  12BC  2AB8               	goto	u5105
  9725  12BD  3001               	movlw	1
  9726  12BE  02B3               	subwf	___ftadd@exp2^(0+128),f
  9727  12BF  0833               	movf	___ftadd@exp2^(0+128),w
  9728  12C0  0634               	xorwf	___ftadd@exp1^(0+128),w
  9729  12C1  1903               	skipnz
  9730  12C2  2AD4               	goto	l3981
  9731  12C3  3001               	movlw	1
  9732  12C4  02B2               	subwf	___ftadd@sign^(0+128),f
  9733  12C5  0832               	movf	___ftadd@sign^(0+128),w
  9734  12C6  3907               	andlw	7
  9735  12C7  1903               	btfsc	3,2
  9736  12C8  2AD4               	goto	l3981
  9737  12C9  2AB7               	goto	l3973
  9738  12CA                     l3979:	
  9739  12CA  3001               	movlw	1
  9740  12CB                     u5135:	
  9741  12CB  36AA               	lsrf	(___ftadd@f1+2)^(0+128),f
  9742  12CC  0CA9               	rrf	(___ftadd@f1+1)^(0+128),f
  9743  12CD  0CA8               	rrf	___ftadd@f1^(0+128),f
  9744  12CE  0B89               	decfsz	9,f
  9745  12CF  2ACB               	goto	u5135
  9746  12D0  3001               	movlw	1
  9747  12D1  00AE               	movwf	??___ftadd^(0+128)
  9748  12D2  082E               	movf	??___ftadd^(0+128),w
  9749  12D3  07B4               	addwf	___ftadd@exp1^(0+128),f
  9750  12D4                     l3981:	
  9751  12D4  0834               	movf	___ftadd@exp1^(0+128),w
  9752  12D5  0633               	xorwf	___ftadd@exp2^(0+128),w
  9753  12D6  1903               	btfsc	3,2
  9754  12D7  2AFE               	goto	l1157
  9755  12D8  2ACA               	goto	l3979
  9756  12D9                     l3983:	
  9757  12D9  0834               	movf	___ftadd@exp1^(0+128),w
  9758  12DA  0233               	subwf	___ftadd@exp2^(0+128),w
  9759  12DB  1803               	skipnc
  9760  12DC  2AFE               	goto	l1157
  9761  12DD                     l3985:	
  9762  12DD  3001               	movlw	1
  9763  12DE                     u5165:	
  9764  12DE  35A8               	lslf	___ftadd@f1^(0+128),f
  9765  12DF  0DA9               	rlf	(___ftadd@f1+1)^(0+128),f
  9766  12E0  0DAA               	rlf	(___ftadd@f1+2)^(0+128),f
  9767  12E1  0B89               	decfsz	9,f
  9768  12E2  2ADE               	goto	u5165
  9769  12E3  3001               	movlw	1
  9770  12E4  02B4               	subwf	___ftadd@exp1^(0+128),f
  9771  12E5  0833               	movf	___ftadd@exp2^(0+128),w
  9772  12E6  0634               	xorwf	___ftadd@exp1^(0+128),w
  9773  12E7  1903               	skipnz
  9774  12E8  2AFA               	goto	l3993
  9775  12E9  3001               	movlw	1
  9776  12EA  02B2               	subwf	___ftadd@sign^(0+128),f
  9777  12EB  0832               	movf	___ftadd@sign^(0+128),w
  9778  12EC  3907               	andlw	7
  9779  12ED  1903               	btfsc	3,2
  9780  12EE  2AFA               	goto	l3993
  9781  12EF  2ADD               	goto	l3985
  9782  12F0                     l3991:	
  9783  12F0  3001               	movlw	1
  9784  12F1                     u5195:	
  9785  12F1  36AD               	lsrf	(___ftadd@f2+2)^(0+128),f
  9786  12F2  0CAC               	rrf	(___ftadd@f2+1)^(0+128),f
  9787  12F3  0CAB               	rrf	___ftadd@f2^(0+128),f
  9788  12F4  0B89               	decfsz	9,f
  9789  12F5  2AF1               	goto	u5195
  9790  12F6  3001               	movlw	1
  9791  12F7  00AE               	movwf	??___ftadd^(0+128)
  9792  12F8  082E               	movf	??___ftadd^(0+128),w
  9793  12F9  07B3               	addwf	___ftadd@exp2^(0+128),f
  9794  12FA                     l3993:	
  9795  12FA  0834               	movf	___ftadd@exp1^(0+128),w
  9796  12FB  0633               	xorwf	___ftadd@exp2^(0+128),w
  9797  12FC  1D03               	skipz
  9798  12FD  2AF0               	goto	l3991
  9799  12FE                     l1157:	
  9800  12FE  1FB2               	btfss	___ftadd@sign^(0+128),7
  9801  12FF  2B10               	goto	l3997
  9802  1300  30FF               	movlw	255
  9803  1301  06A8               	xorwf	___ftadd@f1^(0+128),f
  9804  1302  30FF               	movlw	255
  9805  1303  06A9               	xorwf	(___ftadd@f1+1)^(0+128),f
  9806  1304  30FF               	movlw	255
  9807  1305  06AA               	xorwf	(___ftadd@f1+2)^(0+128),f
  9808  1306  3001               	movlw	1
  9809  1307  07A8               	addwf	___ftadd@f1^(0+128),f
  9810  1308  3000               	movlw	0
  9811  1309  1803               	skipnc
  9812  130A  3001               	movlw	1
  9813  130B  07A9               	addwf	(___ftadd@f1+1)^(0+128),f
  9814  130C  3000               	movlw	0
  9815  130D  1803               	skipnc
  9816  130E  3001               	movlw	1
  9817  130F  07AA               	addwf	(___ftadd@f1+2)^(0+128),f
  9818  1310                     l3997:	
  9819  1310  1F32               	btfss	___ftadd@sign^(0+128),6
  9820  1311  2B22               	goto	l4001
  9821  1312  30FF               	movlw	255
  9822  1313  06AB               	xorwf	___ftadd@f2^(0+128),f
  9823  1314  30FF               	movlw	255
  9824  1315  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9825  1316  30FF               	movlw	255
  9826  1317  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9827  1318  3001               	movlw	1
  9828  1319  07AB               	addwf	___ftadd@f2^(0+128),f
  9829  131A  3000               	movlw	0
  9830  131B  1803               	skipnc
  9831  131C  3001               	movlw	1
  9832  131D  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9833  131E  3000               	movlw	0
  9834  131F  1803               	skipnc
  9835  1320  3001               	movlw	1
  9836  1321  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9837  1322                     l4001:	
  9838  1322  01B2               	clrf	___ftadd@sign^(0+128)
  9839  1323  0828               	movf	___ftadd@f1^(0+128),w
  9840  1324  07AB               	addwf	___ftadd@f2^(0+128),f
  9841  1325  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9842  1326  3DAC               	addwfc	(___ftadd@f2+1)^(0+128),f
  9843  1327  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9844  1328  3DAD               	addwfc	(___ftadd@f2+2)^(0+128),f
  9845  1329  1FAD               	btfss	(___ftadd@f2+2)^(0+128),7
  9846  132A  2B3D               	goto	l4011
  9847  132B  30FF               	movlw	255
  9848  132C  06AB               	xorwf	___ftadd@f2^(0+128),f
  9849  132D  30FF               	movlw	255
  9850  132E  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9851  132F  30FF               	movlw	255
  9852  1330  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9853  1331  3001               	movlw	1
  9854  1332  07AB               	addwf	___ftadd@f2^(0+128),f
  9855  1333  3000               	movlw	0
  9856  1334  1803               	skipnc
  9857  1335  3001               	movlw	1
  9858  1336  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9859  1337  3000               	movlw	0
  9860  1338  1803               	skipnc
  9861  1339  3001               	movlw	1
  9862  133A  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9863  133B  01B2               	clrf	___ftadd@sign^(0+128)
  9864  133C  0AB2               	incf	___ftadd@sign^(0+128),f
  9865  133D                     l4011:	
  9866  133D  082B               	movf	___ftadd@f2^(0+128),w
  9867  133E  00A0               	movwf	___ftpack@arg^(0+128)
  9868  133F  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9869  1340  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9870  1341  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9871  1342  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9872  1343  0834               	movf	___ftadd@exp1^(0+128),w
  9873  1344  00AE               	movwf	??___ftadd^(0+128)
  9874  1345  082E               	movf	??___ftadd^(0+128),w
  9875  1346  00A3               	movwf	___ftpack@exp^(0+128)
  9876  1347  0832               	movf	___ftadd@sign^(0+128),w
  9877  1348  00AF               	movwf	(??___ftadd+1)^(0+128)
  9878  1349  082F               	movf	(??___ftadd+1)^(0+128),w
  9879  134A  00A4               	movwf	___ftpack@sign^(0+128)
  9880  134B  319B  23F1         	fcall	___ftpack
  9881  134D  0021               	movlb	1	; select bank1
  9882  134E  0820               	movf	?___ftpack^(0+128),w
  9883  134F  00A8               	movwf	?___ftadd^(0+128)
  9884  1350  0821               	movf	(?___ftpack+1)^(0+128),w
  9885  1351  00A9               	movwf	(?___ftadd+1)^(0+128)
  9886  1352  0822               	movf	(?___ftpack+2)^(0+128),w
  9887  1353  00AA               	movwf	(?___ftadd+2)^(0+128)
  9888  1354  0008               	return
  9889  1355                     __end_of___ftadd:	
  9890                           
  9891                           	psect	text32
  9892  1991                     __ptext32:	
  9893 ;; *************** function ___altoft *****************
  9894 ;; Defined at:
  9895 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  9896 ;; Parameters:    Size  Location     Type
  9897 ;;  c               4    8[BANK1 ] long 
  9898 ;; Auto vars:     Size  Location     Type
  9899 ;;  sign            1   15[BANK1 ] unsigned char 
  9900 ;;  exp             1   14[BANK1 ] unsigned char 
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  3    8[BANK1 ] float 
  9903 ;; Registers used:
  9904 ;;		wreg, status,2, status,0, pclath, cstack
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9910 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9911 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9912 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9913 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9914 ;;Total ram usage:        8 bytes
  9915 ;; Hardware stack levels used:    1
  9916 ;; Hardware stack levels required when called:    4
  9917 ;; This function calls:
  9918 ;;		___ftpack
  9919 ;; This function is called by:
  9920 ;;		_Adaptive_base_pid
  9921 ;; This function uses a non-reentrant model
  9922 ;;
  9923                           
  9924                           
  9925                           ;psect for function ___altoft
  9926  1991                     ___altoft:	
  9927                           
  9928                           ;incstack = 0
  9929                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  9930  1991  0021               	movlb	1	; select bank1
  9931  1992  01AF               	clrf	___altoft@sign^(0+128)
  9932  1993  308E               	movlw	142
  9933  1994  00AC               	movwf	??___altoft^(0+128)
  9934  1995  082C               	movf	??___altoft^(0+128),w
  9935  1996  00AE               	movwf	___altoft@exp^(0+128)
  9936  1997  1FAB               	btfss	(___altoft@c+3)^(0+128),7
  9937  1998  29A6               	goto	l3939
  9938  1999  09A8               	comf	___altoft@c^(0+128),f
  9939  199A  09A9               	comf	(___altoft@c+1)^(0+128),f
  9940  199B  09AA               	comf	(___altoft@c+2)^(0+128),f
  9941  199C  09AB               	comf	(___altoft@c+3)^(0+128),f
  9942  199D  0AA8               	incf	___altoft@c^(0+128),f
  9943  199E  1903               	skipnz
  9944  199F  0AA9               	incf	(___altoft@c+1)^(0+128),f
  9945  19A0  1903               	skipnz
  9946  19A1  0AAA               	incf	(___altoft@c+2)^(0+128),f
  9947  19A2  1903               	skipnz
  9948  19A3  0AAB               	incf	(___altoft@c+3)^(0+128),f
  9949  19A4  01AF               	clrf	___altoft@sign^(0+128)
  9950  19A5  0AAF               	incf	___altoft@sign^(0+128),f
  9951  19A6                     l3939:	
  9952  19A6  30FF               	movlw	255
  9953  19A7  052B               	andwf	(___altoft@c+3)^(0+128),w
  9954  19A8  1903               	btfsc	3,2
  9955  19A9  29B6               	goto	l3941
  9956  19AA  3001               	movlw	1
  9957  19AB                     u4995:	
  9958  19AB  36AB               	lsrf	(___altoft@c+3)^(0+128),f
  9959  19AC  0CAA               	rrf	(___altoft@c+2)^(0+128),f
  9960  19AD  0CA9               	rrf	(___altoft@c+1)^(0+128),f
  9961  19AE  0CA8               	rrf	___altoft@c^(0+128),f
  9962  19AF  0B89               	decfsz	9,f
  9963  19B0  29AB               	goto	u4995
  9964  19B1  3001               	movlw	1
  9965  19B2  00AC               	movwf	??___altoft^(0+128)
  9966  19B3  082C               	movf	??___altoft^(0+128),w
  9967  19B4  07AE               	addwf	___altoft@exp^(0+128),f
  9968  19B5  29A6               	goto	l3939
  9969  19B6                     l3941:	
  9970  19B6  0828               	movf	___altoft@c^(0+128),w
  9971  19B7  00A0               	movwf	___ftpack@arg^(0+128)
  9972  19B8  0829               	movf	(___altoft@c+1)^(0+128),w
  9973  19B9  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9974  19BA  082A               	movf	(___altoft@c+2)^(0+128),w
  9975  19BB  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9976  19BC  082E               	movf	___altoft@exp^(0+128),w
  9977  19BD  00AC               	movwf	??___altoft^(0+128)
  9978  19BE  082C               	movf	??___altoft^(0+128),w
  9979  19BF  00A3               	movwf	___ftpack@exp^(0+128)
  9980  19C0  082F               	movf	___altoft@sign^(0+128),w
  9981  19C1  00AD               	movwf	(??___altoft+1)^(0+128)
  9982  19C2  082D               	movf	(??___altoft+1)^(0+128),w
  9983  19C3  00A4               	movwf	___ftpack@sign^(0+128)
  9984  19C4  319B  23F1         	fcall	___ftpack
  9985  19C6  0021               	movlb	1	; select bank1
  9986  19C7  0820               	movf	?___ftpack^(0+128),w
  9987  19C8  00A8               	movwf	?___altoft^(0+128)
  9988  19C9  0821               	movf	(?___ftpack+1)^(0+128),w
  9989  19CA  00A9               	movwf	(?___altoft+1)^(0+128)
  9990  19CB  0822               	movf	(?___ftpack+2)^(0+128),w
  9991  19CC  00AA               	movwf	(?___altoft+2)^(0+128)
  9992  19CD  0008               	return
  9993  19CE                     __end_of___altoft:	
  9994                           
  9995                           	psect	text33
  9996  1BF1                     __ptext33:	
  9997 ;; *************** function ___ftpack *****************
  9998 ;; Defined at:
  9999 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  arg             3    0[BANK1 ] unsigned um
 10002 ;;  exp             1    3[BANK1 ] unsigned char 
 10003 ;;  sign            1    4[BANK1 ] unsigned char 
 10004 ;; Auto vars:     Size  Location     Type
 10005 ;;		None
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  3    0[BANK1 ] float 
 10008 ;; Registers used:
 10009 ;;		wreg, status,2, status,0
 10010 ;; Tracked objects:
 10011 ;;		On entry : 0/0
 10012 ;;		On exit  : 0/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10015 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10017 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10018 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10019 ;;Total ram usage:        8 bytes
 10020 ;; Hardware stack levels used:    1
 10021 ;; Hardware stack levels required when called:    3
 10022 ;; This function calls:
 10023 ;;		Nothing
 10024 ;; This function is called by:
 10025 ;;		___altoft
 10026 ;;		___ftadd
 10027 ;;		___ftdiv
 10028 ;;		___ftmul
 10029 ;;		___lwtoft
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033                           
 10034                           ;psect for function ___ftpack
 10035  1BF1                     ___ftpack:	
 10036                           
 10037                           ;incstack = 0
 10038                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10039  1BF1  0021               	movlb	1	; select bank1
 10040  1BF2  0823               	movf	___ftpack@exp^(0+128),w
 10041  1BF3  1903               	btfsc	3,2
 10042  1BF4  2BFA               	goto	l3725
 10043  1BF5  0822               	movf	(___ftpack@arg+2)^(0+128),w
 10044  1BF6  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
 10045  1BF7  0420               	iorwf	___ftpack@arg^(0+128),w
 10046  1BF8  1D03               	skipz
 10047  1BF9  2C0B               	goto	l3731
 10048  1BFA                     l3725:	
 10049  1BFA  3000               	movlw	0
 10050  1BFB  00A0               	movwf	?___ftpack^(0+128)
 10051  1BFC  3000               	movlw	0
 10052  1BFD  00A1               	movwf	(?___ftpack+1)^(0+128)
 10053  1BFE  3000               	movlw	0
 10054  1BFF  00A2               	movwf	(?___ftpack+2)^(0+128)
 10055  1C00  0008               	return
 10056  1C01                     l3729:	
 10057  1C01  3001               	movlw	1
 10058  1C02  00A5               	movwf	??___ftpack^(0+128)
 10059  1C03  0825               	movf	??___ftpack^(0+128),w
 10060  1C04  07A3               	addwf	___ftpack@exp^(0+128),f
 10061  1C05  3001               	movlw	1
 10062  1C06                     u4585:	
 10063  1C06  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
 10064  1C07  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
 10065  1C08  0CA0               	rrf	___ftpack@arg^(0+128),f
 10066  1C09  0B89               	decfsz	9,f
 10067  1C0A  2C06               	goto	u4585
 10068  1C0B                     l3731:	
 10069  1C0B  30FE               	movlw	254
 10070  1C0C  0522               	andwf	(___ftpack@arg+2)^(0+128),w
 10071  1C0D  1903               	btfsc	3,2
 10072  1C0E  2C24               	goto	l1126
 10073  1C0F  2C01               	goto	l3729
 10074  1C10                     l3733:	
 10075  1C10  3001               	movlw	1
 10076  1C11  00A5               	movwf	??___ftpack^(0+128)
 10077  1C12  0825               	movf	??___ftpack^(0+128),w
 10078  1C13  07A3               	addwf	___ftpack@exp^(0+128),f
 10079  1C14  3001               	movlw	1
 10080  1C15  07A0               	addwf	___ftpack@arg^(0+128),f
 10081  1C16  3000               	movlw	0
 10082  1C17  1803               	skipnc
 10083  1C18  3001               	movlw	1
 10084  1C19  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
 10085  1C1A  3000               	movlw	0
 10086  1C1B  1803               	skipnc
 10087  1C1C  3001               	movlw	1
 10088  1C1D  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
 10089  1C1E  3001               	movlw	1
 10090  1C1F                     u4605:	
 10091  1C1F  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
 10092  1C20  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
 10093  1C21  0CA0               	rrf	___ftpack@arg^(0+128),f
 10094  1C22  0B89               	decfsz	9,f
 10095  1C23  2C1F               	goto	u4605
 10096  1C24                     l1126:	
 10097  1C24  30FF               	movlw	255
 10098  1C25  0522               	andwf	(___ftpack@arg+2)^(0+128),w
 10099  1C26  1903               	btfsc	3,2
 10100  1C27  2C35               	goto	l3741
 10101  1C28  2C10               	goto	l3733
 10102  1C29                     l3743:	
 10103  1C29  3002               	movlw	2
 10104  1C2A  0223               	subwf	___ftpack@exp^(0+128),w
 10105  1C2B  1C03               	btfss	3,0
 10106  1C2C  2C37               	goto	l1133
 10107  1C2D  3001               	movlw	1
 10108  1C2E  02A3               	subwf	___ftpack@exp^(0+128),f
 10109  1C2F  3001               	movlw	1
 10110  1C30                     u4625:	
 10111  1C30  35A0               	lslf	___ftpack@arg^(0+128),f
 10112  1C31  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
 10113  1C32  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
 10114  1C33  0B89               	decfsz	9,f
 10115  1C34  2C30               	goto	u4625
 10116  1C35                     l3741:	
 10117  1C35  1FA1               	btfss	(___ftpack@arg+1)^(0+128),7
 10118  1C36  2C29               	goto	l3743
 10119  1C37                     l1133:	
 10120  1C37  1823               	btfsc	___ftpack@exp^(0+128),0
 10121  1C38  2C3F               	goto	l1134
 10122  1C39  30FF               	movlw	255
 10123  1C3A  05A0               	andwf	___ftpack@arg^(0+128),f
 10124  1C3B  307F               	movlw	127
 10125  1C3C  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
 10126  1C3D  30FF               	movlw	255
 10127  1C3E  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
 10128  1C3F                     l1134:	
 10129  1C3F  1003               	clrc
 10130  1C40  0CA3               	rrf	___ftpack@exp^(0+128),f
 10131  1C41  0823               	movf	___ftpack@exp^(0+128),w
 10132  1C42  00A5               	movwf	??___ftpack^(0+128)
 10133  1C43  01A6               	clrf	(??___ftpack^(0+128)+1)
 10134  1C44  01A7               	clrf	(??___ftpack^(0+128)+2)
 10135  1C45  3010               	movlw	16
 10136  1C46                     u4665:	
 10137  1C46  35A5               	lslf	??___ftpack^(0+128),f
 10138  1C47  0DA6               	rlf	(??___ftpack^(0+128)+1),f
 10139  1C48  0DA7               	rlf	(??___ftpack^(0+128)+2),f
 10140  1C49  0B89               	decfsz	9,f
 10141  1C4A  2C46               	goto	u4665
 10142  1C4B  0825               	movf	??___ftpack^(0+128),w
 10143  1C4C  04A0               	iorwf	___ftpack@arg^(0+128),f
 10144  1C4D  0826               	movf	(??___ftpack+1)^(0+128),w
 10145  1C4E  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
 10146  1C4F  0827               	movf	(??___ftpack+2)^(0+128),w
 10147  1C50  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
 10148  1C51  0824               	movf	___ftpack@sign^(0+128),w
 10149  1C52  1903               	btfsc	3,2
 10150  1C53  0008               	return
 10151  1C54  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
 10152  1C55  0008               	return
 10153  1C56                     __end_of___ftpack:	
 10154                           
 10155                           	psect	text34
 10156  1DC7                     __ptext34:	
 10157 ;; *************** function ___aldiv *****************
 10158 ;; Defined at:
 10159 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;  divisor         4    0[BANK1 ] long 
 10162 ;;  dividend        4    4[BANK1 ] long 
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;  quotient        4   11[BANK1 ] long 
 10165 ;;  sign            1   10[BANK1 ] unsigned char 
 10166 ;;  counter         1    9[BANK1 ] unsigned char 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  4    0[BANK1 ] long 
 10169 ;; Registers used:
 10170 ;;		wreg, status,2, status,0
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10176 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10177 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10178 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10179 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10180 ;;Total ram usage:       15 bytes
 10181 ;; Hardware stack levels used:    1
 10182 ;; Hardware stack levels required when called:    3
 10183 ;; This function calls:
 10184 ;;		Nothing
 10185 ;; This function is called by:
 10186 ;;		_Adaptive_base_pid
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           
 10191                           ;psect for function ___aldiv
 10192  1DC7                     ___aldiv:	
 10193                           
 10194                           ;incstack = 0
 10195                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10196  1DC7  0021               	movlb	1	; select bank1
 10197  1DC8  01AA               	clrf	___aldiv@sign^(0+128)
 10198  1DC9  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
 10199  1DCA  2DD8               	goto	l1020
 10200  1DCB  09A0               	comf	___aldiv@divisor^(0+128),f
 10201  1DCC  09A1               	comf	(___aldiv@divisor+1)^(0+128),f
 10202  1DCD  09A2               	comf	(___aldiv@divisor+2)^(0+128),f
 10203  1DCE  09A3               	comf	(___aldiv@divisor+3)^(0+128),f
 10204  1DCF  0AA0               	incf	___aldiv@divisor^(0+128),f
 10205  1DD0  1903               	skipnz
 10206  1DD1  0AA1               	incf	(___aldiv@divisor+1)^(0+128),f
 10207  1DD2  1903               	skipnz
 10208  1DD3  0AA2               	incf	(___aldiv@divisor+2)^(0+128),f
 10209  1DD4  1903               	skipnz
 10210  1DD5  0AA3               	incf	(___aldiv@divisor+3)^(0+128),f
 10211  1DD6  01AA               	clrf	___aldiv@sign^(0+128)
 10212  1DD7  0AAA               	incf	___aldiv@sign^(0+128),f
 10213  1DD8                     l1020:	
 10214  1DD8  1FA7               	btfss	(___aldiv@dividend+3)^(0+128),7
 10215  1DD9  2DE9               	goto	l3899
 10216  1DDA  09A4               	comf	___aldiv@dividend^(0+128),f
 10217  1DDB  09A5               	comf	(___aldiv@dividend+1)^(0+128),f
 10218  1DDC  09A6               	comf	(___aldiv@dividend+2)^(0+128),f
 10219  1DDD  09A7               	comf	(___aldiv@dividend+3)^(0+128),f
 10220  1DDE  0AA4               	incf	___aldiv@dividend^(0+128),f
 10221  1DDF  1903               	skipnz
 10222  1DE0  0AA5               	incf	(___aldiv@dividend+1)^(0+128),f
 10223  1DE1  1903               	skipnz
 10224  1DE2  0AA6               	incf	(___aldiv@dividend+2)^(0+128),f
 10225  1DE3  1903               	skipnz
 10226  1DE4  0AA7               	incf	(___aldiv@dividend+3)^(0+128),f
 10227  1DE5  3001               	movlw	1
 10228  1DE6  00A8               	movwf	??___aldiv^(0+128)
 10229  1DE7  0828               	movf	??___aldiv^(0+128),w
 10230  1DE8  06AA               	xorwf	___aldiv@sign^(0+128),f
 10231  1DE9                     l3899:	
 10232  1DE9  3000               	movlw	0
 10233  1DEA  00AE               	movwf	(___aldiv@quotient+3)^(0+128)
 10234  1DEB  3000               	movlw	0
 10235  1DEC  00AD               	movwf	(___aldiv@quotient+2)^(0+128)
 10236  1DED  3000               	movlw	0
 10237  1DEE  00AC               	movwf	(___aldiv@quotient+1)^(0+128)
 10238  1DEF  3000               	movlw	0
 10239  1DF0  00AB               	movwf	___aldiv@quotient^(0+128)
 10240  1DF1  0823               	movf	(___aldiv@divisor+3)^(0+128),w
 10241  1DF2  0422               	iorwf	(___aldiv@divisor+2)^(0+128),w
 10242  1DF3  0421               	iorwf	(___aldiv@divisor+1)^(0+128),w
 10243  1DF4  0420               	iorwf	___aldiv@divisor^(0+128),w
 10244  1DF5  1903               	skipnz
 10245  1DF6  2E32               	goto	l3921
 10246  1DF7  01A9               	clrf	___aldiv@counter^(0+128)
 10247  1DF8  0AA9               	incf	___aldiv@counter^(0+128),f
 10248  1DF9                     l3907:	
 10249  1DF9  1BA3               	btfsc	(___aldiv@divisor+3)^(0+128),7
 10250  1DFA  2E07               	goto	l3909
 10251  1DFB  3001               	movlw	1
 10252  1DFC                     u4915:	
 10253  1DFC  35A0               	lslf	___aldiv@divisor^(0+128),f
 10254  1DFD  0DA1               	rlf	(___aldiv@divisor+1)^(0+128),f
 10255  1DFE  0DA2               	rlf	(___aldiv@divisor+2)^(0+128),f
 10256  1DFF  0DA3               	rlf	(___aldiv@divisor+3)^(0+128),f
 10257  1E00  0B89               	decfsz	9,f
 10258  1E01  2DFC               	goto	u4915
 10259  1E02  3001               	movlw	1
 10260  1E03  00A8               	movwf	??___aldiv^(0+128)
 10261  1E04  0828               	movf	??___aldiv^(0+128),w
 10262  1E05  07A9               	addwf	___aldiv@counter^(0+128),f
 10263  1E06  2DF9               	goto	l3907
 10264  1E07                     l3909:	
 10265  1E07  3001               	movlw	1
 10266  1E08                     u4935:	
 10267  1E08  35AB               	lslf	___aldiv@quotient^(0+128),f
 10268  1E09  0DAC               	rlf	(___aldiv@quotient+1)^(0+128),f
 10269  1E0A  0DAD               	rlf	(___aldiv@quotient+2)^(0+128),f
 10270  1E0B  0DAE               	rlf	(___aldiv@quotient+3)^(0+128),f
 10271  1E0C  0B89               	decfsz	9,f
 10272  1E0D  2E08               	goto	u4935
 10273  1E0E  0823               	movf	(___aldiv@divisor+3)^(0+128),w
 10274  1E0F  0227               	subwf	(___aldiv@dividend+3)^(0+128),w
 10275  1E10  1D03               	skipz
 10276  1E11  2E1C               	goto	u4945
 10277  1E12  0822               	movf	(___aldiv@divisor+2)^(0+128),w
 10278  1E13  0226               	subwf	(___aldiv@dividend+2)^(0+128),w
 10279  1E14  1D03               	skipz
 10280  1E15  2E1C               	goto	u4945
 10281  1E16  0821               	movf	(___aldiv@divisor+1)^(0+128),w
 10282  1E17  0225               	subwf	(___aldiv@dividend+1)^(0+128),w
 10283  1E18  1D03               	skipz
 10284  1E19  2E1C               	goto	u4945
 10285  1E1A  0820               	movf	___aldiv@divisor^(0+128),w
 10286  1E1B  0224               	subwf	___aldiv@dividend^(0+128),w
 10287  1E1C                     u4945:	
 10288  1E1C  1C03               	skipc
 10289  1E1D  2E27               	goto	l3917
 10290  1E1E  0820               	movf	___aldiv@divisor^(0+128),w
 10291  1E1F  02A4               	subwf	___aldiv@dividend^(0+128),f
 10292  1E20  0821               	movf	(___aldiv@divisor+1)^(0+128),w
 10293  1E21  3BA5               	subwfb	(___aldiv@dividend+1)^(0+128),f
 10294  1E22  0822               	movf	(___aldiv@divisor+2)^(0+128),w
 10295  1E23  3BA6               	subwfb	(___aldiv@dividend+2)^(0+128),f
 10296  1E24  0823               	movf	(___aldiv@divisor+3)^(0+128),w
 10297  1E25  3BA7               	subwfb	(___aldiv@dividend+3)^(0+128),f
 10298  1E26  142B               	bsf	___aldiv@quotient^(0+128),0
 10299  1E27                     l3917:	
 10300  1E27  3001               	movlw	1
 10301  1E28                     u4955:	
 10302  1E28  36A3               	lsrf	(___aldiv@divisor+3)^(0+128),f
 10303  1E29  0CA2               	rrf	(___aldiv@divisor+2)^(0+128),f
 10304  1E2A  0CA1               	rrf	(___aldiv@divisor+1)^(0+128),f
 10305  1E2B  0CA0               	rrf	___aldiv@divisor^(0+128),f
 10306  1E2C  0B89               	decfsz	9,f
 10307  1E2D  2E28               	goto	u4955
 10308  1E2E  3001               	movlw	1
 10309  1E2F  02A9               	subwf	___aldiv@counter^(0+128),f
 10310  1E30  1D03               	btfss	3,2
 10311  1E31  2E07               	goto	l3909
 10312  1E32                     l3921:	
 10313  1E32  082A               	movf	___aldiv@sign^(0+128),w
 10314  1E33  1903               	btfsc	3,2
 10315  1E34  2E40               	goto	l3925
 10316  1E35  09AB               	comf	___aldiv@quotient^(0+128),f
 10317  1E36  09AC               	comf	(___aldiv@quotient+1)^(0+128),f
 10318  1E37  09AD               	comf	(___aldiv@quotient+2)^(0+128),f
 10319  1E38  09AE               	comf	(___aldiv@quotient+3)^(0+128),f
 10320  1E39  0AAB               	incf	___aldiv@quotient^(0+128),f
 10321  1E3A  1903               	skipnz
 10322  1E3B  0AAC               	incf	(___aldiv@quotient+1)^(0+128),f
 10323  1E3C  1903               	skipnz
 10324  1E3D  0AAD               	incf	(___aldiv@quotient+2)^(0+128),f
 10325  1E3E  1903               	skipnz
 10326  1E3F  0AAE               	incf	(___aldiv@quotient+3)^(0+128),f
 10327  1E40                     l3925:	
 10328  1E40  082E               	movf	(___aldiv@quotient+3)^(0+128),w
 10329  1E41  00A3               	movwf	(?___aldiv+3)^(0+128)
 10330  1E42  082D               	movf	(___aldiv@quotient+2)^(0+128),w
 10331  1E43  00A2               	movwf	(?___aldiv+2)^(0+128)
 10332  1E44  082C               	movf	(___aldiv@quotient+1)^(0+128),w
 10333  1E45  00A1               	movwf	(?___aldiv+1)^(0+128)
 10334  1E46  082B               	movf	___aldiv@quotient^(0+128),w
 10335  1E47  00A0               	movwf	?___aldiv^(0+128)
 10336  1E48  0008               	return
 10337  1E49                     __end_of___aldiv:	
 10338                           
 10339                           	psect	text35
 10340  18FB                     __ptext35:	
 10341 ;; *************** function _Update_PWM *****************
 10342 ;; Defined at:
 10343 ;;		line 1252 in file "main.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;  setwsduty       2   51[BANK1 ] unsigned int 
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;  Dutycnt         2   57[BANK1 ] unsigned int 
 10348 ;;  Temp1           2   55[BANK1 ] unsigned int 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;		None               void
 10351 ;; Registers used:
 10352 ;;		wreg, status,2, status,0
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10358 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10359 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10360 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10361 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10362 ;;Total ram usage:        8 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; Hardware stack levels required when called:    3
 10365 ;; This function calls:
 10366 ;;		Nothing
 10367 ;; This function is called by:
 10368 ;;		_Adaptive_base_pid
 10369 ;;		_main
 10370 ;;		_key_application
 10371 ;;		_detect_display_error
 10372 ;; This function uses a non-reentrant model
 10373 ;;
 10374                           
 10375                           
 10376                           ;psect for function _Update_PWM
 10377  18FB                     _Update_PWM:	
 10378                           
 10379                           ;main.c: 1254: unsigned int Temp1=0x00, Dutycnt=0;
 10380                           
 10381                           ;incstack = 0
 10382                           ; Regs used in _Update_PWM: [wreg+status,2+status,0]
 10383  18FB  0021               	movlb	1	; select bank1
 10384  18FC  01D7               	clrf	Update_PWM@Temp1^(0+128)
 10385  18FD  01D8               	clrf	(Update_PWM@Temp1+1)^(0+128)
 10386  18FE  01D9               	clrf	Update_PWM@Dutycnt^(0+128)
 10387  18FF  01DA               	clrf	(Update_PWM@Dutycnt+1)^(0+128)
 10388                           
 10389                           ;main.c: 1255: Dutycnt=setwsduty;
 10390  1900  0854               	movf	(Update_PWM@setwsduty+1)^(0+128),w
 10391  1901  00DA               	movwf	(Update_PWM@Dutycnt+1)^(0+128)
 10392  1902  0853               	movf	Update_PWM@setwsduty^(0+128),w
 10393  1903  00D9               	movwf	Update_PWM@Dutycnt^(0+128)
 10394                           
 10395                           ;main.c: 1256: CCP1CONbits.DC1B=Dutycnt;
 10396  1904  0859               	movf	Update_PWM@Dutycnt^(0+128),w
 10397  1905  00D5               	movwf	??_Update_PWM^(0+128)
 10398  1906  0ED5               	swapf	??_Update_PWM^(0+128),f
 10399  1907  0025               	movlb	5	; select bank5
 10400  1908  0813               	movf	19,w	;volatile
 10401  1909  0021               	movlb	1	; select bank1
 10402  190A  0655               	xorwf	??_Update_PWM^(0+128),w
 10403  190B  39CF               	andlw	-49
 10404  190C  0655               	xorwf	??_Update_PWM^(0+128),w
 10405  190D  0025               	movlb	5	; select bank5
 10406  190E  0093               	movwf	19	;volatile
 10407                           
 10408                           ;main.c: 1257: Temp1=Dutycnt >> 2;
 10409  190F  0021               	movlb	1	; select bank1
 10410  1910  085A               	movf	(Update_PWM@Dutycnt+1)^(0+128),w
 10411  1911  00D6               	movwf	(??_Update_PWM^(0+128)+1)
 10412  1912  0859               	movf	Update_PWM@Dutycnt^(0+128),w
 10413  1913  00D5               	movwf	??_Update_PWM^(0+128)
 10414  1914  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
 10415  1915  0CD5               	rrf	??_Update_PWM^(0+128),f
 10416  1916  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
 10417  1917  0CD5               	rrf	??_Update_PWM^(0+128),f
 10418  1918  0855               	movf	??_Update_PWM^(0+128),w
 10419  1919  00D7               	movwf	Update_PWM@Temp1^(0+128)
 10420  191A  0856               	movf	(??_Update_PWM+1)^(0+128),w
 10421  191B  00D8               	movwf	(Update_PWM@Temp1+1)^(0+128)
 10422                           
 10423                           ;main.c: 1258: CCPR1L=Temp1;
 10424  191C  0857               	movf	Update_PWM@Temp1^(0+128),w
 10425  191D  0025               	movlb	5	; select bank5
 10426  191E  0091               	movwf	17	;volatile
 10427                           
 10428                           ;main.c: 1259: iTest = Temp1;
 10429  191F  0021               	movlb	1	; select bank1
 10430  1920  0858               	movf	(Update_PWM@Temp1+1)^(0+128),w
 10431  1921  0024               	movlb	4	; select bank4
 10432  1922  00C5               	movwf	(_iTest+1)^(0+512)
 10433  1923  0021               	movlb	1	; select bank1
 10434  1924  0857               	movf	Update_PWM@Temp1^(0+128),w
 10435  1925  0024               	movlb	4	; select bank4
 10436  1926  00C4               	movwf	_iTest^(0+512)
 10437  1927  0008               	return
 10438  1928                     __end_of_Update_PWM:	
 10439                           
 10440                           	psect	intentry
 10441  0004                     __pintentry:	
 10442 ;; *************** function _ISR_Function *****************
 10443 ;; Defined at:
 10444 ;;		line 42 in file "main.c"
 10445 ;; Parameters:    Size  Location     Type
 10446 ;;		None
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;		None
 10449 ;; Return value:  Size  Location     Type
 10450 ;;		None               void
 10451 ;; Registers used:
 10452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10453 ;; Tracked objects:
 10454 ;;		On entry : 0/0
 10455 ;;		On exit  : 0/0
 10456 ;;		Unchanged: 0/0
 10457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10459 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10460 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10461 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10462 ;;Total ram usage:       11 bytes
 10463 ;; Hardware stack levels used:    1
 10464 ;; Hardware stack levels required when called:    2
 10465 ;; This function calls:
 10466 ;;		_Display
 10467 ;;		i1_Update_PWM
 10468 ;;		i1___aldiv
 10469 ;;		i1___ftadd
 10470 ;;		i1___ftdiv
 10471 ;;		i1___ftmul
 10472 ;;		i1___fttol
 10473 ;;		i1___lwtoft
 10474 ;;		i1___wmul
 10475 ;; This function is called by:
 10476 ;;		Interrupt level 1
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480  0004                     _ISR_Function:	
 10481                           
 10482                           ;incstack = 0
 10483                           ; Regs used in _ISR_Function: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10484  0004  3180               	pagesel	$
 10485  0005  0020               	movlb	0	; select bank0
 10486  0006  087F               	movf	127,w
 10487  0007  00D3               	movwf	??_ISR_Function+8
 10488                           
 10489                           ;main.c: 44: if(INTCONbits.TMR0IF==1)
 10490  0008  1D0B               	btfss	11,2	;volatile
 10491  0009  2946               	goto	i1l5265
 10492                           
 10493                           ;main.c: 45: {
 10494                           ;main.c: 46: INTCONbits.TMR0IF=0;
 10495  000A  110B               	bcf	11,2	;volatile
 10496                           
 10497                           ;main.c: 47: TMR0=0x00;
 10498  000B  0195               	clrf	21	;volatile
 10499                           
 10500                           ;main.c: 48: updatedispf=0;
 10501  000C  0023               	movlb	3	; select bank3
 10502  000D  01D6               	clrf	_updatedispf^(0+384)	;volatile
 10503                           
 10504                           ;main.c: 49: Display();
 10505  000E  3185  25D4  3180   	fcall	_Display
 10506                           
 10507                           ;main.c: 50: count_1ms++;
 10508  0011  3001               	movlw	1
 10509  0012  0023               	movlb	3	; select bank3
 10510  0013  07B2               	addwf	_count_1ms^(0+384),f	;volatile
 10511  0014  3000               	movlw	0
 10512  0015  3DB3               	addwfc	(_count_1ms+1)^(0+384),f	;volatile
 10513                           
 10514                           ;main.c: 51: count_2ms++;
 10515  0016  3001               	movlw	1
 10516  0017  0020               	movlb	0	; select bank0
 10517  0018  00CB               	movwf	??_ISR_Function
 10518  0019  084B               	movf	??_ISR_Function,w
 10519  001A  0022               	movlb	2	; select bank2
 10520  001B  07C2               	addwf	_count_2ms^(0+256),f	;volatile
 10521                           
 10522                           ;main.c: 52: count_1msec++;
 10523  001C  3001               	movlw	1
 10524  001D  0020               	movlb	0	; select bank0
 10525  001E  00CB               	movwf	??_ISR_Function
 10526  001F  084B               	movf	??_ISR_Function,w
 10527  0020  0022               	movlb	2	; select bank2
 10528  0021  07C1               	addwf	_count_1msec^(0+256),f
 10529                           
 10530                           ;main.c: 53: count_pid++;
 10531  0022  3001               	movlw	1
 10532  0023  0020               	movlb	0	; select bank0
 10533  0024  00CB               	movwf	??_ISR_Function
 10534  0025  084B               	movf	??_ISR_Function,w
 10535  0026  0023               	movlb	3	; select bank3
 10536  0027  07CC               	addwf	_count_pid^(0+384),f	;volatile
 10537                           
 10538                           ;main.c: 54: count_transms++;
 10539  0028  3001               	movlw	1
 10540  0029  0024               	movlb	4	; select bank4
 10541  002A  07B0               	addwf	_count_transms^(0+512),f	;volatile
 10542  002B  3000               	movlw	0
 10543  002C  3DB1               	addwfc	(_count_transms+1)^(0+512),f	;volatile
 10544                           
 10545                           ;main.c: 56: if(cPowerOnErrSkipfg == 1)
 10546  002D  0022               	movlb	2	; select bank2
 10547  002E  033C               	decf	_cPowerOnErrSkipfg^(0+256),w
 10548  002F  1D03               	btfss	3,2
 10549  0030  2840               	goto	i1l5149
 10550                           
 10551                           ;main.c: 57: {
 10552                           ;main.c: 58: if(iPowerOnErrSkipCnt == 0)
 10553  0031  0024               	movlb	4	; select bank4
 10554  0032  0842               	movf	_iPowerOnErrSkipCnt^(0+512),w
 10555  0033  0443               	iorwf	(_iPowerOnErrSkipCnt+1)^(0+512),w
 10556  0034  1D03               	btfss	3,2
 10557  0035  283C               	goto	i1l5147
 10558                           
 10559                           ;main.c: 59: {
 10560                           ;main.c: 60: cPowerOnErrSkipfg = 0;
 10561  0036  0022               	movlb	2	; select bank2
 10562  0037  01BC               	clrf	_cPowerOnErrSkipfg^(0+256)
 10563                           
 10564                           ;main.c: 61: iPowerOnErrSkipCnt = 0;
 10565  0038  0024               	movlb	4	; select bank4
 10566  0039  01C2               	clrf	_iPowerOnErrSkipCnt^(0+512)
 10567  003A  01C3               	clrf	(_iPowerOnErrSkipCnt+1)^(0+512)
 10568                           
 10569                           ;main.c: 62: }else
 10570  003B  2840               	goto	i1l5149
 10571  003C                     i1l5147:	
 10572                           
 10573                           ;main.c: 63: {
 10574                           ;main.c: 64: iPowerOnErrSkipCnt--;
 10575  003C  3001               	movlw	1
 10576  003D  02C2               	subwf	_iPowerOnErrSkipCnt^(0+512),f
 10577  003E  3000               	movlw	0
 10578  003F  3BC3               	subwfb	(_iPowerOnErrSkipCnt+1)^(0+512),f
 10579  0040                     i1l5149:	
 10580                           
 10581                           ;main.c: 65: }
 10582                           ;main.c: 66: }
 10583                           ;main.c: 68: if(cGasRlyClrfg == 1)
 10584  0040  0022               	movlb	2	; select bank2
 10585  0041  0339               	decf	_cGasRlyClrfg^(0+256),w
 10586  0042  1D03               	btfss	3,2
 10587  0043  2858               	goto	i1l5161
 10588                           
 10589                           ;main.c: 69: {
 10590                           ;main.c: 70: if(iGasDbCnt == 0 )
 10591  0044  0023               	movlb	3	; select bank3
 10592  0045  0834               	movf	_iGasDbCnt^(0+384),w
 10593  0046  0435               	iorwf	(_iGasDbCnt+1)^(0+384),w
 10594  0047  1D03               	btfss	3,2
 10595  0048  2853               	goto	i1l5159
 10596                           
 10597                           ;main.c: 71: {
 10598                           ;main.c: 72: TypeU.TypeS.gason =0;
 10599  0049  0020               	movlb	0	; select bank0
 10600  004A  11E5               	bcf	_TypeU,3
 10601                           
 10602                           ;main.c: 73: PORTCbits.RC3 =0;
 10603  004B  118E               	bcf	14,3	;volatile
 10604                           
 10605                           ;main.c: 74: dispupdatef =1;
 10606  004C  3001               	movlw	1
 10607  004D  00CB               	movwf	??_ISR_Function
 10608  004E  084B               	movf	??_ISR_Function,w
 10609  004F  00EF               	movwf	_dispupdatef	;volatile
 10610                           
 10611                           ;main.c: 75: cGasRlyClrfg = 0;
 10612  0050  0022               	movlb	2	; select bank2
 10613  0051  01B9               	clrf	_cGasRlyClrfg^(0+256)
 10614                           
 10615                           ;main.c: 76: }
 10616  0052  2858               	goto	i1l5161
 10617  0053                     i1l5159:	
 10618                           
 10619                           ;main.c: 77: else
 10620                           ;main.c: 78: {
 10621                           ;main.c: 79: iGasDbCnt--;
 10622  0053  3001               	movlw	1
 10623  0054  0023               	movlb	3	; select bank3
 10624  0055  02B4               	subwf	_iGasDbCnt^(0+384),f
 10625  0056  3000               	movlw	0
 10626  0057  3BB5               	subwfb	(_iGasDbCnt+1)^(0+384),f
 10627  0058                     i1l5161:	
 10628                           
 10629                           ;main.c: 80: }
 10630                           ;main.c: 81: }
 10631                           ;main.c: 83: if((cMtrOverLdfg == 0)&&(cPowerOnErrSkipfg == 0))
 10632  0058  0022               	movlb	2	; select bank2
 10633  0059  083B               	movf	_cMtrOverLdfg^(0+256),w
 10634  005A  1D03               	btfss	3,2
 10635  005B  28A4               	goto	i1l5193
 10636  005C  083C               	movf	_cPowerOnErrSkipfg^(0+256),w
 10637  005D  1D03               	btfss	3,2
 10638  005E  28A4               	goto	i1l5193
 10639                           
 10640                           ;main.c: 84: {
 10641                           ;main.c: 85: if((PORTAbits.RA5 == 0)&&(cMtrOverLdDbfg == 0))
 10642  005F  0020               	movlb	0	; select bank0
 10643  0060  1A8C               	btfsc	12,5	;volatile
 10644  0061  286E               	goto	i1l579
 10645  0062  0022               	movlb	2	; select bank2
 10646  0063  083A               	movf	_cMtrOverLdDbfg^(0+256),w
 10647  0064  1D03               	btfss	3,2
 10648  0065  286E               	goto	i1l579
 10649                           
 10650                           ;main.c: 86: {
 10651                           ;main.c: 87: cMtrOverLdDbfg = 1;
 10652  0066  01BA               	clrf	_cMtrOverLdDbfg^(0+256)
 10653  0067  0ABA               	incf	_cMtrOverLdDbfg^(0+256),f
 10654                           
 10655                           ;main.c: 88: cMtrOverLdDbCnt = 1000;
 10656  0068  30E8               	movlw	232
 10657  0069  0024               	movlb	4	; select bank4
 10658  006A  00AE               	movwf	_cMtrOverLdDbCnt^(0+512)
 10659  006B  3003               	movlw	3
 10660  006C  00AF               	movwf	(_cMtrOverLdDbCnt^(0+512)+1)
 10661                           
 10662                           ;main.c: 89: }
 10663  006D  28A4               	goto	i1l5193
 10664  006E                     i1l579:	
 10665                           
 10666                           ;main.c: 90: else if((PORTAbits.RA5 == 0)&&(cMtrOverLdDbfg == 1))
 10667  006E  0020               	movlb	0	; select bank0
 10668  006F  1A8C               	btfsc	12,5	;volatile
 10669  0070  289F               	goto	i1l581
 10670  0071  0022               	movlb	2	; select bank2
 10671  0072  033A               	decf	_cMtrOverLdDbfg^(0+256),w
 10672  0073  1D03               	btfss	3,2
 10673  0074  289F               	goto	i1l581
 10674                           
 10675                           ;main.c: 91: {
 10676                           ;main.c: 92: cMtrOverLdDbCnt--;
 10677  0075  3001               	movlw	1
 10678  0076  0024               	movlb	4	; select bank4
 10679  0077  02AE               	subwf	_cMtrOverLdDbCnt^(0+512),f
 10680  0078  3000               	movlw	0
 10681  0079  3BAF               	subwfb	(_cMtrOverLdDbCnt+1)^(0+512),f
 10682                           
 10683                           ;main.c: 93: if(cMtrOverLdDbCnt == 0)
 10684  007A  082E               	movf	_cMtrOverLdDbCnt^(0+512),w
 10685  007B  042F               	iorwf	(_cMtrOverLdDbCnt+1)^(0+512),w
 10686  007C  1D03               	btfss	3,2
 10687  007D  28A4               	goto	i1l5193
 10688                           
 10689                           ;main.c: 94: {
 10690                           ;main.c: 95: cMtrOverLdDbfg = 0;
 10691  007E  0022               	movlb	2	; select bank2
 10692  007F  01BA               	clrf	_cMtrOverLdDbfg^(0+256)
 10693                           
 10694                           ;main.c: 96: cMtrOverLdfg = 1;
 10695  0080  01BB               	clrf	_cMtrOverLdfg^(0+256)
 10696  0081  0ABB               	incf	_cMtrOverLdfg^(0+256),f
 10697                           
 10698                           ;main.c: 97: cMtrOverLdDbCnt = 1000;
 10699  0082  30E8               	movlw	232
 10700  0083  0024               	movlb	4	; select bank4
 10701  0084  00AE               	movwf	_cMtrOverLdDbCnt^(0+512)
 10702  0085  3003               	movlw	3
 10703  0086  00AF               	movwf	(_cMtrOverLdDbCnt^(0+512)+1)
 10704                           
 10705                           ;main.c: 98: erroru.errors.motor_over_ld_er5 = 1;
 10706  0087  0022               	movlb	2	; select bank2
 10707  0088  166B               	bsf	_erroru^(0+256),4
 10708                           
 10709                           ;main.c: 99: Update_PWM(setwirespeed*0);
 10710  0089  0020               	movlb	0	; select bank0
 10711  008A  085D               	movf	_setwirespeed+1,w
 10712  008B  00F1               	movwf	i1___wmul@multiplier+1
 10713  008C  085C               	movf	_setwirespeed,w
 10714  008D  00F0               	movwf	i1___wmul@multiplier
 10715  008E  3000               	movlw	0
 10716  008F  00F2               	movwf	i1___wmul@multiplicand
 10717  0090  00F3               	movwf	i1___wmul@multiplicand+1
 10718  0091  3198  2077  3180   	fcall	i1___wmul
 10719  0094  0871               	movf	?i1___wmul+1,w
 10720  0095  00F7               	movwf	i1Update_PWM@setwsduty+1
 10721  0096  0870               	movf	?i1___wmul,w
 10722  0097  00F6               	movwf	i1Update_PWM@setwsduty
 10723  0098  3198  20AE  3180   	fcall	i1_Update_PWM
 10724                           
 10725                           ;main.c: 100: speeedrate=0;
 10726  009B  0023               	movlb	3	; select bank3
 10727  009C  01EA               	clrf	_speeedrate^(0+384)
 10728  009D  01EB               	clrf	(_speeedrate+1)^(0+384)
 10729                           
 10730                           ;main.c: 101: }
 10731                           ;main.c: 102: }
 10732  009E  28A4               	goto	i1l5193
 10733  009F                     i1l581:	
 10734                           
 10735                           ;main.c: 103: else if(PORTAbits.RA5 == 1)
 10736  009F  0020               	movlb	0	; select bank0
 10737  00A0  1E8C               	btfss	12,5	;volatile
 10738  00A1  28A4               	goto	i1l5193
 10739                           
 10740                           ;main.c: 104: {
 10741                           ;main.c: 105: cMtrOverLdDbfg = 0;
 10742  00A2  0022               	movlb	2	; select bank2
 10743  00A3  01BA               	clrf	_cMtrOverLdDbfg^(0+256)
 10744  00A4                     i1l5193:	
 10745                           
 10746                           ;main.c: 107: }
 10747                           ;main.c: 108: }
 10748                           ;main.c: 124: if(RCSTAbits.FERR==1 || RCSTAbits.OERR==1)
 10749  00A4  0023               	movlb	3	; select bank3
 10750  00A5  191D               	btfsc	29,2	;volatile
 10751  00A6  28A9               	goto	i1l587
 10752  00A7  1C9D               	btfss	29,1	;volatile
 10753  00A8  28AD               	goto	i1l5197
 10754  00A9                     i1l587:	
 10755                           
 10756                           ;main.c: 125: {
 10757                           ;main.c: 126: RCSTAbits.SPEN=0;
 10758  00A9  139D               	bcf	29,7	;volatile
 10759                           
 10760                           ;main.c: 127: RCSTAbits.CREN=0;
 10761  00AA  121D               	bcf	29,4	;volatile
 10762                           
 10763                           ;main.c: 128: RCSTAbits.SPEN=1;
 10764  00AB  179D               	bsf	29,7	;volatile
 10765                           
 10766                           ;main.c: 129: RCSTAbits.CREN=1;
 10767  00AC  161D               	bsf	29,4	;volatile
 10768  00AD                     i1l5197:	
 10769                           
 10770                           ;main.c: 130: }
 10771                           ;main.c: 131: if(count_1ms>=500)
 10772  00AD  3001               	movlw	1
 10773  00AE  0233               	subwf	(_count_1ms+1)^(0+384),w	;volatile
 10774  00AF  30F4               	movlw	244
 10775  00B0  1903               	skipnz
 10776  00B1  0232               	subwf	_count_1ms^(0+384),w	;volatile
 10777  00B2  1C03               	skipc
 10778  00B3  28DC               	goto	i1l5215
 10779                           
 10780                           ;main.c: 132: {
 10781                           ;main.c: 133: count_1ms=0;
 10782  00B4  01B2               	clrf	_count_1ms^(0+384)	;volatile
 10783  00B5  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
 10784                           
 10785                           ;main.c: 134: comm_error_count++;
 10786  00B6  3001               	movlw	1
 10787  00B7  0020               	movlb	0	; select bank0
 10788  00B8  00CB               	movwf	??_ISR_Function
 10789  00B9  084B               	movf	??_ISR_Function,w
 10790  00BA  0022               	movlb	2	; select bank2
 10791  00BB  07C0               	addwf	_comm_error_count^(0+256),f	;volatile
 10792                           
 10793                           ;main.c: 136: if(weldmode=='P' || weldmode=='G')
 10794  00BC  3050               	movlw	80
 10795  00BD  0020               	movlb	0	; select bank0
 10796  00BE  0664               	xorwf	_weldmode,w	;volatile
 10797  00BF  1903               	btfsc	3,2
 10798  00C0  28C5               	goto	i1l5207
 10799  00C1  3047               	movlw	71
 10800  00C2  0664               	xorwf	_weldmode,w	;volatile
 10801  00C3  1D03               	btfss	3,2
 10802  00C4  28D9               	goto	i1l5213
 10803  00C5                     i1l5207:	
 10804                           
 10805                           ;main.c: 137: {
 10806                           ;main.c: 138: if(comm_error_count>3)
 10807  00C5  3004               	movlw	4
 10808  00C6  0022               	movlb	2	; select bank2
 10809  00C7  0240               	subwf	_comm_error_count^(0+256),w	;volatile
 10810  00C8  1C03               	skipc
 10811  00C9  28D7               	goto	i1l5211
 10812                           
 10813                           ;main.c: 139: {
 10814                           ;main.c: 140: error8=1;
 10815  00CA  3001               	movlw	1
 10816  00CB  0020               	movlb	0	; select bank0
 10817  00CC  00CB               	movwf	??_ISR_Function
 10818  00CD  084B               	movf	??_ISR_Function,w
 10819  00CE  0022               	movlb	2	; select bank2
 10820  00CF  00C8               	movwf	_error8^(0+256)	;volatile
 10821                           
 10822                           ;main.c: 141: comm_error_count=4;
 10823  00D0  3004               	movlw	4
 10824  00D1  0020               	movlb	0	; select bank0
 10825  00D2  00CB               	movwf	??_ISR_Function
 10826  00D3  084B               	movf	??_ISR_Function,w
 10827  00D4  0022               	movlb	2	; select bank2
 10828  00D5  00C0               	movwf	_comm_error_count^(0+256)	;volatile
 10829                           
 10830                           ;main.c: 142: }
 10831  00D6  28DC               	goto	i1l5215
 10832  00D7                     i1l5211:	
 10833                           
 10834                           ;main.c: 143: else
 10835                           ;main.c: 144: error8=0;
 10836  00D7  01C8               	clrf	_error8^(0+256)	;volatile
 10837                           
 10838                           ;main.c: 145: }
 10839  00D8  28DC               	goto	i1l5215
 10840  00D9                     i1l5213:	
 10841                           
 10842                           ;main.c: 146: else
 10843                           ;main.c: 147: {
 10844                           ;main.c: 148: error8=0;
 10845  00D9  0022               	movlb	2	; select bank2
 10846  00DA  01C8               	clrf	_error8^(0+256)	;volatile
 10847                           
 10848                           ;main.c: 149: comm_error_count=0;
 10849  00DB  01C0               	clrf	_comm_error_count^(0+256)	;volatile
 10850  00DC                     i1l5215:	
 10851                           
 10852                           ;main.c: 150: }
 10853                           ;main.c: 166: }
 10854                           ;main.c: 167: if(count_2ms >=1)
 10855  00DC  0022               	movlb	2	; select bank2
 10856  00DD  0842               	movf	_count_2ms^(0+256),w	;volatile
 10857  00DE  1903               	btfsc	3,2
 10858  00DF  28E7               	goto	i1l5221
 10859                           
 10860                           ;main.c: 168: {
 10861                           ;main.c: 169: count_2ms=0;
 10862  00E0  01C2               	clrf	_count_2ms^(0+256)	;volatile
 10863                           
 10864                           ;main.c: 170: read_enc1f=1;
 10865  00E1  3001               	movlw	1
 10866  00E2  0020               	movlb	0	; select bank0
 10867  00E3  00CB               	movwf	??_ISR_Function
 10868  00E4  084B               	movf	??_ISR_Function,w
 10869  00E5  0022               	movlb	2	; select bank2
 10870  00E6  00DE               	movwf	_read_enc1f^(0+256)	;volatile
 10871  00E7                     i1l5221:	
 10872                           
 10873                           ;main.c: 171: }
 10874                           ;main.c: 173: if(count_1msec >= 2)
 10875  00E7  3002               	movlw	2
 10876  00E8  0241               	subwf	_count_1msec^(0+256),w
 10877  00E9  1C03               	skipc
 10878  00EA  2946               	goto	i1l5265
 10879                           
 10880                           ;main.c: 174: {
 10881                           ;main.c: 175: count_1msec=0;
 10882  00EB  01C1               	clrf	_count_1msec^(0+256)
 10883                           
 10884                           ;main.c: 176: if(kpressread==0)
 10885  00EC  084C               	movf	_kpressread^(0+256),w
 10886  00ED  1D03               	btfss	3,2
 10887  00EE  28F9               	goto	i1l5231
 10888                           
 10889                           ;main.c: 177: {
 10890                           ;main.c: 178: torchstatus1=PORTCbits.RC5;
 10891  00EF  3000               	movlw	0
 10892  00F0  0020               	movlb	0	; select bank0
 10893  00F1  1A8E               	btfsc	14,5	;volatile
 10894  00F2  3001               	movlw	1
 10895  00F3  0023               	movlb	3	; select bank3
 10896  00F4  00D4               	movwf	_torchstatus1^(0+384)
 10897                           
 10898                           ;main.c: 179: kpressread=1;
 10899  00F5  0022               	movlb	2	; select bank2
 10900  00F6  01CC               	clrf	_kpressread^(0+256)
 10901  00F7  0ACC               	incf	_kpressread^(0+256),f
 10902                           
 10903                           ;main.c: 180: }
 10904  00F8  2946               	goto	i1l5265
 10905  00F9                     i1l5231:	
 10906                           
 10907                           ;main.c: 181: else
 10908                           ;main.c: 182: {
 10909                           ;main.c: 183: kpressread=0;
 10910  00F9  01CC               	clrf	_kpressread^(0+256)
 10911                           
 10912                           ;main.c: 184: torchstatus2=PORTCbits.RC5;
 10913  00FA  3000               	movlw	0
 10914  00FB  0020               	movlb	0	; select bank0
 10915  00FC  1A8E               	btfsc	14,5	;volatile
 10916  00FD  3001               	movlw	1
 10917  00FE  0022               	movlb	2	; select bank2
 10918  00FF  00E5               	movwf	_torchstatus2^(0+256)
 10919                           
 10920                           ;main.c: 185: tans =(torchstatus1 == torchstatus2 ? 1:0);
 10921  0100  0023               	movlb	3	; select bank3
 10922  0101  0854               	movf	_torchstatus1^(0+384),w
 10923  0102  0022               	movlb	2	; select bank2
 10924  0103  0665               	xorwf	_torchstatus2^(0+256),w
 10925  0104  1D03               	btfss	3,2
 10926  0105  2908               	goto	u755_20
 10927  0106  3001               	movlw	1
 10928  0107  2909               	goto	u756_20
 10929  0108                     u755_20:	
 10930  0108  3000               	movlw	0
 10931  0109                     u756_20:	
 10932  0109  0020               	movlb	0	; select bank0
 10933  010A  00CB               	movwf	??_ISR_Function
 10934  010B  084B               	movf	??_ISR_Function,w
 10935  010C  0022               	movlb	2	; select bank2
 10936  010D  00E4               	movwf	_tans^(0+256)
 10937                           
 10938                           ;main.c: 186: if(tans==1)
 10939  010E  0364               	decf	_tans^(0+256),w
 10940  010F  1D03               	btfss	3,2
 10941  0110  2938               	goto	i1l5259
 10942                           
 10943                           ;main.c: 187: {
 10944                           ;main.c: 188: TORCH=(torchstatus2 == 0 ? 'P':'X');
 10945  0111  0865               	movf	_torchstatus2^(0+256),w
 10946  0112  1903               	btfsc	3,2
 10947  0113  2916               	goto	i1l5241
 10948  0114  3058               	movlw	88
 10949  0115  2917               	goto	L22
 10950  0116                     i1l5241:	
 10951  0116  3050               	movlw	80
 10952  0117                     L22:	
 10953  0117  0020               	movlb	0	; select bank0
 10954  0118  00D4               	movwf	_ISR_Function$1209
 10955  0119  3000               	movlw	0
 10956  011A  00D5               	movwf	_ISR_Function$1209+1
 10957  011B  0854               	movf	_ISR_Function$1209,w
 10958  011C  00CB               	movwf	??_ISR_Function
 10959  011D  084B               	movf	??_ISR_Function,w
 10960  011E  00EE               	movwf	_TORCH
 10961                           
 10962                           ;main.c: 189: if(TORCH=='P')
 10963  011F  3050               	movlw	80
 10964  0120  066E               	xorwf	_TORCH,w
 10965  0121  1D03               	btfss	3,2
 10966  0122  2933               	goto	i1l604
 10967                           
 10968                           ;main.c: 190: {
 10969                           ;main.c: 191: wfstatusu.wfstatuss.torchonstatus=1;
 10970  0123  14ED               	bsf	_wfstatusu,1
 10971                           
 10972                           ;main.c: 192: if(cTorchPressfg == 0)
 10973  0124  0022               	movlb	2	; select bank2
 10974  0125  083D               	movf	_cTorchPressfg^(0+256),w
 10975  0126  1D03               	btfss	3,2
 10976  0127  2938               	goto	i1l5259
 10977                           
 10978                           ;main.c: 193: {
 10979                           ;main.c: 194: cPowerOnErrSkipfg = 1;
 10980  0128  01BC               	clrf	_cPowerOnErrSkipfg^(0+256)
 10981  0129  0ABC               	incf	_cPowerOnErrSkipfg^(0+256),f
 10982                           
 10983                           ;main.c: 195: iPowerOnErrSkipCnt = 1000;
 10984  012A  30E8               	movlw	232
 10985  012B  0024               	movlb	4	; select bank4
 10986  012C  00C2               	movwf	_iPowerOnErrSkipCnt^(0+512)
 10987  012D  3003               	movlw	3
 10988  012E  00C3               	movwf	(_iPowerOnErrSkipCnt^(0+512)+1)
 10989                           
 10990                           ;main.c: 196: cTorchPressfg = 1;
 10991  012F  0022               	movlb	2	; select bank2
 10992  0130  01BD               	clrf	_cTorchPressfg^(0+256)
 10993  0131  0ABD               	incf	_cTorchPressfg^(0+256),f
 10994                           
 10995                           ;main.c: 197: }
 10996                           ;main.c: 198: }
 10997  0132  2938               	goto	i1l5259
 10998  0133                     i1l604:	
 10999                           
 11000                           ;main.c: 199: else
 11001                           ;main.c: 200: {
 11002                           ;main.c: 201: wfstatusu.wfstatuss.torchonstatus=0;
 11003  0133  10ED               	bcf	_wfstatusu,1
 11004                           
 11005                           ;main.c: 202: if(cTorchPressfg == 1)
 11006  0134  0022               	movlb	2	; select bank2
 11007  0135  033D               	decf	_cTorchPressfg^(0+256),w
 11008  0136  1903               	btfsc	3,2
 11009                           
 11010                           ;main.c: 203: {
 11011                           ;main.c: 204: cTorchPressfg = 0;
 11012  0137  01BD               	clrf	_cTorchPressfg^(0+256)
 11013  0138                     i1l5259:	
 11014                           
 11015                           ;main.c: 205: }
 11016                           ;main.c: 206: }
 11017                           ;main.c: 207: }
 11018                           ;main.c: 208: if(prevTORCH != TORCH)
 11019  0138  086E               	movf	_prevTORCH^(0+256),w
 11020  0139  0020               	movlb	0	; select bank0
 11021  013A  066E               	xorwf	_TORCH,w
 11022  013B  1903               	skipnz
 11023  013C  2940               	goto	i1l5263
 11024                           
 11025                           ;main.c: 209: {
 11026                           ;main.c: 210: count_1ms=0;
 11027  013D  0023               	movlb	3	; select bank3
 11028  013E  01B2               	clrf	_count_1ms^(0+384)	;volatile
 11029  013F  01B3               	clrf	(_count_1ms+1)^(0+384)	;volatile
 11030  0140                     i1l5263:	
 11031                           
 11032                           ;main.c: 213: }
 11033                           ;main.c: 214: prevTORCH = TORCH;
 11034  0140  0020               	movlb	0	; select bank0
 11035  0141  086E               	movf	_TORCH,w
 11036  0142  00CB               	movwf	??_ISR_Function
 11037  0143  084B               	movf	??_ISR_Function,w
 11038  0144  0022               	movlb	2	; select bank2
 11039  0145  00EE               	movwf	_prevTORCH^(0+256)
 11040  0146                     i1l5265:	
 11041                           
 11042                           ;main.c: 215: }
 11043                           ;main.c: 216: }
 11044                           ;main.c: 217: }
 11045                           ;main.c: 219: if(PIE1bits.TMR2IE & PIR1bits.TMR2IF)
 11046  0146  0020               	movlb	0	; select bank0
 11047  0147  0C11               	rrf	17,w	;volatile
 11048  0148  3901               	andlw	1
 11049  0149  00CB               	movwf	??_ISR_Function
 11050  014A  0021               	movlb	1	; select bank1
 11051  014B  0C11               	rrf	17,w	;volatile
 11052  014C  3901               	andlw	1
 11053  014D  0020               	movlb	0	; select bank0
 11054  014E  054B               	andwf	??_ISR_Function,w
 11055  014F  1903               	btfsc	3,2
 11056  0150  2953               	goto	i1l5269
 11057                           
 11058                           ;main.c: 220: {
 11059                           ;main.c: 221: PIR1bits.TMR2IF=0;
 11060  0151  1091               	bcf	17,1	;volatile
 11061                           
 11062                           ;main.c: 222: return;
 11063  0152  2D4D               	goto	i1l610
 11064  0153                     i1l5269:	
 11065                           
 11066                           ;main.c: 223: }
 11067                           ;main.c: 224: if(PIE1bits.TXIE & PIR1bits.TXIF)
 11068  0153  0E11               	swapf	17,w	;volatile
 11069  0154  3901               	andlw	1
 11070  0155  00CB               	movwf	??_ISR_Function
 11071  0156  0021               	movlb	1	; select bank1
 11072  0157  0E11               	swapf	17,w	;volatile
 11073  0158  3901               	andlw	1
 11074  0159  0020               	movlb	0	; select bank0
 11075  015A  054B               	andwf	??_ISR_Function,w
 11076  015B  1903               	btfsc	3,2
 11077  015C  295F               	goto	i1l5273
 11078                           
 11079                           ;main.c: 225: {
 11080                           ;main.c: 226: PIR1bits.TXIF=0;
 11081  015D  1211               	bcf	17,4	;volatile
 11082                           
 11083                           ;main.c: 227: return;
 11084  015E  2D4D               	goto	i1l610
 11085  015F                     i1l5273:	
 11086                           
 11087                           ;main.c: 228: }
 11088                           ;main.c: 230: if(PIE2bits.CCP2IE & PIR2bits.CCP2IF)
 11089  015F  0812               	movf	18,w	;volatile
 11090  0160  3901               	andlw	1
 11091  0161  00CB               	movwf	??_ISR_Function
 11092  0162  0021               	movlb	1	; select bank1
 11093  0163  0812               	movf	18,w	;volatile
 11094  0164  3901               	andlw	1
 11095  0165  0020               	movlb	0	; select bank0
 11096  0166  054B               	andwf	??_ISR_Function,w
 11097  0167  1903               	btfsc	3,2
 11098  0168  2B42               	goto	i1l5353
 11099                           
 11100                           ;main.c: 231: {
 11101                           ;main.c: 232: PIR2bits.CCP2IF =0;
 11102  0169  1012               	bcf	18,0	;volatile
 11103                           
 11104                           ;main.c: 233: if(Count == 0)
 11105  016A  0022               	movlb	2	; select bank2
 11106  016B  0832               	movf	_Count^(0+256),w	;volatile
 11107  016C  1D03               	btfss	3,2
 11108  016D  2983               	goto	i1l5281
 11109                           
 11110                           ;main.c: 234: {
 11111                           ;main.c: 235: OneH = CCPR2H;
 11112  016E  0025               	movlb	5	; select bank5
 11113  016F  0819               	movf	25,w	;volatile
 11114  0170  0020               	movlb	0	; select bank0
 11115  0171  00CB               	movwf	??_ISR_Function
 11116  0172  084B               	movf	??_ISR_Function,w
 11117  0173  0022               	movlb	2	; select bank2
 11118  0174  00B3               	movwf	_OneH^(0+256)	;volatile
 11119                           
 11120                           ;main.c: 236: OneL = CCPR2L;
 11121  0175  0025               	movlb	5	; select bank5
 11122  0176  0818               	movf	24,w	;volatile
 11123  0177  0020               	movlb	0	; select bank0
 11124  0178  00CB               	movwf	??_ISR_Function
 11125  0179  084B               	movf	??_ISR_Function,w
 11126  017A  0022               	movlb	2	; select bank2
 11127  017B  00B4               	movwf	_OneL^(0+256)	;volatile
 11128                           
 11129                           ;main.c: 237: Count = 1;
 11130  017C  3001               	movlw	1
 11131  017D  0020               	movlb	0	; select bank0
 11132  017E  00CB               	movwf	??_ISR_Function
 11133  017F  084B               	movf	??_ISR_Function,w
 11134  0180  0022               	movlb	2	; select bank2
 11135  0181  00B2               	movwf	_Count^(0+256)	;volatile
 11136                           
 11137                           ;main.c: 238: }
 11138  0182  2B42               	goto	i1l5353
 11139  0183                     i1l5281:	
 11140                           
 11141                           ;main.c: 239: else
 11142                           ;main.c: 240: {
 11143                           ;main.c: 241: TwoH = CCPR2H;
 11144  0183  0025               	movlb	5	; select bank5
 11145  0184  0819               	movf	25,w	;volatile
 11146  0185  0020               	movlb	0	; select bank0
 11147  0186  00CB               	movwf	??_ISR_Function
 11148  0187  084B               	movf	??_ISR_Function,w
 11149  0188  0022               	movlb	2	; select bank2
 11150  0189  00B5               	movwf	_TwoH^(0+256)	;volatile
 11151                           
 11152                           ;main.c: 242: TwoL = CCPR2L;
 11153  018A  0025               	movlb	5	; select bank5
 11154  018B  0818               	movf	24,w	;volatile
 11155  018C  0020               	movlb	0	; select bank0
 11156  018D  00CB               	movwf	??_ISR_Function
 11157  018E  084B               	movf	??_ISR_Function,w
 11158  018F  0022               	movlb	2	; select bank2
 11159  0190  00B6               	movwf	_TwoL^(0+256)	;volatile
 11160                           
 11161                           ;main.c: 243: TMR1H = 0x00;
 11162  0191  0020               	movlb	0	; select bank0
 11163  0192  0197               	clrf	23	;volatile
 11164                           
 11165                           ;main.c: 244: TMR1L = 0x00;
 11166  0193  0196               	clrf	22	;volatile
 11167                           
 11168                           ;main.c: 245: Count = 0;
 11169  0194  0022               	movlb	2	; select bank2
 11170  0195  01B2               	clrf	_Count^(0+256)	;volatile
 11171                           
 11172                           ;main.c: 246: Two = TwoH;
 11173  0196  0835               	movf	_TwoH^(0+256),w	;volatile
 11174  0197  0020               	movlb	0	; select bank0
 11175  0198  00CB               	movwf	??_ISR_Function
 11176  0199  01CC               	clrf	??_ISR_Function+1
 11177  019A  084B               	movf	??_ISR_Function,w
 11178  019B  0023               	movlb	3	; select bank3
 11179  019C  00B0               	movwf	_Two^(0+384)	;volatile
 11180  019D  0020               	movlb	0	; select bank0
 11181  019E  084C               	movf	??_ISR_Function+1,w
 11182  019F  0023               	movlb	3	; select bank3
 11183  01A0  00B1               	movwf	(_Two+1)^(0+384)	;volatile
 11184                           
 11185                           ;main.c: 247: Two <<= 8;
 11186  01A1  3008               	movlw	8
 11187  01A2                     u767_25:	
 11188  01A2  35B0               	lslf	_Two^(0+384),f	;volatile
 11189  01A3  0DB1               	rlf	(_Two+1)^(0+384),f	;volatile
 11190  01A4  0B89               	decfsz	9,f
 11191  01A5  29A2               	goto	u767_25
 11192                           
 11193                           ;main.c: 248: Two |= TwoL;
 11194  01A6  0022               	movlb	2	; select bank2
 11195  01A7  0836               	movf	_TwoL^(0+256),w	;volatile
 11196  01A8  0020               	movlb	0	; select bank0
 11197  01A9  00CB               	movwf	??_ISR_Function
 11198  01AA  01CC               	clrf	??_ISR_Function+1
 11199  01AB  084B               	movf	??_ISR_Function,w
 11200  01AC  0023               	movlb	3	; select bank3
 11201  01AD  04B0               	iorwf	_Two^(0+384),f	;volatile
 11202  01AE  0020               	movlb	0	; select bank0
 11203  01AF  084C               	movf	??_ISR_Function+1,w
 11204  01B0  0023               	movlb	3	; select bank3
 11205  01B1  04B1               	iorwf	(_Two+1)^(0+384),f	;volatile
 11206                           
 11207                           ;main.c: 249: One = OneH;
 11208  01B2  0022               	movlb	2	; select bank2
 11209  01B3  0833               	movf	_OneH^(0+256),w	;volatile
 11210  01B4  0020               	movlb	0	; select bank0
 11211  01B5  00CB               	movwf	??_ISR_Function
 11212  01B6  01CC               	clrf	??_ISR_Function+1
 11213  01B7  084B               	movf	??_ISR_Function,w
 11214  01B8  0023               	movlb	3	; select bank3
 11215  01B9  00AC               	movwf	_One^(0+384)	;volatile
 11216  01BA  0020               	movlb	0	; select bank0
 11217  01BB  084C               	movf	??_ISR_Function+1,w
 11218  01BC  0023               	movlb	3	; select bank3
 11219  01BD  00AD               	movwf	(_One+1)^(0+384)	;volatile
 11220                           
 11221                           ;main.c: 250: One <<= 8;
 11222  01BE  3008               	movlw	8
 11223  01BF                     u768_25:	
 11224  01BF  35AC               	lslf	_One^(0+384),f	;volatile
 11225  01C0  0DAD               	rlf	(_One+1)^(0+384),f	;volatile
 11226  01C1  0B89               	decfsz	9,f
 11227  01C2  29BF               	goto	u768_25
 11228                           
 11229                           ;main.c: 251: One |= OneL;
 11230  01C3  0022               	movlb	2	; select bank2
 11231  01C4  0834               	movf	_OneL^(0+256),w	;volatile
 11232  01C5  0020               	movlb	0	; select bank0
 11233  01C6  00CB               	movwf	??_ISR_Function
 11234  01C7  01CC               	clrf	??_ISR_Function+1
 11235  01C8  084B               	movf	??_ISR_Function,w
 11236  01C9  0023               	movlb	3	; select bank3
 11237  01CA  04AC               	iorwf	_One^(0+384),f	;volatile
 11238  01CB  0020               	movlb	0	; select bank0
 11239  01CC  084C               	movf	??_ISR_Function+1,w
 11240  01CD  0023               	movlb	3	; select bank3
 11241  01CE  04AD               	iorwf	(_One+1)^(0+384),f	;volatile
 11242                           
 11243                           ;main.c: 252: Total_Count = Two - One;
 11244  01CF  092C               	comf	_One^(0+384),w	;volatile
 11245  01D0  0020               	movlb	0	; select bank0
 11246  01D1  00CB               	movwf	??_ISR_Function
 11247  01D2  0023               	movlb	3	; select bank3
 11248  01D3  092D               	comf	(_One+1)^(0+384),w	;volatile
 11249  01D4  0020               	movlb	0	; select bank0
 11250  01D5  00CC               	movwf	??_ISR_Function+1
 11251  01D6  0ACB               	incf	??_ISR_Function,f
 11252  01D7  1903               	skipnz
 11253  01D8  0ACC               	incf	??_ISR_Function+1,f
 11254  01D9  0023               	movlb	3	; select bank3
 11255  01DA  0830               	movf	_Two^(0+384),w	;volatile
 11256  01DB  0020               	movlb	0	; select bank0
 11257  01DC  074B               	addwf	??_ISR_Function,w
 11258  01DD  0023               	movlb	3	; select bank3
 11259  01DE  00AE               	movwf	_Total_Count^(0+384)	;volatile
 11260  01DF  0831               	movf	(_Two+1)^(0+384),w	;volatile
 11261  01E0  0020               	movlb	0	; select bank0
 11262  01E1  3D4C               	addwfc	??_ISR_Function+1,w
 11263  01E2  0023               	movlb	3	; select bank3
 11264  01E3  00AF               	movwf	(_Total_Count+1)^(0+384)	;volatile
 11265                           
 11266                           ;main.c: 254: pperiod=Total_Count;
 11267  01E4  082F               	movf	(_Total_Count+1)^(0+384),w	;volatile
 11268  01E5  00BB               	movwf	(_pperiod+1)^(0+384)	;volatile
 11269  01E6  082E               	movf	_Total_Count^(0+384),w	;volatile
 11270  01E7  00BA               	movwf	_pperiod^(0+384)	;volatile
 11271                           
 11272                           ;main.c: 255: Total_Period=Total_Period+pperiod;
 11273  01E8  0024               	movlb	4	; select bank4
 11274  01E9  0820               	movf	_Total_Period^(0+512),w
 11275  01EA  0020               	movlb	0	; select bank0
 11276  01EB  00CB               	movwf	??_ISR_Function
 11277  01EC  0024               	movlb	4	; select bank4
 11278  01ED  0821               	movf	(_Total_Period+1)^(0+512),w
 11279  01EE  0020               	movlb	0	; select bank0
 11280  01EF  00CC               	movwf	??_ISR_Function+1
 11281  01F0  0024               	movlb	4	; select bank4
 11282  01F1  0822               	movf	(_Total_Period+2)^(0+512),w
 11283  01F2  0020               	movlb	0	; select bank0
 11284  01F3  00CD               	movwf	??_ISR_Function+2
 11285  01F4  0024               	movlb	4	; select bank4
 11286  01F5  0823               	movf	(_Total_Period+3)^(0+512),w
 11287  01F6  0020               	movlb	0	; select bank0
 11288  01F7  00CE               	movwf	??_ISR_Function+3
 11289  01F8  0023               	movlb	3	; select bank3
 11290  01F9  083A               	movf	_pperiod^(0+384),w	;volatile
 11291  01FA  0020               	movlb	0	; select bank0
 11292  01FB  00CF               	movwf	??_ISR_Function+4
 11293  01FC  0023               	movlb	3	; select bank3
 11294  01FD  083B               	movf	(_pperiod+1)^(0+384),w	;volatile
 11295  01FE  0020               	movlb	0	; select bank0
 11296  01FF  00D0               	movwf	??_ISR_Function+5
 11297  0200  01D1               	clrf	??_ISR_Function+6
 11298  0201  01D2               	clrf	??_ISR_Function+7
 11299  0202  084F               	movf	??_ISR_Function+4,w
 11300  0203  07CB               	addwf	??_ISR_Function,f
 11301  0204  0850               	movf	??_ISR_Function+5,w
 11302  0205  3DCC               	addwfc	??_ISR_Function+1,f
 11303  0206  0851               	movf	??_ISR_Function+6,w
 11304  0207  3DCD               	addwfc	??_ISR_Function+2,f
 11305  0208  0852               	movf	??_ISR_Function+7,w
 11306  0209  3DCE               	addwfc	??_ISR_Function+3,f
 11307  020A  084E               	movf	??_ISR_Function+3,w
 11308  020B  0024               	movlb	4	; select bank4
 11309  020C  00A3               	movwf	(_Total_Period+3)^(0+512)
 11310  020D  0020               	movlb	0	; select bank0
 11311  020E  084D               	movf	??_ISR_Function+2,w
 11312  020F  0024               	movlb	4	; select bank4
 11313  0210  00A2               	movwf	(_Total_Period+2)^(0+512)
 11314  0211  0020               	movlb	0	; select bank0
 11315  0212  084C               	movf	??_ISR_Function+1,w
 11316  0213  0024               	movlb	4	; select bank4
 11317  0214  00A1               	movwf	(_Total_Period+1)^(0+512)
 11318  0215  0020               	movlb	0	; select bank0
 11319  0216  084B               	movf	??_ISR_Function,w
 11320  0217  0024               	movlb	4	; select bank4
 11321  0218  00A0               	movwf	_Total_Period^(0+512)
 11322                           
 11323                           ;main.c: 256: pcount++;
 11324  0219  3001               	movlw	1
 11325  021A  0020               	movlb	0	; select bank0
 11326  021B  00CB               	movwf	??_ISR_Function
 11327  021C  084B               	movf	??_ISR_Function,w
 11328  021D  0022               	movlb	2	; select bank2
 11329  021E  07D6               	addwf	_pcount^(0+256),f
 11330                           
 11331                           ;main.c: 257: if(pcount>=16)
 11332  021F  3010               	movlw	16
 11333  0220  0256               	subwf	_pcount^(0+256),w
 11334  0221  1C03               	skipc
 11335  0222  2B42               	goto	i1l5353
 11336                           
 11337                           ;main.c: 258: {
 11338                           ;main.c: 259: pcount=0;
 11339  0223  01D6               	clrf	_pcount^(0+256)
 11340                           
 11341                           ;main.c: 260: avgpperiod=Total_Period>>5;
 11342  0224  0024               	movlb	4	; select bank4
 11343  0225  0820               	movf	_Total_Period^(0+512),w
 11344  0226  0020               	movlb	0	; select bank0
 11345  0227  00CB               	movwf	??_ISR_Function
 11346  0228  0024               	movlb	4	; select bank4
 11347  0229  0821               	movf	(_Total_Period+1)^(0+512),w
 11348  022A  0020               	movlb	0	; select bank0
 11349  022B  00CC               	movwf	??_ISR_Function+1
 11350  022C  0024               	movlb	4	; select bank4
 11351  022D  0822               	movf	(_Total_Period+2)^(0+512),w
 11352  022E  0020               	movlb	0	; select bank0
 11353  022F  00CD               	movwf	??_ISR_Function+2
 11354  0230  0024               	movlb	4	; select bank4
 11355  0231  0823               	movf	(_Total_Period+3)^(0+512),w
 11356  0232  0020               	movlb	0	; select bank0
 11357  0233  00CE               	movwf	??_ISR_Function+3
 11358  0234  3005               	movlw	5
 11359  0235                     u770_25:	
 11360  0235  36CE               	lsrf	??_ISR_Function+3,f
 11361  0236  0CCD               	rrf	??_ISR_Function+2,f
 11362  0237  0CCC               	rrf	??_ISR_Function+1,f
 11363  0238  0CCB               	rrf	??_ISR_Function,f
 11364  0239  0B89               	decfsz	9,f
 11365  023A  2A35               	goto	u770_25
 11366  023B  084C               	movf	??_ISR_Function+1,w
 11367  023C  0022               	movlb	2	; select bank2
 11368  023D  00EA               	movwf	(_avgpperiod+1)^(0+256)	;volatile
 11369  023E  0020               	movlb	0	; select bank0
 11370  023F  084B               	movf	??_ISR_Function,w
 11371  0240  0022               	movlb	2	; select bank2
 11372  0241  00E9               	movwf	_avgpperiod^(0+256)	;volatile
 11373                           
 11374                           ;main.c: 261: pfreq=1000000/avgpperiod;
 11375  0242  0869               	movf	_avgpperiod^(0+256),w	;volatile
 11376  0243  00F0               	movwf	i1___aldiv@divisor
 11377  0244  086A               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 11378  0245  00F1               	movwf	i1___aldiv@divisor+1
 11379  0246  01F2               	clrf	i1___aldiv@divisor+2
 11380  0247  01F3               	clrf	i1___aldiv@divisor+3
 11381  0248  3000               	movlw	0
 11382  0249  00F7               	movwf	i1___aldiv@dividend+3
 11383  024A  300F               	movlw	15
 11384  024B  00F6               	movwf	i1___aldiv@dividend+2
 11385  024C  3042               	movlw	66
 11386  024D  00F5               	movwf	i1___aldiv@dividend+1
 11387  024E  3040               	movlw	64
 11388  024F  00F4               	movwf	i1___aldiv@dividend
 11389  0250  319D  2545  3180   	fcall	i1___aldiv
 11390  0253  0871               	movf	?i1___aldiv+1,w
 11391  0254  0020               	movlb	0	; select bank0
 11392  0255  00EA               	movwf	_pfreq+1	;volatile
 11393  0256  0870               	movf	?i1___aldiv,w
 11394  0257  00E9               	movwf	_pfreq	;volatile
 11395                           
 11396                           ;main.c: 262: Total_Period=0;
 11397  0258  3000               	movlw	0
 11398  0259  0024               	movlb	4	; select bank4
 11399  025A  00A3               	movwf	(_Total_Period+3)^(0+512)
 11400  025B  3000               	movlw	0
 11401  025C  00A2               	movwf	(_Total_Period+2)^(0+512)
 11402  025D  3000               	movlw	0
 11403  025E  00A1               	movwf	(_Total_Period+1)^(0+512)
 11404  025F  3000               	movlw	0
 11405  0260  00A0               	movwf	_Total_Period^(0+512)
 11406                           
 11407                           ;main.c: 264: Tsampling =avgpperiod/1000.0;
 11408  0261  3000               	movlw	0
 11409  0262  0020               	movlb	0	; select bank0
 11410  0263  00A0               	movwf	i1___ftdiv@f2
 11411  0264  307A               	movlw	122
 11412  0265  00A1               	movwf	i1___ftdiv@f2+1
 11413  0266  3044               	movlw	68
 11414  0267  00A2               	movwf	i1___ftdiv@f2+2
 11415  0268  0022               	movlb	2	; select bank2
 11416  0269  086A               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 11417  026A  00F9               	movwf	i1___lwtoft@c+1
 11418  026B  0869               	movf	_avgpperiod^(0+256),w	;volatile
 11419  026C  00F8               	movwf	i1___lwtoft@c
 11420  026D  31A7  27DA  3180   	fcall	i1___lwtoft
 11421  0270  0878               	movf	?i1___lwtoft,w
 11422  0271  0020               	movlb	0	; select bank0
 11423  0272  00A3               	movwf	i1___ftdiv@f1
 11424  0273  0879               	movf	?i1___lwtoft+1,w
 11425  0274  00A4               	movwf	i1___ftdiv@f1+1
 11426  0275  087A               	movf	?i1___lwtoft+2,w
 11427  0276  00A5               	movwf	i1___ftdiv@f1+2
 11428  0277  319F  2757  3180   	fcall	i1___ftdiv
 11429  027A  0020               	movlb	0	; select bank0
 11430  027B  0820               	movf	?i1___ftdiv,w
 11431  027C  0023               	movlb	3	; select bank3
 11432  027D  00E1               	movwf	_Tsampling^(0+384)
 11433  027E  0020               	movlb	0	; select bank0
 11434  027F  0821               	movf	?i1___ftdiv+1,w
 11435  0280  0023               	movlb	3	; select bank3
 11436  0281  00E2               	movwf	(_Tsampling+1)^(0+384)
 11437  0282  0020               	movlb	0	; select bank0
 11438  0283  0822               	movf	?i1___ftdiv+2,w
 11439  0284  0023               	movlb	3	; select bank3
 11440  0285  00E3               	movwf	(_Tsampling+2)^(0+384)
 11441                           
 11442                           ;main.c: 268: if(pfreq>=999)
 11443  0286  3003               	movlw	3
 11444  0287  0020               	movlb	0	; select bank0
 11445  0288  026A               	subwf	_pfreq+1,w	;volatile
 11446  0289  30E7               	movlw	231
 11447  028A  1903               	skipnz
 11448  028B  0269               	subwf	_pfreq,w	;volatile
 11449  028C  1C03               	skipc
 11450  028D  2A93               	goto	i1l5325
 11451                           
 11452                           ;main.c: 269: pfreq=999;
 11453  028E  30E7               	movlw	231
 11454  028F  00E9               	movwf	_pfreq	;volatile
 11455  0290  3003               	movlw	3
 11456  0291  00EA               	movwf	_pfreq+1	;volatile
 11457  0292  2A99               	goto	i1l5329
 11458  0293                     i1l5325:	
 11459                           
 11460                           ;main.c: 270: else if(pfreq<=0)
 11461  0293  0869               	movf	_pfreq,w	;volatile
 11462  0294  046A               	iorwf	_pfreq+1,w	;volatile
 11463  0295  1D03               	btfss	3,2
 11464  0296  2A99               	goto	i1l5329
 11465                           
 11466                           ;main.c: 271: pfreq=0;
 11467  0297  01E9               	clrf	_pfreq	;volatile
 11468  0298  01EA               	clrf	_pfreq+1	;volatile
 11469  0299                     i1l5329:	
 11470                           
 11471                           ;main.c: 274: Fltpfreq=(0.2*pfreq)+(0.8)*prevFltpfreq;
 11472  0299  086A               	movf	_pfreq+1,w	;volatile
 11473  029A  00F9               	movwf	i1___lwtoft@c+1
 11474  029B  0869               	movf	_pfreq,w	;volatile
 11475  029C  00F8               	movwf	i1___lwtoft@c
 11476  029D  31A7  27DA  3180   	fcall	i1___lwtoft
 11477  02A0  0878               	movf	?i1___lwtoft,w
 11478  02A1  0020               	movlb	0	; select bank0
 11479  02A2  00A3               	movwf	i1___ftmul@f2
 11480  02A3  0879               	movf	?i1___lwtoft+1,w
 11481  02A4  00A4               	movwf	i1___ftmul@f2+1
 11482  02A5  087A               	movf	?i1___lwtoft+2,w
 11483  02A6  00A5               	movwf	i1___ftmul@f2+2
 11484  02A7  30CD               	movlw	205
 11485  02A8  00A0               	movwf	i1___ftmul@f1
 11486  02A9  304C               	movlw	76
 11487  02AA  00A1               	movwf	i1___ftmul@f1+1
 11488  02AB  303E               	movlw	62
 11489  02AC  00A2               	movwf	i1___ftmul@f1+2
 11490  02AD  3190  20B5  3180   	fcall	i1___ftmul
 11491  02B0  0020               	movlb	0	; select bank0
 11492  02B1  0820               	movf	?i1___ftmul,w
 11493  02B2  00B3               	movwf	i1___ftadd@f2
 11494  02B3  0821               	movf	?i1___ftmul+1,w
 11495  02B4  00B4               	movwf	i1___ftadd@f2+1
 11496  02B5  0822               	movf	?i1___ftmul+2,w
 11497  02B6  00B5               	movwf	i1___ftadd@f2+2
 11498  02B7  0024               	movlb	4	; select bank4
 11499  02B8  084B               	movf	(_prevFltpfreq+1)^(0+512),w
 11500  02B9  00F9               	movwf	i1___lwtoft@c+1
 11501  02BA  084A               	movf	_prevFltpfreq^(0+512),w
 11502  02BB  00F8               	movwf	i1___lwtoft@c
 11503  02BC  31A7  27DA  3180   	fcall	i1___lwtoft
 11504  02BF  0878               	movf	?i1___lwtoft,w
 11505  02C0  0020               	movlb	0	; select bank0
 11506  02C1  00A3               	movwf	i1___ftmul@f2
 11507  02C2  0879               	movf	?i1___lwtoft+1,w
 11508  02C3  00A4               	movwf	i1___ftmul@f2+1
 11509  02C4  087A               	movf	?i1___lwtoft+2,w
 11510  02C5  00A5               	movwf	i1___ftmul@f2+2
 11511  02C6  30CD               	movlw	205
 11512  02C7  00A0               	movwf	i1___ftmul@f1
 11513  02C8  304C               	movlw	76
 11514  02C9  00A1               	movwf	i1___ftmul@f1+1
 11515  02CA  303F               	movlw	63
 11516  02CB  00A2               	movwf	i1___ftmul@f1+2
 11517  02CC  3190  20B5  3180   	fcall	i1___ftmul
 11518  02CF  0020               	movlb	0	; select bank0
 11519  02D0  0820               	movf	?i1___ftmul,w
 11520  02D1  00B0               	movwf	i1___ftadd@f1
 11521  02D2  0821               	movf	?i1___ftmul+1,w
 11522  02D3  00B1               	movwf	i1___ftadd@f1+1
 11523  02D4  0822               	movf	?i1___ftmul+2,w
 11524  02D5  00B2               	movwf	i1___ftadd@f1+2
 11525  02D6  3191  2169  3180   	fcall	i1___ftadd
 11526  02D9  0020               	movlb	0	; select bank0
 11527  02DA  0830               	movf	?i1___ftadd,w
 11528  02DB  00BD               	movwf	i1___fttol@f1
 11529  02DC  0831               	movf	?i1___ftadd+1,w
 11530  02DD  00BE               	movwf	i1___fttol@f1+1
 11531  02DE  0832               	movf	?i1___ftadd+2,w
 11532  02DF  00BF               	movwf	i1___fttol@f1+2
 11533  02E0  319E  2649  3180   	fcall	i1___fttol
 11534  02E3  0020               	movlb	0	; select bank0
 11535  02E4  083E               	movf	?i1___fttol+1,w
 11536  02E5  0022               	movlb	2	; select bank2
 11537  02E6  00A1               	movwf	(_Fltpfreq+1)^(0+256)
 11538  02E7  0020               	movlb	0	; select bank0
 11539  02E8  083D               	movf	?i1___fttol,w
 11540  02E9  0022               	movlb	2	; select bank2
 11541  02EA  00A0               	movwf	_Fltpfreq^(0+256)
 11542                           
 11543                           ;main.c: 276: pstowfstru.pstowfstrs.Hi_data1 = pfreq / 3.4;
 11544  02EB  0020               	movlb	0	; select bank0
 11545  02EC  086A               	movf	_pfreq+1,w	;volatile
 11546  02ED  00F9               	movwf	i1___lwtoft@c+1
 11547  02EE  0869               	movf	_pfreq,w	;volatile
 11548  02EF  00F8               	movwf	i1___lwtoft@c
 11549  02F0  31A7  27DA  3180   	fcall	i1___lwtoft
 11550  02F3  0878               	movf	?i1___lwtoft,w
 11551  02F4  0020               	movlb	0	; select bank0
 11552  02F5  00A3               	movwf	i1___ftdiv@f1
 11553  02F6  0879               	movf	?i1___lwtoft+1,w
 11554  02F7  00A4               	movwf	i1___ftdiv@f1+1
 11555  02F8  087A               	movf	?i1___lwtoft+2,w
 11556  02F9  00A5               	movwf	i1___ftdiv@f1+2
 11557  02FA  309A               	movlw	154
 11558  02FB  00A0               	movwf	i1___ftdiv@f2
 11559  02FC  3059               	movlw	89
 11560  02FD  00A1               	movwf	i1___ftdiv@f2+1
 11561  02FE  3040               	movlw	64
 11562  02FF  00A2               	movwf	i1___ftdiv@f2+2
 11563  0300  319F  2757  3180   	fcall	i1___ftdiv
 11564  0303  0020               	movlb	0	; select bank0
 11565  0304  0820               	movf	?i1___ftdiv,w
 11566  0305  00BD               	movwf	i1___fttol@f1
 11567  0306  0821               	movf	?i1___ftdiv+1,w
 11568  0307  00BE               	movwf	i1___fttol@f1+1
 11569  0308  0822               	movf	?i1___ftdiv+2,w
 11570  0309  00BF               	movwf	i1___fttol@f1+2
 11571  030A  319E  2649  3180   	fcall	i1___fttol
 11572  030D  0020               	movlb	0	; select bank0
 11573  030E  083D               	movf	?i1___fttol,w
 11574  030F  00CB               	movwf	??_ISR_Function
 11575  0310  084B               	movf	??_ISR_Function,w
 11576  0311  0024               	movlb	4	; select bank4
 11577  0312  00E3               	movwf	(_pstowfstru^(0+512)+21)
 11578                           
 11579                           ;main.c: 278: if(Fltpfreq>=999)
 11580  0313  3003               	movlw	3
 11581  0314  0022               	movlb	2	; select bank2
 11582  0315  0221               	subwf	(_Fltpfreq+1)^(0+256),w
 11583  0316  30E7               	movlw	231
 11584  0317  1903               	skipnz
 11585  0318  0220               	subwf	_Fltpfreq^(0+256),w
 11586  0319  1C03               	skipc
 11587  031A  2B20               	goto	i1l5337
 11588                           
 11589                           ;main.c: 279: Fltpfreq=999;
 11590  031B  30E7               	movlw	231
 11591  031C  00A0               	movwf	_Fltpfreq^(0+256)
 11592  031D  3003               	movlw	3
 11593  031E  00A1               	movwf	(_Fltpfreq^(0+256)+1)
 11594  031F  2B26               	goto	i1l5341
 11595  0320                     i1l5337:	
 11596                           
 11597                           ;main.c: 280: else if(Fltpfreq<=0)
 11598  0320  0820               	movf	_Fltpfreq^(0+256),w
 11599  0321  0421               	iorwf	(_Fltpfreq+1)^(0+256),w
 11600  0322  1D03               	btfss	3,2
 11601  0323  2B26               	goto	i1l5341
 11602                           
 11603                           ;main.c: 281: Fltpfreq=0;
 11604  0324  01A0               	clrf	_Fltpfreq^(0+256)
 11605  0325  01A1               	clrf	(_Fltpfreq+1)^(0+256)
 11606  0326                     i1l5341:	
 11607                           
 11608                           ;main.c: 283: prevFltpfreq=Fltpfreq;
 11609  0326  0821               	movf	(_Fltpfreq+1)^(0+256),w
 11610  0327  0024               	movlb	4	; select bank4
 11611  0328  00CB               	movwf	(_prevFltpfreq+1)^(0+512)
 11612  0329  0022               	movlb	2	; select bank2
 11613  032A  0820               	movf	_Fltpfreq^(0+256),w
 11614  032B  0024               	movlb	4	; select bank4
 11615  032C  00CA               	movwf	_prevFltpfreq^(0+512)
 11616                           
 11617                           ;main.c: 284: capintervalf=1;
 11618  032D  3001               	movlw	1
 11619  032E  0020               	movlb	0	; select bank0
 11620  032F  00CB               	movwf	??_ISR_Function
 11621  0330  084B               	movf	??_ISR_Function,w
 11622  0331  0023               	movlb	3	; select bank3
 11623  0332  00CA               	movwf	_capintervalf^(0+384)	;volatile
 11624                           
 11625                           ;main.c: 285: fixintervalf=0;
 11626  0333  01D0               	clrf	_fixintervalf^(0+384)	;volatile
 11627                           
 11628                           ;main.c: 286: count_pid=0;
 11629  0334  01CC               	clrf	_count_pid^(0+384)	;volatile
 11630                           
 11631                           ;main.c: 289: if(cyclestrtf==1 && psstatusu.psstatuss.twinpulseon==0)
 11632  0335  0022               	movlb	2	; select bank2
 11633  0336  0345               	decf	_cyclestrtf^(0+256),w
 11634  0337  1D03               	btfss	3,2
 11635  0338  2B40               	goto	i1l5351
 11636  0339  0020               	movlb	0	; select bank0
 11637  033A  1B6C               	btfsc	_psstatusu,6
 11638  033B  2B40               	goto	i1l5351
 11639                           
 11640                           ;main.c: 290: adaptivepidf=1;
 11641  033C  0022               	movlb	2	; select bank2
 11642  033D  01B7               	clrf	_adaptivepidf^(0+256)
 11643  033E  0AB7               	incf	_adaptivepidf^(0+256),f
 11644  033F  2B42               	goto	i1l5353
 11645  0340                     i1l5351:	
 11646                           
 11647                           ;main.c: 291: else
 11648                           ;main.c: 292: adaptivepidf=0;
 11649  0340  0022               	movlb	2	; select bank2
 11650  0341  01B7               	clrf	_adaptivepidf^(0+256)
 11651  0342                     i1l5353:	
 11652                           
 11653                           ;main.c: 294: }
 11654                           ;main.c: 295: }
 11655                           ;main.c: 296: }
 11656                           ;main.c: 298: if(PIE1bits.RCIE & PIR1bits.RCIF)
 11657  0342  0020               	movlb	0	; select bank0
 11658  0343  0E11               	swapf	17,w	;volatile
 11659  0344  0C89               	rrf	9,f
 11660  0345  3901               	andlw	1
 11661  0346  00CB               	movwf	??_ISR_Function
 11662  0347  0021               	movlb	1	; select bank1
 11663  0348  0E11               	swapf	17,w	;volatile
 11664  0349  0C89               	rrf	9,f
 11665  034A  3901               	andlw	1
 11666  034B  0020               	movlb	0	; select bank0
 11667  034C  054B               	andwf	??_ISR_Function,w
 11668  034D  1903               	btfsc	3,2
 11669  034E  2D4D               	goto	i1l610
 11670                           
 11671                           ;main.c: 299: {
 11672                           ;main.c: 300: PIR1bits.RCIF=0;
 11673  034F  1291               	bcf	17,5	;volatile
 11674                           
 11675                           ;main.c: 301: rxdata= RCREG;
 11676  0350  0023               	movlb	3	; select bank3
 11677  0351  0819               	movf	25,w	;volatile
 11678  0352  0020               	movlb	0	; select bank0
 11679  0353  00CB               	movwf	??_ISR_Function
 11680  0354  084B               	movf	??_ISR_Function,w
 11681  0355  00E2               	movwf	_rxdata	;volatile
 11682                           
 11683                           ;main.c: 303: if(RCSTAbits.FERR)
 11684  0356  0023               	movlb	3	; select bank3
 11685  0357  1D1D               	btfss	29,2	;volatile
 11686  0358  2B5B               	goto	i1l625
 11687                           
 11688                           ;main.c: 304: {
 11689                           ;main.c: 305: RCSTAbits.SPEN=0;
 11690  0359  139D               	bcf	29,7	;volatile
 11691                           
 11692                           ;main.c: 306: RCSTAbits.SPEN=1;
 11693  035A  179D               	bsf	29,7	;volatile
 11694  035B                     i1l625:	
 11695                           
 11696                           ;main.c: 307: }
 11697                           ;main.c: 308: if(RCSTAbits.OERR)
 11698  035B  1C9D               	btfss	29,1	;volatile
 11699  035C  2B61               	goto	i1l5365
 11700                           
 11701                           ;main.c: 309: {
 11702                           ;main.c: 310: RCSTAbits.CREN=0;
 11703  035D  121D               	bcf	29,4	;volatile
 11704                           
 11705                           ;main.c: 311: RCSTAbits.CREN=1;
 11706  035E  161D               	bsf	29,4	;volatile
 11707                           
 11708                           ;main.c: 312: RCSTAbits.SPEN=0;
 11709  035F  139D               	bcf	29,7	;volatile
 11710                           
 11711                           ;main.c: 313: RCSTAbits.SPEN=1;
 11712  0360  179D               	bsf	29,7	;volatile
 11713  0361                     i1l5365:	
 11714                           
 11715                           ;main.c: 314: }
 11716                           ;main.c: 316: {
 11717                           ;main.c: 317: if(rxdata=='@' && startptr1==0 && statusptr1==0 )
 11718  0361  3040               	movlw	64
 11719  0362  0020               	movlb	0	; select bank0
 11720  0363  0662               	xorwf	_rxdata,w	;volatile
 11721  0364  1D03               	btfss	3,2
 11722  0365  2B74               	goto	i1l5375
 11723  0366  0022               	movlb	2	; select bank2
 11724  0367  0863               	movf	_startptr1^(0+256),w
 11725  0368  1D03               	btfss	3,2
 11726  0369  2B74               	goto	i1l5375
 11727  036A  0830               	movf	_statusptr1^(0+256),w
 11728  036B  0431               	iorwf	(_statusptr1+1)^(0+256),w
 11729  036C  1D03               	btfss	3,2
 11730  036D  2B74               	goto	i1l5375
 11731                           
 11732                           ;main.c: 318: {
 11733                           ;main.c: 319: startptr1 =1;
 11734  036E  01E3               	clrf	_startptr1^(0+256)
 11735  036F  0AE3               	incf	_startptr1^(0+256),f
 11736                           
 11737                           ;main.c: 320: arrptr =0;
 11738  0370  01B8               	clrf	_arrptr^(0+256)
 11739                           
 11740                           ;main.c: 321: statusptr1 =0;
 11741  0371  01B0               	clrf	_statusptr1^(0+256)
 11742  0372  01B1               	clrf	(_statusptr1+1)^(0+256)
 11743  0373  2D4C               	goto	L24
 11744  0374                     i1l5375:	
 11745                           ;main.c: 323: }
 11746                           
 11747                           ;main.c: 322: recchksum =0;
 11748                           
 11749                           
 11750                           ;main.c: 324: else if(rxdata=='#' && startptr1==0 && statusptr1==0)
 11751  0374  3023               	movlw	35
 11752  0375  0020               	movlb	0	; select bank0
 11753  0376  0662               	xorwf	_rxdata,w	;volatile
 11754  0377  1D03               	btfss	3,2
 11755  0378  2B87               	goto	i1l5389
 11756  0379  0022               	movlb	2	; select bank2
 11757  037A  0863               	movf	_startptr1^(0+256),w
 11758  037B  1D03               	btfss	3,2
 11759  037C  2B87               	goto	i1l5389
 11760  037D  0830               	movf	_statusptr1^(0+256),w
 11761  037E  0431               	iorwf	(_statusptr1+1)^(0+256),w
 11762  037F  1D03               	btfss	3,2
 11763  0380  2B87               	goto	i1l5389
 11764                           
 11765                           ;main.c: 325: {
 11766                           ;main.c: 326: startptr1 =0;
 11767  0381  01E3               	clrf	_startptr1^(0+256)
 11768                           
 11769                           ;main.c: 327: statusptr1 =1;
 11770  0382  3001               	movlw	1
 11771  0383  00B0               	movwf	_statusptr1^(0+256)
 11772  0384  3000               	movlw	0
 11773  0385  00B1               	movwf	(_statusptr1^(0+256)+1)
 11774  0386  2D4B               	goto	L26
 11775  0387                     i1l5389:	
 11776                           ;main.c: 330: }
 11777                           
 11778                           ;main.c: 329: recchksum =0;
 11779                           
 11780                           ;main.c: 328: arrptr =0;
 11781                           
 11782                           
 11783                           ;main.c: 331: else if(startptr1==0 && statusptr1==1)
 11784  0387  0022               	movlb	2	; select bank2
 11785  0388  0863               	movf	_startptr1^(0+256),w
 11786  0389  1D03               	btfss	3,2
 11787  038A  2BEE               	goto	i1l5433
 11788  038B  0330               	decf	_statusptr1^(0+256),w
 11789  038C  0431               	iorwf	(_statusptr1+1)^(0+256),w
 11790  038D  1D03               	btfss	3,2
 11791  038E  2BEE               	goto	i1l5433
 11792                           
 11793                           ;main.c: 332: {
 11794                           ;main.c: 333: if(recstatus==0)
 11795  038F  0023               	movlb	3	; select bank3
 11796  0390  0842               	movf	_recstatus^(0+384),w
 11797  0391  0443               	iorwf	(_recstatus+1)^(0+384),w
 11798  0392  1D03               	btfss	3,2
 11799  0393  2BA4               	goto	i1l5397
 11800                           
 11801                           ;main.c: 334: {
 11802                           ;main.c: 335: recpsstatus=rxdata;
 11803  0394  0020               	movlb	0	; select bank0
 11804  0395  0862               	movf	_rxdata,w	;volatile
 11805  0396  00CB               	movwf	??_ISR_Function
 11806  0397  01CC               	clrf	??_ISR_Function+1
 11807  0398  084B               	movf	??_ISR_Function,w
 11808  0399  0023               	movlb	3	; select bank3
 11809  039A  00C0               	movwf	_recpsstatus^(0+384)
 11810  039B  0020               	movlb	0	; select bank0
 11811  039C  084C               	movf	??_ISR_Function+1,w
 11812  039D  0023               	movlb	3	; select bank3
 11813  039E  00C1               	movwf	(_recpsstatus+1)^(0+384)
 11814                           
 11815                           ;main.c: 336: recstatus=1;
 11816  039F  3001               	movlw	1
 11817  03A0  00C2               	movwf	_recstatus^(0+384)
 11818  03A1  3000               	movlw	0
 11819  03A2  00C3               	movwf	(_recstatus^(0+384)+1)
 11820                           
 11821                           ;main.c: 337: }
 11822  03A3  2D4D               	goto	i1l610
 11823  03A4                     i1l5397:	
 11824                           
 11825                           ;main.c: 338: else if(recstatus==1)
 11826  03A4  0342               	decf	_recstatus^(0+384),w
 11827  03A5  0443               	iorwf	(_recstatus+1)^(0+384),w
 11828  03A6  1D03               	btfss	3,2
 11829  03A7  2D4D               	goto	i1l610
 11830                           
 11831                           ;main.c: 339: {
 11832                           ;main.c: 340: if(rxdata==recpsstatus)
 11833  03A8  0020               	movlb	0	; select bank0
 11834  03A9  0862               	movf	_rxdata,w	;volatile
 11835  03AA  00CB               	movwf	??_ISR_Function
 11836  03AB  01CC               	clrf	??_ISR_Function+1
 11837  03AC  0023               	movlb	3	; select bank3
 11838  03AD  0841               	movf	(_recpsstatus+1)^(0+384),w
 11839  03AE  0020               	movlb	0	; select bank0
 11840  03AF  064C               	xorwf	??_ISR_Function+1,w
 11841  03B0  1D03               	skipz
 11842  03B1  2BB6               	goto	u790_25
 11843  03B2  0023               	movlb	3	; select bank3
 11844  03B3  0840               	movf	_recpsstatus^(0+384),w
 11845  03B4  0020               	movlb	0	; select bank0
 11846  03B5  064B               	xorwf	??_ISR_Function,w
 11847  03B6                     u790_25:	
 11848  03B6  1D03               	skipz
 11849  03B7  2D44               	goto	i1l5493
 11850                           
 11851                           ;main.c: 341: {
 11852                           ;main.c: 342: comm_error_count=0;
 11853  03B8  0022               	movlb	2	; select bank2
 11854  03B9  01C0               	clrf	_comm_error_count^(0+256)	;volatile
 11855                           
 11856                           ;main.c: 343: psstatusu.psstatusbyte[0]=recpsstatus;
 11857  03BA  0023               	movlb	3	; select bank3
 11858  03BB  0840               	movf	_recpsstatus^(0+384),w
 11859  03BC  0020               	movlb	0	; select bank0
 11860  03BD  00CB               	movwf	??_ISR_Function
 11861  03BE  084B               	movf	??_ISR_Function,w
 11862  03BF  00EC               	movwf	_psstatusu
 11863                           
 11864                           ;main.c: 344: pstowfstru.pstowfstrs.psstatusbyte=recpsstatus;
 11865  03C0  0023               	movlb	3	; select bank3
 11866  03C1  0840               	movf	_recpsstatus^(0+384),w
 11867  03C2  0020               	movlb	0	; select bank0
 11868  03C3  00CB               	movwf	??_ISR_Function
 11869  03C4  084B               	movf	??_ISR_Function,w
 11870  03C5  0024               	movlb	4	; select bank4
 11871  03C6  00DA               	movwf	(_pstowfstru^(0+512)+12)
 11872                           
 11873                           ;main.c: 346: if(psstatusu.psstatuss.motoroncommand==1 && psstatusu.psstatuss.twinpulseo
      +                          n==1 )
 11874  03C7  0020               	movlb	0	; select bank0
 11875  03C8  19EC               	btfsc	_psstatusu,3
 11876  03C9  1F6C               	btfss	_psstatusu,6
 11877  03CA  2BE2               	goto	i1l5419
 11878                           
 11879                           ;main.c: 347: {
 11880                           ;main.c: 348: if(psstatusu.psstatuss.Hi_speedon==1)
 11881  03CB  1FEC               	btfss	_psstatusu,7
 11882  03CC  2BD6               	goto	i1l637
 11883                           
 11884                           ;main.c: 349: {
 11885                           ;main.c: 350: TRISAbits.TRISA0=0;
 11886  03CD  0021               	movlb	1	; select bank1
 11887  03CE  100C               	bcf	12,0	;volatile
 11888                           
 11889                           ;main.c: 351: PORTAbits.RA0=1;
 11890  03CF  0020               	movlb	0	; select bank0
 11891  03D0  140C               	bsf	12,0	;volatile
 11892                           
 11893                           ;main.c: 354: Update_PWM(Hi_setppwm);
 11894  03D1  0024               	movlb	4	; select bank4
 11895  03D2  082B               	movf	(_Hi_setppwm+1)^(0+512),w
 11896  03D3  00F7               	movwf	i1Update_PWM@setwsduty+1
 11897  03D4  082A               	movf	_Hi_setppwm^(0+512),w
 11898  03D5  2BDE               	goto	L25
 11899  03D6                     i1l637:	
 11900                           ;main.c: 356: }
 11901                           
 11902                           
 11903                           ;main.c: 357: else
 11904                           ;main.c: 358: {
 11905                           ;main.c: 359: TRISAbits.TRISA0=0;
 11906  03D6  0021               	movlb	1	; select bank1
 11907  03D7  100C               	bcf	12,0	;volatile
 11908                           
 11909                           ;main.c: 360: PORTAbits.RA0=0;
 11910  03D8  0020               	movlb	0	; select bank0
 11911  03D9  100C               	bcf	12,0	;volatile
 11912                           
 11913                           ;main.c: 363: Update_PWM(Lo_setppwm);
 11914  03DA  0024               	movlb	4	; select bank4
 11915  03DB  082D               	movf	(_Lo_setppwm+1)^(0+512),w
 11916  03DC  00F7               	movwf	i1Update_PWM@setwsduty+1
 11917  03DD  082C               	movf	_Lo_setppwm^(0+512),w
 11918  03DE                     L25:	
 11919  03DE  00F6               	movwf	i1Update_PWM@setwsduty
 11920  03DF  3198  20AE  3180   	fcall	i1_Update_PWM
 11921  03E2                     i1l5419:	
 11922                           
 11923                           ;main.c: 365: }
 11924                           ;main.c: 366: }
 11925                           ;main.c: 378: recstatus=0;
 11926  03E2  0023               	movlb	3	; select bank3
 11927  03E3  01C2               	clrf	_recstatus^(0+384)
 11928  03E4  01C3               	clrf	(_recstatus+1)^(0+384)
 11929                           
 11930                           ;main.c: 379: startptr1=0;
 11931  03E5  0022               	movlb	2	; select bank2
 11932  03E6  01E3               	clrf	_startptr1^(0+256)
 11933                           
 11934                           ;main.c: 380: statusptr1=0;
 11935  03E7  01B0               	clrf	_statusptr1^(0+256)
 11936  03E8  01B1               	clrf	(_statusptr1+1)^(0+256)
 11937                           
 11938                           ;main.c: 381: arrptr=0;
 11939  03E9  01B8               	clrf	_arrptr^(0+256)
 11940                           
 11941                           ;main.c: 382: recchksum=0;
 11942  03EA  01DF               	clrf	_recchksum^(0+256)
 11943                           
 11944                           ;main.c: 383: send_statusf=1;
 11945  03EB  01E2               	clrf	_send_statusf^(0+256)
 11946  03EC  0AE2               	incf	_send_statusf^(0+256),f
 11947                           
 11948                           ;main.c: 385: }
 11949  03ED  2D4D               	goto	i1l610
 11950  03EE                     i1l5433:	
 11951                           ;main.c: 393: }
 11952                           ;main.c: 394: }
 11953                           ;main.c: 395: }
 11954                           
 11955                           ;main.c: 392: recchksum=0;
 11956                           
 11957                           ;main.c: 391: arrptr=0;
 11958                           
 11959                           ;main.c: 390: statusptr1=0;
 11960                           
 11961                           ;main.c: 389: startptr1=0;
 11962                           
 11963                           ;main.c: 386: else
 11964                           ;main.c: 387: {
 11965                           ;main.c: 388: recstatus=0;
 11966                           
 11967                           
 11968                           ;main.c: 396: else if(startptr1==1 && statusptr1==0)
 11969  03EE  0363               	decf	_startptr1^(0+256),w
 11970  03EF  1D03               	btfss	3,2
 11971  03F0  2D4D               	goto	i1l610
 11972  03F1  0830               	movf	_statusptr1^(0+256),w
 11973  03F2  0431               	iorwf	(_statusptr1+1)^(0+256),w
 11974  03F3  1D03               	btfss	3,2
 11975  03F4  2D4D               	goto	i1l610
 11976                           
 11977                           ;main.c: 397: {
 11978                           ;main.c: 398: if(arrptr<=22)
 11979  03F5  3017               	movlw	23
 11980  03F6  0238               	subwf	_arrptr^(0+256),w
 11981  03F7  1803               	skipnc
 11982  03F8  2C14               	goto	i1l5445
 11983                           
 11984                           ;main.c: 399: {
 11985                           ;main.c: 400: rec_arr[arrptr]=rxdata;
 11986  03F9  0020               	movlb	0	; select bank0
 11987  03FA  0862               	movf	_rxdata,w	;volatile
 11988  03FB  00CB               	movwf	??_ISR_Function
 11989  03FC  0022               	movlb	2	; select bank2
 11990  03FD  0838               	movf	_arrptr^(0+256),w
 11991  03FE  3EA0               	addlw	(low (_rec_arr| (0+512)))& (0+255)
 11992  03FF  0086               	movwf	6
 11993  0400  3002               	movlw	2	; select bank5/6
 11994  0401  0087               	movwf	7
 11995  0402  0020               	movlb	0	; select bank0
 11996  0403  084B               	movf	??_ISR_Function,w
 11997  0404  0081               	movwf	1
 11998                           
 11999                           ;main.c: 401: recchksum=recchksum+rxdata;
 12000  0405  0022               	movlb	2	; select bank2
 12001  0406  085F               	movf	_recchksum^(0+256),w
 12002  0407  0020               	movlb	0	; select bank0
 12003  0408  0762               	addwf	_rxdata,w	;volatile
 12004  0409  00CB               	movwf	??_ISR_Function
 12005  040A  084B               	movf	??_ISR_Function,w
 12006  040B  0022               	movlb	2	; select bank2
 12007  040C  00DF               	movwf	_recchksum^(0+256)
 12008                           
 12009                           ;main.c: 402: arrptr++;
 12010  040D  3001               	movlw	1
 12011  040E  0020               	movlb	0	; select bank0
 12012  040F  00CB               	movwf	??_ISR_Function
 12013  0410  084B               	movf	??_ISR_Function,w
 12014  0411  0022               	movlb	2	; select bank2
 12015  0412  07B8               	addwf	_arrptr^(0+256),f
 12016                           
 12017                           ;main.c: 404: }
 12018  0413  2D4D               	goto	i1l610
 12019  0414                     i1l5445:	
 12020                           
 12021                           ;main.c: 405: else if(recchksum==rxdata)
 12022  0414  085F               	movf	_recchksum^(0+256),w
 12023  0415  0020               	movlb	0	; select bank0
 12024  0416  0662               	xorwf	_rxdata,w	;volatile
 12025  0417  1D03               	skipz
 12026  0418  2D44               	goto	i1l5493
 12027                           
 12028                           ;main.c: 406: {
 12029                           ;main.c: 407: comm_error_count=0;
 12030  0419  0022               	movlb	2	; select bank2
 12031  041A  01C0               	clrf	_comm_error_count^(0+256)	;volatile
 12032                           
 12033                           ;main.c: 409: for(ijk=0;ijk<=22;ijk++)
 12034  041B  01A6               	clrf	_ijk^(0+256)
 12035  041C  01A7               	clrf	(_ijk+1)^(0+256)
 12036  041D  3000               	movlw	0
 12037  041E  0227               	subwf	(_ijk+1)^(0+256),w
 12038  041F  3017               	movlw	23
 12039  0420  1903               	skipnz
 12040  0421  0226               	subwf	_ijk^(0+256),w
 12041  0422  1803               	btfsc	3,0
 12042  0423  2C41               	goto	i1l5459
 12043  0424                     i1l5453:	
 12044                           
 12045                           ;main.c: 410: {
 12046                           ;main.c: 411: pstowfstru.pstransarr[ijk]=rec_arr[ijk];
 12047  0424  0826               	movf	_ijk^(0+256),w
 12048  0425  3EA0               	addlw	(low (_rec_arr| (0+512)))& (0+255)
 12049  0426  0086               	movwf	6
 12050  0427  3002               	movlw	2	; select bank5/6
 12051  0428  0087               	movwf	7
 12052  0429  0801               	movf	1,w
 12053  042A  0020               	movlb	0	; select bank0
 12054  042B  00CB               	movwf	??_ISR_Function
 12055  042C  0022               	movlb	2	; select bank2
 12056  042D  0826               	movf	_ijk^(0+256),w
 12057  042E  3E4E               	addlw	(low (_pstowfstru| (0+512)))& (0+255)
 12058  042F  0086               	movwf	6
 12059  0430  3002               	movlw	2	; select bank4/5
 12060  0431  0087               	movwf	7
 12061  0432  0020               	movlb	0	; select bank0
 12062  0433  084B               	movf	??_ISR_Function,w
 12063  0434  0081               	movwf	1
 12064  0435  3001               	movlw	1
 12065  0436  0022               	movlb	2	; select bank2
 12066  0437  07A6               	addwf	_ijk^(0+256),f
 12067  0438  3000               	movlw	0
 12068  0439  3DA7               	addwfc	(_ijk+1)^(0+256),f
 12069  043A  3000               	movlw	0
 12070  043B  0227               	subwf	(_ijk+1)^(0+256),w
 12071  043C  3017               	movlw	23
 12072  043D  1903               	skipnz
 12073  043E  0226               	subwf	_ijk^(0+256),w
 12074  043F  1C03               	skipc
 12075  0440  2C24               	goto	i1l5453
 12076  0441                     i1l5459:	
 12077                           
 12078                           ;main.c: 412: }
 12079                           ;main.c: 414: weldmode=pstowfstru.pstowfstrs.weldmode;
 12080  0441  0024               	movlb	4	; select bank4
 12081  0442  084E               	movf	_pstowfstru^(0+512),w
 12082  0443  0020               	movlb	0	; select bank0
 12083  0444  00CB               	movwf	??_ISR_Function
 12084  0445  084B               	movf	??_ISR_Function,w
 12085  0446  00E4               	movwf	_weldmode	;volatile
 12086                           
 12087                           ;main.c: 415: if(cEditfg == 0)
 12088  0447  085E               	movf	_cEditfg,w
 12089  0448  1D03               	btfss	3,2
 12090  0449  2C53               	goto	i1l647
 12091                           
 12092                           ;main.c: 416: {
 12093                           ;main.c: 417: setwirespeed=pstowfstru.pstowfstrs.setwspeed;
 12094  044A  0024               	movlb	4	; select bank4
 12095  044B  084F               	movf	(_pstowfstru^(0+512)+1),w
 12096  044C  0020               	movlb	0	; select bank0
 12097  044D  00CB               	movwf	??_ISR_Function
 12098  044E  01CC               	clrf	??_ISR_Function+1
 12099  044F  084B               	movf	??_ISR_Function,w
 12100  0450  00DC               	movwf	_setwirespeed
 12101  0451  084C               	movf	??_ISR_Function+1,w
 12102  0452  00DD               	movwf	_setwirespeed+1
 12103  0453                     i1l647:	
 12104                           
 12105                           ;main.c: 418: }
 12106                           ;main.c: 420: wfstatusu.wfstatusbyte[0]=pstowfstru.pstowfstrs.wfstatusbyte;
 12107  0453  0024               	movlb	4	; select bank4
 12108  0454  085B               	movf	(_pstowfstru^(0+512)+13),w
 12109  0455  0020               	movlb	0	; select bank0
 12110  0456  00CB               	movwf	??_ISR_Function
 12111  0457  084B               	movf	??_ISR_Function,w
 12112  0458  00ED               	movwf	_wfstatusu
 12113                           
 12114                           ;main.c: 422: if(wfstatusu.wfstatuss.twotfourtmode1==1)
 12115  0459  1C6D               	btfss	_wfstatusu,0
 12116  045A  2C5E               	goto	i1l648
 12117                           
 12118                           ;main.c: 423: {
 12119                           ;main.c: 424: TypeU.TypeS.twot=0;
 12120  045B  1265               	bcf	_TypeU,4
 12121                           
 12122                           ;main.c: 425: TypeU.TypeS.fourt=1;
 12123  045C  16E5               	bsf	_TypeU,5
 12124                           
 12125                           ;main.c: 426: }
 12126  045D  2C60               	goto	i1l5469
 12127  045E                     i1l648:	
 12128                           
 12129                           ;main.c: 427: else
 12130                           ;main.c: 428: {
 12131                           ;main.c: 429: TypeU.TypeS.twot=1;
 12132  045E  1665               	bsf	_TypeU,4
 12133                           
 12134                           ;main.c: 430: TypeU.TypeS.fourt=0;
 12135  045F  12E5               	bcf	_TypeU,5
 12136  0460                     i1l5469:	
 12137                           
 12138                           ;main.c: 431: }
 12139                           ;main.c: 433: if(cEditfg == 0)
 12140  0460  085E               	movf	_cEditfg,w
 12141  0461  1D03               	btfss	3,2
 12142  0462  2C7A               	goto	i1l650
 12143                           
 12144                           ;main.c: 434: {
 12145                           ;main.c: 435: setvoltage=pstowfstru.pstowfstrs.Hi_setvoltage;
 12146  0463  0024               	movlb	4	; select bank4
 12147  0464  0853               	movf	(_pstowfstru^(0+512)+5),w
 12148  0465  0020               	movlb	0	; select bank0
 12149  0466  00CB               	movwf	??_ISR_Function
 12150  0467  01CC               	clrf	??_ISR_Function+1
 12151  0468  084B               	movf	??_ISR_Function,w
 12152  0469  00DA               	movwf	_setvoltage
 12153  046A  084C               	movf	??_ISR_Function+1,w
 12154  046B  00DB               	movwf	_setvoltage+1
 12155                           
 12156                           ;main.c: 436: setvoltage<<=8;
 12157  046C  3008               	movlw	8
 12158  046D                     u803_25:	
 12159  046D  35DA               	lslf	_setvoltage,f
 12160  046E  0DDB               	rlf	_setvoltage+1,f
 12161  046F  0B89               	decfsz	9,f
 12162  0470  2C6D               	goto	u803_25
 12163                           
 12164                           ;main.c: 437: setvoltage|=pstowfstru.pstowfstrs.Lo_setvoltage;
 12165  0471  0024               	movlb	4	; select bank4
 12166  0472  0854               	movf	(_pstowfstru^(0+512)+6),w
 12167  0473  0020               	movlb	0	; select bank0
 12168  0474  00CB               	movwf	??_ISR_Function
 12169  0475  01CC               	clrf	??_ISR_Function+1
 12170  0476  084B               	movf	??_ISR_Function,w
 12171  0477  04DA               	iorwf	_setvoltage,f
 12172  0478  084C               	movf	??_ISR_Function+1,w
 12173  0479  04DB               	iorwf	_setvoltage+1,f
 12174  047A                     i1l650:	
 12175                           
 12176                           ;main.c: 438: }
 12177                           ;main.c: 439: setcurrent=pstowfstru.pstowfstrs.Hi_setcurrent;
 12178  047A  0024               	movlb	4	; select bank4
 12179  047B  0850               	movf	(_pstowfstru^(0+512)+2),w
 12180  047C  0020               	movlb	0	; select bank0
 12181  047D  00CB               	movwf	??_ISR_Function
 12182  047E  01CC               	clrf	??_ISR_Function+1
 12183  047F  084B               	movf	??_ISR_Function,w
 12184  0480  0022               	movlb	2	; select bank2
 12185  0481  00AE               	movwf	_setcurrent^(0+256)
 12186  0482  0020               	movlb	0	; select bank0
 12187  0483  084C               	movf	??_ISR_Function+1,w
 12188  0484  0022               	movlb	2	; select bank2
 12189  0485  00AF               	movwf	(_setcurrent+1)^(0+256)
 12190                           
 12191                           ;main.c: 440: setcurrent<<=8;
 12192  0486  3008               	movlw	8
 12193  0487                     u804_25:	
 12194  0487  35AE               	lslf	_setcurrent^(0+256),f
 12195  0488  0DAF               	rlf	(_setcurrent+1)^(0+256),f
 12196  0489  0B89               	decfsz	9,f
 12197  048A  2C87               	goto	u804_25
 12198                           
 12199                           ;main.c: 441: setcurrent|=pstowfstru.pstowfstrs.Lo_setcurrent;
 12200  048B  0024               	movlb	4	; select bank4
 12201  048C  0851               	movf	(_pstowfstru^(0+512)+3),w
 12202  048D  0020               	movlb	0	; select bank0
 12203  048E  00CB               	movwf	??_ISR_Function
 12204  048F  01CC               	clrf	??_ISR_Function+1
 12205  0490  084B               	movf	??_ISR_Function,w
 12206  0491  0022               	movlb	2	; select bank2
 12207  0492  04AE               	iorwf	_setcurrent^(0+256),f
 12208  0493  0020               	movlb	0	; select bank0
 12209  0494  084C               	movf	??_ISR_Function+1,w
 12210  0495  0022               	movlb	2	; select bank2
 12211  0496  04AF               	iorwf	(_setcurrent+1)^(0+256),f
 12212                           
 12213                           ;main.c: 443: Actual_amp=pstowfstru.pstowfstrs.Hi_actualcurrent;
 12214  0497  0024               	movlb	4	; select bank4
 12215  0498  0856               	movf	(_pstowfstru^(0+512)+8),w
 12216  0499  0020               	movlb	0	; select bank0
 12217  049A  00CB               	movwf	??_ISR_Function
 12218  049B  01CC               	clrf	??_ISR_Function+1
 12219  049C  084B               	movf	??_ISR_Function,w
 12220  049D  0024               	movlb	4	; select bank4
 12221  049E  00E5               	movwf	_Actual_amp^(0+512)
 12222  049F  0020               	movlb	0	; select bank0
 12223  04A0  084C               	movf	??_ISR_Function+1,w
 12224  04A1  0024               	movlb	4	; select bank4
 12225  04A2  00E6               	movwf	(_Actual_amp+1)^(0+512)
 12226                           
 12227                           ;main.c: 444: Actual_amp<<=8;
 12228  04A3  3008               	movlw	8
 12229  04A4                     u805_25:	
 12230  04A4  35E5               	lslf	_Actual_amp^(0+512),f
 12231  04A5  0DE6               	rlf	(_Actual_amp+1)^(0+512),f
 12232  04A6  0B89               	decfsz	9,f
 12233  04A7  2CA4               	goto	u805_25
 12234                           
 12235                           ;main.c: 445: Actual_amp|=pstowfstru.pstowfstrs.Lo_actualcurrent;
 12236  04A8  0857               	movf	(_pstowfstru^(0+512)+9),w
 12237  04A9  0020               	movlb	0	; select bank0
 12238  04AA  00CB               	movwf	??_ISR_Function
 12239  04AB  01CC               	clrf	??_ISR_Function+1
 12240  04AC  084B               	movf	??_ISR_Function,w
 12241  04AD  0024               	movlb	4	; select bank4
 12242  04AE  04E5               	iorwf	_Actual_amp^(0+512),f
 12243  04AF  0020               	movlb	0	; select bank0
 12244  04B0  084C               	movf	??_ISR_Function+1,w
 12245  04B1  0024               	movlb	4	; select bank4
 12246  04B2  04E6               	iorwf	(_Actual_amp+1)^(0+512),f
 12247                           
 12248                           ;main.c: 447: Actual_vtg=pstowfstru.pstowfstrs.Hi_actualvoltage;
 12249  04B3  0858               	movf	(_pstowfstru^(0+512)+10),w
 12250  04B4  0020               	movlb	0	; select bank0
 12251  04B5  00CB               	movwf	??_ISR_Function
 12252  04B6  01CC               	clrf	??_ISR_Function+1
 12253  04B7  084B               	movf	??_ISR_Function,w
 12254  04B8  0024               	movlb	4	; select bank4
 12255  04B9  00E7               	movwf	_Actual_vtg^(0+512)
 12256  04BA  0020               	movlb	0	; select bank0
 12257  04BB  084C               	movf	??_ISR_Function+1,w
 12258  04BC  0024               	movlb	4	; select bank4
 12259  04BD  00E8               	movwf	(_Actual_vtg+1)^(0+512)
 12260                           
 12261                           ;main.c: 448: Actual_vtg<<=8;
 12262  04BE  3008               	movlw	8
 12263  04BF                     u806_25:	
 12264  04BF  35E7               	lslf	_Actual_vtg^(0+512),f
 12265  04C0  0DE8               	rlf	(_Actual_vtg+1)^(0+512),f
 12266  04C1  0B89               	decfsz	9,f
 12267  04C2  2CBF               	goto	u806_25
 12268                           
 12269                           ;main.c: 449: Actual_vtg|=pstowfstru.pstowfstrs.Lo_actualvoltage;
 12270  04C3  0859               	movf	(_pstowfstru^(0+512)+11),w
 12271  04C4  0020               	movlb	0	; select bank0
 12272  04C5  00CB               	movwf	??_ISR_Function
 12273  04C6  01CC               	clrf	??_ISR_Function+1
 12274  04C7  084B               	movf	??_ISR_Function,w
 12275  04C8  0024               	movlb	4	; select bank4
 12276  04C9  04E7               	iorwf	_Actual_vtg^(0+512),f
 12277  04CA  0020               	movlb	0	; select bank0
 12278  04CB  084C               	movf	??_ISR_Function+1,w
 12279  04CC  0024               	movlb	4	; select bank4
 12280  04CD  04E8               	iorwf	(_Actual_vtg+1)^(0+512),f
 12281                           
 12282                           ;main.c: 453: cRelSpeedSign = pstowfstru.pstowfstrs.pulse_freq;
 12283  04CE  085D               	movf	(_pstowfstru^(0+512)+15),w
 12284  04CF  0020               	movlb	0	; select bank0
 12285  04D0  00CB               	movwf	??_ISR_Function
 12286  04D1  084B               	movf	??_ISR_Function,w
 12287  04D2  0023               	movlb	3	; select bank3
 12288  04D3  00C7               	movwf	_cRelSpeedSign^(0+384)
 12289                           
 12290                           ;main.c: 455: rel_wirespeed=pstowfstru.pstowfstrs.rel_wirespeed;
 12291  04D4  0024               	movlb	4	; select bank4
 12292  04D5  085C               	movf	(_pstowfstru^(0+512)+14),w
 12293  04D6  0020               	movlb	0	; select bank0
 12294  04D7  00CB               	movwf	??_ISR_Function
 12295  04D8  01CC               	clrf	??_ISR_Function+1
 12296  04D9  084B               	movf	??_ISR_Function,w
 12297  04DA  0023               	movlb	3	; select bank3
 12298  04DB  00C4               	movwf	_rel_wirespeed^(0+384)
 12299  04DC  0020               	movlb	0	; select bank0
 12300  04DD  084C               	movf	??_ISR_Function+1,w
 12301  04DE  0023               	movlb	3	; select bank3
 12302  04DF  00C5               	movwf	(_rel_wirespeed+1)^(0+384)
 12303                           
 12304                           ;main.c: 457: crater_speed=pstowfstru.pstowfstrs.crater_speed;
 12305  04E0  0024               	movlb	4	; select bank4
 12306  04E1  0860               	movf	(_pstowfstru^(0+512)+18),w
 12307  04E2  0020               	movlb	0	; select bank0
 12308  04E3  00CB               	movwf	??_ISR_Function
 12309  04E4  084B               	movf	??_ISR_Function,w
 12310  04E5  0022               	movlb	2	; select bank2
 12311  04E6  00C3               	movwf	_crater_speed^(0+256)	;volatile
 12312                           
 12313                           ;main.c: 459: if(cEditfg == 0)
 12314  04E7  0020               	movlb	0	; select bank0
 12315  04E8  085E               	movf	_cEditfg,w
 12316  04E9  1D03               	btfss	3,2
 12317  04EA  2CF1               	goto	i1l651
 12318                           
 12319                           ;main.c: 460: {
 12320                           ;main.c: 461: psstatusu.psstatusbyte[0]=pstowfstru.pstowfstrs.psstatusbyte;
 12321  04EB  0024               	movlb	4	; select bank4
 12322  04EC  085A               	movf	(_pstowfstru^(0+512)+12),w
 12323  04ED  0020               	movlb	0	; select bank0
 12324  04EE  00CB               	movwf	??_ISR_Function
 12325  04EF  084B               	movf	??_ISR_Function,w
 12326  04F0  00EC               	movwf	_psstatusu
 12327  04F1                     i1l651:	
 12328                           
 12329                           ;main.c: 462: }
 12330                           ;main.c: 464: error_code1=pstowfstru.pstowfstrs.error_code1;
 12331  04F1  0024               	movlb	4	; select bank4
 12332  04F2  085E               	movf	(_pstowfstru^(0+512)+16),w
 12333  04F3  0020               	movlb	0	; select bank0
 12334  04F4  00CB               	movwf	??_ISR_Function
 12335  04F5  084B               	movf	??_ISR_Function,w
 12336  04F6  0023               	movlb	3	; select bank3
 12337  04F7  00CE               	movwf	_error_code1^(0+384)	;volatile
 12338                           
 12339                           ;main.c: 465: error_code2=pstowfstru.pstowfstrs.error_code2;
 12340  04F8  0024               	movlb	4	; select bank4
 12341  04F9  085F               	movf	(_pstowfstru^(0+512)+17),w
 12342  04FA  0020               	movlb	0	; select bank0
 12343  04FB  00CB               	movwf	??_ISR_Function
 12344  04FC  084B               	movf	??_ISR_Function,w
 12345  04FD  0023               	movlb	3	; select bank3
 12346  04FE  00CF               	movwf	_error_code2^(0+384)	;volatile
 12347                           
 12348                           ;main.c: 467: commandu.commandbyte[0]=pstowfstru.pstowfstrs.command_to_wf;
 12349  04FF  0024               	movlb	4	; select bank4
 12350  0500  0862               	movf	(_pstowfstru^(0+512)+20),w
 12351  0501  0020               	movlb	0	; select bank0
 12352  0502  00CB               	movwf	??_ISR_Function
 12353  0503  084B               	movf	??_ISR_Function,w
 12354  0504  0023               	movlb	3	; select bank3
 12355  0505  00D8               	movwf	_commandu^(0+384)
 12356                           
 12357                           ;main.c: 468: if(cMtrOverLdfg == 0)
 12358  0506  0022               	movlb	2	; select bank2
 12359  0507  083B               	movf	_cMtrOverLdfg^(0+256),w
 12360  0508  1D03               	btfss	3,2
 12361  0509  2D18               	goto	i1l652
 12362                           
 12363                           ;main.c: 469: {
 12364                           ;main.c: 470: erroru.errorstatusbyte[0]=pstowfstru.pstowfstrs.error_code1;
 12365  050A  0024               	movlb	4	; select bank4
 12366  050B  085E               	movf	(_pstowfstru^(0+512)+16),w
 12367  050C  0020               	movlb	0	; select bank0
 12368  050D  00CB               	movwf	??_ISR_Function
 12369  050E  084B               	movf	??_ISR_Function,w
 12370  050F  0022               	movlb	2	; select bank2
 12371  0510  00EB               	movwf	_erroru^(0+256)
 12372                           
 12373                           ;main.c: 471: erroru.errorstatusbyte[1]=pstowfstru.pstowfstrs.error_code2;
 12374  0511  0024               	movlb	4	; select bank4
 12375  0512  085F               	movf	(_pstowfstru^(0+512)+17),w
 12376  0513  0020               	movlb	0	; select bank0
 12377  0514  00CB               	movwf	??_ISR_Function
 12378  0515  084B               	movf	??_ISR_Function,w
 12379  0516  0022               	movlb	2	; select bank2
 12380  0517  00EC               	movwf	(_erroru^(0+256)+1)
 12381  0518                     i1l652:	
 12382                           
 12383                           ;main.c: 472: }
 12384                           ;main.c: 474: creep_speed=pstowfstru.pstowfstrs.creep_speed;
 12385  0518  0024               	movlb	4	; select bank4
 12386  0519  0861               	movf	(_pstowfstru^(0+512)+19),w
 12387  051A  0020               	movlb	0	; select bank0
 12388  051B  00CB               	movwf	??_ISR_Function
 12389  051C  084B               	movf	??_ISR_Function,w
 12390  051D  0022               	movlb	2	; select bank2
 12391  051E  00C4               	movwf	_creep_speed^(0+256)	;volatile
 12392                           
 12393                           ;main.c: 476: if(commandu.commands.volt_or_arc==1)
 12394  051F  0023               	movlb	3	; select bank3
 12395  0520  1C58               	btfss	_commandu^(0+384),0
 12396  0521  2D26               	goto	i1l653
 12397                           
 12398                           ;main.c: 478: {
 12399                           ;main.c: 479: TypeU.TypeS.arclength=0;
 12400  0522  0020               	movlb	0	; select bank0
 12401  0523  1165               	bcf	_TypeU,2
 12402                           
 12403                           ;main.c: 480: TypeU.TypeS.vtg =1;
 12404  0524  14E6               	bsf	_TypeU+1,1
 12405                           
 12406                           ;main.c: 481: }
 12407  0525  2D29               	goto	i1l654
 12408  0526                     i1l653:	
 12409                           
 12410                           ;main.c: 482: else
 12411                           ;main.c: 483: {
 12412                           ;main.c: 484: TypeU.TypeS.arclength=1;
 12413  0526  0020               	movlb	0	; select bank0
 12414  0527  1565               	bsf	_TypeU,2
 12415                           
 12416                           ;main.c: 485: TypeU.TypeS.vtg =0;
 12417  0528  10E6               	bcf	_TypeU+1,1
 12418  0529                     i1l654:	
 12419                           
 12420                           ;main.c: 486: }
 12421                           ;main.c: 487: if(wfstatusu.wfstatuss.twotfourtmode1 == 1)
 12422  0529  1C6D               	btfss	_wfstatusu,0
 12423  052A  2D2F               	goto	i1l5487
 12424                           
 12425                           ;main.c: 488: {
 12426                           ;main.c: 489: cWf2t4tmodefg = 1;
 12427  052B  0023               	movlb	3	; select bank3
 12428  052C  01C9               	clrf	_cWf2t4tmodefg^(0+384)
 12429  052D  0AC9               	incf	_cWf2t4tmodefg^(0+384),f
 12430                           
 12431                           ;main.c: 490: }
 12432  052E  2D31               	goto	i1l656
 12433  052F                     i1l5487:	
 12434                           
 12435                           ;main.c: 491: else
 12436                           ;main.c: 492: {
 12437                           ;main.c: 493: cWf2t4tmodefg = 0;
 12438  052F  0023               	movlb	3	; select bank3
 12439  0530  01C9               	clrf	_cWf2t4tmodefg^(0+384)
 12440  0531                     i1l656:	
 12441                           
 12442                           ;main.c: 494: }
 12443                           ;main.c: 495: startptr1=0;
 12444  0531  0022               	movlb	2	; select bank2
 12445  0532  01E3               	clrf	_startptr1^(0+256)
 12446                           
 12447                           ;main.c: 496: arrptr=0;
 12448  0533  01B8               	clrf	_arrptr^(0+256)
 12449                           
 12450                           ;main.c: 497: recchksum=0;
 12451  0534  01DF               	clrf	_recchksum^(0+256)
 12452                           
 12453                           ;main.c: 498: recstatus=0;
 12454  0535  0023               	movlb	3	; select bank3
 12455  0536  01C2               	clrf	_recstatus^(0+384)
 12456  0537  01C3               	clrf	(_recstatus+1)^(0+384)
 12457                           
 12458                           ;main.c: 499: statusptr1=0;
 12459  0538  0022               	movlb	2	; select bank2
 12460  0539  01B0               	clrf	_statusptr1^(0+256)
 12461  053A  01B1               	clrf	(_statusptr1+1)^(0+256)
 12462                           
 12463                           ;main.c: 500: transmitonf=1;
 12464  053B  01E6               	clrf	_transmitonf^(0+256)
 12465  053C  0AE6               	incf	_transmitonf^(0+256),f
 12466                           
 12467                           ;main.c: 501: onesecf=1;
 12468  053D  3001               	movlw	1
 12469  053E  0020               	movlb	0	; select bank0
 12470  053F  00CB               	movwf	??_ISR_Function
 12471  0540  084B               	movf	??_ISR_Function,w
 12472  0541  0022               	movlb	2	; select bank2
 12473  0542  00D5               	movwf	_onesecf^(0+256)	;volatile
 12474                           
 12475                           ;main.c: 502: }
 12476  0543  2D4D               	goto	i1l610
 12477  0544                     i1l5493:	
 12478                           
 12479                           ;main.c: 503: else
 12480                           ;main.c: 504: {
 12481                           ;main.c: 506: recstatus=0;
 12482  0544  0023               	movlb	3	; select bank3
 12483  0545  01C2               	clrf	_recstatus^(0+384)
 12484  0546  01C3               	clrf	(_recstatus+1)^(0+384)
 12485                           
 12486                           ;main.c: 507: startptr1=0;
 12487  0547  0022               	movlb	2	; select bank2
 12488  0548  01E3               	clrf	_startptr1^(0+256)
 12489                           
 12490                           ;main.c: 508: statusptr1=0;
 12491  0549  01B0               	clrf	_statusptr1^(0+256)
 12492  054A  01B1               	clrf	(_statusptr1+1)^(0+256)
 12493  054B                     L26:	
 12494                           
 12495                           ;main.c: 509: arrptr=0;
 12496  054B  01B8               	clrf	_arrptr^(0+256)
 12497  054C                     L24:	
 12498                           
 12499                           ;main.c: 510: recchksum=0;
 12500  054C  01DF               	clrf	_recchksum^(0+256)
 12501  054D                     i1l610:	
 12502  054D  0020               	movlb	0	; select bank0
 12503  054E  0853               	movf	??_ISR_Function+8,w
 12504  054F  00FF               	movwf	127
 12505  0550  0009               	retfie
 12506  0551                     __end_of_ISR_Function:	
 12507                           
 12508                           	psect	text37
 12509  1877                     __ptext37:	
 12510 ;; *************** function i1___wmul *****************
 12511 ;; Defined at:
 12512 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 12513 ;; Parameters:    Size  Location     Type
 12514 ;;  multiplier      2    0[COMMON] unsigned int 
 12515 ;;  multiplicand    2    2[COMMON] unsigned int 
 12516 ;; Auto vars:     Size  Location     Type
 12517 ;;  __wmul          2    4[COMMON] unsigned int 
 12518 ;; Return value:  Size  Location     Type
 12519 ;;                  2    0[COMMON] unsigned int 
 12520 ;; Registers used:
 12521 ;;		wreg, status,2, status,0
 12522 ;; Tracked objects:
 12523 ;;		On entry : 0/0
 12524 ;;		On exit  : 0/0
 12525 ;;		Unchanged: 0/0
 12526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12527 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12528 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12530 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12531 ;;Total ram usage:        6 bytes
 12532 ;; Hardware stack levels used:    1
 12533 ;; This function calls:
 12534 ;;		Nothing
 12535 ;; This function is called by:
 12536 ;;		_ISR_Function
 12537 ;; This function uses a non-reentrant model
 12538 ;;
 12539                           
 12540                           
 12541                           ;psect for function i1___wmul
 12542  1877                     i1___wmul:	
 12543                           
 12544                           ;incstack = 0
 12545                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 12546  1877  01F4               	clrf	i1___wmul@product
 12547  1878  01F5               	clrf	i1___wmul@product+1
 12548  1879                     i1l4863:	
 12549  1879  1C70               	btfss	i1___wmul@multiplier,0
 12550  187A  287F               	goto	i1l965
 12551  187B  0872               	movf	i1___wmul@multiplicand,w
 12552  187C  07F4               	addwf	i1___wmul@product,f
 12553  187D  0873               	movf	i1___wmul@multiplicand+1,w
 12554  187E  3DF5               	addwfc	i1___wmul@product+1,f
 12555  187F                     i1l965:	
 12556  187F  3001               	movlw	1
 12557  1880                     u667_25:	
 12558  1880  35F2               	lslf	i1___wmul@multiplicand,f
 12559  1881  0DF3               	rlf	i1___wmul@multiplicand+1,f
 12560  1882  0B89               	decfsz	9,f
 12561  1883  2880               	goto	u667_25
 12562  1884  3001               	movlw	1
 12563  1885                     u668_25:	
 12564  1885  36F1               	lsrf	i1___wmul@multiplier+1,f
 12565  1886  0CF0               	rrf	i1___wmul@multiplier,f
 12566  1887  0B89               	decfsz	9,f
 12567  1888  2885               	goto	u668_25
 12568  1889  0870               	movf	i1___wmul@multiplier,w
 12569  188A  0471               	iorwf	i1___wmul@multiplier+1,w
 12570  188B  1D03               	btfss	3,2
 12571  188C  2879               	goto	i1l4863
 12572  188D  0875               	movf	i1___wmul@product+1,w
 12573  188E  00F1               	movwf	?i1___wmul+1
 12574  188F  0874               	movf	i1___wmul@product,w
 12575  1890  00F0               	movwf	?i1___wmul
 12576  1891  0008               	return
 12577  1892                     __end_ofi1___wmul:	
 12578                           
 12579                           	psect	text38
 12580  27DA                     __ptext38:	
 12581 ;; *************** function i1___lwtoft *****************
 12582 ;; Defined at:
 12583 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 12584 ;; Parameters:    Size  Location     Type
 12585 ;;  c               2    8[COMMON] unsigned int 
 12586 ;; Auto vars:     Size  Location     Type
 12587 ;;		None
 12588 ;; Return value:  Size  Location     Type
 12589 ;;                  3    8[COMMON] float 
 12590 ;; Registers used:
 12591 ;;		wreg, status,2, status,0, pclath, cstack
 12592 ;; Tracked objects:
 12593 ;;		On entry : 0/0
 12594 ;;		On exit  : 0/0
 12595 ;;		Unchanged: 0/0
 12596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12597 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12600 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12601 ;;Total ram usage:        4 bytes
 12602 ;; Hardware stack levels used:    1
 12603 ;; Hardware stack levels required when called:    1
 12604 ;; This function calls:
 12605 ;;		i1___ftpack
 12606 ;; This function is called by:
 12607 ;;		_ISR_Function
 12608 ;; This function uses a non-reentrant model
 12609 ;;
 12610                           
 12611                           
 12612                           ;psect for function i1___lwtoft
 12613  27DA                     i1___lwtoft:	
 12614                           
 12615                           ;incstack = 0
 12616                           ; Regs used in i1___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 12617  27DA  0878               	movf	i1___lwtoft@c,w
 12618  27DB  00F0               	movwf	i1___ftpack@arg
 12619  27DC  0879               	movf	i1___lwtoft@c+1,w
 12620  27DD  00F1               	movwf	i1___ftpack@arg+1
 12621  27DE  01F2               	clrf	i1___ftpack@arg+2
 12622  27DF  308E               	movlw	142
 12623  27E0  00FB               	movwf	??i1___lwtoft
 12624  27E1  087B               	movf	??i1___lwtoft,w
 12625  27E2  00F3               	movwf	i1___ftpack@exp
 12626  27E3  01F4               	clrf	i1___ftpack@sign
 12627  27E4  319B  238D         	fcall	i1___ftpack
 12628  27E6  0870               	movf	?i1___ftpack,w
 12629  27E7  00F8               	movwf	?i1___lwtoft
 12630  27E8  0871               	movf	?i1___ftpack+1,w
 12631  27E9  00F9               	movwf	?i1___lwtoft+1
 12632  27EA  0872               	movf	?i1___ftpack+2,w
 12633  27EB  00FA               	movwf	?i1___lwtoft+2
 12634  27EC  0008               	return
 12635  27ED                     __end_ofi1___lwtoft:	
 12636                           
 12637                           	psect	text39
 12638  1E49                     __ptext39:	
 12639 ;; *************** function i1___fttol *****************
 12640 ;; Defined at:
 12641 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 12642 ;; Parameters:    Size  Location     Type
 12643 ;;  f1              3   29[BANK0 ] float 
 12644 ;; Auto vars:     Size  Location     Type
 12645 ;;  __fttol         4   38[BANK0 ] unsigned long 
 12646 ;;  __fttol         1   42[BANK0 ] unsigned char 
 12647 ;;  __fttol         1   37[BANK0 ] unsigned char 
 12648 ;; Return value:  Size  Location     Type
 12649 ;;                  4   29[BANK0 ] long 
 12650 ;; Registers used:
 12651 ;;		wreg, status,2, status,0
 12652 ;; Tracked objects:
 12653 ;;		On entry : 0/0
 12654 ;;		On exit  : 0/0
 12655 ;;		Unchanged: 0/0
 12656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12657 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12658 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12659 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12660 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12661 ;;Total ram usage:       14 bytes
 12662 ;; Hardware stack levels used:    1
 12663 ;; This function calls:
 12664 ;;		Nothing
 12665 ;; This function is called by:
 12666 ;;		_ISR_Function
 12667 ;; This function uses a non-reentrant model
 12668 ;;
 12669                           
 12670                           
 12671                           ;psect for function i1___fttol
 12672  1E49                     i1___fttol:	
 12673                           
 12674                           ;incstack = 0
 12675                           ; Regs used in i1___fttol: [wreg+status,2+status,0]
 12676  1E49  0020               	movlb	0	; select bank0
 12677  1E4A  083D               	movf	i1___fttol@f1,w
 12678  1E4B  00C1               	movwf	??i1___fttol
 12679  1E4C  083E               	movf	i1___fttol@f1+1,w
 12680  1E4D  00C2               	movwf	??i1___fttol+1
 12681  1E4E  083F               	movf	i1___fttol@f1+2,w
 12682  1E4F  00C3               	movwf	??i1___fttol+2
 12683  1E50  1003               	clrc
 12684  1E51  0D42               	rlf	??i1___fttol+1,w
 12685  1E52  0D43               	rlf	??i1___fttol+2,w
 12686  1E53  00C4               	movwf	??i1___fttol+3
 12687  1E54  0844               	movf	??i1___fttol+3,w
 12688  1E55  00CA               	movwf	i1___fttol@exp1
 12689  1E56  084A               	movf	i1___fttol@exp1,w
 12690  1E57  1D03               	btfss	3,2
 12691  1E58  2E62               	goto	i1l5083
 12692  1E59  3000               	movlw	0
 12693  1E5A  00C0               	movwf	?i1___fttol+3
 12694  1E5B  3000               	movlw	0
 12695  1E5C  00BF               	movwf	?i1___fttol+2
 12696  1E5D  3000               	movlw	0
 12697  1E5E  00BE               	movwf	?i1___fttol+1
 12698  1E5F  3000               	movlw	0
 12699  1E60  00BD               	movwf	?i1___fttol
 12700  1E61  0008               	return
 12701  1E62                     i1l5083:	
 12702  1E62  083D               	movf	i1___fttol@f1,w
 12703  1E63  00C1               	movwf	??i1___fttol
 12704  1E64  083E               	movf	i1___fttol@f1+1,w
 12705  1E65  00C2               	movwf	??i1___fttol+1
 12706  1E66  083F               	movf	i1___fttol@f1+2,w
 12707  1E67  00C3               	movwf	??i1___fttol+2
 12708  1E68  3017               	movlw	23
 12709  1E69                     u724_25:	
 12710  1E69  36C3               	lsrf	??i1___fttol+2,f
 12711  1E6A  0CC2               	rrf	??i1___fttol+1,f
 12712  1E6B  0CC1               	rrf	??i1___fttol,f
 12713  1E6C  0B89               	decfsz	9,f
 12714  1E6D  2E69               	goto	u724_25
 12715  1E6E  0841               	movf	??i1___fttol,w
 12716  1E6F  00C4               	movwf	??i1___fttol+3
 12717  1E70  0844               	movf	??i1___fttol+3,w
 12718  1E71  00C5               	movwf	i1___fttol@sign1
 12719  1E72  17BE               	bsf	i1___fttol@f1+1,7
 12720  1E73  30FF               	movlw	255
 12721  1E74  05BD               	andwf	i1___fttol@f1,f
 12722  1E75  30FF               	movlw	255
 12723  1E76  05BE               	andwf	i1___fttol@f1+1,f
 12724  1E77  3000               	movlw	0
 12725  1E78  05BF               	andwf	i1___fttol@f1+2,f
 12726  1E79  083D               	movf	i1___fttol@f1,w
 12727  1E7A  00C6               	movwf	i1___fttol@lval
 12728  1E7B  083E               	movf	i1___fttol@f1+1,w
 12729  1E7C  00C7               	movwf	i1___fttol@lval+1
 12730  1E7D  083F               	movf	i1___fttol@f1+2,w
 12731  1E7E  00C8               	movwf	i1___fttol@lval+2
 12732  1E7F  01C9               	clrf	i1___fttol@lval+3
 12733  1E80  308E               	movlw	142
 12734  1E81  02CA               	subwf	i1___fttol@exp1,f
 12735  1E82  1FCA               	btfss	i1___fttol@exp1,7
 12736  1E83  2EA0               	goto	i1l5103
 12737  1E84  084A               	movf	i1___fttol@exp1,w
 12738  1E85  3A80               	xorlw	128
 12739  1E86  3E8F               	addlw	143
 12740  1E87  1803               	skipnc
 12741  1E88  2E92               	goto	i1l5101
 12742  1E89  3000               	movlw	0
 12743  1E8A  00C0               	movwf	?i1___fttol+3
 12744  1E8B  3000               	movlw	0
 12745  1E8C  00BF               	movwf	?i1___fttol+2
 12746  1E8D  3000               	movlw	0
 12747  1E8E  00BE               	movwf	?i1___fttol+1
 12748  1E8F  3000               	movlw	0
 12749  1E90  00BD               	movwf	?i1___fttol
 12750  1E91  0008               	return
 12751  1E92                     i1l5101:	
 12752  1E92  3001               	movlw	1
 12753  1E93                     u727_25:	
 12754  1E93  36C9               	lsrf	i1___fttol@lval+3,f
 12755  1E94  0CC8               	rrf	i1___fttol@lval+2,f
 12756  1E95  0CC7               	rrf	i1___fttol@lval+1,f
 12757  1E96  0CC6               	rrf	i1___fttol@lval,f
 12758  1E97  0B89               	decfsz	9,f
 12759  1E98  2E93               	goto	u727_25
 12760  1E99  3001               	movlw	1
 12761  1E9A  00C1               	movwf	??i1___fttol
 12762  1E9B  0841               	movf	??i1___fttol,w
 12763  1E9C  07CA               	addwf	i1___fttol@exp1,f
 12764  1E9D  1903               	btfsc	3,2
 12765  1E9E  2EB9               	goto	i1l5111
 12766  1E9F  2E92               	goto	i1l5101
 12767  1EA0                     i1l5103:	
 12768  1EA0  3018               	movlw	24
 12769  1EA1  024A               	subwf	i1___fttol@exp1,w
 12770  1EA2  1C03               	skipc
 12771  1EA3  2EB6               	goto	i1l1217
 12772  1EA4  3000               	movlw	0
 12773  1EA5  00C0               	movwf	?i1___fttol+3
 12774  1EA6  3000               	movlw	0
 12775  1EA7  00BF               	movwf	?i1___fttol+2
 12776  1EA8  3000               	movlw	0
 12777  1EA9  00BE               	movwf	?i1___fttol+1
 12778  1EAA  3000               	movlw	0
 12779  1EAB  00BD               	movwf	?i1___fttol
 12780  1EAC  0008               	return
 12781  1EAD                     i1l5109:	
 12782  1EAD  3001               	movlw	1
 12783  1EAE                     u730_25:	
 12784  1EAE  35C6               	lslf	i1___fttol@lval,f
 12785  1EAF  0DC7               	rlf	i1___fttol@lval+1,f
 12786  1EB0  0DC8               	rlf	i1___fttol@lval+2,f
 12787  1EB1  0DC9               	rlf	i1___fttol@lval+3,f
 12788  1EB2  0B89               	decfsz	9,f
 12789  1EB3  2EAE               	goto	u730_25
 12790  1EB4  3001               	movlw	1
 12791  1EB5  02CA               	subwf	i1___fttol@exp1,f
 12792  1EB6                     i1l1217:	
 12793  1EB6  084A               	movf	i1___fttol@exp1,w
 12794  1EB7  1D03               	btfss	3,2
 12795  1EB8  2EAD               	goto	i1l5109
 12796  1EB9                     i1l5111:	
 12797  1EB9  0845               	movf	i1___fttol@sign1,w
 12798  1EBA  1903               	btfsc	3,2
 12799  1EBB  2EC7               	goto	i1l5115
 12800  1EBC  09C6               	comf	i1___fttol@lval,f
 12801  1EBD  09C7               	comf	i1___fttol@lval+1,f
 12802  1EBE  09C8               	comf	i1___fttol@lval+2,f
 12803  1EBF  09C9               	comf	i1___fttol@lval+3,f
 12804  1EC0  0AC6               	incf	i1___fttol@lval,f
 12805  1EC1  1903               	skipnz
 12806  1EC2  0AC7               	incf	i1___fttol@lval+1,f
 12807  1EC3  1903               	skipnz
 12808  1EC4  0AC8               	incf	i1___fttol@lval+2,f
 12809  1EC5  1903               	skipnz
 12810  1EC6  0AC9               	incf	i1___fttol@lval+3,f
 12811  1EC7                     i1l5115:	
 12812  1EC7  0849               	movf	i1___fttol@lval+3,w
 12813  1EC8  00C0               	movwf	?i1___fttol+3
 12814  1EC9  0848               	movf	i1___fttol@lval+2,w
 12815  1ECA  00BF               	movwf	?i1___fttol+2
 12816  1ECB  0847               	movf	i1___fttol@lval+1,w
 12817  1ECC  00BE               	movwf	?i1___fttol+1
 12818  1ECD  0846               	movf	i1___fttol@lval,w
 12819  1ECE  00BD               	movwf	?i1___fttol
 12820  1ECF  0008               	return
 12821  1ED0                     __end_ofi1___fttol:	
 12822                           
 12823                           	psect	text40
 12824  10B5                     __ptext40:	
 12825 ;; *************** function i1___ftmul *****************
 12826 ;; Defined at:
 12827 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 12828 ;; Parameters:    Size  Location     Type
 12829 ;;  f1              3    0[BANK0 ] float 
 12830 ;;  f2              3    3[BANK0 ] float 
 12831 ;; Auto vars:     Size  Location     Type
 12832 ;;  __ftmul         3   11[BANK0 ] unsigned um
 12833 ;;  __ftmul         1   15[BANK0 ] unsigned char 
 12834 ;;  __ftmul         1   14[BANK0 ] unsigned char 
 12835 ;;  __ftmul         1   10[BANK0 ] unsigned char 
 12836 ;; Return value:  Size  Location     Type
 12837 ;;                  3    0[BANK0 ] float 
 12838 ;; Registers used:
 12839 ;;		wreg, status,2, status,0, pclath, cstack
 12840 ;; Tracked objects:
 12841 ;;		On entry : 0/0
 12842 ;;		On exit  : 0/0
 12843 ;;		Unchanged: 0/0
 12844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12845 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12846 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12847 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12848 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12849 ;;Total ram usage:       16 bytes
 12850 ;; Hardware stack levels used:    1
 12851 ;; Hardware stack levels required when called:    1
 12852 ;; This function calls:
 12853 ;;		i1___ftpack
 12854 ;; This function is called by:
 12855 ;;		_ISR_Function
 12856 ;; This function uses a non-reentrant model
 12857 ;;
 12858                           
 12859                           
 12860                           ;psect for function i1___ftmul
 12861  10B5                     i1___ftmul:	
 12862                           
 12863                           ;incstack = 0
 12864                           ; Regs used in i1___ftmul: [wreg+status,2+status,0+pclath+cstack]
 12865  10B5  0020               	movlb	0	; select bank0
 12866  10B6  0820               	movf	i1___ftmul@f1,w
 12867  10B7  00A6               	movwf	??i1___ftmul
 12868  10B8  0821               	movf	i1___ftmul@f1+1,w
 12869  10B9  00A7               	movwf	??i1___ftmul+1
 12870  10BA  0822               	movf	i1___ftmul@f1+2,w
 12871  10BB  00A8               	movwf	??i1___ftmul+2
 12872  10BC  1003               	clrc
 12873  10BD  0D27               	rlf	??i1___ftmul+1,w
 12874  10BE  0D28               	rlf	??i1___ftmul+2,w
 12875  10BF  00A9               	movwf	??i1___ftmul+3
 12876  10C0  0829               	movf	??i1___ftmul+3,w
 12877  10C1  00AA               	movwf	i1___ftmul@exp
 12878  10C2  082A               	movf	i1___ftmul@exp,w
 12879  10C3  1D03               	btfss	3,2
 12880  10C4  28CC               	goto	i1l5033
 12881  10C5  3000               	movlw	0
 12882  10C6  00A0               	movwf	?i1___ftmul
 12883  10C7  3000               	movlw	0
 12884  10C8  00A1               	movwf	?i1___ftmul+1
 12885  10C9  3000               	movlw	0
 12886  10CA  00A2               	movwf	?i1___ftmul+2
 12887  10CB  0008               	return
 12888  10CC                     i1l5033:	
 12889  10CC  0823               	movf	i1___ftmul@f2,w
 12890  10CD  00A6               	movwf	??i1___ftmul
 12891  10CE  0824               	movf	i1___ftmul@f2+1,w
 12892  10CF  00A7               	movwf	??i1___ftmul+1
 12893  10D0  0825               	movf	i1___ftmul@f2+2,w
 12894  10D1  00A8               	movwf	??i1___ftmul+2
 12895  10D2  1003               	clrc
 12896  10D3  0D27               	rlf	??i1___ftmul+1,w
 12897  10D4  0D28               	rlf	??i1___ftmul+2,w
 12898  10D5  00A9               	movwf	??i1___ftmul+3
 12899  10D6  0829               	movf	??i1___ftmul+3,w
 12900  10D7  00AF               	movwf	i1___ftmul@sign
 12901  10D8  082F               	movf	i1___ftmul@sign,w
 12902  10D9  1D03               	btfss	3,2
 12903  10DA  28E2               	goto	i1l5039
 12904  10DB  3000               	movlw	0
 12905  10DC  00A0               	movwf	?i1___ftmul
 12906  10DD  3000               	movlw	0
 12907  10DE  00A1               	movwf	?i1___ftmul+1
 12908  10DF  3000               	movlw	0
 12909  10E0  00A2               	movwf	?i1___ftmul+2
 12910  10E1  0008               	return
 12911  10E2                     i1l5039:	
 12912  10E2  082F               	movf	i1___ftmul@sign,w
 12913  10E3  3E7B               	addlw	123
 12914  10E4  00A6               	movwf	??i1___ftmul
 12915  10E5  0826               	movf	??i1___ftmul,w
 12916  10E6  07AA               	addwf	i1___ftmul@exp,f
 12917  10E7  0820               	movf	i1___ftmul@f1,w
 12918  10E8  00A6               	movwf	??i1___ftmul
 12919  10E9  0821               	movf	i1___ftmul@f1+1,w
 12920  10EA  00A7               	movwf	??i1___ftmul+1
 12921  10EB  0822               	movf	i1___ftmul@f1+2,w
 12922  10EC  00A8               	movwf	??i1___ftmul+2
 12923  10ED  3010               	movlw	16
 12924  10EE                     u713_25:	
 12925  10EE  36A8               	lsrf	??i1___ftmul+2,f
 12926  10EF  0CA7               	rrf	??i1___ftmul+1,f
 12927  10F0  0CA6               	rrf	??i1___ftmul,f
 12928  10F1  0B89               	decfsz	9,f
 12929  10F2  28EE               	goto	u713_25
 12930  10F3  0826               	movf	??i1___ftmul,w
 12931  10F4  00A9               	movwf	??i1___ftmul+3
 12932  10F5  0829               	movf	??i1___ftmul+3,w
 12933  10F6  00AF               	movwf	i1___ftmul@sign
 12934  10F7  0823               	movf	i1___ftmul@f2,w
 12935  10F8  00A6               	movwf	??i1___ftmul
 12936  10F9  0824               	movf	i1___ftmul@f2+1,w
 12937  10FA  00A7               	movwf	??i1___ftmul+1
 12938  10FB  0825               	movf	i1___ftmul@f2+2,w
 12939  10FC  00A8               	movwf	??i1___ftmul+2
 12940  10FD  3010               	movlw	16
 12941  10FE                     u714_25:	
 12942  10FE  36A8               	lsrf	??i1___ftmul+2,f
 12943  10FF  0CA7               	rrf	??i1___ftmul+1,f
 12944  1100  0CA6               	rrf	??i1___ftmul,f
 12945  1101  0B89               	decfsz	9,f
 12946  1102  28FE               	goto	u714_25
 12947  1103  0826               	movf	??i1___ftmul,w
 12948  1104  00A9               	movwf	??i1___ftmul+3
 12949  1105  0829               	movf	??i1___ftmul+3,w
 12950  1106  06AF               	xorwf	i1___ftmul@sign,f
 12951  1107  3080               	movlw	128
 12952  1108  00A6               	movwf	??i1___ftmul
 12953  1109  0826               	movf	??i1___ftmul,w
 12954  110A  05AF               	andwf	i1___ftmul@sign,f
 12955  110B  17A1               	bsf	i1___ftmul@f1+1,7
 12956  110C  17A4               	bsf	i1___ftmul@f2+1,7
 12957  110D  30FF               	movlw	255
 12958  110E  05A3               	andwf	i1___ftmul@f2,f
 12959  110F  30FF               	movlw	255
 12960  1110  05A4               	andwf	i1___ftmul@f2+1,f
 12961  1111  3000               	movlw	0
 12962  1112  05A5               	andwf	i1___ftmul@f2+2,f
 12963  1113  3000               	movlw	0
 12964  1114  00AB               	movwf	i1___ftmul@f3_as_product
 12965  1115  3000               	movlw	0
 12966  1116  00AC               	movwf	i1___ftmul@f3_as_product+1
 12967  1117  3000               	movlw	0
 12968  1118  00AD               	movwf	i1___ftmul@f3_as_product+2
 12969  1119  3007               	movlw	7
 12970  111A  00A6               	movwf	??i1___ftmul
 12971  111B  0826               	movf	??i1___ftmul,w
 12972  111C  00AE               	movwf	i1___ftmul@cntr
 12973  111D                     i1l5051:	
 12974  111D  1C20               	btfss	i1___ftmul@f1,0
 12975  111E  2925               	goto	i1l5055
 12976  111F  0823               	movf	i1___ftmul@f2,w
 12977  1120  07AB               	addwf	i1___ftmul@f3_as_product,f
 12978  1121  0824               	movf	i1___ftmul@f2+1,w
 12979  1122  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12980  1123  0825               	movf	i1___ftmul@f2+2,w
 12981  1124  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12982  1125                     i1l5055:	
 12983  1125  3001               	movlw	1
 12984  1126                     u716_25:	
 12985  1126  36A2               	lsrf	i1___ftmul@f1+2,f
 12986  1127  0CA1               	rrf	i1___ftmul@f1+1,f
 12987  1128  0CA0               	rrf	i1___ftmul@f1,f
 12988  1129  0B89               	decfsz	9,f
 12989  112A  2926               	goto	u716_25
 12990  112B  3001               	movlw	1
 12991  112C                     u717_25:	
 12992  112C  35A3               	lslf	i1___ftmul@f2,f
 12993  112D  0DA4               	rlf	i1___ftmul@f2+1,f
 12994  112E  0DA5               	rlf	i1___ftmul@f2+2,f
 12995  112F  0B89               	decfsz	9,f
 12996  1130  292C               	goto	u717_25
 12997  1131  3001               	movlw	1
 12998  1132  02AE               	subwf	i1___ftmul@cntr,f
 12999  1133  1D03               	btfss	3,2
 13000  1134  291D               	goto	i1l5051
 13001  1135  3009               	movlw	9
 13002  1136  00A6               	movwf	??i1___ftmul
 13003  1137  0826               	movf	??i1___ftmul,w
 13004  1138  00AE               	movwf	i1___ftmul@cntr
 13005  1139                     i1l5063:	
 13006  1139  1C20               	btfss	i1___ftmul@f1,0
 13007  113A  2941               	goto	i1l5067
 13008  113B  0823               	movf	i1___ftmul@f2,w
 13009  113C  07AB               	addwf	i1___ftmul@f3_as_product,f
 13010  113D  0824               	movf	i1___ftmul@f2+1,w
 13011  113E  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 13012  113F  0825               	movf	i1___ftmul@f2+2,w
 13013  1140  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 13014  1141                     i1l5067:	
 13015  1141  3001               	movlw	1
 13016  1142                     u720_25:	
 13017  1142  36A2               	lsrf	i1___ftmul@f1+2,f
 13018  1143  0CA1               	rrf	i1___ftmul@f1+1,f
 13019  1144  0CA0               	rrf	i1___ftmul@f1,f
 13020  1145  0B89               	decfsz	9,f
 13021  1146  2942               	goto	u720_25
 13022  1147  3001               	movlw	1
 13023  1148                     u721_25:	
 13024  1148  36AD               	lsrf	i1___ftmul@f3_as_product+2,f
 13025  1149  0CAC               	rrf	i1___ftmul@f3_as_product+1,f
 13026  114A  0CAB               	rrf	i1___ftmul@f3_as_product,f
 13027  114B  0B89               	decfsz	9,f
 13028  114C  2948               	goto	u721_25
 13029  114D  3001               	movlw	1
 13030  114E  02AE               	subwf	i1___ftmul@cntr,f
 13031  114F  1D03               	btfss	3,2
 13032  1150  2939               	goto	i1l5063
 13033  1151  082B               	movf	i1___ftmul@f3_as_product,w
 13034  1152  00F0               	movwf	i1___ftpack@arg
 13035  1153  082C               	movf	i1___ftmul@f3_as_product+1,w
 13036  1154  00F1               	movwf	i1___ftpack@arg+1
 13037  1155  082D               	movf	i1___ftmul@f3_as_product+2,w
 13038  1156  00F2               	movwf	i1___ftpack@arg+2
 13039  1157  082A               	movf	i1___ftmul@exp,w
 13040  1158  00A6               	movwf	??i1___ftmul
 13041  1159  0826               	movf	??i1___ftmul,w
 13042  115A  00F3               	movwf	i1___ftpack@exp
 13043  115B  082F               	movf	i1___ftmul@sign,w
 13044  115C  00A7               	movwf	??i1___ftmul+1
 13045  115D  0827               	movf	??i1___ftmul+1,w
 13046  115E  00F4               	movwf	i1___ftpack@sign
 13047  115F  319B  238D         	fcall	i1___ftpack
 13048  1161  0870               	movf	?i1___ftpack,w
 13049  1162  0020               	movlb	0	; select bank0
 13050  1163  00A0               	movwf	?i1___ftmul
 13051  1164  0871               	movf	?i1___ftpack+1,w
 13052  1165  00A1               	movwf	?i1___ftmul+1
 13053  1166  0872               	movf	?i1___ftpack+2,w
 13054  1167  00A2               	movwf	?i1___ftmul+2
 13055  1168  0008               	return
 13056  1169                     __end_ofi1___ftmul:	
 13057                           
 13058                           	psect	text41
 13059  1F57                     __ptext41:	
 13060 ;; *************** function i1___ftdiv *****************
 13061 ;; Defined at:
 13062 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 13063 ;; Parameters:    Size  Location     Type
 13064 ;;  f2              3    0[BANK0 ] float 
 13065 ;;  f1              3    3[BANK0 ] float 
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;  __ftdiv         3   11[BANK0 ] float 
 13068 ;;  __ftdiv         1   15[BANK0 ] unsigned char 
 13069 ;;  __ftdiv         1   14[BANK0 ] unsigned char 
 13070 ;;  __ftdiv         1   10[BANK0 ] unsigned char 
 13071 ;; Return value:  Size  Location     Type
 13072 ;;                  3    0[BANK0 ] float 
 13073 ;; Registers used:
 13074 ;;		wreg, status,2, status,0, pclath, cstack
 13075 ;; Tracked objects:
 13076 ;;		On entry : 0/0
 13077 ;;		On exit  : 0/0
 13078 ;;		Unchanged: 0/0
 13079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13080 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13081 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13082 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13083 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13084 ;;Total ram usage:       16 bytes
 13085 ;; Hardware stack levels used:    1
 13086 ;; Hardware stack levels required when called:    1
 13087 ;; This function calls:
 13088 ;;		i1___ftpack
 13089 ;; This function is called by:
 13090 ;;		_ISR_Function
 13091 ;; This function uses a non-reentrant model
 13092 ;;
 13093                           
 13094                           
 13095                           ;psect for function i1___ftdiv
 13096  1F57                     i1___ftdiv:	
 13097                           
 13098                           ;incstack = 0
 13099                           ; Regs used in i1___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 13100  1F57  0020               	movlb	0	; select bank0
 13101  1F58  0823               	movf	i1___ftdiv@f1,w
 13102  1F59  00A6               	movwf	??i1___ftdiv
 13103  1F5A  0824               	movf	i1___ftdiv@f1+1,w
 13104  1F5B  00A7               	movwf	??i1___ftdiv+1
 13105  1F5C  0825               	movf	i1___ftdiv@f1+2,w
 13106  1F5D  00A8               	movwf	??i1___ftdiv+2
 13107  1F5E  1003               	clrc
 13108  1F5F  0D27               	rlf	??i1___ftdiv+1,w
 13109  1F60  0D28               	rlf	??i1___ftdiv+2,w
 13110  1F61  00A9               	movwf	??i1___ftdiv+3
 13111  1F62  0829               	movf	??i1___ftdiv+3,w
 13112  1F63  00AE               	movwf	i1___ftdiv@exp
 13113  1F64  082E               	movf	i1___ftdiv@exp,w
 13114  1F65  1D03               	btfss	3,2
 13115  1F66  2F6E               	goto	i1l4991
 13116  1F67  3000               	movlw	0
 13117  1F68  00A0               	movwf	?i1___ftdiv
 13118  1F69  3000               	movlw	0
 13119  1F6A  00A1               	movwf	?i1___ftdiv+1
 13120  1F6B  3000               	movlw	0
 13121  1F6C  00A2               	movwf	?i1___ftdiv+2
 13122  1F6D  0008               	return
 13123  1F6E                     i1l4991:	
 13124  1F6E  0820               	movf	i1___ftdiv@f2,w
 13125  1F6F  00A6               	movwf	??i1___ftdiv
 13126  1F70  0821               	movf	i1___ftdiv@f2+1,w
 13127  1F71  00A7               	movwf	??i1___ftdiv+1
 13128  1F72  0822               	movf	i1___ftdiv@f2+2,w
 13129  1F73  00A8               	movwf	??i1___ftdiv+2
 13130  1F74  1003               	clrc
 13131  1F75  0D27               	rlf	??i1___ftdiv+1,w
 13132  1F76  0D28               	rlf	??i1___ftdiv+2,w
 13133  1F77  00A9               	movwf	??i1___ftdiv+3
 13134  1F78  0829               	movf	??i1___ftdiv+3,w
 13135  1F79  00AF               	movwf	i1___ftdiv@sign
 13136  1F7A  082F               	movf	i1___ftdiv@sign,w
 13137  1F7B  1D03               	btfss	3,2
 13138  1F7C  2F84               	goto	i1l4997
 13139  1F7D  3000               	movlw	0
 13140  1F7E  00A0               	movwf	?i1___ftdiv
 13141  1F7F  3000               	movlw	0
 13142  1F80  00A1               	movwf	?i1___ftdiv+1
 13143  1F81  3000               	movlw	0
 13144  1F82  00A2               	movwf	?i1___ftdiv+2
 13145  1F83  0008               	return
 13146  1F84                     i1l4997:	
 13147  1F84  3000               	movlw	0
 13148  1F85  00AB               	movwf	i1___ftdiv@f3
 13149  1F86  3000               	movlw	0
 13150  1F87  00AC               	movwf	i1___ftdiv@f3+1
 13151  1F88  3000               	movlw	0
 13152  1F89  00AD               	movwf	i1___ftdiv@f3+2
 13153  1F8A  3089               	movlw	137
 13154  1F8B  072F               	addwf	i1___ftdiv@sign,w
 13155  1F8C  00A6               	movwf	??i1___ftdiv
 13156  1F8D  0826               	movf	??i1___ftdiv,w
 13157  1F8E  02AE               	subwf	i1___ftdiv@exp,f
 13158  1F8F  0823               	movf	i1___ftdiv@f1,w
 13159  1F90  00A6               	movwf	??i1___ftdiv
 13160  1F91  0824               	movf	i1___ftdiv@f1+1,w
 13161  1F92  00A7               	movwf	??i1___ftdiv+1
 13162  1F93  0825               	movf	i1___ftdiv@f1+2,w
 13163  1F94  00A8               	movwf	??i1___ftdiv+2
 13164  1F95  3010               	movlw	16
 13165  1F96                     u705_25:	
 13166  1F96  36A8               	lsrf	??i1___ftdiv+2,f
 13167  1F97  0CA7               	rrf	??i1___ftdiv+1,f
 13168  1F98  0CA6               	rrf	??i1___ftdiv,f
 13169  1F99  0B89               	decfsz	9,f
 13170  1F9A  2F96               	goto	u705_25
 13171  1F9B  0826               	movf	??i1___ftdiv,w
 13172  1F9C  00A9               	movwf	??i1___ftdiv+3
 13173  1F9D  0829               	movf	??i1___ftdiv+3,w
 13174  1F9E  00AF               	movwf	i1___ftdiv@sign
 13175  1F9F  0820               	movf	i1___ftdiv@f2,w
 13176  1FA0  00A6               	movwf	??i1___ftdiv
 13177  1FA1  0821               	movf	i1___ftdiv@f2+1,w
 13178  1FA2  00A7               	movwf	??i1___ftdiv+1
 13179  1FA3  0822               	movf	i1___ftdiv@f2+2,w
 13180  1FA4  00A8               	movwf	??i1___ftdiv+2
 13181  1FA5  3010               	movlw	16
 13182  1FA6                     u706_25:	
 13183  1FA6  36A8               	lsrf	??i1___ftdiv+2,f
 13184  1FA7  0CA7               	rrf	??i1___ftdiv+1,f
 13185  1FA8  0CA6               	rrf	??i1___ftdiv,f
 13186  1FA9  0B89               	decfsz	9,f
 13187  1FAA  2FA6               	goto	u706_25
 13188  1FAB  0826               	movf	??i1___ftdiv,w
 13189  1FAC  00A9               	movwf	??i1___ftdiv+3
 13190  1FAD  0829               	movf	??i1___ftdiv+3,w
 13191  1FAE  06AF               	xorwf	i1___ftdiv@sign,f
 13192  1FAF  3080               	movlw	128
 13193  1FB0  00A6               	movwf	??i1___ftdiv
 13194  1FB1  0826               	movf	??i1___ftdiv,w
 13195  1FB2  05AF               	andwf	i1___ftdiv@sign,f
 13196  1FB3  17A4               	bsf	i1___ftdiv@f1+1,7
 13197  1FB4  30FF               	movlw	255
 13198  1FB5  05A3               	andwf	i1___ftdiv@f1,f
 13199  1FB6  30FF               	movlw	255
 13200  1FB7  05A4               	andwf	i1___ftdiv@f1+1,f
 13201  1FB8  3000               	movlw	0
 13202  1FB9  05A5               	andwf	i1___ftdiv@f1+2,f
 13203  1FBA  17A1               	bsf	i1___ftdiv@f2+1,7
 13204  1FBB  30FF               	movlw	255
 13205  1FBC  05A0               	andwf	i1___ftdiv@f2,f
 13206  1FBD  30FF               	movlw	255
 13207  1FBE  05A1               	andwf	i1___ftdiv@f2+1,f
 13208  1FBF  3000               	movlw	0
 13209  1FC0  05A2               	andwf	i1___ftdiv@f2+2,f
 13210  1FC1  3018               	movlw	24
 13211  1FC2  00A6               	movwf	??i1___ftdiv
 13212  1FC3  0826               	movf	??i1___ftdiv,w
 13213  1FC4  00AA               	movwf	i1___ftdiv@cntr
 13214  1FC5                     i1l5011:	
 13215  1FC5  3001               	movlw	1
 13216  1FC6                     u707_25:	
 13217  1FC6  35AB               	lslf	i1___ftdiv@f3,f
 13218  1FC7  0DAC               	rlf	i1___ftdiv@f3+1,f
 13219  1FC8  0DAD               	rlf	i1___ftdiv@f3+2,f
 13220  1FC9  0B89               	decfsz	9,f
 13221  1FCA  2FC6               	goto	u707_25
 13222  1FCB  0822               	movf	i1___ftdiv@f2+2,w
 13223  1FCC  0225               	subwf	i1___ftdiv@f1+2,w
 13224  1FCD  1D03               	skipz
 13225  1FCE  2FD5               	goto	u708_25
 13226  1FCF  0821               	movf	i1___ftdiv@f2+1,w
 13227  1FD0  0224               	subwf	i1___ftdiv@f1+1,w
 13228  1FD1  1D03               	skipz
 13229  1FD2  2FD5               	goto	u708_25
 13230  1FD3  0820               	movf	i1___ftdiv@f2,w
 13231  1FD4  0223               	subwf	i1___ftdiv@f1,w
 13232  1FD5                     u708_25:	
 13233  1FD5  1C03               	skipc
 13234  1FD6  2FDE               	goto	i1l5019
 13235  1FD7  0820               	movf	i1___ftdiv@f2,w
 13236  1FD8  02A3               	subwf	i1___ftdiv@f1,f
 13237  1FD9  0821               	movf	i1___ftdiv@f2+1,w
 13238  1FDA  3BA4               	subwfb	i1___ftdiv@f1+1,f
 13239  1FDB  0822               	movf	i1___ftdiv@f2+2,w
 13240  1FDC  3BA5               	subwfb	i1___ftdiv@f1+2,f
 13241  1FDD  142B               	bsf	i1___ftdiv@f3,0
 13242  1FDE                     i1l5019:	
 13243  1FDE  3001               	movlw	1
 13244  1FDF                     u709_25:	
 13245  1FDF  35A3               	lslf	i1___ftdiv@f1,f
 13246  1FE0  0DA4               	rlf	i1___ftdiv@f1+1,f
 13247  1FE1  0DA5               	rlf	i1___ftdiv@f1+2,f
 13248  1FE2  0B89               	decfsz	9,f
 13249  1FE3  2FDF               	goto	u709_25
 13250  1FE4  3001               	movlw	1
 13251  1FE5  02AA               	subwf	i1___ftdiv@cntr,f
 13252  1FE6  1D03               	btfss	3,2
 13253  1FE7  2FC5               	goto	i1l5011
 13254  1FE8  082B               	movf	i1___ftdiv@f3,w
 13255  1FE9  00F0               	movwf	i1___ftpack@arg
 13256  1FEA  082C               	movf	i1___ftdiv@f3+1,w
 13257  1FEB  00F1               	movwf	i1___ftpack@arg+1
 13258  1FEC  082D               	movf	i1___ftdiv@f3+2,w
 13259  1FED  00F2               	movwf	i1___ftpack@arg+2
 13260  1FEE  082E               	movf	i1___ftdiv@exp,w
 13261  1FEF  00A6               	movwf	??i1___ftdiv
 13262  1FF0  0826               	movf	??i1___ftdiv,w
 13263  1FF1  00F3               	movwf	i1___ftpack@exp
 13264  1FF2  082F               	movf	i1___ftdiv@sign,w
 13265  1FF3  00A7               	movwf	??i1___ftdiv+1
 13266  1FF4  0827               	movf	??i1___ftdiv+1,w
 13267  1FF5  00F4               	movwf	i1___ftpack@sign
 13268  1FF6  319B  238D         	fcall	i1___ftpack
 13269  1FF8  0870               	movf	?i1___ftpack,w
 13270  1FF9  0020               	movlb	0	; select bank0
 13271  1FFA  00A0               	movwf	?i1___ftdiv
 13272  1FFB  0871               	movf	?i1___ftpack+1,w
 13273  1FFC  00A1               	movwf	?i1___ftdiv+1
 13274  1FFD  0872               	movf	?i1___ftpack+2,w
 13275  1FFE  00A2               	movwf	?i1___ftdiv+2
 13276  1FFF  0008               	return
 13277  2000                     __end_ofi1___ftdiv:	
 13278                           
 13279                           	psect	text42
 13280  1169                     __ptext42:	
 13281 ;; *************** function i1___ftadd *****************
 13282 ;; Defined at:
 13283 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 13284 ;; Parameters:    Size  Location     Type
 13285 ;;  f1              3   16[BANK0 ] float 
 13286 ;;  f2              3   19[BANK0 ] float 
 13287 ;; Auto vars:     Size  Location     Type
 13288 ;;  __ftadd         1   28[BANK0 ] unsigned char 
 13289 ;;  __ftadd         1   27[BANK0 ] unsigned char 
 13290 ;;  __ftadd         1   26[BANK0 ] unsigned char 
 13291 ;; Return value:  Size  Location     Type
 13292 ;;                  3   16[BANK0 ] float 
 13293 ;; Registers used:
 13294 ;;		wreg, status,2, status,0, pclath, cstack
 13295 ;; Tracked objects:
 13296 ;;		On entry : 0/0
 13297 ;;		On exit  : 0/0
 13298 ;;		Unchanged: 0/0
 13299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13300 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13301 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13302 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13303 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13304 ;;Total ram usage:       13 bytes
 13305 ;; Hardware stack levels used:    1
 13306 ;; Hardware stack levels required when called:    1
 13307 ;; This function calls:
 13308 ;;		i1___ftpack
 13309 ;; This function is called by:
 13310 ;;		_ISR_Function
 13311 ;; This function uses a non-reentrant model
 13312 ;;
 13313                           
 13314                           
 13315                           ;psect for function i1___ftadd
 13316  1169                     i1___ftadd:	
 13317                           
 13318                           ;incstack = 0
 13319                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
 13320  1169  0020               	movlb	0	; select bank0
 13321  116A  0830               	movf	i1___ftadd@f1,w
 13322  116B  00B6               	movwf	??i1___ftadd
 13323  116C  0831               	movf	i1___ftadd@f1+1,w
 13324  116D  00B7               	movwf	??i1___ftadd+1
 13325  116E  0832               	movf	i1___ftadd@f1+2,w
 13326  116F  00B8               	movwf	??i1___ftadd+2
 13327  1170  1003               	clrc
 13328  1171  0D37               	rlf	??i1___ftadd+1,w
 13329  1172  0D38               	rlf	??i1___ftadd+2,w
 13330  1173  00B9               	movwf	??i1___ftadd+3
 13331  1174  0839               	movf	??i1___ftadd+3,w
 13332  1175  00BC               	movwf	i1___ftadd@exp1
 13333  1176  0833               	movf	i1___ftadd@f2,w
 13334  1177  00B6               	movwf	??i1___ftadd
 13335  1178  0834               	movf	i1___ftadd@f2+1,w
 13336  1179  00B7               	movwf	??i1___ftadd+1
 13337  117A  0835               	movf	i1___ftadd@f2+2,w
 13338  117B  00B8               	movwf	??i1___ftadd+2
 13339  117C  1003               	clrc
 13340  117D  0D37               	rlf	??i1___ftadd+1,w
 13341  117E  0D38               	rlf	??i1___ftadd+2,w
 13342  117F  00B9               	movwf	??i1___ftadd+3
 13343  1180  0839               	movf	??i1___ftadd+3,w
 13344  1181  00BB               	movwf	i1___ftadd@exp2
 13345  1182  083C               	movf	i1___ftadd@exp1,w
 13346  1183  1903               	btfsc	3,2
 13347  1184  2991               	goto	i1l4921
 13348  1185  083B               	movf	i1___ftadd@exp2,w
 13349  1186  023C               	subwf	i1___ftadd@exp1,w
 13350  1187  1803               	skipnc
 13351  1188  2998               	goto	i1l4925
 13352  1189  033C               	decf	i1___ftadd@exp1,w
 13353  118A  3AFF               	xorlw	255
 13354  118B  073B               	addwf	i1___ftadd@exp2,w
 13355  118C  00B6               	movwf	??i1___ftadd
 13356  118D  3019               	movlw	25
 13357  118E  0236               	subwf	??i1___ftadd,w
 13358  118F  1C03               	skipc
 13359  1190  2998               	goto	i1l4925
 13360  1191                     i1l4921:	
 13361  1191  0833               	movf	i1___ftadd@f2,w
 13362  1192  00B0               	movwf	?i1___ftadd
 13363  1193  0834               	movf	i1___ftadd@f2+1,w
 13364  1194  00B1               	movwf	?i1___ftadd+1
 13365  1195  0835               	movf	i1___ftadd@f2+2,w
 13366  1196  00B2               	movwf	?i1___ftadd+2
 13367  1197  0008               	return
 13368  1198                     i1l4925:	
 13369  1198  083B               	movf	i1___ftadd@exp2,w
 13370  1199  1903               	btfsc	3,2
 13371  119A  0008               	return
 13372  119B  083C               	movf	i1___ftadd@exp1,w
 13373  119C  023B               	subwf	i1___ftadd@exp2,w
 13374  119D  1803               	skipnc
 13375  119E  29A7               	goto	i1l4931
 13376  119F  033B               	decf	i1___ftadd@exp2,w
 13377  11A0  3AFF               	xorlw	255
 13378  11A1  073C               	addwf	i1___ftadd@exp1,w
 13379  11A2  00B6               	movwf	??i1___ftadd
 13380  11A3  3019               	movlw	25
 13381  11A4  0236               	subwf	??i1___ftadd,w
 13382  11A5  1803               	btfsc	3,0
 13383  11A6  0008               	return
 13384  11A7                     i1l4931:	
 13385  11A7  3006               	movlw	6
 13386  11A8  00B6               	movwf	??i1___ftadd
 13387  11A9  0836               	movf	??i1___ftadd,w
 13388  11AA  00BA               	movwf	i1___ftadd@sign
 13389  11AB  1BB2               	btfsc	i1___ftadd@f1+2,7
 13390  11AC  17BA               	bsf	i1___ftadd@sign,7
 13391  11AD  1BB5               	btfsc	i1___ftadd@f2+2,7
 13392  11AE  173A               	bsf	i1___ftadd@sign,6
 13393  11AF  17B1               	bsf	i1___ftadd@f1+1,7
 13394  11B0  30FF               	movlw	255
 13395  11B1  05B0               	andwf	i1___ftadd@f1,f
 13396  11B2  30FF               	movlw	255
 13397  11B3  05B1               	andwf	i1___ftadd@f1+1,f
 13398  11B4  3000               	movlw	0
 13399  11B5  05B2               	andwf	i1___ftadd@f1+2,f
 13400  11B6  17B4               	bsf	i1___ftadd@f2+1,7
 13401  11B7  30FF               	movlw	255
 13402  11B8  05B3               	andwf	i1___ftadd@f2,f
 13403  11B9  30FF               	movlw	255
 13404  11BA  05B4               	andwf	i1___ftadd@f2+1,f
 13405  11BB  3000               	movlw	0
 13406  11BC  05B5               	andwf	i1___ftadd@f2+2,f
 13407  11BD  083B               	movf	i1___ftadd@exp2,w
 13408  11BE  023C               	subwf	i1___ftadd@exp1,w
 13409  11BF  1803               	skipnc
 13410  11C0  29E3               	goto	i1l4953
 13411  11C1                     i1l4943:	
 13412  11C1  3001               	movlw	1
 13413  11C2                     u689_25:	
 13414  11C2  35B3               	lslf	i1___ftadd@f2,f
 13415  11C3  0DB4               	rlf	i1___ftadd@f2+1,f
 13416  11C4  0DB5               	rlf	i1___ftadd@f2+2,f
 13417  11C5  0B89               	decfsz	9,f
 13418  11C6  29C2               	goto	u689_25
 13419  11C7  3001               	movlw	1
 13420  11C8  02BB               	subwf	i1___ftadd@exp2,f
 13421  11C9  083B               	movf	i1___ftadd@exp2,w
 13422  11CA  063C               	xorwf	i1___ftadd@exp1,w
 13423  11CB  1903               	skipnz
 13424  11CC  29DE               	goto	i1l4951
 13425  11CD  3001               	movlw	1
 13426  11CE  02BA               	subwf	i1___ftadd@sign,f
 13427  11CF  083A               	movf	i1___ftadd@sign,w
 13428  11D0  3907               	andlw	7
 13429  11D1  1903               	btfsc	3,2
 13430  11D2  29DE               	goto	i1l4951
 13431  11D3  29C1               	goto	i1l4943
 13432  11D4                     i1l4949:	
 13433  11D4  3001               	movlw	1
 13434  11D5                     u692_25:	
 13435  11D5  36B2               	lsrf	i1___ftadd@f1+2,f
 13436  11D6  0CB1               	rrf	i1___ftadd@f1+1,f
 13437  11D7  0CB0               	rrf	i1___ftadd@f1,f
 13438  11D8  0B89               	decfsz	9,f
 13439  11D9  29D5               	goto	u692_25
 13440  11DA  3001               	movlw	1
 13441  11DB  00B6               	movwf	??i1___ftadd
 13442  11DC  0836               	movf	??i1___ftadd,w
 13443  11DD  07BC               	addwf	i1___ftadd@exp1,f
 13444  11DE                     i1l4951:	
 13445  11DE  083C               	movf	i1___ftadd@exp1,w
 13446  11DF  063B               	xorwf	i1___ftadd@exp2,w
 13447  11E0  1903               	btfsc	3,2
 13448  11E1  2A08               	goto	i1l1157
 13449  11E2  29D4               	goto	i1l4949
 13450  11E3                     i1l4953:	
 13451  11E3  083C               	movf	i1___ftadd@exp1,w
 13452  11E4  023B               	subwf	i1___ftadd@exp2,w
 13453  11E5  1803               	skipnc
 13454  11E6  2A08               	goto	i1l1157
 13455  11E7                     i1l4955:	
 13456  11E7  3001               	movlw	1
 13457  11E8                     u695_25:	
 13458  11E8  35B0               	lslf	i1___ftadd@f1,f
 13459  11E9  0DB1               	rlf	i1___ftadd@f1+1,f
 13460  11EA  0DB2               	rlf	i1___ftadd@f1+2,f
 13461  11EB  0B89               	decfsz	9,f
 13462  11EC  29E8               	goto	u695_25
 13463  11ED  3001               	movlw	1
 13464  11EE  02BC               	subwf	i1___ftadd@exp1,f
 13465  11EF  083B               	movf	i1___ftadd@exp2,w
 13466  11F0  063C               	xorwf	i1___ftadd@exp1,w
 13467  11F1  1903               	skipnz
 13468  11F2  2A04               	goto	i1l4963
 13469  11F3  3001               	movlw	1
 13470  11F4  02BA               	subwf	i1___ftadd@sign,f
 13471  11F5  083A               	movf	i1___ftadd@sign,w
 13472  11F6  3907               	andlw	7
 13473  11F7  1903               	btfsc	3,2
 13474  11F8  2A04               	goto	i1l4963
 13475  11F9  29E7               	goto	i1l4955
 13476  11FA                     i1l4961:	
 13477  11FA  3001               	movlw	1
 13478  11FB                     u698_25:	
 13479  11FB  36B5               	lsrf	i1___ftadd@f2+2,f
 13480  11FC  0CB4               	rrf	i1___ftadd@f2+1,f
 13481  11FD  0CB3               	rrf	i1___ftadd@f2,f
 13482  11FE  0B89               	decfsz	9,f
 13483  11FF  29FB               	goto	u698_25
 13484  1200  3001               	movlw	1
 13485  1201  00B6               	movwf	??i1___ftadd
 13486  1202  0836               	movf	??i1___ftadd,w
 13487  1203  07BB               	addwf	i1___ftadd@exp2,f
 13488  1204                     i1l4963:	
 13489  1204  083C               	movf	i1___ftadd@exp1,w
 13490  1205  063B               	xorwf	i1___ftadd@exp2,w
 13491  1206  1D03               	skipz
 13492  1207  29FA               	goto	i1l4961
 13493  1208                     i1l1157:	
 13494  1208  1FBA               	btfss	i1___ftadd@sign,7
 13495  1209  2A1A               	goto	i1l4967
 13496  120A  30FF               	movlw	255
 13497  120B  06B0               	xorwf	i1___ftadd@f1,f
 13498  120C  30FF               	movlw	255
 13499  120D  06B1               	xorwf	i1___ftadd@f1+1,f
 13500  120E  30FF               	movlw	255
 13501  120F  06B2               	xorwf	i1___ftadd@f1+2,f
 13502  1210  3001               	movlw	1
 13503  1211  07B0               	addwf	i1___ftadd@f1,f
 13504  1212  3000               	movlw	0
 13505  1213  1803               	skipnc
 13506  1214  3001               	movlw	1
 13507  1215  07B1               	addwf	i1___ftadd@f1+1,f
 13508  1216  3000               	movlw	0
 13509  1217  1803               	skipnc
 13510  1218  3001               	movlw	1
 13511  1219  07B2               	addwf	i1___ftadd@f1+2,f
 13512  121A                     i1l4967:	
 13513  121A  1F3A               	btfss	i1___ftadd@sign,6
 13514  121B  2A2C               	goto	i1l4971
 13515  121C  30FF               	movlw	255
 13516  121D  06B3               	xorwf	i1___ftadd@f2,f
 13517  121E  30FF               	movlw	255
 13518  121F  06B4               	xorwf	i1___ftadd@f2+1,f
 13519  1220  30FF               	movlw	255
 13520  1221  06B5               	xorwf	i1___ftadd@f2+2,f
 13521  1222  3001               	movlw	1
 13522  1223  07B3               	addwf	i1___ftadd@f2,f
 13523  1224  3000               	movlw	0
 13524  1225  1803               	skipnc
 13525  1226  3001               	movlw	1
 13526  1227  07B4               	addwf	i1___ftadd@f2+1,f
 13527  1228  3000               	movlw	0
 13528  1229  1803               	skipnc
 13529  122A  3001               	movlw	1
 13530  122B  07B5               	addwf	i1___ftadd@f2+2,f
 13531  122C                     i1l4971:	
 13532  122C  01BA               	clrf	i1___ftadd@sign
 13533  122D  0830               	movf	i1___ftadd@f1,w
 13534  122E  07B3               	addwf	i1___ftadd@f2,f
 13535  122F  0831               	movf	i1___ftadd@f1+1,w
 13536  1230  3DB4               	addwfc	i1___ftadd@f2+1,f
 13537  1231  0832               	movf	i1___ftadd@f1+2,w
 13538  1232  3DB5               	addwfc	i1___ftadd@f2+2,f
 13539  1233  1FB5               	btfss	i1___ftadd@f2+2,7
 13540  1234  2A47               	goto	i1l4981
 13541  1235  30FF               	movlw	255
 13542  1236  06B3               	xorwf	i1___ftadd@f2,f
 13543  1237  30FF               	movlw	255
 13544  1238  06B4               	xorwf	i1___ftadd@f2+1,f
 13545  1239  30FF               	movlw	255
 13546  123A  06B5               	xorwf	i1___ftadd@f2+2,f
 13547  123B  3001               	movlw	1
 13548  123C  07B3               	addwf	i1___ftadd@f2,f
 13549  123D  3000               	movlw	0
 13550  123E  1803               	skipnc
 13551  123F  3001               	movlw	1
 13552  1240  07B4               	addwf	i1___ftadd@f2+1,f
 13553  1241  3000               	movlw	0
 13554  1242  1803               	skipnc
 13555  1243  3001               	movlw	1
 13556  1244  07B5               	addwf	i1___ftadd@f2+2,f
 13557  1245  01BA               	clrf	i1___ftadd@sign
 13558  1246  0ABA               	incf	i1___ftadd@sign,f
 13559  1247                     i1l4981:	
 13560  1247  0833               	movf	i1___ftadd@f2,w
 13561  1248  00F0               	movwf	i1___ftpack@arg
 13562  1249  0834               	movf	i1___ftadd@f2+1,w
 13563  124A  00F1               	movwf	i1___ftpack@arg+1
 13564  124B  0835               	movf	i1___ftadd@f2+2,w
 13565  124C  00F2               	movwf	i1___ftpack@arg+2
 13566  124D  083C               	movf	i1___ftadd@exp1,w
 13567  124E  00B6               	movwf	??i1___ftadd
 13568  124F  0836               	movf	??i1___ftadd,w
 13569  1250  00F3               	movwf	i1___ftpack@exp
 13570  1251  083A               	movf	i1___ftadd@sign,w
 13571  1252  00B7               	movwf	??i1___ftadd+1
 13572  1253  0837               	movf	??i1___ftadd+1,w
 13573  1254  00F4               	movwf	i1___ftpack@sign
 13574  1255  319B  238D         	fcall	i1___ftpack
 13575  1257  0870               	movf	?i1___ftpack,w
 13576  1258  0020               	movlb	0	; select bank0
 13577  1259  00B0               	movwf	?i1___ftadd
 13578  125A  0871               	movf	?i1___ftpack+1,w
 13579  125B  00B1               	movwf	?i1___ftadd+1
 13580  125C  0872               	movf	?i1___ftpack+2,w
 13581  125D  00B2               	movwf	?i1___ftadd+2
 13582  125E  0008               	return
 13583  125F                     __end_ofi1___ftadd:	
 13584                           
 13585                           	psect	text43
 13586  1B8D                     __ptext43:	
 13587 ;; *************** function i1___ftpack *****************
 13588 ;; Defined at:
 13589 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 13590 ;; Parameters:    Size  Location     Type
 13591 ;;  arg             3    0[COMMON] unsigned um
 13592 ;;  exp             1    3[COMMON] unsigned char 
 13593 ;;  sign            1    4[COMMON] unsigned char 
 13594 ;; Auto vars:     Size  Location     Type
 13595 ;;		None
 13596 ;; Return value:  Size  Location     Type
 13597 ;;                  3    0[COMMON] float 
 13598 ;; Registers used:
 13599 ;;		wreg, status,2, status,0
 13600 ;; Tracked objects:
 13601 ;;		On entry : 0/0
 13602 ;;		On exit  : 0/0
 13603 ;;		Unchanged: 0/0
 13604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13605 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13607 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13608 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13609 ;;Total ram usage:        8 bytes
 13610 ;; Hardware stack levels used:    1
 13611 ;; This function calls:
 13612 ;;		Nothing
 13613 ;; This function is called by:
 13614 ;;		i1___ftadd
 13615 ;;		i1___ftdiv
 13616 ;;		i1___ftmul
 13617 ;;		i1___lwtoft
 13618 ;; This function uses a non-reentrant model
 13619 ;;
 13620                           
 13621                           
 13622                           ;psect for function i1___ftpack
 13623  1B8D                     i1___ftpack:	
 13624                           
 13625                           ;incstack = 0
 13626                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
 13627  1B8D  0873               	movf	i1___ftpack@exp,w
 13628  1B8E  1903               	btfsc	3,2
 13629  1B8F  2B95               	goto	i1l4185
 13630  1B90  0872               	movf	i1___ftpack@arg+2,w
 13631  1B91  0471               	iorwf	i1___ftpack@arg+1,w
 13632  1B92  0470               	iorwf	i1___ftpack@arg,w
 13633  1B93  1D03               	skipz
 13634  1B94  2BA6               	goto	i1l4191
 13635  1B95                     i1l4185:	
 13636  1B95  3000               	movlw	0
 13637  1B96  00F0               	movwf	?i1___ftpack
 13638  1B97  3000               	movlw	0
 13639  1B98  00F1               	movwf	?i1___ftpack+1
 13640  1B99  3000               	movlw	0
 13641  1B9A  00F2               	movwf	?i1___ftpack+2
 13642  1B9B  0008               	return
 13643  1B9C                     i1l4189:	
 13644  1B9C  3001               	movlw	1
 13645  1B9D  00F5               	movwf	??i1___ftpack
 13646  1B9E  0875               	movf	??i1___ftpack,w
 13647  1B9F  07F3               	addwf	i1___ftpack@exp,f
 13648  1BA0  3001               	movlw	1
 13649  1BA1                     u560_25:	
 13650  1BA1  36F2               	lsrf	i1___ftpack@arg+2,f
 13651  1BA2  0CF1               	rrf	i1___ftpack@arg+1,f
 13652  1BA3  0CF0               	rrf	i1___ftpack@arg,f
 13653  1BA4  0B89               	decfsz	9,f
 13654  1BA5  2BA1               	goto	u560_25
 13655  1BA6                     i1l4191:	
 13656  1BA6  30FE               	movlw	254
 13657  1BA7  0572               	andwf	i1___ftpack@arg+2,w
 13658  1BA8  1903               	btfsc	3,2
 13659  1BA9  2BBF               	goto	i1l1126
 13660  1BAA  2B9C               	goto	i1l4189
 13661  1BAB                     i1l4193:	
 13662  1BAB  3001               	movlw	1
 13663  1BAC  00F5               	movwf	??i1___ftpack
 13664  1BAD  0875               	movf	??i1___ftpack,w
 13665  1BAE  07F3               	addwf	i1___ftpack@exp,f
 13666  1BAF  3001               	movlw	1
 13667  1BB0  07F0               	addwf	i1___ftpack@arg,f
 13668  1BB1  3000               	movlw	0
 13669  1BB2  1803               	skipnc
 13670  1BB3  3001               	movlw	1
 13671  1BB4  07F1               	addwf	i1___ftpack@arg+1,f
 13672  1BB5  3000               	movlw	0
 13673  1BB6  1803               	skipnc
 13674  1BB7  3001               	movlw	1
 13675  1BB8  07F2               	addwf	i1___ftpack@arg+2,f
 13676  1BB9  3001               	movlw	1
 13677  1BBA                     u562_25:	
 13678  1BBA  36F2               	lsrf	i1___ftpack@arg+2,f
 13679  1BBB  0CF1               	rrf	i1___ftpack@arg+1,f
 13680  1BBC  0CF0               	rrf	i1___ftpack@arg,f
 13681  1BBD  0B89               	decfsz	9,f
 13682  1BBE  2BBA               	goto	u562_25
 13683  1BBF                     i1l1126:	
 13684  1BBF  30FF               	movlw	255
 13685  1BC0  0572               	andwf	i1___ftpack@arg+2,w
 13686  1BC1  1903               	btfsc	3,2
 13687  1BC2  2BD0               	goto	i1l4201
 13688  1BC3  2BAB               	goto	i1l4193
 13689  1BC4                     i1l4203:	
 13690  1BC4  3002               	movlw	2
 13691  1BC5  0273               	subwf	i1___ftpack@exp,w
 13692  1BC6  1C03               	btfss	3,0
 13693  1BC7  2BD2               	goto	i1l1133
 13694  1BC8  3001               	movlw	1
 13695  1BC9  02F3               	subwf	i1___ftpack@exp,f
 13696  1BCA  3001               	movlw	1
 13697  1BCB                     u564_25:	
 13698  1BCB  35F0               	lslf	i1___ftpack@arg,f
 13699  1BCC  0DF1               	rlf	i1___ftpack@arg+1,f
 13700  1BCD  0DF2               	rlf	i1___ftpack@arg+2,f
 13701  1BCE  0B89               	decfsz	9,f
 13702  1BCF  2BCB               	goto	u564_25
 13703  1BD0                     i1l4201:	
 13704  1BD0  1FF1               	btfss	i1___ftpack@arg+1,7
 13705  1BD1  2BC4               	goto	i1l4203
 13706  1BD2                     i1l1133:	
 13707  1BD2  1873               	btfsc	i1___ftpack@exp,0
 13708  1BD3  2BDA               	goto	i1l1134
 13709  1BD4  30FF               	movlw	255
 13710  1BD5  05F0               	andwf	i1___ftpack@arg,f
 13711  1BD6  307F               	movlw	127
 13712  1BD7  05F1               	andwf	i1___ftpack@arg+1,f
 13713  1BD8  30FF               	movlw	255
 13714  1BD9  05F2               	andwf	i1___ftpack@arg+2,f
 13715  1BDA                     i1l1134:	
 13716  1BDA  1003               	clrc
 13717  1BDB  0CF3               	rrf	i1___ftpack@exp,f
 13718  1BDC  0873               	movf	i1___ftpack@exp,w
 13719  1BDD  00F5               	movwf	??i1___ftpack
 13720  1BDE  01F6               	clrf	??i1___ftpack+1
 13721  1BDF  01F7               	clrf	??i1___ftpack+2
 13722  1BE0  3010               	movlw	16
 13723  1BE1                     u568_25:	
 13724  1BE1  35F5               	lslf	??i1___ftpack,f
 13725  1BE2  0DF6               	rlf	??i1___ftpack+1,f
 13726  1BE3  0DF7               	rlf	??i1___ftpack+2,f
 13727  1BE4  0B89               	decfsz	9,f
 13728  1BE5  2BE1               	goto	u568_25
 13729  1BE6  0875               	movf	??i1___ftpack,w
 13730  1BE7  04F0               	iorwf	i1___ftpack@arg,f
 13731  1BE8  0876               	movf	??i1___ftpack+1,w
 13732  1BE9  04F1               	iorwf	i1___ftpack@arg+1,f
 13733  1BEA  0877               	movf	??i1___ftpack+2,w
 13734  1BEB  04F2               	iorwf	i1___ftpack@arg+2,f
 13735  1BEC  0874               	movf	i1___ftpack@sign,w
 13736  1BED  1903               	btfsc	3,2
 13737  1BEE  0008               	return
 13738  1BEF  17F2               	bsf	i1___ftpack@arg+2,7
 13739  1BF0  0008               	return
 13740  1BF1                     __end_ofi1___ftpack:	
 13741                           
 13742                           	psect	text44
 13743  1D45                     __ptext44:	
 13744 ;; *************** function i1___aldiv *****************
 13745 ;; Defined at:
 13746 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
 13747 ;; Parameters:    Size  Location     Type
 13748 ;;  divisor         4    0[COMMON] long 
 13749 ;;  dividend        4    4[COMMON] long 
 13750 ;; Auto vars:     Size  Location     Type
 13751 ;;  __aldiv         4    2[BANK0 ] long 
 13752 ;;  __aldiv         1    1[BANK0 ] unsigned char 
 13753 ;;  __aldiv         1    0[BANK0 ] unsigned char 
 13754 ;; Return value:  Size  Location     Type
 13755 ;;                  4    0[COMMON] long 
 13756 ;; Registers used:
 13757 ;;		wreg, status,2, status,0
 13758 ;; Tracked objects:
 13759 ;;		On entry : 0/0
 13760 ;;		On exit  : 0/0
 13761 ;;		Unchanged: 0/0
 13762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13763 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13764 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13766 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13767 ;;Total ram usage:       15 bytes
 13768 ;; Hardware stack levels used:    1
 13769 ;; This function calls:
 13770 ;;		Nothing
 13771 ;; This function is called by:
 13772 ;;		_ISR_Function
 13773 ;; This function uses a non-reentrant model
 13774 ;;
 13775                           
 13776                           
 13777                           ;psect for function i1___aldiv
 13778  1D45                     i1___aldiv:	
 13779                           
 13780                           ;incstack = 0
 13781                           ; Regs used in i1___aldiv: [wreg+status,2+status,0]
 13782  1D45  0020               	movlb	0	; select bank0
 13783  1D46  01A1               	clrf	i1___aldiv@sign
 13784  1D47  1FF3               	btfss	i1___aldiv@divisor+3,7
 13785  1D48  2D56               	goto	i1l1020
 13786  1D49  09F0               	comf	i1___aldiv@divisor,f
 13787  1D4A  09F1               	comf	i1___aldiv@divisor+1,f
 13788  1D4B  09F2               	comf	i1___aldiv@divisor+2,f
 13789  1D4C  09F3               	comf	i1___aldiv@divisor+3,f
 13790  1D4D  0AF0               	incf	i1___aldiv@divisor,f
 13791  1D4E  1903               	skipnz
 13792  1D4F  0AF1               	incf	i1___aldiv@divisor+1,f
 13793  1D50  1903               	skipnz
 13794  1D51  0AF2               	incf	i1___aldiv@divisor+2,f
 13795  1D52  1903               	skipnz
 13796  1D53  0AF3               	incf	i1___aldiv@divisor+3,f
 13797  1D54  01A1               	clrf	i1___aldiv@sign
 13798  1D55  0AA1               	incf	i1___aldiv@sign,f
 13799  1D56                     i1l1020:	
 13800  1D56  1FF7               	btfss	i1___aldiv@dividend+3,7
 13801  1D57  2D67               	goto	i1l4885
 13802  1D58  09F4               	comf	i1___aldiv@dividend,f
 13803  1D59  09F5               	comf	i1___aldiv@dividend+1,f
 13804  1D5A  09F6               	comf	i1___aldiv@dividend+2,f
 13805  1D5B  09F7               	comf	i1___aldiv@dividend+3,f
 13806  1D5C  0AF4               	incf	i1___aldiv@dividend,f
 13807  1D5D  1903               	skipnz
 13808  1D5E  0AF5               	incf	i1___aldiv@dividend+1,f
 13809  1D5F  1903               	skipnz
 13810  1D60  0AF6               	incf	i1___aldiv@dividend+2,f
 13811  1D61  1903               	skipnz
 13812  1D62  0AF7               	incf	i1___aldiv@dividend+3,f
 13813  1D63  3001               	movlw	1
 13814  1D64  00F8               	movwf	??i1___aldiv
 13815  1D65  0878               	movf	??i1___aldiv,w
 13816  1D66  06A1               	xorwf	i1___aldiv@sign,f
 13817  1D67                     i1l4885:	
 13818  1D67  3000               	movlw	0
 13819  1D68  00A5               	movwf	i1___aldiv@quotient+3
 13820  1D69  3000               	movlw	0
 13821  1D6A  00A4               	movwf	i1___aldiv@quotient+2
 13822  1D6B  3000               	movlw	0
 13823  1D6C  00A3               	movwf	i1___aldiv@quotient+1
 13824  1D6D  3000               	movlw	0
 13825  1D6E  00A2               	movwf	i1___aldiv@quotient
 13826  1D6F  0873               	movf	i1___aldiv@divisor+3,w
 13827  1D70  0472               	iorwf	i1___aldiv@divisor+2,w
 13828  1D71  0471               	iorwf	i1___aldiv@divisor+1,w
 13829  1D72  0470               	iorwf	i1___aldiv@divisor,w
 13830  1D73  1903               	skipnz
 13831  1D74  2DB0               	goto	i1l4907
 13832  1D75  01A0               	clrf	i1___aldiv@counter
 13833  1D76  0AA0               	incf	i1___aldiv@counter,f
 13834  1D77                     i1l4893:	
 13835  1D77  1BF3               	btfsc	i1___aldiv@divisor+3,7
 13836  1D78  2D85               	goto	i1l4895
 13837  1D79  3001               	movlw	1
 13838  1D7A                     u673_25:	
 13839  1D7A  35F0               	lslf	i1___aldiv@divisor,f
 13840  1D7B  0DF1               	rlf	i1___aldiv@divisor+1,f
 13841  1D7C  0DF2               	rlf	i1___aldiv@divisor+2,f
 13842  1D7D  0DF3               	rlf	i1___aldiv@divisor+3,f
 13843  1D7E  0B89               	decfsz	9,f
 13844  1D7F  2D7A               	goto	u673_25
 13845  1D80  3001               	movlw	1
 13846  1D81  00F8               	movwf	??i1___aldiv
 13847  1D82  0878               	movf	??i1___aldiv,w
 13848  1D83  07A0               	addwf	i1___aldiv@counter,f
 13849  1D84  2D77               	goto	i1l4893
 13850  1D85                     i1l4895:	
 13851  1D85  3001               	movlw	1
 13852  1D86                     u675_25:	
 13853  1D86  35A2               	lslf	i1___aldiv@quotient,f
 13854  1D87  0DA3               	rlf	i1___aldiv@quotient+1,f
 13855  1D88  0DA4               	rlf	i1___aldiv@quotient+2,f
 13856  1D89  0DA5               	rlf	i1___aldiv@quotient+3,f
 13857  1D8A  0B89               	decfsz	9,f
 13858  1D8B  2D86               	goto	u675_25
 13859  1D8C  0873               	movf	i1___aldiv@divisor+3,w
 13860  1D8D  0277               	subwf	i1___aldiv@dividend+3,w
 13861  1D8E  1D03               	skipz
 13862  1D8F  2D9A               	goto	u676_25
 13863  1D90  0872               	movf	i1___aldiv@divisor+2,w
 13864  1D91  0276               	subwf	i1___aldiv@dividend+2,w
 13865  1D92  1D03               	skipz
 13866  1D93  2D9A               	goto	u676_25
 13867  1D94  0871               	movf	i1___aldiv@divisor+1,w
 13868  1D95  0275               	subwf	i1___aldiv@dividend+1,w
 13869  1D96  1D03               	skipz
 13870  1D97  2D9A               	goto	u676_25
 13871  1D98  0870               	movf	i1___aldiv@divisor,w
 13872  1D99  0274               	subwf	i1___aldiv@dividend,w
 13873  1D9A                     u676_25:	
 13874  1D9A  1C03               	skipc
 13875  1D9B  2DA5               	goto	i1l4903
 13876  1D9C  0870               	movf	i1___aldiv@divisor,w
 13877  1D9D  02F4               	subwf	i1___aldiv@dividend,f
 13878  1D9E  0871               	movf	i1___aldiv@divisor+1,w
 13879  1D9F  3BF5               	subwfb	i1___aldiv@dividend+1,f
 13880  1DA0  0872               	movf	i1___aldiv@divisor+2,w
 13881  1DA1  3BF6               	subwfb	i1___aldiv@dividend+2,f
 13882  1DA2  0873               	movf	i1___aldiv@divisor+3,w
 13883  1DA3  3BF7               	subwfb	i1___aldiv@dividend+3,f
 13884  1DA4  1422               	bsf	i1___aldiv@quotient,0
 13885  1DA5                     i1l4903:	
 13886  1DA5  3001               	movlw	1
 13887  1DA6                     u677_25:	
 13888  1DA6  36F3               	lsrf	i1___aldiv@divisor+3,f
 13889  1DA7  0CF2               	rrf	i1___aldiv@divisor+2,f
 13890  1DA8  0CF1               	rrf	i1___aldiv@divisor+1,f
 13891  1DA9  0CF0               	rrf	i1___aldiv@divisor,f
 13892  1DAA  0B89               	decfsz	9,f
 13893  1DAB  2DA6               	goto	u677_25
 13894  1DAC  3001               	movlw	1
 13895  1DAD  02A0               	subwf	i1___aldiv@counter,f
 13896  1DAE  1D03               	btfss	3,2
 13897  1DAF  2D85               	goto	i1l4895
 13898  1DB0                     i1l4907:	
 13899  1DB0  0821               	movf	i1___aldiv@sign,w
 13900  1DB1  1903               	btfsc	3,2
 13901  1DB2  2DBE               	goto	i1l4911
 13902  1DB3  09A2               	comf	i1___aldiv@quotient,f
 13903  1DB4  09A3               	comf	i1___aldiv@quotient+1,f
 13904  1DB5  09A4               	comf	i1___aldiv@quotient+2,f
 13905  1DB6  09A5               	comf	i1___aldiv@quotient+3,f
 13906  1DB7  0AA2               	incf	i1___aldiv@quotient,f
 13907  1DB8  1903               	skipnz
 13908  1DB9  0AA3               	incf	i1___aldiv@quotient+1,f
 13909  1DBA  1903               	skipnz
 13910  1DBB  0AA4               	incf	i1___aldiv@quotient+2,f
 13911  1DBC  1903               	skipnz
 13912  1DBD  0AA5               	incf	i1___aldiv@quotient+3,f
 13913  1DBE                     i1l4911:	
 13914  1DBE  0825               	movf	i1___aldiv@quotient+3,w
 13915  1DBF  00F3               	movwf	?i1___aldiv+3
 13916  1DC0  0824               	movf	i1___aldiv@quotient+2,w
 13917  1DC1  00F2               	movwf	?i1___aldiv+2
 13918  1DC2  0823               	movf	i1___aldiv@quotient+1,w
 13919  1DC3  00F1               	movwf	?i1___aldiv+1
 13920  1DC4  0822               	movf	i1___aldiv@quotient,w
 13921  1DC5  00F0               	movwf	?i1___aldiv
 13922  1DC6  0008               	return
 13923  1DC7                     __end_ofi1___aldiv:	
 13924                           
 13925                           	psect	text45
 13926  18AE                     __ptext45:	
 13927 ;; *************** function i1_Update_PWM *****************
 13928 ;; Defined at:
 13929 ;;		line 1252 in file "main.c"
 13930 ;; Parameters:    Size  Location     Type
 13931 ;;  setwsduty       2    6[COMMON] unsigned int 
 13932 ;; Auto vars:     Size  Location     Type
 13933 ;;  Update_PWM      2   12[COMMON] unsigned int 
 13934 ;;  Update_PWM      2   10[COMMON] unsigned int 
 13935 ;; Return value:  Size  Location     Type
 13936 ;;		None               void
 13937 ;; Registers used:
 13938 ;;		wreg, status,2, status,0
 13939 ;; Tracked objects:
 13940 ;;		On entry : 0/0
 13941 ;;		On exit  : 0/0
 13942 ;;		Unchanged: 0/0
 13943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13945 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13946 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13947 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13948 ;;Total ram usage:        8 bytes
 13949 ;; Hardware stack levels used:    1
 13950 ;; This function calls:
 13951 ;;		Nothing
 13952 ;; This function is called by:
 13953 ;;		_ISR_Function
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957                           
 13958                           ;psect for function i1_Update_PWM
 13959  18AE                     i1_Update_PWM:	
 13960                           
 13961                           ;main.c: 1254: unsigned int Temp1=0x00, Dutycnt=0;
 13962                           
 13963                           ;incstack = 0
 13964                           ; Regs used in i1_Update_PWM: [wreg+status,2+status,0]
 13965  18AE  01FA               	clrf	i1Update_PWM@Temp1
 13966  18AF  01FB               	clrf	i1Update_PWM@Temp1+1
 13967  18B0  01FC               	clrf	i1Update_PWM@Dutycnt
 13968  18B1  01FD               	clrf	i1Update_PWM@Dutycnt+1
 13969                           
 13970                           ;main.c: 1255: Dutycnt=setwsduty;
 13971  18B2  0877               	movf	i1Update_PWM@setwsduty+1,w
 13972  18B3  00FD               	movwf	i1Update_PWM@Dutycnt+1
 13973  18B4  0876               	movf	i1Update_PWM@setwsduty,w
 13974  18B5  00FC               	movwf	i1Update_PWM@Dutycnt
 13975                           
 13976                           ;main.c: 1256: CCP1CONbits.DC1B=Dutycnt;
 13977  18B6  087C               	movf	i1Update_PWM@Dutycnt,w
 13978  18B7  00F8               	movwf	??i1_Update_PWM
 13979  18B8  0EF8               	swapf	??i1_Update_PWM,f
 13980  18B9  0025               	movlb	5	; select bank5
 13981  18BA  0813               	movf	19,w	;volatile
 13982  18BB  0678               	xorwf	??i1_Update_PWM,w
 13983  18BC  39CF               	andlw	-49
 13984  18BD  0678               	xorwf	??i1_Update_PWM,w
 13985  18BE  0093               	movwf	19	;volatile
 13986                           
 13987                           ;main.c: 1257: Temp1=Dutycnt >> 2;
 13988  18BF  087D               	movf	i1Update_PWM@Dutycnt+1,w
 13989  18C0  00F9               	movwf	??i1_Update_PWM+1
 13990  18C1  087C               	movf	i1Update_PWM@Dutycnt,w
 13991  18C2  00F8               	movwf	??i1_Update_PWM
 13992  18C3  36F9               	lsrf	??i1_Update_PWM+1,f
 13993  18C4  0CF8               	rrf	??i1_Update_PWM,f
 13994  18C5  36F9               	lsrf	??i1_Update_PWM+1,f
 13995  18C6  0CF8               	rrf	??i1_Update_PWM,f
 13996  18C7  0878               	movf	??i1_Update_PWM,w
 13997  18C8  00FA               	movwf	i1Update_PWM@Temp1
 13998  18C9  0879               	movf	??i1_Update_PWM+1,w
 13999  18CA  00FB               	movwf	i1Update_PWM@Temp1+1
 14000                           
 14001                           ;main.c: 1258: CCPR1L=Temp1;
 14002  18CB  087A               	movf	i1Update_PWM@Temp1,w
 14003  18CC  0091               	movwf	17	;volatile
 14004                           
 14005                           ;main.c: 1259: iTest = Temp1;
 14006  18CD  087B               	movf	i1Update_PWM@Temp1+1,w
 14007  18CE  0024               	movlb	4	; select bank4
 14008  18CF  00C5               	movwf	(_iTest+1)^(0+512)
 14009  18D0  087A               	movf	i1Update_PWM@Temp1,w
 14010  18D1  00C4               	movwf	_iTest^(0+512)
 14011  18D2  0008               	return
 14012  18D3                     __end_ofi1_Update_PWM:	
 14013                           
 14014                           	psect	text46
 14015  05D4                     __ptext46:	
 14016 ;; *************** function _Display *****************
 14017 ;; Defined at:
 14018 ;;		line 8 in file "DISPLAY.C"
 14019 ;; Parameters:    Size  Location     Type
 14020 ;;		None
 14021 ;; Auto vars:     Size  Location     Type
 14022 ;;		None
 14023 ;; Return value:  Size  Location     Type
 14024 ;;		None               void
 14025 ;; Registers used:
 14026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14027 ;; Tracked objects:
 14028 ;;		On entry : 0/0
 14029 ;;		On exit  : 0/0
 14030 ;;		Unchanged: 0/0
 14031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14034 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14036 ;;Total ram usage:        2 bytes
 14037 ;; Hardware stack levels used:    1
 14038 ;; This function calls:
 14039 ;;		Nothing
 14040 ;; This function is called by:
 14041 ;;		_ISR_Function
 14042 ;; This function uses a non-reentrant model
 14043 ;;
 14044                           
 14045                           
 14046                           ;psect for function _Display
 14047  05D4                     _Display:	
 14048                           
 14049                           ;DISPLAY.C: 10: PORTB=0x00;
 14050                           
 14051                           ;incstack = 0
 14052                           ; Regs used in _Display: [wreg-fsr1h+status,2+status,0+pclath]
 14053  05D4  0020               	movlb	0	; select bank0
 14054  05D5  018D               	clrf	13	;volatile
 14055                           
 14056                           ;DISPLAY.C: 11: if(digit<=5)
 14057  05D6  3006               	movlw	6
 14058  05D7  025F               	subwf	_digit,w
 14059  05D8  1C03               	btfss	3,0
 14060  05D9  2E88               	goto	i1l4257
 14061  05DA  2E94               	goto	i1l4259
 14062  05DB                     i1l445:	
 14063                           ;DISPLAY.C: 14: {
 14064                           ;DISPLAY.C: 15: case 0:
 14065                           
 14066                           ;DISPLAY.C: 12: {
 14067                           ;DISPLAY.C: 13: switch(digit)
 14068                           
 14069                           
 14070                           ;DISPLAY.C: 16: LATCbits.LATC4=0;
 14071  05DB  0022               	movlb	2	; select bank2
 14072  05DC  120E               	bcf	14,4	;volatile
 14073                           
 14074                           ;DISPLAY.C: 17: LATAbits.LATA6=0;
 14075  05DD  130C               	bcf	12,6	;volatile
 14076                           
 14077                           ;DISPLAY.C: 18: LATAbits.LATA7=0;
 14078  05DE  138C               	bcf	12,7	;volatile
 14079                           
 14080                           ;DISPLAY.C: 19: LATB=lookup_table[diswin1[digit]];
 14081  05DF  0020               	movlb	0	; select bank0
 14082  05E0  085F               	movf	_digit,w
 14083  05E1  3ED9               	addlw	(low (_diswin1| (0+256)))& (0+255)
 14084  05E2  0086               	movwf	6
 14085  05E3  3001               	movlw	1	; select bank3/4
 14086  05E4  0087               	movwf	7
 14087  05E5  0801               	movf	1,w
 14088  05E6  00F0               	movwf	??_Display
 14089  05E7  01F1               	clrf	??_Display+1
 14090  05E8  35F0               	lslf	??_Display,f
 14091  05E9  0DF1               	rlf	??_Display+1,f
 14092  05EA  3000               	movlw	low (_lookup_table| (0+32768))
 14093  05EB  0770               	addwf	??_Display,w
 14094  05EC  0084               	movwf	4
 14095  05ED  30A0               	movlw	high (_lookup_table| (0+32768))
 14096  05EE  3D71               	addwfc	??_Display+1,w
 14097  05EF  0085               	movwf	5
 14098  05F0  0800               	movf	0,w	;code access
 14099  05F1  0022               	movlb	2	; select bank2
 14100  05F2  008D               	movwf	13	;volatile
 14101                           
 14102                           ;DISPLAY.C: 20: if(TypeDP.TypeD.digitdp1==1)
 14103  05F3  0020               	movlb	0	; select bank0
 14104  05F4  1C6B               	btfss	_TypeDP,0
 14105  05F5  2E85               	goto	i1l462
 14106  05F6  2E82               	goto	i1l4253
 14107  05F7                     i1l449:	
 14108                           ;DISPLAY.C: 25: case 1:
 14109                           
 14110                           ;DISPLAY.C: 24: break;
 14111                           
 14112                           ;DISPLAY.C: 22: else
 14113                           ;DISPLAY.C: 23: LATBbits.LATB7=0;
 14114                           
 14115                           ;DISPLAY.C: 21: LATBbits.LATB7=1;
 14116                           
 14117                           
 14118                           ;DISPLAY.C: 26: LATCbits.LATC4=1;
 14119  05F7  0022               	movlb	2	; select bank2
 14120  05F8  160E               	bsf	14,4	;volatile
 14121                           
 14122                           ;DISPLAY.C: 27: LATAbits.LATA6=0;
 14123  05F9  130C               	bcf	12,6	;volatile
 14124                           
 14125                           ;DISPLAY.C: 28: LATAbits.LATA7=0;
 14126  05FA  138C               	bcf	12,7	;volatile
 14127                           
 14128                           ;DISPLAY.C: 29: LATB=lookup_table[diswin1[digit]];
 14129  05FB  0020               	movlb	0	; select bank0
 14130  05FC  085F               	movf	_digit,w
 14131  05FD  3ED9               	addlw	(low (_diswin1| (0+256)))& (0+255)
 14132  05FE  0086               	movwf	6
 14133  05FF  3001               	movlw	1	; select bank3/4
 14134  0600  0087               	movwf	7
 14135  0601  0801               	movf	1,w
 14136  0602  00F0               	movwf	??_Display
 14137  0603  01F1               	clrf	??_Display+1
 14138  0604  35F0               	lslf	??_Display,f
 14139  0605  0DF1               	rlf	??_Display+1,f
 14140  0606  3000               	movlw	low (_lookup_table| (0+32768))
 14141  0607  0770               	addwf	??_Display,w
 14142  0608  0084               	movwf	4
 14143  0609  30A0               	movlw	high (_lookup_table| (0+32768))
 14144  060A  3D71               	addwfc	??_Display+1,w
 14145  060B  0085               	movwf	5
 14146  060C  0800               	movf	0,w	;code access
 14147  060D  0022               	movlb	2	; select bank2
 14148  060E  008D               	movwf	13	;volatile
 14149                           
 14150                           ;DISPLAY.C: 30: if(TypeDP.TypeD.digitdp2==1)
 14151  060F  0020               	movlb	0	; select bank0
 14152  0610  1CEB               	btfss	_TypeDP,1
 14153  0611  2E85               	goto	i1l462
 14154  0612  2E82               	goto	i1l4253
 14155  0613                     i1l452:	
 14156                           ;DISPLAY.C: 35: case 2:
 14157                           
 14158                           ;DISPLAY.C: 34: break;
 14159                           
 14160                           ;DISPLAY.C: 32: else
 14161                           ;DISPLAY.C: 33: LATBbits.LATB7=0;
 14162                           
 14163                           ;DISPLAY.C: 31: LATBbits.LATB7=1;
 14164                           
 14165                           
 14166                           ;DISPLAY.C: 36: LATCbits.LATC4=0;
 14167  0613  0022               	movlb	2	; select bank2
 14168  0614  120E               	bcf	14,4	;volatile
 14169                           
 14170                           ;DISPLAY.C: 37: LATAbits.LATA6=1;
 14171  0615  170C               	bsf	12,6	;volatile
 14172                           
 14173                           ;DISPLAY.C: 38: LATAbits.LATA7=0;
 14174  0616  138C               	bcf	12,7	;volatile
 14175                           
 14176                           ;DISPLAY.C: 39: LATB=lookup_table[diswin1[digit]];
 14177  0617  0020               	movlb	0	; select bank0
 14178  0618  085F               	movf	_digit,w
 14179  0619  3ED9               	addlw	(low (_diswin1| (0+256)))& (0+255)
 14180  061A  0086               	movwf	6
 14181  061B  3001               	movlw	1	; select bank3/4
 14182  061C  0087               	movwf	7
 14183  061D  0801               	movf	1,w
 14184  061E  00F0               	movwf	??_Display
 14185  061F  01F1               	clrf	??_Display+1
 14186  0620  35F0               	lslf	??_Display,f
 14187  0621  0DF1               	rlf	??_Display+1,f
 14188  0622  3000               	movlw	low (_lookup_table| (0+32768))
 14189  0623  0770               	addwf	??_Display,w
 14190  0624  0084               	movwf	4
 14191  0625  30A0               	movlw	high (_lookup_table| (0+32768))
 14192  0626  3D71               	addwfc	??_Display+1,w
 14193  0627  0085               	movwf	5
 14194  0628  0800               	movf	0,w	;code access
 14195  0629  0022               	movlb	2	; select bank2
 14196  062A  008D               	movwf	13	;volatile
 14197                           
 14198                           ;DISPLAY.C: 40: if(TypeDP.TypeD.digitdp3==1)
 14199  062B  0020               	movlb	0	; select bank0
 14200  062C  1D6B               	btfss	_TypeDP,2
 14201  062D  2E85               	goto	i1l462
 14202  062E  2E82               	goto	i1l4253
 14203  062F                     i1l455:	
 14204                           ;DISPLAY.C: 45: case 3:
 14205                           
 14206                           ;DISPLAY.C: 44: break;
 14207                           
 14208                           ;DISPLAY.C: 42: else
 14209                           ;DISPLAY.C: 43: LATBbits.LATB7=0;
 14210                           
 14211                           ;DISPLAY.C: 41: LATBbits.LATB7=1;
 14212                           
 14213                           
 14214                           ;DISPLAY.C: 46: LATCbits.LATC4=1;
 14215  062F  0022               	movlb	2	; select bank2
 14216  0630  160E               	bsf	14,4	;volatile
 14217                           
 14218                           ;DISPLAY.C: 47: LATAbits.LATA6=1;
 14219  0631  170C               	bsf	12,6	;volatile
 14220                           
 14221                           ;DISPLAY.C: 48: LATAbits.LATA7=0;
 14222  0632  138C               	bcf	12,7	;volatile
 14223                           
 14224                           ;DISPLAY.C: 49: LATB=lookup_table[diswin1[digit]];
 14225  0633  0020               	movlb	0	; select bank0
 14226  0634  085F               	movf	_digit,w
 14227  0635  3ED9               	addlw	(low (_diswin1| (0+256)))& (0+255)
 14228  0636  0086               	movwf	6
 14229  0637  3001               	movlw	1	; select bank3/4
 14230  0638  0087               	movwf	7
 14231  0639  0801               	movf	1,w
 14232  063A  00F0               	movwf	??_Display
 14233  063B  01F1               	clrf	??_Display+1
 14234  063C  35F0               	lslf	??_Display,f
 14235  063D  0DF1               	rlf	??_Display+1,f
 14236  063E  3000               	movlw	low (_lookup_table| (0+32768))
 14237  063F  0770               	addwf	??_Display,w
 14238  0640  0084               	movwf	4
 14239  0641  30A0               	movlw	high (_lookup_table| (0+32768))
 14240  0642  3D71               	addwfc	??_Display+1,w
 14241  0643  0085               	movwf	5
 14242  0644  0800               	movf	0,w	;code access
 14243  0645  0022               	movlb	2	; select bank2
 14244  0646  008D               	movwf	13	;volatile
 14245                           
 14246                           ;DISPLAY.C: 50: if(TypeDP.TypeD.digitdp4==1)
 14247  0647  0020               	movlb	0	; select bank0
 14248  0648  1DEB               	btfss	_TypeDP,3
 14249  0649  2E85               	goto	i1l462
 14250  064A  2E82               	goto	i1l4253
 14251  064B                     i1l458:	
 14252                           ;DISPLAY.C: 55: case 4:
 14253                           
 14254                           ;DISPLAY.C: 54: break;
 14255                           
 14256                           ;DISPLAY.C: 52: else
 14257                           ;DISPLAY.C: 53: LATBbits.LATB7=0;
 14258                           
 14259                           ;DISPLAY.C: 51: LATBbits.LATB7=1;
 14260                           
 14261                           
 14262                           ;DISPLAY.C: 56: LATCbits.LATC4=0;
 14263  064B  0022               	movlb	2	; select bank2
 14264  064C  120E               	bcf	14,4	;volatile
 14265                           
 14266                           ;DISPLAY.C: 57: LATAbits.LATA6=0;
 14267  064D  130C               	bcf	12,6	;volatile
 14268                           
 14269                           ;DISPLAY.C: 58: LATAbits.LATA7=1;
 14270  064E  178C               	bsf	12,7	;volatile
 14271                           
 14272                           ;DISPLAY.C: 59: LATB=lookup_table[diswin1[digit]];
 14273  064F  0020               	movlb	0	; select bank0
 14274  0650  085F               	movf	_digit,w
 14275  0651  3ED9               	addlw	(low (_diswin1| (0+256)))& (0+255)
 14276  0652  0086               	movwf	6
 14277  0653  3001               	movlw	1	; select bank3/4
 14278  0654  0087               	movwf	7
 14279  0655  0801               	movf	1,w
 14280  0656  00F0               	movwf	??_Display
 14281  0657  01F1               	clrf	??_Display+1
 14282  0658  35F0               	lslf	??_Display,f
 14283  0659  0DF1               	rlf	??_Display+1,f
 14284  065A  3000               	movlw	low (_lookup_table| (0+32768))
 14285  065B  0770               	addwf	??_Display,w
 14286  065C  0084               	movwf	4
 14287  065D  30A0               	movlw	high (_lookup_table| (0+32768))
 14288  065E  3D71               	addwfc	??_Display+1,w
 14289  065F  0085               	movwf	5
 14290  0660  0800               	movf	0,w	;code access
 14291  0661  0022               	movlb	2	; select bank2
 14292  0662  008D               	movwf	13	;volatile
 14293                           
 14294                           ;DISPLAY.C: 60: if(TypeDP.TypeD.digitdp5==1)
 14295  0663  0020               	movlb	0	; select bank0
 14296  0664  1E6B               	btfss	_TypeDP,4
 14297  0665  2E85               	goto	i1l462
 14298  0666  2E82               	goto	i1l4253
 14299  0667                     i1l461:	
 14300                           ;DISPLAY.C: 65: case 5:
 14301                           
 14302                           ;DISPLAY.C: 64: break;
 14303                           
 14304                           ;DISPLAY.C: 62: else
 14305                           ;DISPLAY.C: 63: LATBbits.LATB7=0;
 14306                           
 14307                           ;DISPLAY.C: 61: LATBbits.LATB7=1;
 14308                           
 14309                           
 14310                           ;DISPLAY.C: 66: LATCbits.LATC4=1;
 14311  0667  0022               	movlb	2	; select bank2
 14312  0668  160E               	bsf	14,4	;volatile
 14313                           
 14314                           ;DISPLAY.C: 67: LATAbits.LATA6=0;
 14315  0669  130C               	bcf	12,6	;volatile
 14316                           
 14317                           ;DISPLAY.C: 68: LATAbits.LATA7=1;
 14318  066A  178C               	bsf	12,7	;volatile
 14319                           
 14320                           ;DISPLAY.C: 69: LATB=lookup_table[diswin1[digit]];
 14321  066B  0020               	movlb	0	; select bank0
 14322  066C  085F               	movf	_digit,w
 14323  066D  3ED9               	addlw	(low (_diswin1| (0+256)))& (0+255)
 14324  066E  0086               	movwf	6
 14325  066F  3001               	movlw	1	; select bank3/4
 14326  0670  0087               	movwf	7
 14327  0671  0801               	movf	1,w
 14328  0672  00F0               	movwf	??_Display
 14329  0673  01F1               	clrf	??_Display+1
 14330  0674  35F0               	lslf	??_Display,f
 14331  0675  0DF1               	rlf	??_Display+1,f
 14332  0676  3000               	movlw	low (_lookup_table| (0+32768))
 14333  0677  0770               	addwf	??_Display,w
 14334  0678  0084               	movwf	4
 14335  0679  30A0               	movlw	high (_lookup_table| (0+32768))
 14336  067A  3D71               	addwfc	??_Display+1,w
 14337  067B  0085               	movwf	5
 14338  067C  0800               	movf	0,w	;code access
 14339  067D  0022               	movlb	2	; select bank2
 14340  067E  008D               	movwf	13	;volatile
 14341                           
 14342                           ;DISPLAY.C: 70: if(TypeDP.TypeD.digitdp6==1)
 14343  067F  0020               	movlb	0	; select bank0
 14344  0680  1EEB               	btfss	_TypeDP,5
 14345  0681  2E85               	goto	i1l462
 14346  0682                     i1l4253:	
 14347                           
 14348                           ;DISPLAY.C: 71: LATBbits.LATB7=1;
 14349  0682  0022               	movlb	2	; select bank2
 14350  0683  178D               	bsf	13,7	;volatile
 14351  0684  2F0C               	goto	i1l4327
 14352  0685                     i1l462:	
 14353                           
 14354                           ;DISPLAY.C: 72: else
 14355                           ;DISPLAY.C: 73: LATBbits.LATB7=0;
 14356  0685  0022               	movlb	2	; select bank2
 14357  0686  138D               	bcf	13,7	;volatile
 14358                           
 14359                           ;DISPLAY.C: 77: }
 14360                           
 14361                           ;DISPLAY.C: 76: break;
 14362                           
 14363                           ;DISPLAY.C: 75: default:
 14364                           
 14365                           ;DISPLAY.C: 74: break;
 14366  0687  2F0C               	goto	i1l4327
 14367  0688                     i1l4257:	
 14368  0688  0020               	movlb	0	; select bank0
 14369  0689  085F               	movf	_digit,w
 14370                           
 14371                           ; Switch size 1, requested type "space"
 14372                           ; Number of cases is 6, Range of values is 0 to 5
 14373                           ; switch strategies available:
 14374                           ; Name         Instructions Cycles
 14375                           ; direct_byte           18     6 (fixed)
 14376                           ; simple_byte           19    10 (average)
 14377                           ; jumptable            260     6 (fixed)
 14378                           ;	Chosen strategy is direct_byte
 14379  068A  0084               	movwf	4
 14380  068B  3006               	movlw	6
 14381  068C  0204               	subwf	4,w
 14382  068D  1803               	skipnc
 14383  068E  2F0C               	goto	i1l4327
 14384  068F  31A0               	movlp	high i1S6081
 14385  0690  3504               	lslf	4,w
 14386  0691  3E6E               	addlw	low i1S6081
 14387  0692  0082               	movwf	2
 14388                           
 14389                           ;DISPLAY.C: 78: }
 14390  0693  2F0C               	goto	i1l4327
 14391  0694                     i1l4259:	
 14392                           
 14393                           ;DISPLAY.C: 79: else if(digit == 6)
 14394  0694  3006               	movlw	6
 14395  0695  065F               	xorwf	_digit,w
 14396  0696  1D03               	btfss	3,2
 14397  0697  2E9F               	goto	i1l4265
 14398                           
 14399                           ;DISPLAY.C: 80: {
 14400                           ;DISPLAY.C: 81: LATCbits.LATC4=0;
 14401  0698  0022               	movlb	2	; select bank2
 14402  0699  120E               	bcf	14,4	;volatile
 14403                           
 14404                           ;DISPLAY.C: 82: LATAbits.LATA6=1;
 14405  069A  170C               	bsf	12,6	;volatile
 14406                           
 14407                           ;DISPLAY.C: 83: LATAbits.LATA7=1;
 14408  069B  178C               	bsf	12,7	;volatile
 14409                           
 14410                           ;DISPLAY.C: 85: LATB=TypeU.LEDGROUP[0];
 14411  069C  0020               	movlb	0	; select bank0
 14412  069D  0865               	movf	_TypeU,w
 14413  069E  2EAA               	goto	L27
 14414  069F                     i1l4265:	
 14415                           ;DISPLAY.C: 86: }
 14416                           
 14417                           
 14418                           ;DISPLAY.C: 87: else if(digit == 7)
 14419  069F  3007               	movlw	7
 14420  06A0  0020               	movlb	0	; select bank0
 14421  06A1  065F               	xorwf	_digit,w
 14422  06A2  1D03               	btfss	3,2
 14423  06A3  2EAD               	goto	i1l4271
 14424                           
 14425                           ;DISPLAY.C: 88: {
 14426                           ;DISPLAY.C: 89: LATCbits.LATC4=1;
 14427  06A4  0022               	movlb	2	; select bank2
 14428  06A5  160E               	bsf	14,4	;volatile
 14429                           
 14430                           ;DISPLAY.C: 90: LATAbits.LATA6=1;
 14431  06A6  170C               	bsf	12,6	;volatile
 14432                           
 14433                           ;DISPLAY.C: 91: LATAbits.LATA7=1;
 14434  06A7  178C               	bsf	12,7	;volatile
 14435                           
 14436                           ;DISPLAY.C: 93: LATB=TypeU.LEDGROUP[1];
 14437  06A8  0020               	movlb	0	; select bank0
 14438  06A9  0866               	movf	_TypeU+1,w
 14439  06AA                     L27:	
 14440  06AA  0022               	movlb	2	; select bank2
 14441  06AB  008D               	movwf	13	;volatile
 14442                           
 14443                           ;DISPLAY.C: 95: }
 14444  06AC  2F0C               	goto	i1l4327
 14445  06AD                     i1l4271:	
 14446                           
 14447                           ;DISPLAY.C: 96: else if(digit == 8)
 14448  06AD  3008               	movlw	8
 14449  06AE  0020               	movlb	0	; select bank0
 14450  06AF  065F               	xorwf	_digit,w
 14451  06B0  1D03               	btfss	3,2
 14452  06B1  2F0C               	goto	i1l4327
 14453                           
 14454                           ;DISPLAY.C: 97: {
 14455                           ;DISPLAY.C: 98: TRISB=0X0F;
 14456  06B2  300F               	movlw	15
 14457  06B3  0021               	movlb	1	; select bank1
 14458  06B4  008D               	movwf	13	;volatile
 14459                           
 14460                           ;DISPLAY.C: 99: for(i=0;i>=100;i++);
 14461  06B5  0022               	movlb	2	; select bank2
 14462  06B6  01CB               	clrf	_i^(0+256)
 14463  06B7  3064               	movlw	100
 14464  06B8  024B               	subwf	_i^(0+256),w
 14465  06B9  1C03               	btfss	3,0
 14466  06BA  2EC3               	goto	i1l4285
 14467  06BB                     i1l4281:	
 14468  06BB  3001               	movlw	1
 14469  06BC  00F0               	movwf	??_Display
 14470  06BD  0870               	movf	??_Display,w
 14471  06BE  07CB               	addwf	_i^(0+256),f
 14472  06BF  3064               	movlw	100
 14473  06C0  024B               	subwf	_i^(0+256),w
 14474  06C1  1803               	skipnc
 14475  06C2  2EBB               	goto	i1l4281
 14476  06C3                     i1l4285:	
 14477                           
 14478                           ;DISPLAY.C: 100: portbstatus=PORTB;
 14479  06C3  0020               	movlb	0	; select bank0
 14480  06C4  080D               	movf	13,w	;volatile
 14481  06C5  00F0               	movwf	??_Display
 14482  06C6  0870               	movf	??_Display,w
 14483  06C7  00E1               	movwf	_portbstatus	;volatile
 14484                           
 14485                           ;DISPLAY.C: 101: for(i=0;i>=200;i++);
 14486  06C8  0022               	movlb	2	; select bank2
 14487  06C9  01CB               	clrf	_i^(0+256)
 14488  06CA  30C8               	movlw	200
 14489  06CB  024B               	subwf	_i^(0+256),w
 14490  06CC  1C03               	btfss	3,0
 14491  06CD  2ED6               	goto	i1l4297
 14492  06CE                     i1l4293:	
 14493  06CE  3001               	movlw	1
 14494  06CF  00F0               	movwf	??_Display
 14495  06D0  0870               	movf	??_Display,w
 14496  06D1  07CB               	addwf	_i^(0+256),f
 14497  06D2  30C8               	movlw	200
 14498  06D3  024B               	subwf	_i^(0+256),w
 14499  06D4  1803               	skipnc
 14500  06D5  2ECE               	goto	i1l4293
 14501  06D6                     i1l4297:	
 14502                           
 14503                           ;DISPLAY.C: 102: if(pportb==portbstatus)
 14504  06D6  085D               	movf	_pportb^(0+256),w	;volatile
 14505  06D7  0020               	movlb	0	; select bank0
 14506  06D8  0661               	xorwf	_portbstatus,w	;volatile
 14507  06D9  1D03               	skipz
 14508  06DA  2F02               	goto	i1l4321
 14509                           
 14510                           ;DISPLAY.C: 103: {
 14511                           ;DISPLAY.C: 104: temp=portbstatus;
 14512  06DB  0861               	movf	_portbstatus,w	;volatile
 14513  06DC  00F0               	movwf	??_Display
 14514  06DD  0870               	movf	??_Display,w
 14515  06DE  00E3               	movwf	_temp
 14516                           
 14517                           ;DISPLAY.C: 105: temp=(temp & 0x0F);
 14518  06DF  0863               	movf	_temp,w
 14519  06E0  390F               	andlw	15
 14520  06E1  00F0               	movwf	??_Display
 14521  06E2  0870               	movf	??_Display,w
 14522  06E3  00E3               	movwf	_temp
 14523                           
 14524                           ;DISPLAY.C: 106: if(temp==0x01)
 14525  06E4  0363               	decf	_temp,w
 14526  06E5  1D03               	btfss	3,2
 14527  06E6  2EE9               	goto	i1l4307
 14528                           
 14529                           ;DISPLAY.C: 107: key=1;
 14530  06E7  3001               	movlw	1
 14531  06E8  2EFD               	goto	L30
 14532  06E9                     i1l4307:	
 14533                           
 14534                           ;DISPLAY.C: 108: else if(temp==0x02)
 14535  06E9  3002               	movlw	2
 14536  06EA  0020               	movlb	0	; select bank0
 14537  06EB  0663               	xorwf	_temp,w
 14538  06EC  1D03               	btfss	3,2
 14539  06ED  2EF0               	goto	i1l4311
 14540                           
 14541                           ;DISPLAY.C: 109: key=2;
 14542  06EE  3002               	movlw	2
 14543  06EF  2EFD               	goto	L30
 14544  06F0                     i1l4311:	
 14545                           
 14546                           ;DISPLAY.C: 110: else if(temp==0x04)
 14547  06F0  3004               	movlw	4
 14548  06F1  0020               	movlb	0	; select bank0
 14549  06F2  0663               	xorwf	_temp,w
 14550  06F3  1D03               	btfss	3,2
 14551  06F4  2EF7               	goto	i1l4315
 14552                           
 14553                           ;DISPLAY.C: 111: key=3;
 14554  06F5  3003               	movlw	3
 14555  06F6  2EFD               	goto	L30
 14556  06F7                     i1l4315:	
 14557                           
 14558                           ;DISPLAY.C: 112: else if(temp==0x08)
 14559  06F7  3008               	movlw	8
 14560  06F8  0020               	movlb	0	; select bank0
 14561  06F9  0663               	xorwf	_temp,w
 14562  06FA  1D03               	btfss	3,2
 14563  06FB  2F02               	goto	i1l4321
 14564                           
 14565                           ;DISPLAY.C: 113: key=4;
 14566  06FC  3004               	movlw	4
 14567  06FD                     L30:	
 14568  06FD  00F0               	movwf	??_Display
 14569  06FE  0870               	movf	??_Display,w
 14570  06FF  0021               	movlb	1	; select bank1
 14571  0700  00EF               	movwf	_key^(0+128)	;volatile
 14572  0701  2F04               	goto	i1l4323
 14573  0702                     i1l4321:	
 14574                           ;DISPLAY.C: 116: }
 14575                           
 14576                           ;DISPLAY.C: 114: else
 14577                           ;DISPLAY.C: 115: key=0;
 14578                           
 14579                           
 14580                           ;DISPLAY.C: 117: else
 14581                           ;DISPLAY.C: 118: {
 14582                           ;DISPLAY.C: 119: key=0;
 14583  0702  0021               	movlb	1	; select bank1
 14584  0703  01EF               	clrf	_key^(0+128)	;volatile
 14585  0704                     i1l4323:	
 14586                           
 14587                           ;DISPLAY.C: 120: }
 14588                           ;DISPLAY.C: 121: pportb=portbstatus;
 14589  0704  0020               	movlb	0	; select bank0
 14590  0705  0861               	movf	_portbstatus,w	;volatile
 14591  0706  00F0               	movwf	??_Display
 14592  0707  0870               	movf	??_Display,w
 14593  0708  0022               	movlb	2	; select bank2
 14594  0709  00DD               	movwf	_pportb^(0+256)	;volatile
 14595                           
 14596                           ;DISPLAY.C: 122: TRISB=0X00;
 14597  070A  0021               	movlb	1	; select bank1
 14598  070B  018D               	clrf	13	;volatile
 14599  070C                     i1l4327:	
 14600                           
 14601                           ;DISPLAY.C: 123: }
 14602                           ;DISPLAY.C: 124: if(++digit >=9)
 14603  070C  3001               	movlw	1
 14604  070D  00F0               	movwf	??_Display
 14605  070E  0870               	movf	??_Display,w
 14606  070F  0020               	movlb	0	; select bank0
 14607  0710  07DF               	addwf	_digit,f
 14608  0711  3009               	movlw	9
 14609  0712  025F               	subwf	_digit,w
 14610  0713  1C03               	skipc
 14611  0714  0008               	return
 14612                           
 14613                           ;DISPLAY.C: 125: digit=0;
 14614  0715  01DF               	clrf	_digit
 14615  0716  0008               	return
 14616  0717                     __end_of_Display:	
 14617  007E                     btemp	set	126	;btemp
 14618  007E                     wtemp	set	126
 14619  007E                     wtemp0	set	126
 14620  0080                     wtemp1	set	128
 14621  0082                     wtemp2	set	130
 14622  0084                     wtemp3	set	132
 14623  0086                     wtemp4	set	134
 14624  0088                     wtemp5	set	136
 14625  007F                     wtemp6	set	127
 14626  007E                     ttemp	set	126
 14627  007E                     ttemp0	set	126
 14628  0081                     ttemp1	set	129
 14629  0084                     ttemp2	set	132
 14630  0087                     ttemp3	set	135
 14631  007F                     ttemp4	set	127
 14632  007E                     ltemp	set	126
 14633  007E                     ltemp0	set	126
 14634  0082                     ltemp1	set	130
 14635  0086                     ltemp2	set	134
 14636  0080                     ltemp3	set	128
 14637  2796                     
 14638                           	psect	swtext1
 14639  206E                     __pswtext1:	
 14640  206E                     i1S6081:	
 14641  206E  3185  2DDB         	ljmp	i1l445
 14642  2070  3185  2DF7         	ljmp	i1l449
 14643  2072  3186  2E13         	ljmp	i1l452
 14644  2074  3186  2E2F         	ljmp	i1l455
 14645  2076  3186  2E4B         	ljmp	i1l458
 14646  2078  3186  2E67         	ljmp	i1l461


Data Sizes:
    Strings     0
    Constant    110
    Data        35
    BSS         323
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     54      80
    BANK1            80     79      80
    BANK2            80      0      80
    BANK3            80      0      79
    BANK4            80      0      77
    BANK5            80      0      22
    BANK6            80      0      73
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           22      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_Function in COMMON

    _ISR_Function->i1_Update_PWM
    i1___lwtoft->i1___ftpack
    i1___fttol->i1___lwtoft
    i1___ftmul->i1___lwtoft
    i1___ftdiv->i1___lwtoft
    i1___ftadd->i1___lwtoft
    i1_Update_PWM->i1___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_Function in BANK0

    _ISR_Function->i1___fttol
    i1___fttol->i1___ftadd
    i1___ftadd->i1___ftmul

Critical Paths under _main in BANK1

    _main->_Adaptive_base_pid
    _transmittops->_Send_Byte
    _send_status->_Send_Byte
    _key_application->_Update_PWM
    _disp_hex_window2->___lwdiv
    _disp_hex_window1->___lwdiv
    _detect_display_error->_Update_PWM
    _SCANENCODER2->_enc2_port
    _SCANENCODER1->_enc1_port
    _Adaptive_base_pid->_Update_PWM
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftadd
    ___ftge->___altoft
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _Update_PWM->___fttol

Critical Paths under _ISR_Function in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Function in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR_Function in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR_Function in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR_Function in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR_Function in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR_Function in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR_Function in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR_Function in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR_Function in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR_Function in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR_Function in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR_Function in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR_Function in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR_Function in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   40130
                                             77 BANK1      2     2      0
                  _Adaptive_base_pid
                            _Delayms
                           _PWM_init
                       _SCANENCODER1
                       _SCANENCODER2
                        _Timer0_init
                         _Update_PWM
                            ___ftmul
                            ___fttol
                           ___lwtoft
                             ___wmul
                       _capture_init
               _detect_display_error
                   _disp_hex_window1
                  _disp_hex_window11
                   _disp_hex_window2
                  _disp_hex_window22
                    _key_application
                       _portpin_init
                        _send_status
                        _system_init
                       _transmittops
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _transmittops                                         1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status                                          1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Send_Byte                                            1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _portpin_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_application                                      3     3      0    4203
                                             59 BANK1      3     3      0
                         _Update_PWM
                             ___wmul
                   _disp_hex_window2
 ---------------------------------------------------------------------------------
 (2) _disp_hex_window2                                     3     1      2    2033
                                              8 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window22                                    2     0      2      64
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window11                                    2     0      2      64
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window1                                     3     1      2    2033
                                              8 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     927
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     674
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _detect_display_error                                 1     1      0     996
                                             59 BANK1      1     1      0
                         _Update_PWM
 ---------------------------------------------------------------------------------
 (1) _capture_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER2                                         2     2      0     123
                                              5 BANK1      2     2      0
                          _enc2_port
 ---------------------------------------------------------------------------------
 (2) _enc2_port                                            5     5      0      94
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER1                                         2     2      0     123
                                              6 BANK1      2     2      0
                          _enc1_port
 ---------------------------------------------------------------------------------
 (2) _enc1_port                                            6     6      0      94
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delayms                                              6     4      2     286
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Adaptive_base_pid                                   18    18      0   20087
                                             59 BANK1     18    18      0
                         _Update_PWM
                            ___aldiv
                           ___altoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1064
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2859
                                              8 BANK1      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     904
                                             37 BANK1     14    10      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    4251
                                             21 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     392
                                             16 BANK1      9     3      6
                           ___altoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2797
                                             37 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3767
                                              8 BANK1     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    2375
                                              8 BANK1      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2109
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     504
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (2) _Update_PWM                                           8     6      2     996
                                             51 BANK1      8     6      2
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Function                                        11    11      0    5020
                                             43 BANK0     11    11      0
                            _Display
                       i1_Update_PWM
                          i1___aldiv
                          i1___ftadd
                          i1___ftdiv
                          i1___ftmul
                          i1___fttol
                         i1___lwtoft
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) i1___lwtoft                                           4     1      3     669
                                              8 COMMON     4     1      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (5) i1___fttol                                           14    10      4     304
                                             29 BANK0     14    10      4
                          i1___ftadd (ARG)
                          i1___ftdiv (ARG)
                          i1___ftmul (ARG)
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftmul                                           16    10      6     973
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftdiv                                           16    10      6     927
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftadd                                           13     7      6    1435
                                             16 BANK0     13     7      6
                          i1___ftmul (ARG)
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___ftpack                                           8     3      5     543
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) i1___aldiv                                           15     7      8     352
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) i1_Update_PWM                                         8     6      2     192
                                              6 COMMON     8     6      2
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _Display                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adaptive_base_pid
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___aldiv
     ___altoft
       ___ftpack
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
       ___altoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftneg
     ___fttol
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft
       ___ftpack
       ___wmul (ARG)
     ___wmul
   _Delayms
   _PWM_init
   _SCANENCODER1
     _enc1_port
   _SCANENCODER2
     _enc2_port
   _Timer0_init
   _Update_PWM
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___ftmul
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___fttol
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
     ___wmul (ARG)
   ___wmul
   _capture_init
   _detect_display_error
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
   _disp_hex_window1
     ___lwdiv
     ___lwmod
   _disp_hex_window11
   _disp_hex_window2
     ___lwdiv
     ___lwmod
   _disp_hex_window22
   _key_application
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _disp_hex_window2
       ___lwdiv
       ___lwmod
   _portpin_init
   _send_status
     _Send_Byte
   _system_init
   _transmittops
     _Send_Byte
   _uart_init

 _ISR_Function (ROOT)
   _Display
   i1_Update_PWM
     i1___wmul (ARG)
   i1___aldiv
   i1___ftadd
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftpack (ARG)
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftdiv
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftmul
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___fttol
     i1___ftadd (ARG)
       i1___ftmul (ARG)
         i1___ftpack
         i1___lwtoft (ARG)
           i1___ftpack
       i1___ftpack (ARG)
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftdiv (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___lwtoft
     i1___ftpack
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     36      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4D      13       96.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1F9      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      16      16       27.5%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      49      18       91.3%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1F9      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              16      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Aug 04 16:29:03 2023

          Update_PWM@setwsduty 00D3                    _portbstatus 0061                    _updatedispf 01D6  
                 ___altoft@exp 00AE                     __CFG_CP$ON 0000                              _i 014B  
                            pc 0002                     i1___ftpack 1B8D                  ___altoft@sign 00AF  
    __end_of_Adaptive_base_pid 1800                    __CFG_CPD$ON 0000                     i1___lwtoft 27DA  
          ___wmul@multiplicand 00A2               i1___wmul@product 0074                   _portpin_init 1832  
          __end_of_system_init 27AC                   ___ftadd@exp1 00B4                   ___ftadd@exp2 00B3  
                  __CFG_LVP$ON 0000                   ___ftadd@sign 00B2                            l501 18DA  
                          l721 0D11                            l810 1452                            l715 0B50  
                          l812 1458                            l708 0B0E                            l660 08B4  
                          l805 143A                            l733 0C19                            l725 0BB0  
                          l558 173E                            l726 0BBF                            l736 0C6B  
                          l728 0BD0                            l841 279A                            l737 0C91  
                          l673 0A15                            l771 0EF2                            l755 0DAA  
                          l691 0AC0                            l860 0821                            l756 0DAB  
                          l676 0A08                            l757 0F9D                            l870 0853  
                          l862 082B                            l790 135B                            l758 0E42  
                          l694 0AB3                            l847 1B3B                            l864 0835  
                          l688 0AC7                   i1___ftadd@f1 0030                            l866 083F  
                 i1___ftadd@f2 0033                            l876 0877                            l868 0849  
                          l965 189B                            _PR2 001B                    _transmitonf 0166  
                          _One 01AC                            _Two 01B0                            _iii 0246  
                          _ijk 0126                            _key 00EF                            _lmn 0128  
                 i1___ftdiv@f1 0023                   i1___ftdiv@f2 0020                   i1___ftdiv@f3 002B  
                 __CFG_BORV$LO 0000                            wreg 0009                   i1___ftmul@f1 0020  
                 i1___ftmul@f2 0023                   i1___fttol@f1 003D                _key_application 1355  
               i1___aldiv@sign 0021                   ___ftdiv@cntr 00CF                   ___ftdiv@sign 00D4  
                         l1020 1DD8                           l1133 1C37                           l1134 1C3F  
                         l1126 1C24                           l1217 1F3D                           l1157 12FE  
                         l4001 1322                           l4011 133D                           l4021 1023  
                         l4101 077F                           l4041 107A                           l4113 079B  
                         l4105 0787                           l4027 1039                           l4061 196C  
                         l4117 07A3                           l4141 1EE9                           l4049 1093  
                         l4065 1982                           l4161 1F27                           l4401 1D24  
                         l4083 072E                           l6011 0F35                           l4173 1F4E  
                         l4413 1D39                           l4167 1F34                           l4159 1F19  
                         l4415 1D3D                           l6007 0F25                           l4089 0744  
                         l4169 1F40                           l4521 16F0                           l4505 1602  
                         l4345 18EB                           l4409 1D35                           l4417 1D42  
                         l6017 0FA4                           l3731 1C0B                           l4523 16FA  
                         l4507 1609                           l4347 18F6                           l6027 0FC2  
                         l3741 1C35                           l3733 1C10                           l3725 1BFA  
                         l4533 1779                           l3743 1C29                           l4551 17E5  
                         l4367 1CED                           l4471 1CAC                           l4439 1C76  
                         l6055 0FF3                           l3921 1E32                           l3729 1C01  
                         l4545 17A3                           l4537 178D                           l4377 1CF9  
                         l4449 1C82                           l4705 138A                           l4713 139D  
                         l6049 0FE7                           l3907 1DF9                           l4547 17CD  
                         l4387 1D0C                           l4483 1CC1                           l4459 1C95  
                         l3771 07F2                           l3763 07D4                           l6059 0FFC  
                         l3925 1E40                           l3917 1E27                           l3909 1E07  
                         l3941 19B6                           l3829 1B22                           l4485 1CC5  
                         l4821 0866                           l3765 07E0                           l4741 13A7  
                         l3951 1287                           l3855 1A71                           l4479 1CBD  
                         l4487 1CCA                           l4831 0884                           l3775 07FB  
                         l4743 140A                           l4751 142B                           l5711 0AF3  
                         l3961 129D                           l4833 0886                           l3793 1947  
                         l4761 1441                           l4737 13FA                           l5705 0AE2  
                         l5633 09FD                           l5609 09A8                           l3939 19A6  
                         l3955 128E                           l4819 085E                           l3787 192F  
                         l4763 1445                           l4739 1405                           l4691 1B7E  
                         l4683 1B5D                           l4667 1B3D                           l5803 0BFA  
                         l5731 0B25                           l5723 0B11                           l5627 09D3  
                         l3981 12D4                           l3973 12B7                           l3877 1895  
                         l3789 193B                           l3797 1950                           l4677 1B53  
                         l5717 0B09                           l5725 0B14                           l5661 0A47  
                         l5645 0A25                           l5573 094E                           l3991 12F0  
                         l3983 12D9                           l4791 1467                           l4695 1B84  
                         l5751 0B4E                           l5735 0B31                           l5639 0A13  
                         l3993 12FA                           l3985 12DD                           l5665 0A4D  
                         l5649 0A30                           l5753 0B52                           l3899 1DE9  
                         l3979 12CA                           l4787 145F                           l5931 0DA5  
                         l5843 0CA2                           l5747 0B48                           l5683 0A7E  
                         l5667 0A4F                           l5587 0976                           l5579 096B  
                         l5499 08C2                           l3997 1310                           l4789 1460  
                         l5917 0D71                           l5829 0C56                           l5765 0B6E  
                         l5669 0A56                           l5839 0C7F                           l5695 0ABE  
                         l5599 0985                           l5945 0DFA                           l5865 0CC0  
                         l5777 0B96                           l5689 0AA8                           l5963 0E32  
                         l5883 0CEC                           l5875 0CE2                           l5795 0BE4  
                         l5973 0E50                           l5965 0E3D                           l5885 0D01  
                         l5975 0E53                           l5997 0EDF                           l5999 0EE2  
                         _LATB 010D                           u5105 12B8                           u5135 12CB  
                         u5305 1094                           u4605 1C1F                           u5165 12DE  
                         u5405 0788                           u5415 078E                           u4625 1C30  
                         u5265 104B                           u5195 12F1                           u5275 105B  
                         u6243 1724                           u4715 07E1                           u5285 107B  
                         u5445 07A4                           u5525 1F1A                           u4725 07EB  
                         u5295 108A                           u5455 07AA                           u5375 0750  
                         u6255 1771                           u4735 07F3                           u4665 1C46  
                         u4585 1C06                           u5385 0760                           u6265 1783  
                         _PIR1 0011                           u4915 1DFC                           u5555 1F35  
                         u4765 1932                           u4935 1E08                           u5495 1EF0  
                         u4855 189C                           u4695 07D7                           u4945 1E1C  
                         u4865 18A1                           u4785 1941                           u4955 1E28  
                         u4795 1948                           u5925 18E0                           u8245 09E5  
                         u4995 19AB                           u8605 0B85                           u8615 0B90  
                         u8375 0A90                           u8715 0C65                           u8635 0BA0  
                         u8645 0BAB                           u8925 0E17                           u8685 0C13  
                         u8855 0D20                           u8875 0D7E                           _TMR0 0015  
                         _OneH 0133                           _OneL 0134                   __CFG_WRT$OFF 0000  
                         _TwoH 0135                           _TwoL 0136                   _transmittops 1B2C  
                   _Actual_amp 0265                           _old1 01B6                           _old2 01B8  
                         _new1 0056                           _new2 0058                           _main 08B1  
                 ___ftpack@arg 00A0                     _Actual_vtg 0267                   ___ftpack@exp 00A3  
                         _tans 0164                           _temp 0063                   i1___lwtoft@c 0078  
                         fsr0h 0005                           fsr1h 0007                           fsr0l 0004  
                         indf0 0000                           indf1 0001                           fsr1l 0006  
                         btemp 007E                  i1___ftdiv@exp 002E                           ltemp 007E  
                         start 0551                           ttemp 007E                           wtemp 007E  
                __CFG_IESO$OFF 0000                __end_of_Delayms 18FB       disp_hex_window1@hex_data 00A8  
       ??_detect_display_error 00DB                  __CFG_MCLRE$ON 0000                   ___ftmul@cntr 00C3  
              __end_of_Display 0717                   ___ftmul@sign 00C4                  i1___ftmul@exp 002A  
     disp_hex_window2@hex_data 00A8                   ___fttol@exp1 00D2                   ___fttol@lval 00CE  
                __CFG_PLLEN$ON 0000                   _torchstatus1 01D4                   _torchstatus2 0165  
      i1___ftmul@f3_as_product 002B             enc2_port@portvalue 00A3                __end_of___aldiv 1E49  
                        ?_main 0070                __end_of___ftadd 1355                  __CFG_WDTE$OFF 0000  
              __end_of___ftdiv 10B5                __end_of___ftneg 2798                __end_of___ftmul 07CB  
                        _T1CON 0018                __end_of___fttol 1F57                __end_of___lwdiv 0800  
              __end_of___lwmod 1955                          i1l610 054D                          i1l452 0613  
                        i1l604 0133                          i1l461 0667                          i1l445 05DB  
                        i1l462 0685                          i1l455 062F                          i1l449 05F7  
                        i1l625 035B                          i1l458 064B                          i1l650 047A  
                        i1l651 04F1                          i1l652 0518                          i1l653 0526  
                        i1l637 03D6                          i1l581 009F                          i1l654 0529  
                        i1l647 0453                          i1l656 0531                          i1l648 045E  
                        i1l587 00A9                          i1l579 006E                          i1l965 187F  
                        _RCREG 0199                  ?_SCANENCODER1 0070                  ?_SCANENCODER2 0070  
                        _TMR1H 0017                          _TMR1L 0016                          _SPBRG 019B  
                        _PORTA 000C                          _PORTB 000D                          _PORTC 000E  
               i1___ftadd@exp1 003C                 i1___ftadd@exp2 003B                          _TORCH 006E  
                        _TRISA 008C                          _TRISB 008D                          _TRISC 008E  
                        _TXREG 019A                 i1___ftadd@sign 003A                          _TXSTA 019E  
                _cTorchPressfg 013D                          _Count 0132                     _Hi_setppwm 022A  
               __CFG_FCMEN$OFF 0000                   _wfstatusbyte 01D7                          _TypeU 0065  
                   _Displayarr 2058                          _iTest 0244                          _delay 0234  
                        _digit 005F           __end_of_capture_init 27DA                          _pfreq 0069  
                ___ftpack@sign 00A4                          _txonf 01D5                 __CFG_BOREN$OFF 0000  
   __size_of_disp_hex_window11 0001     __size_of_disp_hex_window22 0001               __end_ofi1___wmul 1892  
                        ltemp0 007E                          ltemp1 0082                          ltemp2 0086  
                        ltemp3 0080                 i1___ftdiv@cntr 002A                 i1___ftdiv@sign 002F  
             __end_of_PWM_init 1877                          ttemp0 007E                          ttemp1 0081  
                        ttemp2 0084                          ttemp3 0087                          ttemp4 007F  
                        status 0003            i1___wmul@multiplier 0070             __size_ofi1___aldiv 0082  
                        wtemp0 007E                          wtemp1 0080                          wtemp2 0082  
                        wtemp3 0084                          wtemp4 0086                          wtemp5 0088  
                        wtemp6 007F             __size_ofi1___ftadd 00F6             __size_ofi1___ftdiv 00A9  
           __size_ofi1___ftmul 00B4             __size_ofi1___fttol 0087                 i1___ftpack@arg 0070  
               i1___ftpack@exp 0073                __initialization 0553                    _system_init 27A2  
                 __end_of_main 1000          _universal_error_latch 0168                    ?i1___ftpack 0070  
               i1___ftmul@cntr 002E                 i1___ftmul@sign 002F     __size_of_Adaptive_base_pid 038F  
               __CFG_LPBOR$OFF 0000                    ?i1___lwtoft 0078                 i1___fttol@exp1 004A  
               i1___fttol@lval 0046                         ??_main 00ED                  ___fttol@sign1 00CD  
      __end_of_key_application 1471                 ??_SCANENCODER1 00A6                 ??_SCANENCODER2 00A5  
                   _Lo_setppwm 022C                  _count_transms 0230               __end_of___altoft 19CE  
                       i1S6081 206E                         _CCPR2H 0299                         _CCPR1L 0291  
                       _CCPR2L 0298                         _ANSELA 018C                         _ANSELB 018D  
             __end_of___ftpack 1C56                   _adaptivepidf 0137                         i1l1020 1D56  
                       i1l1133 1BD2                         i1l1134 1BDA                         i1l1126 1BBF  
                       i1l1217 1EB6                         i1l1157 1208                         i1l4201 1BD0  
                       i1l4203 1BC4                         i1l5011 1FC5                         i1l5101 1E92  
                       i1l4311 06F0                         i1l5111 1EB9                         i1l5103 1EA0  
                       i1l4321 0702                         i1l5033 10CC                         i1l4315 06F7  
                       i1l4323 0704                         i1l4307 06E9                         i1l5019 1FDE  
                       i1l5051 111D                         i1l5115 1EC7                         i1l5211 00D7  
                       i1l4253 0682                         i1l5109 1EAD                         i1l5221 00E7  
                       i1l5213 00D9                         i1l4271 06AD                         i1l4327 070C  
                       i1l4191 1BA6                         i1l5063 1139                         i1l5055 1125  
                       i1l5039 10E2                         i1l5231 00F9                         i1l5207 00C5  
                       i1l5215 00DC                         i1l4281 06BB                         i1l4265 069F  
                       i1l4257 0688                         i1l4193 1BAB                         i1l4185 1B95  
                       i1l5241 0116                         i1l5161 0058                         i1l4259 0694  
                       i1l5067 1141                         i1l5083 1E62                         i1l5147 003C  
                       i1l4293 06CE                         i1l4285 06C3                         i1l4189 1B9C  
                       i1l5341 0326                         i1l5325 0293                         i1l5149 0040  
                       i1l5351 0340                         i1l5263 0140                         i1l5159 0053  
                       i1l4297 06D6                         i1l5433 03EE                         i1l5337 0320  
                       i1l5329 0299                         i1l5281 0183                         i1l5353 0342  
                       i1l5273 015F                         i1l5193 00A4                         i1l5265 0146  
                       i1l5419 03E2                         i1l5259 0138                         i1l5453 0424  
                       i1l5445 0414                         i1l5365 0361                         i1l5269 0153  
                       i1l5197 00AD                         i1l4911 1DBE                         i1l4903 1DA5  
                       i1l5375 0374                         i1l4921 1191                         i1l4907 1DB0  
                       i1l4931 11A7                         i1l5459 0441                         i1l4925 1198  
                       i1l5469 0460                         i1l5493 0544                         i1l5397 03A4  
                       i1l5389 0387                         i1l4951 11DE                         i1l4943 11C1  
                       i1l4863 1879                         i1l5487 052F                         i1l4961 11FA  
                       i1l4953 11E3                         i1l4971 122C                         i1l4963 1204  
                       i1l4955 11E7                         i1l4893 1D77                         i1l4885 1D67  
                       i1l4981 1247                         i1l4949 11D4                   ?_send_status 0070  
                       i1l4895 1D85                         i1l4967 121A                         i1l4991 1F6E  
                       i1l4997 1F84               __end_of___lwtoft 181D                      ??_Delayms 00A2  
                       u560_25 1BA1                         u720_25 1142                         u705_25 1F96  
                       u721_25 1148                         u713_25 10EE                         u562_25 1BBA  
                       u706_25 1FA6                         u714_25 10FE                         u730_25 1EAE  
                       u707_25 1FC6                         u803_25 046D                         u564_25 1BCB  
                       u708_25 1FD5                         u716_25 1126                         u724_25 1E69  
                       u804_25 0487                         u709_25 1FDF                         u717_25 112C  
                       u805_25 04A4                         u806_25 04BF                         u727_25 1E93  
                       u568_25 1BE1                         u673_25 1D7A                         u770_25 0235  
                       u755_20 0108                         u675_25 1D86                         u667_25 1880  
                       u756_20 0109                         u676_25 1D9A                         u692_25 11D5  
                       u668_25 1885                         u677_25 1DA6                         u790_25 03B6  
                       u695_25 11E8                         u767_25 01A2                         u768_25 01BF  
                       u689_25 11C2                         u698_25 11FB                      ??_Display 0070  
               __CFG_PWRTE$OFF 0000                  ??_Timer0_init 00A0                         _TypeDP 006B  
                       ___ftge 1955                         _Tx_ptr 01C6                      ??___aldiv 00A8  
           __size_of_Send_Byte 000A                         ___wmul 1892              i1Update_PWM@Temp1 007A  
                    ??___ftadd 00AE                 __CFG_STVREN$ON 0000                      ??___ftdiv 00CB  
                    ??___ftneg 00A3                      ??___ftmul 00BB                      ??___fttol 00C9  
                       _encod1 0147                         _encod2 0060                         _chksum 013E  
                    ??___lwdiv 00A4                      ??___lwmod 00A4                         _arrptr 0138  
                       _error4 01CD                         _error8 0148                         _erroru 016B  
                       _pcount 0156                         _pportb 015D                         _rxdata 0062  
            __end_ofi1___aldiv 1DC7          ___ftmul@f3_as_product 00C0              __end_ofi1___ftadd 125F  
            __end_ofi1___ftdiv 2000              __end_ofi1___ftmul 1169              __end_ofi1___fttol 1ED0  
                   _Update_PWM 18FB                 _controller_out 0224            __size_ofi1___ftpack 0064  
               _wfspeedchangef 01EE        __end_of__initialization 05D1                     ___altoft@c 00A8  
          __size_ofi1___lwtoft 0013                     ___ftadd@f1 00A8                     ___ftadd@f2 00AB  
                   ___ftge@ff1 00B0                     ___ftge@ff2 00B3                i1___ftpack@sign 0074  
                   ___ftdiv@f1 00C8                     ___ftdiv@f2 00C5                     ___ftdiv@f3 00D0  
                   ___ftneg@f1 00A0      __size_of_disp_hex_window1 0056      __size_of_disp_hex_window2 0058  
                   ___ftmul@f1 00B5                     ___ftmul@f2 00B8                     ___fttol@f1 00C5  
           __size_of_enc1_port 0059             __size_of_enc2_port 0057                 __pcstackCOMMON 0070  
            _ISR_Function$1209 0054                   __pidataBANK0 0002                   __pidataBANK1 0803  
                 __pidataBANK2 0804                   __pidataBANK3 1848                   __pidataBANK4 1800  
          __end_of_Timer0_init 27C9                     ___lwtoft@c 00A8                   _capintervalf 01CA  
                    ?i1___wmul 0070               ?_key_application 0070          __size_of_capture_init 0011  
                    ?_PWM_init 0070                 _OPTION_REGbits 0095                i1___fttol@sign1 0045  
            __end_of_Send_Byte 27A2              i1___aldiv@divisor 0070              i1___aldiv@counter 0020  
                   __pbssBANK0 0056                     __pbssBANK2 0120                     __pbssBANK3 01A0  
                   __pbssBANK4 0220                     __pbssBANK5 02A0                     __pbssBANK6 0320  
              __CFG_VCAPEN$OFF 0000                  ?_ISR_Function 0070           __end_of_SCANENCODER1 1D45  
         __end_of_SCANENCODER2 1CCD              _cPowerOnErrSkipfg 013C                     __pmaintext 08B1  
                      ?___ftge 00B0                        ?___wmul 00A0                   _capture_init 27C9  
                   __pintentry 0004                      ?___altoft 00A8                      ?___ftpack 00A0  
           SCANENCODER1@result 00A7             SCANENCODER2@result 00A6                     ??i1___wmul 0074  
                    ?___lwtoft 00A8                     ??_PWM_init 00A0             __size_of_uart_init 0013  
                  ?_Update_PWM 00D3                     _creepspeed 0232              __end_of_enc1_port 1B2C  
            __end_of_enc2_port 1A7B                     _closeloopf 013F                     _displayonf 01EC  
                   _avgpperiod 0169                        _Delayms 18D3                 ??_ISR_Function 004B  
                      _Display 05D4           __size_of_send_status 0015                     _cyclestrtf 0145  
                      _cEditfg 005E                    _Timer0_init 27B8                   ?_system_init 0070  
                   _pidParams2 2796                        ___aldiv 1DC7                __size_of___ftge 003C  
__size_of_detect_display_error 00AB                        _cTestfg 01C8                   ??i1___ftpack 0075  
                      ___ftadd 125F                        ___ftdiv 100C                        ___ftneg 278F  
              __size_of___wmul 001C                        ___ftmul 0717                        ___fttol 1ED0  
                      ___lwdiv 07CB                        ___lwmod 1928                   ??i1___lwtoft 007B  
                   ??___altoft 00AC                     _read_enc1f 015E                     ??___ftpack 00A5  
                      _delinch 0122                        _gapfreq 0240                        __ptext1 27ED  
                      __ptext2 1B2C                        __ptext3 27A2                        __ptext4 181D  
                      __ptext5 2798                        __ptext6 1832                        __ptext7 1355  
                      __ptext8 1A7B                        __ptext9 0802                     _maxfmspeed 01E4  
    disp_hex_window11@hex_data 00A0                     ??___lwtoft 00AB                        _diswin1 01D9  
                      _inchcnt 016D                     _parclength 026B                      _T2CONbits 001C  
                      _rec_arr 02A0                        _plus111 0157               ___aldiv@dividend 00A4  
                      _plus222 0158                        _onesecf 0155                     _minfmspeed 01E6  
                      _pperiod 01BA                        _prevkey 016F                        clrloop0 1001  
         end_of_initialization 05D1      disp_hex_window22@hex_data 00A0                     _minuspara1 0153  
                   _minuspara2 0154             __end_ofi1___ftpack 1BF1                        init_ram 27AC  
                      initloop 27AD             __end_ofi1___lwtoft 27ED                     _kpressread 014C  
            Update_PWM@Dutycnt 00D9              __end_of_uart_init 2800               _disp_hex_window1 19CE  
             _disp_hex_window2 1A7B         _Adaptive_base_pid$1790 00EA         _Adaptive_base_pid$1788 00E4  
       _Adaptive_base_pid$1789 00E7            __size_of_Update_PWM 002D          i1Update_PWM@setwsduty 0076  
                 _crater_speed 0143                      _RCSTAbits 019D               ___aldiv@quotient 00AB  
                 __pstringtext 2000          i1___wmul@multiplicand 0072                     _setcurrent 012E  
                   _speeedrate 01EA                      _PORTAbits 000C                    _Total_Count 01AE  
                    _PORTCbits 000E                     _pluscount1 0159                     _pluscount2 015A  
             __CFG_FOSC$INTOSC 0000                     _setvoltage 005A                      _TRISAbits 008C  
                    _TRISCbits 008E                  _cWf2t4tmodefg 01C9                      i1___aldiv 1D45  
                    i1___ftadd 1169                      i1___ftdiv 1F57                      i1___ftmul 10B5  
                    i1___fttol 1E49                     _softstartf 01D2          __size_of_SCANENCODER1 0078  
        __size_of_SCANENCODER2 0077                    _CCP1CONbits 0293                    ___ftdiv@exp 00D3  
                   _statusptr1 0130                    _CCP2CONbits 029A                      _TXSTAbits 019E  
                   _pstowfstru 024E                  ?i1_Update_PWM 0076                _newsetwirespeed 0067  
                  ___ftmul@exp 00BF             enc1_port@portvalue 00A4             __end_of_Displayarr 206E  
               __end_of___ftge 1991                 __end_of___wmul 18AE                    _BAUDCTLbits 019F  
                ?_portpin_init 0070           __end_of_ISR_Function 0551                   _SCANENCODER1 1CCD  
                 _SCANENCODER2 1C56            start_initialization 0553              __size_ofi1___wmul 001B  
            __size_of_PWM_init 0019                     ?i1___aldiv 0070                     ?i1___ftadd 0030  
                   ?i1___ftdiv 0020                     ?i1___ftmul 0020                     ?i1___fttol 003D  
                ?_transmittops 0070               _comm_error_count 0140                      _Send_Byte 2798  
               ??i1_Update_PWM 0078                   _fixintervalf 01D0                  _rel_wirespeed 01C4  
              _cMtrOverLdDbCnt 022E           __end_of_lookup_table 2058                       ??___ftge 00B6  
                    _iGasDbCnt 01B4                       ??___wmul 00A4                    __pdataBANK0 006E  
                  __pdataBANK1 00EF                    __pdataBANK2 016E                    __pdataBANK3 01D9  
                  __pdataBANK4 0265           __size_of_system_init 000A                 ??_portpin_init 00A0  
           i1___aldiv@dividend 0074                Update_PWM@Temp1 00D7                      _Tsampling 01E1  
              _scaled_baseval2 012C              __size_of___altoft 003D                   Delayms@delay 00A0  
            __size_of___ftpack 0065                   ??_Update_PWM 00D5                    __pbssBIGRAM 2796  
                    ___latbits 0003        key_application@keypress 00DD              __size_of___lwtoft 0015  
                __pcstackBANK0 0020                  __pcstackBANK1 00A0       __size_of_key_application 011C  
               ??_transmittops 00A1                      _enc1_port 1AD3                       ?_Delayms 00A0  
                    _enc2_port 1A24             _iPowerOnErrSkipCnt 0242             i1___aldiv@quotient 0022  
                   ?_Send_Byte 0070                       ?_Display 0070               ___lwdiv@dividend 00A2  
                 ?_Timer0_init 0070             __end_of_Update_PWM 1928                       ?___aldiv 00A0  
                    _disp1term 0236                      _disp2term 0238                      _disp3term 023A  
                    _disp4term 023C                       ?___ftadd 00A8                       ?___ftdiv 00C5  
             _prevsetwirespeed 012A                       ?___ftneg 00A0                       ?___ftmul 00B5  
                     ?___fttol 00C5                       ?___lwdiv 00A0                       ?___lwmod 00A0  
                    __pswtext1 206E                      _mili1_100 014D                      _mili2_100 014E  
                 _cGasRlyClrfg 0139                      _count_1ms 01B2                      _count_2ms 0142  
     __end_of_disp_hex_window1 1A24       __end_of_disp_hex_window2 1AD3                      _count_pid 01CC  
                    _inchkeyon 01D1                    ??i1___aldiv 0078   __end_of_detect_display_error 08B1  
                  ??i1___ftadd 0036                    ??i1___ftdiv 0026                   _integral_old 01A9  
                 _integral_new 01A6                    ??i1___ftmul 0026                    ??i1___fttol 0041  
             ___lwdiv@quotient 00A5                   _scalefactor2 01E8                      _error_old 01A3  
                    _error_new 01A0                  ??_send_status 00A1                      _recchksum 015F  
                   ?_enc1_port 0070                ___aldiv@divisor 00A0                     ?_enc2_port 0070  
              ___aldiv@counter 00A9                 ___wmul@product 00A4                       _LATAbits 010C  
                     _LATBbits 010D                       _LATCbits 010E                      _minoutmax 0227  
                    clear_ram0 1000                      _recstatus 01C2                       _PIE1bits 0091  
                  _creep_speed 0144                       _PIE2bits 0092                      _prevTORCH 016E  
                     _PIR1bits 0011                       _PIR2bits 0012                _universal_error 0167  
                  _closeloop1f 01CB                      _uart_init 27ED          __size_of_ISR_Function 054D  
                    _pluspara1 015B                      _pluspara2 015C                      _togglepin 01ED  
            ___wmul@multiplier 00A0                       i1___wmul 1877                       _PWM_init 185E  
                  _dispupdatef 006F                      _startptr1 0163                      _psstatusu 006C  
         __end_ofi1_Update_PWM 18D3                      _wfstatusu 006D                    _mahesh_test 0269  
                _cRelSpeedSign 01C7                    _count_1msec 0141           __end_of_portpin_init 1848  
                     _Fltpfreq 0120                    ??_Send_Byte 00A0               __size_of_Delayms 0028  
                 _ISR_Function 0004               __size_of_Display 0143              ??_key_application 00DB  
          __end_of_send_status 1832                    _firstpulse1 0149                    _firstpulse2 014A  
               _cMtrOverLdDbfg 013A                   _secondpulse1 0160                   _secondpulse2 0161  
                   ?_uart_init 0070               __size_of___aldiv 0082               __size_of___ftadd 00F6  
             __size_of___ftdiv 00A9               __size_of___ftneg 0009                       ___altoft 1991  
             __size_of___ftmul 00B4               __size_of___fttol 0087               __size_of___lwdiv 0035  
             __size_of___lwmod 002D           __end_of_transmittops 1B8D                       ___ftpack 1BF1  
                     ___lwtoft 1808            i1Update_PWM@Dutycnt 007C                   _send_statusf 0162  
                  _error_code1 01CE                    _error_code2 01CF                       _delinch1 0124  
                 _lookup_table 2000                ___lwdiv@divisor 00A0                ___lwdiv@counter 00A7  
                     __ptext10 0801                       __ptext11 19CE                       __ptext20 1AD3  
                     __ptext12 1928                       __ptext21 185E                       __ptext13 07CB  
                     __ptext30 100C                       __ptext22 18D3                       __ptext14 0806  
                     __ptext31 125F                       __ptext23 1471                       __ptext15 27C9  
                     __ptext40 10B5                       __ptext32 1991                       __ptext24 1892  
                     __ptext16 27B8                       __ptext41 1F57                       __ptext33 1BF1  
                     __ptext25 1808                       __ptext17 1C56                       __ptext42 1169  
                     __ptext34 1DC7                       __ptext26 1ED0                       __ptext18 1A24  
                     __ptext43 1B8D                       __ptext35 18FB                       __ptext27 278F  
                     __ptext19 1CCD                       __ptext44 1D45                       __ptext28 0717  
                     __ptext45 18AE                       __ptext37 1877                       __ptext29 1955  
                     __ptext46 05D4                       __ptext38 27DA                       __ptext39 1E49  
                     _enccount 0146                       _commandu 01D8             Send_Byte@transbyte 00A0  
                  ??_enc1_port 00A0                    ??_enc2_port 00A0                  __size_of_main 074F  
                     _minus111 014F                       _minus222 0150                       _setpfreq 024C  
                ?_capture_init 0070                       _weldmode 0064           _detect_display_error 0806  
         __size_of_Timer0_init 0011                       _torchonf 01D3                   _prevFltpfreq 024A  
                  _OSCTUNEbits 0098                     _INTCONbits 000B                    _PID_sParams 0320  
                  _minuscount1 0151                    _minuscount2 0152                    _recpsstatus 01C0  
               _prevsetcurrent 01BC                     Delayms@xxx 00A2                     Delayms@yyy 00A4  
                     intlevel1 0000                    _send_status 181D               ___lwmod@dividend 00A2  
               _prevsetvoltage 01BE              _disp_hex_window11 0801              _disp_hex_window22 0802  
            __CFG_CLKOUTEN$OFF 0000             ?_disp_hex_window11 00A0             ?_disp_hex_window22 00A0  
                   _OSCCONbits 0099                    _openloopcnt 0248                  ??_system_init 00A0  
               ??_capture_init 00A0          ?_detect_display_error 0070                    ??_uart_init 00A0  
          ??_disp_hex_window11 00A2            ??_disp_hex_window22 00A2          __size_ofi1_Update_PWM 0025  
                 _cMtrOverLdfg 013B              _Adaptive_base_pid 1471                  _disparclength 023E  
              ___lwmod@divisor 00A0             ?_Adaptive_base_pid 0070                ___lwmod@counter 00A5  
            ?_disp_hex_window1 00A8              ?_disp_hex_window2 00A8                   ___aldiv@sign 00AA  
        __size_of_portpin_init 0016             ??_disp_hex_window1 00AA             ??_disp_hex_window2 00AA  
                 _Total_Period 0220                   _setwirespeed 005C            ??_Adaptive_base_pid 00DB  
    __end_of_disp_hex_window11 0802      __end_of_disp_hex_window22 0803                   i1_Update_PWM 18AE  
        __size_of_transmittops 0061  
