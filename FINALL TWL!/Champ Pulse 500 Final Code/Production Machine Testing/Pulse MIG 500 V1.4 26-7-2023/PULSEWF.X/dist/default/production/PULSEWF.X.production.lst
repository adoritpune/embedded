

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Dec 16 17:32:11 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1788
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	idataBANK4,global,class=CODE,delta=2
     9                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	text42,local,class=CODE,merge=1,delta=2
    70                           	psect	text43,local,class=CODE,merge=1,delta=2
    71                           	psect	text44,local,class=CODE,merge=1,delta=2
    72                           	psect	text45,local,class=CODE,merge=1,delta=2
    73                           	psect	swtext1,local,class=CONST,delta=2
    74                           	dabs	1,0xCA0,32
    75                           	dabs	1,0xC36,58
    76                           	dabs	1,0x2796,0,_pidParams2
    77                           	dabs	1,0x7E,2
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0118                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011B                     	;# 
   141  011C                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  020C                     	;# 
   186  020D                     	;# 
   187  020E                     	;# 
   188  0210                     	;# 
   189  0211                     	;# 
   190  0211                     	;# 
   191  0212                     	;# 
   192  0212                     	;# 
   193  0213                     	;# 
   194  0213                     	;# 
   195  0214                     	;# 
   196  0214                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0216                     	;# 
   202  0216                     	;# 
   203  0217                     	;# 
   204  0217                     	;# 
   205  028C                     	;# 
   206  028D                     	;# 
   207  028E                     	;# 
   208  0291                     	;# 
   209  0291                     	;# 
   210  0292                     	;# 
   211  0293                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  029A                     	;# 
   216  030C                     	;# 
   217  030D                     	;# 
   218  030E                     	;# 
   219  0311                     	;# 
   220  0311                     	;# 
   221  0312                     	;# 
   222  0313                     	;# 
   223  038C                     	;# 
   224  038D                     	;# 
   225  038E                     	;# 
   226  0390                     	;# 
   227  0391                     	;# 
   228  0392                     	;# 
   229  0393                     	;# 
   230  0394                     	;# 
   231  0395                     	;# 
   232  0396                     	;# 
   233  0397                     	;# 
   234  0398                     	;# 
   235  0399                     	;# 
   236  039D                     	;# 
   237  039E                     	;# 
   238  039F                     	;# 
   239  0511                     	;# 
   240  0513                     	;# 
   241  051A                     	;# 
   242  0591                     	;# 
   243  0592                     	;# 
   244  0592                     	;# 
   245  0593                     	;# 
   246  0594                     	;# 
   247  0594                     	;# 
   248  0595                     	;# 
   249  0596                     	;# 
   250  0596                     	;# 
   251  0E91                     	;# 
   252  0E92                     	;# 
   253  0E93                     	;# 
   254  0E94                     	;# 
   255  0E95                     	;# 
   256  0E96                     	;# 
   257  0E97                     	;# 
   258  0E98                     	;# 
   259  0E99                     	;# 
   260  0E9A                     	;# 
   261  0E9B                     	;# 
   262  0E9C                     	;# 
   263  0E9D                     	;# 
   264  0E9E                     	;# 
   265  0E9F                     	;# 
   266  0EA0                     	;# 
   267  0EA1                     	;# 
   268  0EA1                     	;# 
   269  0EA2                     	;# 
   270  0EA3                     	;# 
   271  0EA3                     	;# 
   272  0EA4                     	;# 
   273  0EA5                     	;# 
   274  0EA5                     	;# 
   275  0EA6                     	;# 
   276  0EA7                     	;# 
   277  0EA7                     	;# 
   278  0EA8                     	;# 
   279  0EA9                     	;# 
   280  0EAA                     	;# 
   281  0EAB                     	;# 
   282  0EAC                     	;# 
   283  0EAD                     	;# 
   284  0EAE                     	;# 
   285  0EAF                     	;# 
   286  0EB1                     	;# 
   287  0EB2                     	;# 
   288  0EB3                     	;# 
   289  0EB4                     	;# 
   290  0EB5                     	;# 
   291  0EB6                     	;# 
   292  0EB7                     	;# 
   293  0EB8                     	;# 
   294  0EB9                     	;# 
   295  0EBA                     	;# 
   296  0EBB                     	;# 
   297  0EBC                     	;# 
   298  0EBD                     	;# 
   299  0EBE                     	;# 
   300  0EBF                     	;# 
   301  0EC0                     	;# 
   302  0EC1                     	;# 
   303  0EC1                     	;# 
   304  0EC2                     	;# 
   305  0EC3                     	;# 
   306  0EC3                     	;# 
   307  0EC4                     	;# 
   308  0EC5                     	;# 
   309  0EC5                     	;# 
   310  0EC6                     	;# 
   311  0EC7                     	;# 
   312  0EC7                     	;# 
   313  0EC8                     	;# 
   314  0EC9                     	;# 
   315  0ECA                     	;# 
   316  0ECB                     	;# 
   317  0ECC                     	;# 
   318  0ECD                     	;# 
   319  0ECE                     	;# 
   320  0ECF                     	;# 
   321  0ED1                     	;# 
   322  0ED2                     	;# 
   323  0ED3                     	;# 
   324  0ED4                     	;# 
   325  0ED5                     	;# 
   326  0ED6                     	;# 
   327  0ED7                     	;# 
   328  0ED8                     	;# 
   329  0ED9                     	;# 
   330  0EDA                     	;# 
   331  0EDB                     	;# 
   332  0EDC                     	;# 
   333  0EDD                     	;# 
   334  0EDE                     	;# 
   335  0EDF                     	;# 
   336  0EE0                     	;# 
   337  0EE1                     	;# 
   338  0EE1                     	;# 
   339  0EE2                     	;# 
   340  0EE3                     	;# 
   341  0EE3                     	;# 
   342  0EE4                     	;# 
   343  0EE5                     	;# 
   344  0EE5                     	;# 
   345  0EE6                     	;# 
   346  0EE7                     	;# 
   347  0EE7                     	;# 
   348  0EE8                     	;# 
   349  0EE9                     	;# 
   350  0EEA                     	;# 
   351  0EEB                     	;# 
   352  0EEC                     	;# 
   353  0EED                     	;# 
   354  0EEE                     	;# 
   355  0EEF                     	;# 
   356  0F11                     	;# 
   357  0F12                     	;# 
   358  0F13                     	;# 
   359  0F14                     	;# 
   360  0F15                     	;# 
   361  0F16                     	;# 
   362  0F17                     	;# 
   363  0F18                     	;# 
   364  0F19                     	;# 
   365  0F1A                     	;# 
   366  0F1B                     	;# 
   367  0F1C                     	;# 
   368  0F1D                     	;# 
   369  0F1E                     	;# 
   370  0F1F                     	;# 
   371  0F20                     	;# 
   372  0F21                     	;# 
   373  0F21                     	;# 
   374  0F22                     	;# 
   375  0F23                     	;# 
   376  0F23                     	;# 
   377  0F24                     	;# 
   378  0F25                     	;# 
   379  0F25                     	;# 
   380  0F26                     	;# 
   381  0F27                     	;# 
   382  0F27                     	;# 
   383  0F28                     	;# 
   384  0F29                     	;# 
   385  0F2A                     	;# 
   386  0F2B                     	;# 
   387  0F2C                     	;# 
   388  0F2D                     	;# 
   389  0F2E                     	;# 
   390  0F2F                     	;# 
   391  0FE4                     	;# 
   392  0FE5                     	;# 
   393  0FE6                     	;# 
   394  0FE7                     	;# 
   395  0FE8                     	;# 
   396  0FE9                     	;# 
   397  0FEA                     	;# 
   398  0FEB                     	;# 
   399  0FED                     	;# 
   400  0FEE                     	;# 
   401  0FEF                     	;_pidParams2
   402                           
   403                           	psect	idataBANK0
   404  07FE                     __pidataBANK0:	
   405                           
   406                           ;initializer for _dispupdatef
   407  07FE  3401               	retlw	1
   408                           
   409                           	psect	idataBANK1
   410  07FF                     __pidataBANK1:	
   411                           
   412                           ;initializer for _key
   413  07FF  3458               	retlw	88
   414                           
   415                           	psect	idataBANK2
   416  1878                     __pidataBANK2:	
   417                           
   418                           ;initializer for _TORCH
   419  1878  3458               	retlw	88
   420                           
   421                           ;initializer for _prevTORCH
   422  1879  34FF               	retlw	255
   423                           
   424                           ;initializer for _prevkey
   425  187A  345A               	retlw	90
   426                           
   427                           ;initializer for _wfspeedchangef
   428  187B  3401               	retlw	1
   429                           
   430                           	psect	idataBANK3
   431  1923                     __pidataBANK3:	
   432                           
   433                           ;initializer for _diswin1
   434  1923  3430               	retlw	48
   435  1924  3430               	retlw	48
   436  1925  3430               	retlw	48
   437  1926  3430               	retlw	48
   438  1927  3430               	retlw	48
   439  1928  3430               	retlw	48
   440  1929  3430               	retlw	48
   441  192A  3430               	retlw	48
   442                           
   443                           ;initializer for _Tsampling
   444  192B  3400               	retlw	0
   445  192C  3480               	retlw	128
   446  192D  343F               	retlw	63
   447                           
   448                           ;initializer for _Actual_amp
   449  192E  34FF               	retlw	255
   450  192F  34FF               	retlw	255
   451                           
   452                           ;initializer for _maxfmspeed
   453  1930  34EE               	retlw	238
   454  1931  3402               	retlw	2
   455                           
   456                           ;initializer for _minfmspeed
   457  1932  3432               	retlw	50
   458  1933  3400               	retlw	0
   459                           
   460                           ;initializer for _scalefactor2
   461  1934  3447               	retlw	71
   462  1935  3400               	retlw	0
   463                           
   464                           ;initializer for _displayonf
   465  1936  3401               	retlw	1
   466                           
   467                           ;initializer for _togglepin
   468  1937  3401               	retlw	1
   469                           
   470                           	psect	idataBANK4
   471  07F8                     __pidataBANK4:	
   472                           
   473                           ;initializer for _Actual_vtg
   474  07F8  34FF               	retlw	255
   475  07F9  34FF               	retlw	255
   476                           
   477                           ;initializer for _mahesh_test
   478  07FA  3432               	retlw	50
   479  07FB  3400               	retlw	0
   480                           
   481                           ;initializer for _parclength
   482  07FC  34FF               	retlw	255
   483  07FD  34FF               	retlw	255
   484                           
   485                           	psect	stringtext
   486  2000                     __pstringtext:	
   487  2000                     _lookup_table:	
   488  2000  343F               	retlw	63
   489  2001  3400               	retlw	0
   490  2002  3406               	retlw	6
   491  2003  3400               	retlw	0
   492  2004  345B               	retlw	91
   493  2005  3400               	retlw	0
   494  2006  344F               	retlw	79
   495  2007  3400               	retlw	0
   496  2008  3466               	retlw	102
   497  2009  3400               	retlw	0
   498  200A  346D               	retlw	109
   499  200B  3400               	retlw	0
   500  200C  347D               	retlw	125
   501  200D  3400               	retlw	0
   502  200E  3407               	retlw	7
   503  200F  3400               	retlw	0
   504  2010  347F               	retlw	127
   505  2011  3400               	retlw	0
   506  2012  346F               	retlw	111
   507  2013  3400               	retlw	0
   508  2014  3480               	retlw	128
   509  2015  3400               	retlw	0
   510  2016  3477               	retlw	119
   511  2017  3400               	retlw	0
   512  2018  347C               	retlw	124
   513  2019  3400               	retlw	0
   514  201A  3439               	retlw	57
   515  201B  3400               	retlw	0
   516  201C  345E               	retlw	94
   517  201D  3400               	retlw	0
   518  201E  3479               	retlw	121
   519  201F  3400               	retlw	0
   520  2020  3471               	retlw	113
   521  2021  3400               	retlw	0
   522  2022  343D               	retlw	61
   523  2023  3400               	retlw	0
   524  2024  3476               	retlw	118
   525  2025  3400               	retlw	0
   526  2026  3406               	retlw	6
   527  2027  3400               	retlw	0
   528  2028  341E               	retlw	30
   529  2029  3400               	retlw	0
   530  202A  3470               	retlw	112
   531  202B  3400               	retlw	0
   532  202C  3438               	retlw	56
   533  202D  3400               	retlw	0
   534  202E  3455               	retlw	85
   535  202F  3400               	retlw	0
   536  2030  3454               	retlw	84
   537  2031  3400               	retlw	0
   538  2032  343F               	retlw	63
   539  2033  3400               	retlw	0
   540  2034  3473               	retlw	115
   541  2035  3400               	retlw	0
   542  2036  3467               	retlw	103
   543  2037  3400               	retlw	0
   544  2038  3450               	retlw	80
   545  2039  3400               	retlw	0
   546  203A  346D               	retlw	109
   547  203B  3400               	retlw	0
   548  203C  3478               	retlw	120
   549  203D  3400               	retlw	0
   550  203E  341C               	retlw	28
   551  203F  3400               	retlw	0
   552  2040  343E               	retlw	62
   553  2041  3400               	retlw	0
   554  2042  346A               	retlw	106
   555  2043  3400               	retlw	0
   556  2044  3468               	retlw	104
   557  2045  3400               	retlw	0
   558  2046  346E               	retlw	110
   559  2047  3400               	retlw	0
   560  2048  3489               	retlw	137
   561  2049  3400               	retlw	0
   562  204A  3400               	retlw	0
   563  204B  3400               	retlw	0
   564  204C  3440               	retlw	64
   565  204D  3400               	retlw	0
   566  204E  34FF               	retlw	255
   567  204F  3400               	retlw	0
   568  2050  3400               	retlw	0
   569  2051  3400               	retlw	0
   570  2052  3400               	retlw	0
   571  2053  3400               	retlw	0
   572  2054  3400               	retlw	0
   573  2055  3400               	retlw	0
   574  2056  3400               	retlw	0
   575  2057  3400               	retlw	0
   576  2058                     __end_of_lookup_table:	
   577  2058                     _Displayarr:	
   578  2058  343F               	retlw	63
   579  2059  3400               	retlw	0
   580  205A  3406               	retlw	6
   581  205B  3400               	retlw	0
   582  205C  345B               	retlw	91
   583  205D  3400               	retlw	0
   584  205E  344F               	retlw	79
   585  205F  3400               	retlw	0
   586  2060  3466               	retlw	102
   587  2061  3400               	retlw	0
   588  2062  346D               	retlw	109
   589  2063  3400               	retlw	0
   590  2064  347D               	retlw	125
   591  2065  3400               	retlw	0
   592  2066  3407               	retlw	7
   593  2067  3400               	retlw	0
   594  2068  347F               	retlw	127
   595  2069  3400               	retlw	0
   596  206A  346F               	retlw	111
   597  206B  3400               	retlw	0
   598  206C  34FF               	retlw	255
   599  206D  3400               	retlw	0
   600  206E                     __end_of_Displayarr:	
   601  000B                     _INTCONbits	set	11
   602  0011                     _PIR1	set	17
   603  0011                     _PIR1bits	set	17
   604  0012                     _PIR2bits	set	18
   605  000C                     _PORTA	set	12
   606  000C                     _PORTAbits	set	12
   607  000D                     _PORTB	set	13
   608  000E                     _PORTC	set	14
   609  000E                     _PORTCbits	set	14
   610  001B                     _PR2	set	27
   611  0018                     _T1CON	set	24
   612  001C                     _T2CONbits	set	28
   613  0015                     _TMR0	set	21
   614  0017                     _TMR1H	set	23
   615  0016                     _TMR1L	set	22
   616  0095                     _OPTION_REGbits	set	149
   617  0099                     _OSCCONbits	set	153
   618  0098                     _OSCTUNEbits	set	152
   619  0091                     _PIE1bits	set	145
   620  0092                     _PIE2bits	set	146
   621  008C                     _TRISA	set	140
   622  008C                     _TRISAbits	set	140
   623  008D                     _TRISB	set	141
   624  008E                     _TRISC	set	142
   625  008E                     _TRISCbits	set	142
   626  010C                     _LATAbits	set	268
   627  010D                     _LATB	set	269
   628  010D                     _LATBbits	set	269
   629  010E                     _LATCbits	set	270
   630  018C                     _ANSELA	set	396
   631  018D                     _ANSELB	set	397
   632  019F                     _BAUDCTLbits	set	415
   633  0199                     _RCREG	set	409
   634  019D                     _RCSTAbits	set	413
   635  019B                     _SPBRG	set	411
   636  019A                     _TXREG	set	410
   637  019E                     _TXSTA	set	414
   638  019E                     _TXSTAbits	set	414
   639  0293                     _CCP1CONbits	set	659
   640  029A                     _CCP2CONbits	set	666
   641  0291                     _CCPR1L	set	657
   642  0299                     _CCPR2H	set	665
   643  0298                     _CCPR2L	set	664
   644                           
   645                           ; #config settings
   646  0000                     
   647                           	psect	cinit
   648  04D3                     start_initialization:	
   649  04D3                     __initialization:		;BIGRAM
   650                           
   651                           ; Clear objects allocated to BIGRAM
   652  04D3  3096               	movlw	low (0+10134)
   653  04D4  0084               	movwf	4
   654  04D5  3027               	movlw	high (0+10134)
   655  04D6  0085               	movwf	5
   656  04D7  305A               	movlw	90
   657  04D8  00FE               	movwf	btemp
   658  04D9  3000               	movlw	0
   659  04DA  00FF               	movwf	btemp+1
   660  04DB  3198  20A5  3184   	fcall	clear_ram0
   661                           
   662                           ; Clear objects allocated to BANK0
   663  04DE  3054               	movlw	low __pbssBANK0
   664  04DF  0084               	movwf	4
   665  04E0  3000               	movlw	high __pbssBANK0
   666  04E1  0085               	movwf	5
   667  04E2  301B               	movlw	27
   668  04E3  00FE               	movwf	btemp
   669  04E4  3000               	movlw	0
   670  04E5  00FF               	movwf	btemp+1
   671  04E6  3198  20A5  3184   	fcall	clear_ram0
   672                           
   673                           ; Clear objects allocated to BANK2
   674  04E9  3020               	movlw	low __pbssBANK2
   675  04EA  0084               	movwf	4
   676  04EB  3001               	movlw	high __pbssBANK2
   677  04EC  0085               	movwf	5
   678  04ED  304C               	movlw	76
   679  04EE  00FE               	movwf	btemp
   680  04EF  3000               	movlw	0
   681  04F0  00FF               	movwf	btemp+1
   682  04F1  3198  20A5  3184   	fcall	clear_ram0
   683                           
   684                           ; Clear objects allocated to BANK3
   685  04F4  30A0               	movlw	low __pbssBANK3
   686  04F5  0084               	movwf	4
   687  04F6  3001               	movlw	high __pbssBANK3
   688  04F7  0085               	movwf	5
   689  04F8  303A               	movlw	58
   690  04F9  00FE               	movwf	btemp
   691  04FA  3000               	movlw	0
   692  04FB  00FF               	movwf	btemp+1
   693  04FC  3198  20A5  3184   	fcall	clear_ram0
   694                           
   695                           ; Clear objects allocated to BANK4
   696  04FF  3020               	movlw	low __pbssBANK4
   697  0500  0084               	movwf	4
   698  0501  3002               	movlw	high __pbssBANK4
   699  0502  0085               	movwf	5
   700  0503  303B               	movlw	59
   701  0504  00FE               	movwf	btemp
   702  0505  3000               	movlw	0
   703  0506  00FF               	movwf	btemp+1
   704  0507  3198  20A5  3184   	fcall	clear_ram0
   705                           
   706                           ; Clear objects allocated to BANK5
   707  050A  30A0               	movlw	low __pbssBANK5
   708  050B  0084               	movwf	4
   709  050C  3002               	movlw	high __pbssBANK5
   710  050D  0085               	movwf	5
   711  050E  3016               	movlw	22
   712  050F  00FE               	movwf	btemp
   713  0510  3000               	movlw	0
   714  0511  00FF               	movwf	btemp+1
   715  0512  3198  20A5  3184   	fcall	clear_ram0
   716                           
   717                           ; Clear objects allocated to BANK6
   718  0515  3020               	movlw	low __pbssBANK6
   719  0516  0084               	movwf	4
   720  0517  3003               	movlw	high __pbssBANK6
   721  0518  0085               	movwf	5
   722  0519  3049               	movlw	73
   723  051A  00FE               	movwf	btemp
   724  051B  3000               	movlw	0
   725  051C  00FF               	movwf	btemp+1
   726  051D  3198  20A5  3184   	fcall	clear_ram0
   727                           
   728                           ; Initialize objects allocated to BANK0
   729  0520  3187  27FE  3184   	fcall	__pidataBANK0	;fetch initializer
   730  0523  00EF               	movwf	__pdataBANK0& (0+127)
   731                           
   732                           ; Initialize objects allocated to BANK1
   733  0524  0021               	movlb	1	; select bank1
   734  0525  3187  27FF  3184   	fcall	__pidataBANK1	;fetch initializer
   735  0528  00EF               	movwf	__pdataBANK1& (0+127)
   736                           
   737                           ; Initialize objects allocated to BANK2
   738  0529  3078               	movlw	low __pidataBANK2
   739  052A  0084               	movwf	4
   740  052B  3098               	movlw	(high __pidataBANK2)| (0+128)
   741  052C  0085               	movwf	5
   742  052D  306C               	movlw	low __pdataBANK2
   743  052E  0086               	movwf	6
   744  052F  3001               	movlw	high __pdataBANK2
   745  0530  0087               	movwf	7
   746  0531  3000               	movlw	0
   747  0532  00FF               	movwf	btemp+1
   748  0533  3004               	movlw	4
   749  0534  3198  2099  3184   	fcall	init_ram
   750                           
   751                           ; Initialize objects allocated to BANK3
   752  0537  3023               	movlw	low __pidataBANK3
   753  0538  0084               	movwf	4
   754  0539  3099               	movlw	(high __pidataBANK3)| (0+128)
   755  053A  0085               	movwf	5
   756  053B  30DA               	movlw	low __pdataBANK3
   757  053C  0086               	movwf	6
   758  053D  3001               	movlw	high __pdataBANK3
   759  053E  0087               	movwf	7
   760  053F  3000               	movlw	0
   761  0540  00FF               	movwf	btemp+1
   762  0541  3015               	movlw	21
   763  0542  3198  2099  3184   	fcall	init_ram
   764                           
   765                           ; Initialize objects allocated to BANK4
   766  0545  30F8               	movlw	low __pidataBANK4
   767  0546  0084               	movwf	4
   768  0547  3087               	movlw	(high __pidataBANK4)| (0+128)
   769  0548  0085               	movwf	5
   770  0549  305B               	movlw	low __pdataBANK4
   771  054A  0086               	movwf	6
   772  054B  3002               	movlw	high __pdataBANK4
   773  054C  0087               	movwf	7
   774  054D  3000               	movlw	0
   775  054E  00FF               	movwf	btemp+1
   776  054F  3006               	movlw	6
   777  0550  3198  2099         	fcall	init_ram
   778  0552                     end_of_initialization:	
   779                           ;End of C runtime variable initialization code
   780                           
   781  0552                     __end_of__initialization:	
   782  0552  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   783  0553  0020               	movlb	0
   784  0554  3189  292F         	ljmp	_main	;jump to C main() function
   785                           
   786                           	psect	bssBANK0
   787  0054                     __pbssBANK0:	
   788  0054                     _new1:	
   789  0054                     	ds	2
   790  0056                     _new2:	
   791  0056                     	ds	2
   792  0058                     _setvoltage:	
   793  0058                     	ds	2
   794  005A                     _setwirespeed:	
   795  005A                     	ds	2
   796  005C                     _crater_speed:	
   797  005C                     	ds	1
   798  005D                     _digit:	
   799  005D                     	ds	1
   800  005E                     _encod1:	
   801  005E                     	ds	1
   802  005F                     _encod2:	
   803  005F                     	ds	1
   804  0060                     _i:	
   805  0060                     	ds	1
   806  0061                     _minuspara2:	
   807  0061                     	ds	1
   808  0062                     _onesecf:	
   809  0062                     	ds	1
   810  0063                     _portbstatus:	
   811  0063                     	ds	1
   812  0064                     _rxdata:	
   813  0064                     	ds	1
   814  0065                     _startptr1:	
   815  0065                     	ds	1
   816  0066                     _temp:	
   817  0066                     	ds	1
   818  0067                     _weldmode:	
   819  0067                     	ds	1
   820  0068                     _TypeU:	
   821  0068                     	ds	2
   822  006A                     _newsetwirespeed:	
   823  006A                     	ds	2
   824  006C                     _TypeDP:	
   825  006C                     	ds	1
   826  006D                     _inchcnt:	
   827  006D                     	ds	1
   828  006E                     _psstatusu:	
   829  006E                     	ds	1
   830                           
   831                           	psect	dataBANK0
   832  006F                     __pdataBANK0:	
   833  006F                     _dispupdatef:	
   834  006F                     	ds	1
   835                           
   836                           	psect	dataBANK1
   837  00EF                     __pdataBANK1:	
   838  00EF                     _key:	
   839  00EF                     	ds	1
   840                           
   841                           	psect	bssBANK2
   842  0120                     __pbssBANK2:	
   843  0120                     _error_new:	
   844  0120                     	ds	3
   845  0123                     _integral_new:	
   846  0123                     	ds	3
   847  0126                     _Fltpfreq:	
   848  0126                     	ds	2
   849  0128                     _ijk:	
   850  0128                     	ds	2
   851  012A                     _lmn:	
   852  012A                     	ds	2
   853  012C                     _scaled_baseval2:	
   854  012C                     	ds	2
   855  012E                     _setcurrent:	
   856  012E                     	ds	2
   857  0130                     _statusptr1:	
   858  0130                     	ds	2
   859  0132                     _Count:	
   860  0132                     	ds	1
   861  0133                     _OneH:	
   862  0133                     	ds	1
   863  0134                     _OneL:	
   864  0134                     	ds	1
   865  0135                     _TwoH:	
   866  0135                     	ds	1
   867  0136                     _TwoL:	
   868  0136                     	ds	1
   869  0137                     _adaptivepidf:	
   870  0137                     	ds	1
   871  0138                     _arrptr:	
   872  0138                     	ds	1
   873  0139                     _cEditfg:	
   874  0139                     	ds	1
   875  013A                     _cGasRlyClrfg:	
   876  013A                     	ds	1
   877  013B                     _cRelSpeedSign:	
   878  013B                     	ds	1
   879  013C                     _cTestfg:	
   880  013C                     	ds	1
   881  013D                     _cWf2t4tmodefg:	
   882  013D                     	ds	1
   883  013E                     _chksum:	
   884  013E                     	ds	1
   885  013F                     _closeloopf:	
   886  013F                     	ds	1
   887  0140                     _comm_error_count:	
   888  0140                     	ds	1
   889  0141                     _count_1msec:	
   890  0141                     	ds	1
   891  0142                     _count_2ms:	
   892  0142                     	ds	1
   893  0143                     _creep_speed:	
   894  0143                     	ds	1
   895  0144                     _cyclestrtf:	
   896  0144                     	ds	1
   897  0145                     _enccount:	
   898  0145                     	ds	1
   899  0146                     _error8:	
   900  0146                     	ds	1
   901  0147                     _firstpulse1:	
   902  0147                     	ds	1
   903  0148                     _firstpulse2:	
   904  0148                     	ds	1
   905  0149                     _kpressread:	
   906  0149                     	ds	1
   907  014A                     _mili1_100:	
   908  014A                     	ds	1
   909  014B                     _mili2_100:	
   910  014B                     	ds	1
   911  014C                     _minus111:	
   912  014C                     	ds	1
   913  014D                     _minus222:	
   914  014D                     	ds	1
   915  014E                     _minuscount1:	
   916  014E                     	ds	1
   917  014F                     _minuscount2:	
   918  014F                     	ds	1
   919  0150                     _minuspara1:	
   920  0150                     	ds	1
   921  0151                     _pcount:	
   922  0151                     	ds	1
   923  0152                     _plus111:	
   924  0152                     	ds	1
   925  0153                     _plus222:	
   926  0153                     	ds	1
   927  0154                     _pluscount1:	
   928  0154                     	ds	1
   929  0155                     _pluscount2:	
   930  0155                     	ds	1
   931  0156                     _pluspara1:	
   932  0156                     	ds	1
   933  0157                     _pluspara2:	
   934  0157                     	ds	1
   935  0158                     _pportb:	
   936  0158                     	ds	1
   937  0159                     _read_enc1f:	
   938  0159                     	ds	1
   939  015A                     _recchksum:	
   940  015A                     	ds	1
   941  015B                     _secondpulse1:	
   942  015B                     	ds	1
   943  015C                     _secondpulse2:	
   944  015C                     	ds	1
   945  015D                     _send_statusf:	
   946  015D                     	ds	1
   947  015E                     _tans:	
   948  015E                     	ds	1
   949  015F                     _torchstatus1:	
   950  015F                     	ds	1
   951  0160                     _torchstatus2:	
   952  0160                     	ds	1
   953  0161                     _transmitonf:	
   954  0161                     	ds	1
   955  0162                     _universal_error:	
   956  0162                     	ds	1
   957  0163                     _universal_error_latch:	
   958  0163                     	ds	1
   959  0164                     _avgpperiod:	
   960  0164                     	ds	2
   961  0166                     _erroru:	
   962  0166                     	ds	2
   963  0168                     _pfreq:	
   964  0168                     	ds	2
   965  016A                     _commandu:	
   966  016A                     	ds	1
   967  016B                     _wfstatusu:	
   968  016B                     	ds	1
   969                           
   970                           	psect	dataBANK2
   971  016C                     __pdataBANK2:	
   972  016C                     _TORCH:	
   973  016C                     	ds	1
   974  016D                     _prevTORCH:	
   975  016D                     	ds	1
   976  016E                     _prevkey:	
   977  016E                     	ds	1
   978  016F                     _wfspeedchangef:	
   979  016F                     	ds	1
   980                           
   981                           	psect	bssBANK3
   982  01A0                     __pbssBANK3:	
   983  01A0                     _error_old:	
   984  01A0                     	ds	3
   985  01A3                     _integral_old:	
   986  01A3                     	ds	3
   987  01A6                     _Hi_setppwm:	
   988  01A6                     	ds	2
   989  01A8                     _Lo_setppwm:	
   990  01A8                     	ds	2
   991  01AA                     _One:	
   992  01AA                     	ds	2
   993  01AC                     _Total_Count:	
   994  01AC                     	ds	2
   995  01AE                     _Two:	
   996  01AE                     	ds	2
   997  01B0                     _count_1ms:	
   998  01B0                     	ds	2
   999  01B2                     _delinch:	
  1000  01B2                     	ds	2
  1001  01B4                     _delinch1:	
  1002  01B4                     	ds	2
  1003  01B6                     _iGasDbCnt:	
  1004  01B6                     	ds	2
  1005  01B8                     _old1:	
  1006  01B8                     	ds	2
  1007  01BA                     _old2:	
  1008  01BA                     	ds	2
  1009  01BC                     _pperiod:	
  1010  01BC                     	ds	2
  1011  01BE                     _prevsetcurrent:	
  1012  01BE                     	ds	2
  1013  01C0                     _prevsetvoltage:	
  1014  01C0                     	ds	2
  1015  01C2                     _prevsetwirespeed:	
  1016  01C2                     	ds	2
  1017  01C4                     _recpsstatus:	
  1018  01C4                     	ds	2
  1019  01C6                     _recstatus:	
  1020  01C6                     	ds	2
  1021  01C8                     _rel_wirespeed:	
  1022  01C8                     	ds	2
  1023  01CA                     _setpfreq:	
  1024  01CA                     	ds	2
  1025  01CC                     _Tx_ptr:	
  1026  01CC                     	ds	1
  1027  01CD                     _capintervalf:	
  1028  01CD                     	ds	1
  1029  01CE                     _closeloop1f:	
  1030  01CE                     	ds	1
  1031  01CF                     _count_pid:	
  1032  01CF                     	ds	1
  1033  01D0                     _error4:	
  1034  01D0                     	ds	1
  1035  01D1                     _error_code1:	
  1036  01D1                     	ds	1
  1037  01D2                     _error_code2:	
  1038  01D2                     	ds	1
  1039  01D3                     _fixintervalf:	
  1040  01D3                     	ds	1
  1041  01D4                     _inchkeyon:	
  1042  01D4                     	ds	1
  1043  01D5                     _softstartf:	
  1044  01D5                     	ds	1
  1045  01D6                     _torchonf:	
  1046  01D6                     	ds	1
  1047  01D7                     _txonf:	
  1048  01D7                     	ds	1
  1049  01D8                     _updatedispf:	
  1050  01D8                     	ds	1
  1051  01D9                     _wfstatusbyte:	
  1052  01D9                     	ds	1
  1053                           
  1054                           	psect	dataBANK3
  1055  01DA                     __pdataBANK3:	
  1056  01DA                     _diswin1:	
  1057  01DA                     	ds	8
  1058  01E2                     _Tsampling:	
  1059  01E2                     	ds	3
  1060  01E5                     _Actual_amp:	
  1061  01E5                     	ds	2
  1062  01E7                     _maxfmspeed:	
  1063  01E7                     	ds	2
  1064  01E9                     _minfmspeed:	
  1065  01E9                     	ds	2
  1066  01EB                     _scalefactor2:	
  1067  01EB                     	ds	2
  1068  01ED                     _displayonf:	
  1069  01ED                     	ds	1
  1070  01EE                     _togglepin:	
  1071  01EE                     	ds	1
  1072                           
  1073                           	psect	bssBANK4
  1074  0220                     __pbssBANK4:	
  1075  0220                     _Total_Period:	
  1076  0220                     	ds	4
  1077  0224                     _controller_out:	
  1078  0224                     	ds	3
  1079  0227                     _minoutmax:	
  1080  0227                     	ds	3
  1081  022A                     _count_transms:	
  1082  022A                     	ds	2
  1083  022C                     _creepspeed:	
  1084  022C                     	ds	2
  1085  022E                     _delay:	
  1086  022E                     	ds	2
  1087  0230                     _disp1term:	
  1088  0230                     	ds	2
  1089  0232                     _disp2term:	
  1090  0232                     	ds	2
  1091  0234                     _disp3term:	
  1092  0234                     	ds	2
  1093  0236                     _disp4term:	
  1094  0236                     	ds	2
  1095  0238                     _disparclength:	
  1096  0238                     	ds	2
  1097  023A                     _gapfreq:	
  1098  023A                     	ds	2
  1099  023C                     _iTest:	
  1100  023C                     	ds	2
  1101  023E                     _iii:	
  1102  023E                     	ds	2
  1103  0240                     _openloopcnt:	
  1104  0240                     	ds	2
  1105  0242                     _prevFltpfreq:	
  1106  0242                     	ds	2
  1107  0244                     _pstowfstru:	
  1108  0244                     	ds	23
  1109                           
  1110                           	psect	dataBANK4
  1111  025B                     __pdataBANK4:	
  1112  025B                     _Actual_vtg:	
  1113  025B                     	ds	2
  1114  025D                     _mahesh_test:	
  1115  025D                     	ds	2
  1116  025F                     _parclength:	
  1117  025F                     	ds	2
  1118                           
  1119                           	psect	bssBANK5
  1120  02A0                     __pbssBANK5:	
  1121  02A0                     _rec_arr:	
  1122  02A0                     	ds	22
  1123                           
  1124                           	psect	bssBANK6
  1125  0320                     __pbssBANK6:	
  1126  0320                     _PID_sParams:	
  1127  0320                     	ds	73
  1128                           
  1129                           	psect	clrtext
  1130  18A5                     clear_ram0:	
  1131                           ;	Called with FSR0 containing the base address, and
  1132                           ;	btemp/btemp+1 has the size to clear
  1133                           
  1134  18A5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1135  18A6                     clrloop0:	
  1136  18A6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1137  18A7  3101               	addfsr 0,1
  1138  18A8  3001               	movlw	1
  1139  18A9  02FE               	subwf	126,f
  1140  18AA  3000               	movlw	0
  1141  18AB  3BFF               	subwfb	127,f
  1142  18AC  087F               	movf	127,w
  1143  18AD  047E               	iorwf	126,w
  1144  18AE  1903               	btfsc	3,2
  1145  18AF  3400               	retlw	0	;all done for this memory range, return
  1146  18B0  28A6               	goto	clrloop0	;have we reached the end yet?
  1147                           
  1148                           	psect	inittext
  1149  1899                     init_ram:	
  1150  1899  00FE               	movwf	126
  1151  189A                     initloop:	
  1152  189A  0012               	moviw fsr0++
  1153  189B  001E               	movwi fsr1++
  1154  189C  3001               	movlw	1
  1155  189D  02FE               	subwf	126,f
  1156  189E  3000               	movlw	0
  1157  189F  3BFF               	subwfb	127,f
  1158  18A0  087F               	movf	127,w
  1159  18A1  047E               	iorwf	126,w
  1160  18A2  1903               	btfsc	3,2
  1161  18A3  3400               	retlw	0
  1162  18A4  289A               	goto	initloop
  1163                           
  1164                           	psect	cstackBANK1
  1165  00A0                     __pcstackBANK1:	
  1166  00A0                     ??_enc1_port:	
  1167  00A0                     ??_enc2_port:	
  1168                           ; 0 bytes @ 0x0
  1169                           
  1170  00A0                     ??_system_init:	
  1171                           ; 0 bytes @ 0x0
  1172                           
  1173  00A0                     ??_portpin_init:	
  1174                           ; 0 bytes @ 0x0
  1175                           
  1176  00A0                     ??_Timer0_init:	
  1177                           ; 0 bytes @ 0x0
  1178                           
  1179  00A0                     ??_PWM_init:	
  1180                           ; 0 bytes @ 0x0
  1181                           
  1182  00A0                     ??_capture_init:	
  1183                           ; 0 bytes @ 0x0
  1184                           
  1185  00A0                     ??_uart_init:	
  1186                           ; 0 bytes @ 0x0
  1187                           
  1188  00A0                     ?_disp_hex_window11:	
  1189                           ; 0 bytes @ 0x0
  1190                           
  1191  00A0                     ?_disp_hex_window22:	
  1192                           ; 0 bytes @ 0x0
  1193                           
  1194  00A0                     ?_Delayms:	
  1195                           ; 0 bytes @ 0x0
  1196                           
  1197  00A0                     ??_Send_Byte:	
  1198                           ; 0 bytes @ 0x0
  1199                           
  1200  00A0                     ?___wmul:	
  1201                           ; 0 bytes @ 0x0
  1202                           
  1203  00A0                     ?___lwdiv:	
  1204                           ; 2 bytes @ 0x0
  1205                           
  1206  00A0                     ?___lwmod:	
  1207                           ; 2 bytes @ 0x0
  1208                           
  1209  00A0                     ?___ftpack:	
  1210                           ; 2 bytes @ 0x0
  1211                           
  1212  00A0                     ?___ftneg:	
  1213                           ; 3 bytes @ 0x0
  1214                           
  1215  00A0                     ?___aldiv:	
  1216                           ; 3 bytes @ 0x0
  1217                           
  1218  00A0                     Send_Byte@transbyte:	
  1219                           ; 4 bytes @ 0x0
  1220                           
  1221  00A0                     disp_hex_window11@hex_data:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  00A0                     disp_hex_window22@hex_data:	
  1225                           ; 2 bytes @ 0x0
  1226                           
  1227  00A0                     Delayms@delay:	
  1228                           ; 2 bytes @ 0x0
  1229                           
  1230  00A0                     ___wmul@multiplier:	
  1231                           ; 2 bytes @ 0x0
  1232                           
  1233  00A0                     ___lwdiv@divisor:	
  1234                           ; 2 bytes @ 0x0
  1235                           
  1236  00A0                     ___lwmod@divisor:	
  1237                           ; 2 bytes @ 0x0
  1238                           
  1239  00A0                     ___ftpack@arg:	
  1240                           ; 2 bytes @ 0x0
  1241                           
  1242  00A0                     ___ftneg@f1:	
  1243                           ; 3 bytes @ 0x0
  1244                           
  1245  00A0                     ___aldiv@divisor:	
  1246                           ; 3 bytes @ 0x0
  1247                           
  1248                           
  1249                           ; 4 bytes @ 0x0
  1250  00A0                     	ds	1
  1251  00A1                     ??_send_status:	
  1252  00A1                     ??_transmittops:	
  1253                           ; 0 bytes @ 0x1
  1254                           
  1255                           
  1256                           ; 0 bytes @ 0x1
  1257  00A1                     	ds	1
  1258  00A2                     ??_disp_hex_window11:	
  1259  00A2                     ??_disp_hex_window22:	
  1260                           ; 0 bytes @ 0x2
  1261                           
  1262  00A2                     ??_Delayms:	
  1263                           ; 0 bytes @ 0x2
  1264                           
  1265  00A2                     Delayms@xxx:	
  1266                           ; 0 bytes @ 0x2
  1267                           
  1268  00A2                     ___wmul@multiplicand:	
  1269                           ; 2 bytes @ 0x2
  1270                           
  1271  00A2                     ___lwdiv@dividend:	
  1272                           ; 2 bytes @ 0x2
  1273                           
  1274  00A2                     ___lwmod@dividend:	
  1275                           ; 2 bytes @ 0x2
  1276                           
  1277                           
  1278                           ; 2 bytes @ 0x2
  1279  00A2                     	ds	1
  1280  00A3                     ??___ftneg:	
  1281  00A3                     ___ftpack@exp:	
  1282                           ; 0 bytes @ 0x3
  1283                           
  1284  00A3                     enc2_port@portvalue:	
  1285                           ; 1 bytes @ 0x3
  1286                           
  1287                           
  1288                           ; 2 bytes @ 0x3
  1289  00A3                     	ds	1
  1290  00A4                     ??___wmul:	
  1291  00A4                     ??___lwdiv:	
  1292                           ; 0 bytes @ 0x4
  1293                           
  1294  00A4                     ??___lwmod:	
  1295                           ; 0 bytes @ 0x4
  1296                           
  1297  00A4                     ___ftpack@sign:	
  1298                           ; 0 bytes @ 0x4
  1299                           
  1300  00A4                     Delayms@yyy:	
  1301                           ; 1 bytes @ 0x4
  1302                           
  1303  00A4                     enc1_port@portvalue:	
  1304                           ; 2 bytes @ 0x4
  1305                           
  1306  00A4                     ___wmul@product:	
  1307                           ; 2 bytes @ 0x4
  1308                           
  1309  00A4                     ___aldiv@dividend:	
  1310                           ; 2 bytes @ 0x4
  1311                           
  1312                           
  1313                           ; 4 bytes @ 0x4
  1314  00A4                     	ds	1
  1315  00A5                     ??___ftpack:	
  1316  00A5                     ??_SCANENCODER2:	
  1317                           ; 0 bytes @ 0x5
  1318                           
  1319  00A5                     ___lwmod@counter:	
  1320                           ; 0 bytes @ 0x5
  1321                           
  1322  00A5                     ___lwdiv@quotient:	
  1323                           ; 1 bytes @ 0x5
  1324                           
  1325                           
  1326                           ; 2 bytes @ 0x5
  1327  00A5                     	ds	1
  1328  00A6                     ??_SCANENCODER1:	
  1329  00A6                     SCANENCODER2@result:	
  1330                           ; 0 bytes @ 0x6
  1331                           
  1332                           
  1333                           ; 1 bytes @ 0x6
  1334  00A6                     	ds	1
  1335  00A7                     SCANENCODER1@result:	
  1336  00A7                     ___lwdiv@counter:	
  1337                           ; 1 bytes @ 0x7
  1338                           
  1339                           
  1340                           ; 1 bytes @ 0x7
  1341  00A7                     	ds	1
  1342  00A8                     ?_disp_hex_window1:	
  1343  00A8                     ?_disp_hex_window2:	
  1344                           ; 0 bytes @ 0x8
  1345                           
  1346  00A8                     ??___aldiv:	
  1347                           ; 0 bytes @ 0x8
  1348                           
  1349  00A8                     ?___altoft:	
  1350                           ; 0 bytes @ 0x8
  1351                           
  1352  00A8                     ?___ftadd:	
  1353                           ; 3 bytes @ 0x8
  1354                           
  1355  00A8                     ?___lwtoft:	
  1356                           ; 3 bytes @ 0x8
  1357                           
  1358  00A8                     disp_hex_window1@hex_data:	
  1359                           ; 3 bytes @ 0x8
  1360                           
  1361  00A8                     disp_hex_window2@hex_data:	
  1362                           ; 2 bytes @ 0x8
  1363                           
  1364  00A8                     ___lwtoft@c:	
  1365                           ; 2 bytes @ 0x8
  1366                           
  1367  00A8                     ___ftadd@f1:	
  1368                           ; 2 bytes @ 0x8
  1369                           
  1370  00A8                     ___altoft@c:	
  1371                           ; 3 bytes @ 0x8
  1372                           
  1373                           
  1374                           ; 4 bytes @ 0x8
  1375  00A8                     	ds	1
  1376  00A9                     ___aldiv@counter:	
  1377                           
  1378                           ; 1 bytes @ 0x9
  1379  00A9                     	ds	1
  1380  00AA                     ??_disp_hex_window1:	
  1381  00AA                     ??_disp_hex_window2:	
  1382                           ; 0 bytes @ 0xA
  1383                           
  1384  00AA                     ___aldiv@sign:	
  1385                           ; 0 bytes @ 0xA
  1386                           
  1387                           
  1388                           ; 1 bytes @ 0xA
  1389  00AA                     	ds	1
  1390  00AB                     ??___lwtoft:	
  1391  00AB                     ___ftadd@f2:	
  1392                           ; 0 bytes @ 0xB
  1393                           
  1394  00AB                     ___aldiv@quotient:	
  1395                           ; 3 bytes @ 0xB
  1396                           
  1397                           
  1398                           ; 4 bytes @ 0xB
  1399  00AB                     	ds	1
  1400  00AC                     ??___altoft:	
  1401                           
  1402                           ; 0 bytes @ 0xC
  1403  00AC                     	ds	2
  1404  00AE                     ??___ftadd:	
  1405  00AE                     ___altoft@exp:	
  1406                           ; 0 bytes @ 0xE
  1407                           
  1408                           
  1409                           ; 1 bytes @ 0xE
  1410  00AE                     	ds	1
  1411  00AF                     ___altoft@sign:	
  1412                           
  1413                           ; 1 bytes @ 0xF
  1414  00AF                     	ds	1
  1415  00B0                     ?___ftge:	
  1416  00B0                     ___ftge@ff1:	
  1417                           ; 1 bit 
  1418                           
  1419                           
  1420                           ; 3 bytes @ 0x10
  1421  00B0                     	ds	2
  1422  00B2                     ___ftadd@sign:	
  1423                           
  1424                           ; 1 bytes @ 0x12
  1425  00B2                     	ds	1
  1426  00B3                     ___ftadd@exp2:	
  1427  00B3                     ___ftge@ff2:	
  1428                           ; 1 bytes @ 0x13
  1429                           
  1430                           
  1431                           ; 3 bytes @ 0x13
  1432  00B3                     	ds	1
  1433  00B4                     ___ftadd@exp1:	
  1434                           
  1435                           ; 1 bytes @ 0x14
  1436  00B4                     	ds	1
  1437  00B5                     ?___ftmul:	
  1438  00B5                     ___ftmul@f1:	
  1439                           ; 3 bytes @ 0x15
  1440                           
  1441                           
  1442                           ; 3 bytes @ 0x15
  1443  00B5                     	ds	1
  1444  00B6                     ??___ftge:	
  1445                           
  1446                           ; 0 bytes @ 0x16
  1447  00B6                     	ds	2
  1448  00B8                     ___ftmul@f2:	
  1449                           
  1450                           ; 3 bytes @ 0x18
  1451  00B8                     	ds	3
  1452  00BB                     ??___ftmul:	
  1453                           
  1454                           ; 0 bytes @ 0x1B
  1455  00BB                     	ds	4
  1456  00BF                     ___ftmul@exp:	
  1457                           
  1458                           ; 1 bytes @ 0x1F
  1459  00BF                     	ds	1
  1460  00C0                     ___ftmul@f3_as_product:	
  1461                           
  1462                           ; 3 bytes @ 0x20
  1463  00C0                     	ds	3
  1464  00C3                     ___ftmul@cntr:	
  1465                           
  1466                           ; 1 bytes @ 0x23
  1467  00C3                     	ds	1
  1468  00C4                     ___ftmul@sign:	
  1469                           
  1470                           ; 1 bytes @ 0x24
  1471  00C4                     	ds	1
  1472  00C5                     ?___ftdiv:	
  1473  00C5                     ?___fttol:	
  1474                           ; 3 bytes @ 0x25
  1475                           
  1476  00C5                     ___ftdiv@f2:	
  1477                           ; 4 bytes @ 0x25
  1478                           
  1479  00C5                     ___fttol@f1:	
  1480                           ; 3 bytes @ 0x25
  1481                           
  1482                           
  1483                           ; 3 bytes @ 0x25
  1484  00C5                     	ds	3
  1485  00C8                     ___ftdiv@f1:	
  1486                           
  1487                           ; 3 bytes @ 0x28
  1488  00C8                     	ds	1
  1489  00C9                     ??___fttol:	
  1490                           
  1491                           ; 0 bytes @ 0x29
  1492  00C9                     	ds	2
  1493  00CB                     ??___ftdiv:	
  1494                           
  1495                           ; 0 bytes @ 0x2B
  1496  00CB                     	ds	2
  1497  00CD                     ___fttol@sign1:	
  1498                           
  1499                           ; 1 bytes @ 0x2D
  1500  00CD                     	ds	1
  1501  00CE                     ___fttol@lval:	
  1502                           
  1503                           ; 4 bytes @ 0x2E
  1504  00CE                     	ds	1
  1505  00CF                     ___ftdiv@cntr:	
  1506                           
  1507                           ; 1 bytes @ 0x2F
  1508  00CF                     	ds	1
  1509  00D0                     ___ftdiv@f3:	
  1510                           
  1511                           ; 3 bytes @ 0x30
  1512  00D0                     	ds	2
  1513  00D2                     ___fttol@exp1:	
  1514                           
  1515                           ; 1 bytes @ 0x32
  1516  00D2                     	ds	1
  1517  00D3                     ?_Update_PWM:	
  1518  00D3                     ___ftdiv@exp:	
  1519                           ; 0 bytes @ 0x33
  1520                           
  1521  00D3                     Update_PWM@setwsduty:	
  1522                           ; 1 bytes @ 0x33
  1523                           
  1524                           
  1525                           ; 2 bytes @ 0x33
  1526  00D3                     	ds	1
  1527  00D4                     ___ftdiv@sign:	
  1528                           
  1529                           ; 1 bytes @ 0x34
  1530  00D4                     	ds	1
  1531  00D5                     ??_Update_PWM:	
  1532                           
  1533                           ; 0 bytes @ 0x35
  1534  00D5                     	ds	2
  1535  00D7                     Update_PWM@Temp1:	
  1536                           
  1537                           ; 2 bytes @ 0x37
  1538  00D7                     	ds	2
  1539  00D9                     Update_PWM@Dutycnt:	
  1540                           
  1541                           ; 2 bytes @ 0x39
  1542  00D9                     	ds	2
  1543  00DB                     ??_key_application:	
  1544  00DB                     ??_detect_display_error:	
  1545                           ; 0 bytes @ 0x3B
  1546                           
  1547  00DB                     ??_Adaptive_base_pid:	
  1548                           ; 0 bytes @ 0x3B
  1549                           
  1550                           
  1551                           ; 0 bytes @ 0x3B
  1552  00DB                     	ds	2
  1553  00DD                     key_application@keypress:	
  1554                           
  1555                           ; 1 bytes @ 0x3D
  1556  00DD                     	ds	7
  1557  00E4                     _Adaptive_base_pid$1781:	
  1558                           
  1559                           ; 3 bytes @ 0x44
  1560  00E4                     	ds	3
  1561  00E7                     _Adaptive_base_pid$1782:	
  1562                           
  1563                           ; 3 bytes @ 0x47
  1564  00E7                     	ds	3
  1565  00EA                     _Adaptive_base_pid$1783:	
  1566                           
  1567                           ; 3 bytes @ 0x4A
  1568  00EA                     	ds	3
  1569  00ED                     ??_main:	
  1570                           
  1571                           ; 0 bytes @ 0x4D
  1572  00ED                     	ds	2
  1573                           
  1574                           	psect	cstackCOMMON
  1575  0070                     __pcstackCOMMON:	
  1576  0070                     ?_system_init:	
  1577  0070                     ?_portpin_init:	
  1578                           ; 0 bytes @ 0x0
  1579                           
  1580  0070                     ?_Timer0_init:	
  1581                           ; 0 bytes @ 0x0
  1582                           
  1583  0070                     ?_PWM_init:	
  1584                           ; 0 bytes @ 0x0
  1585                           
  1586  0070                     ?_capture_init:	
  1587                           ; 0 bytes @ 0x0
  1588                           
  1589  0070                     ?_uart_init:	
  1590                           ; 0 bytes @ 0x0
  1591                           
  1592  0070                     ?_send_status:	
  1593                           ; 0 bytes @ 0x0
  1594                           
  1595  0070                     ?_transmittops:	
  1596                           ; 0 bytes @ 0x0
  1597                           
  1598  0070                     ?_key_application:	
  1599                           ; 0 bytes @ 0x0
  1600                           
  1601  0070                     ?_detect_display_error:	
  1602                           ; 0 bytes @ 0x0
  1603                           
  1604  0070                     ?_Display:	
  1605                           ; 0 bytes @ 0x0
  1606                           
  1607  0070                     ??_Display:	
  1608                           ; 0 bytes @ 0x0
  1609                           
  1610  0070                     ?_Adaptive_base_pid:	
  1611                           ; 0 bytes @ 0x0
  1612                           
  1613  0070                     ?_ISR_Function:	
  1614                           ; 0 bytes @ 0x0
  1615                           
  1616  0070                     ?_main:	
  1617                           ; 0 bytes @ 0x0
  1618                           
  1619  0070                     ?_Send_Byte:	
  1620                           ; 0 bytes @ 0x0
  1621                           
  1622  0070                     ?i1_Update_PWM:	
  1623                           ; 0 bytes @ 0x0
  1624                           
  1625  0070                     ?_enc1_port:	
  1626                           ; 0 bytes @ 0x0
  1627                           
  1628  0070                     ?_enc2_port:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631  0070                     ?_SCANENCODER1:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634  0070                     ?_SCANENCODER2:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0070                     ?i1___ftpack:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640  0070                     ?i1___aldiv:	
  1641                           ; 3 bytes @ 0x0
  1642                           
  1643  0070                     i1Update_PWM@setwsduty:	
  1644                           ; 4 bytes @ 0x0
  1645                           
  1646  0070                     i1___ftpack@arg:	
  1647                           ; 2 bytes @ 0x0
  1648                           
  1649  0070                     i1___aldiv@divisor:	
  1650                           ; 3 bytes @ 0x0
  1651                           
  1652                           
  1653                           ; 4 bytes @ 0x0
  1654  0070                     	ds	2
  1655  0072                     ??i1_Update_PWM:	
  1656                           
  1657                           ; 0 bytes @ 0x2
  1658  0072                     	ds	1
  1659  0073                     i1___ftpack@exp:	
  1660                           
  1661                           ; 1 bytes @ 0x3
  1662  0073                     	ds	1
  1663  0074                     i1___ftpack@sign:	
  1664  0074                     i1Update_PWM@Temp1:	
  1665                           ; 1 bytes @ 0x4
  1666                           
  1667  0074                     i1___aldiv@dividend:	
  1668                           ; 2 bytes @ 0x4
  1669                           
  1670                           
  1671                           ; 4 bytes @ 0x4
  1672  0074                     	ds	1
  1673  0075                     ??i1___ftpack:	
  1674                           
  1675                           ; 0 bytes @ 0x5
  1676  0075                     	ds	1
  1677  0076                     i1Update_PWM@Dutycnt:	
  1678                           
  1679                           ; 2 bytes @ 0x6
  1680  0076                     	ds	2
  1681  0078                     ??i1___aldiv:	
  1682  0078                     ?i1___lwtoft:	
  1683                           ; 0 bytes @ 0x8
  1684                           
  1685  0078                     i1___lwtoft@c:	
  1686                           ; 3 bytes @ 0x8
  1687                           
  1688                           
  1689                           ; 2 bytes @ 0x8
  1690  0078                     	ds	3
  1691  007B                     ??i1___lwtoft:	
  1692                           
  1693                           ; 0 bytes @ 0xB
  1694  007B                     	ds	1
  1695  007C                     _ISR_Function$1186:	
  1696                           
  1697                           ; 2 bytes @ 0xC
  1698  007C                     	ds	2
  1699                           
  1700                           	psect	cstackBANK0
  1701  0020                     __pcstackBANK0:	
  1702  0020                     ?i1___ftdiv:	
  1703  0020                     ?i1___ftmul:	
  1704                           ; 3 bytes @ 0x0
  1705                           
  1706  0020                     i1___aldiv@counter:	
  1707                           ; 3 bytes @ 0x0
  1708                           
  1709  0020                     i1___ftdiv@f2:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0020                     i1___ftmul@f1:	
  1713                           ; 3 bytes @ 0x0
  1714                           
  1715                           
  1716                           ; 3 bytes @ 0x0
  1717  0020                     	ds	1
  1718  0021                     i1___aldiv@sign:	
  1719                           
  1720                           ; 1 bytes @ 0x1
  1721  0021                     	ds	1
  1722  0022                     i1___aldiv@quotient:	
  1723                           
  1724                           ; 4 bytes @ 0x2
  1725  0022                     	ds	1
  1726  0023                     i1___ftdiv@f1:	
  1727  0023                     i1___ftmul@f2:	
  1728                           ; 3 bytes @ 0x3
  1729                           
  1730                           
  1731                           ; 3 bytes @ 0x3
  1732  0023                     	ds	3
  1733  0026                     ??i1___ftdiv:	
  1734  0026                     ??i1___ftmul:	
  1735                           ; 0 bytes @ 0x6
  1736                           
  1737                           
  1738                           ; 0 bytes @ 0x6
  1739  0026                     	ds	4
  1740  002A                     i1___ftdiv@cntr:	
  1741  002A                     i1___ftmul@exp:	
  1742                           ; 1 bytes @ 0xA
  1743                           
  1744                           
  1745                           ; 1 bytes @ 0xA
  1746  002A                     	ds	1
  1747  002B                     i1___ftdiv@f3:	
  1748  002B                     i1___ftmul@f3_as_product:	
  1749                           ; 3 bytes @ 0xB
  1750                           
  1751                           
  1752                           ; 3 bytes @ 0xB
  1753  002B                     	ds	3
  1754  002E                     i1___ftdiv@exp:	
  1755  002E                     i1___ftmul@cntr:	
  1756                           ; 1 bytes @ 0xE
  1757                           
  1758                           
  1759                           ; 1 bytes @ 0xE
  1760  002E                     	ds	1
  1761  002F                     i1___ftdiv@sign:	
  1762  002F                     i1___ftmul@sign:	
  1763                           ; 1 bytes @ 0xF
  1764                           
  1765                           
  1766                           ; 1 bytes @ 0xF
  1767  002F                     	ds	1
  1768  0030                     ?i1___ftadd:	
  1769  0030                     i1___ftadd@f1:	
  1770                           ; 3 bytes @ 0x10
  1771                           
  1772                           
  1773                           ; 3 bytes @ 0x10
  1774  0030                     	ds	3
  1775  0033                     i1___ftadd@f2:	
  1776                           
  1777                           ; 3 bytes @ 0x13
  1778  0033                     	ds	3
  1779  0036                     ??i1___ftadd:	
  1780                           
  1781                           ; 0 bytes @ 0x16
  1782  0036                     	ds	4
  1783  003A                     i1___ftadd@sign:	
  1784                           
  1785                           ; 1 bytes @ 0x1A
  1786  003A                     	ds	1
  1787  003B                     i1___ftadd@exp2:	
  1788                           
  1789                           ; 1 bytes @ 0x1B
  1790  003B                     	ds	1
  1791  003C                     i1___ftadd@exp1:	
  1792                           
  1793                           ; 1 bytes @ 0x1C
  1794  003C                     	ds	1
  1795  003D                     ?i1___fttol:	
  1796  003D                     i1___fttol@f1:	
  1797                           ; 4 bytes @ 0x1D
  1798                           
  1799                           
  1800                           ; 3 bytes @ 0x1D
  1801  003D                     	ds	4
  1802  0041                     ??i1___fttol:	
  1803                           
  1804                           ; 0 bytes @ 0x21
  1805  0041                     	ds	4
  1806  0045                     i1___fttol@sign1:	
  1807                           
  1808                           ; 1 bytes @ 0x25
  1809  0045                     	ds	1
  1810  0046                     i1___fttol@lval:	
  1811                           
  1812                           ; 4 bytes @ 0x26
  1813  0046                     	ds	4
  1814  004A                     i1___fttol@exp1:	
  1815                           
  1816                           ; 1 bytes @ 0x2A
  1817  004A                     	ds	1
  1818  004B                     ??_ISR_Function:	
  1819                           
  1820                           ; 0 bytes @ 0x2B
  1821  004B                     	ds	9
  1822                           
  1823                           	psect	maintext
  1824  092F                     __pmaintext:	
  1825 ;;
  1826 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1827 ;;
  1828 ;; *************** function _main *****************
  1829 ;; Defined at:
  1830 ;;		line 453 in file "main.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;		None               void
  1837 ;; Registers used:
  1838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 17F/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1846 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1847 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1848 ;;Total ram usage:        2 bytes
  1849 ;; Hardware stack levels required when called:    6
  1850 ;; This function calls:
  1851 ;;		_Adaptive_base_pid
  1852 ;;		_Delayms
  1853 ;;		_PWM_init
  1854 ;;		_SCANENCODER1
  1855 ;;		_SCANENCODER2
  1856 ;;		_Timer0_init
  1857 ;;		_Update_PWM
  1858 ;;		___ftmul
  1859 ;;		___fttol
  1860 ;;		___lwtoft
  1861 ;;		___wmul
  1862 ;;		_capture_init
  1863 ;;		_detect_display_error
  1864 ;;		_disp_hex_window1
  1865 ;;		_disp_hex_window11
  1866 ;;		_disp_hex_window2
  1867 ;;		_disp_hex_window22
  1868 ;;		_key_application
  1869 ;;		_portpin_init
  1870 ;;		_send_status
  1871 ;;		_system_init
  1872 ;;		_transmittops
  1873 ;;		_uart_init
  1874 ;; This function is called by:
  1875 ;;		Startup code after reset
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           
  1880                           ;psect for function _main
  1881  092F                     _main:	
  1882                           
  1883                           ;main.c: 456: system_init();
  1884                           
  1885                           ;incstack = 0
  1886                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1887  092F  3198  208F  3189   	fcall	_system_init
  1888  0932                     l630:	
  1889  0932  3013               	movlw	19
  1890  0933  0024               	movlb	4	; select bank4
  1891  0934  022F               	subwf	(_delay+1)^(0+512),w
  1892  0935  3088               	movlw	136
  1893  0936  1903               	skipnz
  1894  0937  022E               	subwf	_delay^(0+512),w
  1895  0938  1803               	btfsc	3,0
  1896  0939  2940               	goto	l5239
  1897  093A  3001               	movlw	1
  1898  093B  0024               	movlb	4	; select bank4
  1899  093C  07AE               	addwf	_delay^(0+512),f
  1900  093D  3000               	movlw	0
  1901  093E  3DAF               	addwfc	(_delay+1)^(0+512),f
  1902  093F  2932               	goto	l630
  1903  0940                     l5239:	
  1904                           
  1905                           ;main.c: 458: Delayms(1000);
  1906  0940  30E8               	movlw	232
  1907  0941  0021               	movlb	1	; select bank1
  1908  0942  00A0               	movwf	Delayms@delay^(0+128)
  1909  0943  3003               	movlw	3
  1910  0944  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1911  0945  3199  2167  3189   	fcall	_Delayms
  1912                           
  1913                           ;main.c: 459: portpin_init();
  1914  0948  3199  2138  3189   	fcall	_portpin_init
  1915                           
  1916                           ;main.c: 460: Timer0_init();
  1917  094B  3198  20B1  3189   	fcall	_Timer0_init
  1918                           
  1919                           ;main.c: 461: PWM_init();
  1920  094E  3199  214E  3189   	fcall	_PWM_init
  1921                           
  1922                           ;main.c: 462: capture_init();
  1923  0951  3198  20C2  3189   	fcall	_capture_init
  1924                           
  1925                           ;main.c: 463: uart_init();
  1926  0954  3198  20E6  3189   	fcall	_uart_init
  1927                           
  1928                           ;main.c: 464: INTCONbits.GIE =1;
  1929  0957  178B               	bsf	11,7	;volatile
  1930                           
  1931                           ;main.c: 465: INTCONbits.PEIE =1;
  1932  0958  170B               	bsf	11,6	;volatile
  1933                           
  1934                           ;main.c: 468: PORTCbits.RC3=0;
  1935  0959  0020               	movlb	0	; select bank0
  1936  095A  118E               	bcf	14,3	;volatile
  1937                           
  1938                           ;main.c: 470: TRISAbits.TRISA0 = 0;
  1939  095B  0021               	movlb	1	; select bank1
  1940  095C  100C               	bcf	12,0	;volatile
  1941                           
  1942                           ;main.c: 472: diswin1[0]=0x0B;
  1943  095D  300B               	movlw	11
  1944  095E  00ED               	movwf	??_main^(0+128)
  1945  095F  086D               	movf	??_main^(0+128),w
  1946  0960  0023               	movlb	3	; select bank3
  1947  0961  00DA               	movwf	_diswin1^(0+384)
  1948                           
  1949                           ;main.c: 473: diswin1[1]=0x0E;
  1950  0962  300E               	movlw	14
  1951  0963  0021               	movlb	1	; select bank1
  1952  0964  00ED               	movwf	??_main^(0+128)
  1953  0965  086D               	movf	??_main^(0+128),w
  1954  0966  0023               	movlb	3	; select bank3
  1955  0967  00DB               	movwf	(_diswin1^(0+384)+1)
  1956                           
  1957                           ;main.c: 474: diswin1[2]=0x1C;
  1958  0968  301C               	movlw	28
  1959  0969  0021               	movlb	1	; select bank1
  1960  096A  00ED               	movwf	??_main^(0+128)
  1961  096B  086D               	movf	??_main^(0+128),w
  1962  096C  0023               	movlb	3	; select bank3
  1963  096D  00DC               	movwf	(_diswin1^(0+384)+2)
  1964                           
  1965                           ;main.c: 475: diswin1[3]=0x1C;
  1966  096E  301C               	movlw	28
  1967  096F  0021               	movlb	1	; select bank1
  1968  0970  00ED               	movwf	??_main^(0+128)
  1969  0971  086D               	movf	??_main^(0+128),w
  1970  0972  0023               	movlb	3	; select bank3
  1971  0973  00DD               	movwf	(_diswin1^(0+384)+3)
  1972                           
  1973                           ;main.c: 476: diswin1[4]='2'-0x30;
  1974  0974  3002               	movlw	2
  1975  0975  0021               	movlb	1	; select bank1
  1976  0976  00ED               	movwf	??_main^(0+128)
  1977  0977  086D               	movf	??_main^(0+128),w
  1978  0978  0023               	movlb	3	; select bank3
  1979  0979  00DE               	movwf	(_diswin1^(0+384)+4)
  1980                           
  1981                           ;main.c: 477: diswin1[5]='1'-0x30;
  1982  097A  01DF               	clrf	(_diswin1^(0+384)+5)
  1983  097B  0ADF               	incf	(_diswin1^(0+384)+5),f
  1984                           
  1985                           ;main.c: 478: TypeDP.TypeD.digitdp5=1;
  1986  097C  0020               	movlb	0	; select bank0
  1987  097D  166C               	bsf	_TypeDP,4
  1988                           
  1989                           ;main.c: 480: Delayms(2000);
  1990  097E  30D0               	movlw	208
  1991  097F  0021               	movlb	1	; select bank1
  1992  0980  00A0               	movwf	Delayms@delay^(0+128)
  1993  0981  3007               	movlw	7
  1994  0982  00A1               	movwf	(Delayms@delay^(0+128)+1)
  1995  0983  3199  2167  3189   	fcall	_Delayms
  1996                           
  1997                           ;main.c: 482: LATCbits.LATC0=0;
  1998  0986  0022               	movlb	2	; select bank2
  1999  0987  100E               	bcf	14,0	;volatile
  2000                           
  2001                           ;main.c: 483: TypeDP.TypeD.digitdp5=0;
  2002  0988  0020               	movlb	0	; select bank0
  2003  0989  126C               	bcf	_TypeDP,4
  2004                           
  2005                           ;main.c: 484: TypeU.LEDGROUP[0] =0x00;
  2006  098A  01E8               	clrf	_TypeU
  2007                           
  2008                           ;main.c: 485: TypeU.LEDGROUP[1] =0x00;
  2009  098B  01E9               	clrf	_TypeU+1
  2010                           
  2011                           ;main.c: 486: TypeU.TypeS.wirespeed =1;
  2012  098C  1468               	bsf	_TypeU,0
  2013                           
  2014                           ;main.c: 487: TypeU.TypeS.vtg =1;
  2015  098D  14E9               	bsf	_TypeU+1,1
  2016                           
  2017                           ;main.c: 488: TypeU.TypeS.twot =1;
  2018  098E  1668               	bsf	_TypeU,4
  2019                           
  2020                           ;main.c: 489: TypeDP.DPGROUP[0] =0x00;
  2021  098F  01EC               	clrf	_TypeDP
  2022                           
  2023                           ;main.c: 490: TypeDP.TypeD.digitdp2 =1;
  2024  0990  14EC               	bsf	_TypeDP,1
  2025                           
  2026                           ;main.c: 491: TypeDP.TypeD.digitdp5 =1;
  2027  0991  166C               	bsf	_TypeDP,4
  2028                           
  2029                           ;main.c: 493: psstatusu.psstatusbyte[0]=0x00;
  2030  0992  01EE               	clrf	_psstatusu
  2031                           
  2032                           ;main.c: 496: setcurrent=0;
  2033  0993  0022               	movlb	2	; select bank2
  2034  0994  01AE               	clrf	_setcurrent^(0+256)
  2035  0995  01AF               	clrf	(_setcurrent+1)^(0+256)
  2036                           
  2037                           ;main.c: 497: setvoltage=0;
  2038  0996  0020               	movlb	0	; select bank0
  2039  0997  01D8               	clrf	_setvoltage
  2040  0998  01D9               	clrf	_setvoltage+1
  2041                           
  2042                           ;main.c: 498: disp_hex_window1(setcurrent);
  2043  0999  0022               	movlb	2	; select bank2
  2044  099A  082F               	movf	(_setcurrent+1)^(0+256),w
  2045  099B  0021               	movlb	1	; select bank1
  2046  099C  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  2047  099D  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  2048  099E  0022               	movlb	2	; select bank2
  2049  099F  082E               	movf	_setcurrent^(0+256),w
  2050  09A0  0021               	movlb	1	; select bank1
  2051  09A1  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  2052  09A2  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  2053  09A3  319C  2427  3189   	fcall	_disp_hex_window1
  2054                           
  2055                           ;main.c: 499: disp_hex_window2(setvoltage);
  2056  09A6  0020               	movlb	0	; select bank0
  2057  09A7  0859               	movf	_setvoltage+1,w
  2058  09A8  0021               	movlb	1	; select bank1
  2059  09A9  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  2060  09AA  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  2061  09AB  0020               	movlb	0	; select bank0
  2062  09AC  0858               	movf	_setvoltage,w
  2063  09AD  0021               	movlb	1	; select bank1
  2064  09AE  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  2065  09AF  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  2066  09B0  319C  248B  3189   	fcall	_disp_hex_window2
  2067                           
  2068                           ;main.c: 500: TXSTAbits.TXEN =1;
  2069  09B3  0023               	movlb	3	; select bank3
  2070  09B4  169E               	bsf	30,5	;volatile
  2071                           
  2072                           ;main.c: 501: RCSTAbits.CREN =1;
  2073  09B5  161D               	bsf	29,4	;volatile
  2074                           
  2075                           ;main.c: 502: PIE1bits.RCIE =1;
  2076  09B6  0021               	movlb	1	; select bank1
  2077  09B7  1691               	bsf	17,5	;volatile
  2078                           
  2079                           ;main.c: 503: INTCONbits.GIE =1;
  2080  09B8  178B               	bsf	11,7	;volatile
  2081                           
  2082                           ;main.c: 504: INTCONbits.PEIE =1;
  2083  09B9  170B               	bsf	11,6	;volatile
  2084                           
  2085                           ;main.c: 505: Delayms(5000);
  2086  09BA  3088               	movlw	136
  2087  09BB  00A0               	movwf	Delayms@delay^(0+128)
  2088  09BC  3013               	movlw	19
  2089  09BD  00A1               	movwf	(Delayms@delay^(0+128)+1)
  2090  09BE  3199  2167  3189   	fcall	_Delayms
  2091                           
  2092                           ;main.c: 506: PIE1bits.TXIE =0;
  2093  09C1  0021               	movlb	1	; select bank1
  2094  09C2  1211               	bcf	17,4	;volatile
  2095  09C3                     l5309:	
  2096                           ;main.c: 507: while(1)
  2097                           
  2098                           
  2099                           ;main.c: 508: {
  2100                           ;main.c: 510: if(send_statusf==1 && onesecf==0)
  2101  09C3  0022               	movlb	2	; select bank2
  2102  09C4  085D               	movf	_send_statusf^(0+256),w
  2103  09C5  3A01               	xorlw	1
  2104  09C6  1D03               	skipz
  2105  09C7  29D1               	goto	l5317
  2106  09C8  0020               	movlb	0	; select bank0
  2107  09C9  08E2               	movf	_onesecf,f	;volatile
  2108  09CA  1D03               	skipz
  2109  09CB  29D1               	goto	l5317
  2110                           
  2111                           ;main.c: 511: {
  2112                           ;main.c: 512: send_statusf=0;
  2113  09CC  0022               	movlb	2	; select bank2
  2114  09CD  01DD               	clrf	_send_statusf^(0+256)
  2115                           
  2116                           ;main.c: 513: send_status();
  2117  09CE  3199  210E  3189   	fcall	_send_status
  2118  09D1                     l5317:	
  2119                           
  2120                           ;main.c: 514: }
  2121                           ;main.c: 515: if(onesecf==1 && transmitonf==1)
  2122  09D1  0020               	movlb	0	; select bank0
  2123  09D2  0862               	movf	_onesecf,w	;volatile
  2124  09D3  3A01               	xorlw	1
  2125  09D4  1D03               	skipz
  2126  09D5  29F0               	goto	l5335
  2127  09D6  0022               	movlb	2	; select bank2
  2128  09D7  0861               	movf	_transmitonf^(0+256),w
  2129  09D8  3A01               	xorlw	1
  2130  09D9  1D03               	skipz
  2131  09DA  29F0               	goto	l5335
  2132                           
  2133                           ;main.c: 516: {
  2134                           ;main.c: 517: onesecf=0;
  2135  09DB  0020               	movlb	0	; select bank0
  2136  09DC  01E2               	clrf	_onesecf	;volatile
  2137                           
  2138                           ;main.c: 518: transmittops();
  2139  09DD  319A  2254  3189   	fcall	_transmittops
  2140                           
  2141                           ;main.c: 519: txonf=0;
  2142  09E0  0023               	movlb	3	; select bank3
  2143  09E1  01D7               	clrf	_txonf^(0+384)	;volatile
  2144                           
  2145                           ;main.c: 520: cEditfg = 0;
  2146  09E2  0022               	movlb	2	; select bank2
  2147  09E3  01B9               	clrf	_cEditfg^(0+256)
  2148                           
  2149                           ;main.c: 522: if(cTestfg == 0)
  2150  09E4  08BC               	movf	_cTestfg^(0+256),f
  2151  09E5  1D03               	skipz
  2152  09E6  29EC               	goto	l636
  2153                           
  2154                           ;main.c: 523: {
  2155                           ;main.c: 524: cTestfg = 1;
  2156  09E7  01BC               	clrf	_cTestfg^(0+256)
  2157  09E8  0ABC               	incf	_cTestfg^(0+256),f
  2158                           
  2159                           ;main.c: 525: TypeU.TypeS.sec =1;
  2160  09E9  0020               	movlb	0	; select bank0
  2161  09EA  1569               	bsf	_TypeU+1,2
  2162                           
  2163                           ;main.c: 526: }
  2164  09EB  29F0               	goto	l5335
  2165  09EC                     l636:	
  2166                           
  2167                           ;main.c: 527: else
  2168                           ;main.c: 528: {
  2169                           ;main.c: 529: TypeU.TypeS.sec =0;
  2170  09EC  0020               	movlb	0	; select bank0
  2171  09ED  1169               	bcf	_TypeU+1,2
  2172                           
  2173                           ;main.c: 530: cTestfg = 0;
  2174  09EE  0022               	movlb	2	; select bank2
  2175  09EF  01BC               	clrf	_cTestfg^(0+256)
  2176  09F0                     l5335:	
  2177                           
  2178                           ;main.c: 531: }
  2179                           ;main.c: 535: }
  2180                           ;main.c: 538: if(universal_error==0)
  2181  09F0  0022               	movlb	2	; select bank2
  2182  09F1  08E2               	movf	_universal_error^(0+256),f	;volatile
  2183  09F2  1D03               	skipz
  2184  09F3  2FE6               	goto	l5729
  2185                           
  2186                           ;main.c: 539: {
  2187                           ;main.c: 540: disp_hex_window11(crater_speed);
  2188  09F4  0020               	movlb	0	; select bank0
  2189  09F5  085C               	movf	_crater_speed,w	;volatile
  2190  09F6  0021               	movlb	1	; select bank1
  2191  09F7  00ED               	movwf	??_main^(0+128)
  2192  09F8  01EE               	clrf	(??_main^(0+128)+1)
  2193  09F9  086D               	movf	??_main^(0+128),w
  2194  09FA  00A0               	movwf	disp_hex_window11@hex_data^(0+128)
  2195  09FB  086E               	movf	(??_main+1)^(0+128),w
  2196  09FC  00A1               	movwf	(disp_hex_window11@hex_data+1)^(0+128)
  2197  09FD  3180  2002  3189   	fcall	_disp_hex_window11
  2198                           
  2199                           ;main.c: 541: disp_hex_window22(creep_speed);
  2200  0A00  0022               	movlb	2	; select bank2
  2201  0A01  0843               	movf	_creep_speed^(0+256),w	;volatile
  2202  0A02  0021               	movlb	1	; select bank1
  2203  0A03  00ED               	movwf	??_main^(0+128)
  2204  0A04  01EE               	clrf	(??_main^(0+128)+1)
  2205  0A05  086D               	movf	??_main^(0+128),w
  2206  0A06  00A0               	movwf	disp_hex_window22@hex_data^(0+128)
  2207  0A07  086E               	movf	(??_main+1)^(0+128),w
  2208  0A08  00A1               	movwf	(disp_hex_window22@hex_data+1)^(0+128)
  2209  0A09  3180  2003  3189   	fcall	_disp_hex_window22
  2210                           
  2211                           ;main.c: 543: if(adaptivepidf==1)
  2212  0A0C  0022               	movlb	2	; select bank2
  2213  0A0D  0837               	movf	_adaptivepidf^(0+256),w
  2214  0A0E  3A01               	xorlw	1
  2215  0A0F  1D03               	skipz
  2216  0A10  2A15               	goto	l5345
  2217                           
  2218                           ;main.c: 544: {
  2219                           ;main.c: 545: adaptivepidf=0;
  2220  0A11  01B7               	clrf	_adaptivepidf^(0+256)
  2221                           
  2222                           ;main.c: 546: Adaptive_base_pid();
  2223  0A12  3194  247D  3189   	fcall	_Adaptive_base_pid
  2224  0A15                     l5345:	
  2225                           
  2226                           ;main.c: 547: }
  2227                           ;main.c: 549: if(read_enc1f==1)
  2228  0A15  0022               	movlb	2	; select bank2
  2229  0A16  0859               	movf	_read_enc1f^(0+256),w	;volatile
  2230  0A17  3A01               	xorlw	1
  2231  0A18  1D03               	skipz
  2232  0A19  2BC8               	goto	l5493
  2233                           
  2234                           ;main.c: 550: {
  2235                           ;main.c: 551: read_enc1f=0;
  2236  0A1A  01D9               	clrf	_read_enc1f^(0+256)	;volatile
  2237                           
  2238                           ;main.c: 552: if(enccount==0)
  2239  0A1B  08C5               	movf	_enccount^(0+256),f	;volatile
  2240  0A1C  1D03               	skipz
  2241  0A1D  2ACA               	goto	l5405
  2242                           
  2243                           ;main.c: 553: {
  2244                           ;main.c: 554: encod1=SCANENCODER1();
  2245  0A1E  319D  256F  3189   	fcall	_SCANENCODER1
  2246  0A21  0021               	movlb	1	; select bank1
  2247  0A22  00ED               	movwf	??_main^(0+128)
  2248  0A23  086D               	movf	??_main^(0+128),w
  2249  0A24  0020               	movlb	0	; select bank0
  2250  0A25  00DE               	movwf	_encod1
  2251                           
  2252                           ;main.c: 555: mili1_100++;
  2253  0A26  3001               	movlw	1
  2254  0A27  0021               	movlb	1	; select bank1
  2255  0A28  00ED               	movwf	??_main^(0+128)
  2256  0A29  086D               	movf	??_main^(0+128),w
  2257  0A2A  0022               	movlb	2	; select bank2
  2258  0A2B  07CA               	addwf	_mili1_100^(0+256),f
  2259                           
  2260                           ;main.c: 556: {
  2261                           ;main.c: 557: if(encod1=='+')
  2262  0A2C  0020               	movlb	0	; select bank0
  2263  0A2D  085E               	movf	_encod1,w
  2264  0A2E  3A2B               	xorlw	43
  2265  0A2F  1D03               	skipz
  2266  0A30  2A43               	goto	l5363
  2267                           
  2268                           ;main.c: 558: {
  2269                           ;main.c: 559: setwirespeed=setwirespeed+pluspara1;
  2270  0A31  0022               	movlb	2	; select bank2
  2271  0A32  0856               	movf	_pluspara1^(0+256),w
  2272  0A33  0020               	movlb	0	; select bank0
  2273  0A34  075A               	addwf	_setwirespeed,w
  2274  0A35  00DA               	movwf	_setwirespeed
  2275  0A36  085B               	movf	_setwirespeed+1,w
  2276  0A37  1803               	skipnc
  2277  0A38  0A5B               	incf	_setwirespeed+1,w
  2278  0A39  00DB               	movwf	_setwirespeed+1
  2279                           
  2280                           ;main.c: 560: if(setwirespeed >= 220)
  2281  0A3A  3000               	movlw	0
  2282  0A3B  025B               	subwf	_setwirespeed+1,w
  2283  0A3C  30DC               	movlw	220
  2284  0A3D  1903               	skipnz
  2285  0A3E  025A               	subwf	_setwirespeed,w
  2286  0A3F  1C03               	skipc
  2287  0A40  2A84               	goto	l5375
  2288                           
  2289                           ;main.c: 561: setwirespeed=220;
  2290  0A41  30DC               	movlw	220
  2291  0A42  2A81               	goto	L5
  2292  0A43                     l5363:	
  2293                           ;main.c: 563: }
  2294                           
  2295                           ;main.c: 562: cEditfg = 1;
  2296                           
  2297                           
  2298                           ;main.c: 564: else if(encod1=='-')
  2299  0A43  0020               	movlb	0	; select bank0
  2300  0A44  085E               	movf	_encod1,w
  2301  0A45  3A2D               	xorlw	45
  2302  0A46  1D03               	skipz
  2303  0A47  2A87               	goto	l644
  2304                           
  2305                           ;main.c: 565: {
  2306                           ;main.c: 566: if(setwirespeed >= minuspara1)
  2307  0A48  0022               	movlb	2	; select bank2
  2308  0A49  0850               	movf	_minuspara1^(0+256),w
  2309  0A4A  0021               	movlb	1	; select bank1
  2310  0A4B  00ED               	movwf	??_main^(0+128)
  2311  0A4C  01EE               	clrf	(??_main^(0+128)+1)
  2312  0A4D  086E               	movf	(??_main+1)^(0+128),w
  2313  0A4E  0020               	movlb	0	; select bank0
  2314  0A4F  025B               	subwf	_setwirespeed+1,w
  2315  0A50  1D03               	skipz
  2316  0A51  2A56               	goto	u7605
  2317  0A52  0021               	movlb	1	; select bank1
  2318  0A53  086D               	movf	??_main^(0+128),w
  2319  0A54  0020               	movlb	0	; select bank0
  2320  0A55  025A               	subwf	_setwirespeed,w
  2321  0A56                     u7605:	
  2322  0A56  1C03               	skipc
  2323  0A57  2A6E               	goto	l5369
  2324                           
  2325                           ;main.c: 567: setwirespeed=setwirespeed-minuspara1;
  2326  0A58  0022               	movlb	2	; select bank2
  2327  0A59  0850               	movf	_minuspara1^(0+256),w
  2328  0A5A  0021               	movlb	1	; select bank1
  2329  0A5B  00ED               	movwf	??_main^(0+128)
  2330  0A5C  01EE               	clrf	(??_main^(0+128)+1)
  2331  0A5D  09ED               	comf	??_main^(0+128),f
  2332  0A5E  09EE               	comf	(??_main^(0+128)+1),f
  2333  0A5F  0AED               	incf	??_main^(0+128),f
  2334  0A60  1903               	skipnz
  2335  0A61  0AEE               	incf	(??_main^(0+128)+1),f
  2336  0A62  0020               	movlb	0	; select bank0
  2337  0A63  085A               	movf	_setwirespeed,w
  2338  0A64  0021               	movlb	1	; select bank1
  2339  0A65  076D               	addwf	??_main^(0+128),w
  2340  0A66  0020               	movlb	0	; select bank0
  2341  0A67  00DA               	movwf	_setwirespeed
  2342  0A68  085B               	movf	_setwirespeed+1,w
  2343  0A69  0021               	movlb	1	; select bank1
  2344  0A6A  3D6E               	addwfc	(??_main+1)^(0+128),w
  2345  0A6B  0020               	movlb	0	; select bank0
  2346  0A6C  00DB               	movwf	_setwirespeed+1
  2347  0A6D  2A79               	goto	l647
  2348  0A6E                     l5369:	
  2349                           
  2350                           ;main.c: 569: setwirespeed=setwirespeed--;
  2351  0A6E  3000               	movlw	0
  2352  0A6F  025B               	subwf	_setwirespeed+1,w
  2353  0A70  3014               	movlw	20
  2354  0A71  1903               	skipnz
  2355  0A72  025A               	subwf	_setwirespeed,w
  2356  0A73  1C03               	skipc
  2357  0A74  2A79               	goto	l647
  2358  0A75  3001               	movlw	1
  2359  0A76  02DA               	subwf	_setwirespeed,f
  2360  0A77  3000               	movlw	0
  2361  0A78  3BDB               	subwfb	_setwirespeed+1,f
  2362  0A79                     l647:	
  2363                           
  2364                           ;main.c: 570: if(setwirespeed <= 20)
  2365  0A79  3000               	movlw	0
  2366  0A7A  025B               	subwf	_setwirespeed+1,w
  2367  0A7B  3015               	movlw	21
  2368  0A7C  1903               	skipnz
  2369  0A7D  025A               	subwf	_setwirespeed,w
  2370  0A7E  1803               	skipnc
  2371  0A7F  2A84               	goto	l5375
  2372                           
  2373                           ;main.c: 571: setwirespeed=20;
  2374  0A80  3014               	movlw	20
  2375  0A81                     L5:	
  2376  0A81  00DA               	movwf	_setwirespeed
  2377  0A82  3000               	movlw	0
  2378  0A83  00DB               	movwf	_setwirespeed+1
  2379  0A84                     l5375:	
  2380                           
  2381                           ;main.c: 572: cEditfg = 1;
  2382  0A84  0022               	movlb	2	; select bank2
  2383  0A85  01B9               	clrf	_cEditfg^(0+256)
  2384  0A86  0AB9               	incf	_cEditfg^(0+256),f
  2385  0A87                     l644:	
  2386                           
  2387                           ;main.c: 573: }
  2388                           ;main.c: 574: }
  2389                           ;main.c: 575: if(mili1_100<200)
  2390  0A87  30C8               	movlw	200
  2391  0A88  0022               	movlb	2	; select bank2
  2392  0A89  024A               	subwf	_mili1_100^(0+256),w
  2393  0A8A  1803               	skipnc
  2394  0A8B  2AA4               	goto	l5385
  2395                           
  2396                           ;main.c: 576: {
  2397                           ;main.c: 577: if(encod1=='+')
  2398  0A8C  0020               	movlb	0	; select bank0
  2399  0A8D  085E               	movf	_encod1,w
  2400  0A8E  3A2B               	xorlw	43
  2401  0A8F  1D03               	skipz
  2402  0A90  2A98               	goto	l5381
  2403                           
  2404                           ;main.c: 578: pluscount1++;
  2405  0A91  3001               	movlw	1
  2406  0A92  0021               	movlb	1	; select bank1
  2407  0A93  00ED               	movwf	??_main^(0+128)
  2408  0A94  086D               	movf	??_main^(0+128),w
  2409  0A95  0022               	movlb	2	; select bank2
  2410  0A96  07D4               	addwf	_pluscount1^(0+256),f
  2411  0A97  2AC3               	goto	l5403
  2412  0A98                     l5381:	
  2413                           
  2414                           ;main.c: 579: else if(encod1=='-')
  2415  0A98  0020               	movlb	0	; select bank0
  2416  0A99  085E               	movf	_encod1,w
  2417  0A9A  3A2D               	xorlw	45
  2418  0A9B  1D03               	skipz
  2419  0A9C  2AC3               	goto	l5403
  2420                           
  2421                           ;main.c: 580: minuscount1++;
  2422  0A9D  3001               	movlw	1
  2423  0A9E  0021               	movlb	1	; select bank1
  2424  0A9F  00ED               	movwf	??_main^(0+128)
  2425  0AA0  086D               	movf	??_main^(0+128),w
  2426  0AA1  0022               	movlb	2	; select bank2
  2427  0AA2  07CE               	addwf	_minuscount1^(0+256),f
  2428                           
  2429                           ;main.c: 581: }
  2430  0AA3  2AC3               	goto	l5403
  2431  0AA4                     l5385:	
  2432                           
  2433                           ;main.c: 582: else if(mili1_100>=200)
  2434  0AA4  30C8               	movlw	200
  2435  0AA5  024A               	subwf	_mili1_100^(0+256),w
  2436  0AA6  1C03               	skipc
  2437  0AA7  2AC3               	goto	l5403
  2438                           
  2439                           ;main.c: 583: {
  2440                           ;main.c: 584: mili1_100=0;
  2441  0AA8  01CA               	clrf	_mili1_100^(0+256)
  2442                           
  2443                           ;main.c: 585: pluspara1=pluscount1>>1;
  2444  0AA9  3654               	lsrf	_pluscount1^(0+256),w
  2445  0AAA  0021               	movlb	1	; select bank1
  2446  0AAB  00ED               	movwf	??_main^(0+128)
  2447  0AAC  086D               	movf	??_main^(0+128),w
  2448  0AAD  0022               	movlb	2	; select bank2
  2449  0AAE  00D6               	movwf	_pluspara1^(0+256)
  2450                           
  2451                           ;main.c: 586: minuspara1=minuscount1>>1;
  2452  0AAF  364E               	lsrf	_minuscount1^(0+256),w
  2453  0AB0  0021               	movlb	1	; select bank1
  2454  0AB1  00ED               	movwf	??_main^(0+128)
  2455  0AB2  086D               	movf	??_main^(0+128),w
  2456  0AB3  0022               	movlb	2	; select bank2
  2457  0AB4  00D0               	movwf	_minuspara1^(0+256)
  2458                           
  2459                           ;main.c: 587: if(pluspara1<=1)
  2460  0AB5  3002               	movlw	2
  2461  0AB6  0256               	subwf	_pluspara1^(0+256),w
  2462  0AB7  1803               	skipnc
  2463  0AB8  2ABB               	goto	l5397
  2464                           
  2465                           ;main.c: 588: pluspara1=1;
  2466  0AB9  01D6               	clrf	_pluspara1^(0+256)
  2467  0ABA  0AD6               	incf	_pluspara1^(0+256),f
  2468  0ABB                     l5397:	
  2469                           
  2470                           ;main.c: 589: if(minuspara1<=1)
  2471  0ABB  3002               	movlw	2
  2472  0ABC  0250               	subwf	_minuspara1^(0+256),w
  2473  0ABD  1803               	skipnc
  2474  0ABE  2AC1               	goto	l5401
  2475                           
  2476                           ;main.c: 590: minuspara1=1;
  2477  0ABF  01D0               	clrf	_minuspara1^(0+256)
  2478  0AC0  0AD0               	incf	_minuspara1^(0+256),f
  2479  0AC1                     l5401:	
  2480                           
  2481                           ;main.c: 591: pluscount1=0;
  2482  0AC1  01D4               	clrf	_pluscount1^(0+256)
  2483                           
  2484                           ;main.c: 592: minuscount1=0;
  2485  0AC2  01CE               	clrf	_minuscount1^(0+256)
  2486  0AC3                     l5403:	
  2487                           
  2488                           ;main.c: 593: }
  2489                           ;main.c: 594: enccount++;
  2490  0AC3  3001               	movlw	1
  2491  0AC4  0021               	movlb	1	; select bank1
  2492  0AC5  00ED               	movwf	??_main^(0+128)
  2493  0AC6  086D               	movf	??_main^(0+128),w
  2494  0AC7  0022               	movlb	2	; select bank2
  2495  0AC8  07C5               	addwf	_enccount^(0+256),f	;volatile
  2496                           
  2497                           ;main.c: 595: }
  2498  0AC9  2BC8               	goto	l5493
  2499  0ACA                     l5405:	
  2500                           
  2501                           ;main.c: 596: else
  2502                           ;main.c: 597: {
  2503                           ;main.c: 598: mili2_100++;
  2504  0ACA  3001               	movlw	1
  2505  0ACB  0021               	movlb	1	; select bank1
  2506  0ACC  00ED               	movwf	??_main^(0+128)
  2507  0ACD  086D               	movf	??_main^(0+128),w
  2508  0ACE  0022               	movlb	2	; select bank2
  2509  0ACF  07CB               	addwf	_mili2_100^(0+256),f
  2510                           
  2511                           ;main.c: 599: encod2=SCANENCODER2();
  2512  0AD0  319C  24F1  3189   	fcall	_SCANENCODER2
  2513  0AD3  0021               	movlb	1	; select bank1
  2514  0AD4  00ED               	movwf	??_main^(0+128)
  2515  0AD5  086D               	movf	??_main^(0+128),w
  2516  0AD6  0020               	movlb	0	; select bank0
  2517  0AD7  00DF               	movwf	_encod2
  2518                           
  2519                           ;main.c: 600: if(TypeU.TypeS.vtg==1)
  2520  0AD8  1CE9               	btfss	_TypeU+1,1
  2521  0AD9  2B3B               	goto	l659
  2522                           
  2523                           ;main.c: 601: {
  2524                           ;main.c: 602: if(encod2=='+')
  2525  0ADA  085F               	movf	_encod2,w
  2526  0ADB  3A2B               	xorlw	43
  2527  0ADC  1D03               	skipz
  2528  0ADD  2AF2               	goto	l5419
  2529                           
  2530                           ;main.c: 603: {
  2531                           ;main.c: 604: setvoltage=setvoltage+pluspara2;
  2532  0ADE  0022               	movlb	2	; select bank2
  2533  0ADF  0857               	movf	_pluspara2^(0+256),w
  2534  0AE0  0020               	movlb	0	; select bank0
  2535  0AE1  0758               	addwf	_setvoltage,w
  2536  0AE2  00D8               	movwf	_setvoltage
  2537  0AE3  0859               	movf	_setvoltage+1,w
  2538  0AE4  1803               	skipnc
  2539  0AE5  0A59               	incf	_setvoltage+1,w
  2540  0AE6  00D9               	movwf	_setvoltage+1
  2541                           
  2542                           ;main.c: 605: if(setvoltage>440)
  2543  0AE7  3001               	movlw	1
  2544  0AE8  0259               	subwf	_setvoltage+1,w
  2545  0AE9  30B9               	movlw	185
  2546  0AEA  1903               	skipnz
  2547  0AEB  0258               	subwf	_setvoltage,w
  2548  0AEC  1C03               	skipc
  2549  0AED  2B31               	goto	l5431
  2550                           
  2551                           ;main.c: 606: setvoltage=440;
  2552  0AEE  30B8               	movlw	184
  2553  0AEF  00D8               	movwf	_setvoltage
  2554  0AF0  3001               	movlw	1
  2555  0AF1  2B30               	goto	L6
  2556  0AF2                     l5419:	
  2557                           ;main.c: 608: }
  2558                           
  2559                           ;main.c: 607: cEditfg = 1;
  2560                           
  2561                           
  2562                           ;main.c: 609: else if(encod2=='-')
  2563  0AF2  0020               	movlb	0	; select bank0
  2564  0AF3  085F               	movf	_encod2,w
  2565  0AF4  3A2D               	xorlw	45
  2566  0AF5  1D03               	skipz
  2567  0AF6  2B34               	goto	l662
  2568                           
  2569                           ;main.c: 610: {
  2570                           ;main.c: 611: if(setvoltage>=minuspara2)
  2571  0AF7  0861               	movf	_minuspara2,w
  2572  0AF8  0021               	movlb	1	; select bank1
  2573  0AF9  00ED               	movwf	??_main^(0+128)
  2574  0AFA  01EE               	clrf	(??_main^(0+128)+1)
  2575  0AFB  086E               	movf	(??_main+1)^(0+128),w
  2576  0AFC  0020               	movlb	0	; select bank0
  2577  0AFD  0259               	subwf	_setvoltage+1,w
  2578  0AFE  1D03               	skipz
  2579  0AFF  2B04               	goto	u7735
  2580  0B00  0021               	movlb	1	; select bank1
  2581  0B01  086D               	movf	??_main^(0+128),w
  2582  0B02  0020               	movlb	0	; select bank0
  2583  0B03  0258               	subwf	_setvoltage,w
  2584  0B04                     u7735:	
  2585  0B04  1C03               	skipc
  2586  0B05  2B1B               	goto	l5425
  2587                           
  2588                           ;main.c: 612: setvoltage=setvoltage-minuspara2;
  2589  0B06  0861               	movf	_minuspara2,w
  2590  0B07  0021               	movlb	1	; select bank1
  2591  0B08  00ED               	movwf	??_main^(0+128)
  2592  0B09  01EE               	clrf	(??_main^(0+128)+1)
  2593  0B0A  09ED               	comf	??_main^(0+128),f
  2594  0B0B  09EE               	comf	(??_main^(0+128)+1),f
  2595  0B0C  0AED               	incf	??_main^(0+128),f
  2596  0B0D  1903               	skipnz
  2597  0B0E  0AEE               	incf	(??_main^(0+128)+1),f
  2598  0B0F  0020               	movlb	0	; select bank0
  2599  0B10  0858               	movf	_setvoltage,w
  2600  0B11  0021               	movlb	1	; select bank1
  2601  0B12  076D               	addwf	??_main^(0+128),w
  2602  0B13  0020               	movlb	0	; select bank0
  2603  0B14  00D8               	movwf	_setvoltage
  2604  0B15  0859               	movf	_setvoltage+1,w
  2605  0B16  0021               	movlb	1	; select bank1
  2606  0B17  3D6E               	addwfc	(??_main+1)^(0+128),w
  2607  0B18  0020               	movlb	0	; select bank0
  2608  0B19  00D9               	movwf	_setvoltage+1
  2609  0B1A  2B26               	goto	l665
  2610  0B1B                     l5425:	
  2611                           
  2612                           ;main.c: 614: setvoltage=setvoltage--;
  2613  0B1B  3000               	movlw	0
  2614  0B1C  0259               	subwf	_setvoltage+1,w
  2615  0B1D  308C               	movlw	140
  2616  0B1E  1903               	skipnz
  2617  0B1F  0258               	subwf	_setvoltage,w
  2618  0B20  1C03               	skipc
  2619  0B21  2B26               	goto	l665
  2620  0B22  3001               	movlw	1
  2621  0B23  02D8               	subwf	_setvoltage,f
  2622  0B24  3000               	movlw	0
  2623  0B25  3BD9               	subwfb	_setvoltage+1,f
  2624  0B26                     l665:	
  2625                           
  2626                           ;main.c: 616: if(setvoltage<=140)
  2627  0B26  3000               	movlw	0
  2628  0B27  0259               	subwf	_setvoltage+1,w
  2629  0B28  308D               	movlw	141
  2630  0B29  1903               	skipnz
  2631  0B2A  0258               	subwf	_setvoltage,w
  2632  0B2B  1803               	skipnc
  2633  0B2C  2B31               	goto	l5431
  2634                           
  2635                           ;main.c: 617: setvoltage=140;
  2636  0B2D  308C               	movlw	140
  2637  0B2E  00D8               	movwf	_setvoltage
  2638  0B2F  3000               	movlw	0
  2639  0B30                     L6:	
  2640  0B30  00D9               	movwf	_setvoltage+1
  2641  0B31                     l5431:	
  2642                           
  2643                           ;main.c: 618: cEditfg = 1;
  2644  0B31  0022               	movlb	2	; select bank2
  2645  0B32  01B9               	clrf	_cEditfg^(0+256)
  2646  0B33  0AB9               	incf	_cEditfg^(0+256),f
  2647  0B34                     l662:	
  2648                           
  2649                           ;main.c: 619: }
  2650                           ;main.c: 621: encod2 = '$';
  2651  0B34  3024               	movlw	36
  2652  0B35  0021               	movlb	1	; select bank1
  2653  0B36  00ED               	movwf	??_main^(0+128)
  2654  0B37  086D               	movf	??_main^(0+128),w
  2655  0B38  0020               	movlb	0	; select bank0
  2656  0B39  00DF               	movwf	_encod2
  2657                           
  2658                           ;main.c: 623: }
  2659  0B3A  2B87               	goto	l5465
  2660  0B3B                     l659:	
  2661                           
  2662                           ;main.c: 624: else if(TypeU.TypeS.arclength==1)
  2663  0B3B  1D68               	btfss	_TypeU,2
  2664  0B3C  2B87               	goto	l5465
  2665                           
  2666                           ;main.c: 625: {
  2667                           ;main.c: 626: if(encod2=='+')
  2668  0B3D  085F               	movf	_encod2,w
  2669  0B3E  3A2B               	xorlw	43
  2670  0B3F  1D03               	skipz
  2671  0B40  2B67               	goto	l5449
  2672                           
  2673                           ;main.c: 627: {
  2674                           ;main.c: 628: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength+pluspara2;
  2675  0B41  0024               	movlb	4	; select bank4
  2676  0B42  084B               	movf	(_pstowfstru^(0+512)+7),w
  2677  0B43  0022               	movlb	2	; select bank2
  2678  0B44  0757               	addwf	_pluspara2^(0+256),w
  2679  0B45  0021               	movlb	1	; select bank1
  2680  0B46  00ED               	movwf	??_main^(0+128)
  2681  0B47  086D               	movf	??_main^(0+128),w
  2682  0B48  0024               	movlb	4	; select bank4
  2683  0B49  00CB               	movwf	(_pstowfstru^(0+512)+7)
  2684                           
  2685                           ;main.c: 630: if(weldmode=='P')
  2686  0B4A  0020               	movlb	0	; select bank0
  2687  0B4B  0867               	movf	_weldmode,w	;volatile
  2688  0B4C  3A50               	xorlw	80
  2689  0B4D  1D03               	skipz
  2690  0B4E  2B56               	goto	l5443
  2691                           
  2692                           ;main.c: 631: {
  2693                           ;main.c: 632: if(pstowfstru.pstowfstrs.arclength>80)
  2694  0B4F  3051               	movlw	81
  2695  0B50  0024               	movlb	4	; select bank4
  2696  0B51  024B               	subwf	(_pstowfstru^(0+512)+7),w
  2697  0B52  1C03               	skipc
  2698  0B53  2B84               	goto	l5463
  2699                           
  2700                           ;main.c: 633: pstowfstru.pstowfstrs.arclength=80;
  2701  0B54  3050               	movlw	80
  2702  0B55  2B61               	goto	L1
  2703  0B56                     l5443:	
  2704                           ;main.c: 634: }
  2705                           
  2706                           
  2707                           ;main.c: 635: else if(weldmode=='G')
  2708  0B56  0020               	movlb	0	; select bank0
  2709  0B57  0867               	movf	_weldmode,w	;volatile
  2710  0B58  3A47               	xorlw	71
  2711  0B59  1D03               	skipz
  2712  0B5A  2B84               	goto	l5463
  2713                           
  2714                           ;main.c: 636: {
  2715                           ;main.c: 637: if(pstowfstru.pstowfstrs.arclength>40)
  2716  0B5B  3029               	movlw	41
  2717  0B5C  0024               	movlb	4	; select bank4
  2718  0B5D  024B               	subwf	(_pstowfstru^(0+512)+7),w
  2719  0B5E  1C03               	skipc
  2720  0B5F  2B84               	goto	l5463
  2721                           
  2722                           ;main.c: 638: pstowfstru.pstowfstrs.arclength=40;
  2723  0B60  3028               	movlw	40
  2724  0B61                     L1:	
  2725  0B61  0021               	movlb	1	; select bank1
  2726  0B62  00ED               	movwf	??_main^(0+128)
  2727  0B63  086D               	movf	??_main^(0+128),w
  2728  0B64  0024               	movlb	4	; select bank4
  2729  0B65  00CB               	movwf	(_pstowfstru^(0+512)+7)
  2730                           
  2731                           ;main.c: 639: }
  2732                           ;main.c: 643: }
  2733  0B66  2B84               	goto	l5463
  2734  0B67                     l5449:	
  2735                           
  2736                           ;main.c: 644: else if(encod2=='-')
  2737  0B67  0020               	movlb	0	; select bank0
  2738  0B68  085F               	movf	_encod2,w
  2739  0B69  3A2D               	xorlw	45
  2740  0B6A  1D03               	skipz
  2741  0B6B  2B84               	goto	l5463
  2742                           
  2743                           ;main.c: 645: {
  2744                           ;main.c: 646: if(pstowfstru.pstowfstrs.arclength>=minuspara2)
  2745  0B6C  0861               	movf	_minuspara2,w
  2746  0B6D  0024               	movlb	4	; select bank4
  2747  0B6E  024B               	subwf	(_pstowfstru^(0+512)+7),w
  2748  0B6F  1C03               	skipc
  2749  0B70  2B7C               	goto	l5455
  2750                           
  2751                           ;main.c: 647: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength-minuspara2
      +                          ;
  2752  0B71  0020               	movlb	0	; select bank0
  2753  0B72  0361               	decf	_minuspara2,w
  2754  0B73  3AFF               	xorlw	255
  2755  0B74  0024               	movlb	4	; select bank4
  2756  0B75  074B               	addwf	(_pstowfstru^(0+512)+7),w
  2757  0B76  0021               	movlb	1	; select bank1
  2758  0B77  00ED               	movwf	??_main^(0+128)
  2759  0B78  086D               	movf	??_main^(0+128),w
  2760  0B79  0024               	movlb	4	; select bank4
  2761  0B7A  00CB               	movwf	(_pstowfstru^(0+512)+7)
  2762  0B7B  2B81               	goto	l5459
  2763  0B7C                     l5455:	
  2764                           
  2765                           ;main.c: 649: pstowfstru.pstowfstrs.arclength=pstowfstru.pstowfstrs.arclength--;
  2766  0B7C  084B               	movf	(_pstowfstru^(0+512)+7),w
  2767  0B7D  1903               	btfsc	3,2
  2768  0B7E  2B81               	goto	l5459
  2769  0B7F  3001               	movlw	1
  2770  0B80  02CB               	subwf	(_pstowfstru^(0+512)+7),f
  2771  0B81                     l5459:	
  2772                           
  2773                           ;main.c: 651: if(pstowfstru.pstowfstrs.arclength<=0)
  2774  0B81  08CB               	movf	(_pstowfstru^(0+512)+7),f
  2775  0B82  1903               	btfsc	3,2
  2776                           
  2777                           ;main.c: 652: pstowfstru.pstowfstrs.arclength=0;
  2778  0B83  01CB               	clrf	(_pstowfstru^(0+512)+7)
  2779  0B84                     l5463:	
  2780                           
  2781                           ;main.c: 653: }
  2782                           ;main.c: 654: cEditfg = 1;
  2783  0B84  0022               	movlb	2	; select bank2
  2784  0B85  01B9               	clrf	_cEditfg^(0+256)
  2785  0B86  0AB9               	incf	_cEditfg^(0+256),f
  2786  0B87                     l5465:	
  2787                           
  2788                           ;main.c: 655: }
  2789                           ;main.c: 656: if(mili2_100<200)
  2790  0B87  30C8               	movlw	200
  2791  0B88  0022               	movlb	2	; select bank2
  2792  0B89  024B               	subwf	_mili2_100^(0+256),w
  2793  0B8A  1803               	skipnc
  2794  0B8B  2BA4               	goto	l5475
  2795                           
  2796                           ;main.c: 657: {
  2797                           ;main.c: 658: if(encod2=='+')
  2798  0B8C  0020               	movlb	0	; select bank0
  2799  0B8D  085F               	movf	_encod2,w
  2800  0B8E  3A2B               	xorlw	43
  2801  0B8F  1D03               	skipz
  2802  0B90  2B98               	goto	l5471
  2803                           
  2804                           ;main.c: 659: pluscount2++;
  2805  0B91  3001               	movlw	1
  2806  0B92  0021               	movlb	1	; select bank1
  2807  0B93  00ED               	movwf	??_main^(0+128)
  2808  0B94  086D               	movf	??_main^(0+128),w
  2809  0B95  0022               	movlb	2	; select bank2
  2810  0B96  07D5               	addwf	_pluscount2^(0+256),f
  2811  0B97  2BC6               	goto	l686
  2812  0B98                     l5471:	
  2813                           
  2814                           ;main.c: 660: else if(encod2=='-')
  2815  0B98  0020               	movlb	0	; select bank0
  2816  0B99  085F               	movf	_encod2,w
  2817  0B9A  3A2D               	xorlw	45
  2818  0B9B  1D03               	skipz
  2819  0B9C  2BC6               	goto	l686
  2820                           
  2821                           ;main.c: 661: minuscount2++;
  2822  0B9D  3001               	movlw	1
  2823  0B9E  0021               	movlb	1	; select bank1
  2824  0B9F  00ED               	movwf	??_main^(0+128)
  2825  0BA0  086D               	movf	??_main^(0+128),w
  2826  0BA1  0022               	movlb	2	; select bank2
  2827  0BA2  07CF               	addwf	_minuscount2^(0+256),f
  2828                           
  2829                           ;main.c: 662: }
  2830  0BA3  2BC6               	goto	l686
  2831  0BA4                     l5475:	
  2832                           
  2833                           ;main.c: 663: else if(mili2_100>=200)
  2834  0BA4  30C8               	movlw	200
  2835  0BA5  024B               	subwf	_mili2_100^(0+256),w
  2836  0BA6  1C03               	skipc
  2837  0BA7  2BC6               	goto	l686
  2838                           
  2839                           ;main.c: 664: {
  2840                           ;main.c: 665: mili2_100=0;
  2841  0BA8  01CB               	clrf	_mili2_100^(0+256)
  2842                           
  2843                           ;main.c: 666: pluspara2=pluscount2;
  2844  0BA9  0855               	movf	_pluscount2^(0+256),w
  2845  0BAA  0021               	movlb	1	; select bank1
  2846  0BAB  00ED               	movwf	??_main^(0+128)
  2847  0BAC  086D               	movf	??_main^(0+128),w
  2848  0BAD  0022               	movlb	2	; select bank2
  2849  0BAE  00D7               	movwf	_pluspara2^(0+256)
  2850                           
  2851                           ;main.c: 667: minuspara2=minuscount2;
  2852  0BAF  084F               	movf	_minuscount2^(0+256),w
  2853  0BB0  0021               	movlb	1	; select bank1
  2854  0BB1  00ED               	movwf	??_main^(0+128)
  2855  0BB2  086D               	movf	??_main^(0+128),w
  2856  0BB3  0020               	movlb	0	; select bank0
  2857  0BB4  00E1               	movwf	_minuspara2
  2858                           
  2859                           ;main.c: 668: if(pluspara2<=1)
  2860  0BB5  3002               	movlw	2
  2861  0BB6  0022               	movlb	2	; select bank2
  2862  0BB7  0257               	subwf	_pluspara2^(0+256),w
  2863  0BB8  1803               	skipnc
  2864  0BB9  2BBC               	goto	l5487
  2865                           
  2866                           ;main.c: 669: pluspara2=1;
  2867  0BBA  01D7               	clrf	_pluspara2^(0+256)
  2868  0BBB  0AD7               	incf	_pluspara2^(0+256),f
  2869  0BBC                     l5487:	
  2870                           
  2871                           ;main.c: 670: if(minuspara2<=1)
  2872  0BBC  3002               	movlw	2
  2873  0BBD  0020               	movlb	0	; select bank0
  2874  0BBE  0261               	subwf	_minuspara2,w
  2875  0BBF  1803               	skipnc
  2876  0BC0  2BC3               	goto	l5491
  2877                           
  2878                           ;main.c: 671: minuspara2=1;
  2879  0BC1  01E1               	clrf	_minuspara2
  2880  0BC2  0AE1               	incf	_minuspara2,f
  2881  0BC3                     l5491:	
  2882                           
  2883                           ;main.c: 672: pluscount2=0;
  2884  0BC3  0022               	movlb	2	; select bank2
  2885  0BC4  01D5               	clrf	_pluscount2^(0+256)
  2886                           
  2887                           ;main.c: 673: minuscount2=0;
  2888  0BC5  01CF               	clrf	_minuscount2^(0+256)
  2889  0BC6                     l686:	
  2890                           
  2891                           ;main.c: 674: }
  2892                           ;main.c: 675: enccount=0;
  2893  0BC6  0022               	movlb	2	; select bank2
  2894  0BC7  01C5               	clrf	_enccount^(0+256)	;volatile
  2895  0BC8                     l5493:	
  2896                           
  2897                           ;main.c: 676: }
  2898                           ;main.c: 677: }
  2899                           ;main.c: 681: if(prevkey!=key)
  2900  0BC8  086E               	movf	_prevkey^(0+256),w	;volatile
  2901  0BC9  0021               	movlb	1	; select bank1
  2902  0BCA  066F               	xorwf	_key^(0+128),w	;volatile
  2903  0BCB  1903               	skipnz
  2904  0BCC  2BE5               	goto	l5505
  2905                           
  2906                           ;main.c: 682: {
  2907                           ;main.c: 684: key_application(key);
  2908  0BCD  086F               	movf	_key^(0+128),w	;volatile
  2909  0BCE  3186  2699  3189   	fcall	_key_application
  2910                           
  2911                           ;main.c: 685: if(key!=0)
  2912  0BD1  0021               	movlb	1	; select bank1
  2913  0BD2  086F               	movf	_key^(0+128),w	;volatile
  2914  0BD3  1903               	btfsc	3,2
  2915  0BD4  2BE5               	goto	l5505
  2916                           
  2917                           ;main.c: 686: {
  2918                           ;main.c: 687: count_1ms=0;
  2919  0BD5  0023               	movlb	3	; select bank3
  2920  0BD6  01B0               	clrf	_count_1ms^(0+384)	;volatile
  2921  0BD7  01B1               	clrf	(_count_1ms+1)^(0+384)	;volatile
  2922                           
  2923                           ;main.c: 688: onesecf=1;
  2924  0BD8  3001               	movlw	1
  2925  0BD9  0021               	movlb	1	; select bank1
  2926  0BDA  00ED               	movwf	??_main^(0+128)
  2927  0BDB  086D               	movf	??_main^(0+128),w
  2928  0BDC  0020               	movlb	0	; select bank0
  2929  0BDD  00E2               	movwf	_onesecf	;volatile
  2930                           
  2931                           ;main.c: 689: txonf=1;
  2932  0BDE  3001               	movlw	1
  2933  0BDF  0021               	movlb	1	; select bank1
  2934  0BE0  00ED               	movwf	??_main^(0+128)
  2935  0BE1  086D               	movf	??_main^(0+128),w
  2936  0BE2  0023               	movlb	3	; select bank3
  2937  0BE3  00D7               	movwf	_txonf^(0+384)	;volatile
  2938  0BE4  0021               	movlb	1	; select bank1
  2939  0BE5                     l5505:	
  2940                           
  2941                           ;main.c: 690: }
  2942                           ;main.c: 691: }
  2943                           ;main.c: 692: prevkey=key;
  2944  0BE5  0021               	movlb	1	; select bank1
  2945  0BE6  086F               	movf	_key^(0+128),w	;volatile
  2946  0BE7  00ED               	movwf	??_main^(0+128)
  2947  0BE8  086D               	movf	??_main^(0+128),w
  2948  0BE9  0022               	movlb	2	; select bank2
  2949  0BEA  00EE               	movwf	_prevkey^(0+256)	;volatile
  2950                           
  2951                           ;main.c: 696: if((psstatusu.psstatuss.weldoncyclestrt!=1)&&(cGasRlyClrfg == 0))
  2952  0BEB  0020               	movlb	0	; select bank0
  2953  0BEC  196E               	btfsc	_psstatusu,2
  2954  0BED  2D97               	goto	l692
  2955  0BEE  0022               	movlb	2	; select bank2
  2956  0BEF  08BA               	movf	_cGasRlyClrfg^(0+256),f
  2957  0BF0  1D03               	skipz
  2958  0BF1  2D97               	goto	l692
  2959                           
  2960                           ;main.c: 697: {
  2961                           ;main.c: 698: if( (prevsetwirespeed!=setwirespeed) || (prevsetcurrent!=setcurrent) || di
      +                          spupdatef==1 )
  2962  0BF2  0020               	movlb	0	; select bank0
  2963  0BF3  085B               	movf	_setwirespeed+1,w
  2964  0BF4  0023               	movlb	3	; select bank3
  2965  0BF5  0643               	xorwf	(_prevsetwirespeed+1)^(0+384),w
  2966  0BF6  1D03               	skipz
  2967  0BF7  2BFC               	goto	u7965
  2968  0BF8  0020               	movlb	0	; select bank0
  2969  0BF9  085A               	movf	_setwirespeed,w
  2970  0BFA  0023               	movlb	3	; select bank3
  2971  0BFB  0642               	xorwf	_prevsetwirespeed^(0+384),w
  2972  0BFC                     u7965:	
  2973  0BFC  1D03               	skipz
  2974  0BFD  2C0F               	goto	l5517
  2975  0BFE  0022               	movlb	2	; select bank2
  2976  0BFF  082F               	movf	(_setcurrent+1)^(0+256),w
  2977  0C00  0023               	movlb	3	; select bank3
  2978  0C01  063F               	xorwf	(_prevsetcurrent+1)^(0+384),w
  2979  0C02  1D03               	skipz
  2980  0C03  2C08               	goto	u7975
  2981  0C04  0022               	movlb	2	; select bank2
  2982  0C05  082E               	movf	_setcurrent^(0+256),w
  2983  0C06  0023               	movlb	3	; select bank3
  2984  0C07  063E               	xorwf	_prevsetcurrent^(0+384),w
  2985  0C08                     u7975:	
  2986  0C08  1D03               	skipz
  2987  0C09  2C0F               	goto	l5517
  2988  0C0A  0020               	movlb	0	; select bank0
  2989  0C0B  086F               	movf	_dispupdatef,w	;volatile
  2990  0C0C  3A01               	xorlw	1
  2991  0C0D  1D03               	skipz
  2992  0C0E  2C76               	goto	l5543
  2993  0C0F                     l5517:	
  2994                           
  2995                           ;main.c: 699: {
  2996                           ;main.c: 700: if((prevsetwirespeed!=setwirespeed) && (prevsetwirespeed > setwirespeed))
  2997  0C0F  0020               	movlb	0	; select bank0
  2998  0C10  085B               	movf	_setwirespeed+1,w
  2999  0C11  0023               	movlb	3	; select bank3
  3000  0C12  0643               	xorwf	(_prevsetwirespeed+1)^(0+384),w
  3001  0C13  1D03               	skipz
  3002  0C14  2C19               	goto	u7995
  3003  0C15  0020               	movlb	0	; select bank0
  3004  0C16  085A               	movf	_setwirespeed,w
  3005  0C17  0023               	movlb	3	; select bank3
  3006  0C18  0642               	xorwf	_prevsetwirespeed^(0+384),w
  3007  0C19                     u7995:	
  3008  0C19  1903               	skipnz
  3009  0C1A  2C29               	goto	l696
  3010  0C1B  0843               	movf	(_prevsetwirespeed+1)^(0+384),w
  3011  0C1C  0020               	movlb	0	; select bank0
  3012  0C1D  025B               	subwf	_setwirespeed+1,w
  3013  0C1E  1D03               	skipz
  3014  0C1F  2C24               	goto	u8005
  3015  0C20  0023               	movlb	3	; select bank3
  3016  0C21  0842               	movf	_prevsetwirespeed^(0+384),w
  3017  0C22  0020               	movlb	0	; select bank0
  3018  0C23  025A               	subwf	_setwirespeed,w
  3019  0C24                     u8005:	
  3020  0C24  1803               	skipnc
  3021  0C25  2C29               	goto	l696
  3022                           
  3023                           ;main.c: 701: {
  3024                           ;main.c: 702: wfspeedchangef=1;
  3025  0C26  0022               	movlb	2	; select bank2
  3026  0C27  01EF               	clrf	_wfspeedchangef^(0+256)
  3027  0C28  0AEF               	incf	_wfspeedchangef^(0+256),f
  3028  0C29                     l696:	
  3029                           
  3030                           ;main.c: 703: }
  3031                           ;main.c: 704: if(TypeU.TypeS.wirespeed==1)
  3032  0C29  0020               	movlb	0	; select bank0
  3033  0C2A  1C68               	btfss	_TypeU,0
  3034  0C2B  2C39               	goto	l697
  3035                           
  3036                           ;main.c: 705: {
  3037                           ;main.c: 706: TypeU.TypeS.wirespeed=1;
  3038  0C2C  1468               	bsf	_TypeU,0
  3039                           
  3040                           ;main.c: 707: TypeU.TypeS.amp=0;
  3041  0C2D  1069               	bcf	_TypeU+1,0
  3042                           
  3043                           ;main.c: 708: TypeU.TypeS.thickness=0;
  3044  0C2E  10E8               	bcf	_TypeU,1
  3045                           
  3046                           ;main.c: 710: TypeDP.TypeD.digitdp1 =0;
  3047  0C2F  106C               	bcf	_TypeDP,0
  3048                           
  3049                           ;main.c: 711: TypeDP.TypeD.digitdp2 =1;
  3050  0C30  14EC               	bsf	_TypeDP,1
  3051                           
  3052                           ;main.c: 712: TypeDP.TypeD.digitdp3 =0;
  3053  0C31  116C               	bcf	_TypeDP,2
  3054                           
  3055                           ;main.c: 713: disp_hex_window1(setwirespeed);
  3056  0C32  085B               	movf	_setwirespeed+1,w
  3057  0C33  0021               	movlb	1	; select bank1
  3058  0C34  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  3059  0C35  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  3060  0C36  0020               	movlb	0	; select bank0
  3061  0C37  085A               	movf	_setwirespeed,w
  3062  0C38  2C48               	goto	L8
  3063  0C39                     l697:	
  3064                           ;main.c: 714: }
  3065                           
  3066                           
  3067                           ;main.c: 715: else if(TypeU.TypeS.amp==1)
  3068  0C39  1C69               	btfss	_TypeU+1,0
  3069  0C3A  2C4C               	goto	l699
  3070                           
  3071                           ;main.c: 716: {
  3072                           ;main.c: 717: TypeU.TypeS.wirespeed=0;
  3073  0C3B  1068               	bcf	_TypeU,0
  3074                           
  3075                           ;main.c: 718: TypeU.TypeS.amp=1;
  3076  0C3C  1469               	bsf	_TypeU+1,0
  3077                           
  3078                           ;main.c: 719: TypeU.TypeS.thickness=0;
  3079  0C3D  10E8               	bcf	_TypeU,1
  3080                           
  3081                           ;main.c: 720: TypeDP.TypeD.digitdp1 =0;
  3082  0C3E  106C               	bcf	_TypeDP,0
  3083                           
  3084                           ;main.c: 721: TypeDP.TypeD.digitdp2 =0;
  3085  0C3F  10EC               	bcf	_TypeDP,1
  3086                           
  3087                           ;main.c: 722: TypeDP.TypeD.digitdp3 =0;
  3088  0C40  116C               	bcf	_TypeDP,2
  3089                           
  3090                           ;main.c: 723: disp_hex_window1(setcurrent);
  3091  0C41  0022               	movlb	2	; select bank2
  3092  0C42  082F               	movf	(_setcurrent+1)^(0+256),w
  3093  0C43  0021               	movlb	1	; select bank1
  3094  0C44  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  3095  0C45  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  3096  0C46  0022               	movlb	2	; select bank2
  3097  0C47  082E               	movf	_setcurrent^(0+256),w
  3098  0C48                     L8:	
  3099  0C48  0021               	movlb	1	; select bank1
  3100  0C49  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  3101  0C4A  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  3102  0C4B  2C5D               	goto	L7
  3103  0C4C                     l699:	
  3104                           ;main.c: 724: }
  3105                           
  3106                           
  3107                           ;main.c: 725: else if(TypeU.TypeS.thickness==1)
  3108  0C4C  1CE8               	btfss	_TypeU,1
  3109  0C4D  2C60               	goto	l5535
  3110                           
  3111                           ;main.c: 726: {
  3112                           ;main.c: 727: TypeU.TypeS.wirespeed =0;
  3113  0C4E  1068               	bcf	_TypeU,0
  3114                           
  3115                           ;main.c: 728: TypeU.TypeS.amp =0;
  3116  0C4F  1069               	bcf	_TypeU+1,0
  3117                           
  3118                           ;main.c: 729: TypeU.TypeS.thickness =1;
  3119  0C50  14E8               	bsf	_TypeU,1
  3120                           
  3121                           ;main.c: 730: TypeDP.TypeD.digitdp1 =0;
  3122  0C51  106C               	bcf	_TypeDP,0
  3123                           
  3124                           ;main.c: 731: TypeDP.TypeD.digitdp2 =1;
  3125  0C52  14EC               	bsf	_TypeDP,1
  3126                           
  3127                           ;main.c: 732: TypeDP.TypeD.digitdp3 =0;
  3128  0C53  116C               	bcf	_TypeDP,2
  3129                           
  3130                           ;main.c: 733: disp_hex_window1(pstowfstru.pstowfstrs.setthickness);
  3131  0C54  0024               	movlb	4	; select bank4
  3132  0C55  0848               	movf	(_pstowfstru^(0+512)+4),w
  3133  0C56  0021               	movlb	1	; select bank1
  3134  0C57  00ED               	movwf	??_main^(0+128)
  3135  0C58  01EE               	clrf	(??_main^(0+128)+1)
  3136  0C59  086D               	movf	??_main^(0+128),w
  3137  0C5A  00A8               	movwf	disp_hex_window1@hex_data^(0+128)
  3138  0C5B  086E               	movf	(??_main+1)^(0+128),w
  3139  0C5C  00A9               	movwf	(disp_hex_window1@hex_data+1)^(0+128)
  3140  0C5D                     L7:	
  3141  0C5D  319C  2427  3189   	fcall	_disp_hex_window1
  3142  0C60                     l5535:	
  3143                           
  3144                           ;main.c: 734: }
  3145                           ;main.c: 737: pstowfstru.pstowfstrs.setwspeed=setwirespeed;
  3146  0C60  0020               	movlb	0	; select bank0
  3147  0C61  085A               	movf	_setwirespeed,w
  3148  0C62  0021               	movlb	1	; select bank1
  3149  0C63  00ED               	movwf	??_main^(0+128)
  3150  0C64  086D               	movf	??_main^(0+128),w
  3151  0C65  0024               	movlb	4	; select bank4
  3152  0C66  00C5               	movwf	(_pstowfstru^(0+512)+1)
  3153                           
  3154                           ;main.c: 739: count_1ms=0;
  3155  0C67  0023               	movlb	3	; select bank3
  3156  0C68  01B0               	clrf	_count_1ms^(0+384)	;volatile
  3157  0C69  01B1               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3158                           
  3159                           ;main.c: 740: onesecf=1;
  3160  0C6A  3001               	movlw	1
  3161  0C6B  0021               	movlb	1	; select bank1
  3162  0C6C  00ED               	movwf	??_main^(0+128)
  3163  0C6D  086D               	movf	??_main^(0+128),w
  3164  0C6E  0020               	movlb	0	; select bank0
  3165  0C6F  00E2               	movwf	_onesecf	;volatile
  3166                           
  3167                           ;main.c: 741: txonf=1;
  3168  0C70  3001               	movlw	1
  3169  0C71  0021               	movlb	1	; select bank1
  3170  0C72  00ED               	movwf	??_main^(0+128)
  3171  0C73  086D               	movf	??_main^(0+128),w
  3172  0C74  0023               	movlb	3	; select bank3
  3173  0C75  00D7               	movwf	_txonf^(0+384)	;volatile
  3174  0C76                     l5543:	
  3175                           
  3176                           ;main.c: 742: }
  3177                           ;main.c: 743: prevsetwirespeed=setwirespeed;
  3178  0C76  0020               	movlb	0	; select bank0
  3179  0C77  085B               	movf	_setwirespeed+1,w
  3180  0C78  0023               	movlb	3	; select bank3
  3181  0C79  01C3               	clrf	(_prevsetwirespeed+1)^(0+384)
  3182  0C7A  07C3               	addwf	(_prevsetwirespeed+1)^(0+384),f
  3183  0C7B  0020               	movlb	0	; select bank0
  3184  0C7C  085A               	movf	_setwirespeed,w
  3185  0C7D  0023               	movlb	3	; select bank3
  3186  0C7E  01C2               	clrf	_prevsetwirespeed^(0+384)
  3187  0C7F  07C2               	addwf	_prevsetwirespeed^(0+384),f
  3188                           
  3189                           ;main.c: 744: prevsetcurrent=setcurrent;
  3190  0C80  0022               	movlb	2	; select bank2
  3191  0C81  082F               	movf	(_setcurrent+1)^(0+256),w
  3192  0C82  0023               	movlb	3	; select bank3
  3193  0C83  01BF               	clrf	(_prevsetcurrent+1)^(0+384)
  3194  0C84  07BF               	addwf	(_prevsetcurrent+1)^(0+384),f
  3195  0C85  0022               	movlb	2	; select bank2
  3196  0C86  082E               	movf	_setcurrent^(0+256),w
  3197  0C87  0023               	movlb	3	; select bank3
  3198  0C88  01BE               	clrf	_prevsetcurrent^(0+384)
  3199  0C89  07BE               	addwf	_prevsetcurrent^(0+384),f
  3200                           
  3201                           ;main.c: 746: if(((prevsetvoltage!=setvoltage) || dispupdatef==1) && (TypeU.TypeS.vtg==1
      +                          ) )
  3202  0C8A  0020               	movlb	0	; select bank0
  3203  0C8B  0859               	movf	_setvoltage+1,w
  3204  0C8C  0023               	movlb	3	; select bank3
  3205  0C8D  0641               	xorwf	(_prevsetvoltage+1)^(0+384),w
  3206  0C8E  1D03               	skipz
  3207  0C8F  2C94               	goto	u8045
  3208  0C90  0020               	movlb	0	; select bank0
  3209  0C91  0858               	movf	_setvoltage,w
  3210  0C92  0023               	movlb	3	; select bank3
  3211  0C93  0640               	xorwf	_prevsetvoltage^(0+384),w
  3212  0C94                     u8045:	
  3213  0C94  1D03               	skipz
  3214  0C95  2C9B               	goto	l704
  3215  0C96  0020               	movlb	0	; select bank0
  3216  0C97  086F               	movf	_dispupdatef,w	;volatile
  3217  0C98  3A01               	xorlw	1
  3218  0C99  1D03               	skipz
  3219  0C9A  2CDC               	goto	l5569
  3220  0C9B                     l704:	
  3221  0C9B  0020               	movlb	0	; select bank0
  3222  0C9C  1CE9               	btfss	_TypeU+1,1
  3223  0C9D  2CDC               	goto	l5569
  3224                           
  3225                           ;main.c: 747: {
  3226                           ;main.c: 748: TypeDP.TypeD.digitdp4 =0;
  3227  0C9E  11EC               	bcf	_TypeDP,3
  3228                           
  3229                           ;main.c: 749: TypeDP.TypeD.digitdp5 =1;
  3230  0C9F  166C               	bsf	_TypeDP,4
  3231                           
  3232                           ;main.c: 750: TypeDP.TypeD.digitdp6 =0;
  3233  0CA0  12EC               	bcf	_TypeDP,5
  3234                           
  3235                           ;main.c: 751: TypeU.TypeS.arclength =0;
  3236  0CA1  1168               	bcf	_TypeU,2
  3237                           
  3238                           ;main.c: 752: TypeU.TypeS.vtg =1;
  3239  0CA2  14E9               	bsf	_TypeU+1,1
  3240                           
  3241                           ;main.c: 753: TypeU.TypeS.sec =0;
  3242  0CA3  1169               	bcf	_TypeU+1,2
  3243                           
  3244                           ;main.c: 754: disp_hex_window2(setvoltage);
  3245  0CA4  0859               	movf	_setvoltage+1,w
  3246  0CA5  0021               	movlb	1	; select bank1
  3247  0CA6  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  3248  0CA7  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  3249  0CA8  0020               	movlb	0	; select bank0
  3250  0CA9  0858               	movf	_setvoltage,w
  3251  0CAA  0021               	movlb	1	; select bank1
  3252  0CAB  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  3253  0CAC  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  3254  0CAD  319C  248B  3189   	fcall	_disp_hex_window2
  3255                           
  3256                           ;main.c: 756: pstowfstru.pstowfstrs.Lo_setvoltage=setvoltage;
  3257  0CB0  0020               	movlb	0	; select bank0
  3258  0CB1  0858               	movf	_setvoltage,w
  3259  0CB2  0021               	movlb	1	; select bank1
  3260  0CB3  00ED               	movwf	??_main^(0+128)
  3261  0CB4  086D               	movf	??_main^(0+128),w
  3262  0CB5  0024               	movlb	4	; select bank4
  3263  0CB6  00CA               	movwf	(_pstowfstru^(0+512)+6)
  3264                           
  3265                           ;main.c: 757: pstowfstru.pstowfstrs.Hi_setvoltage=setvoltage >> 8;
  3266  0CB7  0020               	movlb	0	; select bank0
  3267  0CB8  0859               	movf	_setvoltage+1,w
  3268  0CB9  0021               	movlb	1	; select bank1
  3269  0CBA  00ED               	movwf	??_main^(0+128)
  3270  0CBB  086D               	movf	??_main^(0+128),w
  3271  0CBC  0024               	movlb	4	; select bank4
  3272  0CBD  00C9               	movwf	(_pstowfstru^(0+512)+5)
  3273                           
  3274                           ;main.c: 758: count_1ms=0;
  3275  0CBE  0023               	movlb	3	; select bank3
  3276  0CBF  01B0               	clrf	_count_1ms^(0+384)	;volatile
  3277  0CC0  01B1               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3278                           
  3279                           ;main.c: 759: onesecf=1;
  3280  0CC1  3001               	movlw	1
  3281  0CC2  0021               	movlb	1	; select bank1
  3282  0CC3  00ED               	movwf	??_main^(0+128)
  3283  0CC4  086D               	movf	??_main^(0+128),w
  3284  0CC5  0020               	movlb	0	; select bank0
  3285  0CC6  00E2               	movwf	_onesecf	;volatile
  3286                           
  3287                           ;main.c: 760: txonf=1;
  3288  0CC7  3001               	movlw	1
  3289  0CC8  0021               	movlb	1	; select bank1
  3290  0CC9  00ED               	movwf	??_main^(0+128)
  3291  0CCA  086D               	movf	??_main^(0+128),w
  3292  0CCB  0023               	movlb	3	; select bank3
  3293  0CCC  00D7               	movwf	_txonf^(0+384)	;volatile
  3294                           
  3295                           ;main.c: 761: prevsetvoltage=setvoltage;
  3296  0CCD  0020               	movlb	0	; select bank0
  3297  0CCE  0859               	movf	_setvoltage+1,w
  3298  0CCF  0023               	movlb	3	; select bank3
  3299  0CD0  01C1               	clrf	(_prevsetvoltage+1)^(0+384)
  3300  0CD1  07C1               	addwf	(_prevsetvoltage+1)^(0+384),f
  3301  0CD2  0020               	movlb	0	; select bank0
  3302  0CD3  0858               	movf	_setvoltage,w
  3303  0CD4  0023               	movlb	3	; select bank3
  3304  0CD5  01C0               	clrf	_prevsetvoltage^(0+384)
  3305  0CD6  07C0               	addwf	_prevsetvoltage^(0+384),f
  3306                           
  3307                           ;main.c: 762: parclength=100;
  3308  0CD7  3064               	movlw	100
  3309  0CD8  0024               	movlb	4	; select bank4
  3310  0CD9  00DF               	movwf	_parclength^(0+512)
  3311  0CDA  3000               	movlw	0
  3312  0CDB  00E0               	movwf	(_parclength^(0+512)+1)
  3313  0CDC                     l5569:	
  3314                           
  3315                           ;main.c: 763: }
  3316                           ;main.c: 766: if(((parclength!=pstowfstru.pstowfstrs.arclength) || dispupdatef==1) && (T
      +                          ypeU.TypeS.arclength==1))
  3317  0CDC  0024               	movlb	4	; select bank4
  3318  0CDD  084B               	movf	(_pstowfstru^(0+512)+7),w
  3319  0CDE  0021               	movlb	1	; select bank1
  3320  0CDF  00ED               	movwf	??_main^(0+128)
  3321  0CE0  01EE               	clrf	(??_main^(0+128)+1)
  3322  0CE1  0024               	movlb	4	; select bank4
  3323  0CE2  0860               	movf	(_parclength+1)^(0+512),w
  3324  0CE3  0021               	movlb	1	; select bank1
  3325  0CE4  066E               	xorwf	(??_main+1)^(0+128),w
  3326  0CE5  1D03               	skipz
  3327  0CE6  2CEB               	goto	u8075
  3328  0CE7  0024               	movlb	4	; select bank4
  3329  0CE8  085F               	movf	_parclength^(0+512),w
  3330  0CE9  0021               	movlb	1	; select bank1
  3331  0CEA  066D               	xorwf	??_main^(0+128),w
  3332  0CEB                     u8075:	
  3333  0CEB  1D03               	skipz
  3334  0CEC  2CF2               	goto	l707
  3335  0CED  0020               	movlb	0	; select bank0
  3336  0CEE  086F               	movf	_dispupdatef,w	;volatile
  3337  0CEF  3A01               	xorlw	1
  3338  0CF0  1D03               	skipz
  3339  0CF1  2D6B               	goto	l5617
  3340  0CF2                     l707:	
  3341  0CF2  0020               	movlb	0	; select bank0
  3342  0CF3  1D68               	btfss	_TypeU,2
  3343  0CF4  2D6B               	goto	l5617
  3344                           
  3345                           ;main.c: 767: {
  3346                           ;main.c: 770: if(weldmode=='P')
  3347  0CF5  0867               	movf	_weldmode,w	;volatile
  3348  0CF6  3A50               	xorlw	80
  3349  0CF7  1D03               	skipz
  3350  0CF8  2D18               	goto	l5581
  3351                           
  3352                           ;main.c: 771: {
  3353                           ;main.c: 772: if(pstowfstru.pstowfstrs.arclength>=40)
  3354  0CF9  3028               	movlw	40
  3355  0CFA  0024               	movlb	4	; select bank4
  3356  0CFB  024B               	subwf	(_pstowfstru^(0+512)+7),w
  3357  0CFC  1C03               	skipc
  3358  0CFD  2D06               	goto	l5579
  3359                           
  3360                           ;main.c: 773: disparclength=pstowfstru.pstowfstrs.arclength-40;
  3361  0CFE  084B               	movf	(_pstowfstru^(0+512)+7),w
  3362  0CFF  3ED8               	addlw	216
  3363  0D00  00B8               	movwf	_disparclength^(0+512)
  3364  0D01  30FF               	movlw	255
  3365  0D02  1803               	skipnc
  3366  0D03  3000               	movlw	0
  3367  0D04  00B9               	movwf	(_disparclength^(0+512)+1)
  3368  0D05  2D18               	goto	l5581
  3369  0D06                     l5579:	
  3370                           
  3371                           ;main.c: 774: else
  3372                           ;main.c: 775: disparclength=40 - pstowfstru.pstowfstrs.arclength;
  3373  0D06  084B               	movf	(_pstowfstru^(0+512)+7),w
  3374  0D07  0021               	movlb	1	; select bank1
  3375  0D08  00ED               	movwf	??_main^(0+128)
  3376  0D09  01EE               	clrf	(??_main^(0+128)+1)
  3377  0D0A  09ED               	comf	??_main^(0+128),f
  3378  0D0B  09EE               	comf	(??_main^(0+128)+1),f
  3379  0D0C  0AED               	incf	??_main^(0+128),f
  3380  0D0D  1903               	skipnz
  3381  0D0E  0AEE               	incf	(??_main^(0+128)+1),f
  3382  0D0F  086D               	movf	??_main^(0+128),w
  3383  0D10  3E28               	addlw	40
  3384  0D11  0024               	movlb	4	; select bank4
  3385  0D12  00B8               	movwf	_disparclength^(0+512)
  3386  0D13  3000               	movlw	0
  3387  0D14  0021               	movlb	1	; select bank1
  3388  0D15  3D6E               	addwfc	(??_main+1)^(0+128),w
  3389  0D16  0024               	movlb	4	; select bank4
  3390  0D17  00B9               	movwf	(_disparclength+1)^(0+512)
  3391  0D18                     l5581:	
  3392                           
  3393                           ;main.c: 776: }
  3394                           ;main.c: 778: if(weldmode=='G')
  3395  0D18  0020               	movlb	0	; select bank0
  3396  0D19  0867               	movf	_weldmode,w	;volatile
  3397  0D1A  3A47               	xorlw	71
  3398  0D1B  1D03               	skipz
  3399  0D1C  2D29               	goto	l5585
  3400                           
  3401                           ;main.c: 779: {
  3402                           ;main.c: 780: disparclength=pstowfstru.pstowfstrs.arclength;
  3403  0D1D  0024               	movlb	4	; select bank4
  3404  0D1E  084B               	movf	(_pstowfstru^(0+512)+7),w
  3405  0D1F  0021               	movlb	1	; select bank1
  3406  0D20  00ED               	movwf	??_main^(0+128)
  3407  0D21  01EE               	clrf	(??_main^(0+128)+1)
  3408  0D22  086D               	movf	??_main^(0+128),w
  3409  0D23  0024               	movlb	4	; select bank4
  3410  0D24  00B8               	movwf	_disparclength^(0+512)
  3411  0D25  0021               	movlb	1	; select bank1
  3412  0D26  086E               	movf	(??_main+1)^(0+128),w
  3413  0D27  0024               	movlb	4	; select bank4
  3414  0D28  00B9               	movwf	(_disparclength+1)^(0+512)
  3415  0D29                     l5585:	
  3416                           
  3417                           ;main.c: 781: }
  3418                           ;main.c: 783: TypeDP.TypeD.digitdp4 =0;
  3419  0D29  0020               	movlb	0	; select bank0
  3420  0D2A  11EC               	bcf	_TypeDP,3
  3421                           
  3422                           ;main.c: 784: TypeDP.TypeD.digitdp5 =0;
  3423  0D2B  126C               	bcf	_TypeDP,4
  3424                           
  3425                           ;main.c: 785: TypeDP.TypeD.digitdp6 =0;
  3426  0D2C  12EC               	bcf	_TypeDP,5
  3427                           
  3428                           ;main.c: 786: TypeU.TypeS.arclength =1;
  3429  0D2D  1568               	bsf	_TypeU,2
  3430                           
  3431                           ;main.c: 787: TypeU.TypeS.vtg =0;
  3432  0D2E  10E9               	bcf	_TypeU+1,1
  3433                           
  3434                           ;main.c: 788: TypeU.TypeS.sec =0;
  3435  0D2F  1169               	bcf	_TypeU+1,2
  3436                           
  3437                           ;main.c: 789: disp_hex_window2(disparclength);
  3438  0D30  0024               	movlb	4	; select bank4
  3439  0D31  0839               	movf	(_disparclength+1)^(0+512),w
  3440  0D32  0021               	movlb	1	; select bank1
  3441  0D33  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  3442  0D34  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  3443  0D35  0024               	movlb	4	; select bank4
  3444  0D36  0838               	movf	_disparclength^(0+512),w
  3445  0D37  0021               	movlb	1	; select bank1
  3446  0D38  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  3447  0D39  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  3448  0D3A  319C  248B  3189   	fcall	_disp_hex_window2
  3449                           
  3450                           ;main.c: 792: if(weldmode=='P')
  3451  0D3D  0020               	movlb	0	; select bank0
  3452  0D3E  0867               	movf	_weldmode,w	;volatile
  3453  0D3F  3A50               	xorlw	80
  3454  0D40  1D03               	skipz
  3455  0D41  2D49               	goto	l5607
  3456                           
  3457                           ;main.c: 793: {
  3458                           ;main.c: 794: if(pstowfstru.pstowfstrs.arclength>=40)
  3459  0D42  3028               	movlw	40
  3460  0D43  0024               	movlb	4	; select bank4
  3461  0D44  024B               	subwf	(_pstowfstru^(0+512)+7),w
  3462  0D45  1803               	btfsc	3,0
  3463  0D46  2D49               	goto	l5607
  3464                           
  3465                           ;main.c: 796: else
  3466                           ;main.c: 797: diswin1[3]=0x26;
  3467                           
  3468                           ;main.c: 795: diswin1[3]=0x25;
  3469  0D47  3026               	movlw	38
  3470  0D48  2D4A               	goto	L3
  3471  0D49                     l5607:	
  3472                           ;main.c: 798: }
  3473                           
  3474                           
  3475                           ;main.c: 799: else
  3476                           ;main.c: 800: diswin1[3]=0x25;
  3477  0D49  3025               	movlw	37
  3478  0D4A                     L3:	
  3479  0D4A  0021               	movlb	1	; select bank1
  3480  0D4B  00ED               	movwf	??_main^(0+128)
  3481  0D4C  086D               	movf	??_main^(0+128),w
  3482  0D4D  0023               	movlb	3	; select bank3
  3483  0D4E  00DD               	movwf	(_diswin1^(0+384)+3)
  3484                           
  3485                           ;main.c: 803: count_1ms=0;
  3486  0D4F  01B0               	clrf	_count_1ms^(0+384)	;volatile
  3487  0D50  01B1               	clrf	(_count_1ms+1)^(0+384)	;volatile
  3488                           
  3489                           ;main.c: 804: onesecf=1;
  3490  0D51  3001               	movlw	1
  3491  0D52  0021               	movlb	1	; select bank1
  3492  0D53  00ED               	movwf	??_main^(0+128)
  3493  0D54  086D               	movf	??_main^(0+128),w
  3494  0D55  0020               	movlb	0	; select bank0
  3495  0D56  00E2               	movwf	_onesecf	;volatile
  3496                           
  3497                           ;main.c: 805: txonf=1;
  3498  0D57  3001               	movlw	1
  3499  0D58  0021               	movlb	1	; select bank1
  3500  0D59  00ED               	movwf	??_main^(0+128)
  3501  0D5A  086D               	movf	??_main^(0+128),w
  3502  0D5B  0023               	movlb	3	; select bank3
  3503  0D5C  00D7               	movwf	_txonf^(0+384)	;volatile
  3504                           
  3505                           ;main.c: 806: prevsetvoltage=0;
  3506  0D5D  01C0               	clrf	_prevsetvoltage^(0+384)
  3507  0D5E  01C1               	clrf	(_prevsetvoltage+1)^(0+384)
  3508                           
  3509                           ;main.c: 807: parclength=pstowfstru.pstowfstrs.arclength;
  3510  0D5F  0024               	movlb	4	; select bank4
  3511  0D60  084B               	movf	(_pstowfstru^(0+512)+7),w
  3512  0D61  0021               	movlb	1	; select bank1
  3513  0D62  00ED               	movwf	??_main^(0+128)
  3514  0D63  01EE               	clrf	(??_main^(0+128)+1)
  3515  0D64  086D               	movf	??_main^(0+128),w
  3516  0D65  0024               	movlb	4	; select bank4
  3517  0D66  00DF               	movwf	_parclength^(0+512)
  3518  0D67  0021               	movlb	1	; select bank1
  3519  0D68  086E               	movf	(??_main+1)^(0+128),w
  3520  0D69  0024               	movlb	4	; select bank4
  3521  0D6A  00E0               	movwf	(_parclength+1)^(0+512)
  3522  0D6B                     l5617:	
  3523                           
  3524                           ;main.c: 808: }
  3525                           ;main.c: 811: if(psstatusu.psstatuss.gasoncommand!=1)
  3526  0D6B  0020               	movlb	0	; select bank0
  3527  0D6C  1CEE               	btfss	_psstatusu,1
  3528                           
  3529                           ;main.c: 812: PORTCbits.RC3 =0;
  3530  0D6D  118E               	bcf	14,3	;volatile
  3531                           
  3532                           ;main.c: 813: if(psstatusu.psstatuss.motoroncommand!=1)
  3533  0D6E  19EE               	btfsc	_psstatusu,3
  3534  0D6F  2D8A               	goto	l5623
  3535                           
  3536                           ;main.c: 814: Update_PWM(setwirespeed*0);
  3537  0D70  085B               	movf	_setwirespeed+1,w
  3538  0D71  0021               	movlb	1	; select bank1
  3539  0D72  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3540  0D73  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3541  0D74  0020               	movlb	0	; select bank0
  3542  0D75  085A               	movf	_setwirespeed,w
  3543  0D76  0021               	movlb	1	; select bank1
  3544  0D77  01A0               	clrf	___wmul@multiplier^(0+128)
  3545  0D78  07A0               	addwf	___wmul@multiplier^(0+128),f
  3546  0D79  3000               	movlw	0
  3547  0D7A  00A2               	movwf	___wmul@multiplicand^(0+128)
  3548  0D7B  3000               	movlw	0
  3549  0D7C  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  3550  0D7D  3190  2001  3189   	fcall	___wmul
  3551  0D80  0021               	movlb	1	; select bank1
  3552  0D81  0821               	movf	(?___wmul+1)^(0+128),w
  3553  0D82  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3554  0D83  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3555  0D84  0820               	movf	?___wmul^(0+128),w
  3556  0D85  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3557  0D86  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3558  0D87  3199  21E7  3189   	fcall	_Update_PWM
  3559  0D8A                     l5623:	
  3560                           
  3561                           ;main.c: 816: openloopcnt =0;
  3562  0D8A  0024               	movlb	4	; select bank4
  3563  0D8B  01C0               	clrf	_openloopcnt^(0+512)
  3564  0D8C  01C1               	clrf	(_openloopcnt+1)^(0+512)
  3565                           
  3566                           ;main.c: 817: softstartf =0;
  3567  0D8D  0023               	movlb	3	; select bank3
  3568  0D8E  01D5               	clrf	_softstartf^(0+384)	;volatile
  3569                           
  3570                           ;main.c: 818: dispupdatef =0;
  3571  0D8F  0020               	movlb	0	; select bank0
  3572  0D90  01EF               	clrf	_dispupdatef	;volatile
  3573                           
  3574                           ;main.c: 819: closeloopf=0;
  3575  0D91  0022               	movlb	2	; select bank2
  3576  0D92  01BF               	clrf	_closeloopf^(0+256)
  3577                           
  3578                           ;main.c: 820: cyclestrtf=0;
  3579  0D93  01C4               	clrf	_cyclestrtf^(0+256)
  3580                           
  3581                           ;main.c: 822: psstatusu.psstatuss.creepspeedon=1;
  3582  0D94  0020               	movlb	0	; select bank0
  3583  0D95  16EE               	bsf	_psstatusu,5
  3584                           
  3585                           ;main.c: 825: }
  3586  0D96  2FE6               	goto	l5729
  3587  0D97                     l692:	
  3588                           
  3589                           ;main.c: 827: else if(psstatusu.psstatuss.weldoncyclestrt==1)
  3590  0D97  0020               	movlb	0	; select bank0
  3591  0D98  1D6E               	btfss	_psstatusu,2
  3592  0D99  2FE6               	goto	l5729
  3593                           
  3594                           ;main.c: 828: {
  3595                           ;main.c: 829: if(psstatusu.psstatuss.gasoncommand==1)
  3596  0D9A  1CEE               	btfss	_psstatusu,1
  3597  0D9B  2D9E               	goto	l720
  3598                           
  3599                           ;main.c: 830: {
  3600                           ;main.c: 831: PORTCbits.RC3 =1;
  3601  0D9C  158E               	bsf	14,3	;volatile
  3602                           
  3603                           ;main.c: 832: }
  3604  0D9D  2D9F               	goto	l721
  3605  0D9E                     l720:	
  3606                           
  3607                           ;main.c: 833: else
  3608                           ;main.c: 834: {
  3609                           ;main.c: 835: PORTCbits.RC3 =0;
  3610  0D9E  118E               	bcf	14,3	;volatile
  3611  0D9F                     l721:	
  3612                           
  3613                           ;main.c: 836: }
  3614                           ;main.c: 837: if(psstatusu.psstatuss.motoroncommand==1)
  3615  0D9F  1DEE               	btfss	_psstatusu,3
  3616  0DA0  2F98               	goto	l722
  3617                           
  3618                           ;main.c: 838: {
  3619                           ;main.c: 839: if(psstatusu.psstatuss.creepspeedon==1)
  3620  0DA1  1EEE               	btfss	_psstatusu,5
  3621  0DA2  2E25               	goto	l723
  3622                           
  3623                           ;main.c: 840: {
  3624                           ;main.c: 841: cyclestrtf=0;
  3625  0DA3  0022               	movlb	2	; select bank2
  3626  0DA4  01C4               	clrf	_cyclestrtf^(0+256)
  3627                           
  3628                           ;main.c: 844: newsetwirespeed=setwirespeed*creep_speed*0.01;
  3629  0DA5  0020               	movlb	0	; select bank0
  3630  0DA6  085B               	movf	_setwirespeed+1,w
  3631  0DA7  0021               	movlb	1	; select bank1
  3632  0DA8  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  3633  0DA9  07A3               	addwf	(___wmul@multiplicand+1)^(0+128),f
  3634  0DAA  0020               	movlb	0	; select bank0
  3635  0DAB  085A               	movf	_setwirespeed,w
  3636  0DAC  0021               	movlb	1	; select bank1
  3637  0DAD  01A2               	clrf	___wmul@multiplicand^(0+128)
  3638  0DAE  07A2               	addwf	___wmul@multiplicand^(0+128),f
  3639  0DAF  0022               	movlb	2	; select bank2
  3640  0DB0  0843               	movf	_creep_speed^(0+256),w	;volatile
  3641  0DB1  0021               	movlb	1	; select bank1
  3642  0DB2  00ED               	movwf	??_main^(0+128)
  3643  0DB3  01EE               	clrf	(??_main^(0+128)+1)
  3644  0DB4  086D               	movf	??_main^(0+128),w
  3645  0DB5  00A0               	movwf	___wmul@multiplier^(0+128)
  3646  0DB6  086E               	movf	(??_main+1)^(0+128),w
  3647  0DB7  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  3648  0DB8  3190  2001  3189   	fcall	___wmul
  3649  0DBB  0021               	movlb	1	; select bank1
  3650  0DBC  0821               	movf	(?___wmul+1)^(0+128),w
  3651  0DBD  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3652  0DBE  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3653  0DBF  0820               	movf	?___wmul^(0+128),w
  3654  0DC0  01A8               	clrf	___lwtoft@c^(0+128)
  3655  0DC1  07A8               	addwf	___lwtoft@c^(0+128),f
  3656  0DC2  3198  20F9  3189   	fcall	___lwtoft
  3657  0DC5  0021               	movlb	1	; select bank1
  3658  0DC6  0828               	movf	?___lwtoft^(0+128),w
  3659  0DC7  00B8               	movwf	___ftmul@f2^(0+128)
  3660  0DC8  0829               	movf	(?___lwtoft+1)^(0+128),w
  3661  0DC9  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3662  0DCA  082A               	movf	(?___lwtoft+2)^(0+128),w
  3663  0DCB  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3664  0DCC  30D7               	movlw	215
  3665  0DCD  00B5               	movwf	___ftmul@f1^(0+128)
  3666  0DCE  3023               	movlw	35
  3667  0DCF  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3668  0DD0  303C               	movlw	60
  3669  0DD1  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3670  0DD2  3192  22D3  3189   	fcall	___ftmul
  3671  0DD5  0021               	movlb	1	; select bank1
  3672  0DD6  0835               	movf	?___ftmul^(0+128),w
  3673  0DD7  00C5               	movwf	___fttol@f1^(0+128)
  3674  0DD8  0836               	movf	(?___ftmul+1)^(0+128),w
  3675  0DD9  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3676  0DDA  0837               	movf	(?___ftmul+2)^(0+128),w
  3677  0DDB  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3678  0DDC  319F  2779  3189   	fcall	___fttol
  3679  0DDF  0021               	movlb	1	; select bank1
  3680  0DE0  0846               	movf	(?___fttol^(0+128)+1),w
  3681  0DE1  0020               	movlb	0	; select bank0
  3682  0DE2  01EB               	clrf	_newsetwirespeed+1
  3683  0DE3  07EB               	addwf	_newsetwirespeed+1,f
  3684  0DE4  0021               	movlb	1	; select bank1
  3685  0DE5  0845               	movf	?___fttol^(0+128),w
  3686  0DE6  0020               	movlb	0	; select bank0
  3687  0DE7  01EA               	clrf	_newsetwirespeed
  3688  0DE8  07EA               	addwf	_newsetwirespeed,f
  3689                           
  3690                           ;main.c: 846: if(newsetwirespeed<=30)
  3691  0DE9  3000               	movlw	0
  3692  0DEA  026B               	subwf	_newsetwirespeed+1,w
  3693  0DEB  301F               	movlw	31
  3694  0DEC  1903               	skipnz
  3695  0DED  026A               	subwf	_newsetwirespeed,w
  3696  0DEE  1803               	skipnc
  3697  0DEF  2DF4               	goto	l5649
  3698                           
  3699                           ;main.c: 847: newsetwirespeed=30;
  3700  0DF0  301E               	movlw	30
  3701  0DF1  00EA               	movwf	_newsetwirespeed
  3702  0DF2  3000               	movlw	0
  3703  0DF3  00EB               	movwf	_newsetwirespeed+1
  3704  0DF4                     l5649:	
  3705                           
  3706                           ;main.c: 852: Update_PWM(newsetwirespeed*3.4);
  3707  0DF4  086B               	movf	_newsetwirespeed+1,w
  3708  0DF5  0021               	movlb	1	; select bank1
  3709  0DF6  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3710  0DF7  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3711  0DF8  0020               	movlb	0	; select bank0
  3712  0DF9  086A               	movf	_newsetwirespeed,w
  3713  0DFA  0021               	movlb	1	; select bank1
  3714  0DFB  01A8               	clrf	___lwtoft@c^(0+128)
  3715  0DFC  07A8               	addwf	___lwtoft@c^(0+128),f
  3716  0DFD  3198  20F9  3189   	fcall	___lwtoft
  3717  0E00  0021               	movlb	1	; select bank1
  3718  0E01  0828               	movf	?___lwtoft^(0+128),w
  3719  0E02  00B8               	movwf	___ftmul@f2^(0+128)
  3720  0E03  0829               	movf	(?___lwtoft+1)^(0+128),w
  3721  0E04  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3722  0E05  082A               	movf	(?___lwtoft+2)^(0+128),w
  3723  0E06  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3724  0E07  309A               	movlw	154
  3725  0E08  00B5               	movwf	___ftmul@f1^(0+128)
  3726  0E09  3059               	movlw	89
  3727  0E0A  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3728  0E0B  3040               	movlw	64
  3729  0E0C  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3730  0E0D  3192  22D3  3189   	fcall	___ftmul
  3731  0E10  0021               	movlb	1	; select bank1
  3732  0E11  0835               	movf	?___ftmul^(0+128),w
  3733  0E12  00C5               	movwf	___fttol@f1^(0+128)
  3734  0E13  0836               	movf	(?___ftmul+1)^(0+128),w
  3735  0E14  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3736  0E15  0837               	movf	(?___ftmul+2)^(0+128),w
  3737  0E16  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3738  0E17  319F  2779  3189   	fcall	___fttol
  3739  0E1A  0021               	movlb	1	; select bank1
  3740  0E1B  0846               	movf	(?___fttol^(0+128)+1),w
  3741  0E1C  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3742  0E1D  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3743  0E1E  0845               	movf	?___fttol^(0+128),w
  3744  0E1F  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3745  0E20  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3746  0E21  3199  21E7  3189   	fcall	_Update_PWM
  3747  0E24  2ECD               	goto	l5681
  3748  0E25                     l723:	
  3749                           ;main.c: 856: }
  3750                           
  3751                           ;main.c: 853: TRISAbits.TRISA5=0;
  3752                           
  3753                           
  3754                           ;main.c: 857: else if(psstatusu.psstatuss.creepspeedon==0)
  3755  0E25  1AEE               	btfsc	_psstatusu,5
  3756  0E26  2ECF               	goto	l5683
  3757                           
  3758                           ;main.c: 858: {
  3759                           ;main.c: 859: cyclestrtf=1;
  3760  0E27  0022               	movlb	2	; select bank2
  3761  0E28  01C4               	clrf	_cyclestrtf^(0+256)
  3762  0E29  0AC4               	incf	_cyclestrtf^(0+256),f
  3763                           
  3764                           ;main.c: 860: newsetwirespeed=setwirespeed;
  3765  0E2A  0020               	movlb	0	; select bank0
  3766  0E2B  085B               	movf	_setwirespeed+1,w
  3767  0E2C  01EB               	clrf	_newsetwirespeed+1
  3768  0E2D  07EB               	addwf	_newsetwirespeed+1,f
  3769  0E2E  085A               	movf	_setwirespeed,w
  3770  0E2F  01EA               	clrf	_newsetwirespeed
  3771  0E30  07EA               	addwf	_newsetwirespeed,f
  3772                           
  3773                           ;main.c: 861: if(closeloopf==0)
  3774  0E31  0022               	movlb	2	; select bank2
  3775  0E32  08BF               	movf	_closeloopf^(0+256),f
  3776  0E33  1D03               	skipz
  3777  0E34  2ECD               	goto	l5681
  3778                           
  3779                           ;main.c: 862: {
  3780                           ;main.c: 863: Update_PWM(newsetwirespeed*3.4);
  3781  0E35  0020               	movlb	0	; select bank0
  3782  0E36  086B               	movf	_newsetwirespeed+1,w
  3783  0E37  0021               	movlb	1	; select bank1
  3784  0E38  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3785  0E39  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3786  0E3A  0020               	movlb	0	; select bank0
  3787  0E3B  086A               	movf	_newsetwirespeed,w
  3788  0E3C  0021               	movlb	1	; select bank1
  3789  0E3D  01A8               	clrf	___lwtoft@c^(0+128)
  3790  0E3E  07A8               	addwf	___lwtoft@c^(0+128),f
  3791  0E3F  3198  20F9  3189   	fcall	___lwtoft
  3792  0E42  0021               	movlb	1	; select bank1
  3793  0E43  0828               	movf	?___lwtoft^(0+128),w
  3794  0E44  00B8               	movwf	___ftmul@f2^(0+128)
  3795  0E45  0829               	movf	(?___lwtoft+1)^(0+128),w
  3796  0E46  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3797  0E47  082A               	movf	(?___lwtoft+2)^(0+128),w
  3798  0E48  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3799  0E49  309A               	movlw	154
  3800  0E4A  00B5               	movwf	___ftmul@f1^(0+128)
  3801  0E4B  3059               	movlw	89
  3802  0E4C  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3803  0E4D  3040               	movlw	64
  3804  0E4E  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3805  0E4F  3192  22D3  3189   	fcall	___ftmul
  3806  0E52  0021               	movlb	1	; select bank1
  3807  0E53  0835               	movf	?___ftmul^(0+128),w
  3808  0E54  00C5               	movwf	___fttol@f1^(0+128)
  3809  0E55  0836               	movf	(?___ftmul+1)^(0+128),w
  3810  0E56  00C6               	movwf	(___fttol@f1+1)^(0+128)
  3811  0E57  0837               	movf	(?___ftmul+2)^(0+128),w
  3812  0E58  00C7               	movwf	(___fttol@f1+2)^(0+128)
  3813  0E59  319F  2779  3189   	fcall	___fttol
  3814  0E5C  0021               	movlb	1	; select bank1
  3815  0E5D  0846               	movf	(?___fttol^(0+128)+1),w
  3816  0E5E  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  3817  0E5F  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  3818  0E60  0845               	movf	?___fttol^(0+128),w
  3819  0E61  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  3820  0E62  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  3821  0E63  3199  21E7  3189   	fcall	_Update_PWM
  3822                           
  3823                           ;main.c: 864: if(wfspeedchangef==1)
  3824  0E66  0022               	movlb	2	; select bank2
  3825  0E67  086F               	movf	_wfspeedchangef^(0+256),w
  3826  0E68  3A01               	xorlw	1
  3827  0E69  1D03               	skipz
  3828  0E6A  2ECB               	goto	l5679
  3829                           
  3830                           ;main.c: 865: {
  3831                           ;main.c: 867: integral_old=newsetwirespeed*scalefactor2*2.6;
  3832  0E6B  3066               	movlw	102
  3833  0E6C  0021               	movlb	1	; select bank1
  3834  0E6D  00B5               	movwf	___ftmul@f1^(0+128)
  3835  0E6E  3026               	movlw	38
  3836  0E6F  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  3837  0E70  3040               	movlw	64
  3838  0E71  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  3839  0E72  0020               	movlb	0	; select bank0
  3840  0E73  086B               	movf	_newsetwirespeed+1,w
  3841  0E74  0021               	movlb	1	; select bank1
  3842  0E75  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  3843  0E76  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  3844  0E77  0020               	movlb	0	; select bank0
  3845  0E78  086A               	movf	_newsetwirespeed,w
  3846  0E79  0021               	movlb	1	; select bank1
  3847  0E7A  01A0               	clrf	___wmul@multiplier^(0+128)
  3848  0E7B  07A0               	addwf	___wmul@multiplier^(0+128),f
  3849  0E7C  0023               	movlb	3	; select bank3
  3850  0E7D  086C               	movf	(_scalefactor2+1)^(0+384),w
  3851  0E7E  0021               	movlb	1	; select bank1
  3852  0E7F  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  3853  0E80  07A3               	addwf	(___wmul@multiplicand+1)^(0+128),f
  3854  0E81  0023               	movlb	3	; select bank3
  3855  0E82  086B               	movf	_scalefactor2^(0+384),w
  3856  0E83  0021               	movlb	1	; select bank1
  3857  0E84  01A2               	clrf	___wmul@multiplicand^(0+128)
  3858  0E85  07A2               	addwf	___wmul@multiplicand^(0+128),f
  3859  0E86  3190  2001  3189   	fcall	___wmul
  3860  0E89  0021               	movlb	1	; select bank1
  3861  0E8A  0821               	movf	(?___wmul+1)^(0+128),w
  3862  0E8B  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3863  0E8C  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3864  0E8D  0820               	movf	?___wmul^(0+128),w
  3865  0E8E  01A8               	clrf	___lwtoft@c^(0+128)
  3866  0E8F  07A8               	addwf	___lwtoft@c^(0+128),f
  3867  0E90  3198  20F9  3189   	fcall	___lwtoft
  3868  0E93  0021               	movlb	1	; select bank1
  3869  0E94  0828               	movf	?___lwtoft^(0+128),w
  3870  0E95  00B8               	movwf	___ftmul@f2^(0+128)
  3871  0E96  0829               	movf	(?___lwtoft+1)^(0+128),w
  3872  0E97  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  3873  0E98  082A               	movf	(?___lwtoft+2)^(0+128),w
  3874  0E99  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  3875  0E9A  3192  22D3  3189   	fcall	___ftmul
  3876  0E9D  0021               	movlb	1	; select bank1
  3877  0E9E  0835               	movf	?___ftmul^(0+128),w
  3878  0E9F  0023               	movlb	3	; select bank3
  3879  0EA0  00A3               	movwf	_integral_old^(0+384)
  3880  0EA1  0021               	movlb	1	; select bank1
  3881  0EA2  0836               	movf	(?___ftmul+1)^(0+128),w
  3882  0EA3  0023               	movlb	3	; select bank3
  3883  0EA4  00A4               	movwf	(_integral_old+1)^(0+384)
  3884  0EA5  0021               	movlb	1	; select bank1
  3885  0EA6  0837               	movf	(?___ftmul+2)^(0+128),w
  3886  0EA7  0023               	movlb	3	; select bank3
  3887  0EA8  00A5               	movwf	(_integral_old+2)^(0+384)
  3888                           
  3889                           ;main.c: 868: wfspeedchangef=0;
  3890  0EA9  0022               	movlb	2	; select bank2
  3891  0EAA  01EF               	clrf	_wfspeedchangef^(0+256)
  3892                           
  3893                           ;main.c: 869: integral_new =0;
  3894  0EAB  3000               	movlw	0
  3895  0EAC  00A3               	movwf	_integral_new^(0+256)
  3896  0EAD  3000               	movlw	0
  3897  0EAE  00A4               	movwf	(_integral_new+1)^(0+256)
  3898  0EAF  3000               	movlw	0
  3899  0EB0  00A5               	movwf	(_integral_new+2)^(0+256)
  3900                           
  3901                           ;main.c: 871: error_old =0;
  3902  0EB1  3000               	movlw	0
  3903  0EB2  0023               	movlb	3	; select bank3
  3904  0EB3  00A0               	movwf	_error_old^(0+384)
  3905  0EB4  3000               	movlw	0
  3906  0EB5  00A1               	movwf	(_error_old+1)^(0+384)
  3907  0EB6  3000               	movlw	0
  3908  0EB7  00A2               	movwf	(_error_old+2)^(0+384)
  3909                           
  3910                           ;main.c: 872: error_new=0;
  3911  0EB8  3000               	movlw	0
  3912  0EB9  0022               	movlb	2	; select bank2
  3913  0EBA  00A0               	movwf	_error_new^(0+256)
  3914  0EBB  3000               	movlw	0
  3915  0EBC  00A1               	movwf	(_error_new+1)^(0+256)
  3916  0EBD  3000               	movlw	0
  3917  0EBE  00A2               	movwf	(_error_new+2)^(0+256)
  3918                           
  3919                           ;main.c: 873: controller_out=0;
  3920  0EBF  3000               	movlw	0
  3921  0EC0  0024               	movlb	4	; select bank4
  3922  0EC1  00A4               	movwf	_controller_out^(0+512)
  3923  0EC2  3000               	movlw	0
  3924  0EC3  00A5               	movwf	(_controller_out+1)^(0+512)
  3925  0EC4  3000               	movlw	0
  3926  0EC5  00A6               	movwf	(_controller_out+2)^(0+512)
  3927                           
  3928                           ;main.c: 874: prevFltpfreq=0;
  3929  0EC6  01C2               	clrf	_prevFltpfreq^(0+512)
  3930  0EC7  01C3               	clrf	(_prevFltpfreq+1)^(0+512)
  3931                           
  3932                           ;main.c: 875: Fltpfreq=0;
  3933  0EC8  0022               	movlb	2	; select bank2
  3934  0EC9  01A6               	clrf	_Fltpfreq^(0+256)
  3935  0ECA  01A7               	clrf	(_Fltpfreq+1)^(0+256)
  3936  0ECB                     l5679:	
  3937                           
  3938                           ;main.c: 876: }
  3939                           ;main.c: 877: closeloopf=1;
  3940  0ECB  01BF               	clrf	_closeloopf^(0+256)
  3941  0ECC  0ABF               	incf	_closeloopf^(0+256),f
  3942  0ECD                     l5681:	
  3943                           
  3944                           ;main.c: 878: }
  3945                           ;main.c: 879: TRISAbits.TRISA5=0;
  3946  0ECD  0021               	movlb	1	; select bank1
  3947  0ECE  128C               	bcf	12,5	;volatile
  3948  0ECF                     l5683:	
  3949                           
  3950                           ;main.c: 881: }
  3951                           ;main.c: 883: if(psstatusu.psstatuss.craterspeedon==1 && wfstatusu.wfstatuss.twotfourtmo
      +                          de1==1)
  3952  0ECF  0020               	movlb	0	; select bank0
  3953  0ED0  1E6E               	btfss	_psstatusu,4
  3954  0ED1  2EE1               	goto	l729
  3955  0ED2  0022               	movlb	2	; select bank2
  3956  0ED3  1C6B               	btfss	_wfstatusu^(0+256),0
  3957  0ED4  2EE1               	goto	l729
  3958                           
  3959                           ;main.c: 884: newsetwirespeed=crater_speed;
  3960  0ED5  0020               	movlb	0	; select bank0
  3961  0ED6  085C               	movf	_crater_speed,w	;volatile
  3962  0ED7  0021               	movlb	1	; select bank1
  3963  0ED8  00ED               	movwf	??_main^(0+128)
  3964  0ED9  01EE               	clrf	(??_main^(0+128)+1)
  3965  0EDA  086D               	movf	??_main^(0+128),w
  3966  0EDB  0020               	movlb	0	; select bank0
  3967  0EDC  00EA               	movwf	_newsetwirespeed
  3968  0EDD  0021               	movlb	1	; select bank1
  3969  0EDE  086E               	movf	(??_main+1)^(0+128),w
  3970  0EDF  0020               	movlb	0	; select bank0
  3971  0EE0  00EB               	movwf	_newsetwirespeed+1
  3972  0EE1                     l729:	
  3973                           
  3974                           ;main.c: 886: if(newsetwirespeed > 10)
  3975  0EE1  3000               	movlw	0
  3976  0EE2  0020               	movlb	0	; select bank0
  3977  0EE3  026B               	subwf	_newsetwirespeed+1,w
  3978  0EE4  300B               	movlw	11
  3979  0EE5  1903               	skipnz
  3980  0EE6  026A               	subwf	_newsetwirespeed,w
  3981  0EE7  1C03               	skipc
  3982  0EE8  2F19               	goto	l5691
  3983                           
  3984                           ;main.c: 887: setpfreq=(3.4*newsetwirespeed);
  3985  0EE9  086B               	movf	_newsetwirespeed+1,w
  3986  0EEA  0021               	movlb	1	; select bank1
  3987  0EEB  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  3988  0EEC  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  3989  0EED  0020               	movlb	0	; select bank0
  3990  0EEE  086A               	movf	_newsetwirespeed,w
  3991  0EEF  0021               	movlb	1	; select bank1
  3992  0EF0  01A8               	clrf	___lwtoft@c^(0+128)
  3993  0EF1  07A8               	addwf	___lwtoft@c^(0+128),f
  3994  0EF2  3198  20F9  3189   	fcall	___lwtoft
  3995  0EF5  0021               	movlb	1	; select bank1
  3996  0EF6  0828               	movf	?___lwtoft^(0+128),w
  3997  0EF7  00B8               	movwf	___ftmul@f2^(0+128)
  3998  0EF8  0829               	movf	(?___lwtoft+1)^(0+128),w
  3999  0EF9  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4000  0EFA  082A               	movf	(?___lwtoft+2)^(0+128),w
  4001  0EFB  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4002  0EFC  309A               	movlw	154
  4003  0EFD  00B5               	movwf	___ftmul@f1^(0+128)
  4004  0EFE  3059               	movlw	89
  4005  0EFF  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4006  0F00  3040               	movlw	64
  4007  0F01  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4008  0F02  3192  22D3  3189   	fcall	___ftmul
  4009  0F05  0021               	movlb	1	; select bank1
  4010  0F06  0835               	movf	?___ftmul^(0+128),w
  4011  0F07  00C5               	movwf	___fttol@f1^(0+128)
  4012  0F08  0836               	movf	(?___ftmul+1)^(0+128),w
  4013  0F09  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4014  0F0A  0837               	movf	(?___ftmul+2)^(0+128),w
  4015  0F0B  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4016  0F0C  319F  2779  3189   	fcall	___fttol
  4017  0F0F  0021               	movlb	1	; select bank1
  4018  0F10  0846               	movf	(?___fttol^(0+128)+1),w
  4019  0F11  0023               	movlb	3	; select bank3
  4020  0F12  01CB               	clrf	(_setpfreq+1)^(0+384)
  4021  0F13  07CB               	addwf	(_setpfreq+1)^(0+384),f
  4022  0F14  0021               	movlb	1	; select bank1
  4023  0F15  0845               	movf	?___fttol^(0+128),w
  4024  0F16  0023               	movlb	3	; select bank3
  4025  0F17  01CA               	clrf	_setpfreq^(0+384)
  4026  0F18  07CA               	addwf	_setpfreq^(0+384),f
  4027  0F19                     l5691:	
  4028                           
  4029                           ;main.c: 888: if(cRelSpeedSign == '+')
  4030  0F19  0022               	movlb	2	; select bank2
  4031  0F1A  083B               	movf	_cRelSpeedSign^(0+256),w
  4032  0F1B  3A2B               	xorlw	43
  4033  0F1C  1D03               	skipz
  4034  0F1D  2F2A               	goto	l5695
  4035                           
  4036                           ;main.c: 889: {
  4037                           ;main.c: 890: Hi_setppwm=(newsetwirespeed+rel_wirespeed)*3.4;
  4038  0F1E  0023               	movlb	3	; select bank3
  4039  0F1F  0848               	movf	_rel_wirespeed^(0+384),w
  4040  0F20  0020               	movlb	0	; select bank0
  4041  0F21  076A               	addwf	_newsetwirespeed,w
  4042  0F22  0021               	movlb	1	; select bank1
  4043  0F23  00A8               	movwf	___lwtoft@c^(0+128)
  4044  0F24  0023               	movlb	3	; select bank3
  4045  0F25  0849               	movf	(_rel_wirespeed+1)^(0+384),w
  4046  0F26  0020               	movlb	0	; select bank0
  4047  0F27  3D6B               	addwfc	_newsetwirespeed+1,w
  4048  0F28  0021               	movlb	1	; select bank1
  4049  0F29  2F3E               	goto	L4
  4050  0F2A                     l5695:	
  4051                           ;main.c: 891: }
  4052                           
  4053                           
  4054                           ;main.c: 892: else
  4055                           ;main.c: 893: {
  4056                           ;main.c: 894: Hi_setppwm=(newsetwirespeed-rel_wirespeed)*3.4;
  4057  0F2A  0023               	movlb	3	; select bank3
  4058  0F2B  0948               	comf	_rel_wirespeed^(0+384),w
  4059  0F2C  0021               	movlb	1	; select bank1
  4060  0F2D  00ED               	movwf	??_main^(0+128)
  4061  0F2E  0023               	movlb	3	; select bank3
  4062  0F2F  0949               	comf	(_rel_wirespeed+1)^(0+384),w
  4063  0F30  0021               	movlb	1	; select bank1
  4064  0F31  00EE               	movwf	(??_main^(0+128)+1)
  4065  0F32  0AED               	incf	??_main^(0+128),f
  4066  0F33  1903               	skipnz
  4067  0F34  0AEE               	incf	(??_main^(0+128)+1),f
  4068  0F35  0020               	movlb	0	; select bank0
  4069  0F36  086A               	movf	_newsetwirespeed,w
  4070  0F37  0021               	movlb	1	; select bank1
  4071  0F38  076D               	addwf	??_main^(0+128),w
  4072  0F39  00A8               	movwf	___lwtoft@c^(0+128)
  4073  0F3A  0020               	movlb	0	; select bank0
  4074  0F3B  086B               	movf	_newsetwirespeed+1,w
  4075  0F3C  0021               	movlb	1	; select bank1
  4076  0F3D  3D6E               	addwfc	(??_main+1)^(0+128),w
  4077  0F3E                     L4:	
  4078  0F3E  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  4079  0F3F  3198  20F9  3189   	fcall	___lwtoft
  4080  0F42  0021               	movlb	1	; select bank1
  4081  0F43  0828               	movf	?___lwtoft^(0+128),w
  4082  0F44  00B8               	movwf	___ftmul@f2^(0+128)
  4083  0F45  0829               	movf	(?___lwtoft+1)^(0+128),w
  4084  0F46  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4085  0F47  082A               	movf	(?___lwtoft+2)^(0+128),w
  4086  0F48  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4087  0F49  309A               	movlw	154
  4088  0F4A  00B5               	movwf	___ftmul@f1^(0+128)
  4089  0F4B  3059               	movlw	89
  4090  0F4C  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4091  0F4D  3040               	movlw	64
  4092  0F4E  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4093  0F4F  3192  22D3  3189   	fcall	___ftmul
  4094  0F52  0021               	movlb	1	; select bank1
  4095  0F53  0835               	movf	?___ftmul^(0+128),w
  4096  0F54  00C5               	movwf	___fttol@f1^(0+128)
  4097  0F55  0836               	movf	(?___ftmul+1)^(0+128),w
  4098  0F56  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4099  0F57  0837               	movf	(?___ftmul+2)^(0+128),w
  4100  0F58  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4101  0F59  319F  2779  3189   	fcall	___fttol
  4102  0F5C  0021               	movlb	1	; select bank1
  4103  0F5D  0846               	movf	(?___fttol^(0+128)+1),w
  4104  0F5E  0023               	movlb	3	; select bank3
  4105  0F5F  01A7               	clrf	(_Hi_setppwm+1)^(0+384)
  4106  0F60  07A7               	addwf	(_Hi_setppwm+1)^(0+384),f
  4107  0F61  0021               	movlb	1	; select bank1
  4108  0F62  0845               	movf	?___fttol^(0+128),w
  4109  0F63  0023               	movlb	3	; select bank3
  4110  0F64  01A6               	clrf	_Hi_setppwm^(0+384)
  4111  0F65  07A6               	addwf	_Hi_setppwm^(0+384),f
  4112                           
  4113                           ;main.c: 895: }
  4114                           ;main.c: 897: Lo_setppwm=(newsetwirespeed)*3.4;
  4115  0F66  0020               	movlb	0	; select bank0
  4116  0F67  086B               	movf	_newsetwirespeed+1,w
  4117  0F68  0021               	movlb	1	; select bank1
  4118  0F69  01A9               	clrf	(___lwtoft@c+1)^(0+128)
  4119  0F6A  07A9               	addwf	(___lwtoft@c+1)^(0+128),f
  4120  0F6B  0020               	movlb	0	; select bank0
  4121  0F6C  086A               	movf	_newsetwirespeed,w
  4122  0F6D  0021               	movlb	1	; select bank1
  4123  0F6E  01A8               	clrf	___lwtoft@c^(0+128)
  4124  0F6F  07A8               	addwf	___lwtoft@c^(0+128),f
  4125  0F70  3198  20F9  3189   	fcall	___lwtoft
  4126  0F73  0021               	movlb	1	; select bank1
  4127  0F74  0828               	movf	?___lwtoft^(0+128),w
  4128  0F75  00B8               	movwf	___ftmul@f2^(0+128)
  4129  0F76  0829               	movf	(?___lwtoft+1)^(0+128),w
  4130  0F77  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  4131  0F78  082A               	movf	(?___lwtoft+2)^(0+128),w
  4132  0F79  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  4133  0F7A  309A               	movlw	154
  4134  0F7B  00B5               	movwf	___ftmul@f1^(0+128)
  4135  0F7C  3059               	movlw	89
  4136  0F7D  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  4137  0F7E  3040               	movlw	64
  4138  0F7F  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  4139  0F80  3192  22D3  3189   	fcall	___ftmul
  4140  0F83  0021               	movlb	1	; select bank1
  4141  0F84  0835               	movf	?___ftmul^(0+128),w
  4142  0F85  00C5               	movwf	___fttol@f1^(0+128)
  4143  0F86  0836               	movf	(?___ftmul+1)^(0+128),w
  4144  0F87  00C6               	movwf	(___fttol@f1+1)^(0+128)
  4145  0F88  0837               	movf	(?___ftmul+2)^(0+128),w
  4146  0F89  00C7               	movwf	(___fttol@f1+2)^(0+128)
  4147  0F8A  319F  2779  3189   	fcall	___fttol
  4148  0F8D  0021               	movlb	1	; select bank1
  4149  0F8E  0846               	movf	(?___fttol^(0+128)+1),w
  4150  0F8F  0023               	movlb	3	; select bank3
  4151  0F90  01A9               	clrf	(_Lo_setppwm+1)^(0+384)
  4152  0F91  07A9               	addwf	(_Lo_setppwm+1)^(0+384),f
  4153  0F92  0021               	movlb	1	; select bank1
  4154  0F93  0845               	movf	?___fttol^(0+128),w
  4155  0F94  0023               	movlb	3	; select bank3
  4156  0F95  01A8               	clrf	_Lo_setppwm^(0+384)
  4157  0F96  07A8               	addwf	_Lo_setppwm^(0+384),f
  4158                           
  4159                           ;main.c: 898: }
  4160  0F97  2FBD               	goto	l5707
  4161  0F98                     l722:	
  4162                           
  4163                           ;main.c: 899: else if(psstatusu.psstatuss.motoroncommand!=1)
  4164  0F98  19EE               	btfsc	_psstatusu,3
  4165  0F99  2FBD               	goto	l5707
  4166                           
  4167                           ;main.c: 900: {
  4168                           ;main.c: 901: Update_PWM(setwirespeed*0);
  4169  0F9A  085B               	movf	_setwirespeed+1,w
  4170  0F9B  0021               	movlb	1	; select bank1
  4171  0F9C  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  4172  0F9D  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  4173  0F9E  0020               	movlb	0	; select bank0
  4174  0F9F  085A               	movf	_setwirespeed,w
  4175  0FA0  0021               	movlb	1	; select bank1
  4176  0FA1  01A0               	clrf	___wmul@multiplier^(0+128)
  4177  0FA2  07A0               	addwf	___wmul@multiplier^(0+128),f
  4178  0FA3  3000               	movlw	0
  4179  0FA4  00A2               	movwf	___wmul@multiplicand^(0+128)
  4180  0FA5  3000               	movlw	0
  4181  0FA6  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  4182  0FA7  3190  2001  3189   	fcall	___wmul
  4183  0FAA  0021               	movlb	1	; select bank1
  4184  0FAB  0821               	movf	(?___wmul+1)^(0+128),w
  4185  0FAC  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  4186  0FAD  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  4187  0FAE  0820               	movf	?___wmul^(0+128),w
  4188  0FAF  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  4189  0FB0  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  4190  0FB1  3199  21E7  3189   	fcall	_Update_PWM
  4191                           
  4192                           ;main.c: 902: openloopcnt =0;
  4193  0FB4  0024               	movlb	4	; select bank4
  4194  0FB5  01C0               	clrf	_openloopcnt^(0+512)
  4195  0FB6  01C1               	clrf	(_openloopcnt+1)^(0+512)
  4196                           
  4197                           ;main.c: 903: closeloopf =0;
  4198  0FB7  0022               	movlb	2	; select bank2
  4199  0FB8  01BF               	clrf	_closeloopf^(0+256)
  4200                           
  4201                           ;main.c: 904: closeloop1f =0;
  4202  0FB9  0023               	movlb	3	; select bank3
  4203  0FBA  01CE               	clrf	_closeloop1f^(0+384)
  4204                           
  4205                           ;main.c: 905: cyclestrtf=0;
  4206  0FBB  0022               	movlb	2	; select bank2
  4207  0FBC  01C4               	clrf	_cyclestrtf^(0+256)
  4208  0FBD                     l5707:	
  4209                           
  4210                           ;main.c: 907: }
  4211                           ;main.c: 908: TypeU.TypeS.wirespeed=0;
  4212  0FBD  0020               	movlb	0	; select bank0
  4213  0FBE  1068               	bcf	_TypeU,0
  4214                           
  4215                           ;main.c: 909: TypeU.TypeS.amp=1;
  4216  0FBF  1469               	bsf	_TypeU+1,0
  4217                           
  4218                           ;main.c: 910: TypeU.TypeS.thickness=0;
  4219  0FC0  10E8               	bcf	_TypeU,1
  4220                           
  4221                           ;main.c: 911: TypeU.TypeS.arclength =0;
  4222  0FC1  1168               	bcf	_TypeU,2
  4223                           
  4224                           ;main.c: 912: TypeU.TypeS.vtg =1;
  4225  0FC2  14E9               	bsf	_TypeU+1,1
  4226                           
  4227                           ;main.c: 913: TypeU.TypeS.sec =0;
  4228  0FC3  1169               	bcf	_TypeU+1,2
  4229                           
  4230                           ;main.c: 915: TypeDP.DPGROUP[0]=0x00;
  4231  0FC4  01EC               	clrf	_TypeDP
  4232                           
  4233                           ;main.c: 916: TypeDP.TypeD.digitdp5 =1;
  4234  0FC5  166C               	bsf	_TypeDP,4
  4235                           
  4236                           ;main.c: 917: disp_hex_window1(Actual_amp);
  4237  0FC6  0023               	movlb	3	; select bank3
  4238  0FC7  0866               	movf	(_Actual_amp+1)^(0+384),w
  4239  0FC8  0021               	movlb	1	; select bank1
  4240  0FC9  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  4241  0FCA  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  4242  0FCB  0023               	movlb	3	; select bank3
  4243  0FCC  0865               	movf	_Actual_amp^(0+384),w
  4244  0FCD  0021               	movlb	1	; select bank1
  4245  0FCE  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  4246  0FCF  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  4247  0FD0  319C  2427  3189   	fcall	_disp_hex_window1
  4248                           
  4249                           ;main.c: 918: disp_hex_window2(Actual_vtg);
  4250  0FD3  0024               	movlb	4	; select bank4
  4251  0FD4  085C               	movf	(_Actual_vtg+1)^(0+512),w
  4252  0FD5  0021               	movlb	1	; select bank1
  4253  0FD6  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  4254  0FD7  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  4255  0FD8  0024               	movlb	4	; select bank4
  4256  0FD9  085B               	movf	_Actual_vtg^(0+512),w
  4257  0FDA  0021               	movlb	1	; select bank1
  4258  0FDB  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  4259  0FDC  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  4260  0FDD  319C  248B  3189   	fcall	_disp_hex_window2
  4261                           
  4262                           ;main.c: 919: dispupdatef =1;
  4263  0FE0  3001               	movlw	1
  4264  0FE1  0021               	movlb	1	; select bank1
  4265  0FE2  00ED               	movwf	??_main^(0+128)
  4266  0FE3  086D               	movf	??_main^(0+128),w
  4267  0FE4  0020               	movlb	0	; select bank0
  4268  0FE5  00EF               	movwf	_dispupdatef	;volatile
  4269  0FE6                     l5729:	
  4270                           
  4271                           ;main.c: 921: }
  4272                           ;main.c: 922: }
  4273                           ;main.c: 924: if(universal_error_latch==1)
  4274  0FE6  0022               	movlb	2	; select bank2
  4275  0FE7  0863               	movf	_universal_error_latch^(0+256),w	;volatile
  4276  0FE8  3A01               	xorlw	1
  4277  0FE9  1D03               	skipz
  4278  0FEA  2FF3               	goto	l5735
  4279                           
  4280                           ;main.c: 925: {
  4281                           ;main.c: 926: dispupdatef=1;
  4282  0FEB  3001               	movlw	1
  4283  0FEC  0021               	movlb	1	; select bank1
  4284  0FED  00ED               	movwf	??_main^(0+128)
  4285  0FEE  086D               	movf	??_main^(0+128),w
  4286  0FEF  0020               	movlb	0	; select bank0
  4287  0FF0  00EF               	movwf	_dispupdatef	;volatile
  4288                           
  4289                           ;main.c: 927: universal_error_latch=0;
  4290  0FF1  0022               	movlb	2	; select bank2
  4291  0FF2  01E3               	clrf	_universal_error_latch^(0+256)	;volatile
  4292  0FF3                     l5735:	
  4293                           
  4294                           ;main.c: 928: }
  4295                           ;main.c: 929: if(( (weldmode=='P') || (weldmode=='G') ))
  4296  0FF3  0020               	movlb	0	; select bank0
  4297  0FF4  0867               	movf	_weldmode,w	;volatile
  4298  0FF5  3A50               	xorlw	80
  4299  0FF6  1903               	skipnz
  4300  0FF7  2FFC               	goto	l5739
  4301  0FF8  0867               	movf	_weldmode,w	;volatile
  4302  0FF9  3A47               	xorlw	71
  4303  0FFA  1D03               	skipz
  4304  0FFB  29C3               	goto	l5309
  4305  0FFC                     l5739:	
  4306                           
  4307                           ;main.c: 930: detect_display_error();
  4308  0FFC  3191  2171  3189   	fcall	_detect_display_error
  4309  0FFF  29C3               	goto	l5309
  4310  1000                     __end_of_main:	
  4311                           
  4312                           	psect	text1
  4313  18E6                     __ptext1:	
  4314 ;; *************** function _uart_init *****************
  4315 ;; Defined at:
  4316 ;;		line 1153 in file "main.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;		None
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;		None
  4321 ;; Return value:  Size  Location     Type
  4322 ;;		None               void
  4323 ;; Registers used:
  4324 ;;		wreg
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4334 ;;Total ram usage:        0 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:    3
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_main
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           
  4345                           ;psect for function _uart_init
  4346  18E6                     _uart_init:	
  4347                           
  4348                           ;main.c: 1155: RCSTAbits.SPEN=1;
  4349                           
  4350                           ;incstack = 0
  4351                           ; Regs used in _uart_init: [wreg]
  4352  18E6  0023               	movlb	3	; select bank3
  4353  18E7  179D               	bsf	29,7	;volatile
  4354                           
  4355                           ;main.c: 1156: TRISCbits.TRISC6=0;
  4356  18E8  0021               	movlb	1	; select bank1
  4357  18E9  130E               	bcf	14,6	;volatile
  4358                           
  4359                           ;main.c: 1157: TRISCbits.TRISC7=1;
  4360  18EA  178E               	bsf	14,7	;volatile
  4361                           
  4362                           ;main.c: 1158: TXSTAbits.BRGH=0;
  4363  18EB  0023               	movlb	3	; select bank3
  4364  18EC  111E               	bcf	30,2	;volatile
  4365                           
  4366                           ;main.c: 1159: BAUDCTLbits.BRG16=0;
  4367  18ED  119F               	bcf	31,3	;volatile
  4368                           
  4369                           ;main.c: 1160: TXSTAbits.SYNC=0;
  4370  18EE  121E               	bcf	30,4	;volatile
  4371                           
  4372                           ;main.c: 1161: SPBRG=51;
  4373  18EF  3033               	movlw	51
  4374  18F0  009B               	movwf	27	;volatile
  4375                           
  4376                           ;main.c: 1162: TXSTA=0x20;
  4377  18F1  3020               	movlw	32
  4378  18F2  009E               	movwf	30	;volatile
  4379                           
  4380                           ;main.c: 1163: TXSTAbits.TXEN=0;
  4381  18F3  129E               	bcf	30,5	;volatile
  4382                           
  4383                           ;main.c: 1164: RCSTAbits.CREN=0;
  4384  18F4  121D               	bcf	29,4	;volatile
  4385                           
  4386                           ;main.c: 1165: PIE1bits.RCIE=0;
  4387  18F5  0021               	movlb	1	; select bank1
  4388  18F6  1291               	bcf	17,5	;volatile
  4389                           
  4390                           ;main.c: 1166: PIE1bits.TXIE=0;
  4391  18F7  1211               	bcf	17,4	;volatile
  4392  18F8  0008               	return
  4393  18F9                     __end_of_uart_init:	
  4394                           
  4395                           	psect	text2
  4396  1A54                     __ptext2:	
  4397 ;; *************** function _transmittops *****************
  4398 ;; Defined at:
  4399 ;;		line 1195 in file "main.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;		None               void
  4406 ;; Registers used:
  4407 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4415 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4416 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4417 ;;Total ram usage:        1 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    4
  4420 ;; This function calls:
  4421 ;;		_Send_Byte
  4422 ;; This function is called by:
  4423 ;;		_main
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function _transmittops
  4429  1A54                     _transmittops:	
  4430                           
  4431                           ;main.c: 1197: chksum=0;
  4432                           
  4433                           ;incstack = 0
  4434                           ; Regs used in _transmittops: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4435  1A54  0022               	movlb	2	; select bank2
  4436  1A55  01BE               	clrf	_chksum^(0+256)
  4437                           
  4438                           ;main.c: 1198: pstowfstru.pstowfstrs.psstatusbyte=0xBB;
  4439  1A56  30BB               	movlw	187
  4440  1A57  0021               	movlb	1	; select bank1
  4441  1A58  00A1               	movwf	??_transmittops^(0+128)
  4442  1A59  0821               	movf	??_transmittops^(0+128),w
  4443  1A5A  0024               	movlb	4	; select bank4
  4444  1A5B  00D0               	movwf	(_pstowfstru^(0+512)+12)
  4445                           
  4446                           ;main.c: 1200: if(cWf2t4tmodefg == 1)
  4447  1A5C  0022               	movlb	2	; select bank2
  4448  1A5D  083D               	movf	_cWf2t4tmodefg^(0+256),w
  4449  1A5E  3A01               	xorlw	1
  4450  1A5F  1D03               	skipz
  4451  1A60  2A63               	goto	l803
  4452                           
  4453                           ;main.c: 1201: {
  4454                           ;main.c: 1202: wfstatusu.wfstatuss.twotfourtmode1 = 1;
  4455  1A61  146B               	bsf	_wfstatusu^(0+256),0
  4456                           
  4457                           ;main.c: 1203: }
  4458  1A62  2A64               	goto	l4481
  4459  1A63                     l803:	
  4460                           
  4461                           ;main.c: 1204: else
  4462                           ;main.c: 1205: {
  4463                           ;main.c: 1206: wfstatusu.wfstatuss.twotfourtmode1 = 0;
  4464  1A63  106B               	bcf	_wfstatusu^(0+256),0
  4465  1A64                     l4481:	
  4466                           
  4467                           ;main.c: 1207: }
  4468                           ;main.c: 1208: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4469  1A64  086B               	movf	_wfstatusu^(0+256),w
  4470  1A65  0021               	movlb	1	; select bank1
  4471  1A66  00A1               	movwf	??_transmittops^(0+128)
  4472  1A67  0821               	movf	??_transmittops^(0+128),w
  4473  1A68  0024               	movlb	4	; select bank4
  4474  1A69  00D1               	movwf	(_pstowfstru^(0+512)+13)
  4475                           
  4476                           ;main.c: 1217: Tx_ptr=0;
  4477  1A6A  0023               	movlb	3	; select bank3
  4478  1A6B  01CC               	clrf	_Tx_ptr^(0+384)
  4479                           
  4480                           ;main.c: 1218: Send_Byte('@');
  4481  1A6C  3040               	movlw	64
  4482  1A6D  3198  2085  319A   	fcall	_Send_Byte
  4483                           
  4484                           ;main.c: 1219: for(lmn=0;lmn<=15;lmn++)
  4485  1A70  0022               	movlb	2	; select bank2
  4486  1A71  01AA               	clrf	_lmn^(0+256)
  4487  1A72  01AB               	clrf	(_lmn+1)^(0+256)
  4488  1A73  3000               	movlw	0
  4489  1A74  022B               	subwf	(_lmn+1)^(0+256),w
  4490  1A75  3010               	movlw	16
  4491  1A76  1903               	skipnz
  4492  1A77  022A               	subwf	_lmn^(0+256),w
  4493  1A78  1803               	btfsc	3,0
  4494  1A79  2A9B               	goto	l4501
  4495  1A7A                     l4493:	
  4496                           
  4497                           ;main.c: 1220: {
  4498                           ;main.c: 1221: chksum=chksum+pstowfstru.pstransarr[lmn];
  4499  1A7A  082A               	movf	_lmn^(0+256),w
  4500  1A7B  3E44               	addlw	_pstowfstru& (0+255)
  4501  1A7C  0086               	movwf	6
  4502  1A7D  3002               	movlw	2	; select bank4/5
  4503  1A7E  0087               	movwf	7
  4504  1A7F  0801               	movf	1,w
  4505  1A80  073E               	addwf	_chksum^(0+256),w
  4506  1A81  0021               	movlb	1	; select bank1
  4507  1A82  00A1               	movwf	??_transmittops^(0+128)
  4508  1A83  0821               	movf	??_transmittops^(0+128),w
  4509  1A84  0022               	movlb	2	; select bank2
  4510  1A85  00BE               	movwf	_chksum^(0+256)
  4511                           
  4512                           ;main.c: 1222: Send_Byte(pstowfstru.pstransarr[lmn]);
  4513  1A86  082A               	movf	_lmn^(0+256),w
  4514  1A87  3E44               	addlw	_pstowfstru& (0+255)
  4515  1A88  0086               	movwf	6
  4516  1A89  3002               	movlw	2	; select bank4/5
  4517  1A8A  0087               	movwf	7
  4518  1A8B  0801               	movf	1,w
  4519  1A8C  3198  2085  319A   	fcall	_Send_Byte
  4520  1A8F  3001               	movlw	1
  4521  1A90  0022               	movlb	2	; select bank2
  4522  1A91  07AA               	addwf	_lmn^(0+256),f
  4523  1A92  3000               	movlw	0
  4524  1A93  3DAB               	addwfc	(_lmn+1)^(0+256),f
  4525  1A94  3000               	movlw	0
  4526  1A95  022B               	subwf	(_lmn+1)^(0+256),w
  4527  1A96  3010               	movlw	16
  4528  1A97  1903               	skipnz
  4529  1A98  022A               	subwf	_lmn^(0+256),w
  4530  1A99  1C03               	skipc
  4531  1A9A  2A7A               	goto	l4493
  4532  1A9B                     l4501:	
  4533                           
  4534                           ;main.c: 1223: }
  4535                           ;main.c: 1224: if(cEditfg == 1)
  4536  1A9B  0839               	movf	_cEditfg^(0+256),w
  4537  1A9C  3A01               	xorlw	1
  4538  1A9D  1D03               	skipz
  4539  1A9E  2AA1               	goto	l4505
  4540                           
  4541                           ;main.c: 1225: {
  4542                           ;main.c: 1226: Send_Byte('E');
  4543  1A9F  3045               	movlw	69
  4544  1AA0  2AA2               	goto	L9
  4545  1AA1                     l4505:	
  4546                           ;main.c: 1227: }
  4547                           
  4548                           
  4549                           ;main.c: 1228: else
  4550                           ;main.c: 1229: {
  4551                           ;main.c: 1230: Send_Byte('X');
  4552  1AA1  3058               	movlw	88
  4553  1AA2                     L9:	
  4554  1AA2  3198  2085  319A   	fcall	_Send_Byte
  4555                           
  4556                           ;main.c: 1231: }
  4557                           ;main.c: 1232: Send_Byte(chksum);
  4558  1AA5  0022               	movlb	2	; select bank2
  4559  1AA6  083E               	movf	_chksum^(0+256),w
  4560  1AA7  3198  2085         	fcall	_Send_Byte
  4561  1AA9  0008               	return
  4562  1AAA                     __end_of_transmittops:	
  4563                           
  4564                           	psect	text3
  4565  188F                     __ptext3:	
  4566 ;; *************** function _system_init *****************
  4567 ;; Defined at:
  4568 ;;		line 1059 in file "main.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;		None               void
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4586 ;;Total ram usage:        0 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    3
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_main
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           
  4597                           ;psect for function _system_init
  4598  188F                     _system_init:	
  4599                           
  4600                           ;main.c: 1063: OSCCONbits.IRCF=14;
  4601                           
  4602                           ;incstack = 0
  4603                           ; Regs used in _system_init: [wreg+status,2+status,0]
  4604  188F  0021               	movlb	1	; select bank1
  4605  1890  0819               	movf	25,w	;volatile
  4606  1891  3987               	andlw	-121
  4607  1892  3870               	iorlw	112
  4608  1893  0099               	movwf	25	;volatile
  4609                           
  4610                           ;main.c: 1065: OSCCONbits.SCS=0;
  4611  1894  30FC               	movlw	-4
  4612  1895  0599               	andwf	25,f	;volatile
  4613                           
  4614                           ;main.c: 1066: OSCTUNEbits.TUN=0;
  4615  1896  30C0               	movlw	-64
  4616  1897  0598               	andwf	24,f	;volatile
  4617  1898  0008               	return
  4618  1899                     __end_of_system_init:	
  4619                           
  4620                           	psect	text4
  4621  190E                     __ptext4:	
  4622 ;; *************** function _send_status *****************
  4623 ;; Defined at:
  4624 ;;		line 1235 in file "main.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;		None               void
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0, pclath, cstack
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4640 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4641 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4642 ;;Total ram usage:        1 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:    4
  4645 ;; This function calls:
  4646 ;;		_Send_Byte
  4647 ;; This function is called by:
  4648 ;;		_main
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           
  4653                           ;psect for function _send_status
  4654  190E                     _send_status:	
  4655                           
  4656                           ;main.c: 1237: pstowfstru.pstowfstrs.wfstatusbyte=wfstatusu.wfstatusbyte[0];
  4657                           
  4658                           ;incstack = 0
  4659                           ; Regs used in _send_status: [wreg+status,2+status,0+pclath+cstack]
  4660  190E  0022               	movlb	2	; select bank2
  4661  190F  086B               	movf	_wfstatusu^(0+256),w
  4662  1910  0021               	movlb	1	; select bank1
  4663  1911  00A1               	movwf	??_send_status^(0+128)
  4664  1912  0821               	movf	??_send_status^(0+128),w
  4665  1913  0024               	movlb	4	; select bank4
  4666  1914  00D1               	movwf	(_pstowfstru^(0+512)+13)
  4667                           
  4668                           ;main.c: 1238: Send_Byte('#');
  4669  1915  3023               	movlw	35
  4670  1916  3198  2085  3199   	fcall	_Send_Byte
  4671                           
  4672                           ;main.c: 1239: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4673  1919  0024               	movlb	4	; select bank4
  4674  191A  0851               	movf	(_pstowfstru^(0+512)+13),w
  4675  191B  3198  2085  3199   	fcall	_Send_Byte
  4676                           
  4677                           ;main.c: 1240: Send_Byte(pstowfstru.pstowfstrs.wfstatusbyte);
  4678  191E  0024               	movlb	4	; select bank4
  4679  191F  0851               	movf	(_pstowfstru^(0+512)+13),w
  4680  1920  3198  2085         	fcall	_Send_Byte
  4681  1922  0008               	return
  4682  1923                     __end_of_send_status:	
  4683                           
  4684                           	psect	text5
  4685  1885                     __ptext5:	
  4686 ;; *************** function _Send_Byte *****************
  4687 ;; Defined at:
  4688 ;;		line 1186 in file "main.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  transbyte       1    wreg     unsigned char 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  transbyte       1    0[BANK1 ] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;		None               void
  4695 ;; Registers used:
  4696 ;;		wreg
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4703 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4705 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4706 ;;Total ram usage:        1 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    3
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_transmittops
  4713 ;;		_send_status
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           
  4718                           ;psect for function _Send_Byte
  4719  1885                     _Send_Byte:	
  4720                           
  4721                           ;incstack = 0
  4722                           ; Regs used in _Send_Byte: [wreg]
  4723                           ;Send_Byte@transbyte stored from wreg
  4724  1885  0021               	movlb	1	; select bank1
  4725  1886  00A0               	movwf	Send_Byte@transbyte^(0+128)
  4726  1887                     l797:	
  4727                           ;main.c: 1188: while(TXSTAbits.TRMT != 1);
  4728                           
  4729  1887  0023               	movlb	3	; select bank3
  4730  1888  1C9E               	btfss	30,1	;volatile
  4731  1889  2887               	goto	l797
  4732                           
  4733                           ;main.c: 1189: TXREG=transbyte;
  4734  188A  0021               	movlb	1	; select bank1
  4735  188B  0820               	movf	Send_Byte@transbyte^(0+128),w
  4736  188C  0023               	movlb	3	; select bank3
  4737  188D  009A               	movwf	26	;volatile
  4738  188E  0008               	return
  4739  188F                     __end_of_Send_Byte:	
  4740                           
  4741                           	psect	text6
  4742  1938                     __ptext6:	
  4743 ;; *************** function _portpin_init *****************
  4744 ;; Defined at:
  4745 ;;		line 1069 in file "main.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;		None
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;		None               void
  4752 ;; Registers used:
  4753 ;;		wreg, status,2
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4763 ;;Total ram usage:        0 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:    3
  4766 ;; This function calls:
  4767 ;;		Nothing
  4768 ;; This function is called by:
  4769 ;;		_main
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           
  4774                           ;psect for function _portpin_init
  4775  1938                     _portpin_init:	
  4776                           
  4777                           ;main.c: 1071: TRISA=0x1F;
  4778                           
  4779                           ;incstack = 0
  4780                           ; Regs used in _portpin_init: [wreg+status,2]
  4781  1938  301F               	movlw	31
  4782  1939  0021               	movlb	1	; select bank1
  4783  193A  008C               	movwf	12	;volatile
  4784                           
  4785                           ;main.c: 1072: TRISB=0x00;
  4786  193B  018D               	clrf	13	;volatile
  4787                           
  4788                           ;main.c: 1073: TRISC=0x00;
  4789  193C  018E               	clrf	14	;volatile
  4790                           
  4791                           ;main.c: 1074: ANSELA=0X00;
  4792  193D  0023               	movlb	3	; select bank3
  4793  193E  018C               	clrf	12	;volatile
  4794                           
  4795                           ;main.c: 1075: ANSELB=0X00;
  4796  193F  018D               	clrf	13	;volatile
  4797                           
  4798                           ;main.c: 1078: PORTA=0X00;
  4799  1940  0020               	movlb	0	; select bank0
  4800  1941  018C               	clrf	12	;volatile
  4801                           
  4802                           ;main.c: 1079: PORTC=0X00;
  4803  1942  018E               	clrf	14	;volatile
  4804                           
  4805                           ;main.c: 1080: TRISAbits.TRISA1 =1;
  4806  1943  0021               	movlb	1	; select bank1
  4807  1944  148C               	bsf	12,1	;volatile
  4808                           
  4809                           ;main.c: 1081: TRISAbits.TRISA2 =1;
  4810  1945  150C               	bsf	12,2	;volatile
  4811                           
  4812                           ;main.c: 1082: TRISAbits.TRISA3 =1;
  4813  1946  158C               	bsf	12,3	;volatile
  4814                           
  4815                           ;main.c: 1083: TRISAbits.TRISA4 =1;
  4816  1947  160C               	bsf	12,4	;volatile
  4817                           
  4818                           ;main.c: 1084: TRISCbits.TRISC1 =1;
  4819  1948  148E               	bsf	14,1	;volatile
  4820                           
  4821                           ;main.c: 1085: TRISCbits.TRISC3=0;
  4822  1949  118E               	bcf	14,3	;volatile
  4823                           
  4824                           ;main.c: 1086: TRISAbits.TRISA5=0;
  4825  194A  128C               	bcf	12,5	;volatile
  4826                           
  4827                           ;main.c: 1087: TRISCbits.TRISC5=1;
  4828  194B  168E               	bsf	14,5	;volatile
  4829                           
  4830                           ;main.c: 1088: TRISAbits.TRISA0=0;
  4831  194C  100C               	bcf	12,0	;volatile
  4832  194D  0008               	return
  4833  194E                     __end_of_portpin_init:	
  4834                           
  4835                           	psect	text7
  4836  0699                     __ptext7:	
  4837 ;; *************** function _key_application *****************
  4838 ;; Defined at:
  4839 ;;		line 934 in file "main.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  keypress        1    wreg     unsigned char 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  keypress        1   61[BANK1 ] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;		None               void
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0, pclath, cstack
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4854 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4855 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4856 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4857 ;;Total ram usage:        3 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; Hardware stack levels required when called:    5
  4860 ;; This function calls:
  4861 ;;		_Update_PWM
  4862 ;;		___wmul
  4863 ;;		_disp_hex_window2
  4864 ;; This function is called by:
  4865 ;;		_main
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           
  4870                           ;psect for function _key_application
  4871  0699                     _key_application:	
  4872                           
  4873                           ;incstack = 0
  4874                           ; Regs used in _key_application: [wreg+status,2+status,0+pclath+cstack]
  4875                           ;key_application@keypress stored from wreg
  4876  0699  0021               	movlb	1	; select bank1
  4877  069A  00DD               	movwf	key_application@keypress^(0+128)
  4878                           
  4879                           ;main.c: 936: if(keypress==1)
  4880  069B  085D               	movf	key_application@keypress^(0+128),w
  4881  069C  3A01               	xorlw	1
  4882  069D  1903               	btfsc	3,2
  4883  069E  2ECF               	goto	l745
  4884  069F  2EE3               	goto	l4521
  4885  06A0                     l746:	
  4886                           ;main.c: 937: {
  4887                           ;main.c: 938: while(key==1)
  4888                           
  4889                           
  4890                           ;main.c: 939: {
  4891                           ;main.c: 940: TypeU.TypeS.gason =1;
  4892  06A0  0020               	movlb	0	; select bank0
  4893  06A1  15E8               	bsf	_TypeU,3
  4894                           
  4895                           ;main.c: 941: PORTCbits.RC3 =1;
  4896  06A2  158E               	bsf	14,3	;volatile
  4897                           
  4898                           ;main.c: 944: diswin1[0]= 0x11;
  4899  06A3  3011               	movlw	17
  4900  06A4  0021               	movlb	1	; select bank1
  4901  06A5  00DB               	movwf	??_key_application^(0+128)
  4902  06A6  085B               	movf	??_key_application^(0+128),w
  4903  06A7  0023               	movlb	3	; select bank3
  4904  06A8  00DA               	movwf	_diswin1^(0+384)
  4905                           
  4906                           ;main.c: 945: diswin1[1]= 0x0B;
  4907  06A9  300B               	movlw	11
  4908  06AA  0021               	movlb	1	; select bank1
  4909  06AB  00DB               	movwf	??_key_application^(0+128)
  4910  06AC  085B               	movf	??_key_application^(0+128),w
  4911  06AD  0023               	movlb	3	; select bank3
  4912  06AE  00DB               	movwf	(_diswin1^(0+384)+1)
  4913                           
  4914                           ;main.c: 946: diswin1[2]= 0x1D;
  4915  06AF  301D               	movlw	29
  4916  06B0  0021               	movlb	1	; select bank1
  4917  06B1  00DB               	movwf	??_key_application^(0+128)
  4918  06B2  085B               	movf	??_key_application^(0+128),w
  4919  06B3  0023               	movlb	3	; select bank3
  4920  06B4  00DC               	movwf	(_diswin1^(0+384)+2)
  4921                           
  4922                           ;main.c: 948: diswin1[3]= 0x19;
  4923  06B5  3019               	movlw	25
  4924  06B6  0021               	movlb	1	; select bank1
  4925  06B7  00DB               	movwf	??_key_application^(0+128)
  4926  06B8  085B               	movf	??_key_application^(0+128),w
  4927  06B9  0023               	movlb	3	; select bank3
  4928  06BA  00DD               	movwf	(_diswin1^(0+384)+3)
  4929                           
  4930                           ;main.c: 949: diswin1[4]= 0x18;
  4931  06BB  3018               	movlw	24
  4932  06BC  0021               	movlb	1	; select bank1
  4933  06BD  00DB               	movwf	??_key_application^(0+128)
  4934  06BE  085B               	movf	??_key_application^(0+128),w
  4935  06BF  0023               	movlb	3	; select bank3
  4936  06C0  00DE               	movwf	(_diswin1^(0+384)+4)
  4937                           
  4938                           ;main.c: 950: diswin1[5]= 0x25;
  4939  06C1  3025               	movlw	37
  4940  06C2  0021               	movlb	1	; select bank1
  4941  06C3  00DB               	movwf	??_key_application^(0+128)
  4942  06C4  085B               	movf	??_key_application^(0+128),w
  4943  06C5  0023               	movlb	3	; select bank3
  4944  06C6  00DF               	movwf	(_diswin1^(0+384)+5)
  4945                           
  4946                           ;main.c: 951: cGasRlyClrfg = 1;
  4947  06C7  0022               	movlb	2	; select bank2
  4948  06C8  01BA               	clrf	_cGasRlyClrfg^(0+256)
  4949  06C9  0ABA               	incf	_cGasRlyClrfg^(0+256),f
  4950                           
  4951                           ;main.c: 952: iGasDbCnt = 500;
  4952  06CA  30F4               	movlw	244
  4953  06CB  0023               	movlb	3	; select bank3
  4954  06CC  00B6               	movwf	_iGasDbCnt^(0+384)
  4955  06CD  3001               	movlw	1
  4956  06CE  00B7               	movwf	(_iGasDbCnt^(0+384)+1)
  4957  06CF                     l745:	
  4958  06CF  0021               	movlb	1	; select bank1
  4959  06D0  086F               	movf	_key^(0+128),w	;volatile
  4960  06D1  3A01               	xorlw	1
  4961  06D2  1903               	skipnz
  4962  06D3  2EA0               	goto	l746
  4963                           
  4964                           ;main.c: 953: }
  4965                           ;main.c: 954: if(iGasDbCnt == 0)
  4966  06D4  0023               	movlb	3	; select bank3
  4967  06D5  0837               	movf	(_iGasDbCnt+1)^(0+384),w
  4968  06D6  0436               	iorwf	_iGasDbCnt^(0+384),w
  4969  06D7  1D03               	skipz
  4970  06D8  0008               	return
  4971                           
  4972                           ;main.c: 955: {
  4973                           ;main.c: 956: TypeU.TypeS.gason =0;
  4974  06D9  0020               	movlb	0	; select bank0
  4975  06DA  11E8               	bcf	_TypeU,3
  4976                           
  4977                           ;main.c: 957: PORTCbits.RC3 =0;
  4978  06DB  118E               	bcf	14,3	;volatile
  4979                           
  4980                           ;main.c: 958: dispupdatef =1;
  4981  06DC  3001               	movlw	1
  4982  06DD  0021               	movlb	1	; select bank1
  4983  06DE  00DB               	movwf	??_key_application^(0+128)
  4984  06DF  085B               	movf	??_key_application^(0+128),w
  4985  06E0  0020               	movlb	0	; select bank0
  4986  06E1  00EF               	movwf	_dispupdatef	;volatile
  4987                           
  4988                           ;main.c: 959: }
  4989                           ;main.c: 961: }
  4990  06E2  0008               	return
  4991  06E3                     l4521:	
  4992                           
  4993                           ;main.c: 962: else if(keypress==2)
  4994  06E3  0021               	movlb	1	; select bank1
  4995  06E4  085D               	movf	key_application@keypress^(0+128),w
  4996  06E5  3A02               	xorlw	2
  4997  06E6  1D03               	skipz
  4998  06E7  2F75               	goto	l4559
  4999                           
  5000                           ;main.c: 963: {
  5001                           ;main.c: 964: inchcnt=10;
  5002  06E8  300A               	movlw	10
  5003  06E9  00DB               	movwf	??_key_application^(0+128)
  5004  06EA  085B               	movf	??_key_application^(0+128),w
  5005  06EB  0020               	movlb	0	; select bank0
  5006  06EC  00ED               	movwf	_inchcnt
  5007  06ED                     l4549:	
  5008                           ;main.c: 965: while(key==2)
  5009                           
  5010  06ED  0021               	movlb	1	; select bank1
  5011  06EE  086F               	movf	_key^(0+128),w	;volatile
  5012  06EF  3A02               	xorlw	2
  5013  06F0  1D03               	btfss	3,2
  5014  06F1  2F51               	goto	l4551
  5015                           
  5016                           ;main.c: 966: {
  5017                           ;main.c: 967: TypeU.TypeS.inch =1;
  5018  06F2  0020               	movlb	0	; select bank0
  5019  06F3  15E9               	bsf	_TypeU+1,3
  5020                           
  5021                           ;main.c: 970: diswin1[0] =0x13;
  5022  06F4  3013               	movlw	19
  5023  06F5  0021               	movlb	1	; select bank1
  5024  06F6  00DB               	movwf	??_key_application^(0+128)
  5025  06F7  085B               	movf	??_key_application^(0+128),w
  5026  06F8  0023               	movlb	3	; select bank3
  5027  06F9  00DA               	movwf	_diswin1^(0+384)
  5028                           
  5029                           ;main.c: 971: diswin1[1] =0x18;
  5030  06FA  3018               	movlw	24
  5031  06FB  0021               	movlb	1	; select bank1
  5032  06FC  00DB               	movwf	??_key_application^(0+128)
  5033  06FD  085B               	movf	??_key_application^(0+128),w
  5034  06FE  0023               	movlb	3	; select bank3
  5035  06FF  00DB               	movwf	(_diswin1^(0+384)+1)
  5036                           
  5037                           ;main.c: 972: diswin1[2] =0x0D;
  5038  0700  300D               	movlw	13
  5039  0701  0021               	movlb	1	; select bank1
  5040  0702  00DB               	movwf	??_key_application^(0+128)
  5041  0703  085B               	movf	??_key_application^(0+128),w
  5042  0704  0023               	movlb	3	; select bank3
  5043  0705  00DC               	movwf	(_diswin1^(0+384)+2)
  5044                           
  5045                           ;main.c: 973: Update_PWM(inchcnt*4);
  5046  0706  0020               	movlb	0	; select bank0
  5047  0707  086D               	movf	_inchcnt,w
  5048  0708  0021               	movlb	1	; select bank1
  5049  0709  00DB               	movwf	??_key_application^(0+128)
  5050  070A  01DC               	clrf	(??_key_application^(0+128)+1)
  5051  070B  35DB               	lslf	??_key_application^(0+128),f
  5052  070C  0DDC               	rlf	(??_key_application^(0+128)+1),f
  5053  070D  35DB               	lslf	??_key_application^(0+128),f
  5054  070E  0DDC               	rlf	(??_key_application^(0+128)+1),f
  5055  070F  085B               	movf	??_key_application^(0+128),w
  5056  0710  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  5057  0711  085C               	movf	(??_key_application+1)^(0+128),w
  5058  0712  00D4               	movwf	(Update_PWM@setwsduty+1)^(0+128)
  5059  0713  3199  21E7  3186   	fcall	_Update_PWM
  5060                           
  5061                           ;main.c: 974: disp_hex_window2(inchcnt);
  5062  0716  0020               	movlb	0	; select bank0
  5063  0717  086D               	movf	_inchcnt,w
  5064  0718  0021               	movlb	1	; select bank1
  5065  0719  00DB               	movwf	??_key_application^(0+128)
  5066  071A  01DC               	clrf	(??_key_application^(0+128)+1)
  5067  071B  085B               	movf	??_key_application^(0+128),w
  5068  071C  00A8               	movwf	disp_hex_window2@hex_data^(0+128)
  5069  071D  085C               	movf	(??_key_application+1)^(0+128),w
  5070  071E  00A9               	movwf	(disp_hex_window2@hex_data+1)^(0+128)
  5071  071F  319C  248B  3186   	fcall	_disp_hex_window2
  5072                           
  5073                           ;main.c: 975: if(inchcnt<100)
  5074  0722  3064               	movlw	100
  5075  0723  0020               	movlb	0	; select bank0
  5076  0724  026D               	subwf	_inchcnt,w
  5077  0725  1803               	skipnc
  5078  0726  2EED               	goto	l4549
  5079                           
  5080                           ;main.c: 976: {
  5081                           ;main.c: 977: inchcnt=inchcnt+10;
  5082  0727  086D               	movf	_inchcnt,w
  5083  0728  3E0A               	addlw	10
  5084  0729  0021               	movlb	1	; select bank1
  5085  072A  00DB               	movwf	??_key_application^(0+128)
  5086  072B  085B               	movf	??_key_application^(0+128),w
  5087  072C  0020               	movlb	0	; select bank0
  5088  072D  00ED               	movwf	_inchcnt
  5089                           
  5090                           ;main.c: 978: for(delinch1=0;delinch1<5;delinch1++)
  5091  072E  0023               	movlb	3	; select bank3
  5092  072F  01B4               	clrf	_delinch1^(0+384)
  5093  0730  01B5               	clrf	(_delinch1+1)^(0+384)
  5094  0731                     L10:	
  5095  0731  3000               	movlw	0
  5096  0732  0235               	subwf	(_delinch1+1)^(0+384),w
  5097  0733  3005               	movlw	5
  5098  0734  1903               	skipnz
  5099  0735  0234               	subwf	_delinch1^(0+384),w
  5100  0736  1803               	btfsc	3,0
  5101  0737  2EED               	goto	l4549
  5102                           
  5103                           ;main.c: 979: for(delinch=0;delinch<50000;delinch++);
  5104  0738  01B2               	clrf	_delinch^(0+384)
  5105  0739  01B3               	clrf	(_delinch+1)^(0+384)
  5106  073A  30C3               	movlw	195
  5107  073B  0233               	subwf	(_delinch+1)^(0+384),w
  5108  073C  3050               	movlw	80
  5109  073D  1903               	skipnz
  5110  073E  0232               	subwf	_delinch^(0+384),w
  5111  073F  1803               	btfsc	3,0
  5112  0740  2F4C               	goto	l4547
  5113  0741                     l4545:	
  5114  0741  3001               	movlw	1
  5115  0742  07B2               	addwf	_delinch^(0+384),f
  5116  0743  3000               	movlw	0
  5117  0744  3DB3               	addwfc	(_delinch+1)^(0+384),f
  5118  0745  30C3               	movlw	195
  5119  0746  0233               	subwf	(_delinch+1)^(0+384),w
  5120  0747  3050               	movlw	80
  5121  0748  1903               	skipnz
  5122  0749  0232               	subwf	_delinch^(0+384),w
  5123  074A  1C03               	skipc
  5124  074B  2F41               	goto	l4545
  5125  074C                     l4547:	
  5126  074C  3001               	movlw	1
  5127  074D  07B4               	addwf	_delinch1^(0+384),f
  5128  074E  3000               	movlw	0
  5129  074F  3DB5               	addwfc	(_delinch1+1)^(0+384),f
  5130  0750  2F31               	goto	L10
  5131  0751                     l4551:	
  5132                           
  5133                           ;main.c: 980: }
  5134                           ;main.c: 981: }
  5135                           ;main.c: 982: Update_PWM(inchcnt*0);
  5136  0751  0020               	movlb	0	; select bank0
  5137  0752  086D               	movf	_inchcnt,w
  5138  0753  0021               	movlb	1	; select bank1
  5139  0754  00DB               	movwf	??_key_application^(0+128)
  5140  0755  01DC               	clrf	(??_key_application^(0+128)+1)
  5141  0756  085B               	movf	??_key_application^(0+128),w
  5142  0757  00A0               	movwf	___wmul@multiplier^(0+128)
  5143  0758  085C               	movf	(??_key_application+1)^(0+128),w
  5144  0759  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  5145  075A  3000               	movlw	0
  5146  075B  00A2               	movwf	___wmul@multiplicand^(0+128)
  5147  075C  3000               	movlw	0
  5148  075D  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  5149  075E  3190  2001  3186   	fcall	___wmul
  5150  0761  0021               	movlb	1	; select bank1
  5151  0762  0821               	movf	(?___wmul+1)^(0+128),w
  5152  0763  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  5153  0764  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  5154  0765  0820               	movf	?___wmul^(0+128),w
  5155  0766  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  5156  0767  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  5157  0768  3199  21E7         	fcall	_Update_PWM
  5158                           
  5159                           ;main.c: 983: TypeU.TypeS.inch =0;
  5160  076A  0020               	movlb	0	; select bank0
  5161  076B  11E9               	bcf	_TypeU+1,3
  5162                           
  5163                           ;main.c: 985: inchkeyon =0;
  5164  076C  0023               	movlb	3	; select bank3
  5165  076D  01D4               	clrf	_inchkeyon^(0+384)
  5166                           
  5167                           ;main.c: 986: dispupdatef =1;
  5168  076E  3001               	movlw	1
  5169  076F  0021               	movlb	1	; select bank1
  5170  0770  00DB               	movwf	??_key_application^(0+128)
  5171  0771  085B               	movf	??_key_application^(0+128),w
  5172  0772  0020               	movlb	0	; select bank0
  5173  0773  00EF               	movwf	_dispupdatef	;volatile
  5174                           
  5175                           ;main.c: 987: }
  5176  0774  0008               	return
  5177  0775                     l4559:	
  5178                           
  5179                           ;main.c: 988: else if(keypress==3)
  5180  0775  0021               	movlb	1	; select bank1
  5181  0776  085D               	movf	key_application@keypress^(0+128),w
  5182  0777  3A03               	xorlw	3
  5183  0778  1D03               	skipz
  5184  0779  2F8F               	goto	l4571
  5185                           
  5186                           ;main.c: 989: {
  5187                           ;main.c: 993: if(TypeU.TypeS.twot==1)
  5188  077A  0020               	movlb	0	; select bank0
  5189  077B  1E68               	btfss	_TypeU,4
  5190  077C  2F84               	goto	l761
  5191                           
  5192                           ;main.c: 994: {
  5193                           ;main.c: 995: TypeU.TypeS.twot=0;
  5194  077D  1268               	bcf	_TypeU,4
  5195                           
  5196                           ;main.c: 996: TypeU.TypeS.fourt=1;
  5197  077E  16E8               	bsf	_TypeU,5
  5198                           
  5199                           ;main.c: 997: wfstatusu.wfstatuss.twotfourtmode1=1;
  5200  077F  0022               	movlb	2	; select bank2
  5201  0780  146B               	bsf	_wfstatusu^(0+256),0
  5202                           
  5203                           ;main.c: 998: cWf2t4tmodefg = 1;
  5204  0781  01BD               	clrf	_cWf2t4tmodefg^(0+256)
  5205  0782  0ABD               	incf	_cWf2t4tmodefg^(0+256),f
  5206                           
  5207                           ;main.c: 999: }
  5208  0783  2F8B               	goto	l4569
  5209  0784                     l761:	
  5210                           
  5211                           ;main.c: 1000: else if(TypeU.TypeS.fourt==1)
  5212  0784  1EE8               	btfss	_TypeU,5
  5213  0785  2F8B               	goto	l4569
  5214                           
  5215                           ;main.c: 1001: {
  5216                           ;main.c: 1002: TypeU.TypeS.fourt=0;
  5217  0786  12E8               	bcf	_TypeU,5
  5218                           
  5219                           ;main.c: 1003: TypeU.TypeS.twot =1;
  5220  0787  1668               	bsf	_TypeU,4
  5221                           
  5222                           ;main.c: 1004: wfstatusu.wfstatuss.twotfourtmode1=0;
  5223  0788  0022               	movlb	2	; select bank2
  5224  0789  106B               	bcf	_wfstatusu^(0+256),0
  5225                           
  5226                           ;main.c: 1005: cWf2t4tmodefg = 0;
  5227  078A  01BD               	clrf	_cWf2t4tmodefg^(0+256)
  5228  078B                     l4569:	
  5229                           
  5230                           ;main.c: 1006: }
  5231                           ;main.c: 1007: cEditfg = 1;
  5232  078B  0022               	movlb	2	; select bank2
  5233  078C  01B9               	clrf	_cEditfg^(0+256)
  5234  078D  0AB9               	incf	_cEditfg^(0+256),f
  5235                           
  5236                           ;main.c: 1008: }
  5237  078E  0008               	return
  5238  078F                     l4571:	
  5239                           
  5240                           ;main.c: 1009: else if(keypress==4)
  5241  078F  0021               	movlb	1	; select bank1
  5242  0790  085D               	movf	key_application@keypress^(0+128),w
  5243  0791  3A04               	xorlw	4
  5244  0792  1D03               	skipz
  5245  0793  2FB1               	goto	l4599
  5246                           
  5247                           ;main.c: 1010: {
  5248                           ;main.c: 1012: if(TypeU.TypeS.wirespeed==1)
  5249  0794  0020               	movlb	0	; select bank0
  5250  0795  1C68               	btfss	_TypeU,0
  5251  0796  2F9C               	goto	l766
  5252                           
  5253                           ;main.c: 1013: {
  5254                           ;main.c: 1016: TypeU.TypeS.wirespeed=0;
  5255  0797  1068               	bcf	_TypeU,0
  5256                           
  5257                           ;main.c: 1017: TypeU.TypeS.amp=1;
  5258  0798  1469               	bsf	_TypeU+1,0
  5259                           
  5260                           ;main.c: 1018: TypeU.TypeS.thickness=0;
  5261  0799  10E8               	bcf	_TypeU,1
  5262                           
  5263                           ;main.c: 1019: TypeDP.DPGROUP[0]=0x00;
  5264  079A  01EC               	clrf	_TypeDP
  5265  079B  2FA9               	goto	l4595
  5266  079C                     l766:	
  5267                           ;main.c: 1022: }
  5268                           
  5269                           ;main.c: 1020: TypeDP.TypeD.digitdp5 =1;
  5270                           
  5271                           
  5272                           ;main.c: 1023: else if(TypeU.TypeS.amp==1)
  5273  079C  1C69               	btfss	_TypeU+1,0
  5274  079D  2FA2               	goto	l768
  5275                           
  5276                           ;main.c: 1024: {
  5277                           ;main.c: 1027: TypeU.TypeS.wirespeed=0;
  5278  079E  1068               	bcf	_TypeU,0
  5279                           
  5280                           ;main.c: 1028: TypeU.TypeS.amp=0;
  5281  079F  1069               	bcf	_TypeU+1,0
  5282                           
  5283                           ;main.c: 1029: TypeU.TypeS.thickness=1;
  5284  07A0  14E8               	bsf	_TypeU,1
  5285  07A1  2FA7               	goto	L11
  5286  07A2                     l768:	
  5287                           ;main.c: 1034: }
  5288                           
  5289                           ;main.c: 1032: TypeDP.TypeD.digitdp5 =1;
  5290                           
  5291                           ;main.c: 1031: TypeDP.TypeD.digitdp2 =1;
  5292                           
  5293                           ;main.c: 1030: TypeDP.DPGROUP[0]=0x00;
  5294                           
  5295                           
  5296                           ;main.c: 1035: else if(TypeU.TypeS.thickness==1)
  5297  07A2  1CE8               	btfss	_TypeU,1
  5298  07A3  2FAA               	goto	l4597
  5299                           
  5300                           ;main.c: 1036: {
  5301                           ;main.c: 1039: TypeU.TypeS.wirespeed=1;
  5302  07A4  1468               	bsf	_TypeU,0
  5303                           
  5304                           ;main.c: 1040: TypeU.TypeS.amp=0;
  5305  07A5  1069               	bcf	_TypeU+1,0
  5306                           
  5307                           ;main.c: 1041: TypeU.TypeS.thickness=0;
  5308  07A6  10E8               	bcf	_TypeU,1
  5309  07A7                     L11:	
  5310                           
  5311                           ;main.c: 1042: TypeDP.DPGROUP[0]=0x00;
  5312  07A7  01EC               	clrf	_TypeDP
  5313                           
  5314                           ;main.c: 1043: TypeDP.TypeD.digitdp2 =1;
  5315  07A8  14EC               	bsf	_TypeDP,1
  5316  07A9                     l4595:	
  5317                           
  5318                           ;main.c: 1044: TypeDP.TypeD.digitdp5 =1;
  5319  07A9  166C               	bsf	_TypeDP,4
  5320  07AA                     l4597:	
  5321                           
  5322                           ;main.c: 1046: }
  5323                           ;main.c: 1047: dispupdatef =1;
  5324  07AA  3001               	movlw	1
  5325  07AB  0021               	movlb	1	; select bank1
  5326  07AC  00DB               	movwf	??_key_application^(0+128)
  5327  07AD  085B               	movf	??_key_application^(0+128),w
  5328  07AE  0020               	movlb	0	; select bank0
  5329  07AF  00EF               	movwf	_dispupdatef	;volatile
  5330                           
  5331                           ;main.c: 1048: }
  5332  07B0  0008               	return
  5333  07B1                     l4599:	
  5334                           
  5335                           ;main.c: 1049: else if(keypress==0)
  5336  07B1  0021               	movlb	1	; select bank1
  5337  07B2  08DD               	movf	key_application@keypress^(0+128),f
  5338  07B3  1D03               	skipz
  5339  07B4  0008               	return
  5340                           
  5341                           ;main.c: 1050: {
  5342                           ;main.c: 1051: TypeU.TypeS.gason =0;
  5343  07B5  0020               	movlb	0	; select bank0
  5344  07B6  11E8               	bcf	_TypeU,3
  5345                           
  5346                           ;main.c: 1052: TypeU.TypeS.inch =0;
  5347  07B7  11E9               	bcf	_TypeU+1,3
  5348                           
  5349                           ;main.c: 1056: inchkeyon =0;
  5350  07B8  0023               	movlb	3	; select bank3
  5351  07B9  01D4               	clrf	_inchkeyon^(0+384)
  5352  07BA  0008               	return
  5353  07BB                     __end_of_key_application:	
  5354                           
  5355                           	psect	text8
  5356  1C8B                     __ptext8:	
  5357 ;; *************** function _disp_hex_window2 *****************
  5358 ;; Defined at:
  5359 ;;		line 163 in file "DISPLAY.C"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  hex_data        2    8[BANK1 ] unsigned int 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;		None               void
  5366 ;; Registers used:
  5367 ;;		wreg, status,2, status,0, pclath, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5373 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5375 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5376 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5377 ;;Total ram usage:        3 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    4
  5380 ;; This function calls:
  5381 ;;		___lwdiv
  5382 ;;		___lwmod
  5383 ;; This function is called by:
  5384 ;;		_main
  5385 ;;		_key_application
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           
  5390                           ;psect for function _disp_hex_window2
  5391  1C8B                     _disp_hex_window2:	
  5392                           
  5393                           ;DISPLAY.C: 165: diswin1[5]= hex_data % 10;
  5394                           
  5395                           ;incstack = 0
  5396                           ; Regs used in _disp_hex_window2: [wreg+status,2+status,0+pclath+cstack]
  5397  1C8B  300A               	movlw	10
  5398  1C8C  0021               	movlb	1	; select bank1
  5399  1C8D  00A0               	movwf	___lwmod@divisor^(0+128)
  5400  1C8E  3000               	movlw	0
  5401  1C8F  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5402  1C90  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5403  1C91  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5404  1C92  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5405  1C93  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5406  1C94  01A2               	clrf	___lwmod@dividend^(0+128)
  5407  1C95  07A2               	addwf	___lwmod@dividend^(0+128),f
  5408  1C96  3199  21B8  319C   	fcall	___lwmod
  5409  1C99  0021               	movlb	1	; select bank1
  5410  1C9A  0820               	movf	?___lwmod^(0+128),w
  5411  1C9B  00AA               	movwf	??_disp_hex_window2^(0+128)
  5412  1C9C  082A               	movf	??_disp_hex_window2^(0+128),w
  5413  1C9D  0023               	movlb	3	; select bank3
  5414  1C9E  00DF               	movwf	(_diswin1^(0+384)+5)
  5415                           
  5416                           ;DISPLAY.C: 166: hex_data /= 10;
  5417  1C9F  300A               	movlw	10
  5418  1CA0  0021               	movlb	1	; select bank1
  5419  1CA1  00A0               	movwf	___lwdiv@divisor^(0+128)
  5420  1CA2  3000               	movlw	0
  5421  1CA3  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5422  1CA4  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5423  1CA5  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  5424  1CA6  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5425  1CA7  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5426  1CA8  01A2               	clrf	___lwdiv@dividend^(0+128)
  5427  1CA9  07A2               	addwf	___lwdiv@dividend^(0+128),f
  5428  1CAA  3188  2002  319C   	fcall	___lwdiv
  5429  1CAD  0021               	movlb	1	; select bank1
  5430  1CAE  0821               	movf	(?___lwdiv+1)^(0+128),w
  5431  1CAF  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  5432  1CB0  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  5433  1CB1  0820               	movf	?___lwdiv^(0+128),w
  5434  1CB2  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  5435  1CB3  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  5436                           
  5437                           ;DISPLAY.C: 167: diswin1[4]= hex_data % 10;
  5438  1CB4  300A               	movlw	10
  5439  1CB5  00A0               	movwf	___lwmod@divisor^(0+128)
  5440  1CB6  3000               	movlw	0
  5441  1CB7  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5442  1CB8  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5443  1CB9  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5444  1CBA  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5445  1CBB  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5446  1CBC  01A2               	clrf	___lwmod@dividend^(0+128)
  5447  1CBD  07A2               	addwf	___lwmod@dividend^(0+128),f
  5448  1CBE  3199  21B8  319C   	fcall	___lwmod
  5449  1CC1  0021               	movlb	1	; select bank1
  5450  1CC2  0820               	movf	?___lwmod^(0+128),w
  5451  1CC3  00AA               	movwf	??_disp_hex_window2^(0+128)
  5452  1CC4  082A               	movf	??_disp_hex_window2^(0+128),w
  5453  1CC5  0023               	movlb	3	; select bank3
  5454  1CC6  00DE               	movwf	(_diswin1^(0+384)+4)
  5455                           
  5456                           ;DISPLAY.C: 168: hex_data /= 10;
  5457  1CC7  300A               	movlw	10
  5458  1CC8  0021               	movlb	1	; select bank1
  5459  1CC9  00A0               	movwf	___lwdiv@divisor^(0+128)
  5460  1CCA  3000               	movlw	0
  5461  1CCB  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5462  1CCC  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5463  1CCD  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  5464  1CCE  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5465  1CCF  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5466  1CD0  01A2               	clrf	___lwdiv@dividend^(0+128)
  5467  1CD1  07A2               	addwf	___lwdiv@dividend^(0+128),f
  5468  1CD2  3188  2002  319C   	fcall	___lwdiv
  5469  1CD5  0021               	movlb	1	; select bank1
  5470  1CD6  0821               	movf	(?___lwdiv+1)^(0+128),w
  5471  1CD7  01A9               	clrf	(disp_hex_window2@hex_data+1)^(0+128)
  5472  1CD8  07A9               	addwf	(disp_hex_window2@hex_data+1)^(0+128),f
  5473  1CD9  0820               	movf	?___lwdiv^(0+128),w
  5474  1CDA  01A8               	clrf	disp_hex_window2@hex_data^(0+128)
  5475  1CDB  07A8               	addwf	disp_hex_window2@hex_data^(0+128),f
  5476                           
  5477                           ;DISPLAY.C: 169: diswin1[3]= hex_data % 10;
  5478  1CDC  300A               	movlw	10
  5479  1CDD  00A0               	movwf	___lwmod@divisor^(0+128)
  5480  1CDE  3000               	movlw	0
  5481  1CDF  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5482  1CE0  0829               	movf	(disp_hex_window2@hex_data+1)^(0+128),w
  5483  1CE1  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5484  1CE2  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5485  1CE3  0828               	movf	disp_hex_window2@hex_data^(0+128),w
  5486  1CE4  01A2               	clrf	___lwmod@dividend^(0+128)
  5487  1CE5  07A2               	addwf	___lwmod@dividend^(0+128),f
  5488  1CE6  3199  21B8         	fcall	___lwmod
  5489  1CE8  0021               	movlb	1	; select bank1
  5490  1CE9  0820               	movf	?___lwmod^(0+128),w
  5491  1CEA  00AA               	movwf	??_disp_hex_window2^(0+128)
  5492  1CEB  082A               	movf	??_disp_hex_window2^(0+128),w
  5493  1CEC  0023               	movlb	3	; select bank3
  5494  1CED  00DD               	movwf	(_diswin1^(0+384)+3)
  5495                           
  5496                           ;DISPLAY.C: 170: diswin1[6]=0x00;
  5497  1CEE  01E0               	clrf	(_diswin1^(0+384)+6)
  5498                           
  5499                           ;DISPLAY.C: 171: diswin1[7]=0x00;
  5500  1CEF  01E1               	clrf	(_diswin1^(0+384)+7)
  5501  1CF0  0008               	return
  5502  1CF1                     __end_of_disp_hex_window2:	
  5503                           
  5504                           	psect	text9
  5505  0003                     __ptext9:	
  5506 ;; *************** function _disp_hex_window22 *****************
  5507 ;; Defined at:
  5508 ;;		line 186 in file "DISPLAY.C"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  hex_data        2    0[BANK1 ] unsigned int 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;		None               void
  5515 ;; Registers used:
  5516 ;;		None
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5522 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5525 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5526 ;;Total ram usage:        2 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    3
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		_main
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           
  5537                           ;psect for function _disp_hex_window22
  5538  0003                     _disp_hex_window22:	
  5539                           
  5540                           ;incstack = 0
  5541                           ; Regs used in _disp_hex_window22: []
  5542  0003  0008               	return
  5543  0004                     __end_of_disp_hex_window22:	
  5544                           
  5545                           	psect	text10
  5546  0002                     __ptext10:	
  5547 ;; *************** function _disp_hex_window11 *****************
  5548 ;; Defined at:
  5549 ;;		line 175 in file "DISPLAY.C"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;  hex_data        2    0[BANK1 ] unsigned int 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;		None               void
  5556 ;; Registers used:
  5557 ;;		None
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5563 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5566 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5567 ;;Total ram usage:        2 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    3
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_main
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           
  5578                           ;psect for function _disp_hex_window11
  5579  0002                     _disp_hex_window11:	
  5580                           
  5581                           ;incstack = 0
  5582                           ; Regs used in _disp_hex_window11: []
  5583  0002  0008               	return
  5584  0003                     __end_of_disp_hex_window11:	
  5585                           
  5586                           	psect	text11
  5587  1C27                     __ptext11:	
  5588 ;; *************** function _disp_hex_window1 *****************
  5589 ;; Defined at:
  5590 ;;		line 152 in file "DISPLAY.C"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  hex_data        2    8[BANK1 ] unsigned int 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;		None
  5595 ;; Return value:  Size  Location     Type
  5596 ;;		None               void
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0, pclath, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5604 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5606 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5607 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5608 ;;Total ram usage:        3 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    4
  5611 ;; This function calls:
  5612 ;;		___lwdiv
  5613 ;;		___lwmod
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           
  5620                           ;psect for function _disp_hex_window1
  5621  1C27                     _disp_hex_window1:	
  5622                           
  5623                           ;DISPLAY.C: 155: diswin1[2]= hex_data % 10;
  5624                           
  5625                           ;incstack = 0
  5626                           ; Regs used in _disp_hex_window1: [wreg+status,2+status,0+pclath+cstack]
  5627  1C27  300A               	movlw	10
  5628  1C28  0021               	movlb	1	; select bank1
  5629  1C29  00A0               	movwf	___lwmod@divisor^(0+128)
  5630  1C2A  3000               	movlw	0
  5631  1C2B  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5632  1C2C  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5633  1C2D  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5634  1C2E  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5635  1C2F  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5636  1C30  01A2               	clrf	___lwmod@dividend^(0+128)
  5637  1C31  07A2               	addwf	___lwmod@dividend^(0+128),f
  5638  1C32  3199  21B8  319C   	fcall	___lwmod
  5639  1C35  0021               	movlb	1	; select bank1
  5640  1C36  0820               	movf	?___lwmod^(0+128),w
  5641  1C37  00AA               	movwf	??_disp_hex_window1^(0+128)
  5642  1C38  082A               	movf	??_disp_hex_window1^(0+128),w
  5643  1C39  0023               	movlb	3	; select bank3
  5644  1C3A  00DC               	movwf	(_diswin1^(0+384)+2)
  5645                           
  5646                           ;DISPLAY.C: 156: hex_data /= 10;
  5647  1C3B  300A               	movlw	10
  5648  1C3C  0021               	movlb	1	; select bank1
  5649  1C3D  00A0               	movwf	___lwdiv@divisor^(0+128)
  5650  1C3E  3000               	movlw	0
  5651  1C3F  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5652  1C40  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5653  1C41  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  5654  1C42  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5655  1C43  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5656  1C44  01A2               	clrf	___lwdiv@dividend^(0+128)
  5657  1C45  07A2               	addwf	___lwdiv@dividend^(0+128),f
  5658  1C46  3188  2002  319C   	fcall	___lwdiv
  5659  1C49  0021               	movlb	1	; select bank1
  5660  1C4A  0821               	movf	(?___lwdiv+1)^(0+128),w
  5661  1C4B  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  5662  1C4C  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  5663  1C4D  0820               	movf	?___lwdiv^(0+128),w
  5664  1C4E  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  5665  1C4F  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  5666                           
  5667                           ;DISPLAY.C: 157: diswin1[1]= hex_data % 10;
  5668  1C50  300A               	movlw	10
  5669  1C51  00A0               	movwf	___lwmod@divisor^(0+128)
  5670  1C52  3000               	movlw	0
  5671  1C53  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5672  1C54  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5673  1C55  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5674  1C56  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5675  1C57  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5676  1C58  01A2               	clrf	___lwmod@dividend^(0+128)
  5677  1C59  07A2               	addwf	___lwmod@dividend^(0+128),f
  5678  1C5A  3199  21B8  319C   	fcall	___lwmod
  5679  1C5D  0021               	movlb	1	; select bank1
  5680  1C5E  0820               	movf	?___lwmod^(0+128),w
  5681  1C5F  00AA               	movwf	??_disp_hex_window1^(0+128)
  5682  1C60  082A               	movf	??_disp_hex_window1^(0+128),w
  5683  1C61  0023               	movlb	3	; select bank3
  5684  1C62  00DB               	movwf	(_diswin1^(0+384)+1)
  5685                           
  5686                           ;DISPLAY.C: 158: hex_data /= 10;
  5687  1C63  300A               	movlw	10
  5688  1C64  0021               	movlb	1	; select bank1
  5689  1C65  00A0               	movwf	___lwdiv@divisor^(0+128)
  5690  1C66  3000               	movlw	0
  5691  1C67  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  5692  1C68  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5693  1C69  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  5694  1C6A  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  5695  1C6B  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5696  1C6C  01A2               	clrf	___lwdiv@dividend^(0+128)
  5697  1C6D  07A2               	addwf	___lwdiv@dividend^(0+128),f
  5698  1C6E  3188  2002  319C   	fcall	___lwdiv
  5699  1C71  0021               	movlb	1	; select bank1
  5700  1C72  0821               	movf	(?___lwdiv+1)^(0+128),w
  5701  1C73  01A9               	clrf	(disp_hex_window1@hex_data+1)^(0+128)
  5702  1C74  07A9               	addwf	(disp_hex_window1@hex_data+1)^(0+128),f
  5703  1C75  0820               	movf	?___lwdiv^(0+128),w
  5704  1C76  01A8               	clrf	disp_hex_window1@hex_data^(0+128)
  5705  1C77  07A8               	addwf	disp_hex_window1@hex_data^(0+128),f
  5706                           
  5707                           ;DISPLAY.C: 159: diswin1[0]= hex_data % 10;
  5708  1C78  300A               	movlw	10
  5709  1C79  00A0               	movwf	___lwmod@divisor^(0+128)
  5710  1C7A  3000               	movlw	0
  5711  1C7B  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  5712  1C7C  0829               	movf	(disp_hex_window1@hex_data+1)^(0+128),w
  5713  1C7D  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  5714  1C7E  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  5715  1C7F  0828               	movf	disp_hex_window1@hex_data^(0+128),w
  5716  1C80  01A2               	clrf	___lwmod@dividend^(0+128)
  5717  1C81  07A2               	addwf	___lwmod@dividend^(0+128),f
  5718  1C82  3199  21B8         	fcall	___lwmod
  5719  1C84  0021               	movlb	1	; select bank1
  5720  1C85  0820               	movf	?___lwmod^(0+128),w
  5721  1C86  00AA               	movwf	??_disp_hex_window1^(0+128)
  5722  1C87  082A               	movf	??_disp_hex_window1^(0+128),w
  5723  1C88  0023               	movlb	3	; select bank3
  5724  1C89  00DA               	movwf	_diswin1^(0+384)
  5725  1C8A  0008               	return
  5726  1C8B                     __end_of_disp_hex_window1:	
  5727                           
  5728                           	psect	text12
  5729  19B8                     __ptext12:	
  5730 ;; *************** function ___lwmod *****************
  5731 ;; Defined at:
  5732 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwmod.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  divisor         2    0[BANK1 ] unsigned int 
  5735 ;;  dividend        2    2[BANK1 ] unsigned int 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  counter         1    5[BANK1 ] unsigned char 
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  2    0[BANK1 ] unsigned int 
  5740 ;; Registers used:
  5741 ;;		wreg, status,2, status,0
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5747 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5748 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5749 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5750 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5751 ;;Total ram usage:        6 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    3
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_disp_hex_window1
  5758 ;;		_disp_hex_window2
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           
  5763                           ;psect for function ___lwmod
  5764  19B8                     ___lwmod:	
  5765                           
  5766                           ;incstack = 0
  5767                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5768  19B8  0021               	movlb	1	; select bank1
  5769  19B9  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5770  19BA  0420               	iorwf	___lwmod@divisor^(0+128),w
  5771  19BB  1903               	skipnz
  5772  19BC  29E0               	goto	l3611
  5773  19BD  01A5               	clrf	___lwmod@counter^(0+128)
  5774  19BE  0AA5               	incf	___lwmod@counter^(0+128),f
  5775  19BF                     l3601:	
  5776  19BF  1BA1               	btfsc	(___lwmod@divisor+1)^(0+128),7
  5777  19C0  29CB               	goto	l3603
  5778  19C1  3001               	movlw	1
  5779  19C2                     u4365:	
  5780  19C2  35A0               	lslf	___lwmod@divisor^(0+128),f
  5781  19C3  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  5782  19C4  0B89               	decfsz	9,f
  5783  19C5  29C2               	goto	u4365
  5784  19C6  3001               	movlw	1
  5785  19C7  00A4               	movwf	??___lwmod^(0+128)
  5786  19C8  0824               	movf	??___lwmod^(0+128),w
  5787  19C9  07A5               	addwf	___lwmod@counter^(0+128),f
  5788  19CA  29BF               	goto	l3601
  5789  19CB                     l3603:	
  5790  19CB  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5791  19CC  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  5792  19CD  1D03               	skipz
  5793  19CE  29D1               	goto	u4385
  5794  19CF  0820               	movf	___lwmod@divisor^(0+128),w
  5795  19D0  0222               	subwf	___lwmod@dividend^(0+128),w
  5796  19D1                     u4385:	
  5797  19D1  1C03               	skipc
  5798  19D2  29D7               	goto	l3607
  5799  19D3  0820               	movf	___lwmod@divisor^(0+128),w
  5800  19D4  02A2               	subwf	___lwmod@dividend^(0+128),f
  5801  19D5  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  5802  19D6  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
  5803  19D7                     l3607:	
  5804  19D7  3001               	movlw	1
  5805  19D8                     u4395:	
  5806  19D8  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
  5807  19D9  0CA0               	rrf	___lwmod@divisor^(0+128),f
  5808  19DA  0B89               	decfsz	9,f
  5809  19DB  29D8               	goto	u4395
  5810  19DC  3001               	movlw	1
  5811  19DD  02A5               	subwf	___lwmod@counter^(0+128),f
  5812  19DE  1D03               	btfss	3,2
  5813  19DF  29CB               	goto	l3603
  5814  19E0                     l3611:	
  5815  19E0  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  5816  19E1  01A1               	clrf	(?___lwmod+1)^(0+128)
  5817  19E2  07A1               	addwf	(?___lwmod+1)^(0+128),f
  5818  19E3  0822               	movf	___lwmod@dividend^(0+128),w
  5819  19E4  01A0               	clrf	?___lwmod^(0+128)
  5820  19E5  07A0               	addwf	?___lwmod^(0+128),f
  5821  19E6  0008               	return
  5822  19E7                     __end_of___lwmod:	
  5823                           
  5824                           	psect	text13
  5825  0802                     __ptext13:	
  5826 ;; *************** function ___lwdiv *****************
  5827 ;; Defined at:
  5828 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  divisor         2    0[BANK1 ] unsigned int 
  5831 ;;  dividend        2    2[BANK1 ] unsigned int 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  quotient        2    5[BANK1 ] unsigned int 
  5834 ;;  counter         1    7[BANK1 ] unsigned char 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  2    0[BANK1 ] unsigned int 
  5837 ;; Registers used:
  5838 ;;		wreg, status,2, status,0
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5844 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5845 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5846 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5847 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5848 ;;Total ram usage:        8 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:    3
  5851 ;; This function calls:
  5852 ;;		Nothing
  5853 ;; This function is called by:
  5854 ;;		_disp_hex_window1
  5855 ;;		_disp_hex_window2
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           
  5860                           ;psect for function ___lwdiv
  5861  0802                     ___lwdiv:	
  5862                           
  5863                           ;incstack = 0
  5864                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5865  0802  0021               	movlb	1	; select bank1
  5866  0803  01A5               	clrf	___lwdiv@quotient^(0+128)
  5867  0804  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  5868  0805  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  5869  0806  0420               	iorwf	___lwdiv@divisor^(0+128),w
  5870  0807  1903               	skipnz
  5871  0808  2832               	goto	l3589
  5872  0809  01A7               	clrf	___lwdiv@counter^(0+128)
  5873  080A  0AA7               	incf	___lwdiv@counter^(0+128),f
  5874  080B                     l3577:	
  5875  080B  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  5876  080C  2817               	goto	l3579
  5877  080D  3001               	movlw	1
  5878  080E                     u4295:	
  5879  080E  35A0               	lslf	___lwdiv@divisor^(0+128),f
  5880  080F  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  5881  0810  0B89               	decfsz	9,f
  5882  0811  280E               	goto	u4295
  5883  0812  3001               	movlw	1
  5884  0813  00A4               	movwf	??___lwdiv^(0+128)
  5885  0814  0824               	movf	??___lwdiv^(0+128),w
  5886  0815  07A7               	addwf	___lwdiv@counter^(0+128),f
  5887  0816  280B               	goto	l3577
  5888  0817                     l3579:	
  5889  0817  3001               	movlw	1
  5890  0818                     u4315:	
  5891  0818  35A5               	lslf	___lwdiv@quotient^(0+128),f
  5892  0819  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  5893  081A  0B89               	decfsz	9,f
  5894  081B  2818               	goto	u4315
  5895  081C  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  5896  081D  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  5897  081E  1D03               	skipz
  5898  081F  2822               	goto	u4325
  5899  0820  0820               	movf	___lwdiv@divisor^(0+128),w
  5900  0821  0222               	subwf	___lwdiv@dividend^(0+128),w
  5901  0822                     u4325:	
  5902  0822  1C03               	skipc
  5903  0823  2829               	goto	l3585
  5904  0824  0820               	movf	___lwdiv@divisor^(0+128),w
  5905  0825  02A2               	subwf	___lwdiv@dividend^(0+128),f
  5906  0826  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  5907  0827  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  5908  0828  1425               	bsf	___lwdiv@quotient^(0+128),0
  5909  0829                     l3585:	
  5910  0829  3001               	movlw	1
  5911  082A                     u4335:	
  5912  082A  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  5913  082B  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  5914  082C  0B89               	decfsz	9,f
  5915  082D  282A               	goto	u4335
  5916  082E  3001               	movlw	1
  5917  082F  02A7               	subwf	___lwdiv@counter^(0+128),f
  5918  0830  1D03               	btfss	3,2
  5919  0831  2817               	goto	l3579
  5920  0832                     l3589:	
  5921  0832  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  5922  0833  01A1               	clrf	(?___lwdiv+1)^(0+128)
  5923  0834  07A1               	addwf	(?___lwdiv+1)^(0+128),f
  5924  0835  0825               	movf	___lwdiv@quotient^(0+128),w
  5925  0836  01A0               	clrf	?___lwdiv^(0+128)
  5926  0837  07A0               	addwf	?___lwdiv^(0+128),f
  5927  0838  0008               	return
  5928  0839                     __end_of___lwdiv:	
  5929                           
  5930                           	psect	text14
  5931  1171                     __ptext14:	
  5932 ;; *************** function _detect_display_error *****************
  5933 ;; Defined at:
  5934 ;;		line 1244 in file "main.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;		None
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;		None               void
  5941 ;; Registers used:
  5942 ;;		wreg, status,2, status,0, pclath, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5950 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5951 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5952 ;;Total ram usage:        1 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    4
  5955 ;; This function calls:
  5956 ;;		_Update_PWM
  5957 ;; This function is called by:
  5958 ;;		_main
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           
  5963                           ;psect for function _detect_display_error
  5964  1171                     _detect_display_error:	
  5965                           
  5966                           ;main.c: 1247: pstowfstru.pstowfstrs.error_code1=erroru.errorstatusbyte[0];
  5967                           
  5968                           ;incstack = 0
  5969                           ; Regs used in _detect_display_error: [wreg+status,2+status,0+pclath+cstack]
  5970  1171  0022               	movlb	2	; select bank2
  5971  1172  0866               	movf	_erroru^(0+256),w
  5972  1173  0021               	movlb	1	; select bank1
  5973  1174  00DB               	movwf	??_detect_display_error^(0+128)
  5974  1175  085B               	movf	??_detect_display_error^(0+128),w
  5975  1176  0024               	movlb	4	; select bank4
  5976  1177  00D4               	movwf	(_pstowfstru^(0+512)+16)
  5977                           
  5978                           ;main.c: 1248: pstowfstru.pstowfstrs.error_code2=erroru.errorstatusbyte[1];
  5979  1178  0022               	movlb	2	; select bank2
  5980  1179  0867               	movf	(_erroru^(0+256)+1),w
  5981  117A  0021               	movlb	1	; select bank1
  5982  117B  00DB               	movwf	??_detect_display_error^(0+128)
  5983  117C  085B               	movf	??_detect_display_error^(0+128),w
  5984  117D  0024               	movlb	4	; select bank4
  5985  117E  00D5               	movwf	(_pstowfstru^(0+512)+17)
  5986                           
  5987                           ;main.c: 1250: if(erroru.errors.uv_er1==1)
  5988  117F  0022               	movlb	2	; select bank2
  5989  1180  1C66               	btfss	_erroru^(0+256),0
  5990  1181  298C               	goto	l815
  5991                           
  5992                           ;main.c: 1251: {
  5993                           ;main.c: 1252: universal_error=1;
  5994  1182  3001               	movlw	1
  5995  1183  0021               	movlb	1	; select bank1
  5996  1184  00DB               	movwf	??_detect_display_error^(0+128)
  5997  1185  085B               	movf	??_detect_display_error^(0+128),w
  5998  1186  0022               	movlb	2	; select bank2
  5999  1187  00E2               	movwf	_universal_error^(0+256)	;volatile
  6000                           
  6001                           ;main.c: 1253: diswin1[5]=1;
  6002  1188  0023               	movlb	3	; select bank3
  6003  1189  01DF               	clrf	(_diswin1^(0+384)+5)
  6004  118A  0ADF               	incf	(_diswin1^(0+384)+5),f
  6005                           
  6006                           ;main.c: 1254: }
  6007  118B  29F2               	goto	l4641
  6008  118C                     l815:	
  6009                           
  6010                           ;main.c: 1255: else if(erroru.errors.ov_er2==1)
  6011  118C  1CE6               	btfss	_erroru^(0+256),1
  6012  118D  2996               	goto	l817
  6013                           
  6014                           ;main.c: 1256: {
  6015                           ;main.c: 1257: universal_error=1;
  6016  118E  3001               	movlw	1
  6017  118F  0021               	movlb	1	; select bank1
  6018  1190  00DB               	movwf	??_detect_display_error^(0+128)
  6019  1191  085B               	movf	??_detect_display_error^(0+128),w
  6020  1192  0022               	movlb	2	; select bank2
  6021  1193  00E2               	movwf	_universal_error^(0+256)	;volatile
  6022                           
  6023                           ;main.c: 1258: diswin1[5]=2;
  6024  1194  3002               	movlw	2
  6025  1195  29DD               	goto	L17
  6026  1196                     l817:	
  6027                           ;main.c: 1259: }
  6028                           
  6029                           
  6030                           ;main.c: 1260: else if(erroru.errors.th_er3==1)
  6031  1196  1D66               	btfss	_erroru^(0+256),2
  6032  1197  29A0               	goto	l819
  6033                           
  6034                           ;main.c: 1261: {
  6035                           ;main.c: 1262: universal_error=1;
  6036  1198  3001               	movlw	1
  6037  1199  0021               	movlb	1	; select bank1
  6038  119A  00DB               	movwf	??_detect_display_error^(0+128)
  6039  119B  085B               	movf	??_detect_display_error^(0+128),w
  6040  119C  0022               	movlb	2	; select bank2
  6041  119D  00E2               	movwf	_universal_error^(0+256)	;volatile
  6042                           
  6043                           ;main.c: 1263: diswin1[5]=3;
  6044  119E  3003               	movlw	3
  6045  119F  29DD               	goto	L17
  6046  11A0                     l819:	
  6047                           ;main.c: 1264: }
  6048                           
  6049                           
  6050                           ;main.c: 1265: else if(erroru.errors.no_curr_er4==1)
  6051  11A0  1DE6               	btfss	_erroru^(0+256),3
  6052  11A1  29AA               	goto	l821
  6053                           
  6054                           ;main.c: 1266: {
  6055                           ;main.c: 1267: universal_error=1;
  6056  11A2  3001               	movlw	1
  6057  11A3  0021               	movlb	1	; select bank1
  6058  11A4  00DB               	movwf	??_detect_display_error^(0+128)
  6059  11A5  085B               	movf	??_detect_display_error^(0+128),w
  6060  11A6  0022               	movlb	2	; select bank2
  6061  11A7  00E2               	movwf	_universal_error^(0+256)	;volatile
  6062                           
  6063                           ;main.c: 1268: diswin1[5]=4;
  6064  11A8  3004               	movlw	4
  6065  11A9  29DD               	goto	L17
  6066  11AA                     l821:	
  6067                           ;main.c: 1269: }else if(erroru.errors.motor_over_ld_er5==1)
  6068                           
  6069  11AA  1E66               	btfss	_erroru^(0+256),4
  6070  11AB  29B4               	goto	l823
  6071                           
  6072                           ;main.c: 1270: {
  6073                           ;main.c: 1271: universal_error=1;
  6074  11AC  3001               	movlw	1
  6075  11AD  0021               	movlb	1	; select bank1
  6076  11AE  00DB               	movwf	??_detect_display_error^(0+128)
  6077  11AF  085B               	movf	??_detect_display_error^(0+128),w
  6078  11B0  0022               	movlb	2	; select bank2
  6079  11B1  00E2               	movwf	_universal_error^(0+256)	;volatile
  6080                           
  6081                           ;main.c: 1272: diswin1[5]=5;
  6082  11B2  3005               	movlw	5
  6083  11B3  29DD               	goto	L17
  6084  11B4                     l823:	
  6085                           ;main.c: 1273: }
  6086                           
  6087                           
  6088                           ;main.c: 1274: else if(erroru.errors.wirefdr_er6==1)
  6089  11B4  1EE6               	btfss	_erroru^(0+256),5
  6090  11B5  29BE               	goto	l825
  6091                           
  6092                           ;main.c: 1275: {
  6093                           ;main.c: 1276: universal_error=1;
  6094  11B6  3001               	movlw	1
  6095  11B7  0021               	movlb	1	; select bank1
  6096  11B8  00DB               	movwf	??_detect_display_error^(0+128)
  6097  11B9  085B               	movf	??_detect_display_error^(0+128),w
  6098  11BA  0022               	movlb	2	; select bank2
  6099  11BB  00E2               	movwf	_universal_error^(0+256)	;volatile
  6100                           
  6101                           ;main.c: 1277: diswin1[5]=6;
  6102  11BC  3006               	movlw	6
  6103  11BD  29DD               	goto	L17
  6104  11BE                     l825:	
  6105                           ;main.c: 1278: }
  6106                           
  6107                           
  6108                           ;main.c: 1279: else if(erroru.errors.water_press_er7==1 && ( (weldmode=='P') || (weldmod
      +                          e=='G') ) )
  6109  11BE  1F66               	btfss	_erroru^(0+256),6
  6110  11BF  29D1               	goto	l4629
  6111  11C0  0020               	movlb	0	; select bank0
  6112  11C1  0867               	movf	_weldmode,w	;volatile
  6113  11C2  3A50               	xorlw	80
  6114  11C3  1903               	skipnz
  6115  11C4  29C9               	goto	l4627
  6116  11C5  0867               	movf	_weldmode,w	;volatile
  6117  11C6  3A47               	xorlw	71
  6118  11C7  1D03               	skipz
  6119  11C8  29D1               	goto	l4629
  6120  11C9                     l4627:	
  6121                           
  6122                           ;main.c: 1280: {
  6123                           ;main.c: 1281: universal_error=1;
  6124  11C9  3001               	movlw	1
  6125  11CA  0021               	movlb	1	; select bank1
  6126  11CB  00DB               	movwf	??_detect_display_error^(0+128)
  6127  11CC  085B               	movf	??_detect_display_error^(0+128),w
  6128  11CD  0022               	movlb	2	; select bank2
  6129  11CE  00E2               	movwf	_universal_error^(0+256)	;volatile
  6130                           
  6131                           ;main.c: 1282: diswin1[5]=7;
  6132  11CF  3007               	movlw	7
  6133  11D0  29DD               	goto	L17
  6134  11D1                     l4629:	
  6135                           ;main.c: 1283: }
  6136                           
  6137                           
  6138                           ;main.c: 1284: else if(error8==1)
  6139  11D1  0022               	movlb	2	; select bank2
  6140  11D2  0846               	movf	_error8^(0+256),w	;volatile
  6141  11D3  3A01               	xorlw	1
  6142  11D4  1D03               	skipz
  6143  11D5  29E3               	goto	l831
  6144                           
  6145                           ;main.c: 1285: {
  6146                           ;main.c: 1286: universal_error=1;
  6147  11D6  3001               	movlw	1
  6148  11D7  0021               	movlb	1	; select bank1
  6149  11D8  00DB               	movwf	??_detect_display_error^(0+128)
  6150  11D9  085B               	movf	??_detect_display_error^(0+128),w
  6151  11DA  0022               	movlb	2	; select bank2
  6152  11DB  00E2               	movwf	_universal_error^(0+256)	;volatile
  6153                           
  6154                           ;main.c: 1287: diswin1[5]=8;
  6155  11DC  3008               	movlw	8
  6156  11DD                     L17:	
  6157  11DD  0021               	movlb	1	; select bank1
  6158  11DE  00DB               	movwf	??_detect_display_error^(0+128)
  6159  11DF  085B               	movf	??_detect_display_error^(0+128),w
  6160  11E0  0023               	movlb	3	; select bank3
  6161  11E1  00DF               	movwf	(_diswin1^(0+384)+5)
  6162                           
  6163                           ;main.c: 1288: }
  6164  11E2  29F2               	goto	l4641
  6165  11E3                     l831:	
  6166                           
  6167                           ;main.c: 1289: else if(erroru.errors.motor_fb_err==1)
  6168  11E3  1D67               	btfss	(_erroru^(0+256)+1),2
  6169  11E4  29F0               	goto	l4639
  6170                           
  6171                           ;main.c: 1290: {
  6172                           ;main.c: 1291: universal_error=1;
  6173  11E5  3001               	movlw	1
  6174  11E6  0021               	movlb	1	; select bank1
  6175  11E7  00DB               	movwf	??_detect_display_error^(0+128)
  6176  11E8  085B               	movf	??_detect_display_error^(0+128),w
  6177  11E9  0022               	movlb	2	; select bank2
  6178  11EA  00E2               	movwf	_universal_error^(0+256)	;volatile
  6179                           
  6180                           ;main.c: 1292: diswin1[4]=1;
  6181  11EB  0023               	movlb	3	; select bank3
  6182  11EC  01DE               	clrf	(_diswin1^(0+384)+4)
  6183  11ED  0ADE               	incf	(_diswin1^(0+384)+4),f
  6184                           
  6185                           ;main.c: 1293: diswin1[5]=0;
  6186  11EE  01DF               	clrf	(_diswin1^(0+384)+5)
  6187                           
  6188                           ;main.c: 1294: }
  6189  11EF  29F2               	goto	l4641
  6190  11F0                     l4639:	
  6191                           
  6192                           ;main.c: 1295: else
  6193                           ;main.c: 1296: universal_error=0;
  6194  11F0  0022               	movlb	2	; select bank2
  6195  11F1  01E2               	clrf	_universal_error^(0+256)	;volatile
  6196  11F2                     l4641:	
  6197                           
  6198                           ;main.c: 1298: if(universal_error==1)
  6199  11F2  0022               	movlb	2	; select bank2
  6200  11F3  0862               	movf	_universal_error^(0+256),w	;volatile
  6201  11F4  3A01               	xorlw	1
  6202  11F5  1D03               	skipz
  6203  11F6  0008               	return
  6204                           
  6205                           ;main.c: 1299: {
  6206                           ;main.c: 1300: universal_error_latch=1;
  6207  11F7  3001               	movlw	1
  6208  11F8  0021               	movlb	1	; select bank1
  6209  11F9  00DB               	movwf	??_detect_display_error^(0+128)
  6210  11FA  085B               	movf	??_detect_display_error^(0+128),w
  6211  11FB  0022               	movlb	2	; select bank2
  6212  11FC  00E3               	movwf	_universal_error_latch^(0+256)	;volatile
  6213                           
  6214                           ;main.c: 1301: diswin1[0]=0x0F;
  6215  11FD  300F               	movlw	15
  6216  11FE  0021               	movlb	1	; select bank1
  6217  11FF  00DB               	movwf	??_detect_display_error^(0+128)
  6218  1200  085B               	movf	??_detect_display_error^(0+128),w
  6219  1201  0023               	movlb	3	; select bank3
  6220  1202  00DA               	movwf	_diswin1^(0+384)
  6221                           
  6222                           ;main.c: 1302: diswin1[1]=0x1C;
  6223  1203  301C               	movlw	28
  6224  1204  0021               	movlb	1	; select bank1
  6225  1205  00DB               	movwf	??_detect_display_error^(0+128)
  6226  1206  085B               	movf	??_detect_display_error^(0+128),w
  6227  1207  0023               	movlb	3	; select bank3
  6228  1208  00DB               	movwf	(_diswin1^(0+384)+1)
  6229                           
  6230                           ;main.c: 1303: diswin1[2]=0x1C;
  6231  1209  301C               	movlw	28
  6232  120A  0021               	movlb	1	; select bank1
  6233  120B  00DB               	movwf	??_detect_display_error^(0+128)
  6234  120C  085B               	movf	??_detect_display_error^(0+128),w
  6235  120D  0023               	movlb	3	; select bank3
  6236  120E  00DC               	movwf	(_diswin1^(0+384)+2)
  6237                           
  6238                           ;main.c: 1305: diswin1[3]=0;
  6239  120F  01DD               	clrf	(_diswin1^(0+384)+3)
  6240                           
  6241                           ;main.c: 1306: diswin1[4]=0;
  6242  1210  01DE               	clrf	(_diswin1^(0+384)+4)
  6243                           
  6244                           ;main.c: 1308: PORTCbits.RC3 =0;
  6245  1211  0020               	movlb	0	; select bank0
  6246  1212  118E               	bcf	14,3	;volatile
  6247                           
  6248                           ;main.c: 1309: Update_PWM(0);
  6249  1213  3000               	movlw	0
  6250  1214  0021               	movlb	1	; select bank1
  6251  1215  00D3               	movwf	Update_PWM@setwsduty^(0+128)
  6252  1216  3000               	movlw	0
  6253  1217  00D4               	movwf	(Update_PWM@setwsduty^(0+128)+1)
  6254  1218  3199  21E7         	fcall	_Update_PWM
  6255                           
  6256                           ;main.c: 1310: TypeDP.DPGROUP[0]=0;
  6257  121A  0020               	movlb	0	; select bank0
  6258  121B  01EC               	clrf	_TypeDP
  6259                           
  6260                           ;main.c: 1311: erroru.errors.comm_er8=1;
  6261  121C  0022               	movlb	2	; select bank2
  6262  121D  17E6               	bsf	_erroru^(0+256),7
  6263  121E  0008               	return
  6264  121F                     __end_of_detect_display_error:	
  6265                           
  6266                           	psect	text15
  6267  18C2                     __ptext15:	
  6268 ;; *************** function _capture_init *****************
  6269 ;; Defined at:
  6270 ;;		line 1134 in file "main.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;		None
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;		None               void
  6277 ;; Registers used:
  6278 ;;		wreg, status,2, status,0
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6288 ;;Total ram usage:        0 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    3
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_main
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           
  6299                           ;psect for function _capture_init
  6300  18C2                     _capture_init:	
  6301                           
  6302                           ;main.c: 1136: TRISCbits.TRISC1 =1;
  6303                           
  6304                           ;incstack = 0
  6305                           ; Regs used in _capture_init: [wreg+status,2+status,0]
  6306  18C2  0021               	movlb	1	; select bank1
  6307  18C3  148E               	bsf	14,1	;volatile
  6308                           
  6309                           ;main.c: 1138: PIE2bits.CCP2IE = 1;
  6310  18C4  1412               	bsf	18,0	;volatile
  6311                           
  6312                           ;main.c: 1139: CCP2CONbits.CCP2M=0x05;
  6313  18C5  0025               	movlb	5	; select bank5
  6314  18C6  081A               	movf	26,w	;volatile
  6315  18C7  39F0               	andlw	-16
  6316  18C8  3805               	iorlw	5
  6317  18C9  009A               	movwf	26	;volatile
  6318                           
  6319                           ;main.c: 1140: TMR1H = 0x00;
  6320  18CA  0020               	movlb	0	; select bank0
  6321  18CB  0197               	clrf	23	;volatile
  6322                           
  6323                           ;main.c: 1141: TMR1L = 0x00;
  6324  18CC  0196               	clrf	22	;volatile
  6325                           
  6326                           ;main.c: 1142: PIR1 = 0x00;
  6327  18CD  0191               	clrf	17	;volatile
  6328                           
  6329                           ;main.c: 1144: T1CON = 0x21;
  6330  18CE  3021               	movlw	33
  6331  18CF  0098               	movwf	24	;volatile
  6332                           
  6333                           ;main.c: 1145: INTCONbits.GIE = 1;
  6334  18D0  178B               	bsf	11,7	;volatile
  6335                           
  6336                           ;main.c: 1146: INTCONbits.PEIE = 1;
  6337  18D1  170B               	bsf	11,6	;volatile
  6338  18D2  0008               	return
  6339  18D3                     __end_of_capture_init:	
  6340                           
  6341                           	psect	text16
  6342  18F9                     __ptext16:	
  6343 ;; *************** function ___lwtoft *****************
  6344 ;; Defined at:
  6345 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  c               2    8[BANK1 ] unsigned int 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  3    8[BANK1 ] float 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0, pclath, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6359 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6361 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6362 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6363 ;;Total ram usage:        4 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    4
  6366 ;; This function calls:
  6367 ;;		___ftpack
  6368 ;; This function is called by:
  6369 ;;		_main
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           
  6374                           ;psect for function ___lwtoft
  6375  18F9                     ___lwtoft:	
  6376                           
  6377                           ;incstack = 0
  6378                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6379  18F9  0021               	movlb	1	; select bank1
  6380  18FA  0828               	movf	___lwtoft@c^(0+128),w
  6381  18FB  00A0               	movwf	___ftpack@arg^(0+128)
  6382  18FC  0829               	movf	(___lwtoft@c+1)^(0+128),w
  6383  18FD  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  6384  18FE  01A2               	clrf	(___ftpack@arg+2)^(0+128)
  6385  18FF  308E               	movlw	142
  6386  1900  00AB               	movwf	??___lwtoft^(0+128)
  6387  1901  082B               	movf	??___lwtoft^(0+128),w
  6388  1902  00A3               	movwf	___ftpack@exp^(0+128)
  6389  1903  01A4               	clrf	___ftpack@sign^(0+128)
  6390  1904  319B  23C6         	fcall	___ftpack
  6391  1906  0021               	movlb	1	; select bank1
  6392  1907  0820               	movf	?___ftpack^(0+128),w
  6393  1908  00A8               	movwf	?___lwtoft^(0+128)
  6394  1909  0821               	movf	(?___ftpack+1)^(0+128),w
  6395  190A  00A9               	movwf	(?___lwtoft+1)^(0+128)
  6396  190B  0822               	movf	(?___ftpack+2)^(0+128),w
  6397  190C  00AA               	movwf	(?___lwtoft+2)^(0+128)
  6398  190D  0008               	return
  6399  190E                     __end_of___lwtoft:	
  6400                           
  6401                           	psect	text17
  6402  18B1                     __ptext17:	
  6403 ;; *************** function _Timer0_init *****************
  6404 ;; Defined at:
  6405 ;;		line 1092 in file "main.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;		None
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;		None               void
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6423 ;;Total ram usage:        0 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:    3
  6426 ;; This function calls:
  6427 ;;		Nothing
  6428 ;; This function is called by:
  6429 ;;		_main
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           
  6434                           ;psect for function _Timer0_init
  6435  18B1                     _Timer0_init:	
  6436                           
  6437                           ;main.c: 1094: TMR0=0;
  6438                           
  6439                           ;incstack = 0
  6440                           ; Regs used in _Timer0_init: [wreg+status,2+status,0]
  6441  18B1  0020               	movlb	0	; select bank0
  6442  18B2  0195               	clrf	21	;volatile
  6443                           
  6444                           ;main.c: 1095: OPTION_REGbits.PSA=0;
  6445  18B3  0021               	movlb	1	; select bank1
  6446  18B4  1195               	bcf	21,3	;volatile
  6447                           
  6448                           ;main.c: 1096: OPTION_REGbits.T0CS=0;
  6449  18B5  1295               	bcf	21,5	;volatile
  6450                           
  6451                           ;main.c: 1097: OPTION_REGbits.PS=5;
  6452  18B6  0815               	movf	21,w	;volatile
  6453  18B7  39F8               	andlw	-8
  6454  18B8  3805               	iorlw	5
  6455  18B9  0095               	movwf	21	;volatile
  6456                           
  6457                           ;main.c: 1098: INTCONbits.GIE=0;
  6458  18BA  138B               	bcf	11,7	;volatile
  6459                           
  6460                           ;main.c: 1099: INTCONbits.PEIE=0;
  6461  18BB  130B               	bcf	11,6	;volatile
  6462                           
  6463                           ;main.c: 1100: INTCONbits.T0IF=0;
  6464  18BC  110B               	bcf	11,2	;volatile
  6465                           
  6466                           ;main.c: 1106: TMR0=0x85;
  6467  18BD  3085               	movlw	133
  6468  18BE  0020               	movlb	0	; select bank0
  6469  18BF  0095               	movwf	21	;volatile
  6470                           
  6471                           ;main.c: 1107: INTCONbits.T0IE=1;
  6472  18C0  168B               	bsf	11,5	;volatile
  6473  18C1  0008               	return
  6474  18C2                     __end_of_Timer0_init:	
  6475                           
  6476                           	psect	text18
  6477  1CF1                     __ptext18:	
  6478 ;; *************** function _SCANENCODER2 *****************
  6479 ;; Defined at:
  6480 ;;		line 94 in file "ENCODER.C"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;		None
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  result          1    6[BANK1 ] unsigned char 
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  1    wreg      unsigned char 
  6487 ;; Registers used:
  6488 ;;		wreg, status,2, status,0, pclath, cstack
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6495 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6496 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6497 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6498 ;;Total ram usage:        2 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; Hardware stack levels required when called:    4
  6501 ;; This function calls:
  6502 ;;		_enc2_port
  6503 ;; This function is called by:
  6504 ;;		_main
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           
  6509                           ;psect for function _SCANENCODER2
  6510  1CF1                     _SCANENCODER2:	
  6511                           
  6512                           ;ENCODER.C: 96: unsigned char result=0;
  6513                           
  6514                           ;incstack = 0
  6515                           ; Regs used in _SCANENCODER2: [wreg+status,2+status,0+pclath+cstack]
  6516  1CF1  0021               	movlb	1	; select bank1
  6517  1CF2  01A6               	clrf	SCANENCODER2@result^(0+128)
  6518                           
  6519                           ;ENCODER.C: 97: if(enc2_port() == 1)
  6520  1CF3  319A  22AA  319C   	fcall	_enc2_port
  6521  1CF6  3A01               	xorlw	1
  6522  1CF7  1D03               	skipz
  6523  1CF8  2D6C               	goto	l4305
  6524                           
  6525                           ;ENCODER.C: 98: {
  6526                           ;ENCODER.C: 99: if(firstpulse2==0 && secondpulse2==0)
  6527  1CF9  0022               	movlb	2	; select bank2
  6528  1CFA  08C8               	movf	_firstpulse2^(0+256),f
  6529  1CFB  1D03               	skipz
  6530  1CFC  2D1E               	goto	l4267
  6531  1CFD  08DC               	movf	_secondpulse2^(0+256),f
  6532  1CFE  1D03               	skipz
  6533  1CFF  2D1E               	goto	l4267
  6534                           
  6535                           ;ENCODER.C: 100: {
  6536                           ;ENCODER.C: 101: if(new2==0x02)
  6537  1D00  3002               	movlw	2
  6538  1D01  0020               	movlb	0	; select bank0
  6539  1D02  0656               	xorwf	_new2,w
  6540  1D03  0457               	iorwf	_new2+1,w
  6541  1D04  1D03               	skipz
  6542  1D05  2D11               	goto	l4257
  6543                           
  6544                           ;ENCODER.C: 102: {
  6545                           ;ENCODER.C: 103: firstpulse2=1;
  6546  1D06  0022               	movlb	2	; select bank2
  6547  1D07  01C8               	clrf	_firstpulse2^(0+256)
  6548  1D08  0AC8               	incf	_firstpulse2^(0+256),f
  6549                           
  6550                           ;ENCODER.C: 104: secondpulse2=0;
  6551  1D09  01DC               	clrf	_secondpulse2^(0+256)
  6552                           
  6553                           ;ENCODER.C: 105: plus222=1;
  6554  1D0A  01D3               	clrf	_plus222^(0+256)
  6555  1D0B  0AD3               	incf	_plus222^(0+256),f
  6556                           
  6557                           ;ENCODER.C: 106: result='$';
  6558  1D0C  3024               	movlw	36
  6559  1D0D  0021               	movlb	1	; select bank1
  6560  1D0E  00A5               	movwf	??_SCANENCODER2^(0+128)
  6561  1D0F  0825               	movf	??_SCANENCODER2^(0+128),w
  6562  1D10  00A6               	movwf	SCANENCODER2@result^(0+128)
  6563  1D11                     l4257:	
  6564                           
  6565                           ;ENCODER.C: 107: }
  6566                           ;ENCODER.C: 108: if(new2==0x01)
  6567  1D11  3001               	movlw	1
  6568  1D12  0020               	movlb	0	; select bank0
  6569  1D13  0656               	xorwf	_new2,w
  6570  1D14  0457               	iorwf	_new2+1,w
  6571  1D15  1D03               	skipz
  6572  1D16  2D6C               	goto	l4305
  6573                           
  6574                           ;ENCODER.C: 109: {
  6575                           ;ENCODER.C: 110: firstpulse2=1;
  6576  1D17  0022               	movlb	2	; select bank2
  6577  1D18  01C8               	clrf	_firstpulse2^(0+256)
  6578  1D19  0AC8               	incf	_firstpulse2^(0+256),f
  6579                           
  6580                           ;ENCODER.C: 111: secondpulse2=0;
  6581  1D1A  01DC               	clrf	_secondpulse2^(0+256)
  6582                           
  6583                           ;ENCODER.C: 112: minus222=1;
  6584  1D1B  01CD               	clrf	_minus222^(0+256)
  6585  1D1C  0ACD               	incf	_minus222^(0+256),f
  6586  1D1D  2D67               	goto	l4303
  6587  1D1E                     l4267:	
  6588                           ;ENCODER.C: 114: }
  6589                           ;ENCODER.C: 115: }
  6590                           
  6591                           ;ENCODER.C: 113: result='$';
  6592                           
  6593                           
  6594                           ;ENCODER.C: 116: else if(firstpulse2==1 && secondpulse2==0)
  6595  1D1E  0022               	movlb	2	; select bank2
  6596  1D1F  0848               	movf	_firstpulse2^(0+256),w
  6597  1D20  3A01               	xorlw	1
  6598  1D21  1D03               	skipz
  6599  1D22  2D32               	goto	l4277
  6600  1D23  08DC               	movf	_secondpulse2^(0+256),f
  6601  1D24  1D03               	skipz
  6602  1D25  2D32               	goto	l4277
  6603                           
  6604                           ;ENCODER.C: 117: {
  6605                           ;ENCODER.C: 118: if(new2==0x03)
  6606  1D26  3003               	movlw	3
  6607  1D27  0020               	movlb	0	; select bank0
  6608  1D28  0656               	xorwf	_new2,w
  6609  1D29  0457               	iorwf	_new2+1,w
  6610  1D2A  1D03               	skipz
  6611  1D2B  2D6C               	goto	l4305
  6612                           
  6613                           ;ENCODER.C: 119: {
  6614                           ;ENCODER.C: 120: firstpulse2=1;
  6615  1D2C  0022               	movlb	2	; select bank2
  6616  1D2D  01C8               	clrf	_firstpulse2^(0+256)
  6617  1D2E  0AC8               	incf	_firstpulse2^(0+256),f
  6618                           
  6619                           ;ENCODER.C: 121: secondpulse2=1;
  6620  1D2F  01DC               	clrf	_secondpulse2^(0+256)
  6621  1D30  0ADC               	incf	_secondpulse2^(0+256),f
  6622  1D31  2D67               	goto	l4303
  6623  1D32                     l4277:	
  6624                           ;ENCODER.C: 123: }
  6625                           ;ENCODER.C: 124: }
  6626                           
  6627                           ;ENCODER.C: 122: result='$';
  6628                           
  6629                           
  6630                           ;ENCODER.C: 125: else if(firstpulse2==1 && secondpulse2==1)
  6631  1D32  0022               	movlb	2	; select bank2
  6632  1D33  0848               	movf	_firstpulse2^(0+256),w
  6633  1D34  3A01               	xorlw	1
  6634  1D35  1D03               	skipz
  6635  1D36  2D63               	goto	l4301
  6636  1D37  085C               	movf	_secondpulse2^(0+256),w
  6637  1D38  3A01               	xorlw	1
  6638  1D39  1D03               	skipz
  6639  1D3A  2D63               	goto	l4301
  6640                           
  6641                           ;ENCODER.C: 126: {
  6642                           ;ENCODER.C: 127: if(new2==0x01 && plus222==1)
  6643  1D3B  3001               	movlw	1
  6644  1D3C  0020               	movlb	0	; select bank0
  6645  1D3D  0656               	xorwf	_new2,w
  6646  1D3E  0457               	iorwf	_new2+1,w
  6647  1D3F  1D03               	skipz
  6648  1D40  2D4D               	goto	l4289
  6649  1D41  0022               	movlb	2	; select bank2
  6650  1D42  0853               	movf	_plus222^(0+256),w
  6651  1D43  3A01               	xorlw	1
  6652  1D44  1D03               	skipz
  6653  1D45  2D4D               	goto	l4289
  6654                           
  6655                           ;ENCODER.C: 128: {
  6656                           ;ENCODER.C: 129: firstpulse2=0;
  6657  1D46  01C8               	clrf	_firstpulse2^(0+256)
  6658                           
  6659                           ;ENCODER.C: 130: plus222=0;
  6660  1D47  01D3               	clrf	_plus222^(0+256)
  6661                           
  6662                           ;ENCODER.C: 131: result='+';
  6663  1D48  302B               	movlw	43
  6664  1D49  0021               	movlb	1	; select bank1
  6665  1D4A  00A5               	movwf	??_SCANENCODER2^(0+128)
  6666  1D4B  0825               	movf	??_SCANENCODER2^(0+128),w
  6667  1D4C  00A6               	movwf	SCANENCODER2@result^(0+128)
  6668  1D4D                     l4289:	
  6669                           
  6670                           ;ENCODER.C: 132: }
  6671                           ;ENCODER.C: 133: if(new2==0x02 && minus222==1)
  6672  1D4D  3002               	movlw	2
  6673  1D4E  0020               	movlb	0	; select bank0
  6674  1D4F  0656               	xorwf	_new2,w
  6675  1D50  0457               	iorwf	_new2+1,w
  6676  1D51  1D03               	skipz
  6677  1D52  2D5F               	goto	l4297
  6678  1D53  0022               	movlb	2	; select bank2
  6679  1D54  084D               	movf	_minus222^(0+256),w
  6680  1D55  3A01               	xorlw	1
  6681  1D56  1D03               	skipz
  6682  1D57  2D5F               	goto	l4297
  6683                           
  6684                           ;ENCODER.C: 134: {
  6685                           ;ENCODER.C: 135: firstpulse2=0;
  6686  1D58  01C8               	clrf	_firstpulse2^(0+256)
  6687                           
  6688                           ;ENCODER.C: 136: minus222=0;
  6689  1D59  01CD               	clrf	_minus222^(0+256)
  6690                           
  6691                           ;ENCODER.C: 137: result='-';
  6692  1D5A  302D               	movlw	45
  6693  1D5B  0021               	movlb	1	; select bank1
  6694  1D5C  00A5               	movwf	??_SCANENCODER2^(0+128)
  6695  1D5D  0825               	movf	??_SCANENCODER2^(0+128),w
  6696  1D5E  00A6               	movwf	SCANENCODER2@result^(0+128)
  6697  1D5F                     l4297:	
  6698                           
  6699                           ;ENCODER.C: 138: }
  6700                           ;ENCODER.C: 139: firstpulse2=0;
  6701  1D5F  0022               	movlb	2	; select bank2
  6702  1D60  01C8               	clrf	_firstpulse2^(0+256)
  6703                           
  6704                           ;ENCODER.C: 140: secondpulse2=0;
  6705  1D61  01DC               	clrf	_secondpulse2^(0+256)
  6706                           
  6707                           ;ENCODER.C: 141: }
  6708  1D62  2D6C               	goto	l4305
  6709  1D63                     l4301:	
  6710                           
  6711                           ;ENCODER.C: 142: else
  6712                           ;ENCODER.C: 143: {
  6713                           ;ENCODER.C: 144: plus222=0;
  6714  1D63  01D3               	clrf	_plus222^(0+256)
  6715                           
  6716                           ;ENCODER.C: 145: minus222=0;
  6717  1D64  01CD               	clrf	_minus222^(0+256)
  6718                           
  6719                           ;ENCODER.C: 146: firstpulse2=0;
  6720  1D65  01C8               	clrf	_firstpulse2^(0+256)
  6721                           
  6722                           ;ENCODER.C: 147: secondpulse2=0;
  6723  1D66  01DC               	clrf	_secondpulse2^(0+256)
  6724  1D67                     l4303:	
  6725                           
  6726                           ;ENCODER.C: 148: result='$';
  6727  1D67  3024               	movlw	36
  6728  1D68  0021               	movlb	1	; select bank1
  6729  1D69  00A5               	movwf	??_SCANENCODER2^(0+128)
  6730  1D6A  0825               	movf	??_SCANENCODER2^(0+128),w
  6731  1D6B  00A6               	movwf	SCANENCODER2@result^(0+128)
  6732  1D6C                     l4305:	
  6733                           
  6734                           ;ENCODER.C: 149: }
  6735                           ;ENCODER.C: 150: }
  6736                           ;ENCODER.C: 151: return(result);
  6737  1D6C  0021               	movlb	1	; select bank1
  6738  1D6D  0826               	movf	SCANENCODER2@result^(0+128),w
  6739  1D6E  0008               	return
  6740  1D6F                     __end_of_SCANENCODER2:	
  6741                           
  6742                           	psect	text19
  6743  1AAA                     __ptext19:	
  6744 ;; *************** function _enc2_port *****************
  6745 ;; Defined at:
  6746 ;;		line 154 in file "ENCODER.C"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;		None
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  portvalue       2    3[BANK1 ] unsigned int 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      unsigned char 
  6753 ;; Registers used:
  6754 ;;		wreg, status,2, status,0
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6761 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6762 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6763 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6764 ;;Total ram usage:        5 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; Hardware stack levels required when called:    3
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_SCANENCODER2
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           
  6775                           ;psect for function _enc2_port
  6776  1AAA                     _enc2_port:	
  6777                           
  6778                           ;ENCODER.C: 156: unsigned int portvalue=0x0000;
  6779                           
  6780                           ;incstack = 0
  6781                           ; Regs used in _enc2_port: [wreg+status,2+status,0]
  6782  1AAA  0021               	movlb	1	; select bank1
  6783  1AAB  01A3               	clrf	enc2_port@portvalue^(0+128)
  6784  1AAC  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6785                           
  6786                           ;ENCODER.C: 157: portvalue=0x0000;
  6787  1AAD  01A3               	clrf	enc2_port@portvalue^(0+128)
  6788  1AAE  01A4               	clrf	(enc2_port@portvalue+1)^(0+128)
  6789                           
  6790                           ;ENCODER.C: 158: portvalue=PORTAbits.RA2;
  6791  1AAF  0020               	movlb	0	; select bank0
  6792  1AB0  0C0C               	rrf	12,w	;volatile
  6793  1AB1  0C89               	rrf	9,f
  6794  1AB2  3901               	andlw	1
  6795  1AB3  0021               	movlb	1	; select bank1
  6796  1AB4  00A0               	movwf	??_enc2_port^(0+128)
  6797  1AB5  01A1               	clrf	(??_enc2_port^(0+128)+1)
  6798  1AB6  0820               	movf	??_enc2_port^(0+128),w
  6799  1AB7  00A3               	movwf	enc2_port@portvalue^(0+128)
  6800  1AB8  0821               	movf	(??_enc2_port+1)^(0+128),w
  6801  1AB9  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6802                           
  6803                           ;ENCODER.C: 159: portvalue=portvalue<<1;
  6804  1ABA  3523               	lslf	enc2_port@portvalue^(0+128),w
  6805  1ABB  00A3               	movwf	enc2_port@portvalue^(0+128)
  6806  1ABC  0D24               	rlf	(enc2_port@portvalue+1)^(0+128),w
  6807  1ABD  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6808                           
  6809                           ;ENCODER.C: 160: portvalue=portvalue|PORTAbits.RA1;
  6810  1ABE  0020               	movlb	0	; select bank0
  6811  1ABF  0C0C               	rrf	12,w	;volatile
  6812  1AC0  3901               	andlw	1
  6813  1AC1  0021               	movlb	1	; select bank1
  6814  1AC2  00A0               	movwf	??_enc2_port^(0+128)
  6815  1AC3  0823               	movf	enc2_port@portvalue^(0+128),w
  6816  1AC4  0420               	iorwf	??_enc2_port^(0+128),w
  6817  1AC5  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6818  1AC6  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6819  1AC7  00A2               	movwf	(??_enc2_port+2)^(0+128)
  6820  1AC8  0821               	movf	(??_enc2_port+1)^(0+128),w
  6821  1AC9  00A3               	movwf	enc2_port@portvalue^(0+128)
  6822  1ACA  0822               	movf	(??_enc2_port+2)^(0+128),w
  6823  1ACB  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6824                           
  6825                           ;ENCODER.C: 161: portvalue=(portvalue & 0X0003);
  6826  1ACC  3003               	movlw	3
  6827  1ACD  0523               	andwf	enc2_port@portvalue^(0+128),w
  6828  1ACE  00A3               	movwf	enc2_port@portvalue^(0+128)
  6829  1ACF  3000               	movlw	0
  6830  1AD0  0524               	andwf	(enc2_port@portvalue+1)^(0+128),w
  6831  1AD1  00A4               	movwf	(enc2_port@portvalue+1)^(0+128)
  6832                           
  6833                           ;ENCODER.C: 162: new2=portvalue;
  6834  1AD2  0824               	movf	(enc2_port@portvalue+1)^(0+128),w
  6835  1AD3  0020               	movlb	0	; select bank0
  6836  1AD4  01D7               	clrf	_new2+1
  6837  1AD5  07D7               	addwf	_new2+1,f
  6838  1AD6  0021               	movlb	1	; select bank1
  6839  1AD7  0823               	movf	enc2_port@portvalue^(0+128),w
  6840  1AD8  0020               	movlb	0	; select bank0
  6841  1AD9  01D6               	clrf	_new2
  6842  1ADA  07D6               	addwf	_new2,f
  6843                           
  6844                           ;ENCODER.C: 163: temp=new2;
  6845  1ADB  0856               	movf	_new2,w
  6846  1ADC  0021               	movlb	1	; select bank1
  6847  1ADD  00A0               	movwf	??_enc2_port^(0+128)
  6848  1ADE  0820               	movf	??_enc2_port^(0+128),w
  6849  1ADF  0020               	movlb	0	; select bank0
  6850  1AE0  00E6               	movwf	_temp
  6851                           
  6852                           ;ENCODER.C: 164: if((temp ^ old2) !=0)
  6853  1AE1  0023               	movlb	3	; select bank3
  6854  1AE2  083A               	movf	_old2^(0+384),w
  6855  1AE3  0020               	movlb	0	; select bank0
  6856  1AE4  0666               	xorwf	_temp,w
  6857  1AE5  0021               	movlb	1	; select bank1
  6858  1AE6  00A0               	movwf	??_enc2_port^(0+128)
  6859  1AE7  0023               	movlb	3	; select bank3
  6860  1AE8  083B               	movf	(_old2+1)^(0+384),w
  6861  1AE9  0021               	movlb	1	; select bank1
  6862  1AEA  00A1               	movwf	(??_enc2_port+1)^(0+128)
  6863  1AEB  0821               	movf	(??_enc2_port+1)^(0+128),w
  6864  1AEC  0420               	iorwf	??_enc2_port^(0+128),w
  6865  1AED  1903               	skipnz
  6866  1AEE  2AFB               	goto	l3675
  6867                           
  6868                           ;ENCODER.C: 165: {
  6869                           ;ENCODER.C: 166: old2=new2;
  6870  1AEF  0020               	movlb	0	; select bank0
  6871  1AF0  0857               	movf	_new2+1,w
  6872  1AF1  0023               	movlb	3	; select bank3
  6873  1AF2  01BB               	clrf	(_old2+1)^(0+384)
  6874  1AF3  07BB               	addwf	(_old2+1)^(0+384),f
  6875  1AF4  0020               	movlb	0	; select bank0
  6876  1AF5  0856               	movf	_new2,w
  6877  1AF6  0023               	movlb	3	; select bank3
  6878  1AF7  01BA               	clrf	_old2^(0+384)
  6879  1AF8  07BA               	addwf	_old2^(0+384),f
  6880                           
  6881                           ;ENCODER.C: 167: return 1;
  6882  1AF9  3001               	movlw	1
  6883                           
  6884                           ;ENCODER.C: 168: }
  6885  1AFA  0008               	return
  6886  1AFB                     l3675:	
  6887                           
  6888                           ;ENCODER.C: 169: else
  6889                           ;ENCODER.C: 170: {
  6890                           ;ENCODER.C: 171: old2=new2;
  6891  1AFB  0020               	movlb	0	; select bank0
  6892  1AFC  0857               	movf	_new2+1,w
  6893  1AFD  0023               	movlb	3	; select bank3
  6894  1AFE  01BB               	clrf	(_old2+1)^(0+384)
  6895  1AFF  07BB               	addwf	(_old2+1)^(0+384),f
  6896  1B00  0020               	movlb	0	; select bank0
  6897  1B01  0856               	movf	_new2,w
  6898  1B02  0023               	movlb	3	; select bank3
  6899  1B03  01BA               	clrf	_old2^(0+384)
  6900  1B04  07BA               	addwf	_old2^(0+384),f
  6901                           
  6902                           ;ENCODER.C: 172: return 0;
  6903  1B05  3000               	movlw	0
  6904  1B06  0008               	return
  6905  1B07                     __end_of_enc2_port:	
  6906                           
  6907                           	psect	text20
  6908  1D6F                     __ptext20:	
  6909 ;; *************** function _SCANENCODER1 *****************
  6910 ;; Defined at:
  6911 ;;		line 12 in file "ENCODER.C"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;		None
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  result          1    7[BANK1 ] unsigned char 
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      unsigned char 
  6918 ;; Registers used:
  6919 ;;		wreg, status,2, status,0, pclath, cstack
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6926 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6927 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6928 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6929 ;;Total ram usage:        2 bytes
  6930 ;; Hardware stack levels used:    1
  6931 ;; Hardware stack levels required when called:    4
  6932 ;; This function calls:
  6933 ;;		_enc1_port
  6934 ;; This function is called by:
  6935 ;;		_main
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           
  6940                           ;psect for function _SCANENCODER1
  6941  1D6F                     _SCANENCODER1:	
  6942                           
  6943                           ;ENCODER.C: 14: unsigned char result=0;
  6944                           
  6945                           ;incstack = 0
  6946                           ; Regs used in _SCANENCODER1: [wreg+status,2+status,0+pclath+cstack]
  6947  1D6F  0021               	movlb	1	; select bank1
  6948  1D70  01A7               	clrf	SCANENCODER1@result^(0+128)
  6949                           
  6950                           ;ENCODER.C: 15: if(enc1_port() == 1)
  6951  1D71  319B  2307  319D   	fcall	_enc1_port
  6952  1D74  3A01               	xorlw	1
  6953  1D75  1D03               	skipz
  6954  1D76  2DEB               	goto	l4235
  6955                           
  6956                           ;ENCODER.C: 16: {
  6957                           ;ENCODER.C: 17: if(firstpulse1==0 && secondpulse1==0)
  6958  1D77  0022               	movlb	2	; select bank2
  6959  1D78  08C7               	movf	_firstpulse1^(0+256),f
  6960  1D79  1D03               	skipz
  6961  1D7A  2D9C               	goto	l4195
  6962  1D7B  08DB               	movf	_secondpulse1^(0+256),f
  6963  1D7C  1D03               	skipz
  6964  1D7D  2D9C               	goto	l4195
  6965                           
  6966                           ;ENCODER.C: 18: {
  6967                           ;ENCODER.C: 19: if(new1==0x02)
  6968  1D7E  3002               	movlw	2
  6969  1D7F  0020               	movlb	0	; select bank0
  6970  1D80  0654               	xorwf	_new1,w
  6971  1D81  0455               	iorwf	_new1+1,w
  6972  1D82  1D03               	skipz
  6973  1D83  2D8F               	goto	l4185
  6974                           
  6975                           ;ENCODER.C: 20: {
  6976                           ;ENCODER.C: 21: firstpulse1=1;
  6977  1D84  0022               	movlb	2	; select bank2
  6978  1D85  01C7               	clrf	_firstpulse1^(0+256)
  6979  1D86  0AC7               	incf	_firstpulse1^(0+256),f
  6980                           
  6981                           ;ENCODER.C: 22: secondpulse1=0;
  6982  1D87  01DB               	clrf	_secondpulse1^(0+256)
  6983                           
  6984                           ;ENCODER.C: 23: plus111=1;
  6985  1D88  01D2               	clrf	_plus111^(0+256)
  6986  1D89  0AD2               	incf	_plus111^(0+256),f
  6987                           
  6988                           ;ENCODER.C: 24: result='$';
  6989  1D8A  3024               	movlw	36
  6990  1D8B  0021               	movlb	1	; select bank1
  6991  1D8C  00A6               	movwf	??_SCANENCODER1^(0+128)
  6992  1D8D  0826               	movf	??_SCANENCODER1^(0+128),w
  6993  1D8E  00A7               	movwf	SCANENCODER1@result^(0+128)
  6994  1D8F                     l4185:	
  6995                           
  6996                           ;ENCODER.C: 25: }
  6997                           ;ENCODER.C: 26: if(new1==0x01)
  6998  1D8F  3001               	movlw	1
  6999  1D90  0020               	movlb	0	; select bank0
  7000  1D91  0654               	xorwf	_new1,w
  7001  1D92  0455               	iorwf	_new1+1,w
  7002  1D93  1D03               	skipz
  7003  1D94  2DEB               	goto	l4235
  7004                           
  7005                           ;ENCODER.C: 27: {
  7006                           ;ENCODER.C: 28: firstpulse1=1;
  7007  1D95  0022               	movlb	2	; select bank2
  7008  1D96  01C7               	clrf	_firstpulse1^(0+256)
  7009  1D97  0AC7               	incf	_firstpulse1^(0+256),f
  7010                           
  7011                           ;ENCODER.C: 29: secondpulse1=0;
  7012  1D98  01DB               	clrf	_secondpulse1^(0+256)
  7013                           
  7014                           ;ENCODER.C: 30: minus111=1;
  7015  1D99  01CC               	clrf	_minus111^(0+256)
  7016  1D9A  0ACC               	incf	_minus111^(0+256),f
  7017  1D9B  2DE6               	goto	l4233
  7018  1D9C                     l4195:	
  7019                           ;ENCODER.C: 32: }
  7020                           ;ENCODER.C: 33: }
  7021                           
  7022                           ;ENCODER.C: 31: result='$';
  7023                           
  7024                           
  7025                           ;ENCODER.C: 34: else if(firstpulse1==1 && secondpulse1==0)
  7026  1D9C  0022               	movlb	2	; select bank2
  7027  1D9D  0847               	movf	_firstpulse1^(0+256),w
  7028  1D9E  3A01               	xorlw	1
  7029  1D9F  1D03               	skipz
  7030  1DA0  2DB0               	goto	l4205
  7031  1DA1  08DB               	movf	_secondpulse1^(0+256),f
  7032  1DA2  1D03               	skipz
  7033  1DA3  2DB0               	goto	l4205
  7034                           
  7035                           ;ENCODER.C: 35: {
  7036                           ;ENCODER.C: 36: if(new1==0x03)
  7037  1DA4  3003               	movlw	3
  7038  1DA5  0020               	movlb	0	; select bank0
  7039  1DA6  0654               	xorwf	_new1,w
  7040  1DA7  0455               	iorwf	_new1+1,w
  7041  1DA8  1D03               	skipz
  7042  1DA9  2DEB               	goto	l4235
  7043                           
  7044                           ;ENCODER.C: 37: {
  7045                           ;ENCODER.C: 38: firstpulse1=1;
  7046  1DAA  0022               	movlb	2	; select bank2
  7047  1DAB  01C7               	clrf	_firstpulse1^(0+256)
  7048  1DAC  0AC7               	incf	_firstpulse1^(0+256),f
  7049                           
  7050                           ;ENCODER.C: 39: secondpulse1=1;
  7051  1DAD  01DB               	clrf	_secondpulse1^(0+256)
  7052  1DAE  0ADB               	incf	_secondpulse1^(0+256),f
  7053  1DAF  2DE6               	goto	l4233
  7054  1DB0                     l4205:	
  7055                           ;ENCODER.C: 41: }
  7056                           ;ENCODER.C: 42: }
  7057                           
  7058                           ;ENCODER.C: 40: result='$';
  7059                           
  7060                           
  7061                           ;ENCODER.C: 43: else if(firstpulse1==1 && secondpulse1==1)
  7062  1DB0  0022               	movlb	2	; select bank2
  7063  1DB1  0847               	movf	_firstpulse1^(0+256),w
  7064  1DB2  3A01               	xorlw	1
  7065  1DB3  1D03               	skipz
  7066  1DB4  2DE2               	goto	l4231
  7067  1DB5  085B               	movf	_secondpulse1^(0+256),w
  7068  1DB6  3A01               	xorlw	1
  7069  1DB7  1D03               	skipz
  7070  1DB8  2DE2               	goto	l4231
  7071                           
  7072                           ;ENCODER.C: 44: {
  7073                           ;ENCODER.C: 45: if(new1==0x01 && plus111==1)
  7074  1DB9  3001               	movlw	1
  7075  1DBA  0020               	movlb	0	; select bank0
  7076  1DBB  0654               	xorwf	_new1,w
  7077  1DBC  0455               	iorwf	_new1+1,w
  7078  1DBD  1D03               	skipz
  7079  1DBE  2DCC               	goto	l4219
  7080  1DBF  0022               	movlb	2	; select bank2
  7081  1DC0  0852               	movf	_plus111^(0+256),w
  7082  1DC1  3A01               	xorlw	1
  7083  1DC2  1D03               	skipz
  7084  1DC3  2DCC               	goto	l4219
  7085                           
  7086                           ;ENCODER.C: 46: {
  7087                           ;ENCODER.C: 47: firstpulse1=1;
  7088  1DC4  01C7               	clrf	_firstpulse1^(0+256)
  7089  1DC5  0AC7               	incf	_firstpulse1^(0+256),f
  7090                           
  7091                           ;ENCODER.C: 48: plus111=0;
  7092  1DC6  01D2               	clrf	_plus111^(0+256)
  7093                           
  7094                           ;ENCODER.C: 49: result='+';
  7095  1DC7  302B               	movlw	43
  7096  1DC8  0021               	movlb	1	; select bank1
  7097  1DC9  00A6               	movwf	??_SCANENCODER1^(0+128)
  7098  1DCA  0826               	movf	??_SCANENCODER1^(0+128),w
  7099  1DCB  00A7               	movwf	SCANENCODER1@result^(0+128)
  7100  1DCC                     l4219:	
  7101                           
  7102                           ;ENCODER.C: 50: }
  7103                           ;ENCODER.C: 51: if(new1==0x02 && minus111==1)
  7104  1DCC  3002               	movlw	2
  7105  1DCD  0020               	movlb	0	; select bank0
  7106  1DCE  0654               	xorwf	_new1,w
  7107  1DCF  0455               	iorwf	_new1+1,w
  7108  1DD0  1D03               	skipz
  7109  1DD1  2DDE               	goto	l4227
  7110  1DD2  0022               	movlb	2	; select bank2
  7111  1DD3  084C               	movf	_minus111^(0+256),w
  7112  1DD4  3A01               	xorlw	1
  7113  1DD5  1D03               	skipz
  7114  1DD6  2DDE               	goto	l4227
  7115                           
  7116                           ;ENCODER.C: 52: {
  7117                           ;ENCODER.C: 53: firstpulse1=0;
  7118  1DD7  01C7               	clrf	_firstpulse1^(0+256)
  7119                           
  7120                           ;ENCODER.C: 54: minus111=0;
  7121  1DD8  01CC               	clrf	_minus111^(0+256)
  7122                           
  7123                           ;ENCODER.C: 55: result='-';
  7124  1DD9  302D               	movlw	45
  7125  1DDA  0021               	movlb	1	; select bank1
  7126  1DDB  00A6               	movwf	??_SCANENCODER1^(0+128)
  7127  1DDC  0826               	movf	??_SCANENCODER1^(0+128),w
  7128  1DDD  00A7               	movwf	SCANENCODER1@result^(0+128)
  7129  1DDE                     l4227:	
  7130                           
  7131                           ;ENCODER.C: 56: }
  7132                           ;ENCODER.C: 57: firstpulse1=0;
  7133  1DDE  0022               	movlb	2	; select bank2
  7134  1DDF  01C7               	clrf	_firstpulse1^(0+256)
  7135                           
  7136                           ;ENCODER.C: 58: secondpulse1=0;
  7137  1DE0  01DB               	clrf	_secondpulse1^(0+256)
  7138                           
  7139                           ;ENCODER.C: 59: }
  7140  1DE1  2DEB               	goto	l4235
  7141  1DE2                     l4231:	
  7142                           
  7143                           ;ENCODER.C: 60: else
  7144                           ;ENCODER.C: 61: {
  7145                           ;ENCODER.C: 62: plus111=0;
  7146  1DE2  01D2               	clrf	_plus111^(0+256)
  7147                           
  7148                           ;ENCODER.C: 63: minus111=0;
  7149  1DE3  01CC               	clrf	_minus111^(0+256)
  7150                           
  7151                           ;ENCODER.C: 64: firstpulse1=0;
  7152  1DE4  01C7               	clrf	_firstpulse1^(0+256)
  7153                           
  7154                           ;ENCODER.C: 65: secondpulse1=0;
  7155  1DE5  01DB               	clrf	_secondpulse1^(0+256)
  7156  1DE6                     l4233:	
  7157                           
  7158                           ;ENCODER.C: 66: result='$';
  7159  1DE6  3024               	movlw	36
  7160  1DE7  0021               	movlb	1	; select bank1
  7161  1DE8  00A6               	movwf	??_SCANENCODER1^(0+128)
  7162  1DE9  0826               	movf	??_SCANENCODER1^(0+128),w
  7163  1DEA  00A7               	movwf	SCANENCODER1@result^(0+128)
  7164  1DEB                     l4235:	
  7165                           
  7166                           ;ENCODER.C: 67: }
  7167                           ;ENCODER.C: 68: }
  7168                           ;ENCODER.C: 69: return(result);
  7169  1DEB  0021               	movlb	1	; select bank1
  7170  1DEC  0827               	movf	SCANENCODER1@result^(0+128),w
  7171  1DED  0008               	return
  7172  1DEE                     __end_of_SCANENCODER1:	
  7173                           
  7174                           	psect	text21
  7175  1B07                     __ptext21:	
  7176 ;; *************** function _enc1_port *****************
  7177 ;; Defined at:
  7178 ;;		line 72 in file "ENCODER.C"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;		None
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;  portvalue       2    4[BANK1 ] unsigned int 
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      unsigned char 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, status,0
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7193 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7194 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7195 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7196 ;;Total ram usage:        6 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    3
  7199 ;; This function calls:
  7200 ;;		Nothing
  7201 ;; This function is called by:
  7202 ;;		_SCANENCODER1
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           
  7207                           ;psect for function _enc1_port
  7208  1B07                     _enc1_port:	
  7209                           
  7210                           ;ENCODER.C: 74: unsigned int portvalue=0x0000;
  7211                           
  7212                           ;incstack = 0
  7213                           ; Regs used in _enc1_port: [wreg+status,2+status,0]
  7214  1B07  0021               	movlb	1	; select bank1
  7215  1B08  01A4               	clrf	enc1_port@portvalue^(0+128)
  7216  1B09  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  7217                           
  7218                           ;ENCODER.C: 75: portvalue=0x0000;
  7219  1B0A  01A4               	clrf	enc1_port@portvalue^(0+128)
  7220  1B0B  01A5               	clrf	(enc1_port@portvalue+1)^(0+128)
  7221                           
  7222                           ;ENCODER.C: 76: portvalue=PORTAbits.RA4;
  7223  1B0C  0020               	movlb	0	; select bank0
  7224  1B0D  0E0C               	swapf	12,w	;volatile
  7225  1B0E  3901               	andlw	1
  7226  1B0F  0021               	movlb	1	; select bank1
  7227  1B10  00A0               	movwf	??_enc1_port^(0+128)
  7228  1B11  01A1               	clrf	(??_enc1_port^(0+128)+1)
  7229  1B12  0820               	movf	??_enc1_port^(0+128),w
  7230  1B13  00A4               	movwf	enc1_port@portvalue^(0+128)
  7231  1B14  0821               	movf	(??_enc1_port+1)^(0+128),w
  7232  1B15  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7233                           
  7234                           ;ENCODER.C: 77: portvalue=portvalue<<1;
  7235  1B16  3524               	lslf	enc1_port@portvalue^(0+128),w
  7236  1B17  00A4               	movwf	enc1_port@portvalue^(0+128)
  7237  1B18  0D25               	rlf	(enc1_port@portvalue+1)^(0+128),w
  7238  1B19  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7239                           
  7240                           ;ENCODER.C: 78: portvalue=portvalue|PORTAbits.RA3;
  7241  1B1A  0020               	movlb	0	; select bank0
  7242  1B1B  0C0C               	rrf	12,w	;volatile
  7243  1B1C  0021               	movlb	1	; select bank1
  7244  1B1D  00A0               	movwf	??_enc1_port^(0+128)
  7245  1B1E  0CA0               	rrf	??_enc1_port^(0+128),f
  7246  1B1F  0C20               	rrf	??_enc1_port^(0+128),w
  7247  1B20  3901               	andlw	1
  7248  1B21  00A1               	movwf	(??_enc1_port+1)^(0+128)
  7249  1B22  0824               	movf	enc1_port@portvalue^(0+128),w
  7250  1B23  0421               	iorwf	(??_enc1_port+1)^(0+128),w
  7251  1B24  00A2               	movwf	(??_enc1_port+2)^(0+128)
  7252  1B25  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  7253  1B26  00A3               	movwf	(??_enc1_port+3)^(0+128)
  7254  1B27  0822               	movf	(??_enc1_port+2)^(0+128),w
  7255  1B28  00A4               	movwf	enc1_port@portvalue^(0+128)
  7256  1B29  0823               	movf	(??_enc1_port+3)^(0+128),w
  7257  1B2A  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7258                           
  7259                           ;ENCODER.C: 79: portvalue=(portvalue & 0X0003);
  7260  1B2B  3003               	movlw	3
  7261  1B2C  0524               	andwf	enc1_port@portvalue^(0+128),w
  7262  1B2D  00A4               	movwf	enc1_port@portvalue^(0+128)
  7263  1B2E  3000               	movlw	0
  7264  1B2F  0525               	andwf	(enc1_port@portvalue+1)^(0+128),w
  7265  1B30  00A5               	movwf	(enc1_port@portvalue+1)^(0+128)
  7266                           
  7267                           ;ENCODER.C: 80: new1=portvalue;
  7268  1B31  0825               	movf	(enc1_port@portvalue+1)^(0+128),w
  7269  1B32  0020               	movlb	0	; select bank0
  7270  1B33  01D5               	clrf	_new1+1
  7271  1B34  07D5               	addwf	_new1+1,f
  7272  1B35  0021               	movlb	1	; select bank1
  7273  1B36  0824               	movf	enc1_port@portvalue^(0+128),w
  7274  1B37  0020               	movlb	0	; select bank0
  7275  1B38  01D4               	clrf	_new1
  7276  1B39  07D4               	addwf	_new1,f
  7277                           
  7278                           ;ENCODER.C: 81: temp=new1;
  7279  1B3A  0854               	movf	_new1,w
  7280  1B3B  0021               	movlb	1	; select bank1
  7281  1B3C  00A0               	movwf	??_enc1_port^(0+128)
  7282  1B3D  0820               	movf	??_enc1_port^(0+128),w
  7283  1B3E  0020               	movlb	0	; select bank0
  7284  1B3F  00E6               	movwf	_temp
  7285                           
  7286                           ;ENCODER.C: 82: if((temp ^ old1) !=0)
  7287  1B40  0023               	movlb	3	; select bank3
  7288  1B41  0838               	movf	_old1^(0+384),w
  7289  1B42  0020               	movlb	0	; select bank0
  7290  1B43  0666               	xorwf	_temp,w
  7291  1B44  0021               	movlb	1	; select bank1
  7292  1B45  00A0               	movwf	??_enc1_port^(0+128)
  7293  1B46  0023               	movlb	3	; select bank3
  7294  1B47  0839               	movf	(_old1+1)^(0+384),w
  7295  1B48  0021               	movlb	1	; select bank1
  7296  1B49  00A1               	movwf	(??_enc1_port+1)^(0+128)
  7297  1B4A  0821               	movf	(??_enc1_port+1)^(0+128),w
  7298  1B4B  0420               	iorwf	??_enc1_port^(0+128),w
  7299  1B4C  1903               	skipnz
  7300  1B4D  2B5A               	goto	l3645
  7301                           
  7302                           ;ENCODER.C: 83: {
  7303                           ;ENCODER.C: 84: old1=new1;
  7304  1B4E  0020               	movlb	0	; select bank0
  7305  1B4F  0855               	movf	_new1+1,w
  7306  1B50  0023               	movlb	3	; select bank3
  7307  1B51  01B9               	clrf	(_old1+1)^(0+384)
  7308  1B52  07B9               	addwf	(_old1+1)^(0+384),f
  7309  1B53  0020               	movlb	0	; select bank0
  7310  1B54  0854               	movf	_new1,w
  7311  1B55  0023               	movlb	3	; select bank3
  7312  1B56  01B8               	clrf	_old1^(0+384)
  7313  1B57  07B8               	addwf	_old1^(0+384),f
  7314                           
  7315                           ;ENCODER.C: 85: return 1;
  7316  1B58  3001               	movlw	1
  7317                           
  7318                           ;ENCODER.C: 86: }
  7319  1B59  0008               	return
  7320  1B5A                     l3645:	
  7321                           
  7322                           ;ENCODER.C: 87: else
  7323                           ;ENCODER.C: 88: {
  7324                           ;ENCODER.C: 89: old1=new1;
  7325  1B5A  0020               	movlb	0	; select bank0
  7326  1B5B  0855               	movf	_new1+1,w
  7327  1B5C  0023               	movlb	3	; select bank3
  7328  1B5D  01B9               	clrf	(_old1+1)^(0+384)
  7329  1B5E  07B9               	addwf	(_old1+1)^(0+384),f
  7330  1B5F  0020               	movlb	0	; select bank0
  7331  1B60  0854               	movf	_new1,w
  7332  1B61  0023               	movlb	3	; select bank3
  7333  1B62  01B8               	clrf	_old1^(0+384)
  7334  1B63  07B8               	addwf	_old1^(0+384),f
  7335                           
  7336                           ;ENCODER.C: 90: return 0;
  7337  1B64  3000               	movlw	0
  7338  1B65  0008               	return
  7339  1B66                     __end_of_enc1_port:	
  7340                           
  7341                           	psect	text22
  7342  194E                     __ptext22:	
  7343 ;; *************** function _PWM_init *****************
  7344 ;; Defined at:
  7345 ;;		line 1110 in file "main.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;		None
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;		None               void
  7352 ;; Registers used:
  7353 ;;		wreg, status,2, status,0
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7363 ;;Total ram usage:        0 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    3
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_main
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           
  7374                           ;psect for function _PWM_init
  7375  194E                     _PWM_init:	
  7376                           
  7377                           ;main.c: 1113: CCP1CONbits.CCP1M=13;
  7378                           
  7379                           ;incstack = 0
  7380                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
  7381  194E  0025               	movlb	5	; select bank5
  7382  194F  0813               	movf	19,w	;volatile
  7383  1950  39F0               	andlw	-16
  7384  1951  380D               	iorlw	13
  7385  1952  0093               	movwf	19	;volatile
  7386                           
  7387                           ;main.c: 1114: CCP1CONbits.DC1B=0;
  7388  1953  30CF               	movlw	-49
  7389  1954  0593               	andwf	19,f	;volatile
  7390                           
  7391                           ;main.c: 1115: CCPR1L=0;
  7392  1955  0191               	clrf	17	;volatile
  7393                           
  7394                           ;main.c: 1116: TRISCbits.TRISC2=0;
  7395  1956  0021               	movlb	1	; select bank1
  7396  1957  110E               	bcf	14,2	;volatile
  7397                           
  7398                           ;main.c: 1117: PR2=0xC7;
  7399  1958  30C7               	movlw	199
  7400  1959  0020               	movlb	0	; select bank0
  7401  195A  009B               	movwf	27	;volatile
  7402                           
  7403                           ;main.c: 1118: T2CONbits.T2CKPS=1;
  7404  195B  081C               	movf	28,w	;volatile
  7405  195C  39FC               	andlw	-4
  7406  195D  3801               	iorlw	1
  7407  195E  009C               	movwf	28	;volatile
  7408                           
  7409                           ;main.c: 1119: T2CONbits.T2OUTPS=0;
  7410  195F  3087               	movlw	-121
  7411  1960  059C               	andwf	28,f	;volatile
  7412                           
  7413                           ;main.c: 1120: PIR1bits.TMR2IF=0;
  7414  1961  1091               	bcf	17,1	;volatile
  7415                           
  7416                           ;main.c: 1121: PIE1bits.TMR2IE=1;
  7417  1962  0021               	movlb	1	; select bank1
  7418  1963  1491               	bsf	17,1	;volatile
  7419                           
  7420                           ;main.c: 1122: T2CONbits.TMR2ON=1;
  7421  1964  0020               	movlb	0	; select bank0
  7422  1965  151C               	bsf	28,2	;volatile
  7423  1966  0008               	return
  7424  1967                     __end_of_PWM_init:	
  7425                           
  7426                           	psect	text23
  7427  1967                     __ptext23:	
  7428 ;; *************** function _Delayms *****************
  7429 ;; Defined at:
  7430 ;;		line 200 in file "DISPLAY.C"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  delay           2    0[BANK1 ] unsigned int 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;  yyy             2    4[BANK1 ] unsigned int 
  7435 ;;  xxx             2    2[BANK1 ] unsigned int 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;		None               void
  7438 ;; Registers used:
  7439 ;;		wreg, status,2
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7445 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7446 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7448 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7449 ;;Total ram usage:        6 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    3
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_main
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           
  7460                           ;psect for function _Delayms
  7461  1967                     _Delayms:	
  7462                           
  7463                           ;DISPLAY.C: 203: unsigned int yyy=0,xxx=0;
  7464                           
  7465                           ;incstack = 0
  7466                           ; Regs used in _Delayms: [wreg+status,2]
  7467  1967  0021               	movlb	1	; select bank1
  7468  1968  01A4               	clrf	Delayms@yyy^(0+128)
  7469  1969  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  7470  196A  01A2               	clrf	Delayms@xxx^(0+128)
  7471  196B  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  7472                           
  7473                           ;DISPLAY.C: 204: for(xxx=0;xxx<delay;xxx++)
  7474  196C  01A2               	clrf	Delayms@xxx^(0+128)
  7475  196D  01A3               	clrf	(Delayms@xxx+1)^(0+128)
  7476  196E                     l487:	
  7477  196E  0821               	movf	(Delayms@delay+1)^(0+128),w
  7478  196F  0223               	subwf	(Delayms@xxx+1)^(0+128),w
  7479  1970  1D03               	skipz
  7480  1971  2974               	goto	u5515
  7481  1972  0820               	movf	Delayms@delay^(0+128),w
  7482  1973  0222               	subwf	Delayms@xxx^(0+128),w
  7483  1974                     u5515:	
  7484  1974  1803               	btfsc	3,0
  7485  1975  0008               	return
  7486                           
  7487                           ;DISPLAY.C: 205: {
  7488                           ;DISPLAY.C: 206: for(yyy=0;yyy<138;yyy++);
  7489  1976  01A4               	clrf	Delayms@yyy^(0+128)
  7490  1977  01A5               	clrf	(Delayms@yyy+1)^(0+128)
  7491  1978  3000               	movlw	0
  7492  1979  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  7493  197A  308A               	movlw	138
  7494  197B  1903               	skipnz
  7495  197C  0224               	subwf	Delayms@yyy^(0+128),w
  7496  197D  1803               	btfsc	3,0
  7497  197E  298A               	goto	l4165
  7498  197F                     l4163:	
  7499  197F  3001               	movlw	1
  7500  1980  07A4               	addwf	Delayms@yyy^(0+128),f
  7501  1981  3000               	movlw	0
  7502  1982  3DA5               	addwfc	(Delayms@yyy+1)^(0+128),f
  7503  1983  3000               	movlw	0
  7504  1984  0225               	subwf	(Delayms@yyy+1)^(0+128),w
  7505  1985  308A               	movlw	138
  7506  1986  1903               	skipnz
  7507  1987  0224               	subwf	Delayms@yyy^(0+128),w
  7508  1988  1C03               	skipc
  7509  1989  297F               	goto	l4163
  7510  198A                     l4165:	
  7511  198A  3001               	movlw	1
  7512  198B  07A2               	addwf	Delayms@xxx^(0+128),f
  7513  198C  3000               	movlw	0
  7514  198D  3DA3               	addwfc	(Delayms@xxx+1)^(0+128),f
  7515  198E  296E               	goto	l487
  7516  198F                     __end_of_Delayms:	
  7517                           
  7518                           	psect	text24
  7519  147D                     __ptext24:	
  7520 ;; *************** function _Adaptive_base_pid *****************
  7521 ;; Defined at:
  7522 ;;		line 34 in file "MOTORCONTROL.C"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;		None
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;		None
  7527 ;; Return value:  Size  Location     Type
  7528 ;;		None               void
  7529 ;; Registers used:
  7530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7537 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7538 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7539 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7540 ;;Total ram usage:       18 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:    5
  7543 ;; This function calls:
  7544 ;;		_Update_PWM
  7545 ;;		___aldiv
  7546 ;;		___altoft
  7547 ;;		___ftadd
  7548 ;;		___ftdiv
  7549 ;;		___ftge
  7550 ;;		___ftmul
  7551 ;;		___ftneg
  7552 ;;		___fttol
  7553 ;;		___wmul
  7554 ;; This function is called by:
  7555 ;;		_main
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           
  7560                           ;psect for function _Adaptive_base_pid
  7561  147D                     _Adaptive_base_pid:	
  7562                           
  7563                           ;MOTORCONTROL.C: 39: pidParams2.Kp2=2;
  7564                           
  7565                           ;incstack = 0
  7566                           ; Regs used in _Adaptive_base_pid: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7567  147D  3096               	movlw	150
  7568  147E  0086               	movwf	6
  7569  147F  3027               	movlw	39
  7570  1480  0087               	movwf	7
  7571  1481  3000               	movlw	0
  7572  1482  3FC0               	movwi [0]fsr1
  7573  1483  3000               	movlw	0
  7574  1484  3FC1               	movwi [1]fsr1
  7575  1485  3040               	movlw	64
  7576  1486  3FC2               	movwi [2]fsr1
  7577                           
  7578                           ;MOTORCONTROL.C: 40: pidParams2.Ki2=1;
  7579  1487  3096               	movlw	150
  7580  1488  0086               	movwf	6
  7581  1489  3027               	movlw	39
  7582  148A  0087               	movwf	7
  7583  148B  3143               	addfsr 1,3
  7584  148C  3000               	movlw	0
  7585  148D  3FC0               	movwi [0]fsr1
  7586  148E  3080               	movlw	128
  7587  148F  3FC1               	movwi [1]fsr1
  7588  1490  303F               	movlw	63
  7589  1491  3FC2               	movwi [2]fsr1
  7590                           
  7591                           ;MOTORCONTROL.C: 41: pidParams2.Kd2=0;
  7592  1492  3096               	movlw	150
  7593  1493  0086               	movwf	6
  7594  1494  3027               	movlw	39
  7595  1495  0087               	movwf	7
  7596  1496  3146               	addfsr 1,6
  7597  1497  3000               	movlw	0
  7598  1498  3FC0               	movwi [0]fsr1
  7599  1499  3000               	movlw	0
  7600  149A  3FC1               	movwi [1]fsr1
  7601  149B  3000               	movlw	0
  7602  149C  3FC2               	movwi [2]fsr1
  7603                           
  7604                           ;MOTORCONTROL.C: 51: pidParams2.ReferenceSetpoint2=setpfreq;
  7605  149D  0023               	movlb	3	; select bank3
  7606  149E  084A               	movf	_setpfreq^(0+384),w
  7607  149F  0021               	movlb	1	; select bank1
  7608  14A0  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7609  14A1  0023               	movlb	3	; select bank3
  7610  14A2  084B               	movf	(_setpfreq+1)^(0+384),w
  7611  14A3  0021               	movlb	1	; select bank1
  7612  14A4  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7613  14A5  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7614  14A6  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7615  14A7  30C4               	movlw	196
  7616  14A8  0086               	movwf	6
  7617  14A9  3027               	movlw	39
  7618  14AA  0087               	movwf	7
  7619  14AB  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7620  14AC  3FC0               	movwi [0]fsr1
  7621  14AD  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7622  14AE  3FC1               	movwi [1]fsr1
  7623  14AF  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7624  14B0  3FC2               	movwi [2]fsr1
  7625  14B1  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7626  14B2  3FC3               	movwi [3]fsr1
  7627                           
  7628                           ;MOTORCONTROL.C: 52: pidParams2.feedback2=Fltpfreq;
  7629  14B3  0022               	movlb	2	; select bank2
  7630  14B4  0826               	movf	_Fltpfreq^(0+256),w
  7631  14B5  0021               	movlb	1	; select bank1
  7632  14B6  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7633  14B7  0022               	movlb	2	; select bank2
  7634  14B8  0827               	movf	(_Fltpfreq+1)^(0+256),w
  7635  14B9  0021               	movlb	1	; select bank1
  7636  14BA  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7637  14BB  01DD               	clrf	(??_Adaptive_base_pid^(0+128)+2)
  7638  14BC  01DE               	clrf	(??_Adaptive_base_pid^(0+128)+3)
  7639  14BD  30C8               	movlw	200
  7640  14BE  0086               	movwf	6
  7641  14BF  3027               	movlw	39
  7642  14C0  0087               	movwf	7
  7643  14C1  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7644  14C2  3FC0               	movwi [0]fsr1
  7645  14C3  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7646  14C4  3FC1               	movwi [1]fsr1
  7647  14C5  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7648  14C6  3FC2               	movwi [2]fsr1
  7649  14C7  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7650  14C8  3FC3               	movwi [3]fsr1
  7651                           
  7652                           ;MOTORCONTROL.C: 53: disp1term=pidParams2.ReferenceSetpoint2;
  7653  14C9  30C4               	movlw	196
  7654  14CA  0086               	movwf	6
  7655  14CB  3027               	movlw	39
  7656  14CC  0087               	movwf	7
  7657  14CD  3F40               	moviw [0]fsr1
  7658  14CE  0024               	movlb	4	; select bank4
  7659  14CF  00B0               	movwf	_disp1term^(0+512)
  7660  14D0  3F41               	moviw [1]fsr1
  7661  14D1  00B1               	movwf	(_disp1term+1)^(0+512)
  7662                           
  7663                           ;MOTORCONTROL.C: 54: disp2term=pidParams2.feedback2;
  7664  14D2  30C8               	movlw	200
  7665  14D3  0086               	movwf	6
  7666  14D4  3027               	movlw	39
  7667  14D5  0087               	movwf	7
  7668  14D6  3F40               	moviw [0]fsr1
  7669  14D7  00B2               	movwf	_disp2term^(0+512)
  7670  14D8  3F41               	moviw [1]fsr1
  7671  14D9  00B3               	movwf	(_disp2term+1)^(0+512)
  7672                           
  7673                           ;MOTORCONTROL.C: 56: pidParams2.error2 = pidParams2.ReferenceSetpoint2 - pidParams2.feed
      +                          back2;
  7674  14DA  30C4               	movlw	196
  7675  14DB  0086               	movwf	6
  7676  14DC  3027               	movlw	39
  7677  14DD  0087               	movwf	7
  7678  14DE  3F40               	moviw [0]fsr1
  7679  14DF  0021               	movlb	1	; select bank1
  7680  14E0  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  7681  14E1  3F41               	moviw [1]fsr1
  7682  14E2  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  7683  14E3  3F42               	moviw [2]fsr1
  7684  14E4  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  7685  14E5  3F43               	moviw [3]fsr1
  7686  14E6  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  7687  14E7  30C8               	movlw	200
  7688  14E8  0086               	movwf	6
  7689  14E9  3027               	movlw	39
  7690  14EA  0087               	movwf	7
  7691  14EB  3F40               	moviw [0]fsr1
  7692  14EC  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  7693  14ED  3F41               	moviw [1]fsr1
  7694  14EE  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  7695  14EF  3F42               	moviw [2]fsr1
  7696  14F0  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  7697  14F1  3F43               	moviw [3]fsr1
  7698  14F2  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  7699  14F3  09DF               	comf	(??_Adaptive_base_pid+4)^(0+128),f
  7700  14F4  09E0               	comf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7701  14F5  09E1               	comf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7702  14F6  09E2               	comf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7703  14F7  0ADF               	incf	(??_Adaptive_base_pid+4)^(0+128),f
  7704  14F8  1903               	skipnz
  7705  14F9  0AE0               	incf	((??_Adaptive_base_pid+4)^(0+128)+1),f
  7706  14FA  1903               	skipnz
  7707  14FB  0AE1               	incf	((??_Adaptive_base_pid+4)^(0+128)+2),f
  7708  14FC  1903               	skipnz
  7709  14FD  0AE2               	incf	((??_Adaptive_base_pid+4)^(0+128)+3),f
  7710  14FE  085F               	movf	(??_Adaptive_base_pid+4)^(0+128),w
  7711  14FF  07DB               	addwf	??_Adaptive_base_pid^(0+128),f
  7712  1500  0860               	movf	(??_Adaptive_base_pid+5)^(0+128),w
  7713  1501  3DDC               	addwfc	(??_Adaptive_base_pid^(0+128)+1),f
  7714  1502  0861               	movf	(??_Adaptive_base_pid+6)^(0+128),w
  7715  1503  3DDD               	addwfc	(??_Adaptive_base_pid^(0+128)+2),f
  7716  1504  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  7717  1505  3DDE               	addwfc	(??_Adaptive_base_pid^(0+128)+3),f
  7718  1506  3096               	movlw	150
  7719  1507  0086               	movwf	6
  7720  1508  3027               	movlw	39
  7721  1509  0087               	movwf	7
  7722  150A  314C               	addfsr 1,12
  7723  150B  085B               	movf	??_Adaptive_base_pid^(0+128),w
  7724  150C  3FC0               	movwi [0]fsr1
  7725  150D  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  7726  150E  3FC1               	movwi [1]fsr1
  7727  150F  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  7728  1510  3FC2               	movwi [2]fsr1
  7729  1511  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  7730  1512  3FC3               	movwi [3]fsr1
  7731                           
  7732                           ;MOTORCONTROL.C: 57: pidParams2.feedback2=0;
  7733  1513  30C8               	movlw	200
  7734  1514  0086               	movwf	6
  7735  1515  3027               	movlw	39
  7736  1516  0087               	movwf	7
  7737  1517  3000               	movlw	0
  7738  1518  3FC0               	movwi [0]fsr1
  7739  1519  3FC1               	movwi [1]fsr1
  7740  151A  3FC2               	movwi [2]fsr1
  7741  151B  3FC3               	movwi [3]fsr1
  7742                           
  7743                           ;MOTORCONTROL.C: 58: pidParams2.outmax2=50000;
  7744  151C  30C0               	movlw	192
  7745  151D  0086               	movwf	6
  7746  151E  3027               	movlw	39
  7747  151F  0087               	movwf	7
  7748  1520  3050               	movlw	80
  7749  1521  3FC0               	movwi [0]fsr1
  7750  1522  30C3               	movlw	195
  7751  1523  3FC1               	movwi [1]fsr1
  7752  1524  3000               	movlw	0
  7753  1525  3FC2               	movwi [2]fsr1
  7754  1526  3000               	movlw	0
  7755  1527  3FC3               	movwi [3]fsr1
  7756                           
  7757                           ;MOTORCONTROL.C: 59: scalefactor2=66.0;
  7758  1528  3042               	movlw	66
  7759  1529  0023               	movlb	3	; select bank3
  7760  152A  00EB               	movwf	_scalefactor2^(0+384)
  7761  152B  3000               	movlw	0
  7762  152C  00EC               	movwf	(_scalefactor2^(0+384)+1)
  7763                           
  7764                           ;MOTORCONTROL.C: 62: {
  7765                           ;MOTORCONTROL.C: 63: error_new =pidParams2.error2;
  7766  152D  3096               	movlw	150
  7767  152E  0086               	movwf	6
  7768  152F  3027               	movlw	39
  7769  1530  0087               	movwf	7
  7770  1531  314C               	addfsr 1,12
  7771  1532  3F40               	moviw [0]fsr1
  7772  1533  0021               	movlb	1	; select bank1
  7773  1534  00A8               	movwf	___altoft@c^(0+128)
  7774  1535  3F41               	moviw [1]fsr1
  7775  1536  00A9               	movwf	(___altoft@c+1)^(0+128)
  7776  1537  3F42               	moviw [2]fsr1
  7777  1538  00AA               	movwf	(___altoft@c+2)^(0+128)
  7778  1539  3F43               	moviw [3]fsr1
  7779  153A  00AB               	movwf	(___altoft@c+3)^(0+128)
  7780  153B  3187  27BB  3194   	fcall	___altoft
  7781  153E  0021               	movlb	1	; select bank1
  7782  153F  0828               	movf	?___altoft^(0+128),w
  7783  1540  0022               	movlb	2	; select bank2
  7784  1541  00A0               	movwf	_error_new^(0+256)
  7785  1542  0021               	movlb	1	; select bank1
  7786  1543  0829               	movf	(?___altoft+1)^(0+128),w
  7787  1544  0022               	movlb	2	; select bank2
  7788  1545  00A1               	movwf	(_error_new+1)^(0+256)
  7789  1546  0021               	movlb	1	; select bank1
  7790  1547  082A               	movf	(?___altoft+2)^(0+128),w
  7791  1548  0022               	movlb	2	; select bank2
  7792  1549  00A2               	movwf	(_error_new+2)^(0+256)
  7793                           
  7794                           ;MOTORCONTROL.C: 64: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7795  154A  3096               	movlw	150
  7796  154B  0086               	movwf	6
  7797  154C  3027               	movlw	39
  7798  154D  0087               	movwf	7
  7799  154E  3143               	addfsr 1,3
  7800  154F  3F40               	moviw [0]fsr1
  7801  1550  0021               	movlb	1	; select bank1
  7802  1551  00B5               	movwf	___ftmul@f1^(0+128)
  7803  1552  3F41               	moviw [1]fsr1
  7804  1553  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7805  1554  3F42               	moviw [2]fsr1
  7806  1555  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7807  1556  0023               	movlb	3	; select bank3
  7808  1557  0820               	movf	_error_old^(0+384),w
  7809  1558  0021               	movlb	1	; select bank1
  7810  1559  00A8               	movwf	___ftadd@f1^(0+128)
  7811  155A  0023               	movlb	3	; select bank3
  7812  155B  0821               	movf	(_error_old+1)^(0+384),w
  7813  155C  0021               	movlb	1	; select bank1
  7814  155D  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7815  155E  0023               	movlb	3	; select bank3
  7816  155F  0822               	movf	(_error_old+2)^(0+384),w
  7817  1560  0021               	movlb	1	; select bank1
  7818  1561  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7819  1562  0022               	movlb	2	; select bank2
  7820  1563  0820               	movf	_error_new^(0+256),w
  7821  1564  0021               	movlb	1	; select bank1
  7822  1565  00AB               	movwf	___ftadd@f2^(0+128)
  7823  1566  0022               	movlb	2	; select bank2
  7824  1567  0821               	movf	(_error_new+1)^(0+256),w
  7825  1568  0021               	movlb	1	; select bank1
  7826  1569  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7827  156A  0022               	movlb	2	; select bank2
  7828  156B  0822               	movf	(_error_new+2)^(0+256),w
  7829  156C  0021               	movlb	1	; select bank1
  7830  156D  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7831  156E  3188  2039  3194   	fcall	___ftadd
  7832  1571  0021               	movlb	1	; select bank1
  7833  1572  0828               	movf	?___ftadd^(0+128),w
  7834  1573  00B8               	movwf	___ftmul@f2^(0+128)
  7835  1574  0829               	movf	(?___ftadd+1)^(0+128),w
  7836  1575  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7837  1576  082A               	movf	(?___ftadd+2)^(0+128),w
  7838  1577  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7839  1578  3192  22D3  3194   	fcall	___ftmul
  7840  157B  0021               	movlb	1	; select bank1
  7841  157C  0835               	movf	?___ftmul^(0+128),w
  7842  157D  00E4               	movwf	_Adaptive_base_pid$1781^(0+128)
  7843  157E  0836               	movf	(?___ftmul+1)^(0+128),w
  7844  157F  00E5               	movwf	(_Adaptive_base_pid$1781+1)^(0+128)
  7845  1580  0837               	movf	(?___ftmul+2)^(0+128),w
  7846  1581  00E6               	movwf	(_Adaptive_base_pid$1781+2)^(0+128)
  7847                           
  7848                           ;MOTORCONTROL.C: 64: integral_new = integral_old + pidParams2.Ki2*(error_new + error_old
      +                          )*Tsampling/2;
  7849  1582  0023               	movlb	3	; select bank3
  7850  1583  0823               	movf	_integral_old^(0+384),w
  7851  1584  0021               	movlb	1	; select bank1
  7852  1585  00A8               	movwf	___ftadd@f1^(0+128)
  7853  1586  0023               	movlb	3	; select bank3
  7854  1587  0824               	movf	(_integral_old+1)^(0+384),w
  7855  1588  0021               	movlb	1	; select bank1
  7856  1589  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  7857  158A  0023               	movlb	3	; select bank3
  7858  158B  0825               	movf	(_integral_old+2)^(0+384),w
  7859  158C  0021               	movlb	1	; select bank1
  7860  158D  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  7861  158E  3000               	movlw	0
  7862  158F  00C5               	movwf	___ftdiv@f2^(0+128)
  7863  1590  3000               	movlw	0
  7864  1591  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  7865  1592  3040               	movlw	64
  7866  1593  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  7867  1594  0023               	movlb	3	; select bank3
  7868  1595  0862               	movf	_Tsampling^(0+384),w
  7869  1596  0021               	movlb	1	; select bank1
  7870  1597  00B5               	movwf	___ftmul@f1^(0+128)
  7871  1598  0023               	movlb	3	; select bank3
  7872  1599  0863               	movf	(_Tsampling+1)^(0+384),w
  7873  159A  0021               	movlb	1	; select bank1
  7874  159B  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  7875  159C  0023               	movlb	3	; select bank3
  7876  159D  0864               	movf	(_Tsampling+2)^(0+384),w
  7877  159E  0021               	movlb	1	; select bank1
  7878  159F  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  7879  15A0  0864               	movf	_Adaptive_base_pid$1781^(0+128),w
  7880  15A1  00B8               	movwf	___ftmul@f2^(0+128)
  7881  15A2  0865               	movf	(_Adaptive_base_pid$1781+1)^(0+128),w
  7882  15A3  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  7883  15A4  0866               	movf	(_Adaptive_base_pid$1781+2)^(0+128),w
  7884  15A5  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  7885  15A6  3192  22D3  3194   	fcall	___ftmul
  7886  15A9  0021               	movlb	1	; select bank1
  7887  15AA  0835               	movf	?___ftmul^(0+128),w
  7888  15AB  00C8               	movwf	___ftdiv@f1^(0+128)
  7889  15AC  0836               	movf	(?___ftmul+1)^(0+128),w
  7890  15AD  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  7891  15AE  0837               	movf	(?___ftmul+2)^(0+128),w
  7892  15AF  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  7893  15B0  3190  20C8  3194   	fcall	___ftdiv
  7894  15B3  0021               	movlb	1	; select bank1
  7895  15B4  0845               	movf	?___ftdiv^(0+128),w
  7896  15B5  00AB               	movwf	___ftadd@f2^(0+128)
  7897  15B6  0846               	movf	(?___ftdiv+1)^(0+128),w
  7898  15B7  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  7899  15B8  0847               	movf	(?___ftdiv+2)^(0+128),w
  7900  15B9  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  7901  15BA  3188  2039  3194   	fcall	___ftadd
  7902  15BD  0021               	movlb	1	; select bank1
  7903  15BE  0828               	movf	?___ftadd^(0+128),w
  7904  15BF  0022               	movlb	2	; select bank2
  7905  15C0  00A3               	movwf	_integral_new^(0+256)
  7906  15C1  0021               	movlb	1	; select bank1
  7907  15C2  0829               	movf	(?___ftadd+1)^(0+128),w
  7908  15C3  0022               	movlb	2	; select bank2
  7909  15C4  00A4               	movwf	(_integral_new+1)^(0+256)
  7910  15C5  0021               	movlb	1	; select bank1
  7911  15C6  082A               	movf	(?___ftadd+2)^(0+128),w
  7912  15C7  0022               	movlb	2	; select bank2
  7913  15C8  00A5               	movwf	(_integral_new+2)^(0+256)
  7914                           
  7915                           ;MOTORCONTROL.C: 66: if((integral_new > pidParams2.outmax2) || (integral_new < minoutmax
      +                          ))
  7916  15C9  30C0               	movlw	192
  7917  15CA  0086               	movwf	6
  7918  15CB  3027               	movlw	39
  7919  15CC  0087               	movwf	7
  7920  15CD  3F40               	moviw [0]fsr1
  7921  15CE  0021               	movlb	1	; select bank1
  7922  15CF  00A8               	movwf	___altoft@c^(0+128)
  7923  15D0  3F41               	moviw [1]fsr1
  7924  15D1  00A9               	movwf	(___altoft@c+1)^(0+128)
  7925  15D2  3F42               	moviw [2]fsr1
  7926  15D3  00AA               	movwf	(___altoft@c+2)^(0+128)
  7927  15D4  3F43               	moviw [3]fsr1
  7928  15D5  00AB               	movwf	(___altoft@c+3)^(0+128)
  7929  15D6  3187  27BB  3194   	fcall	___altoft
  7930  15D9  0021               	movlb	1	; select bank1
  7931  15DA  0828               	movf	?___altoft^(0+128),w
  7932  15DB  00B0               	movwf	___ftge@ff1^(0+128)
  7933  15DC  0829               	movf	(?___altoft+1)^(0+128),w
  7934  15DD  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  7935  15DE  082A               	movf	(?___altoft+2)^(0+128),w
  7936  15DF  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  7937  15E0  0022               	movlb	2	; select bank2
  7938  15E1  0823               	movf	_integral_new^(0+256),w
  7939  15E2  0021               	movlb	1	; select bank1
  7940  15E3  00B3               	movwf	___ftge@ff2^(0+128)
  7941  15E4  0022               	movlb	2	; select bank2
  7942  15E5  0824               	movf	(_integral_new+1)^(0+256),w
  7943  15E6  0021               	movlb	1	; select bank1
  7944  15E7  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  7945  15E8  0022               	movlb	2	; select bank2
  7946  15E9  0825               	movf	(_integral_new+2)^(0+256),w
  7947  15EA  0021               	movlb	1	; select bank1
  7948  15EB  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  7949  15EC  319A  2218  3194   	fcall	___ftge
  7950  15EF  1C03               	btfss	3,0
  7951  15F0  2E0E               	goto	l4323
  7952  15F1  0022               	movlb	2	; select bank2
  7953  15F2  0823               	movf	_integral_new^(0+256),w
  7954  15F3  0021               	movlb	1	; select bank1
  7955  15F4  00B0               	movwf	___ftge@ff1^(0+128)
  7956  15F5  0022               	movlb	2	; select bank2
  7957  15F6  0824               	movf	(_integral_new+1)^(0+256),w
  7958  15F7  0021               	movlb	1	; select bank1
  7959  15F8  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  7960  15F9  0022               	movlb	2	; select bank2
  7961  15FA  0825               	movf	(_integral_new+2)^(0+256),w
  7962  15FB  0021               	movlb	1	; select bank1
  7963  15FC  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  7964  15FD  0024               	movlb	4	; select bank4
  7965  15FE  0827               	movf	_minoutmax^(0+512),w
  7966  15FF  0021               	movlb	1	; select bank1
  7967  1600  00B3               	movwf	___ftge@ff2^(0+128)
  7968  1601  0024               	movlb	4	; select bank4
  7969  1602  0828               	movf	(_minoutmax+1)^(0+512),w
  7970  1603  0021               	movlb	1	; select bank1
  7971  1604  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  7972  1605  0024               	movlb	4	; select bank4
  7973  1606  0829               	movf	(_minoutmax+2)^(0+512),w
  7974  1607  0021               	movlb	1	; select bank1
  7975  1608  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  7976  1609  319A  2218  3194   	fcall	___ftge
  7977  160C  1803               	btfsc	3,0
  7978  160D  2E1A               	goto	l4325
  7979  160E                     l4323:	
  7980                           
  7981                           ;MOTORCONTROL.C: 67: integral_new = integral_old;
  7982  160E  0023               	movlb	3	; select bank3
  7983  160F  0823               	movf	_integral_old^(0+384),w
  7984  1610  0022               	movlb	2	; select bank2
  7985  1611  00A3               	movwf	_integral_new^(0+256)
  7986  1612  0023               	movlb	3	; select bank3
  7987  1613  0824               	movf	(_integral_old+1)^(0+384),w
  7988  1614  0022               	movlb	2	; select bank2
  7989  1615  00A4               	movwf	(_integral_new+1)^(0+256)
  7990  1616  0023               	movlb	3	; select bank3
  7991  1617  0825               	movf	(_integral_old+2)^(0+384),w
  7992  1618  0022               	movlb	2	; select bank2
  7993  1619  00A5               	movwf	(_integral_new+2)^(0+256)
  7994  161A                     l4325:	
  7995                           
  7996                           ;MOTORCONTROL.C: 69: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  7997  161A  0023               	movlb	3	; select bank3
  7998  161B  0862               	movf	_Tsampling^(0+384),w
  7999  161C  0021               	movlb	1	; select bank1
  8000  161D  00C5               	movwf	___ftdiv@f2^(0+128)
  8001  161E  0023               	movlb	3	; select bank3
  8002  161F  0863               	movf	(_Tsampling+1)^(0+384),w
  8003  1620  0021               	movlb	1	; select bank1
  8004  1621  00C6               	movwf	(___ftdiv@f2+1)^(0+128)
  8005  1622  0023               	movlb	3	; select bank3
  8006  1623  0864               	movf	(_Tsampling+2)^(0+384),w
  8007  1624  0021               	movlb	1	; select bank1
  8008  1625  00C7               	movwf	(___ftdiv@f2+2)^(0+128)
  8009  1626  3096               	movlw	150
  8010  1627  0086               	movwf	6
  8011  1628  3027               	movlw	39
  8012  1629  0087               	movwf	7
  8013  162A  3146               	addfsr 1,6
  8014  162B  3F40               	moviw [0]fsr1
  8015  162C  00B5               	movwf	___ftmul@f1^(0+128)
  8016  162D  3F41               	moviw [1]fsr1
  8017  162E  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  8018  162F  3F42               	moviw [2]fsr1
  8019  1630  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  8020  1631  0022               	movlb	2	; select bank2
  8021  1632  0820               	movf	_error_new^(0+256),w
  8022  1633  0021               	movlb	1	; select bank1
  8023  1634  00A8               	movwf	___ftadd@f1^(0+128)
  8024  1635  0022               	movlb	2	; select bank2
  8025  1636  0821               	movf	(_error_new+1)^(0+256),w
  8026  1637  0021               	movlb	1	; select bank1
  8027  1638  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  8028  1639  0022               	movlb	2	; select bank2
  8029  163A  0822               	movf	(_error_new+2)^(0+256),w
  8030  163B  0021               	movlb	1	; select bank1
  8031  163C  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  8032  163D  0023               	movlb	3	; select bank3
  8033  163E  0820               	movf	_error_old^(0+384),w
  8034  163F  0021               	movlb	1	; select bank1
  8035  1640  00A0               	movwf	___ftneg@f1^(0+128)
  8036  1641  0023               	movlb	3	; select bank3
  8037  1642  0821               	movf	(_error_old+1)^(0+384),w
  8038  1643  0021               	movlb	1	; select bank1
  8039  1644  00A1               	movwf	(___ftneg@f1+1)^(0+128)
  8040  1645  0023               	movlb	3	; select bank3
  8041  1646  0822               	movf	(_error_old+2)^(0+384),w
  8042  1647  0021               	movlb	1	; select bank1
  8043  1648  00A2               	movwf	(___ftneg@f1+2)^(0+128)
  8044  1649  3198  207C  3194   	fcall	___ftneg
  8045  164C  0021               	movlb	1	; select bank1
  8046  164D  0820               	movf	?___ftneg^(0+128),w
  8047  164E  00AB               	movwf	___ftadd@f2^(0+128)
  8048  164F  0821               	movf	(?___ftneg+1)^(0+128),w
  8049  1650  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  8050  1651  0822               	movf	(?___ftneg+2)^(0+128),w
  8051  1652  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  8052  1653  3188  2039  3194   	fcall	___ftadd
  8053  1656  0021               	movlb	1	; select bank1
  8054  1657  0828               	movf	?___ftadd^(0+128),w
  8055  1658  00B8               	movwf	___ftmul@f2^(0+128)
  8056  1659  0829               	movf	(?___ftadd+1)^(0+128),w
  8057  165A  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  8058  165B  082A               	movf	(?___ftadd+2)^(0+128),w
  8059  165C  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  8060  165D  3192  22D3  3194   	fcall	___ftmul
  8061  1660  0021               	movlb	1	; select bank1
  8062  1661  0835               	movf	?___ftmul^(0+128),w
  8063  1662  00C8               	movwf	___ftdiv@f1^(0+128)
  8064  1663  0836               	movf	(?___ftmul+1)^(0+128),w
  8065  1664  00C9               	movwf	(___ftdiv@f1+1)^(0+128)
  8066  1665  0837               	movf	(?___ftmul+2)^(0+128),w
  8067  1666  00CA               	movwf	(___ftdiv@f1+2)^(0+128)
  8068  1667  3190  20C8  3194   	fcall	___ftdiv
  8069  166A  0021               	movlb	1	; select bank1
  8070  166B  0845               	movf	?___ftdiv^(0+128),w
  8071  166C  00E7               	movwf	_Adaptive_base_pid$1782^(0+128)
  8072  166D  0846               	movf	(?___ftdiv+1)^(0+128),w
  8073  166E  00E8               	movwf	(_Adaptive_base_pid$1782+1)^(0+128)
  8074  166F  0847               	movf	(?___ftdiv+2)^(0+128),w
  8075  1670  00E9               	movwf	(_Adaptive_base_pid$1782+2)^(0+128)
  8076                           
  8077                           ;MOTORCONTROL.C: 69: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  8078  1671  0867               	movf	_Adaptive_base_pid$1782^(0+128),w
  8079  1672  00A8               	movwf	___ftadd@f1^(0+128)
  8080  1673  0868               	movf	(_Adaptive_base_pid$1782+1)^(0+128),w
  8081  1674  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  8082  1675  0869               	movf	(_Adaptive_base_pid$1782+2)^(0+128),w
  8083  1676  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  8084  1677  0022               	movlb	2	; select bank2
  8085  1678  0820               	movf	_error_new^(0+256),w
  8086  1679  0021               	movlb	1	; select bank1
  8087  167A  00B5               	movwf	___ftmul@f1^(0+128)
  8088  167B  0022               	movlb	2	; select bank2
  8089  167C  0821               	movf	(_error_new+1)^(0+256),w
  8090  167D  0021               	movlb	1	; select bank1
  8091  167E  00B6               	movwf	(___ftmul@f1+1)^(0+128)
  8092  167F  0022               	movlb	2	; select bank2
  8093  1680  0822               	movf	(_error_new+2)^(0+256),w
  8094  1681  0021               	movlb	1	; select bank1
  8095  1682  00B7               	movwf	(___ftmul@f1+2)^(0+128)
  8096  1683  3096               	movlw	150
  8097  1684  0086               	movwf	6
  8098  1685  3027               	movlw	39
  8099  1686  0087               	movwf	7
  8100  1687  3F40               	moviw [0]fsr1
  8101  1688  00B8               	movwf	___ftmul@f2^(0+128)
  8102  1689  3F41               	moviw [1]fsr1
  8103  168A  00B9               	movwf	(___ftmul@f2+1)^(0+128)
  8104  168B  3F42               	moviw [2]fsr1
  8105  168C  00BA               	movwf	(___ftmul@f2+2)^(0+128)
  8106  168D  3192  22D3  3194   	fcall	___ftmul
  8107  1690  0021               	movlb	1	; select bank1
  8108  1691  0835               	movf	?___ftmul^(0+128),w
  8109  1692  00AB               	movwf	___ftadd@f2^(0+128)
  8110  1693  0836               	movf	(?___ftmul+1)^(0+128),w
  8111  1694  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  8112  1695  0837               	movf	(?___ftmul+2)^(0+128),w
  8113  1696  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  8114  1697  3188  2039  3194   	fcall	___ftadd
  8115  169A  0021               	movlb	1	; select bank1
  8116  169B  0828               	movf	?___ftadd^(0+128),w
  8117  169C  00EA               	movwf	_Adaptive_base_pid$1783^(0+128)
  8118  169D  0829               	movf	(?___ftadd+1)^(0+128),w
  8119  169E  00EB               	movwf	(_Adaptive_base_pid$1783+1)^(0+128)
  8120  169F  082A               	movf	(?___ftadd+2)^(0+128),w
  8121  16A0  00EC               	movwf	(_Adaptive_base_pid$1783+2)^(0+128)
  8122                           
  8123                           ;MOTORCONTROL.C: 69: controller_out = pidParams2.Kp2*error_new + pidParams2.Kd2*(error_n
      +                          ew-error_old)/Tsampling + integral_new;
  8124  16A1  0022               	movlb	2	; select bank2
  8125  16A2  0823               	movf	_integral_new^(0+256),w
  8126  16A3  0021               	movlb	1	; select bank1
  8127  16A4  00A8               	movwf	___ftadd@f1^(0+128)
  8128  16A5  0022               	movlb	2	; select bank2
  8129  16A6  0824               	movf	(_integral_new+1)^(0+256),w
  8130  16A7  0021               	movlb	1	; select bank1
  8131  16A8  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  8132  16A9  0022               	movlb	2	; select bank2
  8133  16AA  0825               	movf	(_integral_new+2)^(0+256),w
  8134  16AB  0021               	movlb	1	; select bank1
  8135  16AC  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  8136  16AD  086A               	movf	_Adaptive_base_pid$1783^(0+128),w
  8137  16AE  00AB               	movwf	___ftadd@f2^(0+128)
  8138  16AF  086B               	movf	(_Adaptive_base_pid$1783+1)^(0+128),w
  8139  16B0  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  8140  16B1  086C               	movf	(_Adaptive_base_pid$1783+2)^(0+128),w
  8141  16B2  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  8142  16B3  3188  2039  3194   	fcall	___ftadd
  8143  16B6  0021               	movlb	1	; select bank1
  8144  16B7  0828               	movf	?___ftadd^(0+128),w
  8145  16B8  0024               	movlb	4	; select bank4
  8146  16B9  00A4               	movwf	_controller_out^(0+512)
  8147  16BA  0021               	movlb	1	; select bank1
  8148  16BB  0829               	movf	(?___ftadd+1)^(0+128),w
  8149  16BC  0024               	movlb	4	; select bank4
  8150  16BD  00A5               	movwf	(_controller_out+1)^(0+512)
  8151  16BE  0021               	movlb	1	; select bank1
  8152  16BF  082A               	movf	(?___ftadd+2)^(0+128),w
  8153  16C0  0024               	movlb	4	; select bank4
  8154  16C1  00A6               	movwf	(_controller_out+2)^(0+512)
  8155                           
  8156                           ;MOTORCONTROL.C: 70: integral_old = integral_new;
  8157  16C2  0022               	movlb	2	; select bank2
  8158  16C3  0823               	movf	_integral_new^(0+256),w
  8159  16C4  0023               	movlb	3	; select bank3
  8160  16C5  00A3               	movwf	_integral_old^(0+384)
  8161  16C6  0022               	movlb	2	; select bank2
  8162  16C7  0824               	movf	(_integral_new+1)^(0+256),w
  8163  16C8  0023               	movlb	3	; select bank3
  8164  16C9  00A4               	movwf	(_integral_old+1)^(0+384)
  8165  16CA  0022               	movlb	2	; select bank2
  8166  16CB  0825               	movf	(_integral_new+2)^(0+256),w
  8167  16CC  0023               	movlb	3	; select bank3
  8168  16CD  00A5               	movwf	(_integral_old+2)^(0+384)
  8169                           
  8170                           ;MOTORCONTROL.C: 71: error_old = error_new;
  8171  16CE  0022               	movlb	2	; select bank2
  8172  16CF  0820               	movf	_error_new^(0+256),w
  8173  16D0  0023               	movlb	3	; select bank3
  8174  16D1  00A0               	movwf	_error_old^(0+384)
  8175  16D2  0022               	movlb	2	; select bank2
  8176  16D3  0821               	movf	(_error_new+1)^(0+256),w
  8177  16D4  0023               	movlb	3	; select bank3
  8178  16D5  00A1               	movwf	(_error_old+1)^(0+384)
  8179  16D6  0022               	movlb	2	; select bank2
  8180  16D7  0822               	movf	(_error_new+2)^(0+256),w
  8181  16D8  0023               	movlb	3	; select bank3
  8182  16D9  00A2               	movwf	(_error_old+2)^(0+384)
  8183                           
  8184                           ;MOTORCONTROL.C: 72: pidParams2.pidoutput2=controller_out;
  8185  16DA  0024               	movlb	4	; select bank4
  8186  16DB  0824               	movf	_controller_out^(0+512),w
  8187  16DC  0021               	movlb	1	; select bank1
  8188  16DD  00C5               	movwf	___fttol@f1^(0+128)
  8189  16DE  0024               	movlb	4	; select bank4
  8190  16DF  0825               	movf	(_controller_out+1)^(0+512),w
  8191  16E0  0021               	movlb	1	; select bank1
  8192  16E1  00C6               	movwf	(___fttol@f1+1)^(0+128)
  8193  16E2  0024               	movlb	4	; select bank4
  8194  16E3  0826               	movf	(_controller_out+2)^(0+512),w
  8195  16E4  0021               	movlb	1	; select bank1
  8196  16E5  00C7               	movwf	(___fttol@f1+2)^(0+128)
  8197  16E6  319F  2779  3194   	fcall	___fttol
  8198  16E9  30E0               	movlw	224
  8199  16EA  0086               	movwf	6
  8200  16EB  3027               	movlw	39
  8201  16EC  0087               	movwf	7
  8202  16ED  0021               	movlb	1	; select bank1
  8203  16EE  0845               	movf	?___fttol^(0+128),w
  8204  16EF  3FC0               	movwi [0]fsr1
  8205  16F0  0846               	movf	(?___fttol+1)^(0+128),w
  8206  16F1  3FC1               	movwi [1]fsr1
  8207  16F2  0847               	movf	(?___fttol+2)^(0+128),w
  8208  16F3  3FC2               	movwi [2]fsr1
  8209  16F4  0848               	movf	(?___fttol+3)^(0+128),w
  8210  16F5  3FC3               	movwi [3]fsr1
  8211                           
  8212                           ;MOTORCONTROL.C: 75: if(pidParams2.pidoutput2<=0)
  8213  16F6  30E0               	movlw	224
  8214  16F7  0086               	movwf	6
  8215  16F8  3027               	movlw	39
  8216  16F9  0087               	movwf	7
  8217  16FA  3F40               	moviw [0]fsr1
  8218  16FB  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8219  16FC  3F41               	moviw [1]fsr1
  8220  16FD  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8221  16FE  3F42               	moviw [2]fsr1
  8222  16FF  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8223  1700  3F43               	moviw [3]fsr1
  8224  1701  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8225  1702  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8226  1703  3A80               	xorlw	128
  8227  1704  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  8228  1705  3000               	movlw	0
  8229  1706  3A80               	xorlw	128
  8230  1707  025F               	subwf	(??_Adaptive_base_pid+4)^(0+128),w
  8231  1708  1D03               	skipz
  8232  1709  2F14               	goto	u5823
  8233  170A  3000               	movlw	0
  8234  170B  025D               	subwf	(??_Adaptive_base_pid+2)^(0+128),w
  8235  170C  1D03               	skipz
  8236  170D  2F14               	goto	u5823
  8237  170E  3000               	movlw	0
  8238  170F  025C               	subwf	(??_Adaptive_base_pid+1)^(0+128),w
  8239  1710  1D03               	skipz
  8240  1711  2F14               	goto	u5823
  8241  1712  3001               	movlw	1
  8242  1713  025B               	subwf	??_Adaptive_base_pid^(0+128),w
  8243  1714                     u5823:	
  8244  1714  1803               	skipnc
  8245  1715  2F20               	goto	l4341
  8246                           
  8247                           ;MOTORCONTROL.C: 76: pidParams2.pidoutput2=0;
  8248  1716  30E0               	movlw	224
  8249  1717  0086               	movwf	6
  8250  1718  3027               	movlw	39
  8251  1719  0087               	movwf	7
  8252  171A  3000               	movlw	0
  8253  171B  3FC0               	movwi [0]fsr1
  8254  171C  3FC1               	movwi [1]fsr1
  8255  171D  3FC2               	movwi [2]fsr1
  8256  171E  3FC3               	movwi [3]fsr1
  8257  171F  2F64               	goto	l544
  8258  1720                     l4341:	
  8259                           
  8260                           ;MOTORCONTROL.C: 77: else if(pidParams2.pidoutput2>pidParams2.outmax2)
  8261  1720  30E0               	movlw	224
  8262  1721  0086               	movwf	6
  8263  1722  3027               	movlw	39
  8264  1723  0087               	movwf	7
  8265  1724  3F40               	moviw [0]fsr1
  8266  1725  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8267  1726  3F41               	moviw [1]fsr1
  8268  1727  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8269  1728  3F42               	moviw [2]fsr1
  8270  1729  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8271  172A  3F43               	moviw [3]fsr1
  8272  172B  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8273  172C  30C0               	movlw	192
  8274  172D  0086               	movwf	6
  8275  172E  3027               	movlw	39
  8276  172F  0087               	movwf	7
  8277  1730  3F40               	moviw [0]fsr1
  8278  1731  00DF               	movwf	(??_Adaptive_base_pid+4)^(0+128)
  8279  1732  3F41               	moviw [1]fsr1
  8280  1733  00E0               	movwf	((??_Adaptive_base_pid+4)^(0+128)+1)
  8281  1734  3F42               	moviw [2]fsr1
  8282  1735  00E1               	movwf	((??_Adaptive_base_pid+4)^(0+128)+2)
  8283  1736  3F43               	moviw [3]fsr1
  8284  1737  00E2               	movwf	((??_Adaptive_base_pid+4)^(0+128)+3)
  8285  1738  0862               	movf	(??_Adaptive_base_pid+7)^(0+128),w
  8286  1739  3A80               	xorlw	128
  8287  173A  00E3               	movwf	(??_Adaptive_base_pid+8)^(0+128)
  8288  173B  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8289  173C  3A80               	xorlw	128
  8290  173D  0263               	subwf	(??_Adaptive_base_pid+8)^(0+128),w
  8291  173E  1D03               	skipz
  8292  173F  2F4A               	goto	u5833
  8293  1740  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8294  1741  0261               	subwf	(??_Adaptive_base_pid+6)^(0+128),w
  8295  1742  1D03               	skipz
  8296  1743  2F4A               	goto	u5833
  8297  1744  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8298  1745  0260               	subwf	(??_Adaptive_base_pid+5)^(0+128),w
  8299  1746  1D03               	skipz
  8300  1747  2F4A               	goto	u5833
  8301  1748  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8302  1749  025F               	subwf	(??_Adaptive_base_pid+4)^(0+128),w
  8303  174A                     u5833:	
  8304  174A  1803               	skipnc
  8305  174B  2F64               	goto	l544
  8306                           
  8307                           ;MOTORCONTROL.C: 78: pidParams2.pidoutput2=pidParams2.outmax2;
  8308  174C  30C0               	movlw	192
  8309  174D  0086               	movwf	6
  8310  174E  3027               	movlw	39
  8311  174F  0087               	movwf	7
  8312  1750  3F40               	moviw [0]fsr1
  8313  1751  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8314  1752  3F41               	moviw [1]fsr1
  8315  1753  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8316  1754  3F42               	moviw [2]fsr1
  8317  1755  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8318  1756  3F43               	moviw [3]fsr1
  8319  1757  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8320  1758  30E0               	movlw	224
  8321  1759  0086               	movwf	6
  8322  175A  3027               	movlw	39
  8323  175B  0087               	movwf	7
  8324  175C  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8325  175D  3FC0               	movwi [0]fsr1
  8326  175E  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8327  175F  3FC1               	movwi [1]fsr1
  8328  1760  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8329  1761  3FC2               	movwi [2]fsr1
  8330  1762  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8331  1763  3FC3               	movwi [3]fsr1
  8332  1764                     l544:	
  8333                           
  8334                           ;MOTORCONTROL.C: 82: disp4term=pidParams2.pidoutput2;
  8335  1764  30E0               	movlw	224
  8336  1765  0086               	movwf	6
  8337  1766  3027               	movlw	39
  8338  1767  0087               	movwf	7
  8339  1768  3F40               	moviw [0]fsr1
  8340  1769  0024               	movlb	4	; select bank4
  8341  176A  00B6               	movwf	_disp4term^(0+512)
  8342  176B  3F41               	moviw [1]fsr1
  8343  176C  00B7               	movwf	(_disp4term+1)^(0+512)
  8344                           
  8345                           ;MOTORCONTROL.C: 83: scaled_baseval2=(pidParams2.pidoutput2/scalefactor2);
  8346  176D  0023               	movlb	3	; select bank3
  8347  176E  086B               	movf	_scalefactor2^(0+384),w
  8348  176F  0021               	movlb	1	; select bank1
  8349  1770  00A0               	movwf	___aldiv@divisor^(0+128)
  8350  1771  0023               	movlb	3	; select bank3
  8351  1772  086C               	movf	(_scalefactor2+1)^(0+384),w
  8352  1773  0021               	movlb	1	; select bank1
  8353  1774  00A1               	movwf	(___aldiv@divisor^(0+128)+1)
  8354  1775  01A2               	clrf	(___aldiv@divisor^(0+128)+2)
  8355  1776  01A3               	clrf	(___aldiv@divisor^(0+128)+3)
  8356  1777  30E0               	movlw	224
  8357  1778  0086               	movwf	6
  8358  1779  3027               	movlw	39
  8359  177A  0087               	movwf	7
  8360  177B  3F40               	moviw [0]fsr1
  8361  177C  00A4               	movwf	___aldiv@dividend^(0+128)
  8362  177D  3F41               	moviw [1]fsr1
  8363  177E  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  8364  177F  3F42               	moviw [2]fsr1
  8365  1780  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  8366  1781  3F43               	moviw [3]fsr1
  8367  1782  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  8368  1783  319E  2670  3194   	fcall	___aldiv
  8369  1786  0021               	movlb	1	; select bank1
  8370  1787  0821               	movf	(?___aldiv^(0+128)+1),w
  8371  1788  0022               	movlb	2	; select bank2
  8372  1789  01AD               	clrf	(_scaled_baseval2+1)^(0+256)
  8373  178A  07AD               	addwf	(_scaled_baseval2+1)^(0+256),f
  8374  178B  0021               	movlb	1	; select bank1
  8375  178C  0820               	movf	?___aldiv^(0+128),w
  8376  178D  0022               	movlb	2	; select bank2
  8377  178E  01AC               	clrf	_scaled_baseval2^(0+256)
  8378  178F  07AC               	addwf	_scaled_baseval2^(0+256),f
  8379                           
  8380                           ;MOTORCONTROL.C: 85: if(scaled_baseval2>maxfmspeed)
  8381  1790  082D               	movf	(_scaled_baseval2+1)^(0+256),w
  8382  1791  0023               	movlb	3	; select bank3
  8383  1792  0268               	subwf	(_maxfmspeed+1)^(0+384),w
  8384  1793  1D03               	skipz
  8385  1794  2F99               	goto	u5845
  8386  1795  0022               	movlb	2	; select bank2
  8387  1796  082C               	movf	_scaled_baseval2^(0+256),w
  8388  1797  0023               	movlb	3	; select bank3
  8389  1798  0267               	subwf	_maxfmspeed^(0+384),w
  8390  1799                     u5845:	
  8391  1799  1803               	skipnc
  8392  179A  2FA2               	goto	l4351
  8393                           
  8394                           ;MOTORCONTROL.C: 86: {
  8395                           ;MOTORCONTROL.C: 87: scaled_baseval2=maxfmspeed;
  8396  179B  0868               	movf	(_maxfmspeed+1)^(0+384),w
  8397  179C  0022               	movlb	2	; select bank2
  8398  179D  01AD               	clrf	(_scaled_baseval2+1)^(0+256)
  8399  179E  07AD               	addwf	(_scaled_baseval2+1)^(0+256),f
  8400  179F  0023               	movlb	3	; select bank3
  8401  17A0  0867               	movf	_maxfmspeed^(0+384),w
  8402  17A1  2FB5               	goto	L18
  8403  17A2                     l4351:	
  8404                           ;MOTORCONTROL.C: 88: }
  8405                           
  8406                           
  8407                           ;MOTORCONTROL.C: 89: else if(scaled_baseval2<minfmspeed)
  8408  17A2  0023               	movlb	3	; select bank3
  8409  17A3  086A               	movf	(_minfmspeed+1)^(0+384),w
  8410  17A4  0022               	movlb	2	; select bank2
  8411  17A5  022D               	subwf	(_scaled_baseval2+1)^(0+256),w
  8412  17A6  1D03               	skipz
  8413  17A7  2FAC               	goto	u5855
  8414  17A8  0023               	movlb	3	; select bank3
  8415  17A9  0869               	movf	_minfmspeed^(0+384),w
  8416  17AA  0022               	movlb	2	; select bank2
  8417  17AB  022C               	subwf	_scaled_baseval2^(0+256),w
  8418  17AC                     u5855:	
  8419  17AC  1803               	skipnc
  8420  17AD  2FB8               	goto	l4355
  8421                           
  8422                           ;MOTORCONTROL.C: 90: {
  8423                           ;MOTORCONTROL.C: 91: scaled_baseval2=minfmspeed;
  8424  17AE  0023               	movlb	3	; select bank3
  8425  17AF  086A               	movf	(_minfmspeed+1)^(0+384),w
  8426  17B0  0022               	movlb	2	; select bank2
  8427  17B1  01AD               	clrf	(_scaled_baseval2+1)^(0+256)
  8428  17B2  07AD               	addwf	(_scaled_baseval2+1)^(0+256),f
  8429  17B3  0023               	movlb	3	; select bank3
  8430  17B4  0869               	movf	_minfmspeed^(0+384),w
  8431  17B5                     L18:	
  8432  17B5  0022               	movlb	2	; select bank2
  8433  17B6  01AC               	clrf	_scaled_baseval2^(0+256)
  8434  17B7  07AC               	addwf	_scaled_baseval2^(0+256),f
  8435  17B8                     l4355:	
  8436                           
  8437                           ;MOTORCONTROL.C: 92: }
  8438                           ;MOTORCONTROL.C: 93: if(cyclestrtf==1 && closeloopf==1)
  8439  17B8  0844               	movf	_cyclestrtf^(0+256),w
  8440  17B9  3A01               	xorlw	1
  8441  17BA  1D03               	skipz
  8442  17BB  2FC8               	goto	l4361
  8443  17BC  083F               	movf	_closeloopf^(0+256),w
  8444  17BD  3A01               	xorlw	1
  8445  17BE  1D03               	skipz
  8446  17BF  2FC8               	goto	l4361
  8447                           
  8448                           ;MOTORCONTROL.C: 94: {
  8449                           ;MOTORCONTROL.C: 97: Update_PWM(scaled_baseval2);
  8450  17C0  082D               	movf	(_scaled_baseval2+1)^(0+256),w
  8451  17C1  0021               	movlb	1	; select bank1
  8452  17C2  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  8453  17C3  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  8454  17C4  0022               	movlb	2	; select bank2
  8455  17C5  082C               	movf	_scaled_baseval2^(0+256),w
  8456  17C6  0021               	movlb	1	; select bank1
  8457  17C7  2FE1               	goto	L19
  8458  17C8                     l4361:	
  8459                           ;MOTORCONTROL.C: 106: }
  8460                           
  8461                           
  8462                           ;MOTORCONTROL.C: 107: else if(cyclestrtf==0)
  8463  17C8  0022               	movlb	2	; select bank2
  8464  17C9  08C4               	movf	_cyclestrtf^(0+256),f
  8465  17CA  1D03               	skipz
  8466  17CB  2FE5               	goto	l4365
  8467                           
  8468                           ;MOTORCONTROL.C: 108: {
  8469                           ;MOTORCONTROL.C: 109: Update_PWM(scaled_baseval2*0);
  8470  17CC  082D               	movf	(_scaled_baseval2+1)^(0+256),w
  8471  17CD  0021               	movlb	1	; select bank1
  8472  17CE  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  8473  17CF  07A1               	addwf	(___wmul@multiplier+1)^(0+128),f
  8474  17D0  0022               	movlb	2	; select bank2
  8475  17D1  082C               	movf	_scaled_baseval2^(0+256),w
  8476  17D2  0021               	movlb	1	; select bank1
  8477  17D3  01A0               	clrf	___wmul@multiplier^(0+128)
  8478  17D4  07A0               	addwf	___wmul@multiplier^(0+128),f
  8479  17D5  3000               	movlw	0
  8480  17D6  00A2               	movwf	___wmul@multiplicand^(0+128)
  8481  17D7  3000               	movlw	0
  8482  17D8  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  8483  17D9  3190  2001  3194   	fcall	___wmul
  8484  17DC  0021               	movlb	1	; select bank1
  8485  17DD  0821               	movf	(?___wmul+1)^(0+128),w
  8486  17DE  01D4               	clrf	(Update_PWM@setwsduty+1)^(0+128)
  8487  17DF  07D4               	addwf	(Update_PWM@setwsduty+1)^(0+128),f
  8488  17E0  0820               	movf	?___wmul^(0+128),w
  8489  17E1                     L19:	
  8490  17E1  01D3               	clrf	Update_PWM@setwsduty^(0+128)
  8491  17E2  07D3               	addwf	Update_PWM@setwsduty^(0+128),f
  8492  17E3  3199  21E7         	fcall	_Update_PWM
  8493  17E5                     l4365:	
  8494                           
  8495                           ;MOTORCONTROL.C: 110: }
  8496                           ;MOTORCONTROL.C: 111: }
  8497                           ;MOTORCONTROL.C: 112: pidParams2.previous_error2 = pidParams2.error2;
  8498  17E5  3096               	movlw	150
  8499  17E6  0086               	movwf	6
  8500  17E7  3027               	movlw	39
  8501  17E8  0087               	movwf	7
  8502  17E9  314C               	addfsr 1,12
  8503  17EA  3F40               	moviw [0]fsr1
  8504  17EB  0021               	movlb	1	; select bank1
  8505  17EC  00DB               	movwf	??_Adaptive_base_pid^(0+128)
  8506  17ED  3F41               	moviw [1]fsr1
  8507  17EE  00DC               	movwf	(??_Adaptive_base_pid^(0+128)+1)
  8508  17EF  3F42               	moviw [2]fsr1
  8509  17F0  00DD               	movwf	(??_Adaptive_base_pid^(0+128)+2)
  8510  17F1  3F43               	moviw [3]fsr1
  8511  17F2  00DE               	movwf	(??_Adaptive_base_pid^(0+128)+3)
  8512  17F3  30D4               	movlw	212
  8513  17F4  0086               	movwf	6
  8514  17F5  3027               	movlw	39
  8515  17F6  0087               	movwf	7
  8516  17F7  085B               	movf	??_Adaptive_base_pid^(0+128),w
  8517  17F8  3FC0               	movwi [0]fsr1
  8518  17F9  085C               	movf	(??_Adaptive_base_pid+1)^(0+128),w
  8519  17FA  3FC1               	movwi [1]fsr1
  8520  17FB  085D               	movf	(??_Adaptive_base_pid+2)^(0+128),w
  8521  17FC  3FC2               	movwi [2]fsr1
  8522  17FD  085E               	movf	(??_Adaptive_base_pid+3)^(0+128),w
  8523  17FE  3FC3               	movwi [3]fsr1
  8524  17FF  0008               	return
  8525  1800                     __end_of_Adaptive_base_pid:	
  8526                           
  8527                           	psect	text25
  8528  1001                     __ptext25:	
  8529 ;; *************** function ___wmul *****************
  8530 ;; Defined at:
  8531 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  multiplier      2    0[BANK1 ] unsigned int 
  8534 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;  product         2    4[BANK1 ] unsigned int 
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  2    0[BANK1 ] unsigned int 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8546 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8547 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8549 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8550 ;;Total ram usage:        6 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    3
  8553 ;; This function calls:
  8554 ;;		Nothing
  8555 ;; This function is called by:
  8556 ;;		_Adaptive_base_pid
  8557 ;;		_main
  8558 ;;		_key_application
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           
  8563                           ;psect for function ___wmul
  8564  1001                     ___wmul:	
  8565                           
  8566                           ;incstack = 0
  8567                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8568  1001  0021               	movlb	1	; select bank1
  8569  1002  01A4               	clrf	___wmul@product^(0+128)
  8570  1003  01A5               	clrf	(___wmul@product+1)^(0+128)
  8571  1004                     l3699:	
  8572  1004  1C20               	btfss	___wmul@multiplier^(0+128),0
  8573  1005  280A               	goto	l920
  8574  1006  0822               	movf	___wmul@multiplicand^(0+128),w
  8575  1007  07A4               	addwf	___wmul@product^(0+128),f
  8576  1008  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  8577  1009  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  8578  100A                     l920:	
  8579  100A  3001               	movlw	1
  8580  100B                     u4455:	
  8581  100B  35A2               	lslf	___wmul@multiplicand^(0+128),f
  8582  100C  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  8583  100D  0B89               	decfsz	9,f
  8584  100E  280B               	goto	u4455
  8585  100F  3001               	movlw	1
  8586  1010                     u4465:	
  8587  1010  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  8588  1011  0CA0               	rrf	___wmul@multiplier^(0+128),f
  8589  1012  0B89               	decfsz	9,f
  8590  1013  2810               	goto	u4465
  8591  1014  0821               	movf	(___wmul@multiplier+1)^(0+128),w
  8592  1015  0420               	iorwf	___wmul@multiplier^(0+128),w
  8593  1016  1D03               	skipz
  8594  1017  2804               	goto	l3699
  8595  1018  0825               	movf	(___wmul@product+1)^(0+128),w
  8596  1019  01A1               	clrf	(?___wmul+1)^(0+128)
  8597  101A  07A1               	addwf	(?___wmul+1)^(0+128),f
  8598  101B  0824               	movf	___wmul@product^(0+128),w
  8599  101C  01A0               	clrf	?___wmul^(0+128)
  8600  101D  07A0               	addwf	?___wmul^(0+128),f
  8601  101E  0008               	return
  8602  101F                     __end_of___wmul:	
  8603                           
  8604                           	psect	text26
  8605  1F79                     __ptext26:	
  8606 ;; *************** function ___fttol *****************
  8607 ;; Defined at:
  8608 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  f1              3   37[BANK1 ] float 
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;  lval            4   46[BANK1 ] unsigned long 
  8613 ;;  exp1            1   50[BANK1 ] unsigned char 
  8614 ;;  sign1           1   45[BANK1 ] unsigned char 
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  4   37[BANK1 ] long 
  8617 ;; Registers used:
  8618 ;;		wreg, status,2, status,0
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8624 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8625 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8626 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8627 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8628 ;;Total ram usage:       14 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; Hardware stack levels required when called:    3
  8631 ;; This function calls:
  8632 ;;		Nothing
  8633 ;; This function is called by:
  8634 ;;		_Adaptive_base_pid
  8635 ;;		_main
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           
  8640                           ;psect for function ___fttol
  8641  1F79                     ___fttol:	
  8642                           
  8643                           ;incstack = 0
  8644                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8645  1F79  0021               	movlb	1	; select bank1
  8646  1F7A  0845               	movf	___fttol@f1^(0+128),w
  8647  1F7B  00C9               	movwf	??___fttol^(0+128)
  8648  1F7C  0846               	movf	(___fttol@f1+1)^(0+128),w
  8649  1F7D  00CA               	movwf	(??___fttol^(0+128)+1)
  8650  1F7E  0847               	movf	(___fttol@f1+2)^(0+128),w
  8651  1F7F  00CB               	movwf	(??___fttol^(0+128)+2)
  8652  1F80  1003               	clrc
  8653  1F81  0D4A               	rlf	(??___fttol^(0+128)+1),w
  8654  1F82  0D4B               	rlf	(??___fttol^(0+128)+2),w
  8655  1F83  00CC               	movwf	(??___fttol+3)^(0+128)
  8656  1F84  084C               	movf	(??___fttol+3)^(0+128),w
  8657  1F85  00D2               	movwf	___fttol@exp1^(0+128)
  8658  1F86  08D2               	movf	___fttol@exp1^(0+128),f
  8659  1F87  1D03               	skipz
  8660  1F88  2F92               	goto	l3963
  8661  1F89  3000               	movlw	0
  8662  1F8A  00C8               	movwf	(?___fttol+3)^(0+128)
  8663  1F8B  3000               	movlw	0
  8664  1F8C  00C7               	movwf	(?___fttol+2)^(0+128)
  8665  1F8D  3000               	movlw	0
  8666  1F8E  00C6               	movwf	(?___fttol+1)^(0+128)
  8667  1F8F  3000               	movlw	0
  8668  1F90  00C5               	movwf	?___fttol^(0+128)
  8669  1F91  0008               	return
  8670  1F92                     l3963:	
  8671  1F92  0845               	movf	___fttol@f1^(0+128),w
  8672  1F93  00C9               	movwf	??___fttol^(0+128)
  8673  1F94  0846               	movf	(___fttol@f1+1)^(0+128),w
  8674  1F95  00CA               	movwf	(??___fttol^(0+128)+1)
  8675  1F96  0847               	movf	(___fttol@f1+2)^(0+128),w
  8676  1F97  00CB               	movwf	(??___fttol^(0+128)+2)
  8677  1F98  3017               	movlw	23
  8678  1F99                     u5095:	
  8679  1F99  36CB               	lsrf	(??___fttol^(0+128)+2),f
  8680  1F9A  0CCA               	rrf	(??___fttol^(0+128)+1),f
  8681  1F9B  0CC9               	rrf	??___fttol^(0+128),f
  8682  1F9C  0B89               	decfsz	9,f
  8683  1F9D  2F99               	goto	u5095
  8684  1F9E  0849               	movf	??___fttol^(0+128),w
  8685  1F9F  00CC               	movwf	(??___fttol+3)^(0+128)
  8686  1FA0  084C               	movf	(??___fttol+3)^(0+128),w
  8687  1FA1  00CD               	movwf	___fttol@sign1^(0+128)
  8688  1FA2  17C6               	bsf	(___fttol@f1^(0+128)+1),7
  8689  1FA3  30FF               	movlw	255
  8690  1FA4  05C5               	andwf	___fttol@f1^(0+128),f
  8691  1FA5  30FF               	movlw	255
  8692  1FA6  05C6               	andwf	(___fttol@f1+1)^(0+128),f
  8693  1FA7  3000               	movlw	0
  8694  1FA8  05C7               	andwf	(___fttol@f1+2)^(0+128),f
  8695  1FA9  0845               	movf	___fttol@f1^(0+128),w
  8696  1FAA  00CE               	movwf	___fttol@lval^(0+128)
  8697  1FAB  0846               	movf	(___fttol@f1+1)^(0+128),w
  8698  1FAC  00CF               	movwf	(___fttol@lval^(0+128)+1)
  8699  1FAD  0847               	movf	(___fttol@f1+2)^(0+128),w
  8700  1FAE  00D0               	movwf	(___fttol@lval^(0+128)+2)
  8701  1FAF  01D1               	clrf	(___fttol@lval^(0+128)+3)
  8702  1FB0  308E               	movlw	142
  8703  1FB1  02D2               	subwf	___fttol@exp1^(0+128),f
  8704  1FB2  1FD2               	btfss	___fttol@exp1^(0+128),7
  8705  1FB3  2FD0               	goto	l3983
  8706  1FB4  0852               	movf	___fttol@exp1^(0+128),w
  8707  1FB5  3A80               	xorlw	128
  8708  1FB6  3E8F               	addlw	143
  8709  1FB7  1803               	skipnc
  8710  1FB8  2FC2               	goto	l3981
  8711  1FB9  3000               	movlw	0
  8712  1FBA  00C8               	movwf	(?___fttol+3)^(0+128)
  8713  1FBB  3000               	movlw	0
  8714  1FBC  00C7               	movwf	(?___fttol+2)^(0+128)
  8715  1FBD  3000               	movlw	0
  8716  1FBE  00C6               	movwf	(?___fttol+1)^(0+128)
  8717  1FBF  3000               	movlw	0
  8718  1FC0  00C5               	movwf	?___fttol^(0+128)
  8719  1FC1  0008               	return
  8720  1FC2                     l3981:	
  8721  1FC2  3001               	movlw	1
  8722  1FC3                     u5125:	
  8723  1FC3  36D1               	lsrf	(___fttol@lval+3)^(0+128),f
  8724  1FC4  0CD0               	rrf	(___fttol@lval+2)^(0+128),f
  8725  1FC5  0CCF               	rrf	(___fttol@lval+1)^(0+128),f
  8726  1FC6  0CCE               	rrf	___fttol@lval^(0+128),f
  8727  1FC7  0B89               	decfsz	9,f
  8728  1FC8  2FC3               	goto	u5125
  8729  1FC9  3001               	movlw	1
  8730  1FCA  00C9               	movwf	??___fttol^(0+128)
  8731  1FCB  0849               	movf	??___fttol^(0+128),w
  8732  1FCC  07D2               	addwf	___fttol@exp1^(0+128),f
  8733  1FCD  1903               	btfsc	3,2
  8734  1FCE  2FE9               	goto	l3993
  8735  1FCF  2FC2               	goto	l3981
  8736  1FD0                     l3983:	
  8737  1FD0  3018               	movlw	24
  8738  1FD1  0252               	subwf	___fttol@exp1^(0+128),w
  8739  1FD2  1C03               	skipc
  8740  1FD3  2FE6               	goto	l3991
  8741  1FD4  3000               	movlw	0
  8742  1FD5  00C8               	movwf	(?___fttol+3)^(0+128)
  8743  1FD6  3000               	movlw	0
  8744  1FD7  00C7               	movwf	(?___fttol+2)^(0+128)
  8745  1FD8  3000               	movlw	0
  8746  1FD9  00C6               	movwf	(?___fttol+1)^(0+128)
  8747  1FDA  3000               	movlw	0
  8748  1FDB  00C5               	movwf	?___fttol^(0+128)
  8749  1FDC  0008               	return
  8750  1FDD                     l3989:	
  8751  1FDD  3001               	movlw	1
  8752  1FDE                     u5155:	
  8753  1FDE  35CE               	lslf	___fttol@lval^(0+128),f
  8754  1FDF  0DCF               	rlf	(___fttol@lval+1)^(0+128),f
  8755  1FE0  0DD0               	rlf	(___fttol@lval+2)^(0+128),f
  8756  1FE1  0DD1               	rlf	(___fttol@lval+3)^(0+128),f
  8757  1FE2  0B89               	decfsz	9,f
  8758  1FE3  2FDE               	goto	u5155
  8759  1FE4  3001               	movlw	1
  8760  1FE5  02D2               	subwf	___fttol@exp1^(0+128),f
  8761  1FE6                     l3991:	
  8762  1FE6  08D2               	movf	___fttol@exp1^(0+128),f
  8763  1FE7  1D03               	skipz
  8764  1FE8  2FDD               	goto	l3989
  8765  1FE9                     l3993:	
  8766  1FE9  084D               	movf	___fttol@sign1^(0+128),w
  8767  1FEA  1903               	btfsc	3,2
  8768  1FEB  2FF7               	goto	l3997
  8769  1FEC  09CE               	comf	___fttol@lval^(0+128),f
  8770  1FED  09CF               	comf	(___fttol@lval+1)^(0+128),f
  8771  1FEE  09D0               	comf	(___fttol@lval+2)^(0+128),f
  8772  1FEF  09D1               	comf	(___fttol@lval+3)^(0+128),f
  8773  1FF0  0ACE               	incf	___fttol@lval^(0+128),f
  8774  1FF1  1903               	skipnz
  8775  1FF2  0ACF               	incf	(___fttol@lval+1)^(0+128),f
  8776  1FF3  1903               	skipnz
  8777  1FF4  0AD0               	incf	(___fttol@lval+2)^(0+128),f
  8778  1FF5  1903               	skipnz
  8779  1FF6  0AD1               	incf	(___fttol@lval+3)^(0+128),f
  8780  1FF7                     l3997:	
  8781  1FF7  0851               	movf	(___fttol@lval+3)^(0+128),w
  8782  1FF8  00C8               	movwf	(?___fttol+3)^(0+128)
  8783  1FF9  0850               	movf	(___fttol@lval+2)^(0+128),w
  8784  1FFA  00C7               	movwf	(?___fttol+2)^(0+128)
  8785  1FFB  084F               	movf	(___fttol@lval+1)^(0+128),w
  8786  1FFC  00C6               	movwf	(?___fttol+1)^(0+128)
  8787  1FFD  084E               	movf	___fttol@lval^(0+128),w
  8788  1FFE  00C5               	movwf	?___fttol^(0+128)
  8789  1FFF  0008               	return
  8790  2000                     __end_of___fttol:	
  8791                           
  8792                           	psect	text27
  8793  187C                     __ptext27:	
  8794 ;; *************** function ___ftneg *****************
  8795 ;; Defined at:
  8796 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;  f1              3    0[BANK1 ] float 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  3    0[BANK1 ] float 
  8803 ;; Registers used:
  8804 ;;		wreg
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8810 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8813 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8814 ;;Total ram usage:        3 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    3
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_Adaptive_base_pid
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           
  8825                           ;psect for function ___ftneg
  8826  187C                     ___ftneg:	
  8827                           
  8828                           ;incstack = 0
  8829                           ; Regs used in ___ftneg: [wreg]
  8830  187C  0021               	movlb	1	; select bank1
  8831  187D  0822               	movf	(___ftneg@f1+2)^(0+128),w
  8832  187E  0421               	iorwf	(___ftneg@f1+1)^(0+128),w
  8833  187F  0420               	iorwf	___ftneg@f1^(0+128),w
  8834  1880  1903               	skipnz
  8835  1881  0008               	return
  8836  1882  3080               	movlw	128
  8837  1883  06A2               	xorwf	(___ftneg@f1+2)^(0+128),f
  8838  1884  0008               	return
  8839  1885                     __end_of___ftneg:	
  8840                           
  8841                           	psect	text28
  8842  12D3                     __ptext28:	
  8843 ;; *************** function ___ftmul *****************
  8844 ;; Defined at:
  8845 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;  f1              3   21[BANK1 ] float 
  8848 ;;  f2              3   24[BANK1 ] float 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  f3_as_produc    3   32[BANK1 ] unsigned um
  8851 ;;  sign            1   36[BANK1 ] unsigned char 
  8852 ;;  cntr            1   35[BANK1 ] unsigned char 
  8853 ;;  exp             1   31[BANK1 ] unsigned char 
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  3   21[BANK1 ] float 
  8856 ;; Registers used:
  8857 ;;		wreg, status,2, status,0, pclath, cstack
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8863 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8864 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8865 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8866 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8867 ;;Total ram usage:       16 bytes
  8868 ;; Hardware stack levels used:    1
  8869 ;; Hardware stack levels required when called:    4
  8870 ;; This function calls:
  8871 ;;		___ftpack
  8872 ;; This function is called by:
  8873 ;;		_Adaptive_base_pid
  8874 ;;		_main
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           
  8879                           ;psect for function ___ftmul
  8880  12D3                     ___ftmul:	
  8881                           
  8882                           ;incstack = 0
  8883                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8884  12D3  0021               	movlb	1	; select bank1
  8885  12D4  0835               	movf	___ftmul@f1^(0+128),w
  8886  12D5  00BB               	movwf	??___ftmul^(0+128)
  8887  12D6  0836               	movf	(___ftmul@f1+1)^(0+128),w
  8888  12D7  00BC               	movwf	(??___ftmul^(0+128)+1)
  8889  12D8  0837               	movf	(___ftmul@f1+2)^(0+128),w
  8890  12D9  00BD               	movwf	(??___ftmul^(0+128)+2)
  8891  12DA  1003               	clrc
  8892  12DB  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  8893  12DC  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  8894  12DD  00BE               	movwf	(??___ftmul+3)^(0+128)
  8895  12DE  083E               	movf	(??___ftmul+3)^(0+128),w
  8896  12DF  00BF               	movwf	___ftmul@exp^(0+128)
  8897  12E0  08BF               	movf	___ftmul@exp^(0+128),f
  8898  12E1  1D03               	skipz
  8899  12E2  2AEA               	goto	l3905
  8900  12E3  3000               	movlw	0
  8901  12E4  00B5               	movwf	?___ftmul^(0+128)
  8902  12E5  3000               	movlw	0
  8903  12E6  00B6               	movwf	(?___ftmul+1)^(0+128)
  8904  12E7  3000               	movlw	0
  8905  12E8  00B7               	movwf	(?___ftmul+2)^(0+128)
  8906  12E9  0008               	return
  8907  12EA                     l3905:	
  8908  12EA  0838               	movf	___ftmul@f2^(0+128),w
  8909  12EB  00BB               	movwf	??___ftmul^(0+128)
  8910  12EC  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8911  12ED  00BC               	movwf	(??___ftmul^(0+128)+1)
  8912  12EE  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8913  12EF  00BD               	movwf	(??___ftmul^(0+128)+2)
  8914  12F0  1003               	clrc
  8915  12F1  0D3C               	rlf	(??___ftmul^(0+128)+1),w
  8916  12F2  0D3D               	rlf	(??___ftmul^(0+128)+2),w
  8917  12F3  00BE               	movwf	(??___ftmul+3)^(0+128)
  8918  12F4  083E               	movf	(??___ftmul+3)^(0+128),w
  8919  12F5  00C4               	movwf	___ftmul@sign^(0+128)
  8920  12F6  08C4               	movf	___ftmul@sign^(0+128),f
  8921  12F7  1D03               	skipz
  8922  12F8  2B00               	goto	l3911
  8923  12F9  3000               	movlw	0
  8924  12FA  00B5               	movwf	?___ftmul^(0+128)
  8925  12FB  3000               	movlw	0
  8926  12FC  00B6               	movwf	(?___ftmul+1)^(0+128)
  8927  12FD  3000               	movlw	0
  8928  12FE  00B7               	movwf	(?___ftmul+2)^(0+128)
  8929  12FF  0008               	return
  8930  1300                     l3911:	
  8931  1300  0844               	movf	___ftmul@sign^(0+128),w
  8932  1301  3E7B               	addlw	123
  8933  1302  00BB               	movwf	??___ftmul^(0+128)
  8934  1303  083B               	movf	??___ftmul^(0+128),w
  8935  1304  07BF               	addwf	___ftmul@exp^(0+128),f
  8936  1305  0835               	movf	___ftmul@f1^(0+128),w
  8937  1306  00BB               	movwf	??___ftmul^(0+128)
  8938  1307  0836               	movf	(___ftmul@f1+1)^(0+128),w
  8939  1308  00BC               	movwf	(??___ftmul^(0+128)+1)
  8940  1309  0837               	movf	(___ftmul@f1+2)^(0+128),w
  8941  130A  00BD               	movwf	(??___ftmul^(0+128)+2)
  8942  130B  3010               	movlw	16
  8943  130C                     u4975:	
  8944  130C  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  8945  130D  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  8946  130E  0CBB               	rrf	??___ftmul^(0+128),f
  8947  130F  0B89               	decfsz	9,f
  8948  1310  2B0C               	goto	u4975
  8949  1311  083B               	movf	??___ftmul^(0+128),w
  8950  1312  00BE               	movwf	(??___ftmul+3)^(0+128)
  8951  1313  083E               	movf	(??___ftmul+3)^(0+128),w
  8952  1314  00C4               	movwf	___ftmul@sign^(0+128)
  8953  1315  0838               	movf	___ftmul@f2^(0+128),w
  8954  1316  00BB               	movwf	??___ftmul^(0+128)
  8955  1317  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8956  1318  00BC               	movwf	(??___ftmul^(0+128)+1)
  8957  1319  083A               	movf	(___ftmul@f2+2)^(0+128),w
  8958  131A  00BD               	movwf	(??___ftmul^(0+128)+2)
  8959  131B  3010               	movlw	16
  8960  131C                     u4985:	
  8961  131C  36BD               	lsrf	(??___ftmul^(0+128)+2),f
  8962  131D  0CBC               	rrf	(??___ftmul^(0+128)+1),f
  8963  131E  0CBB               	rrf	??___ftmul^(0+128),f
  8964  131F  0B89               	decfsz	9,f
  8965  1320  2B1C               	goto	u4985
  8966  1321  083B               	movf	??___ftmul^(0+128),w
  8967  1322  00BE               	movwf	(??___ftmul+3)^(0+128)
  8968  1323  083E               	movf	(??___ftmul+3)^(0+128),w
  8969  1324  06C4               	xorwf	___ftmul@sign^(0+128),f
  8970  1325  3080               	movlw	128
  8971  1326  00BB               	movwf	??___ftmul^(0+128)
  8972  1327  083B               	movf	??___ftmul^(0+128),w
  8973  1328  05C4               	andwf	___ftmul@sign^(0+128),f
  8974  1329  17B6               	bsf	(___ftmul@f1^(0+128)+1),7
  8975  132A  17B9               	bsf	(___ftmul@f2^(0+128)+1),7
  8976  132B  30FF               	movlw	255
  8977  132C  05B8               	andwf	___ftmul@f2^(0+128),f
  8978  132D  30FF               	movlw	255
  8979  132E  05B9               	andwf	(___ftmul@f2+1)^(0+128),f
  8980  132F  3000               	movlw	0
  8981  1330  05BA               	andwf	(___ftmul@f2+2)^(0+128),f
  8982  1331  3000               	movlw	0
  8983  1332  00C0               	movwf	___ftmul@f3_as_product^(0+128)
  8984  1333  3000               	movlw	0
  8985  1334  00C1               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  8986  1335  3000               	movlw	0
  8987  1336  00C2               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  8988  1337  3007               	movlw	7
  8989  1338  00BB               	movwf	??___ftmul^(0+128)
  8990  1339  083B               	movf	??___ftmul^(0+128),w
  8991  133A  00C3               	movwf	___ftmul@cntr^(0+128)
  8992  133B                     l3923:	
  8993  133B  1C35               	btfss	___ftmul@f1^(0+128),0
  8994  133C  2B43               	goto	l3927
  8995  133D  0838               	movf	___ftmul@f2^(0+128),w
  8996  133E  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  8997  133F  0839               	movf	(___ftmul@f2+1)^(0+128),w
  8998  1340  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8999  1341  083A               	movf	(___ftmul@f2+2)^(0+128),w
  9000  1342  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  9001  1343                     l3927:	
  9002  1343  3001               	movlw	1
  9003  1344                     u5005:	
  9004  1344  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  9005  1345  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  9006  1346  0CB5               	rrf	___ftmul@f1^(0+128),f
  9007  1347  0B89               	decfsz	9,f
  9008  1348  2B44               	goto	u5005
  9009  1349  3001               	movlw	1
  9010  134A                     u5015:	
  9011  134A  35B8               	lslf	___ftmul@f2^(0+128),f
  9012  134B  0DB9               	rlf	(___ftmul@f2+1)^(0+128),f
  9013  134C  0DBA               	rlf	(___ftmul@f2+2)^(0+128),f
  9014  134D  0B89               	decfsz	9,f
  9015  134E  2B4A               	goto	u5015
  9016  134F  3001               	movlw	1
  9017  1350  02C3               	subwf	___ftmul@cntr^(0+128),f
  9018  1351  1D03               	btfss	3,2
  9019  1352  2B3B               	goto	l3923
  9020  1353  3009               	movlw	9
  9021  1354  00BB               	movwf	??___ftmul^(0+128)
  9022  1355  083B               	movf	??___ftmul^(0+128),w
  9023  1356  00C3               	movwf	___ftmul@cntr^(0+128)
  9024  1357                     l3935:	
  9025  1357  1C35               	btfss	___ftmul@f1^(0+128),0
  9026  1358  2B5F               	goto	l3939
  9027  1359  0838               	movf	___ftmul@f2^(0+128),w
  9028  135A  07C0               	addwf	___ftmul@f3_as_product^(0+128),f
  9029  135B  0839               	movf	(___ftmul@f2+1)^(0+128),w
  9030  135C  3DC1               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  9031  135D  083A               	movf	(___ftmul@f2+2)^(0+128),w
  9032  135E  3DC2               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  9033  135F                     l3939:	
  9034  135F  3001               	movlw	1
  9035  1360                     u5045:	
  9036  1360  36B7               	lsrf	(___ftmul@f1+2)^(0+128),f
  9037  1361  0CB6               	rrf	(___ftmul@f1+1)^(0+128),f
  9038  1362  0CB5               	rrf	___ftmul@f1^(0+128),f
  9039  1363  0B89               	decfsz	9,f
  9040  1364  2B60               	goto	u5045
  9041  1365  3001               	movlw	1
  9042  1366                     u5055:	
  9043  1366  36C2               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  9044  1367  0CC1               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  9045  1368  0CC0               	rrf	___ftmul@f3_as_product^(0+128),f
  9046  1369  0B89               	decfsz	9,f
  9047  136A  2B66               	goto	u5055
  9048  136B  3001               	movlw	1
  9049  136C  02C3               	subwf	___ftmul@cntr^(0+128),f
  9050  136D  1D03               	btfss	3,2
  9051  136E  2B57               	goto	l3935
  9052  136F  0840               	movf	___ftmul@f3_as_product^(0+128),w
  9053  1370  00A0               	movwf	___ftpack@arg^(0+128)
  9054  1371  0841               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  9055  1372  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9056  1373  0842               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  9057  1374  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9058  1375  083F               	movf	___ftmul@exp^(0+128),w
  9059  1376  00BB               	movwf	??___ftmul^(0+128)
  9060  1377  083B               	movf	??___ftmul^(0+128),w
  9061  1378  00A3               	movwf	___ftpack@exp^(0+128)
  9062  1379  0844               	movf	___ftmul@sign^(0+128),w
  9063  137A  00BC               	movwf	(??___ftmul+1)^(0+128)
  9064  137B  083C               	movf	(??___ftmul+1)^(0+128),w
  9065  137C  00A4               	movwf	___ftpack@sign^(0+128)
  9066  137D  319B  23C6         	fcall	___ftpack
  9067  137F  0021               	movlb	1	; select bank1
  9068  1380  0820               	movf	?___ftpack^(0+128),w
  9069  1381  00B5               	movwf	?___ftmul^(0+128)
  9070  1382  0821               	movf	(?___ftpack+1)^(0+128),w
  9071  1383  00B6               	movwf	(?___ftmul+1)^(0+128)
  9072  1384  0822               	movf	(?___ftpack+2)^(0+128),w
  9073  1385  00B7               	movwf	(?___ftmul+2)^(0+128)
  9074  1386  0008               	return
  9075  1387                     __end_of___ftmul:	
  9076                           
  9077                           	psect	text29
  9078  1A18                     __ptext29:	
  9079 ;; *************** function ___ftge *****************
  9080 ;; Defined at:
  9081 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftge.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;  ff1             3   16[BANK1 ] float 
  9084 ;;  ff2             3   19[BANK1 ] float 
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;		None
  9087 ;; Return value:  Size  Location     Type
  9088 ;;		None               void
  9089 ;; Registers used:
  9090 ;;		wreg, status,2, status,0
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9096 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9098 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9099 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9100 ;;Total ram usage:        9 bytes
  9101 ;; Hardware stack levels used:    1
  9102 ;; Hardware stack levels required when called:    3
  9103 ;; This function calls:
  9104 ;;		Nothing
  9105 ;; This function is called by:
  9106 ;;		_Adaptive_base_pid
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           
  9111                           ;psect for function ___ftge
  9112  1A18                     ___ftge:	
  9113                           
  9114                           ;incstack = 0
  9115                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9116  1A18  0021               	movlb	1	; select bank1
  9117  1A19  1FB2               	btfss	(___ftge@ff1+2)^(0+128),7
  9118  1A1A  2A2F               	goto	l3883
  9119  1A1B  0930               	comf	___ftge@ff1^(0+128),w
  9120  1A1C  00B6               	movwf	??___ftge^(0+128)
  9121  1A1D  0931               	comf	(___ftge@ff1+1)^(0+128),w
  9122  1A1E  00B7               	movwf	(??___ftge^(0+128)+1)
  9123  1A1F  0932               	comf	(___ftge@ff1+2)^(0+128),w
  9124  1A20  00B8               	movwf	(??___ftge^(0+128)+2)
  9125  1A21  0AB6               	incf	??___ftge^(0+128),f
  9126  1A22  1903               	skipnz
  9127  1A23  0AB7               	incf	(??___ftge^(0+128)+1),f
  9128  1A24  1903               	skipnz
  9129  1A25  0AB8               	incf	(??___ftge^(0+128)+2),f
  9130  1A26  3000               	movlw	0
  9131  1A27  0736               	addwf	??___ftge^(0+128),w
  9132  1A28  00B0               	movwf	___ftge@ff1^(0+128)
  9133  1A29  3000               	movlw	0
  9134  1A2A  3D37               	addwfc	(??___ftge+1)^(0+128),w
  9135  1A2B  00B1               	movwf	(___ftge@ff1+1)^(0+128)
  9136  1A2C  3080               	movlw	128
  9137  1A2D  3D38               	addwfc	(??___ftge+2)^(0+128),w
  9138  1A2E  00B2               	movwf	(___ftge@ff1+2)^(0+128)
  9139  1A2F                     l3883:	
  9140  1A2F  1FB5               	btfss	(___ftge@ff2+2)^(0+128),7
  9141  1A30  2A45               	goto	l3887
  9142  1A31  0933               	comf	___ftge@ff2^(0+128),w
  9143  1A32  00B6               	movwf	??___ftge^(0+128)
  9144  1A33  0934               	comf	(___ftge@ff2+1)^(0+128),w
  9145  1A34  00B7               	movwf	(??___ftge^(0+128)+1)
  9146  1A35  0935               	comf	(___ftge@ff2+2)^(0+128),w
  9147  1A36  00B8               	movwf	(??___ftge^(0+128)+2)
  9148  1A37  0AB6               	incf	??___ftge^(0+128),f
  9149  1A38  1903               	skipnz
  9150  1A39  0AB7               	incf	(??___ftge^(0+128)+1),f
  9151  1A3A  1903               	skipnz
  9152  1A3B  0AB8               	incf	(??___ftge^(0+128)+2),f
  9153  1A3C  3000               	movlw	0
  9154  1A3D  0736               	addwf	??___ftge^(0+128),w
  9155  1A3E  00B3               	movwf	___ftge@ff2^(0+128)
  9156  1A3F  3000               	movlw	0
  9157  1A40  3D37               	addwfc	(??___ftge+1)^(0+128),w
  9158  1A41  00B4               	movwf	(___ftge@ff2+1)^(0+128)
  9159  1A42  3080               	movlw	128
  9160  1A43  3D38               	addwfc	(??___ftge+2)^(0+128),w
  9161  1A44  00B5               	movwf	(___ftge@ff2+2)^(0+128)
  9162  1A45                     l3887:	
  9163  1A45  3080               	movlw	128
  9164  1A46  06B2               	xorwf	(___ftge@ff1+2)^(0+128),f
  9165  1A47  3080               	movlw	128
  9166  1A48  06B5               	xorwf	(___ftge@ff2+2)^(0+128),f
  9167  1A49  0835               	movf	(___ftge@ff2+2)^(0+128),w
  9168  1A4A  0232               	subwf	(___ftge@ff1+2)^(0+128),w
  9169  1A4B  1D03               	skipz
  9170  1A4C  0008               	return
  9171  1A4D  0834               	movf	(___ftge@ff2+1)^(0+128),w
  9172  1A4E  0231               	subwf	(___ftge@ff1+1)^(0+128),w
  9173  1A4F  1D03               	skipz
  9174  1A50  0008               	return
  9175  1A51  0833               	movf	___ftge@ff2^(0+128),w
  9176  1A52  0230               	subwf	___ftge@ff1^(0+128),w
  9177  1A53  0008               	return
  9178  1A54                     __end_of___ftge:	
  9179                           
  9180                           	psect	text30
  9181  10C8                     __ptext30:	
  9182 ;; *************** function ___ftdiv *****************
  9183 ;; Defined at:
  9184 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  f2              3   37[BANK1 ] float 
  9187 ;;  f1              3   40[BANK1 ] float 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;  f3              3   48[BANK1 ] float 
  9190 ;;  sign            1   52[BANK1 ] unsigned char 
  9191 ;;  exp             1   51[BANK1 ] unsigned char 
  9192 ;;  cntr            1   47[BANK1 ] unsigned char 
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  3   37[BANK1 ] float 
  9195 ;; Registers used:
  9196 ;;		wreg, status,2, status,0, pclath, cstack
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9202 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9203 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9204 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9205 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9206 ;;Total ram usage:       16 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; Hardware stack levels required when called:    4
  9209 ;; This function calls:
  9210 ;;		___ftpack
  9211 ;; This function is called by:
  9212 ;;		_Adaptive_base_pid
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           
  9217                           ;psect for function ___ftdiv
  9218  10C8                     ___ftdiv:	
  9219                           
  9220                           ;incstack = 0
  9221                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9222  10C8  0021               	movlb	1	; select bank1
  9223  10C9  0848               	movf	___ftdiv@f1^(0+128),w
  9224  10CA  00CB               	movwf	??___ftdiv^(0+128)
  9225  10CB  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  9226  10CC  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9227  10CD  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  9228  10CE  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9229  10CF  1003               	clrc
  9230  10D0  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  9231  10D1  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  9232  10D2  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9233  10D3  084E               	movf	(??___ftdiv+3)^(0+128),w
  9234  10D4  00D3               	movwf	___ftdiv@exp^(0+128)
  9235  10D5  08D3               	movf	___ftdiv@exp^(0+128),f
  9236  10D6  1D03               	skipz
  9237  10D7  28DF               	goto	l3843
  9238  10D8  3000               	movlw	0
  9239  10D9  00C5               	movwf	?___ftdiv^(0+128)
  9240  10DA  3000               	movlw	0
  9241  10DB  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9242  10DC  3000               	movlw	0
  9243  10DD  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9244  10DE  0008               	return
  9245  10DF                     l3843:	
  9246  10DF  0845               	movf	___ftdiv@f2^(0+128),w
  9247  10E0  00CB               	movwf	??___ftdiv^(0+128)
  9248  10E1  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9249  10E2  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9250  10E3  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9251  10E4  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9252  10E5  1003               	clrc
  9253  10E6  0D4C               	rlf	(??___ftdiv^(0+128)+1),w
  9254  10E7  0D4D               	rlf	(??___ftdiv^(0+128)+2),w
  9255  10E8  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9256  10E9  084E               	movf	(??___ftdiv+3)^(0+128),w
  9257  10EA  00D4               	movwf	___ftdiv@sign^(0+128)
  9258  10EB  08D4               	movf	___ftdiv@sign^(0+128),f
  9259  10EC  1D03               	skipz
  9260  10ED  28F5               	goto	l3849
  9261  10EE  3000               	movlw	0
  9262  10EF  00C5               	movwf	?___ftdiv^(0+128)
  9263  10F0  3000               	movlw	0
  9264  10F1  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9265  10F2  3000               	movlw	0
  9266  10F3  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9267  10F4  0008               	return
  9268  10F5                     l3849:	
  9269  10F5  3000               	movlw	0
  9270  10F6  00D0               	movwf	___ftdiv@f3^(0+128)
  9271  10F7  3000               	movlw	0
  9272  10F8  00D1               	movwf	(___ftdiv@f3+1)^(0+128)
  9273  10F9  3000               	movlw	0
  9274  10FA  00D2               	movwf	(___ftdiv@f3+2)^(0+128)
  9275  10FB  3089               	movlw	137
  9276  10FC  0754               	addwf	___ftdiv@sign^(0+128),w
  9277  10FD  00CB               	movwf	??___ftdiv^(0+128)
  9278  10FE  084B               	movf	??___ftdiv^(0+128),w
  9279  10FF  02D3               	subwf	___ftdiv@exp^(0+128),f
  9280  1100  0848               	movf	___ftdiv@f1^(0+128),w
  9281  1101  00CB               	movwf	??___ftdiv^(0+128)
  9282  1102  0849               	movf	(___ftdiv@f1+1)^(0+128),w
  9283  1103  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9284  1104  084A               	movf	(___ftdiv@f1+2)^(0+128),w
  9285  1105  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9286  1106  3010               	movlw	16
  9287  1107                     u4865:	
  9288  1107  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  9289  1108  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  9290  1109  0CCB               	rrf	??___ftdiv^(0+128),f
  9291  110A  0B89               	decfsz	9,f
  9292  110B  2907               	goto	u4865
  9293  110C  084B               	movf	??___ftdiv^(0+128),w
  9294  110D  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9295  110E  084E               	movf	(??___ftdiv+3)^(0+128),w
  9296  110F  00D4               	movwf	___ftdiv@sign^(0+128)
  9297  1110  0845               	movf	___ftdiv@f2^(0+128),w
  9298  1111  00CB               	movwf	??___ftdiv^(0+128)
  9299  1112  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9300  1113  00CC               	movwf	(??___ftdiv^(0+128)+1)
  9301  1114  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9302  1115  00CD               	movwf	(??___ftdiv^(0+128)+2)
  9303  1116  3010               	movlw	16
  9304  1117                     u4875:	
  9305  1117  36CD               	lsrf	(??___ftdiv^(0+128)+2),f
  9306  1118  0CCC               	rrf	(??___ftdiv^(0+128)+1),f
  9307  1119  0CCB               	rrf	??___ftdiv^(0+128),f
  9308  111A  0B89               	decfsz	9,f
  9309  111B  2917               	goto	u4875
  9310  111C  084B               	movf	??___ftdiv^(0+128),w
  9311  111D  00CE               	movwf	(??___ftdiv+3)^(0+128)
  9312  111E  084E               	movf	(??___ftdiv+3)^(0+128),w
  9313  111F  06D4               	xorwf	___ftdiv@sign^(0+128),f
  9314  1120  3080               	movlw	128
  9315  1121  00CB               	movwf	??___ftdiv^(0+128)
  9316  1122  084B               	movf	??___ftdiv^(0+128),w
  9317  1123  05D4               	andwf	___ftdiv@sign^(0+128),f
  9318  1124  17C9               	bsf	(___ftdiv@f1^(0+128)+1),7
  9319  1125  30FF               	movlw	255
  9320  1126  05C8               	andwf	___ftdiv@f1^(0+128),f
  9321  1127  30FF               	movlw	255
  9322  1128  05C9               	andwf	(___ftdiv@f1+1)^(0+128),f
  9323  1129  3000               	movlw	0
  9324  112A  05CA               	andwf	(___ftdiv@f1+2)^(0+128),f
  9325  112B  17C6               	bsf	(___ftdiv@f2^(0+128)+1),7
  9326  112C  30FF               	movlw	255
  9327  112D  05C5               	andwf	___ftdiv@f2^(0+128),f
  9328  112E  30FF               	movlw	255
  9329  112F  05C6               	andwf	(___ftdiv@f2+1)^(0+128),f
  9330  1130  3000               	movlw	0
  9331  1131  05C7               	andwf	(___ftdiv@f2+2)^(0+128),f
  9332  1132  3018               	movlw	24
  9333  1133  00CB               	movwf	??___ftdiv^(0+128)
  9334  1134  084B               	movf	??___ftdiv^(0+128),w
  9335  1135  00CF               	movwf	___ftdiv@cntr^(0+128)
  9336  1136                     l3863:	
  9337  1136  3001               	movlw	1
  9338  1137                     u4885:	
  9339  1137  35D0               	lslf	___ftdiv@f3^(0+128),f
  9340  1138  0DD1               	rlf	(___ftdiv@f3+1)^(0+128),f
  9341  1139  0DD2               	rlf	(___ftdiv@f3+2)^(0+128),f
  9342  113A  0B89               	decfsz	9,f
  9343  113B  2937               	goto	u4885
  9344  113C  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9345  113D  024A               	subwf	(___ftdiv@f1+2)^(0+128),w
  9346  113E  1D03               	skipz
  9347  113F  2946               	goto	u4895
  9348  1140  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9349  1141  0249               	subwf	(___ftdiv@f1+1)^(0+128),w
  9350  1142  1D03               	skipz
  9351  1143  2946               	goto	u4895
  9352  1144  0845               	movf	___ftdiv@f2^(0+128),w
  9353  1145  0248               	subwf	___ftdiv@f1^(0+128),w
  9354  1146                     u4895:	
  9355  1146  1C03               	skipc
  9356  1147  294F               	goto	l3871
  9357  1148  0845               	movf	___ftdiv@f2^(0+128),w
  9358  1149  02C8               	subwf	___ftdiv@f1^(0+128),f
  9359  114A  0846               	movf	(___ftdiv@f2+1)^(0+128),w
  9360  114B  3BC9               	subwfb	(___ftdiv@f1+1)^(0+128),f
  9361  114C  0847               	movf	(___ftdiv@f2+2)^(0+128),w
  9362  114D  3BCA               	subwfb	(___ftdiv@f1+2)^(0+128),f
  9363  114E  1450               	bsf	___ftdiv@f3^(0+128),0
  9364  114F                     l3871:	
  9365  114F  3001               	movlw	1
  9366  1150                     u4905:	
  9367  1150  35C8               	lslf	___ftdiv@f1^(0+128),f
  9368  1151  0DC9               	rlf	(___ftdiv@f1+1)^(0+128),f
  9369  1152  0DCA               	rlf	(___ftdiv@f1+2)^(0+128),f
  9370  1153  0B89               	decfsz	9,f
  9371  1154  2950               	goto	u4905
  9372  1155  3001               	movlw	1
  9373  1156  02CF               	subwf	___ftdiv@cntr^(0+128),f
  9374  1157  1D03               	btfss	3,2
  9375  1158  2936               	goto	l3863
  9376  1159  0850               	movf	___ftdiv@f3^(0+128),w
  9377  115A  00A0               	movwf	___ftpack@arg^(0+128)
  9378  115B  0851               	movf	(___ftdiv@f3+1)^(0+128),w
  9379  115C  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9380  115D  0852               	movf	(___ftdiv@f3+2)^(0+128),w
  9381  115E  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9382  115F  0853               	movf	___ftdiv@exp^(0+128),w
  9383  1160  00CB               	movwf	??___ftdiv^(0+128)
  9384  1161  084B               	movf	??___ftdiv^(0+128),w
  9385  1162  00A3               	movwf	___ftpack@exp^(0+128)
  9386  1163  0854               	movf	___ftdiv@sign^(0+128),w
  9387  1164  00CC               	movwf	(??___ftdiv+1)^(0+128)
  9388  1165  084C               	movf	(??___ftdiv+1)^(0+128),w
  9389  1166  00A4               	movwf	___ftpack@sign^(0+128)
  9390  1167  319B  23C6         	fcall	___ftpack
  9391  1169  0021               	movlb	1	; select bank1
  9392  116A  0820               	movf	?___ftpack^(0+128),w
  9393  116B  00C5               	movwf	?___ftdiv^(0+128)
  9394  116C  0821               	movf	(?___ftpack+1)^(0+128),w
  9395  116D  00C6               	movwf	(?___ftdiv+1)^(0+128)
  9396  116E  0822               	movf	(?___ftpack+2)^(0+128),w
  9397  116F  00C7               	movwf	(?___ftdiv+2)^(0+128)
  9398  1170  0008               	return
  9399  1171                     __end_of___ftdiv:	
  9400                           
  9401                           	psect	text31
  9402  0839                     __ptext31:	
  9403 ;; *************** function ___ftadd *****************
  9404 ;; Defined at:
  9405 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  f1              3    8[BANK1 ] float 
  9408 ;;  f2              3   11[BANK1 ] float 
  9409 ;; Auto vars:     Size  Location     Type
  9410 ;;  exp1            1   20[BANK1 ] unsigned char 
  9411 ;;  exp2            1   19[BANK1 ] unsigned char 
  9412 ;;  sign            1   18[BANK1 ] unsigned char 
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  3    8[BANK1 ] float 
  9415 ;; Registers used:
  9416 ;;		wreg, status,2, status,0, pclath, cstack
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9422 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9423 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9424 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9425 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9426 ;;Total ram usage:       13 bytes
  9427 ;; Hardware stack levels used:    1
  9428 ;; Hardware stack levels required when called:    4
  9429 ;; This function calls:
  9430 ;;		___ftpack
  9431 ;; This function is called by:
  9432 ;;		_Adaptive_base_pid
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           
  9437                           ;psect for function ___ftadd
  9438  0839                     ___ftadd:	
  9439                           
  9440                           ;incstack = 0
  9441                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9442  0839  0021               	movlb	1	; select bank1
  9443  083A  0828               	movf	___ftadd@f1^(0+128),w
  9444  083B  00AE               	movwf	??___ftadd^(0+128)
  9445  083C  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9446  083D  00AF               	movwf	(??___ftadd^(0+128)+1)
  9447  083E  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9448  083F  00B0               	movwf	(??___ftadd^(0+128)+2)
  9449  0840  1003               	clrc
  9450  0841  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  9451  0842  0D30               	rlf	(??___ftadd^(0+128)+2),w
  9452  0843  00B1               	movwf	(??___ftadd+3)^(0+128)
  9453  0844  0831               	movf	(??___ftadd+3)^(0+128),w
  9454  0845  00B4               	movwf	___ftadd@exp1^(0+128)
  9455  0846  082B               	movf	___ftadd@f2^(0+128),w
  9456  0847  00AE               	movwf	??___ftadd^(0+128)
  9457  0848  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9458  0849  00AF               	movwf	(??___ftadd^(0+128)+1)
  9459  084A  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9460  084B  00B0               	movwf	(??___ftadd^(0+128)+2)
  9461  084C  1003               	clrc
  9462  084D  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  9463  084E  0D30               	rlf	(??___ftadd^(0+128)+2),w
  9464  084F  00B1               	movwf	(??___ftadd+3)^(0+128)
  9465  0850  0831               	movf	(??___ftadd+3)^(0+128),w
  9466  0851  00B3               	movwf	___ftadd@exp2^(0+128)
  9467  0852  0834               	movf	___ftadd@exp1^(0+128),w
  9468  0853  1903               	btfsc	3,2
  9469  0854  2861               	goto	l3773
  9470  0855  0833               	movf	___ftadd@exp2^(0+128),w
  9471  0856  0234               	subwf	___ftadd@exp1^(0+128),w
  9472  0857  1803               	skipnc
  9473  0858  2868               	goto	l3777
  9474  0859  0334               	decf	___ftadd@exp1^(0+128),w
  9475  085A  3AFF               	xorlw	255
  9476  085B  0733               	addwf	___ftadd@exp2^(0+128),w
  9477  085C  00AE               	movwf	??___ftadd^(0+128)
  9478  085D  3019               	movlw	25
  9479  085E  022E               	subwf	??___ftadd^(0+128),w
  9480  085F  1C03               	skipc
  9481  0860  2868               	goto	l3777
  9482  0861                     l3773:	
  9483  0861  082B               	movf	___ftadd@f2^(0+128),w
  9484  0862  00A8               	movwf	?___ftadd^(0+128)
  9485  0863  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9486  0864  00A9               	movwf	(?___ftadd+1)^(0+128)
  9487  0865  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9488  0866  00AA               	movwf	(?___ftadd+2)^(0+128)
  9489  0867  0008               	return
  9490  0868                     l3777:	
  9491  0868  0833               	movf	___ftadd@exp2^(0+128),w
  9492  0869  1903               	btfsc	3,2
  9493  086A  0008               	return
  9494  086B  0834               	movf	___ftadd@exp1^(0+128),w
  9495  086C  0233               	subwf	___ftadd@exp2^(0+128),w
  9496  086D  1803               	skipnc
  9497  086E  2877               	goto	l3783
  9498  086F  0333               	decf	___ftadd@exp2^(0+128),w
  9499  0870  3AFF               	xorlw	255
  9500  0871  0734               	addwf	___ftadd@exp1^(0+128),w
  9501  0872  00AE               	movwf	??___ftadd^(0+128)
  9502  0873  3019               	movlw	25
  9503  0874  022E               	subwf	??___ftadd^(0+128),w
  9504  0875  1803               	btfsc	3,0
  9505  0876  0008               	return
  9506  0877                     l3783:	
  9507  0877  3006               	movlw	6
  9508  0878  00AE               	movwf	??___ftadd^(0+128)
  9509  0879  082E               	movf	??___ftadd^(0+128),w
  9510  087A  00B2               	movwf	___ftadd@sign^(0+128)
  9511  087B  1BAA               	btfsc	(___ftadd@f1+2)^(0+128),7
  9512  087C  17B2               	bsf	___ftadd@sign^(0+128),7
  9513  087D  1BAD               	btfsc	(___ftadd@f2+2)^(0+128),7
  9514  087E  1732               	bsf	___ftadd@sign^(0+128),6
  9515  087F  17A9               	bsf	(___ftadd@f1^(0+128)+1),7
  9516  0880  30FF               	movlw	255
  9517  0881  05A8               	andwf	___ftadd@f1^(0+128),f
  9518  0882  30FF               	movlw	255
  9519  0883  05A9               	andwf	(___ftadd@f1+1)^(0+128),f
  9520  0884  3000               	movlw	0
  9521  0885  05AA               	andwf	(___ftadd@f1+2)^(0+128),f
  9522  0886  17AC               	bsf	(___ftadd@f2^(0+128)+1),7
  9523  0887  30FF               	movlw	255
  9524  0888  05AB               	andwf	___ftadd@f2^(0+128),f
  9525  0889  30FF               	movlw	255
  9526  088A  05AC               	andwf	(___ftadd@f2+1)^(0+128),f
  9527  088B  3000               	movlw	0
  9528  088C  05AD               	andwf	(___ftadd@f2+2)^(0+128),f
  9529  088D  0833               	movf	___ftadd@exp2^(0+128),w
  9530  088E  0234               	subwf	___ftadd@exp1^(0+128),w
  9531  088F  1803               	skipnc
  9532  0890  28B3               	goto	l3805
  9533  0891                     l3795:	
  9534  0891  3001               	movlw	1
  9535  0892                     u4705:	
  9536  0892  35AB               	lslf	___ftadd@f2^(0+128),f
  9537  0893  0DAC               	rlf	(___ftadd@f2+1)^(0+128),f
  9538  0894  0DAD               	rlf	(___ftadd@f2+2)^(0+128),f
  9539  0895  0B89               	decfsz	9,f
  9540  0896  2892               	goto	u4705
  9541  0897  3001               	movlw	1
  9542  0898  02B3               	subwf	___ftadd@exp2^(0+128),f
  9543  0899  0833               	movf	___ftadd@exp2^(0+128),w
  9544  089A  0634               	xorwf	___ftadd@exp1^(0+128),w
  9545  089B  1903               	skipnz
  9546  089C  28AE               	goto	l3803
  9547  089D  3001               	movlw	1
  9548  089E  02B2               	subwf	___ftadd@sign^(0+128),f
  9549  089F  0832               	movf	___ftadd@sign^(0+128),w
  9550  08A0  3907               	andlw	7
  9551  08A1  1903               	btfsc	3,2
  9552  08A2  28AE               	goto	l3803
  9553  08A3  2891               	goto	l3795
  9554  08A4                     l3801:	
  9555  08A4  3001               	movlw	1
  9556  08A5                     u4735:	
  9557  08A5  36AA               	lsrf	(___ftadd@f1+2)^(0+128),f
  9558  08A6  0CA9               	rrf	(___ftadd@f1+1)^(0+128),f
  9559  08A7  0CA8               	rrf	___ftadd@f1^(0+128),f
  9560  08A8  0B89               	decfsz	9,f
  9561  08A9  28A5               	goto	u4735
  9562  08AA  3001               	movlw	1
  9563  08AB  00AE               	movwf	??___ftadd^(0+128)
  9564  08AC  082E               	movf	??___ftadd^(0+128),w
  9565  08AD  07B4               	addwf	___ftadd@exp1^(0+128),f
  9566  08AE                     l3803:	
  9567  08AE  0834               	movf	___ftadd@exp1^(0+128),w
  9568  08AF  0633               	xorwf	___ftadd@exp2^(0+128),w
  9569  08B0  1903               	btfsc	3,2
  9570  08B1  28D8               	goto	l1110
  9571  08B2  28A4               	goto	l3801
  9572  08B3                     l3805:	
  9573  08B3  0834               	movf	___ftadd@exp1^(0+128),w
  9574  08B4  0233               	subwf	___ftadd@exp2^(0+128),w
  9575  08B5  1803               	skipnc
  9576  08B6  28D8               	goto	l1110
  9577  08B7                     l3807:	
  9578  08B7  3001               	movlw	1
  9579  08B8                     u4765:	
  9580  08B8  35A8               	lslf	___ftadd@f1^(0+128),f
  9581  08B9  0DA9               	rlf	(___ftadd@f1+1)^(0+128),f
  9582  08BA  0DAA               	rlf	(___ftadd@f1+2)^(0+128),f
  9583  08BB  0B89               	decfsz	9,f
  9584  08BC  28B8               	goto	u4765
  9585  08BD  3001               	movlw	1
  9586  08BE  02B4               	subwf	___ftadd@exp1^(0+128),f
  9587  08BF  0833               	movf	___ftadd@exp2^(0+128),w
  9588  08C0  0634               	xorwf	___ftadd@exp1^(0+128),w
  9589  08C1  1903               	skipnz
  9590  08C2  28D4               	goto	l3815
  9591  08C3  3001               	movlw	1
  9592  08C4  02B2               	subwf	___ftadd@sign^(0+128),f
  9593  08C5  0832               	movf	___ftadd@sign^(0+128),w
  9594  08C6  3907               	andlw	7
  9595  08C7  1903               	btfsc	3,2
  9596  08C8  28D4               	goto	l3815
  9597  08C9  28B7               	goto	l3807
  9598  08CA                     l3813:	
  9599  08CA  3001               	movlw	1
  9600  08CB                     u4795:	
  9601  08CB  36AD               	lsrf	(___ftadd@f2+2)^(0+128),f
  9602  08CC  0CAC               	rrf	(___ftadd@f2+1)^(0+128),f
  9603  08CD  0CAB               	rrf	___ftadd@f2^(0+128),f
  9604  08CE  0B89               	decfsz	9,f
  9605  08CF  28CB               	goto	u4795
  9606  08D0  3001               	movlw	1
  9607  08D1  00AE               	movwf	??___ftadd^(0+128)
  9608  08D2  082E               	movf	??___ftadd^(0+128),w
  9609  08D3  07B3               	addwf	___ftadd@exp2^(0+128),f
  9610  08D4                     l3815:	
  9611  08D4  0834               	movf	___ftadd@exp1^(0+128),w
  9612  08D5  0633               	xorwf	___ftadd@exp2^(0+128),w
  9613  08D6  1D03               	skipz
  9614  08D7  28CA               	goto	l3813
  9615  08D8                     l1110:	
  9616  08D8  1FB2               	btfss	___ftadd@sign^(0+128),7
  9617  08D9  28EA               	goto	l3819
  9618  08DA  30FF               	movlw	255
  9619  08DB  06A8               	xorwf	___ftadd@f1^(0+128),f
  9620  08DC  30FF               	movlw	255
  9621  08DD  06A9               	xorwf	(___ftadd@f1+1)^(0+128),f
  9622  08DE  30FF               	movlw	255
  9623  08DF  06AA               	xorwf	(___ftadd@f1+2)^(0+128),f
  9624  08E0  3001               	movlw	1
  9625  08E1  07A8               	addwf	___ftadd@f1^(0+128),f
  9626  08E2  3000               	movlw	0
  9627  08E3  1803               	skipnc
  9628  08E4  3001               	movlw	1
  9629  08E5  07A9               	addwf	(___ftadd@f1+1)^(0+128),f
  9630  08E6  3000               	movlw	0
  9631  08E7  1803               	skipnc
  9632  08E8  3001               	movlw	1
  9633  08E9  07AA               	addwf	(___ftadd@f1+2)^(0+128),f
  9634  08EA                     l3819:	
  9635  08EA  1F32               	btfss	___ftadd@sign^(0+128),6
  9636  08EB  28FC               	goto	l3823
  9637  08EC  30FF               	movlw	255
  9638  08ED  06AB               	xorwf	___ftadd@f2^(0+128),f
  9639  08EE  30FF               	movlw	255
  9640  08EF  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9641  08F0  30FF               	movlw	255
  9642  08F1  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9643  08F2  3001               	movlw	1
  9644  08F3  07AB               	addwf	___ftadd@f2^(0+128),f
  9645  08F4  3000               	movlw	0
  9646  08F5  1803               	skipnc
  9647  08F6  3001               	movlw	1
  9648  08F7  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9649  08F8  3000               	movlw	0
  9650  08F9  1803               	skipnc
  9651  08FA  3001               	movlw	1
  9652  08FB  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9653  08FC                     l3823:	
  9654  08FC  01B2               	clrf	___ftadd@sign^(0+128)
  9655  08FD  0828               	movf	___ftadd@f1^(0+128),w
  9656  08FE  07AB               	addwf	___ftadd@f2^(0+128),f
  9657  08FF  0829               	movf	(___ftadd@f1+1)^(0+128),w
  9658  0900  3DAC               	addwfc	(___ftadd@f2+1)^(0+128),f
  9659  0901  082A               	movf	(___ftadd@f1+2)^(0+128),w
  9660  0902  3DAD               	addwfc	(___ftadd@f2+2)^(0+128),f
  9661  0903  1FAD               	btfss	(___ftadd@f2+2)^(0+128),7
  9662  0904  2917               	goto	l3833
  9663  0905  30FF               	movlw	255
  9664  0906  06AB               	xorwf	___ftadd@f2^(0+128),f
  9665  0907  30FF               	movlw	255
  9666  0908  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  9667  0909  30FF               	movlw	255
  9668  090A  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  9669  090B  3001               	movlw	1
  9670  090C  07AB               	addwf	___ftadd@f2^(0+128),f
  9671  090D  3000               	movlw	0
  9672  090E  1803               	skipnc
  9673  090F  3001               	movlw	1
  9674  0910  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  9675  0911  3000               	movlw	0
  9676  0912  1803               	skipnc
  9677  0913  3001               	movlw	1
  9678  0914  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  9679  0915  01B2               	clrf	___ftadd@sign^(0+128)
  9680  0916  0AB2               	incf	___ftadd@sign^(0+128),f
  9681  0917                     l3833:	
  9682  0917  082B               	movf	___ftadd@f2^(0+128),w
  9683  0918  00A0               	movwf	___ftpack@arg^(0+128)
  9684  0919  082C               	movf	(___ftadd@f2+1)^(0+128),w
  9685  091A  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9686  091B  082D               	movf	(___ftadd@f2+2)^(0+128),w
  9687  091C  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9688  091D  0834               	movf	___ftadd@exp1^(0+128),w
  9689  091E  00AE               	movwf	??___ftadd^(0+128)
  9690  091F  082E               	movf	??___ftadd^(0+128),w
  9691  0920  00A3               	movwf	___ftpack@exp^(0+128)
  9692  0921  0832               	movf	___ftadd@sign^(0+128),w
  9693  0922  00AF               	movwf	(??___ftadd+1)^(0+128)
  9694  0923  082F               	movf	(??___ftadd+1)^(0+128),w
  9695  0924  00A4               	movwf	___ftpack@sign^(0+128)
  9696  0925  319B  23C6         	fcall	___ftpack
  9697  0927  0021               	movlb	1	; select bank1
  9698  0928  0820               	movf	?___ftpack^(0+128),w
  9699  0929  00A8               	movwf	?___ftadd^(0+128)
  9700  092A  0821               	movf	(?___ftpack+1)^(0+128),w
  9701  092B  00A9               	movwf	(?___ftadd+1)^(0+128)
  9702  092C  0822               	movf	(?___ftpack+2)^(0+128),w
  9703  092D  00AA               	movwf	(?___ftadd+2)^(0+128)
  9704  092E  0008               	return
  9705  092F                     __end_of___ftadd:	
  9706                           
  9707                           	psect	text32
  9708  07BB                     __ptext32:	
  9709 ;; *************** function ___altoft *****************
  9710 ;; Defined at:
  9711 ;;		line 42 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\altoft.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  c               4    8[BANK1 ] long 
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;  sign            1   15[BANK1 ] unsigned char 
  9716 ;;  exp             1   14[BANK1 ] unsigned char 
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  3    8[BANK1 ] float 
  9719 ;; Registers used:
  9720 ;;		wreg, status,2, status,0, pclath, cstack
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9726 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9727 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9728 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9729 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9730 ;;Total ram usage:        8 bytes
  9731 ;; Hardware stack levels used:    1
  9732 ;; Hardware stack levels required when called:    4
  9733 ;; This function calls:
  9734 ;;		___ftpack
  9735 ;; This function is called by:
  9736 ;;		_Adaptive_base_pid
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739                           
  9740                           
  9741                           ;psect for function ___altoft
  9742  07BB                     ___altoft:	
  9743                           
  9744                           ;incstack = 0
  9745                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  9746  07BB  0021               	movlb	1	; select bank1
  9747  07BC  01AF               	clrf	___altoft@sign^(0+128)
  9748  07BD  308E               	movlw	142
  9749  07BE  00AC               	movwf	??___altoft^(0+128)
  9750  07BF  082C               	movf	??___altoft^(0+128),w
  9751  07C0  00AE               	movwf	___altoft@exp^(0+128)
  9752  07C1  1FAB               	btfss	(___altoft@c+3)^(0+128),7
  9753  07C2  2FD0               	goto	l3759
  9754  07C3  09A8               	comf	___altoft@c^(0+128),f
  9755  07C4  09A9               	comf	(___altoft@c+1)^(0+128),f
  9756  07C5  09AA               	comf	(___altoft@c+2)^(0+128),f
  9757  07C6  09AB               	comf	(___altoft@c+3)^(0+128),f
  9758  07C7  0AA8               	incf	___altoft@c^(0+128),f
  9759  07C8  1903               	skipnz
  9760  07C9  0AA9               	incf	(___altoft@c+1)^(0+128),f
  9761  07CA  1903               	skipnz
  9762  07CB  0AAA               	incf	(___altoft@c+2)^(0+128),f
  9763  07CC  1903               	skipnz
  9764  07CD  0AAB               	incf	(___altoft@c+3)^(0+128),f
  9765  07CE  01AF               	clrf	___altoft@sign^(0+128)
  9766  07CF  0AAF               	incf	___altoft@sign^(0+128),f
  9767  07D0                     l3759:	
  9768  07D0  30FF               	movlw	255
  9769  07D1  052B               	andwf	(___altoft@c+3)^(0+128),w
  9770  07D2  1903               	btfsc	3,2
  9771  07D3  2FE0               	goto	l3761
  9772  07D4  3001               	movlw	1
  9773  07D5                     u4595:	
  9774  07D5  36AB               	lsrf	(___altoft@c+3)^(0+128),f
  9775  07D6  0CAA               	rrf	(___altoft@c+2)^(0+128),f
  9776  07D7  0CA9               	rrf	(___altoft@c+1)^(0+128),f
  9777  07D8  0CA8               	rrf	___altoft@c^(0+128),f
  9778  07D9  0B89               	decfsz	9,f
  9779  07DA  2FD5               	goto	u4595
  9780  07DB  3001               	movlw	1
  9781  07DC  00AC               	movwf	??___altoft^(0+128)
  9782  07DD  082C               	movf	??___altoft^(0+128),w
  9783  07DE  07AE               	addwf	___altoft@exp^(0+128),f
  9784  07DF  2FD0               	goto	l3759
  9785  07E0                     l3761:	
  9786  07E0  0828               	movf	___altoft@c^(0+128),w
  9787  07E1  00A0               	movwf	___ftpack@arg^(0+128)
  9788  07E2  0829               	movf	(___altoft@c+1)^(0+128),w
  9789  07E3  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9790  07E4  082A               	movf	(___altoft@c+2)^(0+128),w
  9791  07E5  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  9792  07E6  082E               	movf	___altoft@exp^(0+128),w
  9793  07E7  00AC               	movwf	??___altoft^(0+128)
  9794  07E8  082C               	movf	??___altoft^(0+128),w
  9795  07E9  00A3               	movwf	___ftpack@exp^(0+128)
  9796  07EA  082F               	movf	___altoft@sign^(0+128),w
  9797  07EB  00AD               	movwf	(??___altoft+1)^(0+128)
  9798  07EC  082D               	movf	(??___altoft+1)^(0+128),w
  9799  07ED  00A4               	movwf	___ftpack@sign^(0+128)
  9800  07EE  319B  23C6         	fcall	___ftpack
  9801  07F0  0021               	movlb	1	; select bank1
  9802  07F1  0820               	movf	?___ftpack^(0+128),w
  9803  07F2  00A8               	movwf	?___altoft^(0+128)
  9804  07F3  0821               	movf	(?___ftpack+1)^(0+128),w
  9805  07F4  00A9               	movwf	(?___altoft+1)^(0+128)
  9806  07F5  0822               	movf	(?___ftpack+2)^(0+128),w
  9807  07F6  00AA               	movwf	(?___altoft+2)^(0+128)
  9808  07F7  0008               	return
  9809  07F8                     __end_of___altoft:	
  9810                           
  9811                           	psect	text33
  9812  1BC6                     __ptext33:	
  9813 ;; *************** function ___ftpack *****************
  9814 ;; Defined at:
  9815 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;  arg             3    0[BANK1 ] unsigned um
  9818 ;;  exp             1    3[BANK1 ] unsigned char 
  9819 ;;  sign            1    4[BANK1 ] unsigned char 
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;		None
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  3    0[BANK1 ] float 
  9824 ;; Registers used:
  9825 ;;		wreg, status,2, status,0
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9831 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9833 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9834 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9835 ;;Total ram usage:        8 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:    3
  9838 ;; This function calls:
  9839 ;;		Nothing
  9840 ;; This function is called by:
  9841 ;;		___altoft
  9842 ;;		___ftadd
  9843 ;;		___ftdiv
  9844 ;;		___ftmul
  9845 ;;		___lwtoft
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           
  9850                           ;psect for function ___ftpack
  9851  1BC6                     ___ftpack:	
  9852                           
  9853                           ;incstack = 0
  9854                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9855  1BC6  0021               	movlb	1	; select bank1
  9856  1BC7  0823               	movf	___ftpack@exp^(0+128),w
  9857  1BC8  1903               	btfsc	3,2
  9858  1BC9  2BCF               	goto	l3541
  9859  1BCA  0822               	movf	(___ftpack@arg+2)^(0+128),w
  9860  1BCB  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  9861  1BCC  0420               	iorwf	___ftpack@arg^(0+128),w
  9862  1BCD  1D03               	skipz
  9863  1BCE  2BE0               	goto	l3547
  9864  1BCF                     l3541:	
  9865  1BCF  3000               	movlw	0
  9866  1BD0  00A0               	movwf	?___ftpack^(0+128)
  9867  1BD1  3000               	movlw	0
  9868  1BD2  00A1               	movwf	(?___ftpack+1)^(0+128)
  9869  1BD3  3000               	movlw	0
  9870  1BD4  00A2               	movwf	(?___ftpack+2)^(0+128)
  9871  1BD5  0008               	return
  9872  1BD6                     l3545:	
  9873  1BD6  3001               	movlw	1
  9874  1BD7  00A5               	movwf	??___ftpack^(0+128)
  9875  1BD8  0825               	movf	??___ftpack^(0+128),w
  9876  1BD9  07A3               	addwf	___ftpack@exp^(0+128),f
  9877  1BDA  3001               	movlw	1
  9878  1BDB                     u4195:	
  9879  1BDB  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  9880  1BDC  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  9881  1BDD  0CA0               	rrf	___ftpack@arg^(0+128),f
  9882  1BDE  0B89               	decfsz	9,f
  9883  1BDF  2BDB               	goto	u4195
  9884  1BE0                     l3547:	
  9885  1BE0  30FE               	movlw	254
  9886  1BE1  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  9887  1BE2  1903               	btfsc	3,2
  9888  1BE3  2BF9               	goto	l1081
  9889  1BE4  2BD6               	goto	l3545
  9890  1BE5                     l3549:	
  9891  1BE5  3001               	movlw	1
  9892  1BE6  00A5               	movwf	??___ftpack^(0+128)
  9893  1BE7  0825               	movf	??___ftpack^(0+128),w
  9894  1BE8  07A3               	addwf	___ftpack@exp^(0+128),f
  9895  1BE9  3001               	movlw	1
  9896  1BEA  07A0               	addwf	___ftpack@arg^(0+128),f
  9897  1BEB  3000               	movlw	0
  9898  1BEC  1803               	skipnc
  9899  1BED  3001               	movlw	1
  9900  1BEE  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  9901  1BEF  3000               	movlw	0
  9902  1BF0  1803               	skipnc
  9903  1BF1  3001               	movlw	1
  9904  1BF2  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  9905  1BF3  3001               	movlw	1
  9906  1BF4                     u4215:	
  9907  1BF4  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  9908  1BF5  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  9909  1BF6  0CA0               	rrf	___ftpack@arg^(0+128),f
  9910  1BF7  0B89               	decfsz	9,f
  9911  1BF8  2BF4               	goto	u4215
  9912  1BF9                     l1081:	
  9913  1BF9  30FF               	movlw	255
  9914  1BFA  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  9915  1BFB  1903               	btfsc	3,2
  9916  1BFC  2C06               	goto	l3557
  9917  1BFD  2BE5               	goto	l3549
  9918  1BFE                     l3555:	
  9919  1BFE  3001               	movlw	1
  9920  1BFF  02A3               	subwf	___ftpack@exp^(0+128),f
  9921  1C00  3001               	movlw	1
  9922  1C01                     u4235:	
  9923  1C01  35A0               	lslf	___ftpack@arg^(0+128),f
  9924  1C02  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  9925  1C03  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  9926  1C04  0B89               	decfsz	9,f
  9927  1C05  2C01               	goto	u4235
  9928  1C06                     l3557:	
  9929  1C06  1FA1               	btfss	(___ftpack@arg+1)^(0+128),7
  9930  1C07  2BFE               	goto	l3555
  9931  1C08  1823               	btfsc	___ftpack@exp^(0+128),0
  9932  1C09  2C10               	goto	l1087
  9933  1C0A  30FF               	movlw	255
  9934  1C0B  05A0               	andwf	___ftpack@arg^(0+128),f
  9935  1C0C  307F               	movlw	127
  9936  1C0D  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  9937  1C0E  30FF               	movlw	255
  9938  1C0F  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  9939  1C10                     l1087:	
  9940  1C10  1003               	clrc
  9941  1C11  0CA3               	rrf	___ftpack@exp^(0+128),f
  9942  1C12  0823               	movf	___ftpack@exp^(0+128),w
  9943  1C13  00A5               	movwf	??___ftpack^(0+128)
  9944  1C14  01A6               	clrf	(??___ftpack^(0+128)+1)
  9945  1C15  01A7               	clrf	(??___ftpack^(0+128)+2)
  9946  1C16  3010               	movlw	16
  9947  1C17                     u4265:	
  9948  1C17  35A5               	lslf	??___ftpack^(0+128),f
  9949  1C18  0DA6               	rlf	(??___ftpack^(0+128)+1),f
  9950  1C19  0DA7               	rlf	(??___ftpack^(0+128)+2),f
  9951  1C1A  0B89               	decfsz	9,f
  9952  1C1B  2C17               	goto	u4265
  9953  1C1C  0825               	movf	??___ftpack^(0+128),w
  9954  1C1D  04A0               	iorwf	___ftpack@arg^(0+128),f
  9955  1C1E  0826               	movf	(??___ftpack+1)^(0+128),w
  9956  1C1F  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  9957  1C20  0827               	movf	(??___ftpack+2)^(0+128),w
  9958  1C21  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  9959  1C22  0824               	movf	___ftpack@sign^(0+128),w
  9960  1C23  1903               	btfsc	3,2
  9961  1C24  0008               	return
  9962  1C25  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  9963  1C26  0008               	return
  9964  1C27                     __end_of___ftpack:	
  9965                           
  9966                           	psect	text34
  9967  1E70                     __ptext34:	
  9968 ;; *************** function ___aldiv *****************
  9969 ;; Defined at:
  9970 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\aldiv.c"
  9971 ;; Parameters:    Size  Location     Type
  9972 ;;  divisor         4    0[BANK1 ] long 
  9973 ;;  dividend        4    4[BANK1 ] long 
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;  quotient        4   11[BANK1 ] long 
  9976 ;;  sign            1   10[BANK1 ] unsigned char 
  9977 ;;  counter         1    9[BANK1 ] unsigned char 
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  4    0[BANK1 ] long 
  9980 ;; Registers used:
  9981 ;;		wreg, status,2, status,0
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9987 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9988 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9989 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9990 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9991 ;;Total ram usage:       15 bytes
  9992 ;; Hardware stack levels used:    1
  9993 ;; Hardware stack levels required when called:    3
  9994 ;; This function calls:
  9995 ;;		Nothing
  9996 ;; This function is called by:
  9997 ;;		_Adaptive_base_pid
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           
 10002                           ;psect for function ___aldiv
 10003  1E70                     ___aldiv:	
 10004                           
 10005                           ;incstack = 0
 10006                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10007  1E70  0021               	movlb	1	; select bank1
 10008  1E71  01AA               	clrf	___aldiv@sign^(0+128)
 10009  1E72  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
 10010  1E73  2E81               	goto	l975
 10011  1E74  09A0               	comf	___aldiv@divisor^(0+128),f
 10012  1E75  09A1               	comf	(___aldiv@divisor+1)^(0+128),f
 10013  1E76  09A2               	comf	(___aldiv@divisor+2)^(0+128),f
 10014  1E77  09A3               	comf	(___aldiv@divisor+3)^(0+128),f
 10015  1E78  0AA0               	incf	___aldiv@divisor^(0+128),f
 10016  1E79  1903               	skipnz
 10017  1E7A  0AA1               	incf	(___aldiv@divisor+1)^(0+128),f
 10018  1E7B  1903               	skipnz
 10019  1E7C  0AA2               	incf	(___aldiv@divisor+2)^(0+128),f
 10020  1E7D  1903               	skipnz
 10021  1E7E  0AA3               	incf	(___aldiv@divisor+3)^(0+128),f
 10022  1E7F  01AA               	clrf	___aldiv@sign^(0+128)
 10023  1E80  0AAA               	incf	___aldiv@sign^(0+128),f
 10024  1E81                     l975:	
 10025  1E81  1FA7               	btfss	(___aldiv@dividend+3)^(0+128),7
 10026  1E82  2E92               	goto	l3719
 10027  1E83  09A4               	comf	___aldiv@dividend^(0+128),f
 10028  1E84  09A5               	comf	(___aldiv@dividend+1)^(0+128),f
 10029  1E85  09A6               	comf	(___aldiv@dividend+2)^(0+128),f
 10030  1E86  09A7               	comf	(___aldiv@dividend+3)^(0+128),f
 10031  1E87  0AA4               	incf	___aldiv@dividend^(0+128),f
 10032  1E88  1903               	skipnz
 10033  1E89  0AA5               	incf	(___aldiv@dividend+1)^(0+128),f
 10034  1E8A  1903               	skipnz
 10035  1E8B  0AA6               	incf	(___aldiv@dividend+2)^(0+128),f
 10036  1E8C  1903               	skipnz
 10037  1E8D  0AA7               	incf	(___aldiv@dividend+3)^(0+128),f
 10038  1E8E  3001               	movlw	1
 10039  1E8F  00A8               	movwf	??___aldiv^(0+128)
 10040  1E90  0828               	movf	??___aldiv^(0+128),w
 10041  1E91  06AA               	xorwf	___aldiv@sign^(0+128),f
 10042  1E92                     l3719:	
 10043  1E92  3000               	movlw	0
 10044  1E93  00AE               	movwf	(___aldiv@quotient+3)^(0+128)
 10045  1E94  3000               	movlw	0
 10046  1E95  00AD               	movwf	(___aldiv@quotient+2)^(0+128)
 10047  1E96  3000               	movlw	0
 10048  1E97  00AC               	movwf	(___aldiv@quotient+1)^(0+128)
 10049  1E98  3000               	movlw	0
 10050  1E99  00AB               	movwf	___aldiv@quotient^(0+128)
 10051  1E9A  0823               	movf	(___aldiv@divisor+3)^(0+128),w
 10052  1E9B  0422               	iorwf	(___aldiv@divisor+2)^(0+128),w
 10053  1E9C  0421               	iorwf	(___aldiv@divisor+1)^(0+128),w
 10054  1E9D  0420               	iorwf	___aldiv@divisor^(0+128),w
 10055  1E9E  1903               	skipnz
 10056  1E9F  2EDB               	goto	l3741
 10057  1EA0  01A9               	clrf	___aldiv@counter^(0+128)
 10058  1EA1  0AA9               	incf	___aldiv@counter^(0+128),f
 10059  1EA2                     l3727:	
 10060  1EA2  1BA3               	btfsc	(___aldiv@divisor+3)^(0+128),7
 10061  1EA3  2EB0               	goto	l3729
 10062  1EA4  3001               	movlw	1
 10063  1EA5                     u4515:	
 10064  1EA5  35A0               	lslf	___aldiv@divisor^(0+128),f
 10065  1EA6  0DA1               	rlf	(___aldiv@divisor+1)^(0+128),f
 10066  1EA7  0DA2               	rlf	(___aldiv@divisor+2)^(0+128),f
 10067  1EA8  0DA3               	rlf	(___aldiv@divisor+3)^(0+128),f
 10068  1EA9  0B89               	decfsz	9,f
 10069  1EAA  2EA5               	goto	u4515
 10070  1EAB  3001               	movlw	1
 10071  1EAC  00A8               	movwf	??___aldiv^(0+128)
 10072  1EAD  0828               	movf	??___aldiv^(0+128),w
 10073  1EAE  07A9               	addwf	___aldiv@counter^(0+128),f
 10074  1EAF  2EA2               	goto	l3727
 10075  1EB0                     l3729:	
 10076  1EB0  3001               	movlw	1
 10077  1EB1                     u4535:	
 10078  1EB1  35AB               	lslf	___aldiv@quotient^(0+128),f
 10079  1EB2  0DAC               	rlf	(___aldiv@quotient+1)^(0+128),f
 10080  1EB3  0DAD               	rlf	(___aldiv@quotient+2)^(0+128),f
 10081  1EB4  0DAE               	rlf	(___aldiv@quotient+3)^(0+128),f
 10082  1EB5  0B89               	decfsz	9,f
 10083  1EB6  2EB1               	goto	u4535
 10084  1EB7  0823               	movf	(___aldiv@divisor+3)^(0+128),w
 10085  1EB8  0227               	subwf	(___aldiv@dividend+3)^(0+128),w
 10086  1EB9  1D03               	skipz
 10087  1EBA  2EC5               	goto	u4545
 10088  1EBB  0822               	movf	(___aldiv@divisor+2)^(0+128),w
 10089  1EBC  0226               	subwf	(___aldiv@dividend+2)^(0+128),w
 10090  1EBD  1D03               	skipz
 10091  1EBE  2EC5               	goto	u4545
 10092  1EBF  0821               	movf	(___aldiv@divisor+1)^(0+128),w
 10093  1EC0  0225               	subwf	(___aldiv@dividend+1)^(0+128),w
 10094  1EC1  1D03               	skipz
 10095  1EC2  2EC5               	goto	u4545
 10096  1EC3  0820               	movf	___aldiv@divisor^(0+128),w
 10097  1EC4  0224               	subwf	___aldiv@dividend^(0+128),w
 10098  1EC5                     u4545:	
 10099  1EC5  1C03               	skipc
 10100  1EC6  2ED0               	goto	l3737
 10101  1EC7  0820               	movf	___aldiv@divisor^(0+128),w
 10102  1EC8  02A4               	subwf	___aldiv@dividend^(0+128),f
 10103  1EC9  0821               	movf	(___aldiv@divisor+1)^(0+128),w
 10104  1ECA  3BA5               	subwfb	(___aldiv@dividend+1)^(0+128),f
 10105  1ECB  0822               	movf	(___aldiv@divisor+2)^(0+128),w
 10106  1ECC  3BA6               	subwfb	(___aldiv@dividend+2)^(0+128),f
 10107  1ECD  0823               	movf	(___aldiv@divisor+3)^(0+128),w
 10108  1ECE  3BA7               	subwfb	(___aldiv@dividend+3)^(0+128),f
 10109  1ECF  142B               	bsf	___aldiv@quotient^(0+128),0
 10110  1ED0                     l3737:	
 10111  1ED0  3001               	movlw	1
 10112  1ED1                     u4555:	
 10113  1ED1  36A3               	lsrf	(___aldiv@divisor+3)^(0+128),f
 10114  1ED2  0CA2               	rrf	(___aldiv@divisor+2)^(0+128),f
 10115  1ED3  0CA1               	rrf	(___aldiv@divisor+1)^(0+128),f
 10116  1ED4  0CA0               	rrf	___aldiv@divisor^(0+128),f
 10117  1ED5  0B89               	decfsz	9,f
 10118  1ED6  2ED1               	goto	u4555
 10119  1ED7  3001               	movlw	1
 10120  1ED8  02A9               	subwf	___aldiv@counter^(0+128),f
 10121  1ED9  1D03               	btfss	3,2
 10122  1EDA  2EB0               	goto	l3729
 10123  1EDB                     l3741:	
 10124  1EDB  082A               	movf	___aldiv@sign^(0+128),w
 10125  1EDC  1903               	btfsc	3,2
 10126  1EDD  2EE9               	goto	l3745
 10127  1EDE  09AB               	comf	___aldiv@quotient^(0+128),f
 10128  1EDF  09AC               	comf	(___aldiv@quotient+1)^(0+128),f
 10129  1EE0  09AD               	comf	(___aldiv@quotient+2)^(0+128),f
 10130  1EE1  09AE               	comf	(___aldiv@quotient+3)^(0+128),f
 10131  1EE2  0AAB               	incf	___aldiv@quotient^(0+128),f
 10132  1EE3  1903               	skipnz
 10133  1EE4  0AAC               	incf	(___aldiv@quotient+1)^(0+128),f
 10134  1EE5  1903               	skipnz
 10135  1EE6  0AAD               	incf	(___aldiv@quotient+2)^(0+128),f
 10136  1EE7  1903               	skipnz
 10137  1EE8  0AAE               	incf	(___aldiv@quotient+3)^(0+128),f
 10138  1EE9                     l3745:	
 10139  1EE9  082E               	movf	(___aldiv@quotient+3)^(0+128),w
 10140  1EEA  00A3               	movwf	(?___aldiv+3)^(0+128)
 10141  1EEB  082D               	movf	(___aldiv@quotient+2)^(0+128),w
 10142  1EEC  00A2               	movwf	(?___aldiv+2)^(0+128)
 10143  1EED  082C               	movf	(___aldiv@quotient+1)^(0+128),w
 10144  1EEE  00A1               	movwf	(?___aldiv+1)^(0+128)
 10145  1EEF  082B               	movf	___aldiv@quotient^(0+128),w
 10146  1EF0  00A0               	movwf	?___aldiv^(0+128)
 10147  1EF1  0008               	return
 10148  1EF2                     __end_of___aldiv:	
 10149                           
 10150                           	psect	text35
 10151  19E7                     __ptext35:	
 10152 ;; *************** function _Update_PWM *****************
 10153 ;; Defined at:
 10154 ;;		line 1124 in file "main.c"
 10155 ;; Parameters:    Size  Location     Type
 10156 ;;  setwsduty       2   51[BANK1 ] unsigned int 
 10157 ;; Auto vars:     Size  Location     Type
 10158 ;;  Dutycnt         2   57[BANK1 ] unsigned int 
 10159 ;;  Temp1           2   55[BANK1 ] unsigned int 
 10160 ;; Return value:  Size  Location     Type
 10161 ;;		None               void
 10162 ;; Registers used:
 10163 ;;		wreg, status,2, status,0
 10164 ;; Tracked objects:
 10165 ;;		On entry : 0/0
 10166 ;;		On exit  : 0/0
 10167 ;;		Unchanged: 0/0
 10168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10169 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10170 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10171 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10172 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10173 ;;Total ram usage:        8 bytes
 10174 ;; Hardware stack levels used:    1
 10175 ;; Hardware stack levels required when called:    3
 10176 ;; This function calls:
 10177 ;;		Nothing
 10178 ;; This function is called by:
 10179 ;;		_Adaptive_base_pid
 10180 ;;		_main
 10181 ;;		_key_application
 10182 ;;		_detect_display_error
 10183 ;; This function uses a non-reentrant model
 10184 ;;
 10185                           
 10186                           
 10187                           ;psect for function _Update_PWM
 10188  19E7                     _Update_PWM:	
 10189                           
 10190                           ;main.c: 1126: unsigned int Temp1=0x00, Dutycnt=0;
 10191                           
 10192                           ;incstack = 0
 10193                           ; Regs used in _Update_PWM: [wreg+status,2+status,0]
 10194  19E7  0021               	movlb	1	; select bank1
 10195  19E8  01D7               	clrf	Update_PWM@Temp1^(0+128)
 10196  19E9  01D8               	clrf	(Update_PWM@Temp1+1)^(0+128)
 10197  19EA  01D9               	clrf	Update_PWM@Dutycnt^(0+128)
 10198  19EB  01DA               	clrf	(Update_PWM@Dutycnt+1)^(0+128)
 10199                           
 10200                           ;main.c: 1127: Dutycnt=setwsduty;
 10201  19EC  0854               	movf	(Update_PWM@setwsduty+1)^(0+128),w
 10202  19ED  01DA               	clrf	(Update_PWM@Dutycnt+1)^(0+128)
 10203  19EE  07DA               	addwf	(Update_PWM@Dutycnt+1)^(0+128),f
 10204  19EF  0853               	movf	Update_PWM@setwsduty^(0+128),w
 10205  19F0  01D9               	clrf	Update_PWM@Dutycnt^(0+128)
 10206  19F1  07D9               	addwf	Update_PWM@Dutycnt^(0+128),f
 10207                           
 10208                           ;main.c: 1128: CCP1CONbits.DC1B=Dutycnt;
 10209  19F2  0859               	movf	Update_PWM@Dutycnt^(0+128),w
 10210  19F3  00D5               	movwf	??_Update_PWM^(0+128)
 10211  19F4  0ED5               	swapf	??_Update_PWM^(0+128),f
 10212  19F5  0025               	movlb	5	; select bank5
 10213  19F6  0813               	movf	19,w	;volatile
 10214  19F7  0021               	movlb	1	; select bank1
 10215  19F8  0655               	xorwf	??_Update_PWM^(0+128),w
 10216  19F9  39CF               	andlw	-49
 10217  19FA  0655               	xorwf	??_Update_PWM^(0+128),w
 10218  19FB  0025               	movlb	5	; select bank5
 10219  19FC  0093               	movwf	19	;volatile
 10220                           
 10221                           ;main.c: 1129: Temp1=Dutycnt >> 2;
 10222  19FD  0021               	movlb	1	; select bank1
 10223  19FE  085A               	movf	(Update_PWM@Dutycnt+1)^(0+128),w
 10224  19FF  00D6               	movwf	(??_Update_PWM^(0+128)+1)
 10225  1A00  0859               	movf	Update_PWM@Dutycnt^(0+128),w
 10226  1A01  00D5               	movwf	??_Update_PWM^(0+128)
 10227  1A02  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
 10228  1A03  0CD5               	rrf	??_Update_PWM^(0+128),f
 10229  1A04  36D6               	lsrf	(??_Update_PWM^(0+128)+1),f
 10230  1A05  0CD5               	rrf	??_Update_PWM^(0+128),f
 10231  1A06  0855               	movf	??_Update_PWM^(0+128),w
 10232  1A07  00D7               	movwf	Update_PWM@Temp1^(0+128)
 10233  1A08  0856               	movf	(??_Update_PWM+1)^(0+128),w
 10234  1A09  00D8               	movwf	(Update_PWM@Temp1+1)^(0+128)
 10235                           
 10236                           ;main.c: 1130: CCPR1L=Temp1;
 10237  1A0A  0857               	movf	Update_PWM@Temp1^(0+128),w
 10238  1A0B  0025               	movlb	5	; select bank5
 10239  1A0C  0091               	movwf	17	;volatile
 10240                           
 10241                           ;main.c: 1131: iTest = Temp1;
 10242  1A0D  0021               	movlb	1	; select bank1
 10243  1A0E  0858               	movf	(Update_PWM@Temp1+1)^(0+128),w
 10244  1A0F  0024               	movlb	4	; select bank4
 10245  1A10  01BD               	clrf	(_iTest+1)^(0+512)
 10246  1A11  07BD               	addwf	(_iTest+1)^(0+512),f
 10247  1A12  0021               	movlb	1	; select bank1
 10248  1A13  0857               	movf	Update_PWM@Temp1^(0+128),w
 10249  1A14  0024               	movlb	4	; select bank4
 10250  1A15  01BC               	clrf	_iTest^(0+512)
 10251  1A16  07BC               	addwf	_iTest^(0+512),f
 10252  1A17  0008               	return
 10253  1A18                     __end_of_Update_PWM:	
 10254                           
 10255                           	psect	intentry
 10256  0004                     __pintentry:	
 10257 ;; *************** function _ISR_Function *****************
 10258 ;; Defined at:
 10259 ;;		line 41 in file "main.c"
 10260 ;; Parameters:    Size  Location     Type
 10261 ;;		None
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;		None
 10264 ;; Return value:  Size  Location     Type
 10265 ;;		None               void
 10266 ;; Registers used:
 10267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10268 ;; Tracked objects:
 10269 ;;		On entry : 0/0
 10270 ;;		On exit  : 0/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10275 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10276 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10277 ;;Total ram usage:       11 bytes
 10278 ;; Hardware stack levels used:    1
 10279 ;; Hardware stack levels required when called:    2
 10280 ;; This function calls:
 10281 ;;		_Display
 10282 ;;		i1_Update_PWM
 10283 ;;		i1___aldiv
 10284 ;;		i1___ftadd
 10285 ;;		i1___ftdiv
 10286 ;;		i1___ftmul
 10287 ;;		i1___fttol
 10288 ;;		i1___lwtoft
 10289 ;; This function is called by:
 10290 ;;		Interrupt level 1
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294  0004                     _ISR_Function:	
 10295                           
 10296                           ;incstack = 0
 10297                           ; Regs used in _ISR_Function: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10298  0004  147E               	bsf	126,0	;set compiler interrupt flag
 10299  0005  3180               	pagesel	$
 10300  0006  0020               	movlb	0	; select bank0
 10301  0007  087F               	movf	127,w
 10302  0008  00D3               	movwf	??_ISR_Function+8
 10303                           
 10304                           ;main.c: 43: if(INTCONbits.TMR0IF==1)
 10305  0009  1D0B               	btfss	11,2	;volatile
 10306  000A  28D4               	goto	i1l5011
 10307                           
 10308                           ;main.c: 44: {
 10309                           ;main.c: 45: INTCONbits.TMR0IF=0;
 10310  000B  110B               	bcf	11,2	;volatile
 10311                           
 10312                           ;main.c: 46: TMR0=0x00;
 10313  000C  0195               	clrf	21	;volatile
 10314                           
 10315                           ;main.c: 47: updatedispf=0;
 10316  000D  0023               	movlb	3	; select bank3
 10317  000E  01D8               	clrf	_updatedispf^(0+384)	;volatile
 10318                           
 10319                           ;main.c: 48: Display();
 10320  000F  3185  2556  3180   	fcall	_Display
 10321                           
 10322                           ;main.c: 49: count_1ms++;
 10323  0012  3001               	movlw	1
 10324  0013  0023               	movlb	3	; select bank3
 10325  0014  07B0               	addwf	_count_1ms^(0+384),f	;volatile
 10326  0015  3000               	movlw	0
 10327  0016  3DB1               	addwfc	(_count_1ms+1)^(0+384),f	;volatile
 10328                           
 10329                           ;main.c: 50: count_2ms++;
 10330  0017  3001               	movlw	1
 10331  0018  0020               	movlb	0	; select bank0
 10332  0019  00CB               	movwf	??_ISR_Function
 10333  001A  084B               	movf	??_ISR_Function,w
 10334  001B  0022               	movlb	2	; select bank2
 10335  001C  07C2               	addwf	_count_2ms^(0+256),f	;volatile
 10336                           
 10337                           ;main.c: 51: count_1msec++;
 10338  001D  3001               	movlw	1
 10339  001E  0020               	movlb	0	; select bank0
 10340  001F  00CB               	movwf	??_ISR_Function
 10341  0020  084B               	movf	??_ISR_Function,w
 10342  0021  0022               	movlb	2	; select bank2
 10343  0022  07C1               	addwf	_count_1msec^(0+256),f
 10344                           
 10345                           ;main.c: 52: count_pid++;
 10346  0023  3001               	movlw	1
 10347  0024  0020               	movlb	0	; select bank0
 10348  0025  00CB               	movwf	??_ISR_Function
 10349  0026  084B               	movf	??_ISR_Function,w
 10350  0027  0023               	movlb	3	; select bank3
 10351  0028  07CF               	addwf	_count_pid^(0+384),f	;volatile
 10352                           
 10353                           ;main.c: 53: count_transms++;
 10354  0029  3001               	movlw	1
 10355  002A  0024               	movlb	4	; select bank4
 10356  002B  07AA               	addwf	_count_transms^(0+512),f	;volatile
 10357  002C  3000               	movlw	0
 10358  002D  3DAB               	addwfc	(_count_transms+1)^(0+512),f	;volatile
 10359                           
 10360                           ;main.c: 56: if(cGasRlyClrfg == 1)
 10361  002E  0022               	movlb	2	; select bank2
 10362  002F  083A               	movf	_cGasRlyClrfg^(0+256),w
 10363  0030  3A01               	xorlw	1
 10364  0031  1D03               	skipz
 10365  0032  2847               	goto	i1l4955
 10366                           
 10367                           ;main.c: 57: {
 10368                           ;main.c: 58: if(iGasDbCnt == 0 )
 10369  0033  0023               	movlb	3	; select bank3
 10370  0034  0837               	movf	(_iGasDbCnt+1)^(0+384),w
 10371  0035  0436               	iorwf	_iGasDbCnt^(0+384),w
 10372  0036  1D03               	skipz
 10373  0037  2842               	goto	i1l4953
 10374                           
 10375                           ;main.c: 59: {
 10376                           ;main.c: 60: TypeU.TypeS.gason =0;
 10377  0038  0020               	movlb	0	; select bank0
 10378  0039  11E8               	bcf	_TypeU,3
 10379                           
 10380                           ;main.c: 61: PORTCbits.RC3 =0;
 10381  003A  118E               	bcf	14,3	;volatile
 10382                           
 10383                           ;main.c: 62: dispupdatef =1;
 10384  003B  3001               	movlw	1
 10385  003C  00CB               	movwf	??_ISR_Function
 10386  003D  084B               	movf	??_ISR_Function,w
 10387  003E  00EF               	movwf	_dispupdatef	;volatile
 10388                           
 10389                           ;main.c: 63: cGasRlyClrfg = 0;
 10390  003F  0022               	movlb	2	; select bank2
 10391  0040  01BA               	clrf	_cGasRlyClrfg^(0+256)
 10392                           
 10393                           ;main.c: 64: }
 10394  0041  2847               	goto	i1l4955
 10395  0042                     i1l4953:	
 10396                           
 10397                           ;main.c: 65: else
 10398                           ;main.c: 66: {
 10399                           ;main.c: 67: iGasDbCnt--;
 10400  0042  3001               	movlw	1
 10401  0043  0023               	movlb	3	; select bank3
 10402  0044  02B6               	subwf	_iGasDbCnt^(0+384),f
 10403  0045  3000               	movlw	0
 10404  0046  3BB7               	subwfb	(_iGasDbCnt+1)^(0+384),f
 10405  0047                     i1l4955:	
 10406                           
 10407                           ;main.c: 68: }
 10408                           ;main.c: 69: }
 10409                           ;main.c: 70: if(RCSTAbits.FERR==1 || RCSTAbits.OERR==1)
 10410  0047  0023               	movlb	3	; select bank3
 10411  0048  191D               	btfsc	29,2	;volatile
 10412  0049  284C               	goto	i1l561
 10413  004A  1C9D               	btfss	29,1	;volatile
 10414  004B  2850               	goto	i1l4959
 10415  004C                     i1l561:	
 10416                           
 10417                           ;main.c: 71: {
 10418                           ;main.c: 72: RCSTAbits.SPEN=0;
 10419  004C  139D               	bcf	29,7	;volatile
 10420                           
 10421                           ;main.c: 73: RCSTAbits.CREN=0;
 10422  004D  121D               	bcf	29,4	;volatile
 10423                           
 10424                           ;main.c: 74: RCSTAbits.SPEN=1;
 10425  004E  179D               	bsf	29,7	;volatile
 10426                           
 10427                           ;main.c: 75: RCSTAbits.CREN=1;
 10428  004F  161D               	bsf	29,4	;volatile
 10429  0050                     i1l4959:	
 10430                           
 10431                           ;main.c: 76: }
 10432                           ;main.c: 77: if(count_1ms>=500)
 10433  0050  3001               	movlw	1
 10434  0051  0231               	subwf	(_count_1ms+1)^(0+384),w	;volatile
 10435  0052  30F4               	movlw	244
 10436  0053  1903               	skipnz
 10437  0054  0230               	subwf	_count_1ms^(0+384),w	;volatile
 10438  0055  1C03               	skipc
 10439  0056  287F               	goto	i1l4977
 10440                           
 10441                           ;main.c: 78: {
 10442                           ;main.c: 79: count_1ms=0;
 10443  0057  01B0               	clrf	_count_1ms^(0+384)	;volatile
 10444  0058  01B1               	clrf	(_count_1ms+1)^(0+384)	;volatile
 10445                           
 10446                           ;main.c: 80: comm_error_count++;
 10447  0059  3001               	movlw	1
 10448  005A  0020               	movlb	0	; select bank0
 10449  005B  00CB               	movwf	??_ISR_Function
 10450  005C  084B               	movf	??_ISR_Function,w
 10451  005D  0022               	movlb	2	; select bank2
 10452  005E  07C0               	addwf	_comm_error_count^(0+256),f	;volatile
 10453                           
 10454                           ;main.c: 82: if(weldmode=='P' || weldmode=='G')
 10455  005F  0020               	movlb	0	; select bank0
 10456  0060  0867               	movf	_weldmode,w	;volatile
 10457  0061  3A50               	xorlw	80
 10458  0062  1903               	skipnz
 10459  0063  2868               	goto	i1l4969
 10460  0064  0867               	movf	_weldmode,w	;volatile
 10461  0065  3A47               	xorlw	71
 10462  0066  1D03               	skipz
 10463  0067  287C               	goto	i1l4975
 10464  0068                     i1l4969:	
 10465                           
 10466                           ;main.c: 83: {
 10467                           ;main.c: 84: if(comm_error_count>3)
 10468  0068  3004               	movlw	4
 10469  0069  0022               	movlb	2	; select bank2
 10470  006A  0240               	subwf	_comm_error_count^(0+256),w	;volatile
 10471  006B  1C03               	skipc
 10472  006C  287A               	goto	i1l4973
 10473                           
 10474                           ;main.c: 85: {
 10475                           ;main.c: 86: error8=1;
 10476  006D  3001               	movlw	1
 10477  006E  0020               	movlb	0	; select bank0
 10478  006F  00CB               	movwf	??_ISR_Function
 10479  0070  084B               	movf	??_ISR_Function,w
 10480  0071  0022               	movlb	2	; select bank2
 10481  0072  00C6               	movwf	_error8^(0+256)	;volatile
 10482                           
 10483                           ;main.c: 87: comm_error_count=4;
 10484  0073  3004               	movlw	4
 10485  0074  0020               	movlb	0	; select bank0
 10486  0075  00CB               	movwf	??_ISR_Function
 10487  0076  084B               	movf	??_ISR_Function,w
 10488  0077  0022               	movlb	2	; select bank2
 10489  0078  00C0               	movwf	_comm_error_count^(0+256)	;volatile
 10490                           
 10491                           ;main.c: 88: }
 10492  0079  287F               	goto	i1l4977
 10493  007A                     i1l4973:	
 10494                           
 10495                           ;main.c: 89: else
 10496                           ;main.c: 90: error8=0;
 10497  007A  01C6               	clrf	_error8^(0+256)	;volatile
 10498                           
 10499                           ;main.c: 91: }
 10500  007B  287F               	goto	i1l4977
 10501  007C                     i1l4975:	
 10502                           
 10503                           ;main.c: 92: else
 10504                           ;main.c: 93: {
 10505                           ;main.c: 94: error8=0;
 10506  007C  0022               	movlb	2	; select bank2
 10507  007D  01C6               	clrf	_error8^(0+256)	;volatile
 10508                           
 10509                           ;main.c: 95: comm_error_count=0;
 10510  007E  01C0               	clrf	_comm_error_count^(0+256)	;volatile
 10511  007F                     i1l4977:	
 10512                           
 10513                           ;main.c: 96: }
 10514                           ;main.c: 112: }
 10515                           ;main.c: 113: if(count_2ms >=1)
 10516  007F  0022               	movlb	2	; select bank2
 10517  0080  0842               	movf	_count_2ms^(0+256),w	;volatile
 10518  0081  1903               	btfsc	3,2
 10519  0082  288A               	goto	i1l4983
 10520                           
 10521                           ;main.c: 114: {
 10522                           ;main.c: 115: count_2ms=0;
 10523  0083  01C2               	clrf	_count_2ms^(0+256)	;volatile
 10524                           
 10525                           ;main.c: 116: read_enc1f=1;
 10526  0084  3001               	movlw	1
 10527  0085  0020               	movlb	0	; select bank0
 10528  0086  00CB               	movwf	??_ISR_Function
 10529  0087  084B               	movf	??_ISR_Function,w
 10530  0088  0022               	movlb	2	; select bank2
 10531  0089  00D9               	movwf	_read_enc1f^(0+256)	;volatile
 10532  008A                     i1l4983:	
 10533                           
 10534                           ;main.c: 117: }
 10535                           ;main.c: 119: if(count_1msec >= 10)
 10536  008A  300A               	movlw	10
 10537  008B  0241               	subwf	_count_1msec^(0+256),w
 10538  008C  1C03               	skipc
 10539  008D  28D4               	goto	i1l5011
 10540                           
 10541                           ;main.c: 120: {
 10542                           ;main.c: 121: count_1msec=0;
 10543  008E  01C1               	clrf	_count_1msec^(0+256)
 10544                           
 10545                           ;main.c: 122: if(kpressread==0)
 10546  008F  08C9               	movf	_kpressread^(0+256),f
 10547  0090  1D03               	skipz
 10548  0091  289B               	goto	i1l4993
 10549                           
 10550                           ;main.c: 123: {
 10551                           ;main.c: 124: torchstatus1=PORTCbits.RC5;
 10552  0092  3000               	movlw	0
 10553  0093  0020               	movlb	0	; select bank0
 10554  0094  1A8E               	btfsc	14,5	;volatile
 10555  0095  3001               	movlw	1
 10556  0096  0022               	movlb	2	; select bank2
 10557  0097  00DF               	movwf	_torchstatus1^(0+256)
 10558                           
 10559                           ;main.c: 125: kpressread=1;
 10560  0098  01C9               	clrf	_kpressread^(0+256)
 10561  0099  0AC9               	incf	_kpressread^(0+256),f
 10562                           
 10563                           ;main.c: 126: }
 10564  009A  28D4               	goto	i1l5011
 10565  009B                     i1l4993:	
 10566                           
 10567                           ;main.c: 127: else
 10568                           ;main.c: 128: {
 10569                           ;main.c: 129: kpressread=0;
 10570  009B  01C9               	clrf	_kpressread^(0+256)
 10571                           
 10572                           ;main.c: 130: torchstatus2=PORTCbits.RC5;
 10573  009C  3000               	movlw	0
 10574  009D  0020               	movlb	0	; select bank0
 10575  009E  1A8E               	btfsc	14,5	;volatile
 10576  009F  3001               	movlw	1
 10577  00A0  0022               	movlb	2	; select bank2
 10578  00A1  00E0               	movwf	_torchstatus2^(0+256)
 10579                           
 10580                           ;main.c: 131: tans =(torchstatus1 == torchstatus2 ? 1:0);
 10581  00A2  085F               	movf	_torchstatus1^(0+256),w
 10582  00A3  0660               	xorwf	_torchstatus2^(0+256),w
 10583  00A4  3000               	movlw	0
 10584  00A5  1903               	skipnz
 10585  00A6  3001               	movlw	1
 10586  00A7  0020               	movlb	0	; select bank0
 10587  00A8  00CB               	movwf	??_ISR_Function
 10588  00A9  084B               	movf	??_ISR_Function,w
 10589  00AA  0022               	movlb	2	; select bank2
 10590  00AB  00DE               	movwf	_tans^(0+256)
 10591                           
 10592                           ;main.c: 132: if(tans==1)
 10593  00AC  085E               	movf	_tans^(0+256),w
 10594  00AD  3A01               	xorlw	1
 10595  00AE  1D03               	skipz
 10596  00AF  28C6               	goto	i1l5005
 10597                           
 10598                           ;main.c: 133: {
 10599                           ;main.c: 134: TORCH=(torchstatus2 == 0 ? 'P':'X');
 10600  00B0  0860               	movf	_torchstatus2^(0+256),w
 10601  00B1  1903               	btfsc	3,2
 10602  00B2  28B5               	goto	i1l5001
 10603  00B3  3058               	movlw	88
 10604  00B4  28B6               	goto	L21
 10605  00B5                     i1l5001:	
 10606  00B5  3050               	movlw	80
 10607  00B6                     L21:	
 10608  00B6  00FC               	movwf	_ISR_Function$1186
 10609  00B7  3000               	movlw	0
 10610  00B8  00FD               	movwf	_ISR_Function$1186+1
 10611  00B9  087C               	movf	_ISR_Function$1186,w
 10612  00BA  0020               	movlb	0	; select bank0
 10613  00BB  00CB               	movwf	??_ISR_Function
 10614  00BC  084B               	movf	??_ISR_Function,w
 10615  00BD  0022               	movlb	2	; select bank2
 10616  00BE  00EC               	movwf	_TORCH^(0+256)
 10617                           
 10618                           ;main.c: 135: if(TORCH=='P')
 10619  00BF  086C               	movf	_TORCH^(0+256),w
 10620  00C0  3A50               	xorlw	80
 10621  00C1  1D03               	skipz
 10622  00C2  28C5               	goto	i1l578
 10623                           
 10624                           ;main.c: 136: {
 10625                           ;main.c: 137: wfstatusu.wfstatuss.torchonstatus=1;
 10626  00C3  14EB               	bsf	_wfstatusu^(0+256),1
 10627                           
 10628                           ;main.c: 138: }
 10629  00C4  28C6               	goto	i1l5005
 10630  00C5                     i1l578:	
 10631                           
 10632                           ;main.c: 139: else
 10633                           ;main.c: 140: {
 10634                           ;main.c: 141: wfstatusu.wfstatuss.torchonstatus=0;
 10635  00C5  10EB               	bcf	_wfstatusu^(0+256),1
 10636  00C6                     i1l5005:	
 10637                           
 10638                           ;main.c: 142: }
 10639                           ;main.c: 143: }
 10640                           ;main.c: 144: if(prevTORCH != TORCH)
 10641  00C6  086D               	movf	_prevTORCH^(0+256),w
 10642  00C7  066C               	xorwf	_TORCH^(0+256),w
 10643  00C8  1903               	skipnz
 10644  00C9  28CD               	goto	i1l5009
 10645                           
 10646                           ;main.c: 145: {
 10647                           ;main.c: 146: count_1ms=0;
 10648  00CA  0023               	movlb	3	; select bank3
 10649  00CB  01B0               	clrf	_count_1ms^(0+384)	;volatile
 10650  00CC  01B1               	clrf	(_count_1ms+1)^(0+384)	;volatile
 10651  00CD                     i1l5009:	
 10652                           
 10653                           ;main.c: 149: }
 10654                           ;main.c: 150: prevTORCH = TORCH;
 10655  00CD  0022               	movlb	2	; select bank2
 10656  00CE  086C               	movf	_TORCH^(0+256),w
 10657  00CF  0020               	movlb	0	; select bank0
 10658  00D0  00CB               	movwf	??_ISR_Function
 10659  00D1  084B               	movf	??_ISR_Function,w
 10660  00D2  0022               	movlb	2	; select bank2
 10661  00D3  00ED               	movwf	_prevTORCH^(0+256)
 10662  00D4                     i1l5011:	
 10663                           
 10664                           ;main.c: 151: }
 10665                           ;main.c: 152: }
 10666                           ;main.c: 153: }
 10667                           ;main.c: 155: if(PIE1bits.TMR2IE & PIR1bits.TMR2IF)
 10668  00D4  0020               	movlb	0	; select bank0
 10669  00D5  0C11               	rrf	17,w	;volatile
 10670  00D6  3901               	andlw	1
 10671  00D7  00CB               	movwf	??_ISR_Function
 10672  00D8  0021               	movlb	1	; select bank1
 10673  00D9  0C11               	rrf	17,w	;volatile
 10674  00DA  3901               	andlw	1
 10675  00DB  0020               	movlb	0	; select bank0
 10676  00DC  054B               	andwf	??_ISR_Function,w
 10677  00DD  1903               	btfsc	3,2
 10678  00DE  28E1               	goto	i1l5015
 10679                           
 10680                           ;main.c: 156: {
 10681                           ;main.c: 157: PIR1bits.TMR2IF=0;
 10682  00DF  1091               	bcf	17,1	;volatile
 10683                           
 10684                           ;main.c: 158: return;
 10685  00E0  2CCC               	goto	i1l582
 10686  00E1                     i1l5015:	
 10687                           
 10688                           ;main.c: 159: }
 10689                           ;main.c: 160: if(PIE1bits.TXIE & PIR1bits.TXIF)
 10690  00E1  0E11               	swapf	17,w	;volatile
 10691  00E2  3901               	andlw	1
 10692  00E3  00CB               	movwf	??_ISR_Function
 10693  00E4  0021               	movlb	1	; select bank1
 10694  00E5  0E11               	swapf	17,w	;volatile
 10695  00E6  3901               	andlw	1
 10696  00E7  0020               	movlb	0	; select bank0
 10697  00E8  054B               	andwf	??_ISR_Function,w
 10698  00E9  1903               	btfsc	3,2
 10699  00EA  28ED               	goto	i1l5019
 10700                           
 10701                           ;main.c: 161: {
 10702                           ;main.c: 162: PIR1bits.TXIF=0;
 10703  00EB  1211               	bcf	17,4	;volatile
 10704                           
 10705                           ;main.c: 163: return;
 10706  00EC  2CCC               	goto	i1l582
 10707  00ED                     i1l5019:	
 10708                           
 10709                           ;main.c: 164: }
 10710                           ;main.c: 166: if(PIE2bits.CCP2IE & PIR2bits.CCP2IF)
 10711  00ED  0812               	movf	18,w	;volatile
 10712  00EE  3901               	andlw	1
 10713  00EF  00CB               	movwf	??_ISR_Function
 10714  00F0  0021               	movlb	1	; select bank1
 10715  00F1  0812               	movf	18,w	;volatile
 10716  00F2  3901               	andlw	1
 10717  00F3  0020               	movlb	0	; select bank0
 10718  00F4  054B               	andwf	??_ISR_Function,w
 10719  00F5  1903               	btfsc	3,2
 10720  00F6  2AB8               	goto	i1l5101
 10721                           
 10722                           ;main.c: 167: {
 10723                           ;main.c: 168: PIR2bits.CCP2IF =0;
 10724  00F7  1012               	bcf	18,0	;volatile
 10725                           
 10726                           ;main.c: 169: if(Count == 0)
 10727  00F8  0022               	movlb	2	; select bank2
 10728  00F9  08B2               	movf	_Count^(0+256),f	;volatile
 10729  00FA  1D03               	skipz
 10730  00FB  2911               	goto	i1l5027
 10731                           
 10732                           ;main.c: 170: {
 10733                           ;main.c: 171: OneH = CCPR2H;
 10734  00FC  0025               	movlb	5	; select bank5
 10735  00FD  0819               	movf	25,w	;volatile
 10736  00FE  0020               	movlb	0	; select bank0
 10737  00FF  00CB               	movwf	??_ISR_Function
 10738  0100  084B               	movf	??_ISR_Function,w
 10739  0101  0022               	movlb	2	; select bank2
 10740  0102  00B3               	movwf	_OneH^(0+256)	;volatile
 10741                           
 10742                           ;main.c: 172: OneL = CCPR2L;
 10743  0103  0025               	movlb	5	; select bank5
 10744  0104  0818               	movf	24,w	;volatile
 10745  0105  0020               	movlb	0	; select bank0
 10746  0106  00CB               	movwf	??_ISR_Function
 10747  0107  084B               	movf	??_ISR_Function,w
 10748  0108  0022               	movlb	2	; select bank2
 10749  0109  00B4               	movwf	_OneL^(0+256)	;volatile
 10750                           
 10751                           ;main.c: 173: Count = 1;
 10752  010A  3001               	movlw	1
 10753  010B  0020               	movlb	0	; select bank0
 10754  010C  00CB               	movwf	??_ISR_Function
 10755  010D  084B               	movf	??_ISR_Function,w
 10756  010E  0022               	movlb	2	; select bank2
 10757  010F  00B2               	movwf	_Count^(0+256)	;volatile
 10758                           
 10759                           ;main.c: 174: }
 10760  0110  2AB8               	goto	i1l5101
 10761  0111                     i1l5027:	
 10762                           
 10763                           ;main.c: 175: else
 10764                           ;main.c: 176: {
 10765                           ;main.c: 177: TwoH = CCPR2H;
 10766  0111  0025               	movlb	5	; select bank5
 10767  0112  0819               	movf	25,w	;volatile
 10768  0113  0020               	movlb	0	; select bank0
 10769  0114  00CB               	movwf	??_ISR_Function
 10770  0115  084B               	movf	??_ISR_Function,w
 10771  0116  0022               	movlb	2	; select bank2
 10772  0117  00B5               	movwf	_TwoH^(0+256)	;volatile
 10773                           
 10774                           ;main.c: 178: TwoL = CCPR2L;
 10775  0118  0025               	movlb	5	; select bank5
 10776  0119  0818               	movf	24,w	;volatile
 10777  011A  0020               	movlb	0	; select bank0
 10778  011B  00CB               	movwf	??_ISR_Function
 10779  011C  084B               	movf	??_ISR_Function,w
 10780  011D  0022               	movlb	2	; select bank2
 10781  011E  00B6               	movwf	_TwoL^(0+256)	;volatile
 10782                           
 10783                           ;main.c: 179: TMR1H = 0x00;
 10784  011F  0020               	movlb	0	; select bank0
 10785  0120  0197               	clrf	23	;volatile
 10786                           
 10787                           ;main.c: 180: TMR1L = 0x00;
 10788  0121  0196               	clrf	22	;volatile
 10789                           
 10790                           ;main.c: 181: Count = 0;
 10791  0122  0022               	movlb	2	; select bank2
 10792  0123  01B2               	clrf	_Count^(0+256)	;volatile
 10793                           
 10794                           ;main.c: 182: Two = TwoH;
 10795  0124  0835               	movf	_TwoH^(0+256),w	;volatile
 10796  0125  0020               	movlb	0	; select bank0
 10797  0126  00CB               	movwf	??_ISR_Function
 10798  0127  01CC               	clrf	??_ISR_Function+1
 10799  0128  084B               	movf	??_ISR_Function,w
 10800  0129  0023               	movlb	3	; select bank3
 10801  012A  00AE               	movwf	_Two^(0+384)	;volatile
 10802  012B  0020               	movlb	0	; select bank0
 10803  012C  084C               	movf	??_ISR_Function+1,w
 10804  012D  0023               	movlb	3	; select bank3
 10805  012E  00AF               	movwf	(_Two+1)^(0+384)	;volatile
 10806                           
 10807                           ;main.c: 183: Two <<= 8;
 10808  012F  3008               	movlw	8
 10809  0130                     u706_25:	
 10810  0130  35AE               	lslf	_Two^(0+384),f	;volatile
 10811  0131  0DAF               	rlf	(_Two+1)^(0+384),f	;volatile
 10812  0132  0B89               	decfsz	9,f
 10813  0133  2930               	goto	u706_25
 10814                           
 10815                           ;main.c: 184: Two |= TwoL;
 10816  0134  0022               	movlb	2	; select bank2
 10817  0135  0836               	movf	_TwoL^(0+256),w	;volatile
 10818  0136  0020               	movlb	0	; select bank0
 10819  0137  00CB               	movwf	??_ISR_Function
 10820  0138  01CC               	clrf	??_ISR_Function+1
 10821  0139  084B               	movf	??_ISR_Function,w
 10822  013A  0023               	movlb	3	; select bank3
 10823  013B  04AE               	iorwf	_Two^(0+384),f	;volatile
 10824  013C  0020               	movlb	0	; select bank0
 10825  013D  084C               	movf	??_ISR_Function+1,w
 10826  013E  0023               	movlb	3	; select bank3
 10827  013F  04AF               	iorwf	(_Two+1)^(0+384),f	;volatile
 10828                           
 10829                           ;main.c: 185: One = OneH;
 10830  0140  0022               	movlb	2	; select bank2
 10831  0141  0833               	movf	_OneH^(0+256),w	;volatile
 10832  0142  0020               	movlb	0	; select bank0
 10833  0143  00CB               	movwf	??_ISR_Function
 10834  0144  01CC               	clrf	??_ISR_Function+1
 10835  0145  084B               	movf	??_ISR_Function,w
 10836  0146  0023               	movlb	3	; select bank3
 10837  0147  00AA               	movwf	_One^(0+384)	;volatile
 10838  0148  0020               	movlb	0	; select bank0
 10839  0149  084C               	movf	??_ISR_Function+1,w
 10840  014A  0023               	movlb	3	; select bank3
 10841  014B  00AB               	movwf	(_One+1)^(0+384)	;volatile
 10842                           
 10843                           ;main.c: 186: One <<= 8;
 10844  014C  3008               	movlw	8
 10845  014D                     u707_25:	
 10846  014D  35AA               	lslf	_One^(0+384),f	;volatile
 10847  014E  0DAB               	rlf	(_One+1)^(0+384),f	;volatile
 10848  014F  0B89               	decfsz	9,f
 10849  0150  294D               	goto	u707_25
 10850                           
 10851                           ;main.c: 187: One |= OneL;
 10852  0151  0022               	movlb	2	; select bank2
 10853  0152  0834               	movf	_OneL^(0+256),w	;volatile
 10854  0153  0020               	movlb	0	; select bank0
 10855  0154  00CB               	movwf	??_ISR_Function
 10856  0155  01CC               	clrf	??_ISR_Function+1
 10857  0156  084B               	movf	??_ISR_Function,w
 10858  0157  0023               	movlb	3	; select bank3
 10859  0158  04AA               	iorwf	_One^(0+384),f	;volatile
 10860  0159  0020               	movlb	0	; select bank0
 10861  015A  084C               	movf	??_ISR_Function+1,w
 10862  015B  0023               	movlb	3	; select bank3
 10863  015C  04AB               	iorwf	(_One+1)^(0+384),f	;volatile
 10864                           
 10865                           ;main.c: 188: Total_Count = Two - One;
 10866  015D  092A               	comf	_One^(0+384),w	;volatile
 10867  015E  0020               	movlb	0	; select bank0
 10868  015F  00CB               	movwf	??_ISR_Function
 10869  0160  0023               	movlb	3	; select bank3
 10870  0161  092B               	comf	(_One+1)^(0+384),w	;volatile
 10871  0162  0020               	movlb	0	; select bank0
 10872  0163  00CC               	movwf	??_ISR_Function+1
 10873  0164  0ACB               	incf	??_ISR_Function,f
 10874  0165  1903               	skipnz
 10875  0166  0ACC               	incf	??_ISR_Function+1,f
 10876  0167  0023               	movlb	3	; select bank3
 10877  0168  082E               	movf	_Two^(0+384),w	;volatile
 10878  0169  0020               	movlb	0	; select bank0
 10879  016A  074B               	addwf	??_ISR_Function,w
 10880  016B  0023               	movlb	3	; select bank3
 10881  016C  00AC               	movwf	_Total_Count^(0+384)	;volatile
 10882  016D  082F               	movf	(_Two+1)^(0+384),w	;volatile
 10883  016E  0020               	movlb	0	; select bank0
 10884  016F  3D4C               	addwfc	??_ISR_Function+1,w
 10885  0170  0023               	movlb	3	; select bank3
 10886  0171  00AD               	movwf	(_Total_Count+1)^(0+384)	;volatile
 10887                           
 10888                           ;main.c: 190: pperiod=Total_Count;
 10889  0172  082D               	movf	(_Total_Count+1)^(0+384),w	;volatile
 10890  0173  01BD               	clrf	(_pperiod+1)^(0+384)	;volatile
 10891  0174  07BD               	addwf	(_pperiod+1)^(0+384),f	;volatile
 10892  0175  082C               	movf	_Total_Count^(0+384),w	;volatile
 10893  0176  01BC               	clrf	_pperiod^(0+384)	;volatile
 10894  0177  07BC               	addwf	_pperiod^(0+384),f	;volatile
 10895                           
 10896                           ;main.c: 191: Total_Period=Total_Period+pperiod;
 10897  0178  0024               	movlb	4	; select bank4
 10898  0179  0820               	movf	_Total_Period^(0+512),w
 10899  017A  0020               	movlb	0	; select bank0
 10900  017B  00CB               	movwf	??_ISR_Function
 10901  017C  0024               	movlb	4	; select bank4
 10902  017D  0821               	movf	(_Total_Period+1)^(0+512),w
 10903  017E  0020               	movlb	0	; select bank0
 10904  017F  00CC               	movwf	??_ISR_Function+1
 10905  0180  0024               	movlb	4	; select bank4
 10906  0181  0822               	movf	(_Total_Period+2)^(0+512),w
 10907  0182  0020               	movlb	0	; select bank0
 10908  0183  00CD               	movwf	??_ISR_Function+2
 10909  0184  0024               	movlb	4	; select bank4
 10910  0185  0823               	movf	(_Total_Period+3)^(0+512),w
 10911  0186  0020               	movlb	0	; select bank0
 10912  0187  00CE               	movwf	??_ISR_Function+3
 10913  0188  0023               	movlb	3	; select bank3
 10914  0189  083C               	movf	_pperiod^(0+384),w	;volatile
 10915  018A  0020               	movlb	0	; select bank0
 10916  018B  00CF               	movwf	??_ISR_Function+4
 10917  018C  0023               	movlb	3	; select bank3
 10918  018D  083D               	movf	(_pperiod+1)^(0+384),w	;volatile
 10919  018E  0020               	movlb	0	; select bank0
 10920  018F  00D0               	movwf	??_ISR_Function+5
 10921  0190  01D1               	clrf	??_ISR_Function+6
 10922  0191  01D2               	clrf	??_ISR_Function+7
 10923  0192  084F               	movf	??_ISR_Function+4,w
 10924  0193  07CB               	addwf	??_ISR_Function,f
 10925  0194  0850               	movf	??_ISR_Function+5,w
 10926  0195  3DCC               	addwfc	??_ISR_Function+1,f
 10927  0196  0851               	movf	??_ISR_Function+6,w
 10928  0197  3DCD               	addwfc	??_ISR_Function+2,f
 10929  0198  0852               	movf	??_ISR_Function+7,w
 10930  0199  3DCE               	addwfc	??_ISR_Function+3,f
 10931  019A  084E               	movf	??_ISR_Function+3,w
 10932  019B  0024               	movlb	4	; select bank4
 10933  019C  00A3               	movwf	(_Total_Period+3)^(0+512)
 10934  019D  0020               	movlb	0	; select bank0
 10935  019E  084D               	movf	??_ISR_Function+2,w
 10936  019F  0024               	movlb	4	; select bank4
 10937  01A0  00A2               	movwf	(_Total_Period+2)^(0+512)
 10938  01A1  0020               	movlb	0	; select bank0
 10939  01A2  084C               	movf	??_ISR_Function+1,w
 10940  01A3  0024               	movlb	4	; select bank4
 10941  01A4  00A1               	movwf	(_Total_Period+1)^(0+512)
 10942  01A5  0020               	movlb	0	; select bank0
 10943  01A6  084B               	movf	??_ISR_Function,w
 10944  01A7  0024               	movlb	4	; select bank4
 10945  01A8  00A0               	movwf	_Total_Period^(0+512)
 10946                           
 10947                           ;main.c: 192: pcount++;
 10948  01A9  3001               	movlw	1
 10949  01AA  0020               	movlb	0	; select bank0
 10950  01AB  00CB               	movwf	??_ISR_Function
 10951  01AC  084B               	movf	??_ISR_Function,w
 10952  01AD  0022               	movlb	2	; select bank2
 10953  01AE  07D1               	addwf	_pcount^(0+256),f
 10954                           
 10955                           ;main.c: 193: if(pcount>=16)
 10956  01AF  3010               	movlw	16
 10957  01B0  0251               	subwf	_pcount^(0+256),w
 10958  01B1  1C03               	skipc
 10959  01B2  2AB8               	goto	i1l5101
 10960                           
 10961                           ;main.c: 194: {
 10962                           ;main.c: 195: pcount=0;
 10963  01B3  01D1               	clrf	_pcount^(0+256)
 10964                           
 10965                           ;main.c: 196: avgpperiod=Total_Period>>5;
 10966  01B4  0024               	movlb	4	; select bank4
 10967  01B5  0820               	movf	_Total_Period^(0+512),w
 10968  01B6  0020               	movlb	0	; select bank0
 10969  01B7  00CB               	movwf	??_ISR_Function
 10970  01B8  0024               	movlb	4	; select bank4
 10971  01B9  0821               	movf	(_Total_Period+1)^(0+512),w
 10972  01BA  0020               	movlb	0	; select bank0
 10973  01BB  00CC               	movwf	??_ISR_Function+1
 10974  01BC  0024               	movlb	4	; select bank4
 10975  01BD  0822               	movf	(_Total_Period+2)^(0+512),w
 10976  01BE  0020               	movlb	0	; select bank0
 10977  01BF  00CD               	movwf	??_ISR_Function+2
 10978  01C0  0024               	movlb	4	; select bank4
 10979  01C1  0823               	movf	(_Total_Period+3)^(0+512),w
 10980  01C2  0020               	movlb	0	; select bank0
 10981  01C3  00CE               	movwf	??_ISR_Function+3
 10982  01C4  3005               	movlw	5
 10983  01C5                     u709_25:	
 10984  01C5  36CE               	lsrf	??_ISR_Function+3,f
 10985  01C6  0CCD               	rrf	??_ISR_Function+2,f
 10986  01C7  0CCC               	rrf	??_ISR_Function+1,f
 10987  01C8  0CCB               	rrf	??_ISR_Function,f
 10988  01C9  0B89               	decfsz	9,f
 10989  01CA  29C5               	goto	u709_25
 10990  01CB  084C               	movf	??_ISR_Function+1,w
 10991  01CC  0022               	movlb	2	; select bank2
 10992  01CD  01E5               	clrf	(_avgpperiod+1)^(0+256)	;volatile
 10993  01CE  07E5               	addwf	(_avgpperiod+1)^(0+256),f	;volatile
 10994  01CF  0020               	movlb	0	; select bank0
 10995  01D0  084B               	movf	??_ISR_Function,w
 10996  01D1  0022               	movlb	2	; select bank2
 10997  01D2  01E4               	clrf	_avgpperiod^(0+256)	;volatile
 10998  01D3  07E4               	addwf	_avgpperiod^(0+256),f	;volatile
 10999                           
 11000                           ;main.c: 197: pfreq=1000000/avgpperiod;
 11001  01D4  0864               	movf	_avgpperiod^(0+256),w	;volatile
 11002  01D5  00F0               	movwf	i1___aldiv@divisor
 11003  01D6  0865               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 11004  01D7  00F1               	movwf	i1___aldiv@divisor+1
 11005  01D8  01F2               	clrf	i1___aldiv@divisor+2
 11006  01D9  01F3               	clrf	i1___aldiv@divisor+3
 11007  01DA  3000               	movlw	0
 11008  01DB  00F7               	movwf	i1___aldiv@dividend+3
 11009  01DC  300F               	movlw	15
 11010  01DD  00F6               	movwf	i1___aldiv@dividend+2
 11011  01DE  3042               	movlw	66
 11012  01DF  00F5               	movwf	i1___aldiv@dividend+1
 11013  01E0  3040               	movlw	64
 11014  01E1  00F4               	movwf	i1___aldiv@dividend
 11015  01E2  319D  25EE  3180   	fcall	i1___aldiv
 11016  01E5  0871               	movf	?i1___aldiv+1,w
 11017  01E6  0022               	movlb	2	; select bank2
 11018  01E7  01E9               	clrf	(_pfreq+1)^(0+256)	;volatile
 11019  01E8  07E9               	addwf	(_pfreq+1)^(0+256),f	;volatile
 11020  01E9  0870               	movf	?i1___aldiv,w
 11021  01EA  01E8               	clrf	_pfreq^(0+256)	;volatile
 11022  01EB  07E8               	addwf	_pfreq^(0+256),f	;volatile
 11023                           
 11024                           ;main.c: 198: Total_Period=0;
 11025  01EC  3000               	movlw	0
 11026  01ED  0024               	movlb	4	; select bank4
 11027  01EE  00A3               	movwf	(_Total_Period+3)^(0+512)
 11028  01EF  3000               	movlw	0
 11029  01F0  00A2               	movwf	(_Total_Period+2)^(0+512)
 11030  01F1  3000               	movlw	0
 11031  01F2  00A1               	movwf	(_Total_Period+1)^(0+512)
 11032  01F3  3000               	movlw	0
 11033  01F4  00A0               	movwf	_Total_Period^(0+512)
 11034                           
 11035                           ;main.c: 200: Tsampling =avgpperiod/1000.0;
 11036  01F5  3000               	movlw	0
 11037  01F6  0020               	movlb	0	; select bank0
 11038  01F7  00A0               	movwf	i1___ftdiv@f2
 11039  01F8  307A               	movlw	122
 11040  01F9  00A1               	movwf	i1___ftdiv@f2+1
 11041  01FA  3044               	movlw	68
 11042  01FB  00A2               	movwf	i1___ftdiv@f2+2
 11043  01FC  0022               	movlb	2	; select bank2
 11044  01FD  0865               	movf	(_avgpperiod+1)^(0+256),w	;volatile
 11045  01FE  01F9               	clrf	i1___lwtoft@c+1
 11046  01FF  07F9               	addwf	i1___lwtoft@c+1,f
 11047  0200  0864               	movf	_avgpperiod^(0+256),w	;volatile
 11048  0201  01F8               	clrf	i1___lwtoft@c
 11049  0202  07F8               	addwf	i1___lwtoft@c,f
 11050  0203  3198  20D3  3180   	fcall	i1___lwtoft
 11051  0206  0878               	movf	?i1___lwtoft,w
 11052  0207  0020               	movlb	0	; select bank0
 11053  0208  00A3               	movwf	i1___ftdiv@f1
 11054  0209  0879               	movf	?i1___lwtoft+1,w
 11055  020A  00A4               	movwf	i1___ftdiv@f1+1
 11056  020B  087A               	movf	?i1___lwtoft+2,w
 11057  020C  00A5               	movwf	i1___ftdiv@f1+2
 11058  020D  3190  201F  3180   	fcall	i1___ftdiv
 11059  0210  0020               	movlb	0	; select bank0
 11060  0211  0820               	movf	?i1___ftdiv,w
 11061  0212  0023               	movlb	3	; select bank3
 11062  0213  00E2               	movwf	_Tsampling^(0+384)
 11063  0214  0020               	movlb	0	; select bank0
 11064  0215  0821               	movf	?i1___ftdiv+1,w
 11065  0216  0023               	movlb	3	; select bank3
 11066  0217  00E3               	movwf	(_Tsampling+1)^(0+384)
 11067  0218  0020               	movlb	0	; select bank0
 11068  0219  0822               	movf	?i1___ftdiv+2,w
 11069  021A  0023               	movlb	3	; select bank3
 11070  021B  00E4               	movwf	(_Tsampling+2)^(0+384)
 11071                           
 11072                           ;main.c: 202: if(pfreq>=999)
 11073  021C  3003               	movlw	3
 11074  021D  0022               	movlb	2	; select bank2
 11075  021E  0269               	subwf	(_pfreq+1)^(0+256),w	;volatile
 11076  021F  30E7               	movlw	231
 11077  0220  1903               	skipnz
 11078  0221  0268               	subwf	_pfreq^(0+256),w	;volatile
 11079  0222  1C03               	skipc
 11080  0223  2A29               	goto	i1l5071
 11081                           
 11082                           ;main.c: 203: pfreq=999;
 11083  0224  30E7               	movlw	231
 11084  0225  00E8               	movwf	_pfreq^(0+256)	;volatile
 11085  0226  3003               	movlw	3
 11086  0227  00E9               	movwf	(_pfreq^(0+256)+1)	;volatile
 11087  0228  2A2F               	goto	i1l5075
 11088  0229                     i1l5071:	
 11089                           
 11090                           ;main.c: 204: else if(pfreq<=0)
 11091  0229  0869               	movf	(_pfreq+1)^(0+256),w	;volatile
 11092  022A  0468               	iorwf	_pfreq^(0+256),w	;volatile
 11093  022B  1D03               	skipz
 11094  022C  2A2F               	goto	i1l5075
 11095                           
 11096                           ;main.c: 205: pfreq=0;
 11097  022D  01E8               	clrf	_pfreq^(0+256)	;volatile
 11098  022E  01E9               	clrf	(_pfreq+1)^(0+256)	;volatile
 11099  022F                     i1l5075:	
 11100                           
 11101                           ;main.c: 208: Fltpfreq=(0.2*pfreq)+(0.8)*prevFltpfreq;
 11102  022F  0869               	movf	(_pfreq+1)^(0+256),w	;volatile
 11103  0230  01F9               	clrf	i1___lwtoft@c+1
 11104  0231  07F9               	addwf	i1___lwtoft@c+1,f
 11105  0232  0868               	movf	_pfreq^(0+256),w	;volatile
 11106  0233  01F8               	clrf	i1___lwtoft@c
 11107  0234  07F8               	addwf	i1___lwtoft@c,f
 11108  0235  3198  20D3  3180   	fcall	i1___lwtoft
 11109  0238  0878               	movf	?i1___lwtoft,w
 11110  0239  0020               	movlb	0	; select bank0
 11111  023A  00A3               	movwf	i1___ftmul@f2
 11112  023B  0879               	movf	?i1___lwtoft+1,w
 11113  023C  00A4               	movwf	i1___ftmul@f2+1
 11114  023D  087A               	movf	?i1___lwtoft+2,w
 11115  023E  00A5               	movwf	i1___ftmul@f2+2
 11116  023F  30CD               	movlw	205
 11117  0240  00A0               	movwf	i1___ftmul@f1
 11118  0241  304C               	movlw	76
 11119  0242  00A1               	movwf	i1___ftmul@f1+1
 11120  0243  303E               	movlw	62
 11121  0244  00A2               	movwf	i1___ftmul@f1+2
 11122  0245  3192  221F  3180   	fcall	i1___ftmul
 11123  0248  0020               	movlb	0	; select bank0
 11124  0249  0820               	movf	?i1___ftmul,w
 11125  024A  00B3               	movwf	i1___ftadd@f2
 11126  024B  0821               	movf	?i1___ftmul+1,w
 11127  024C  00B4               	movwf	i1___ftadd@f2+1
 11128  024D  0822               	movf	?i1___ftmul+2,w
 11129  024E  00B5               	movwf	i1___ftadd@f2+2
 11130  024F  0024               	movlb	4	; select bank4
 11131  0250  0843               	movf	(_prevFltpfreq+1)^(0+512),w
 11132  0251  01F9               	clrf	i1___lwtoft@c+1
 11133  0252  07F9               	addwf	i1___lwtoft@c+1,f
 11134  0253  0842               	movf	_prevFltpfreq^(0+512),w
 11135  0254  01F8               	clrf	i1___lwtoft@c
 11136  0255  07F8               	addwf	i1___lwtoft@c,f
 11137  0256  3198  20D3  3180   	fcall	i1___lwtoft
 11138  0259  0878               	movf	?i1___lwtoft,w
 11139  025A  0020               	movlb	0	; select bank0
 11140  025B  00A3               	movwf	i1___ftmul@f2
 11141  025C  0879               	movf	?i1___lwtoft+1,w
 11142  025D  00A4               	movwf	i1___ftmul@f2+1
 11143  025E  087A               	movf	?i1___lwtoft+2,w
 11144  025F  00A5               	movwf	i1___ftmul@f2+2
 11145  0260  30CD               	movlw	205
 11146  0261  00A0               	movwf	i1___ftmul@f1
 11147  0262  304C               	movlw	76
 11148  0263  00A1               	movwf	i1___ftmul@f1+1
 11149  0264  303F               	movlw	63
 11150  0265  00A2               	movwf	i1___ftmul@f1+2
 11151  0266  3192  221F  3180   	fcall	i1___ftmul
 11152  0269  0020               	movlb	0	; select bank0
 11153  026A  0820               	movf	?i1___ftmul,w
 11154  026B  00B0               	movwf	i1___ftadd@f1
 11155  026C  0821               	movf	?i1___ftmul+1,w
 11156  026D  00B1               	movwf	i1___ftadd@f1+1
 11157  026E  0822               	movf	?i1___ftmul+2,w
 11158  026F  00B2               	movwf	i1___ftadd@f1+2
 11159  0270  3193  2387  3180   	fcall	i1___ftadd
 11160  0273  0020               	movlb	0	; select bank0
 11161  0274  0830               	movf	?i1___ftadd,w
 11162  0275  00BD               	movwf	i1___fttol@f1
 11163  0276  0831               	movf	?i1___ftadd+1,w
 11164  0277  00BE               	movwf	i1___fttol@f1+1
 11165  0278  0832               	movf	?i1___ftadd+2,w
 11166  0279  00BF               	movwf	i1___fttol@f1+2
 11167  027A  319E  26F2  3180   	fcall	i1___fttol
 11168  027D  0020               	movlb	0	; select bank0
 11169  027E  083E               	movf	?i1___fttol+1,w
 11170  027F  0022               	movlb	2	; select bank2
 11171  0280  01A7               	clrf	(_Fltpfreq+1)^(0+256)
 11172  0281  07A7               	addwf	(_Fltpfreq+1)^(0+256),f
 11173  0282  0020               	movlb	0	; select bank0
 11174  0283  083D               	movf	?i1___fttol,w
 11175  0284  0022               	movlb	2	; select bank2
 11176  0285  01A6               	clrf	_Fltpfreq^(0+256)
 11177  0286  07A6               	addwf	_Fltpfreq^(0+256),f
 11178                           
 11179                           ;main.c: 209: if(Fltpfreq>=999)
 11180  0287  3003               	movlw	3
 11181  0288  0227               	subwf	(_Fltpfreq+1)^(0+256),w
 11182  0289  30E7               	movlw	231
 11183  028A  1903               	skipnz
 11184  028B  0226               	subwf	_Fltpfreq^(0+256),w
 11185  028C  1C03               	skipc
 11186  028D  2A93               	goto	i1l5081
 11187                           
 11188                           ;main.c: 210: Fltpfreq=999;
 11189  028E  30E7               	movlw	231
 11190  028F  00A6               	movwf	_Fltpfreq^(0+256)
 11191  0290  3003               	movlw	3
 11192  0291  00A7               	movwf	(_Fltpfreq^(0+256)+1)
 11193  0292  2A99               	goto	i1l5085
 11194  0293                     i1l5081:	
 11195                           
 11196                           ;main.c: 211: else if(Fltpfreq<=0)
 11197  0293  0827               	movf	(_Fltpfreq+1)^(0+256),w
 11198  0294  0426               	iorwf	_Fltpfreq^(0+256),w
 11199  0295  1D03               	skipz
 11200  0296  2A99               	goto	i1l5085
 11201                           
 11202                           ;main.c: 212: Fltpfreq=0;
 11203  0297  01A6               	clrf	_Fltpfreq^(0+256)
 11204  0298  01A7               	clrf	(_Fltpfreq+1)^(0+256)
 11205  0299                     i1l5085:	
 11206                           
 11207                           ;main.c: 214: prevFltpfreq=Fltpfreq;
 11208  0299  0827               	movf	(_Fltpfreq+1)^(0+256),w
 11209  029A  0024               	movlb	4	; select bank4
 11210  029B  01C3               	clrf	(_prevFltpfreq+1)^(0+512)
 11211  029C  07C3               	addwf	(_prevFltpfreq+1)^(0+512),f
 11212  029D  0022               	movlb	2	; select bank2
 11213  029E  0826               	movf	_Fltpfreq^(0+256),w
 11214  029F  0024               	movlb	4	; select bank4
 11215  02A0  01C2               	clrf	_prevFltpfreq^(0+512)
 11216  02A1  07C2               	addwf	_prevFltpfreq^(0+512),f
 11217                           
 11218                           ;main.c: 215: capintervalf=1;
 11219  02A2  3001               	movlw	1
 11220  02A3  0020               	movlb	0	; select bank0
 11221  02A4  00CB               	movwf	??_ISR_Function
 11222  02A5  084B               	movf	??_ISR_Function,w
 11223  02A6  0023               	movlb	3	; select bank3
 11224  02A7  00CD               	movwf	_capintervalf^(0+384)	;volatile
 11225                           
 11226                           ;main.c: 216: fixintervalf=0;
 11227  02A8  01D3               	clrf	_fixintervalf^(0+384)	;volatile
 11228                           
 11229                           ;main.c: 217: count_pid=0;
 11230  02A9  01CF               	clrf	_count_pid^(0+384)	;volatile
 11231                           
 11232                           ;main.c: 220: if(cyclestrtf==1 && psstatusu.psstatuss.twinpulseon==0)
 11233  02AA  0022               	movlb	2	; select bank2
 11234  02AB  0844               	movf	_cyclestrtf^(0+256),w
 11235  02AC  3A01               	xorlw	1
 11236  02AD  1D03               	skipz
 11237  02AE  2AB6               	goto	i1l5099
 11238  02AF  0020               	movlb	0	; select bank0
 11239  02B0  1B6E               	btfsc	_psstatusu,6
 11240  02B1  2AB6               	goto	i1l5099
 11241                           
 11242                           ;main.c: 221: adaptivepidf=1;
 11243  02B2  0022               	movlb	2	; select bank2
 11244  02B3  01B7               	clrf	_adaptivepidf^(0+256)
 11245  02B4  0AB7               	incf	_adaptivepidf^(0+256),f
 11246  02B5  2AB8               	goto	i1l5101
 11247  02B6                     i1l5099:	
 11248                           
 11249                           ;main.c: 222: else
 11250                           ;main.c: 223: adaptivepidf=0;
 11251  02B6  0022               	movlb	2	; select bank2
 11252  02B7  01B7               	clrf	_adaptivepidf^(0+256)
 11253  02B8                     i1l5101:	
 11254                           
 11255                           ;main.c: 225: }
 11256                           ;main.c: 226: }
 11257                           ;main.c: 227: }
 11258                           ;main.c: 229: if(PIE1bits.RCIE & PIR1bits.RCIF)
 11259  02B8  0020               	movlb	0	; select bank0
 11260  02B9  0E11               	swapf	17,w	;volatile
 11261  02BA  0C89               	rrf	9,f
 11262  02BB  3901               	andlw	1
 11263  02BC  00CB               	movwf	??_ISR_Function
 11264  02BD  0021               	movlb	1	; select bank1
 11265  02BE  0E11               	swapf	17,w	;volatile
 11266  02BF  0C89               	rrf	9,f
 11267  02C0  3901               	andlw	1
 11268  02C1  0020               	movlb	0	; select bank0
 11269  02C2  054B               	andwf	??_ISR_Function,w
 11270  02C3  1903               	btfsc	3,2
 11271  02C4  2CCC               	goto	i1l582
 11272                           
 11273                           ;main.c: 230: {
 11274                           ;main.c: 231: PIR1bits.RCIF=0;
 11275  02C5  1291               	bcf	17,5	;volatile
 11276                           
 11277                           ;main.c: 232: rxdata= RCREG;
 11278  02C6  0023               	movlb	3	; select bank3
 11279  02C7  0819               	movf	25,w	;volatile
 11280  02C8  0020               	movlb	0	; select bank0
 11281  02C9  00CB               	movwf	??_ISR_Function
 11282  02CA  084B               	movf	??_ISR_Function,w
 11283  02CB  00E4               	movwf	_rxdata	;volatile
 11284                           
 11285                           ;main.c: 234: if(RCSTAbits.FERR)
 11286  02CC  0023               	movlb	3	; select bank3
 11287  02CD  1D1D               	btfss	29,2	;volatile
 11288  02CE  2AD1               	goto	i1l597
 11289                           
 11290                           ;main.c: 235: {
 11291                           ;main.c: 236: RCSTAbits.SPEN=0;
 11292  02CF  139D               	bcf	29,7	;volatile
 11293                           
 11294                           ;main.c: 237: RCSTAbits.SPEN=1;
 11295  02D0  179D               	bsf	29,7	;volatile
 11296  02D1                     i1l597:	
 11297                           
 11298                           ;main.c: 238: }
 11299                           ;main.c: 239: if(RCSTAbits.OERR)
 11300  02D1  1C9D               	btfss	29,1	;volatile
 11301  02D2  2AD7               	goto	i1l5113
 11302                           
 11303                           ;main.c: 240: {
 11304                           ;main.c: 241: RCSTAbits.CREN=0;
 11305  02D3  121D               	bcf	29,4	;volatile
 11306                           
 11307                           ;main.c: 242: RCSTAbits.CREN=1;
 11308  02D4  161D               	bsf	29,4	;volatile
 11309                           
 11310                           ;main.c: 243: RCSTAbits.SPEN=0;
 11311  02D5  139D               	bcf	29,7	;volatile
 11312                           
 11313                           ;main.c: 244: RCSTAbits.SPEN=1;
 11314  02D6  179D               	bsf	29,7	;volatile
 11315  02D7                     i1l5113:	
 11316                           
 11317                           ;main.c: 245: }
 11318                           ;main.c: 247: {
 11319                           ;main.c: 248: if(rxdata=='@' && startptr1==0 && statusptr1==0 )
 11320  02D7  0020               	movlb	0	; select bank0
 11321  02D8  0864               	movf	_rxdata,w	;volatile
 11322  02D9  3A40               	xorlw	64
 11323  02DA  1D03               	skipz
 11324  02DB  2AEC               	goto	i1l5123
 11325  02DC  08E5               	movf	_startptr1,f
 11326  02DD  1D03               	skipz
 11327  02DE  2AEC               	goto	i1l5123
 11328  02DF  0022               	movlb	2	; select bank2
 11329  02E0  0831               	movf	(_statusptr1+1)^(0+256),w
 11330  02E1  0430               	iorwf	_statusptr1^(0+256),w
 11331  02E2  1D03               	skipz
 11332  02E3  2AEC               	goto	i1l5123
 11333                           
 11334                           ;main.c: 249: {
 11335                           ;main.c: 250: startptr1 =1;
 11336  02E4  0020               	movlb	0	; select bank0
 11337  02E5  01E5               	clrf	_startptr1
 11338  02E6  0AE5               	incf	_startptr1,f
 11339                           
 11340                           ;main.c: 251: arrptr =0;
 11341  02E7  0022               	movlb	2	; select bank2
 11342  02E8  01B8               	clrf	_arrptr^(0+256)
 11343                           
 11344                           ;main.c: 252: statusptr1 =0;
 11345  02E9  01B0               	clrf	_statusptr1^(0+256)
 11346  02EA  01B1               	clrf	(_statusptr1+1)^(0+256)
 11347  02EB  2CCB               	goto	L23
 11348  02EC                     i1l5123:	
 11349                           ;main.c: 254: }
 11350                           
 11351                           ;main.c: 253: recchksum =0;
 11352                           
 11353                           
 11354                           ;main.c: 255: else if(rxdata=='#' && startptr1==0 && statusptr1==0)
 11355  02EC  0020               	movlb	0	; select bank0
 11356  02ED  0864               	movf	_rxdata,w	;volatile
 11357  02EE  3A23               	xorlw	35
 11358  02EF  1D03               	skipz
 11359  02F0  2B01               	goto	i1l5137
 11360  02F1  08E5               	movf	_startptr1,f
 11361  02F2  1D03               	skipz
 11362  02F3  2B01               	goto	i1l5137
 11363  02F4  0022               	movlb	2	; select bank2
 11364  02F5  0831               	movf	(_statusptr1+1)^(0+256),w
 11365  02F6  0430               	iorwf	_statusptr1^(0+256),w
 11366  02F7  1D03               	skipz
 11367  02F8  2B01               	goto	i1l5137
 11368                           
 11369                           ;main.c: 256: {
 11370                           ;main.c: 257: startptr1 =0;
 11371  02F9  0020               	movlb	0	; select bank0
 11372  02FA  01E5               	clrf	_startptr1
 11373                           
 11374                           ;main.c: 258: statusptr1 =1;
 11375  02FB  3001               	movlw	1
 11376  02FC  0022               	movlb	2	; select bank2
 11377  02FD  00B0               	movwf	_statusptr1^(0+256)
 11378  02FE  3000               	movlw	0
 11379  02FF  00B1               	movwf	(_statusptr1^(0+256)+1)
 11380  0300  2CCA               	goto	L25
 11381  0301                     i1l5137:	
 11382                           ;main.c: 261: }
 11383                           
 11384                           ;main.c: 260: recchksum =0;
 11385                           
 11386                           ;main.c: 259: arrptr =0;
 11387                           
 11388                           
 11389                           ;main.c: 262: else if(startptr1==0 && statusptr1==1)
 11390  0301  0020               	movlb	0	; select bank0
 11391  0302  08E5               	movf	_startptr1,f
 11392  0303  1D03               	skipz
 11393  0304  2B73               	goto	i1l5181
 11394  0305  3001               	movlw	1
 11395  0306  0022               	movlb	2	; select bank2
 11396  0307  0630               	xorwf	_statusptr1^(0+256),w
 11397  0308  0431               	iorwf	(_statusptr1+1)^(0+256),w
 11398  0309  1D03               	skipz
 11399  030A  2B73               	goto	i1l5181
 11400                           
 11401                           ;main.c: 263: {
 11402                           ;main.c: 264: if(recstatus==0)
 11403  030B  0023               	movlb	3	; select bank3
 11404  030C  0847               	movf	(_recstatus+1)^(0+384),w
 11405  030D  0446               	iorwf	_recstatus^(0+384),w
 11406  030E  1D03               	skipz
 11407  030F  2B20               	goto	i1l5145
 11408                           
 11409                           ;main.c: 265: {
 11410                           ;main.c: 266: recpsstatus=rxdata;
 11411  0310  0020               	movlb	0	; select bank0
 11412  0311  0864               	movf	_rxdata,w	;volatile
 11413  0312  00CB               	movwf	??_ISR_Function
 11414  0313  01CC               	clrf	??_ISR_Function+1
 11415  0314  084B               	movf	??_ISR_Function,w
 11416  0315  0023               	movlb	3	; select bank3
 11417  0316  00C4               	movwf	_recpsstatus^(0+384)
 11418  0317  0020               	movlb	0	; select bank0
 11419  0318  084C               	movf	??_ISR_Function+1,w
 11420  0319  0023               	movlb	3	; select bank3
 11421  031A  00C5               	movwf	(_recpsstatus+1)^(0+384)
 11422                           
 11423                           ;main.c: 267: recstatus=1;
 11424  031B  3001               	movlw	1
 11425  031C  00C6               	movwf	_recstatus^(0+384)
 11426  031D  3000               	movlw	0
 11427  031E  00C7               	movwf	(_recstatus^(0+384)+1)
 11428                           
 11429                           ;main.c: 268: }
 11430  031F  2CCC               	goto	i1l582
 11431  0320                     i1l5145:	
 11432                           
 11433                           ;main.c: 269: else if(recstatus==1)
 11434  0320  3001               	movlw	1
 11435  0321  0646               	xorwf	_recstatus^(0+384),w
 11436  0322  0447               	iorwf	(_recstatus+1)^(0+384),w
 11437  0323  1D03               	skipz
 11438  0324  2CCC               	goto	i1l582
 11439                           
 11440                           ;main.c: 270: {
 11441                           ;main.c: 271: if(rxdata==recpsstatus)
 11442  0325  0020               	movlb	0	; select bank0
 11443  0326  0864               	movf	_rxdata,w	;volatile
 11444  0327  00CB               	movwf	??_ISR_Function
 11445  0328  01CC               	clrf	??_ISR_Function+1
 11446  0329  0023               	movlb	3	; select bank3
 11447  032A  0845               	movf	(_recpsstatus+1)^(0+384),w
 11448  032B  0020               	movlb	0	; select bank0
 11449  032C  064C               	xorwf	??_ISR_Function+1,w
 11450  032D  1D03               	skipz
 11451  032E  2B33               	goto	u729_25
 11452  032F  0023               	movlb	3	; select bank3
 11453  0330  0844               	movf	_recpsstatus^(0+384),w
 11454  0331  0020               	movlb	0	; select bank0
 11455  0332  064B               	xorwf	??_ISR_Function,w
 11456  0333                     u729_25:	
 11457  0333  1D03               	skipz
 11458  0334  2CC2               	goto	i1l5233
 11459                           
 11460                           ;main.c: 272: {
 11461                           ;main.c: 273: comm_error_count=0;
 11462  0335  0022               	movlb	2	; select bank2
 11463  0336  01C0               	clrf	_comm_error_count^(0+256)	;volatile
 11464                           
 11465                           ;main.c: 274: psstatusu.psstatusbyte[0]=recpsstatus;
 11466  0337  0023               	movlb	3	; select bank3
 11467  0338  0844               	movf	_recpsstatus^(0+384),w
 11468  0339  0020               	movlb	0	; select bank0
 11469  033A  00CB               	movwf	??_ISR_Function
 11470  033B  084B               	movf	??_ISR_Function,w
 11471  033C  00EE               	movwf	_psstatusu
 11472                           
 11473                           ;main.c: 275: pstowfstru.pstowfstrs.psstatusbyte=recpsstatus;
 11474  033D  0023               	movlb	3	; select bank3
 11475  033E  0844               	movf	_recpsstatus^(0+384),w
 11476  033F  0020               	movlb	0	; select bank0
 11477  0340  00CB               	movwf	??_ISR_Function
 11478  0341  084B               	movf	??_ISR_Function,w
 11479  0342  0024               	movlb	4	; select bank4
 11480  0343  00D0               	movwf	(_pstowfstru^(0+512)+12)
 11481                           
 11482                           ;main.c: 277: if(psstatusu.psstatuss.motoroncommand==1 && psstatusu.psstatuss.twinpulseo
      +                          n==1 )
 11483  0344  0020               	movlb	0	; select bank0
 11484  0345  19EE               	btfsc	_psstatusu,3
 11485  0346  1F6E               	btfss	_psstatusu,6
 11486  0347  2B66               	goto	i1l5167
 11487                           
 11488                           ;main.c: 278: {
 11489                           ;main.c: 279: if(psstatusu.psstatuss.Hi_speedon==1)
 11490  0348  1FEE               	btfss	_psstatusu,7
 11491  0349  2B56               	goto	i1l609
 11492                           
 11493                           ;main.c: 280: {
 11494                           ;main.c: 281: TRISAbits.TRISA0=0;
 11495  034A  0021               	movlb	1	; select bank1
 11496  034B  100C               	bcf	12,0	;volatile
 11497                           
 11498                           ;main.c: 282: PORTAbits.RA0=1;
 11499  034C  0020               	movlb	0	; select bank0
 11500  034D  140C               	bsf	12,0	;volatile
 11501                           
 11502                           ;main.c: 283: TRISAbits.TRISA5=0;
 11503  034E  0021               	movlb	1	; select bank1
 11504  034F  128C               	bcf	12,5	;volatile
 11505                           
 11506                           ;main.c: 285: Update_PWM(Hi_setppwm);
 11507  0350  0023               	movlb	3	; select bank3
 11508  0351  0827               	movf	(_Hi_setppwm+1)^(0+384),w
 11509  0352  01F1               	clrf	i1Update_PWM@setwsduty+1
 11510  0353  07F1               	addwf	i1Update_PWM@setwsduty+1,f
 11511  0354  0826               	movf	_Hi_setppwm^(0+384),w
 11512  0355  2B61               	goto	L24
 11513  0356                     i1l609:	
 11514                           ;main.c: 287: }
 11515                           
 11516                           
 11517                           ;main.c: 288: else
 11518                           ;main.c: 289: {
 11519                           ;main.c: 290: TRISAbits.TRISA0=0;
 11520  0356  0021               	movlb	1	; select bank1
 11521  0357  100C               	bcf	12,0	;volatile
 11522                           
 11523                           ;main.c: 291: PORTAbits.RA0=0;
 11524  0358  0020               	movlb	0	; select bank0
 11525  0359  100C               	bcf	12,0	;volatile
 11526                           
 11527                           ;main.c: 292: TRISAbits.TRISA5=0;
 11528  035A  0021               	movlb	1	; select bank1
 11529  035B  128C               	bcf	12,5	;volatile
 11530                           
 11531                           ;main.c: 294: Update_PWM(Lo_setppwm);
 11532  035C  0023               	movlb	3	; select bank3
 11533  035D  0829               	movf	(_Lo_setppwm+1)^(0+384),w
 11534  035E  01F1               	clrf	i1Update_PWM@setwsduty+1
 11535  035F  07F1               	addwf	i1Update_PWM@setwsduty+1,f
 11536  0360  0828               	movf	_Lo_setppwm^(0+384),w
 11537  0361                     L24:	
 11538  0361  01F0               	clrf	i1Update_PWM@setwsduty
 11539  0362  07F0               	addwf	i1Update_PWM@setwsduty,f
 11540  0363  3199  218F  3180   	fcall	i1_Update_PWM
 11541  0366                     i1l5167:	
 11542                           
 11543                           ;main.c: 296: }
 11544                           ;main.c: 297: }
 11545                           ;main.c: 309: recstatus=0;
 11546  0366  0023               	movlb	3	; select bank3
 11547  0367  01C6               	clrf	_recstatus^(0+384)
 11548  0368  01C7               	clrf	(_recstatus+1)^(0+384)
 11549                           
 11550                           ;main.c: 310: startptr1=0;
 11551  0369  0020               	movlb	0	; select bank0
 11552  036A  01E5               	clrf	_startptr1
 11553                           
 11554                           ;main.c: 311: statusptr1=0;
 11555  036B  0022               	movlb	2	; select bank2
 11556  036C  01B0               	clrf	_statusptr1^(0+256)
 11557  036D  01B1               	clrf	(_statusptr1+1)^(0+256)
 11558                           
 11559                           ;main.c: 312: arrptr=0;
 11560  036E  01B8               	clrf	_arrptr^(0+256)
 11561                           
 11562                           ;main.c: 313: recchksum=0;
 11563  036F  01DA               	clrf	_recchksum^(0+256)
 11564                           
 11565                           ;main.c: 314: send_statusf=1;
 11566  0370  01DD               	clrf	_send_statusf^(0+256)
 11567  0371  0ADD               	incf	_send_statusf^(0+256),f
 11568                           
 11569                           ;main.c: 316: }
 11570  0372  2CCC               	goto	i1l582
 11571  0373                     i1l5181:	
 11572                           ;main.c: 324: }
 11573                           ;main.c: 325: }
 11574                           ;main.c: 326: }
 11575                           
 11576                           ;main.c: 323: recchksum=0;
 11577                           
 11578                           ;main.c: 322: arrptr=0;
 11579                           
 11580                           ;main.c: 321: statusptr1=0;
 11581                           
 11582                           ;main.c: 320: startptr1=0;
 11583                           
 11584                           ;main.c: 317: else
 11585                           ;main.c: 318: {
 11586                           ;main.c: 319: recstatus=0;
 11587                           
 11588                           
 11589                           ;main.c: 327: else if(startptr1==1 && statusptr1==0)
 11590  0373  0020               	movlb	0	; select bank0
 11591  0374  0865               	movf	_startptr1,w
 11592  0375  3A01               	xorlw	1
 11593  0376  1D03               	skipz
 11594  0377  2CCC               	goto	i1l582
 11595  0378  0022               	movlb	2	; select bank2
 11596  0379  0831               	movf	(_statusptr1+1)^(0+256),w
 11597  037A  0430               	iorwf	_statusptr1^(0+256),w
 11598  037B  1D03               	skipz
 11599  037C  2CCC               	goto	i1l582
 11600                           
 11601                           ;main.c: 328: {
 11602                           ;main.c: 329: if(arrptr<=22)
 11603  037D  3017               	movlw	23
 11604  037E  0238               	subwf	_arrptr^(0+256),w
 11605  037F  1803               	skipnc
 11606  0380  2B9C               	goto	i1l5193
 11607                           
 11608                           ;main.c: 330: {
 11609                           ;main.c: 331: rec_arr[arrptr]=rxdata;
 11610  0381  0020               	movlb	0	; select bank0
 11611  0382  0864               	movf	_rxdata,w	;volatile
 11612  0383  00CB               	movwf	??_ISR_Function
 11613  0384  0022               	movlb	2	; select bank2
 11614  0385  0838               	movf	_arrptr^(0+256),w
 11615  0386  3EA0               	addlw	_rec_arr& (0+255)
 11616  0387  0086               	movwf	6
 11617  0388  3002               	movlw	2	; select bank5/6
 11618  0389  0087               	movwf	7
 11619  038A  0020               	movlb	0	; select bank0
 11620  038B  084B               	movf	??_ISR_Function,w
 11621  038C  0081               	movwf	1
 11622                           
 11623                           ;main.c: 332: recchksum=recchksum+rxdata;
 11624  038D  0022               	movlb	2	; select bank2
 11625  038E  085A               	movf	_recchksum^(0+256),w
 11626  038F  0020               	movlb	0	; select bank0
 11627  0390  0764               	addwf	_rxdata,w	;volatile
 11628  0391  00CB               	movwf	??_ISR_Function
 11629  0392  084B               	movf	??_ISR_Function,w
 11630  0393  0022               	movlb	2	; select bank2
 11631  0394  00DA               	movwf	_recchksum^(0+256)
 11632                           
 11633                           ;main.c: 333: arrptr++;
 11634  0395  3001               	movlw	1
 11635  0396  0020               	movlb	0	; select bank0
 11636  0397  00CB               	movwf	??_ISR_Function
 11637  0398  084B               	movf	??_ISR_Function,w
 11638  0399  0022               	movlb	2	; select bank2
 11639  039A  07B8               	addwf	_arrptr^(0+256),f
 11640                           
 11641                           ;main.c: 335: }
 11642  039B  2CCC               	goto	i1l582
 11643  039C                     i1l5193:	
 11644                           
 11645                           ;main.c: 336: else if(recchksum==rxdata)
 11646  039C  085A               	movf	_recchksum^(0+256),w
 11647  039D  0020               	movlb	0	; select bank0
 11648  039E  0664               	xorwf	_rxdata,w	;volatile
 11649  039F  1D03               	skipz
 11650  03A0  2CC2               	goto	i1l5233
 11651                           
 11652                           ;main.c: 337: {
 11653                           ;main.c: 338: comm_error_count=0;
 11654  03A1  0022               	movlb	2	; select bank2
 11655  03A2  01C0               	clrf	_comm_error_count^(0+256)	;volatile
 11656                           
 11657                           ;main.c: 340: for(ijk=0;ijk<=22;ijk++)
 11658  03A3  01A8               	clrf	_ijk^(0+256)
 11659  03A4  01A9               	clrf	(_ijk+1)^(0+256)
 11660  03A5  3000               	movlw	0
 11661  03A6  0229               	subwf	(_ijk+1)^(0+256),w
 11662  03A7  3017               	movlw	23
 11663  03A8  1903               	skipnz
 11664  03A9  0228               	subwf	_ijk^(0+256),w
 11665  03AA  1803               	btfsc	3,0
 11666  03AB  2BC9               	goto	i1l5207
 11667  03AC                     i1l5201:	
 11668                           
 11669                           ;main.c: 341: {
 11670                           ;main.c: 342: pstowfstru.pstransarr[ijk]=rec_arr[ijk];
 11671  03AC  0828               	movf	_ijk^(0+256),w
 11672  03AD  3EA0               	addlw	_rec_arr& (0+255)
 11673  03AE  0086               	movwf	6
 11674  03AF  3002               	movlw	2	; select bank5/6
 11675  03B0  0087               	movwf	7
 11676  03B1  0801               	movf	1,w
 11677  03B2  0020               	movlb	0	; select bank0
 11678  03B3  00CB               	movwf	??_ISR_Function
 11679  03B4  0022               	movlb	2	; select bank2
 11680  03B5  0828               	movf	_ijk^(0+256),w
 11681  03B6  3E44               	addlw	_pstowfstru& (0+255)
 11682  03B7  0086               	movwf	6
 11683  03B8  3002               	movlw	2	; select bank4/5
 11684  03B9  0087               	movwf	7
 11685  03BA  0020               	movlb	0	; select bank0
 11686  03BB  084B               	movf	??_ISR_Function,w
 11687  03BC  0081               	movwf	1
 11688  03BD  3001               	movlw	1
 11689  03BE  0022               	movlb	2	; select bank2
 11690  03BF  07A8               	addwf	_ijk^(0+256),f
 11691  03C0  3000               	movlw	0
 11692  03C1  3DA9               	addwfc	(_ijk+1)^(0+256),f
 11693  03C2  3000               	movlw	0
 11694  03C3  0229               	subwf	(_ijk+1)^(0+256),w
 11695  03C4  3017               	movlw	23
 11696  03C5  1903               	skipnz
 11697  03C6  0228               	subwf	_ijk^(0+256),w
 11698  03C7  1C03               	skipc
 11699  03C8  2BAC               	goto	i1l5201
 11700  03C9                     i1l5207:	
 11701                           
 11702                           ;main.c: 343: }
 11703                           ;main.c: 345: weldmode=pstowfstru.pstowfstrs.weldmode;
 11704  03C9  0024               	movlb	4	; select bank4
 11705  03CA  0844               	movf	_pstowfstru^(0+512),w
 11706  03CB  0020               	movlb	0	; select bank0
 11707  03CC  00CB               	movwf	??_ISR_Function
 11708  03CD  084B               	movf	??_ISR_Function,w
 11709  03CE  00E7               	movwf	_weldmode	;volatile
 11710                           
 11711                           ;main.c: 346: setwirespeed=pstowfstru.pstowfstrs.setwspeed;
 11712  03CF  0024               	movlb	4	; select bank4
 11713  03D0  0845               	movf	(_pstowfstru^(0+512)+1),w
 11714  03D1  0020               	movlb	0	; select bank0
 11715  03D2  00CB               	movwf	??_ISR_Function
 11716  03D3  01CC               	clrf	??_ISR_Function+1
 11717  03D4  084B               	movf	??_ISR_Function,w
 11718  03D5  00DA               	movwf	_setwirespeed
 11719  03D6  084C               	movf	??_ISR_Function+1,w
 11720  03D7  00DB               	movwf	_setwirespeed+1
 11721                           
 11722                           ;main.c: 350: if(1)
 11723  03D8  0024               	movlb	4	; select bank4
 11724  03D9  0851               	movf	(_pstowfstru^(0+512)+13),w
 11725  03DA  0020               	movlb	0	; select bank0
 11726  03DB  00CB               	movwf	??_ISR_Function
 11727  03DC  084B               	movf	??_ISR_Function,w
 11728  03DD  0022               	movlb	2	; select bank2
 11729  03DE  00EB               	movwf	_wfstatusu^(0+256)
 11730                           
 11731                           ;main.c: 351: {
 11732                           ;main.c: 352: TypeU.TypeS.twot=0;
 11733  03DF  0020               	movlb	0	; select bank0
 11734  03E0  1268               	bcf	_TypeU,4
 11735                           
 11736                           ;main.c: 353: TypeU.TypeS.fourt=1;
 11737  03E1  16E8               	bsf	_TypeU,5
 11738                           
 11739                           ;main.c: 359: }
 11740                           ;main.c: 361: if(cEditfg == 0)
 11741                           
 11742                           ;main.c: 358: TypeU.TypeS.fourt=0;
 11743                           
 11744                           ;main.c: 355: else
 11745                           ;main.c: 356: {
 11746                           ;main.c: 357: TypeU.TypeS.twot=1;
 11747                           
 11748                           ;main.c: 354: }
 11749  03E2  0022               	movlb	2	; select bank2
 11750  03E3  08B9               	movf	_cEditfg^(0+256),f
 11751  03E4  1D03               	skipz
 11752  03E5  2BFD               	goto	i1l621
 11753                           
 11754                           ;main.c: 362: {
 11755                           ;main.c: 363: setvoltage=pstowfstru.pstowfstrs.Hi_setvoltage;
 11756  03E6  0024               	movlb	4	; select bank4
 11757  03E7  0849               	movf	(_pstowfstru^(0+512)+5),w
 11758  03E8  0020               	movlb	0	; select bank0
 11759  03E9  00CB               	movwf	??_ISR_Function
 11760  03EA  01CC               	clrf	??_ISR_Function+1
 11761  03EB  084B               	movf	??_ISR_Function,w
 11762  03EC  00D8               	movwf	_setvoltage
 11763  03ED  084C               	movf	??_ISR_Function+1,w
 11764  03EE  00D9               	movwf	_setvoltage+1
 11765                           
 11766                           ;main.c: 364: setvoltage<<=8;
 11767  03EF  3008               	movlw	8
 11768  03F0                     u740_25:	
 11769  03F0  35D8               	lslf	_setvoltage,f
 11770  03F1  0DD9               	rlf	_setvoltage+1,f
 11771  03F2  0B89               	decfsz	9,f
 11772  03F3  2BF0               	goto	u740_25
 11773                           
 11774                           ;main.c: 365: setvoltage|=pstowfstru.pstowfstrs.Lo_setvoltage;
 11775  03F4  0024               	movlb	4	; select bank4
 11776  03F5  084A               	movf	(_pstowfstru^(0+512)+6),w
 11777  03F6  0020               	movlb	0	; select bank0
 11778  03F7  00CB               	movwf	??_ISR_Function
 11779  03F8  01CC               	clrf	??_ISR_Function+1
 11780  03F9  084B               	movf	??_ISR_Function,w
 11781  03FA  04D8               	iorwf	_setvoltage,f
 11782  03FB  084C               	movf	??_ISR_Function+1,w
 11783  03FC  04D9               	iorwf	_setvoltage+1,f
 11784  03FD                     i1l621:	
 11785                           
 11786                           ;main.c: 366: }
 11787                           ;main.c: 367: setcurrent=pstowfstru.pstowfstrs.Hi_setcurrent;
 11788  03FD  0024               	movlb	4	; select bank4
 11789  03FE  0846               	movf	(_pstowfstru^(0+512)+2),w
 11790  03FF  0020               	movlb	0	; select bank0
 11791  0400  00CB               	movwf	??_ISR_Function
 11792  0401  01CC               	clrf	??_ISR_Function+1
 11793  0402  084B               	movf	??_ISR_Function,w
 11794  0403  0022               	movlb	2	; select bank2
 11795  0404  00AE               	movwf	_setcurrent^(0+256)
 11796  0405  0020               	movlb	0	; select bank0
 11797  0406  084C               	movf	??_ISR_Function+1,w
 11798  0407  0022               	movlb	2	; select bank2
 11799  0408  00AF               	movwf	(_setcurrent+1)^(0+256)
 11800                           
 11801                           ;main.c: 368: setcurrent<<=8;
 11802  0409  3008               	movlw	8
 11803  040A                     u741_25:	
 11804  040A  35AE               	lslf	_setcurrent^(0+256),f
 11805  040B  0DAF               	rlf	(_setcurrent+1)^(0+256),f
 11806  040C  0B89               	decfsz	9,f
 11807  040D  2C0A               	goto	u741_25
 11808                           
 11809                           ;main.c: 369: setcurrent|=pstowfstru.pstowfstrs.Lo_setcurrent;
 11810  040E  0024               	movlb	4	; select bank4
 11811  040F  0847               	movf	(_pstowfstru^(0+512)+3),w
 11812  0410  0020               	movlb	0	; select bank0
 11813  0411  00CB               	movwf	??_ISR_Function
 11814  0412  01CC               	clrf	??_ISR_Function+1
 11815  0413  084B               	movf	??_ISR_Function,w
 11816  0414  0022               	movlb	2	; select bank2
 11817  0415  04AE               	iorwf	_setcurrent^(0+256),f
 11818  0416  0020               	movlb	0	; select bank0
 11819  0417  084C               	movf	??_ISR_Function+1,w
 11820  0418  0022               	movlb	2	; select bank2
 11821  0419  04AF               	iorwf	(_setcurrent+1)^(0+256),f
 11822                           
 11823                           ;main.c: 371: Actual_amp=pstowfstru.pstowfstrs.Hi_actualcurrent;
 11824  041A  0024               	movlb	4	; select bank4
 11825  041B  084C               	movf	(_pstowfstru^(0+512)+8),w
 11826  041C  0020               	movlb	0	; select bank0
 11827  041D  00CB               	movwf	??_ISR_Function
 11828  041E  01CC               	clrf	??_ISR_Function+1
 11829  041F  084B               	movf	??_ISR_Function,w
 11830  0420  0023               	movlb	3	; select bank3
 11831  0421  00E5               	movwf	_Actual_amp^(0+384)
 11832  0422  0020               	movlb	0	; select bank0
 11833  0423  084C               	movf	??_ISR_Function+1,w
 11834  0424  0023               	movlb	3	; select bank3
 11835  0425  00E6               	movwf	(_Actual_amp+1)^(0+384)
 11836                           
 11837                           ;main.c: 372: Actual_amp<<=8;
 11838  0426  3008               	movlw	8
 11839  0427                     u742_25:	
 11840  0427  35E5               	lslf	_Actual_amp^(0+384),f
 11841  0428  0DE6               	rlf	(_Actual_amp+1)^(0+384),f
 11842  0429  0B89               	decfsz	9,f
 11843  042A  2C27               	goto	u742_25
 11844                           
 11845                           ;main.c: 373: Actual_amp|=pstowfstru.pstowfstrs.Lo_actualcurrent;
 11846  042B  0024               	movlb	4	; select bank4
 11847  042C  084D               	movf	(_pstowfstru^(0+512)+9),w
 11848  042D  0020               	movlb	0	; select bank0
 11849  042E  00CB               	movwf	??_ISR_Function
 11850  042F  01CC               	clrf	??_ISR_Function+1
 11851  0430  084B               	movf	??_ISR_Function,w
 11852  0431  0023               	movlb	3	; select bank3
 11853  0432  04E5               	iorwf	_Actual_amp^(0+384),f
 11854  0433  0020               	movlb	0	; select bank0
 11855  0434  084C               	movf	??_ISR_Function+1,w
 11856  0435  0023               	movlb	3	; select bank3
 11857  0436  04E6               	iorwf	(_Actual_amp+1)^(0+384),f
 11858                           
 11859                           ;main.c: 375: Actual_vtg=pstowfstru.pstowfstrs.Hi_actualvoltage;
 11860  0437  0024               	movlb	4	; select bank4
 11861  0438  084E               	movf	(_pstowfstru^(0+512)+10),w
 11862  0439  0020               	movlb	0	; select bank0
 11863  043A  00CB               	movwf	??_ISR_Function
 11864  043B  01CC               	clrf	??_ISR_Function+1
 11865  043C  084B               	movf	??_ISR_Function,w
 11866  043D  0024               	movlb	4	; select bank4
 11867  043E  00DB               	movwf	_Actual_vtg^(0+512)
 11868  043F  0020               	movlb	0	; select bank0
 11869  0440  084C               	movf	??_ISR_Function+1,w
 11870  0441  0024               	movlb	4	; select bank4
 11871  0442  00DC               	movwf	(_Actual_vtg+1)^(0+512)
 11872                           
 11873                           ;main.c: 376: Actual_vtg<<=8;
 11874  0443  3008               	movlw	8
 11875  0444                     u743_25:	
 11876  0444  35DB               	lslf	_Actual_vtg^(0+512),f
 11877  0445  0DDC               	rlf	(_Actual_vtg+1)^(0+512),f
 11878  0446  0B89               	decfsz	9,f
 11879  0447  2C44               	goto	u743_25
 11880                           
 11881                           ;main.c: 377: Actual_vtg|=pstowfstru.pstowfstrs.Lo_actualvoltage;
 11882  0448  084F               	movf	(_pstowfstru^(0+512)+11),w
 11883  0449  0020               	movlb	0	; select bank0
 11884  044A  00CB               	movwf	??_ISR_Function
 11885  044B  01CC               	clrf	??_ISR_Function+1
 11886  044C  084B               	movf	??_ISR_Function,w
 11887  044D  0024               	movlb	4	; select bank4
 11888  044E  04DB               	iorwf	_Actual_vtg^(0+512),f
 11889  044F  0020               	movlb	0	; select bank0
 11890  0450  084C               	movf	??_ISR_Function+1,w
 11891  0451  0024               	movlb	4	; select bank4
 11892  0452  04DC               	iorwf	(_Actual_vtg+1)^(0+512),f
 11893                           
 11894                           ;main.c: 381: cRelSpeedSign = pstowfstru.pstowfstrs.pulse_freq;
 11895  0453  0853               	movf	(_pstowfstru^(0+512)+15),w
 11896  0454  0020               	movlb	0	; select bank0
 11897  0455  00CB               	movwf	??_ISR_Function
 11898  0456  084B               	movf	??_ISR_Function,w
 11899  0457  0022               	movlb	2	; select bank2
 11900  0458  00BB               	movwf	_cRelSpeedSign^(0+256)
 11901                           
 11902                           ;main.c: 383: rel_wirespeed=pstowfstru.pstowfstrs.rel_wirespeed;
 11903  0459  0024               	movlb	4	; select bank4
 11904  045A  0852               	movf	(_pstowfstru^(0+512)+14),w
 11905  045B  0020               	movlb	0	; select bank0
 11906  045C  00CB               	movwf	??_ISR_Function
 11907  045D  01CC               	clrf	??_ISR_Function+1
 11908  045E  084B               	movf	??_ISR_Function,w
 11909  045F  0023               	movlb	3	; select bank3
 11910  0460  00C8               	movwf	_rel_wirespeed^(0+384)
 11911  0461  0020               	movlb	0	; select bank0
 11912  0462  084C               	movf	??_ISR_Function+1,w
 11913  0463  0023               	movlb	3	; select bank3
 11914  0464  00C9               	movwf	(_rel_wirespeed+1)^(0+384)
 11915                           
 11916                           ;main.c: 385: crater_speed=pstowfstru.pstowfstrs.crater_speed;
 11917  0465  0024               	movlb	4	; select bank4
 11918  0466  0856               	movf	(_pstowfstru^(0+512)+18),w
 11919  0467  0020               	movlb	0	; select bank0
 11920  0468  00CB               	movwf	??_ISR_Function
 11921  0469  084B               	movf	??_ISR_Function,w
 11922  046A  00DC               	movwf	_crater_speed	;volatile
 11923                           
 11924                           ;main.c: 387: if(cEditfg == 0)
 11925  046B  0022               	movlb	2	; select bank2
 11926  046C  08B9               	movf	_cEditfg^(0+256),f
 11927  046D  1D03               	skipz
 11928  046E  2C75               	goto	i1l622
 11929                           
 11930                           ;main.c: 388: {
 11931                           ;main.c: 389: psstatusu.psstatusbyte[0]=pstowfstru.pstowfstrs.psstatusbyte;
 11932  046F  0024               	movlb	4	; select bank4
 11933  0470  0850               	movf	(_pstowfstru^(0+512)+12),w
 11934  0471  0020               	movlb	0	; select bank0
 11935  0472  00CB               	movwf	??_ISR_Function
 11936  0473  084B               	movf	??_ISR_Function,w
 11937  0474  00EE               	movwf	_psstatusu
 11938  0475                     i1l622:	
 11939                           
 11940                           ;main.c: 390: }
 11941                           ;main.c: 392: error_code1=pstowfstru.pstowfstrs.error_code1;
 11942  0475  0024               	movlb	4	; select bank4
 11943  0476  0854               	movf	(_pstowfstru^(0+512)+16),w
 11944  0477  0020               	movlb	0	; select bank0
 11945  0478  00CB               	movwf	??_ISR_Function
 11946  0479  084B               	movf	??_ISR_Function,w
 11947  047A  0023               	movlb	3	; select bank3
 11948  047B  00D1               	movwf	_error_code1^(0+384)	;volatile
 11949                           
 11950                           ;main.c: 393: error_code2=pstowfstru.pstowfstrs.error_code2;
 11951  047C  0024               	movlb	4	; select bank4
 11952  047D  0855               	movf	(_pstowfstru^(0+512)+17),w
 11953  047E  0020               	movlb	0	; select bank0
 11954  047F  00CB               	movwf	??_ISR_Function
 11955  0480  084B               	movf	??_ISR_Function,w
 11956  0481  0023               	movlb	3	; select bank3
 11957  0482  00D2               	movwf	_error_code2^(0+384)	;volatile
 11958                           
 11959                           ;main.c: 395: commandu.commandbyte[0]=pstowfstru.pstowfstrs.command_to_wf;
 11960  0483  0024               	movlb	4	; select bank4
 11961  0484  0858               	movf	(_pstowfstru^(0+512)+20),w
 11962  0485  0020               	movlb	0	; select bank0
 11963  0486  00CB               	movwf	??_ISR_Function
 11964  0487  084B               	movf	??_ISR_Function,w
 11965  0488  0022               	movlb	2	; select bank2
 11966  0489  00EA               	movwf	_commandu^(0+256)
 11967                           
 11968                           ;main.c: 396: erroru.errorstatusbyte[0]=pstowfstru.pstowfstrs.error_code1;;
 11969  048A  0024               	movlb	4	; select bank4
 11970  048B  0854               	movf	(_pstowfstru^(0+512)+16),w
 11971  048C  0020               	movlb	0	; select bank0
 11972  048D  00CB               	movwf	??_ISR_Function
 11973  048E  084B               	movf	??_ISR_Function,w
 11974  048F  0022               	movlb	2	; select bank2
 11975  0490  00E6               	movwf	_erroru^(0+256)
 11976                           
 11977                           ;main.c: 397: erroru.errorstatusbyte[1]=pstowfstru.pstowfstrs.error_code2;
 11978  0491  0024               	movlb	4	; select bank4
 11979  0492  0855               	movf	(_pstowfstru^(0+512)+17),w
 11980  0493  0020               	movlb	0	; select bank0
 11981  0494  00CB               	movwf	??_ISR_Function
 11982  0495  084B               	movf	??_ISR_Function,w
 11983  0496  0022               	movlb	2	; select bank2
 11984  0497  00E7               	movwf	(_erroru^(0+256)+1)
 11985                           
 11986                           ;main.c: 399: creep_speed=pstowfstru.pstowfstrs.creep_speed;
 11987  0498  0024               	movlb	4	; select bank4
 11988  0499  0857               	movf	(_pstowfstru^(0+512)+19),w
 11989  049A  0020               	movlb	0	; select bank0
 11990  049B  00CB               	movwf	??_ISR_Function
 11991  049C  084B               	movf	??_ISR_Function,w
 11992  049D  0022               	movlb	2	; select bank2
 11993  049E  00C3               	movwf	_creep_speed^(0+256)	;volatile
 11994                           
 11995                           ;main.c: 401: if(commandu.commands.volt_or_arc==1)
 11996  049F  1C6A               	btfss	_commandu^(0+256),0
 11997  04A0  2CA5               	goto	i1l623
 11998                           
 11999                           ;main.c: 403: {
 12000                           ;main.c: 404: TypeU.TypeS.arclength=0;
 12001  04A1  0020               	movlb	0	; select bank0
 12002  04A2  1168               	bcf	_TypeU,2
 12003                           
 12004                           ;main.c: 405: TypeU.TypeS.vtg =1;
 12005  04A3  14E9               	bsf	_TypeU+1,1
 12006                           
 12007                           ;main.c: 406: }
 12008  04A4  2CA8               	goto	i1l624
 12009  04A5                     i1l623:	
 12010                           
 12011                           ;main.c: 407: else
 12012                           ;main.c: 408: {
 12013                           ;main.c: 409: TypeU.TypeS.arclength=1;
 12014  04A5  0020               	movlb	0	; select bank0
 12015  04A6  1568               	bsf	_TypeU,2
 12016                           
 12017                           ;main.c: 410: TypeU.TypeS.vtg =0;
 12018  04A7  10E9               	bcf	_TypeU+1,1
 12019  04A8                     i1l624:	
 12020                           
 12021                           ;main.c: 411: }
 12022                           ;main.c: 413: if(wfstatusu.wfstatuss.twotfourtmode1 == 1)
 12023  04A8  0022               	movlb	2	; select bank2
 12024  04A9  1C6B               	btfss	_wfstatusu^(0+256),0
 12025  04AA  2CAE               	goto	i1l5227
 12026                           
 12027                           ;main.c: 414: {
 12028                           ;main.c: 415: cWf2t4tmodefg = 1;
 12029  04AB  01BD               	clrf	_cWf2t4tmodefg^(0+256)
 12030  04AC  0ABD               	incf	_cWf2t4tmodefg^(0+256),f
 12031                           
 12032                           ;main.c: 416: }
 12033  04AD  2CAF               	goto	i1l626
 12034  04AE                     i1l5227:	
 12035                           
 12036                           ;main.c: 417: else
 12037                           ;main.c: 418: {
 12038                           ;main.c: 419: cWf2t4tmodefg = 0;
 12039  04AE  01BD               	clrf	_cWf2t4tmodefg^(0+256)
 12040  04AF                     i1l626:	
 12041                           
 12042                           ;main.c: 420: }
 12043                           ;main.c: 421: startptr1=0;
 12044  04AF  0020               	movlb	0	; select bank0
 12045  04B0  01E5               	clrf	_startptr1
 12046                           
 12047                           ;main.c: 422: arrptr=0;
 12048  04B1  0022               	movlb	2	; select bank2
 12049  04B2  01B8               	clrf	_arrptr^(0+256)
 12050                           
 12051                           ;main.c: 423: recchksum=0;
 12052  04B3  01DA               	clrf	_recchksum^(0+256)
 12053                           
 12054                           ;main.c: 424: recstatus=0;
 12055  04B4  0023               	movlb	3	; select bank3
 12056  04B5  01C6               	clrf	_recstatus^(0+384)
 12057  04B6  01C7               	clrf	(_recstatus+1)^(0+384)
 12058                           
 12059                           ;main.c: 425: statusptr1=0;
 12060  04B7  0022               	movlb	2	; select bank2
 12061  04B8  01B0               	clrf	_statusptr1^(0+256)
 12062  04B9  01B1               	clrf	(_statusptr1+1)^(0+256)
 12063                           
 12064                           ;main.c: 426: transmitonf=1;
 12065  04BA  01E1               	clrf	_transmitonf^(0+256)
 12066  04BB  0AE1               	incf	_transmitonf^(0+256),f
 12067                           
 12068                           ;main.c: 427: onesecf=1;
 12069  04BC  3001               	movlw	1
 12070  04BD  0020               	movlb	0	; select bank0
 12071  04BE  00CB               	movwf	??_ISR_Function
 12072  04BF  084B               	movf	??_ISR_Function,w
 12073  04C0  00E2               	movwf	_onesecf	;volatile
 12074                           
 12075                           ;main.c: 428: }
 12076  04C1  2CCC               	goto	i1l582
 12077  04C2                     i1l5233:	
 12078                           
 12079                           ;main.c: 429: else
 12080                           ;main.c: 430: {
 12081                           ;main.c: 432: recstatus=0;
 12082  04C2  0023               	movlb	3	; select bank3
 12083  04C3  01C6               	clrf	_recstatus^(0+384)
 12084  04C4  01C7               	clrf	(_recstatus+1)^(0+384)
 12085                           
 12086                           ;main.c: 433: startptr1=0;
 12087  04C5  0020               	movlb	0	; select bank0
 12088  04C6  01E5               	clrf	_startptr1
 12089                           
 12090                           ;main.c: 434: statusptr1=0;
 12091  04C7  0022               	movlb	2	; select bank2
 12092  04C8  01B0               	clrf	_statusptr1^(0+256)
 12093  04C9  01B1               	clrf	(_statusptr1+1)^(0+256)
 12094  04CA                     L25:	
 12095                           
 12096                           ;main.c: 435: arrptr=0;
 12097  04CA  01B8               	clrf	_arrptr^(0+256)
 12098  04CB                     L23:	
 12099                           
 12100                           ;main.c: 436: recchksum=0;
 12101  04CB  01DA               	clrf	_recchksum^(0+256)
 12102  04CC                     i1l582:	
 12103  04CC  0020               	movlb	0	; select bank0
 12104  04CD  0853               	movf	??_ISR_Function+8,w
 12105  04CE  00FF               	movwf	127
 12106  04CF  107E               	bcf	126,0	;clear compiler interrupt flag
 12107  04D0  0009               	retfie
 12108  04D1                     __end_of_ISR_Function:	
 12109                           
 12110                           	psect	text37
 12111  18D3                     __ptext37:	
 12112 ;; *************** function i1___lwtoft *****************
 12113 ;; Defined at:
 12114 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 12115 ;; Parameters:    Size  Location     Type
 12116 ;;  c               2    8[COMMON] unsigned int 
 12117 ;; Auto vars:     Size  Location     Type
 12118 ;;		None
 12119 ;; Return value:  Size  Location     Type
 12120 ;;                  3    8[COMMON] float 
 12121 ;; Registers used:
 12122 ;;		wreg, status,2, status,0, pclath, cstack
 12123 ;; Tracked objects:
 12124 ;;		On entry : 0/0
 12125 ;;		On exit  : 0/0
 12126 ;;		Unchanged: 0/0
 12127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12128 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12131 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12132 ;;Total ram usage:        4 bytes
 12133 ;; Hardware stack levels used:    1
 12134 ;; Hardware stack levels required when called:    1
 12135 ;; This function calls:
 12136 ;;		i1___ftpack
 12137 ;; This function is called by:
 12138 ;;		_ISR_Function
 12139 ;; This function uses a non-reentrant model
 12140 ;;
 12141                           
 12142                           
 12143                           ;psect for function i1___lwtoft
 12144  18D3                     i1___lwtoft:	
 12145                           
 12146                           ;incstack = 0
 12147                           ; Regs used in i1___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 12148  18D3  0878               	movf	i1___lwtoft@c,w
 12149  18D4  00F0               	movwf	i1___ftpack@arg
 12150  18D5  0879               	movf	i1___lwtoft@c+1,w
 12151  18D6  00F1               	movwf	i1___ftpack@arg+1
 12152  18D7  01F2               	clrf	i1___ftpack@arg+2
 12153  18D8  308E               	movlw	142
 12154  18D9  00FB               	movwf	??i1___lwtoft
 12155  18DA  087B               	movf	??i1___lwtoft,w
 12156  18DB  00F3               	movwf	i1___ftpack@exp
 12157  18DC  01F4               	clrf	i1___ftpack@sign
 12158  18DD  319B  2366         	fcall	i1___ftpack
 12159  18DF  0870               	movf	?i1___ftpack,w
 12160  18E0  00F8               	movwf	?i1___lwtoft
 12161  18E1  0871               	movf	?i1___ftpack+1,w
 12162  18E2  00F9               	movwf	?i1___lwtoft+1
 12163  18E3  0872               	movf	?i1___ftpack+2,w
 12164  18E4  00FA               	movwf	?i1___lwtoft+2
 12165  18E5  0008               	return
 12166  18E6                     __end_ofi1___lwtoft:	
 12167                           
 12168                           	psect	text38
 12169  1EF2                     __ptext38:	
 12170 ;; *************** function i1___fttol *****************
 12171 ;; Defined at:
 12172 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
 12173 ;; Parameters:    Size  Location     Type
 12174 ;;  f1              3   29[BANK0 ] float 
 12175 ;; Auto vars:     Size  Location     Type
 12176 ;;  __fttol         4   38[BANK0 ] unsigned long 
 12177 ;;  __fttol         1   42[BANK0 ] unsigned char 
 12178 ;;  __fttol         1   37[BANK0 ] unsigned char 
 12179 ;; Return value:  Size  Location     Type
 12180 ;;                  4   29[BANK0 ] long 
 12181 ;; Registers used:
 12182 ;;		wreg, status,2, status,0
 12183 ;; Tracked objects:
 12184 ;;		On entry : 0/0
 12185 ;;		On exit  : 0/0
 12186 ;;		Unchanged: 0/0
 12187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12188 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12189 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12190 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12191 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12192 ;;Total ram usage:       14 bytes
 12193 ;; Hardware stack levels used:    1
 12194 ;; This function calls:
 12195 ;;		Nothing
 12196 ;; This function is called by:
 12197 ;;		_ISR_Function
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201                           
 12202                           ;psect for function i1___fttol
 12203  1EF2                     i1___fttol:	
 12204                           
 12205                           ;incstack = 0
 12206                           ; Regs used in i1___fttol: [wreg+status,2+status,0]
 12207  1EF2  0020               	movlb	0	; select bank0
 12208  1EF3  083D               	movf	i1___fttol@f1,w
 12209  1EF4  00C1               	movwf	??i1___fttol
 12210  1EF5  083E               	movf	i1___fttol@f1+1,w
 12211  1EF6  00C2               	movwf	??i1___fttol+1
 12212  1EF7  083F               	movf	i1___fttol@f1+2,w
 12213  1EF8  00C3               	movwf	??i1___fttol+2
 12214  1EF9  1003               	clrc
 12215  1EFA  0D42               	rlf	??i1___fttol+1,w
 12216  1EFB  0D43               	rlf	??i1___fttol+2,w
 12217  1EFC  00C4               	movwf	??i1___fttol+3
 12218  1EFD  0844               	movf	??i1___fttol+3,w
 12219  1EFE  00CA               	movwf	i1___fttol@exp1
 12220  1EFF  08CA               	movf	i1___fttol@exp1,f
 12221  1F00  1D03               	skipz
 12222  1F01  2F0B               	goto	i1l4883
 12223  1F02  3000               	movlw	0
 12224  1F03  00C0               	movwf	?i1___fttol+3
 12225  1F04  3000               	movlw	0
 12226  1F05  00BF               	movwf	?i1___fttol+2
 12227  1F06  3000               	movlw	0
 12228  1F07  00BE               	movwf	?i1___fttol+1
 12229  1F08  3000               	movlw	0
 12230  1F09  00BD               	movwf	?i1___fttol
 12231  1F0A  0008               	return
 12232  1F0B                     i1l4883:	
 12233  1F0B  083D               	movf	i1___fttol@f1,w
 12234  1F0C  00C1               	movwf	??i1___fttol
 12235  1F0D  083E               	movf	i1___fttol@f1+1,w
 12236  1F0E  00C2               	movwf	??i1___fttol+1
 12237  1F0F  083F               	movf	i1___fttol@f1+2,w
 12238  1F10  00C3               	movwf	??i1___fttol+2
 12239  1F11  3017               	movlw	23
 12240  1F12                     u677_25:	
 12241  1F12  36C3               	lsrf	??i1___fttol+2,f
 12242  1F13  0CC2               	rrf	??i1___fttol+1,f
 12243  1F14  0CC1               	rrf	??i1___fttol,f
 12244  1F15  0B89               	decfsz	9,f
 12245  1F16  2F12               	goto	u677_25
 12246  1F17  0841               	movf	??i1___fttol,w
 12247  1F18  00C4               	movwf	??i1___fttol+3
 12248  1F19  0844               	movf	??i1___fttol+3,w
 12249  1F1A  00C5               	movwf	i1___fttol@sign1
 12250  1F1B  17BE               	bsf	i1___fttol@f1+1,7
 12251  1F1C  30FF               	movlw	255
 12252  1F1D  05BD               	andwf	i1___fttol@f1,f
 12253  1F1E  30FF               	movlw	255
 12254  1F1F  05BE               	andwf	i1___fttol@f1+1,f
 12255  1F20  3000               	movlw	0
 12256  1F21  05BF               	andwf	i1___fttol@f1+2,f
 12257  1F22  083D               	movf	i1___fttol@f1,w
 12258  1F23  00C6               	movwf	i1___fttol@lval
 12259  1F24  083E               	movf	i1___fttol@f1+1,w
 12260  1F25  00C7               	movwf	i1___fttol@lval+1
 12261  1F26  083F               	movf	i1___fttol@f1+2,w
 12262  1F27  00C8               	movwf	i1___fttol@lval+2
 12263  1F28  01C9               	clrf	i1___fttol@lval+3
 12264  1F29  308E               	movlw	142
 12265  1F2A  02CA               	subwf	i1___fttol@exp1,f
 12266  1F2B  1FCA               	btfss	i1___fttol@exp1,7
 12267  1F2C  2F49               	goto	i1l4903
 12268  1F2D  084A               	movf	i1___fttol@exp1,w
 12269  1F2E  3A80               	xorlw	128
 12270  1F2F  3E8F               	addlw	143
 12271  1F30  1803               	skipnc
 12272  1F31  2F3B               	goto	i1l4901
 12273  1F32  3000               	movlw	0
 12274  1F33  00C0               	movwf	?i1___fttol+3
 12275  1F34  3000               	movlw	0
 12276  1F35  00BF               	movwf	?i1___fttol+2
 12277  1F36  3000               	movlw	0
 12278  1F37  00BE               	movwf	?i1___fttol+1
 12279  1F38  3000               	movlw	0
 12280  1F39  00BD               	movwf	?i1___fttol
 12281  1F3A  0008               	return
 12282  1F3B                     i1l4901:	
 12283  1F3B  3001               	movlw	1
 12284  1F3C                     u680_25:	
 12285  1F3C  36C9               	lsrf	i1___fttol@lval+3,f
 12286  1F3D  0CC8               	rrf	i1___fttol@lval+2,f
 12287  1F3E  0CC7               	rrf	i1___fttol@lval+1,f
 12288  1F3F  0CC6               	rrf	i1___fttol@lval,f
 12289  1F40  0B89               	decfsz	9,f
 12290  1F41  2F3C               	goto	u680_25
 12291  1F42  3001               	movlw	1
 12292  1F43  00C1               	movwf	??i1___fttol
 12293  1F44  0841               	movf	??i1___fttol,w
 12294  1F45  07CA               	addwf	i1___fttol@exp1,f
 12295  1F46  1903               	btfsc	3,2
 12296  1F47  2F62               	goto	i1l4913
 12297  1F48  2F3B               	goto	i1l4901
 12298  1F49                     i1l4903:	
 12299  1F49  3018               	movlw	24
 12300  1F4A  024A               	subwf	i1___fttol@exp1,w
 12301  1F4B  1C03               	skipc
 12302  1F4C  2F5F               	goto	i1l4911
 12303  1F4D  3000               	movlw	0
 12304  1F4E  00C0               	movwf	?i1___fttol+3
 12305  1F4F  3000               	movlw	0
 12306  1F50  00BF               	movwf	?i1___fttol+2
 12307  1F51  3000               	movlw	0
 12308  1F52  00BE               	movwf	?i1___fttol+1
 12309  1F53  3000               	movlw	0
 12310  1F54  00BD               	movwf	?i1___fttol
 12311  1F55  0008               	return
 12312  1F56                     i1l4909:	
 12313  1F56  3001               	movlw	1
 12314  1F57                     u683_25:	
 12315  1F57  35C6               	lslf	i1___fttol@lval,f
 12316  1F58  0DC7               	rlf	i1___fttol@lval+1,f
 12317  1F59  0DC8               	rlf	i1___fttol@lval+2,f
 12318  1F5A  0DC9               	rlf	i1___fttol@lval+3,f
 12319  1F5B  0B89               	decfsz	9,f
 12320  1F5C  2F57               	goto	u683_25
 12321  1F5D  3001               	movlw	1
 12322  1F5E  02CA               	subwf	i1___fttol@exp1,f
 12323  1F5F                     i1l4911:	
 12324  1F5F  08CA               	movf	i1___fttol@exp1,f
 12325  1F60  1D03               	skipz
 12326  1F61  2F56               	goto	i1l4909
 12327  1F62                     i1l4913:	
 12328  1F62  0845               	movf	i1___fttol@sign1,w
 12329  1F63  1903               	btfsc	3,2
 12330  1F64  2F70               	goto	i1l4917
 12331  1F65  09C6               	comf	i1___fttol@lval,f
 12332  1F66  09C7               	comf	i1___fttol@lval+1,f
 12333  1F67  09C8               	comf	i1___fttol@lval+2,f
 12334  1F68  09C9               	comf	i1___fttol@lval+3,f
 12335  1F69  0AC6               	incf	i1___fttol@lval,f
 12336  1F6A  1903               	skipnz
 12337  1F6B  0AC7               	incf	i1___fttol@lval+1,f
 12338  1F6C  1903               	skipnz
 12339  1F6D  0AC8               	incf	i1___fttol@lval+2,f
 12340  1F6E  1903               	skipnz
 12341  1F6F  0AC9               	incf	i1___fttol@lval+3,f
 12342  1F70                     i1l4917:	
 12343  1F70  0849               	movf	i1___fttol@lval+3,w
 12344  1F71  00C0               	movwf	?i1___fttol+3
 12345  1F72  0848               	movf	i1___fttol@lval+2,w
 12346  1F73  00BF               	movwf	?i1___fttol+2
 12347  1F74  0847               	movf	i1___fttol@lval+1,w
 12348  1F75  00BE               	movwf	?i1___fttol+1
 12349  1F76  0846               	movf	i1___fttol@lval,w
 12350  1F77  00BD               	movwf	?i1___fttol
 12351  1F78  0008               	return
 12352  1F79                     __end_ofi1___fttol:	
 12353                           
 12354                           	psect	text39
 12355  121F                     __ptext39:	
 12356 ;; *************** function i1___ftmul *****************
 12357 ;; Defined at:
 12358 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
 12359 ;; Parameters:    Size  Location     Type
 12360 ;;  f1              3    0[BANK0 ] float 
 12361 ;;  f2              3    3[BANK0 ] float 
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;  __ftmul         3   11[BANK0 ] unsigned um
 12364 ;;  __ftmul         1   15[BANK0 ] unsigned char 
 12365 ;;  __ftmul         1   14[BANK0 ] unsigned char 
 12366 ;;  __ftmul         1   10[BANK0 ] unsigned char 
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  3    0[BANK0 ] float 
 12369 ;; Registers used:
 12370 ;;		wreg, status,2, status,0, pclath, cstack
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12376 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12377 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12378 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12379 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12380 ;;Total ram usage:       16 bytes
 12381 ;; Hardware stack levels used:    1
 12382 ;; Hardware stack levels required when called:    1
 12383 ;; This function calls:
 12384 ;;		i1___ftpack
 12385 ;; This function is called by:
 12386 ;;		_ISR_Function
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           
 12391                           ;psect for function i1___ftmul
 12392  121F                     i1___ftmul:	
 12393                           
 12394                           ;incstack = 0
 12395                           ; Regs used in i1___ftmul: [wreg+status,2+status,0+pclath+cstack]
 12396  121F  0020               	movlb	0	; select bank0
 12397  1220  0820               	movf	i1___ftmul@f1,w
 12398  1221  00A6               	movwf	??i1___ftmul
 12399  1222  0821               	movf	i1___ftmul@f1+1,w
 12400  1223  00A7               	movwf	??i1___ftmul+1
 12401  1224  0822               	movf	i1___ftmul@f1+2,w
 12402  1225  00A8               	movwf	??i1___ftmul+2
 12403  1226  1003               	clrc
 12404  1227  0D27               	rlf	??i1___ftmul+1,w
 12405  1228  0D28               	rlf	??i1___ftmul+2,w
 12406  1229  00A9               	movwf	??i1___ftmul+3
 12407  122A  0829               	movf	??i1___ftmul+3,w
 12408  122B  00AA               	movwf	i1___ftmul@exp
 12409  122C  08AA               	movf	i1___ftmul@exp,f
 12410  122D  1D03               	skipz
 12411  122E  2A36               	goto	i1l4833
 12412  122F  3000               	movlw	0
 12413  1230  00A0               	movwf	?i1___ftmul
 12414  1231  3000               	movlw	0
 12415  1232  00A1               	movwf	?i1___ftmul+1
 12416  1233  3000               	movlw	0
 12417  1234  00A2               	movwf	?i1___ftmul+2
 12418  1235  0008               	return
 12419  1236                     i1l4833:	
 12420  1236  0823               	movf	i1___ftmul@f2,w
 12421  1237  00A6               	movwf	??i1___ftmul
 12422  1238  0824               	movf	i1___ftmul@f2+1,w
 12423  1239  00A7               	movwf	??i1___ftmul+1
 12424  123A  0825               	movf	i1___ftmul@f2+2,w
 12425  123B  00A8               	movwf	??i1___ftmul+2
 12426  123C  1003               	clrc
 12427  123D  0D27               	rlf	??i1___ftmul+1,w
 12428  123E  0D28               	rlf	??i1___ftmul+2,w
 12429  123F  00A9               	movwf	??i1___ftmul+3
 12430  1240  0829               	movf	??i1___ftmul+3,w
 12431  1241  00AF               	movwf	i1___ftmul@sign
 12432  1242  08AF               	movf	i1___ftmul@sign,f
 12433  1243  1D03               	skipz
 12434  1244  2A4C               	goto	i1l4839
 12435  1245  3000               	movlw	0
 12436  1246  00A0               	movwf	?i1___ftmul
 12437  1247  3000               	movlw	0
 12438  1248  00A1               	movwf	?i1___ftmul+1
 12439  1249  3000               	movlw	0
 12440  124A  00A2               	movwf	?i1___ftmul+2
 12441  124B  0008               	return
 12442  124C                     i1l4839:	
 12443  124C  082F               	movf	i1___ftmul@sign,w
 12444  124D  3E7B               	addlw	123
 12445  124E  00A6               	movwf	??i1___ftmul
 12446  124F  0826               	movf	??i1___ftmul,w
 12447  1250  07AA               	addwf	i1___ftmul@exp,f
 12448  1251  0820               	movf	i1___ftmul@f1,w
 12449  1252  00A6               	movwf	??i1___ftmul
 12450  1253  0821               	movf	i1___ftmul@f1+1,w
 12451  1254  00A7               	movwf	??i1___ftmul+1
 12452  1255  0822               	movf	i1___ftmul@f1+2,w
 12453  1256  00A8               	movwf	??i1___ftmul+2
 12454  1257  3010               	movlw	16
 12455  1258                     u666_25:	
 12456  1258  36A8               	lsrf	??i1___ftmul+2,f
 12457  1259  0CA7               	rrf	??i1___ftmul+1,f
 12458  125A  0CA6               	rrf	??i1___ftmul,f
 12459  125B  0B89               	decfsz	9,f
 12460  125C  2A58               	goto	u666_25
 12461  125D  0826               	movf	??i1___ftmul,w
 12462  125E  00A9               	movwf	??i1___ftmul+3
 12463  125F  0829               	movf	??i1___ftmul+3,w
 12464  1260  00AF               	movwf	i1___ftmul@sign
 12465  1261  0823               	movf	i1___ftmul@f2,w
 12466  1262  00A6               	movwf	??i1___ftmul
 12467  1263  0824               	movf	i1___ftmul@f2+1,w
 12468  1264  00A7               	movwf	??i1___ftmul+1
 12469  1265  0825               	movf	i1___ftmul@f2+2,w
 12470  1266  00A8               	movwf	??i1___ftmul+2
 12471  1267  3010               	movlw	16
 12472  1268                     u667_25:	
 12473  1268  36A8               	lsrf	??i1___ftmul+2,f
 12474  1269  0CA7               	rrf	??i1___ftmul+1,f
 12475  126A  0CA6               	rrf	??i1___ftmul,f
 12476  126B  0B89               	decfsz	9,f
 12477  126C  2A68               	goto	u667_25
 12478  126D  0826               	movf	??i1___ftmul,w
 12479  126E  00A9               	movwf	??i1___ftmul+3
 12480  126F  0829               	movf	??i1___ftmul+3,w
 12481  1270  06AF               	xorwf	i1___ftmul@sign,f
 12482  1271  3080               	movlw	128
 12483  1272  00A6               	movwf	??i1___ftmul
 12484  1273  0826               	movf	??i1___ftmul,w
 12485  1274  05AF               	andwf	i1___ftmul@sign,f
 12486  1275  17A1               	bsf	i1___ftmul@f1+1,7
 12487  1276  17A4               	bsf	i1___ftmul@f2+1,7
 12488  1277  30FF               	movlw	255
 12489  1278  05A3               	andwf	i1___ftmul@f2,f
 12490  1279  30FF               	movlw	255
 12491  127A  05A4               	andwf	i1___ftmul@f2+1,f
 12492  127B  3000               	movlw	0
 12493  127C  05A5               	andwf	i1___ftmul@f2+2,f
 12494  127D  3000               	movlw	0
 12495  127E  00AB               	movwf	i1___ftmul@f3_as_product
 12496  127F  3000               	movlw	0
 12497  1280  00AC               	movwf	i1___ftmul@f3_as_product+1
 12498  1281  3000               	movlw	0
 12499  1282  00AD               	movwf	i1___ftmul@f3_as_product+2
 12500  1283  3007               	movlw	7
 12501  1284  00A6               	movwf	??i1___ftmul
 12502  1285  0826               	movf	??i1___ftmul,w
 12503  1286  00AE               	movwf	i1___ftmul@cntr
 12504  1287                     i1l4851:	
 12505  1287  1C20               	btfss	i1___ftmul@f1,0
 12506  1288  2A8F               	goto	i1l4855
 12507  1289  0823               	movf	i1___ftmul@f2,w
 12508  128A  07AB               	addwf	i1___ftmul@f3_as_product,f
 12509  128B  0824               	movf	i1___ftmul@f2+1,w
 12510  128C  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12511  128D  0825               	movf	i1___ftmul@f2+2,w
 12512  128E  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12513  128F                     i1l4855:	
 12514  128F  3001               	movlw	1
 12515  1290                     u669_25:	
 12516  1290  36A2               	lsrf	i1___ftmul@f1+2,f
 12517  1291  0CA1               	rrf	i1___ftmul@f1+1,f
 12518  1292  0CA0               	rrf	i1___ftmul@f1,f
 12519  1293  0B89               	decfsz	9,f
 12520  1294  2A90               	goto	u669_25
 12521  1295  3001               	movlw	1
 12522  1296                     u670_25:	
 12523  1296  35A3               	lslf	i1___ftmul@f2,f
 12524  1297  0DA4               	rlf	i1___ftmul@f2+1,f
 12525  1298  0DA5               	rlf	i1___ftmul@f2+2,f
 12526  1299  0B89               	decfsz	9,f
 12527  129A  2A96               	goto	u670_25
 12528  129B  3001               	movlw	1
 12529  129C  02AE               	subwf	i1___ftmul@cntr,f
 12530  129D  1D03               	btfss	3,2
 12531  129E  2A87               	goto	i1l4851
 12532  129F  3009               	movlw	9
 12533  12A0  00A6               	movwf	??i1___ftmul
 12534  12A1  0826               	movf	??i1___ftmul,w
 12535  12A2  00AE               	movwf	i1___ftmul@cntr
 12536  12A3                     i1l4863:	
 12537  12A3  1C20               	btfss	i1___ftmul@f1,0
 12538  12A4  2AAB               	goto	i1l4867
 12539  12A5  0823               	movf	i1___ftmul@f2,w
 12540  12A6  07AB               	addwf	i1___ftmul@f3_as_product,f
 12541  12A7  0824               	movf	i1___ftmul@f2+1,w
 12542  12A8  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
 12543  12A9  0825               	movf	i1___ftmul@f2+2,w
 12544  12AA  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
 12545  12AB                     i1l4867:	
 12546  12AB  3001               	movlw	1
 12547  12AC                     u673_25:	
 12548  12AC  36A2               	lsrf	i1___ftmul@f1+2,f
 12549  12AD  0CA1               	rrf	i1___ftmul@f1+1,f
 12550  12AE  0CA0               	rrf	i1___ftmul@f1,f
 12551  12AF  0B89               	decfsz	9,f
 12552  12B0  2AAC               	goto	u673_25
 12553  12B1  3001               	movlw	1
 12554  12B2                     u674_25:	
 12555  12B2  36AD               	lsrf	i1___ftmul@f3_as_product+2,f
 12556  12B3  0CAC               	rrf	i1___ftmul@f3_as_product+1,f
 12557  12B4  0CAB               	rrf	i1___ftmul@f3_as_product,f
 12558  12B5  0B89               	decfsz	9,f
 12559  12B6  2AB2               	goto	u674_25
 12560  12B7  3001               	movlw	1
 12561  12B8  02AE               	subwf	i1___ftmul@cntr,f
 12562  12B9  1D03               	btfss	3,2
 12563  12BA  2AA3               	goto	i1l4863
 12564  12BB  082B               	movf	i1___ftmul@f3_as_product,w
 12565  12BC  00F0               	movwf	i1___ftpack@arg
 12566  12BD  082C               	movf	i1___ftmul@f3_as_product+1,w
 12567  12BE  00F1               	movwf	i1___ftpack@arg+1
 12568  12BF  082D               	movf	i1___ftmul@f3_as_product+2,w
 12569  12C0  00F2               	movwf	i1___ftpack@arg+2
 12570  12C1  082A               	movf	i1___ftmul@exp,w
 12571  12C2  00A6               	movwf	??i1___ftmul
 12572  12C3  0826               	movf	??i1___ftmul,w
 12573  12C4  00F3               	movwf	i1___ftpack@exp
 12574  12C5  082F               	movf	i1___ftmul@sign,w
 12575  12C6  00A7               	movwf	??i1___ftmul+1
 12576  12C7  0827               	movf	??i1___ftmul+1,w
 12577  12C8  00F4               	movwf	i1___ftpack@sign
 12578  12C9  319B  2366         	fcall	i1___ftpack
 12579  12CB  0870               	movf	?i1___ftpack,w
 12580  12CC  0020               	movlb	0	; select bank0
 12581  12CD  00A0               	movwf	?i1___ftmul
 12582  12CE  0871               	movf	?i1___ftpack+1,w
 12583  12CF  00A1               	movwf	?i1___ftmul+1
 12584  12D0  0872               	movf	?i1___ftpack+2,w
 12585  12D1  00A2               	movwf	?i1___ftmul+2
 12586  12D2  0008               	return
 12587  12D3                     __end_ofi1___ftmul:	
 12588                           
 12589                           	psect	text40
 12590  101F                     __ptext40:	
 12591 ;; *************** function i1___ftdiv *****************
 12592 ;; Defined at:
 12593 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
 12594 ;; Parameters:    Size  Location     Type
 12595 ;;  f2              3    0[BANK0 ] float 
 12596 ;;  f1              3    3[BANK0 ] float 
 12597 ;; Auto vars:     Size  Location     Type
 12598 ;;  __ftdiv         3   11[BANK0 ] float 
 12599 ;;  __ftdiv         1   15[BANK0 ] unsigned char 
 12600 ;;  __ftdiv         1   14[BANK0 ] unsigned char 
 12601 ;;  __ftdiv         1   10[BANK0 ] unsigned char 
 12602 ;; Return value:  Size  Location     Type
 12603 ;;                  3    0[BANK0 ] float 
 12604 ;; Registers used:
 12605 ;;		wreg, status,2, status,0, pclath, cstack
 12606 ;; Tracked objects:
 12607 ;;		On entry : 0/0
 12608 ;;		On exit  : 0/0
 12609 ;;		Unchanged: 0/0
 12610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12611 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12612 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12613 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12614 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12615 ;;Total ram usage:       16 bytes
 12616 ;; Hardware stack levels used:    1
 12617 ;; Hardware stack levels required when called:    1
 12618 ;; This function calls:
 12619 ;;		i1___ftpack
 12620 ;; This function is called by:
 12621 ;;		_ISR_Function
 12622 ;; This function uses a non-reentrant model
 12623 ;;
 12624                           
 12625                           
 12626                           ;psect for function i1___ftdiv
 12627  101F                     i1___ftdiv:	
 12628                           
 12629                           ;incstack = 0
 12630                           ; Regs used in i1___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 12631  101F  0020               	movlb	0	; select bank0
 12632  1020  0823               	movf	i1___ftdiv@f1,w
 12633  1021  00A6               	movwf	??i1___ftdiv
 12634  1022  0824               	movf	i1___ftdiv@f1+1,w
 12635  1023  00A7               	movwf	??i1___ftdiv+1
 12636  1024  0825               	movf	i1___ftdiv@f1+2,w
 12637  1025  00A8               	movwf	??i1___ftdiv+2
 12638  1026  1003               	clrc
 12639  1027  0D27               	rlf	??i1___ftdiv+1,w
 12640  1028  0D28               	rlf	??i1___ftdiv+2,w
 12641  1029  00A9               	movwf	??i1___ftdiv+3
 12642  102A  0829               	movf	??i1___ftdiv+3,w
 12643  102B  00AE               	movwf	i1___ftdiv@exp
 12644  102C  08AE               	movf	i1___ftdiv@exp,f
 12645  102D  1D03               	skipz
 12646  102E  2836               	goto	i1l4791
 12647  102F  3000               	movlw	0
 12648  1030  00A0               	movwf	?i1___ftdiv
 12649  1031  3000               	movlw	0
 12650  1032  00A1               	movwf	?i1___ftdiv+1
 12651  1033  3000               	movlw	0
 12652  1034  00A2               	movwf	?i1___ftdiv+2
 12653  1035  0008               	return
 12654  1036                     i1l4791:	
 12655  1036  0820               	movf	i1___ftdiv@f2,w
 12656  1037  00A6               	movwf	??i1___ftdiv
 12657  1038  0821               	movf	i1___ftdiv@f2+1,w
 12658  1039  00A7               	movwf	??i1___ftdiv+1
 12659  103A  0822               	movf	i1___ftdiv@f2+2,w
 12660  103B  00A8               	movwf	??i1___ftdiv+2
 12661  103C  1003               	clrc
 12662  103D  0D27               	rlf	??i1___ftdiv+1,w
 12663  103E  0D28               	rlf	??i1___ftdiv+2,w
 12664  103F  00A9               	movwf	??i1___ftdiv+3
 12665  1040  0829               	movf	??i1___ftdiv+3,w
 12666  1041  00AF               	movwf	i1___ftdiv@sign
 12667  1042  08AF               	movf	i1___ftdiv@sign,f
 12668  1043  1D03               	skipz
 12669  1044  284C               	goto	i1l4797
 12670  1045  3000               	movlw	0
 12671  1046  00A0               	movwf	?i1___ftdiv
 12672  1047  3000               	movlw	0
 12673  1048  00A1               	movwf	?i1___ftdiv+1
 12674  1049  3000               	movlw	0
 12675  104A  00A2               	movwf	?i1___ftdiv+2
 12676  104B  0008               	return
 12677  104C                     i1l4797:	
 12678  104C  3000               	movlw	0
 12679  104D  00AB               	movwf	i1___ftdiv@f3
 12680  104E  3000               	movlw	0
 12681  104F  00AC               	movwf	i1___ftdiv@f3+1
 12682  1050  3000               	movlw	0
 12683  1051  00AD               	movwf	i1___ftdiv@f3+2
 12684  1052  3089               	movlw	137
 12685  1053  072F               	addwf	i1___ftdiv@sign,w
 12686  1054  00A6               	movwf	??i1___ftdiv
 12687  1055  0826               	movf	??i1___ftdiv,w
 12688  1056  02AE               	subwf	i1___ftdiv@exp,f
 12689  1057  0823               	movf	i1___ftdiv@f1,w
 12690  1058  00A6               	movwf	??i1___ftdiv
 12691  1059  0824               	movf	i1___ftdiv@f1+1,w
 12692  105A  00A7               	movwf	??i1___ftdiv+1
 12693  105B  0825               	movf	i1___ftdiv@f1+2,w
 12694  105C  00A8               	movwf	??i1___ftdiv+2
 12695  105D  3010               	movlw	16
 12696  105E                     u658_25:	
 12697  105E  36A8               	lsrf	??i1___ftdiv+2,f
 12698  105F  0CA7               	rrf	??i1___ftdiv+1,f
 12699  1060  0CA6               	rrf	??i1___ftdiv,f
 12700  1061  0B89               	decfsz	9,f
 12701  1062  285E               	goto	u658_25
 12702  1063  0826               	movf	??i1___ftdiv,w
 12703  1064  00A9               	movwf	??i1___ftdiv+3
 12704  1065  0829               	movf	??i1___ftdiv+3,w
 12705  1066  00AF               	movwf	i1___ftdiv@sign
 12706  1067  0820               	movf	i1___ftdiv@f2,w
 12707  1068  00A6               	movwf	??i1___ftdiv
 12708  1069  0821               	movf	i1___ftdiv@f2+1,w
 12709  106A  00A7               	movwf	??i1___ftdiv+1
 12710  106B  0822               	movf	i1___ftdiv@f2+2,w
 12711  106C  00A8               	movwf	??i1___ftdiv+2
 12712  106D  3010               	movlw	16
 12713  106E                     u659_25:	
 12714  106E  36A8               	lsrf	??i1___ftdiv+2,f
 12715  106F  0CA7               	rrf	??i1___ftdiv+1,f
 12716  1070  0CA6               	rrf	??i1___ftdiv,f
 12717  1071  0B89               	decfsz	9,f
 12718  1072  286E               	goto	u659_25
 12719  1073  0826               	movf	??i1___ftdiv,w
 12720  1074  00A9               	movwf	??i1___ftdiv+3
 12721  1075  0829               	movf	??i1___ftdiv+3,w
 12722  1076  06AF               	xorwf	i1___ftdiv@sign,f
 12723  1077  3080               	movlw	128
 12724  1078  00A6               	movwf	??i1___ftdiv
 12725  1079  0826               	movf	??i1___ftdiv,w
 12726  107A  05AF               	andwf	i1___ftdiv@sign,f
 12727  107B  17A4               	bsf	i1___ftdiv@f1+1,7
 12728  107C  30FF               	movlw	255
 12729  107D  05A3               	andwf	i1___ftdiv@f1,f
 12730  107E  30FF               	movlw	255
 12731  107F  05A4               	andwf	i1___ftdiv@f1+1,f
 12732  1080  3000               	movlw	0
 12733  1081  05A5               	andwf	i1___ftdiv@f1+2,f
 12734  1082  17A1               	bsf	i1___ftdiv@f2+1,7
 12735  1083  30FF               	movlw	255
 12736  1084  05A0               	andwf	i1___ftdiv@f2,f
 12737  1085  30FF               	movlw	255
 12738  1086  05A1               	andwf	i1___ftdiv@f2+1,f
 12739  1087  3000               	movlw	0
 12740  1088  05A2               	andwf	i1___ftdiv@f2+2,f
 12741  1089  3018               	movlw	24
 12742  108A  00A6               	movwf	??i1___ftdiv
 12743  108B  0826               	movf	??i1___ftdiv,w
 12744  108C  00AA               	movwf	i1___ftdiv@cntr
 12745  108D                     i1l4811:	
 12746  108D  3001               	movlw	1
 12747  108E                     u660_25:	
 12748  108E  35AB               	lslf	i1___ftdiv@f3,f
 12749  108F  0DAC               	rlf	i1___ftdiv@f3+1,f
 12750  1090  0DAD               	rlf	i1___ftdiv@f3+2,f
 12751  1091  0B89               	decfsz	9,f
 12752  1092  288E               	goto	u660_25
 12753  1093  0822               	movf	i1___ftdiv@f2+2,w
 12754  1094  0225               	subwf	i1___ftdiv@f1+2,w
 12755  1095  1D03               	skipz
 12756  1096  289D               	goto	u661_25
 12757  1097  0821               	movf	i1___ftdiv@f2+1,w
 12758  1098  0224               	subwf	i1___ftdiv@f1+1,w
 12759  1099  1D03               	skipz
 12760  109A  289D               	goto	u661_25
 12761  109B  0820               	movf	i1___ftdiv@f2,w
 12762  109C  0223               	subwf	i1___ftdiv@f1,w
 12763  109D                     u661_25:	
 12764  109D  1C03               	skipc
 12765  109E  28A6               	goto	i1l4819
 12766  109F  0820               	movf	i1___ftdiv@f2,w
 12767  10A0  02A3               	subwf	i1___ftdiv@f1,f
 12768  10A1  0821               	movf	i1___ftdiv@f2+1,w
 12769  10A2  3BA4               	subwfb	i1___ftdiv@f1+1,f
 12770  10A3  0822               	movf	i1___ftdiv@f2+2,w
 12771  10A4  3BA5               	subwfb	i1___ftdiv@f1+2,f
 12772  10A5  142B               	bsf	i1___ftdiv@f3,0
 12773  10A6                     i1l4819:	
 12774  10A6  3001               	movlw	1
 12775  10A7                     u662_25:	
 12776  10A7  35A3               	lslf	i1___ftdiv@f1,f
 12777  10A8  0DA4               	rlf	i1___ftdiv@f1+1,f
 12778  10A9  0DA5               	rlf	i1___ftdiv@f1+2,f
 12779  10AA  0B89               	decfsz	9,f
 12780  10AB  28A7               	goto	u662_25
 12781  10AC  3001               	movlw	1
 12782  10AD  02AA               	subwf	i1___ftdiv@cntr,f
 12783  10AE  1D03               	btfss	3,2
 12784  10AF  288D               	goto	i1l4811
 12785  10B0  082B               	movf	i1___ftdiv@f3,w
 12786  10B1  00F0               	movwf	i1___ftpack@arg
 12787  10B2  082C               	movf	i1___ftdiv@f3+1,w
 12788  10B3  00F1               	movwf	i1___ftpack@arg+1
 12789  10B4  082D               	movf	i1___ftdiv@f3+2,w
 12790  10B5  00F2               	movwf	i1___ftpack@arg+2
 12791  10B6  082E               	movf	i1___ftdiv@exp,w
 12792  10B7  00A6               	movwf	??i1___ftdiv
 12793  10B8  0826               	movf	??i1___ftdiv,w
 12794  10B9  00F3               	movwf	i1___ftpack@exp
 12795  10BA  082F               	movf	i1___ftdiv@sign,w
 12796  10BB  00A7               	movwf	??i1___ftdiv+1
 12797  10BC  0827               	movf	??i1___ftdiv+1,w
 12798  10BD  00F4               	movwf	i1___ftpack@sign
 12799  10BE  319B  2366         	fcall	i1___ftpack
 12800  10C0  0870               	movf	?i1___ftpack,w
 12801  10C1  0020               	movlb	0	; select bank0
 12802  10C2  00A0               	movwf	?i1___ftdiv
 12803  10C3  0871               	movf	?i1___ftpack+1,w
 12804  10C4  00A1               	movwf	?i1___ftdiv+1
 12805  10C5  0872               	movf	?i1___ftpack+2,w
 12806  10C6  00A2               	movwf	?i1___ftdiv+2
 12807  10C7  0008               	return
 12808  10C8                     __end_ofi1___ftdiv:	
 12809                           
 12810                           	psect	text41
 12811  1387                     __ptext41:	
 12812 ;; *************** function i1___ftadd *****************
 12813 ;; Defined at:
 12814 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;  f1              3   16[BANK0 ] float 
 12817 ;;  f2              3   19[BANK0 ] float 
 12818 ;; Auto vars:     Size  Location     Type
 12819 ;;  __ftadd         1   28[BANK0 ] unsigned char 
 12820 ;;  __ftadd         1   27[BANK0 ] unsigned char 
 12821 ;;  __ftadd         1   26[BANK0 ] unsigned char 
 12822 ;; Return value:  Size  Location     Type
 12823 ;;                  3   16[BANK0 ] float 
 12824 ;; Registers used:
 12825 ;;		wreg, status,2, status,0, pclath, cstack
 12826 ;; Tracked objects:
 12827 ;;		On entry : 0/0
 12828 ;;		On exit  : 0/0
 12829 ;;		Unchanged: 0/0
 12830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12831 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12832 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12833 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12834 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12835 ;;Total ram usage:       13 bytes
 12836 ;; Hardware stack levels used:    1
 12837 ;; Hardware stack levels required when called:    1
 12838 ;; This function calls:
 12839 ;;		i1___ftpack
 12840 ;; This function is called by:
 12841 ;;		_ISR_Function
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845                           
 12846                           ;psect for function i1___ftadd
 12847  1387                     i1___ftadd:	
 12848                           
 12849                           ;incstack = 0
 12850                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
 12851  1387  0020               	movlb	0	; select bank0
 12852  1388  0830               	movf	i1___ftadd@f1,w
 12853  1389  00B6               	movwf	??i1___ftadd
 12854  138A  0831               	movf	i1___ftadd@f1+1,w
 12855  138B  00B7               	movwf	??i1___ftadd+1
 12856  138C  0832               	movf	i1___ftadd@f1+2,w
 12857  138D  00B8               	movwf	??i1___ftadd+2
 12858  138E  1003               	clrc
 12859  138F  0D37               	rlf	??i1___ftadd+1,w
 12860  1390  0D38               	rlf	??i1___ftadd+2,w
 12861  1391  00B9               	movwf	??i1___ftadd+3
 12862  1392  0839               	movf	??i1___ftadd+3,w
 12863  1393  00BC               	movwf	i1___ftadd@exp1
 12864  1394  0833               	movf	i1___ftadd@f2,w
 12865  1395  00B6               	movwf	??i1___ftadd
 12866  1396  0834               	movf	i1___ftadd@f2+1,w
 12867  1397  00B7               	movwf	??i1___ftadd+1
 12868  1398  0835               	movf	i1___ftadd@f2+2,w
 12869  1399  00B8               	movwf	??i1___ftadd+2
 12870  139A  1003               	clrc
 12871  139B  0D37               	rlf	??i1___ftadd+1,w
 12872  139C  0D38               	rlf	??i1___ftadd+2,w
 12873  139D  00B9               	movwf	??i1___ftadd+3
 12874  139E  0839               	movf	??i1___ftadd+3,w
 12875  139F  00BB               	movwf	i1___ftadd@exp2
 12876  13A0  083C               	movf	i1___ftadd@exp1,w
 12877  13A1  1903               	btfsc	3,2
 12878  13A2  2BAF               	goto	i1l4721
 12879  13A3  083B               	movf	i1___ftadd@exp2,w
 12880  13A4  023C               	subwf	i1___ftadd@exp1,w
 12881  13A5  1803               	skipnc
 12882  13A6  2BB6               	goto	i1l4725
 12883  13A7  033C               	decf	i1___ftadd@exp1,w
 12884  13A8  3AFF               	xorlw	255
 12885  13A9  073B               	addwf	i1___ftadd@exp2,w
 12886  13AA  00B6               	movwf	??i1___ftadd
 12887  13AB  3019               	movlw	25
 12888  13AC  0236               	subwf	??i1___ftadd,w
 12889  13AD  1C03               	skipc
 12890  13AE  2BB6               	goto	i1l4725
 12891  13AF                     i1l4721:	
 12892  13AF  0833               	movf	i1___ftadd@f2,w
 12893  13B0  00B0               	movwf	?i1___ftadd
 12894  13B1  0834               	movf	i1___ftadd@f2+1,w
 12895  13B2  00B1               	movwf	?i1___ftadd+1
 12896  13B3  0835               	movf	i1___ftadd@f2+2,w
 12897  13B4  00B2               	movwf	?i1___ftadd+2
 12898  13B5  0008               	return
 12899  13B6                     i1l4725:	
 12900  13B6  083B               	movf	i1___ftadd@exp2,w
 12901  13B7  1903               	btfsc	3,2
 12902  13B8  0008               	return
 12903  13B9  083C               	movf	i1___ftadd@exp1,w
 12904  13BA  023B               	subwf	i1___ftadd@exp2,w
 12905  13BB  1803               	skipnc
 12906  13BC  2BC5               	goto	i1l4731
 12907  13BD  033B               	decf	i1___ftadd@exp2,w
 12908  13BE  3AFF               	xorlw	255
 12909  13BF  073C               	addwf	i1___ftadd@exp1,w
 12910  13C0  00B6               	movwf	??i1___ftadd
 12911  13C1  3019               	movlw	25
 12912  13C2  0236               	subwf	??i1___ftadd,w
 12913  13C3  1803               	btfsc	3,0
 12914  13C4  0008               	return
 12915  13C5                     i1l4731:	
 12916  13C5  3006               	movlw	6
 12917  13C6  00B6               	movwf	??i1___ftadd
 12918  13C7  0836               	movf	??i1___ftadd,w
 12919  13C8  00BA               	movwf	i1___ftadd@sign
 12920  13C9  1BB2               	btfsc	i1___ftadd@f1+2,7
 12921  13CA  17BA               	bsf	i1___ftadd@sign,7
 12922  13CB  1BB5               	btfsc	i1___ftadd@f2+2,7
 12923  13CC  173A               	bsf	i1___ftadd@sign,6
 12924  13CD  17B1               	bsf	i1___ftadd@f1+1,7
 12925  13CE  30FF               	movlw	255
 12926  13CF  05B0               	andwf	i1___ftadd@f1,f
 12927  13D0  30FF               	movlw	255
 12928  13D1  05B1               	andwf	i1___ftadd@f1+1,f
 12929  13D2  3000               	movlw	0
 12930  13D3  05B2               	andwf	i1___ftadd@f1+2,f
 12931  13D4  17B4               	bsf	i1___ftadd@f2+1,7
 12932  13D5  30FF               	movlw	255
 12933  13D6  05B3               	andwf	i1___ftadd@f2,f
 12934  13D7  30FF               	movlw	255
 12935  13D8  05B4               	andwf	i1___ftadd@f2+1,f
 12936  13D9  3000               	movlw	0
 12937  13DA  05B5               	andwf	i1___ftadd@f2+2,f
 12938  13DB  083B               	movf	i1___ftadd@exp2,w
 12939  13DC  023C               	subwf	i1___ftadd@exp1,w
 12940  13DD  1803               	skipnc
 12941  13DE  2C01               	goto	i1l4753
 12942  13DF                     i1l4743:	
 12943  13DF  3001               	movlw	1
 12944  13E0                     u642_25:	
 12945  13E0  35B3               	lslf	i1___ftadd@f2,f
 12946  13E1  0DB4               	rlf	i1___ftadd@f2+1,f
 12947  13E2  0DB5               	rlf	i1___ftadd@f2+2,f
 12948  13E3  0B89               	decfsz	9,f
 12949  13E4  2BE0               	goto	u642_25
 12950  13E5  3001               	movlw	1
 12951  13E6  02BB               	subwf	i1___ftadd@exp2,f
 12952  13E7  083B               	movf	i1___ftadd@exp2,w
 12953  13E8  063C               	xorwf	i1___ftadd@exp1,w
 12954  13E9  1903               	skipnz
 12955  13EA  2BFC               	goto	i1l4751
 12956  13EB  3001               	movlw	1
 12957  13EC  02BA               	subwf	i1___ftadd@sign,f
 12958  13ED  083A               	movf	i1___ftadd@sign,w
 12959  13EE  3907               	andlw	7
 12960  13EF  1903               	btfsc	3,2
 12961  13F0  2BFC               	goto	i1l4751
 12962  13F1  2BDF               	goto	i1l4743
 12963  13F2                     i1l4749:	
 12964  13F2  3001               	movlw	1
 12965  13F3                     u645_25:	
 12966  13F3  36B2               	lsrf	i1___ftadd@f1+2,f
 12967  13F4  0CB1               	rrf	i1___ftadd@f1+1,f
 12968  13F5  0CB0               	rrf	i1___ftadd@f1,f
 12969  13F6  0B89               	decfsz	9,f
 12970  13F7  2BF3               	goto	u645_25
 12971  13F8  3001               	movlw	1
 12972  13F9  00B6               	movwf	??i1___ftadd
 12973  13FA  0836               	movf	??i1___ftadd,w
 12974  13FB  07BC               	addwf	i1___ftadd@exp1,f
 12975  13FC                     i1l4751:	
 12976  13FC  083C               	movf	i1___ftadd@exp1,w
 12977  13FD  063B               	xorwf	i1___ftadd@exp2,w
 12978  13FE  1903               	btfsc	3,2
 12979  13FF  2C26               	goto	i1l1110
 12980  1400  2BF2               	goto	i1l4749
 12981  1401                     i1l4753:	
 12982  1401  083C               	movf	i1___ftadd@exp1,w
 12983  1402  023B               	subwf	i1___ftadd@exp2,w
 12984  1403  1803               	skipnc
 12985  1404  2C26               	goto	i1l1110
 12986  1405                     i1l4755:	
 12987  1405  3001               	movlw	1
 12988  1406                     u648_25:	
 12989  1406  35B0               	lslf	i1___ftadd@f1,f
 12990  1407  0DB1               	rlf	i1___ftadd@f1+1,f
 12991  1408  0DB2               	rlf	i1___ftadd@f1+2,f
 12992  1409  0B89               	decfsz	9,f
 12993  140A  2C06               	goto	u648_25
 12994  140B  3001               	movlw	1
 12995  140C  02BC               	subwf	i1___ftadd@exp1,f
 12996  140D  083B               	movf	i1___ftadd@exp2,w
 12997  140E  063C               	xorwf	i1___ftadd@exp1,w
 12998  140F  1903               	skipnz
 12999  1410  2C22               	goto	i1l4763
 13000  1411  3001               	movlw	1
 13001  1412  02BA               	subwf	i1___ftadd@sign,f
 13002  1413  083A               	movf	i1___ftadd@sign,w
 13003  1414  3907               	andlw	7
 13004  1415  1903               	btfsc	3,2
 13005  1416  2C22               	goto	i1l4763
 13006  1417  2C05               	goto	i1l4755
 13007  1418                     i1l4761:	
 13008  1418  3001               	movlw	1
 13009  1419                     u651_25:	
 13010  1419  36B5               	lsrf	i1___ftadd@f2+2,f
 13011  141A  0CB4               	rrf	i1___ftadd@f2+1,f
 13012  141B  0CB3               	rrf	i1___ftadd@f2,f
 13013  141C  0B89               	decfsz	9,f
 13014  141D  2C19               	goto	u651_25
 13015  141E  3001               	movlw	1
 13016  141F  00B6               	movwf	??i1___ftadd
 13017  1420  0836               	movf	??i1___ftadd,w
 13018  1421  07BB               	addwf	i1___ftadd@exp2,f
 13019  1422                     i1l4763:	
 13020  1422  083C               	movf	i1___ftadd@exp1,w
 13021  1423  063B               	xorwf	i1___ftadd@exp2,w
 13022  1424  1D03               	skipz
 13023  1425  2C18               	goto	i1l4761
 13024  1426                     i1l1110:	
 13025  1426  1FBA               	btfss	i1___ftadd@sign,7
 13026  1427  2C38               	goto	i1l4767
 13027  1428  30FF               	movlw	255
 13028  1429  06B0               	xorwf	i1___ftadd@f1,f
 13029  142A  30FF               	movlw	255
 13030  142B  06B1               	xorwf	i1___ftadd@f1+1,f
 13031  142C  30FF               	movlw	255
 13032  142D  06B2               	xorwf	i1___ftadd@f1+2,f
 13033  142E  3001               	movlw	1
 13034  142F  07B0               	addwf	i1___ftadd@f1,f
 13035  1430  3000               	movlw	0
 13036  1431  1803               	skipnc
 13037  1432  3001               	movlw	1
 13038  1433  07B1               	addwf	i1___ftadd@f1+1,f
 13039  1434  3000               	movlw	0
 13040  1435  1803               	skipnc
 13041  1436  3001               	movlw	1
 13042  1437  07B2               	addwf	i1___ftadd@f1+2,f
 13043  1438                     i1l4767:	
 13044  1438  1F3A               	btfss	i1___ftadd@sign,6
 13045  1439  2C4A               	goto	i1l4771
 13046  143A  30FF               	movlw	255
 13047  143B  06B3               	xorwf	i1___ftadd@f2,f
 13048  143C  30FF               	movlw	255
 13049  143D  06B4               	xorwf	i1___ftadd@f2+1,f
 13050  143E  30FF               	movlw	255
 13051  143F  06B5               	xorwf	i1___ftadd@f2+2,f
 13052  1440  3001               	movlw	1
 13053  1441  07B3               	addwf	i1___ftadd@f2,f
 13054  1442  3000               	movlw	0
 13055  1443  1803               	skipnc
 13056  1444  3001               	movlw	1
 13057  1445  07B4               	addwf	i1___ftadd@f2+1,f
 13058  1446  3000               	movlw	0
 13059  1447  1803               	skipnc
 13060  1448  3001               	movlw	1
 13061  1449  07B5               	addwf	i1___ftadd@f2+2,f
 13062  144A                     i1l4771:	
 13063  144A  01BA               	clrf	i1___ftadd@sign
 13064  144B  0830               	movf	i1___ftadd@f1,w
 13065  144C  07B3               	addwf	i1___ftadd@f2,f
 13066  144D  0831               	movf	i1___ftadd@f1+1,w
 13067  144E  3DB4               	addwfc	i1___ftadd@f2+1,f
 13068  144F  0832               	movf	i1___ftadd@f1+2,w
 13069  1450  3DB5               	addwfc	i1___ftadd@f2+2,f
 13070  1451  1FB5               	btfss	i1___ftadd@f2+2,7
 13071  1452  2C65               	goto	i1l4781
 13072  1453  30FF               	movlw	255
 13073  1454  06B3               	xorwf	i1___ftadd@f2,f
 13074  1455  30FF               	movlw	255
 13075  1456  06B4               	xorwf	i1___ftadd@f2+1,f
 13076  1457  30FF               	movlw	255
 13077  1458  06B5               	xorwf	i1___ftadd@f2+2,f
 13078  1459  3001               	movlw	1
 13079  145A  07B3               	addwf	i1___ftadd@f2,f
 13080  145B  3000               	movlw	0
 13081  145C  1803               	skipnc
 13082  145D  3001               	movlw	1
 13083  145E  07B4               	addwf	i1___ftadd@f2+1,f
 13084  145F  3000               	movlw	0
 13085  1460  1803               	skipnc
 13086  1461  3001               	movlw	1
 13087  1462  07B5               	addwf	i1___ftadd@f2+2,f
 13088  1463  01BA               	clrf	i1___ftadd@sign
 13089  1464  0ABA               	incf	i1___ftadd@sign,f
 13090  1465                     i1l4781:	
 13091  1465  0833               	movf	i1___ftadd@f2,w
 13092  1466  00F0               	movwf	i1___ftpack@arg
 13093  1467  0834               	movf	i1___ftadd@f2+1,w
 13094  1468  00F1               	movwf	i1___ftpack@arg+1
 13095  1469  0835               	movf	i1___ftadd@f2+2,w
 13096  146A  00F2               	movwf	i1___ftpack@arg+2
 13097  146B  083C               	movf	i1___ftadd@exp1,w
 13098  146C  00B6               	movwf	??i1___ftadd
 13099  146D  0836               	movf	??i1___ftadd,w
 13100  146E  00F3               	movwf	i1___ftpack@exp
 13101  146F  083A               	movf	i1___ftadd@sign,w
 13102  1470  00B7               	movwf	??i1___ftadd+1
 13103  1471  0837               	movf	??i1___ftadd+1,w
 13104  1472  00F4               	movwf	i1___ftpack@sign
 13105  1473  319B  2366         	fcall	i1___ftpack
 13106  1475  0870               	movf	?i1___ftpack,w
 13107  1476  0020               	movlb	0	; select bank0
 13108  1477  00B0               	movwf	?i1___ftadd
 13109  1478  0871               	movf	?i1___ftpack+1,w
 13110  1479  00B1               	movwf	?i1___ftadd+1
 13111  147A  0872               	movf	?i1___ftpack+2,w
 13112  147B  00B2               	movwf	?i1___ftadd+2
 13113  147C  0008               	return
 13114  147D                     __end_ofi1___ftadd:	
 13115                           
 13116                           	psect	text42
 13117  1B66                     __ptext42:	
 13118 ;; *************** function i1___ftpack *****************
 13119 ;; Defined at:
 13120 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
 13121 ;; Parameters:    Size  Location     Type
 13122 ;;  arg             3    0[COMMON] unsigned um
 13123 ;;  exp             1    3[COMMON] unsigned char 
 13124 ;;  sign            1    4[COMMON] unsigned char 
 13125 ;; Auto vars:     Size  Location     Type
 13126 ;;		None
 13127 ;; Return value:  Size  Location     Type
 13128 ;;                  3    0[COMMON] float 
 13129 ;; Registers used:
 13130 ;;		wreg, status,2, status,0
 13131 ;; Tracked objects:
 13132 ;;		On entry : 0/0
 13133 ;;		On exit  : 0/0
 13134 ;;		Unchanged: 0/0
 13135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13136 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13138 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13139 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13140 ;;Total ram usage:        8 bytes
 13141 ;; Hardware stack levels used:    1
 13142 ;; This function calls:
 13143 ;;		Nothing
 13144 ;; This function is called by:
 13145 ;;		i1___ftadd
 13146 ;;		i1___ftdiv
 13147 ;;		i1___ftmul
 13148 ;;		i1___lwtoft
 13149 ;; This function uses a non-reentrant model
 13150 ;;
 13151                           
 13152                           
 13153                           ;psect for function i1___ftpack
 13154  1B66                     i1___ftpack:	
 13155                           
 13156                           ;incstack = 0
 13157                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
 13158  1B66  0873               	movf	i1___ftpack@exp,w
 13159  1B67  1903               	btfsc	3,2
 13160  1B68  2B6E               	goto	i1l4005
 13161  1B69  0872               	movf	i1___ftpack@arg+2,w
 13162  1B6A  0471               	iorwf	i1___ftpack@arg+1,w
 13163  1B6B  0470               	iorwf	i1___ftpack@arg,w
 13164  1B6C  1D03               	skipz
 13165  1B6D  2B7F               	goto	i1l4011
 13166  1B6E                     i1l4005:	
 13167  1B6E  3000               	movlw	0
 13168  1B6F  00F0               	movwf	?i1___ftpack
 13169  1B70  3000               	movlw	0
 13170  1B71  00F1               	movwf	?i1___ftpack+1
 13171  1B72  3000               	movlw	0
 13172  1B73  00F2               	movwf	?i1___ftpack+2
 13173  1B74  0008               	return
 13174  1B75                     i1l4009:	
 13175  1B75  3001               	movlw	1
 13176  1B76  00F5               	movwf	??i1___ftpack
 13177  1B77  0875               	movf	??i1___ftpack,w
 13178  1B78  07F3               	addwf	i1___ftpack@exp,f
 13179  1B79  3001               	movlw	1
 13180  1B7A                     u520_25:	
 13181  1B7A  36F2               	lsrf	i1___ftpack@arg+2,f
 13182  1B7B  0CF1               	rrf	i1___ftpack@arg+1,f
 13183  1B7C  0CF0               	rrf	i1___ftpack@arg,f
 13184  1B7D  0B89               	decfsz	9,f
 13185  1B7E  2B7A               	goto	u520_25
 13186  1B7F                     i1l4011:	
 13187  1B7F  30FE               	movlw	254
 13188  1B80  0572               	andwf	i1___ftpack@arg+2,w
 13189  1B81  1903               	btfsc	3,2
 13190  1B82  2B98               	goto	i1l1081
 13191  1B83  2B75               	goto	i1l4009
 13192  1B84                     i1l4013:	
 13193  1B84  3001               	movlw	1
 13194  1B85  00F5               	movwf	??i1___ftpack
 13195  1B86  0875               	movf	??i1___ftpack,w
 13196  1B87  07F3               	addwf	i1___ftpack@exp,f
 13197  1B88  3001               	movlw	1
 13198  1B89  07F0               	addwf	i1___ftpack@arg,f
 13199  1B8A  3000               	movlw	0
 13200  1B8B  1803               	skipnc
 13201  1B8C  3001               	movlw	1
 13202  1B8D  07F1               	addwf	i1___ftpack@arg+1,f
 13203  1B8E  3000               	movlw	0
 13204  1B8F  1803               	skipnc
 13205  1B90  3001               	movlw	1
 13206  1B91  07F2               	addwf	i1___ftpack@arg+2,f
 13207  1B92  3001               	movlw	1
 13208  1B93                     u522_25:	
 13209  1B93  36F2               	lsrf	i1___ftpack@arg+2,f
 13210  1B94  0CF1               	rrf	i1___ftpack@arg+1,f
 13211  1B95  0CF0               	rrf	i1___ftpack@arg,f
 13212  1B96  0B89               	decfsz	9,f
 13213  1B97  2B93               	goto	u522_25
 13214  1B98                     i1l1081:	
 13215  1B98  30FF               	movlw	255
 13216  1B99  0572               	andwf	i1___ftpack@arg+2,w
 13217  1B9A  1903               	btfsc	3,2
 13218  1B9B  2BA5               	goto	i1l4021
 13219  1B9C  2B84               	goto	i1l4013
 13220  1B9D                     i1l4019:	
 13221  1B9D  3001               	movlw	1
 13222  1B9E  02F3               	subwf	i1___ftpack@exp,f
 13223  1B9F  3001               	movlw	1
 13224  1BA0                     u524_25:	
 13225  1BA0  35F0               	lslf	i1___ftpack@arg,f
 13226  1BA1  0DF1               	rlf	i1___ftpack@arg+1,f
 13227  1BA2  0DF2               	rlf	i1___ftpack@arg+2,f
 13228  1BA3  0B89               	decfsz	9,f
 13229  1BA4  2BA0               	goto	u524_25
 13230  1BA5                     i1l4021:	
 13231  1BA5  1FF1               	btfss	i1___ftpack@arg+1,7
 13232  1BA6  2B9D               	goto	i1l4019
 13233  1BA7  1873               	btfsc	i1___ftpack@exp,0
 13234  1BA8  2BAF               	goto	i1l1087
 13235  1BA9  30FF               	movlw	255
 13236  1BAA  05F0               	andwf	i1___ftpack@arg,f
 13237  1BAB  307F               	movlw	127
 13238  1BAC  05F1               	andwf	i1___ftpack@arg+1,f
 13239  1BAD  30FF               	movlw	255
 13240  1BAE  05F2               	andwf	i1___ftpack@arg+2,f
 13241  1BAF                     i1l1087:	
 13242  1BAF  1003               	clrc
 13243  1BB0  0CF3               	rrf	i1___ftpack@exp,f
 13244  1BB1  0873               	movf	i1___ftpack@exp,w
 13245  1BB2  00F5               	movwf	??i1___ftpack
 13246  1BB3  01F6               	clrf	??i1___ftpack+1
 13247  1BB4  01F7               	clrf	??i1___ftpack+2
 13248  1BB5  3010               	movlw	16
 13249  1BB6                     u527_25:	
 13250  1BB6  35F5               	lslf	??i1___ftpack,f
 13251  1BB7  0DF6               	rlf	??i1___ftpack+1,f
 13252  1BB8  0DF7               	rlf	??i1___ftpack+2,f
 13253  1BB9  0B89               	decfsz	9,f
 13254  1BBA  2BB6               	goto	u527_25
 13255  1BBB  0875               	movf	??i1___ftpack,w
 13256  1BBC  04F0               	iorwf	i1___ftpack@arg,f
 13257  1BBD  0876               	movf	??i1___ftpack+1,w
 13258  1BBE  04F1               	iorwf	i1___ftpack@arg+1,f
 13259  1BBF  0877               	movf	??i1___ftpack+2,w
 13260  1BC0  04F2               	iorwf	i1___ftpack@arg+2,f
 13261  1BC1  0874               	movf	i1___ftpack@sign,w
 13262  1BC2  1903               	btfsc	3,2
 13263  1BC3  0008               	return
 13264  1BC4  17F2               	bsf	i1___ftpack@arg+2,7
 13265  1BC5  0008               	return
 13266  1BC6                     __end_ofi1___ftpack:	
 13267                           
 13268                           	psect	text43
 13269  1DEE                     __ptext43:	
 13270 ;; *************** function i1___aldiv *****************
 13271 ;; Defined at:
 13272 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\aldiv.c"
 13273 ;; Parameters:    Size  Location     Type
 13274 ;;  divisor         4    0[COMMON] long 
 13275 ;;  dividend        4    4[COMMON] long 
 13276 ;; Auto vars:     Size  Location     Type
 13277 ;;  __aldiv         4    2[BANK0 ] long 
 13278 ;;  __aldiv         1    1[BANK0 ] unsigned char 
 13279 ;;  __aldiv         1    0[BANK0 ] unsigned char 
 13280 ;; Return value:  Size  Location     Type
 13281 ;;                  4    0[COMMON] long 
 13282 ;; Registers used:
 13283 ;;		wreg, status,2, status,0
 13284 ;; Tracked objects:
 13285 ;;		On entry : 0/0
 13286 ;;		On exit  : 0/0
 13287 ;;		Unchanged: 0/0
 13288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13289 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13290 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13292 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13293 ;;Total ram usage:       15 bytes
 13294 ;; Hardware stack levels used:    1
 13295 ;; This function calls:
 13296 ;;		Nothing
 13297 ;; This function is called by:
 13298 ;;		_ISR_Function
 13299 ;; This function uses a non-reentrant model
 13300 ;;
 13301                           
 13302                           
 13303                           ;psect for function i1___aldiv
 13304  1DEE                     i1___aldiv:	
 13305                           
 13306                           ;incstack = 0
 13307                           ; Regs used in i1___aldiv: [wreg+status,2+status,0]
 13308  1DEE  0020               	movlb	0	; select bank0
 13309  1DEF  01A1               	clrf	i1___aldiv@sign
 13310  1DF0  1FF3               	btfss	i1___aldiv@divisor+3,7
 13311  1DF1  2DFF               	goto	i1l975
 13312  1DF2  09F0               	comf	i1___aldiv@divisor,f
 13313  1DF3  09F1               	comf	i1___aldiv@divisor+1,f
 13314  1DF4  09F2               	comf	i1___aldiv@divisor+2,f
 13315  1DF5  09F3               	comf	i1___aldiv@divisor+3,f
 13316  1DF6  0AF0               	incf	i1___aldiv@divisor,f
 13317  1DF7  1903               	skipnz
 13318  1DF8  0AF1               	incf	i1___aldiv@divisor+1,f
 13319  1DF9  1903               	skipnz
 13320  1DFA  0AF2               	incf	i1___aldiv@divisor+2,f
 13321  1DFB  1903               	skipnz
 13322  1DFC  0AF3               	incf	i1___aldiv@divisor+3,f
 13323  1DFD  01A1               	clrf	i1___aldiv@sign
 13324  1DFE  0AA1               	incf	i1___aldiv@sign,f
 13325  1DFF                     i1l975:	
 13326  1DFF  1FF7               	btfss	i1___aldiv@dividend+3,7
 13327  1E00  2E10               	goto	i1l4683
 13328  1E01  09F4               	comf	i1___aldiv@dividend,f
 13329  1E02  09F5               	comf	i1___aldiv@dividend+1,f
 13330  1E03  09F6               	comf	i1___aldiv@dividend+2,f
 13331  1E04  09F7               	comf	i1___aldiv@dividend+3,f
 13332  1E05  0AF4               	incf	i1___aldiv@dividend,f
 13333  1E06  1903               	skipnz
 13334  1E07  0AF5               	incf	i1___aldiv@dividend+1,f
 13335  1E08  1903               	skipnz
 13336  1E09  0AF6               	incf	i1___aldiv@dividend+2,f
 13337  1E0A  1903               	skipnz
 13338  1E0B  0AF7               	incf	i1___aldiv@dividend+3,f
 13339  1E0C  3001               	movlw	1
 13340  1E0D  00F8               	movwf	??i1___aldiv
 13341  1E0E  0878               	movf	??i1___aldiv,w
 13342  1E0F  06A1               	xorwf	i1___aldiv@sign,f
 13343  1E10                     i1l4683:	
 13344  1E10  3000               	movlw	0
 13345  1E11  00A5               	movwf	i1___aldiv@quotient+3
 13346  1E12  3000               	movlw	0
 13347  1E13  00A4               	movwf	i1___aldiv@quotient+2
 13348  1E14  3000               	movlw	0
 13349  1E15  00A3               	movwf	i1___aldiv@quotient+1
 13350  1E16  3000               	movlw	0
 13351  1E17  00A2               	movwf	i1___aldiv@quotient
 13352  1E18  0873               	movf	i1___aldiv@divisor+3,w
 13353  1E19  0472               	iorwf	i1___aldiv@divisor+2,w
 13354  1E1A  0471               	iorwf	i1___aldiv@divisor+1,w
 13355  1E1B  0470               	iorwf	i1___aldiv@divisor,w
 13356  1E1C  1903               	skipnz
 13357  1E1D  2E59               	goto	i1l4705
 13358  1E1E  01A0               	clrf	i1___aldiv@counter
 13359  1E1F  0AA0               	incf	i1___aldiv@counter,f
 13360  1E20                     i1l4691:	
 13361  1E20  1BF3               	btfsc	i1___aldiv@divisor+3,7
 13362  1E21  2E2E               	goto	i1l4693
 13363  1E22  3001               	movlw	1
 13364  1E23                     u626_25:	
 13365  1E23  35F0               	lslf	i1___aldiv@divisor,f
 13366  1E24  0DF1               	rlf	i1___aldiv@divisor+1,f
 13367  1E25  0DF2               	rlf	i1___aldiv@divisor+2,f
 13368  1E26  0DF3               	rlf	i1___aldiv@divisor+3,f
 13369  1E27  0B89               	decfsz	9,f
 13370  1E28  2E23               	goto	u626_25
 13371  1E29  3001               	movlw	1
 13372  1E2A  00F8               	movwf	??i1___aldiv
 13373  1E2B  0878               	movf	??i1___aldiv,w
 13374  1E2C  07A0               	addwf	i1___aldiv@counter,f
 13375  1E2D  2E20               	goto	i1l4691
 13376  1E2E                     i1l4693:	
 13377  1E2E  3001               	movlw	1
 13378  1E2F                     u628_25:	
 13379  1E2F  35A2               	lslf	i1___aldiv@quotient,f
 13380  1E30  0DA3               	rlf	i1___aldiv@quotient+1,f
 13381  1E31  0DA4               	rlf	i1___aldiv@quotient+2,f
 13382  1E32  0DA5               	rlf	i1___aldiv@quotient+3,f
 13383  1E33  0B89               	decfsz	9,f
 13384  1E34  2E2F               	goto	u628_25
 13385  1E35  0873               	movf	i1___aldiv@divisor+3,w
 13386  1E36  0277               	subwf	i1___aldiv@dividend+3,w
 13387  1E37  1D03               	skipz
 13388  1E38  2E43               	goto	u629_25
 13389  1E39  0872               	movf	i1___aldiv@divisor+2,w
 13390  1E3A  0276               	subwf	i1___aldiv@dividend+2,w
 13391  1E3B  1D03               	skipz
 13392  1E3C  2E43               	goto	u629_25
 13393  1E3D  0871               	movf	i1___aldiv@divisor+1,w
 13394  1E3E  0275               	subwf	i1___aldiv@dividend+1,w
 13395  1E3F  1D03               	skipz
 13396  1E40  2E43               	goto	u629_25
 13397  1E41  0870               	movf	i1___aldiv@divisor,w
 13398  1E42  0274               	subwf	i1___aldiv@dividend,w
 13399  1E43                     u629_25:	
 13400  1E43  1C03               	skipc
 13401  1E44  2E4E               	goto	i1l4701
 13402  1E45  0870               	movf	i1___aldiv@divisor,w
 13403  1E46  02F4               	subwf	i1___aldiv@dividend,f
 13404  1E47  0871               	movf	i1___aldiv@divisor+1,w
 13405  1E48  3BF5               	subwfb	i1___aldiv@dividend+1,f
 13406  1E49  0872               	movf	i1___aldiv@divisor+2,w
 13407  1E4A  3BF6               	subwfb	i1___aldiv@dividend+2,f
 13408  1E4B  0873               	movf	i1___aldiv@divisor+3,w
 13409  1E4C  3BF7               	subwfb	i1___aldiv@dividend+3,f
 13410  1E4D  1422               	bsf	i1___aldiv@quotient,0
 13411  1E4E                     i1l4701:	
 13412  1E4E  3001               	movlw	1
 13413  1E4F                     u630_25:	
 13414  1E4F  36F3               	lsrf	i1___aldiv@divisor+3,f
 13415  1E50  0CF2               	rrf	i1___aldiv@divisor+2,f
 13416  1E51  0CF1               	rrf	i1___aldiv@divisor+1,f
 13417  1E52  0CF0               	rrf	i1___aldiv@divisor,f
 13418  1E53  0B89               	decfsz	9,f
 13419  1E54  2E4F               	goto	u630_25
 13420  1E55  3001               	movlw	1
 13421  1E56  02A0               	subwf	i1___aldiv@counter,f
 13422  1E57  1D03               	btfss	3,2
 13423  1E58  2E2E               	goto	i1l4693
 13424  1E59                     i1l4705:	
 13425  1E59  0821               	movf	i1___aldiv@sign,w
 13426  1E5A  1903               	btfsc	3,2
 13427  1E5B  2E67               	goto	i1l4709
 13428  1E5C  09A2               	comf	i1___aldiv@quotient,f
 13429  1E5D  09A3               	comf	i1___aldiv@quotient+1,f
 13430  1E5E  09A4               	comf	i1___aldiv@quotient+2,f
 13431  1E5F  09A5               	comf	i1___aldiv@quotient+3,f
 13432  1E60  0AA2               	incf	i1___aldiv@quotient,f
 13433  1E61  1903               	skipnz
 13434  1E62  0AA3               	incf	i1___aldiv@quotient+1,f
 13435  1E63  1903               	skipnz
 13436  1E64  0AA4               	incf	i1___aldiv@quotient+2,f
 13437  1E65  1903               	skipnz
 13438  1E66  0AA5               	incf	i1___aldiv@quotient+3,f
 13439  1E67                     i1l4709:	
 13440  1E67  0825               	movf	i1___aldiv@quotient+3,w
 13441  1E68  00F3               	movwf	?i1___aldiv+3
 13442  1E69  0824               	movf	i1___aldiv@quotient+2,w
 13443  1E6A  00F2               	movwf	?i1___aldiv+2
 13444  1E6B  0823               	movf	i1___aldiv@quotient+1,w
 13445  1E6C  00F1               	movwf	?i1___aldiv+1
 13446  1E6D  0822               	movf	i1___aldiv@quotient,w
 13447  1E6E  00F0               	movwf	?i1___aldiv
 13448  1E6F  0008               	return
 13449  1E70                     __end_ofi1___aldiv:	
 13450                           
 13451                           	psect	text44
 13452  198F                     __ptext44:	
 13453 ;; *************** function i1_Update_PWM *****************
 13454 ;; Defined at:
 13455 ;;		line 1124 in file "main.c"
 13456 ;; Parameters:    Size  Location     Type
 13457 ;;  setwsduty       2    0[COMMON] unsigned int 
 13458 ;; Auto vars:     Size  Location     Type
 13459 ;;  Update_PWM      2    6[COMMON] unsigned int 
 13460 ;;  Update_PWM      2    4[COMMON] unsigned int 
 13461 ;; Return value:  Size  Location     Type
 13462 ;;		None               void
 13463 ;; Registers used:
 13464 ;;		wreg, status,2, status,0
 13465 ;; Tracked objects:
 13466 ;;		On entry : 0/0
 13467 ;;		On exit  : 0/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13471 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13473 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13474 ;;Total ram usage:        8 bytes
 13475 ;; Hardware stack levels used:    1
 13476 ;; This function calls:
 13477 ;;		Nothing
 13478 ;; This function is called by:
 13479 ;;		_ISR_Function
 13480 ;; This function uses a non-reentrant model
 13481 ;;
 13482                           
 13483                           
 13484                           ;psect for function i1_Update_PWM
 13485  198F                     i1_Update_PWM:	
 13486                           
 13487                           ;main.c: 1126: unsigned int Temp1=0x00, Dutycnt=0;
 13488                           
 13489                           ;incstack = 0
 13490                           ; Regs used in i1_Update_PWM: [wreg+status,2+status,0]
 13491  198F  01F4               	clrf	i1Update_PWM@Temp1
 13492  1990  01F5               	clrf	i1Update_PWM@Temp1+1
 13493  1991  01F6               	clrf	i1Update_PWM@Dutycnt
 13494  1992  01F7               	clrf	i1Update_PWM@Dutycnt+1
 13495                           
 13496                           ;main.c: 1127: Dutycnt=setwsduty;
 13497  1993  0871               	movf	i1Update_PWM@setwsduty+1,w
 13498  1994  01F7               	clrf	i1Update_PWM@Dutycnt+1
 13499  1995  07F7               	addwf	i1Update_PWM@Dutycnt+1,f
 13500  1996  0870               	movf	i1Update_PWM@setwsduty,w
 13501  1997  01F6               	clrf	i1Update_PWM@Dutycnt
 13502  1998  07F6               	addwf	i1Update_PWM@Dutycnt,f
 13503                           
 13504                           ;main.c: 1128: CCP1CONbits.DC1B=Dutycnt;
 13505  1999  0876               	movf	i1Update_PWM@Dutycnt,w
 13506  199A  00F2               	movwf	??i1_Update_PWM
 13507  199B  0EF2               	swapf	??i1_Update_PWM,f
 13508  199C  0025               	movlb	5	; select bank5
 13509  199D  0813               	movf	19,w	;volatile
 13510  199E  0672               	xorwf	??i1_Update_PWM,w
 13511  199F  39CF               	andlw	-49
 13512  19A0  0672               	xorwf	??i1_Update_PWM,w
 13513  19A1  0093               	movwf	19	;volatile
 13514                           
 13515                           ;main.c: 1129: Temp1=Dutycnt >> 2;
 13516  19A2  0877               	movf	i1Update_PWM@Dutycnt+1,w
 13517  19A3  00F3               	movwf	??i1_Update_PWM+1
 13518  19A4  0876               	movf	i1Update_PWM@Dutycnt,w
 13519  19A5  00F2               	movwf	??i1_Update_PWM
 13520  19A6  36F3               	lsrf	??i1_Update_PWM+1,f
 13521  19A7  0CF2               	rrf	??i1_Update_PWM,f
 13522  19A8  36F3               	lsrf	??i1_Update_PWM+1,f
 13523  19A9  0CF2               	rrf	??i1_Update_PWM,f
 13524  19AA  0872               	movf	??i1_Update_PWM,w
 13525  19AB  00F4               	movwf	i1Update_PWM@Temp1
 13526  19AC  0873               	movf	??i1_Update_PWM+1,w
 13527  19AD  00F5               	movwf	i1Update_PWM@Temp1+1
 13528                           
 13529                           ;main.c: 1130: CCPR1L=Temp1;
 13530  19AE  0874               	movf	i1Update_PWM@Temp1,w
 13531  19AF  0091               	movwf	17	;volatile
 13532                           
 13533                           ;main.c: 1131: iTest = Temp1;
 13534  19B0  0875               	movf	i1Update_PWM@Temp1+1,w
 13535  19B1  0024               	movlb	4	; select bank4
 13536  19B2  01BD               	clrf	(_iTest+1)^(0+512)
 13537  19B3  07BD               	addwf	(_iTest+1)^(0+512),f
 13538  19B4  0874               	movf	i1Update_PWM@Temp1,w
 13539  19B5  01BC               	clrf	_iTest^(0+512)
 13540  19B6  07BC               	addwf	_iTest^(0+512),f
 13541  19B7  0008               	return
 13542  19B8                     __end_ofi1_Update_PWM:	
 13543                           
 13544                           	psect	text45
 13545  0556                     __ptext45:	
 13546 ;; *************** function _Display *****************
 13547 ;; Defined at:
 13548 ;;		line 8 in file "DISPLAY.C"
 13549 ;; Parameters:    Size  Location     Type
 13550 ;;		None
 13551 ;; Auto vars:     Size  Location     Type
 13552 ;;		None
 13553 ;; Return value:  Size  Location     Type
 13554 ;;		None               void
 13555 ;; Registers used:
 13556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13557 ;; Tracked objects:
 13558 ;;		On entry : 0/0
 13559 ;;		On exit  : 0/0
 13560 ;;		Unchanged: 0/0
 13561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13564 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13566 ;;Total ram usage:        2 bytes
 13567 ;; Hardware stack levels used:    1
 13568 ;; This function calls:
 13569 ;;		Nothing
 13570 ;; This function is called by:
 13571 ;;		_ISR_Function
 13572 ;; This function uses a non-reentrant model
 13573 ;;
 13574                           
 13575                           
 13576                           ;psect for function _Display
 13577  0556                     _Display:	
 13578                           
 13579                           ;DISPLAY.C: 10: PORTB=0x00;
 13580                           
 13581                           ;incstack = 0
 13582                           ; Regs used in _Display: [wreg-fsr1h+status,2+status,0+pclath]
 13583  0556  0020               	movlb	0	; select bank0
 13584  0557  018D               	clrf	13	;volatile
 13585                           
 13586                           ;DISPLAY.C: 11: if(digit<=5)
 13587  0558  3006               	movlw	6
 13588  0559  025D               	subwf	_digit,w
 13589  055A  1C03               	btfss	3,0
 13590  055B  2E0A               	goto	i1l4075
 13591  055C  2E16               	goto	i1l4077
 13592  055D                     i1l431:	
 13593                           ;DISPLAY.C: 14: {
 13594                           ;DISPLAY.C: 15: case 0:
 13595                           
 13596                           ;DISPLAY.C: 12: {
 13597                           ;DISPLAY.C: 13: switch(digit)
 13598                           
 13599                           
 13600                           ;DISPLAY.C: 16: LATCbits.LATC4=0;
 13601  055D  0022               	movlb	2	; select bank2
 13602  055E  120E               	bcf	14,4	;volatile
 13603                           
 13604                           ;DISPLAY.C: 17: LATAbits.LATA6=0;
 13605  055F  130C               	bcf	12,6	;volatile
 13606                           
 13607                           ;DISPLAY.C: 18: LATAbits.LATA7=0;
 13608  0560  138C               	bcf	12,7	;volatile
 13609                           
 13610                           ;DISPLAY.C: 19: LATB=lookup_table[diswin1[digit]];
 13611  0561  0020               	movlb	0	; select bank0
 13612  0562  085D               	movf	_digit,w
 13613  0563  3EDA               	addlw	_diswin1& (0+255)
 13614  0564  0086               	movwf	6
 13615  0565  3001               	movlw	1	; select bank3/4
 13616  0566  0087               	movwf	7
 13617  0567  0801               	movf	1,w
 13618  0568  00F0               	movwf	??_Display
 13619  0569  01F1               	clrf	??_Display+1
 13620  056A  35F0               	lslf	??_Display,f
 13621  056B  0DF1               	rlf	??_Display+1,f
 13622  056C  3000               	movlw	low (_lookup_table| (0+32768))
 13623  056D  0770               	addwf	??_Display,w
 13624  056E  0084               	movwf	4
 13625  056F  30A0               	movlw	high (_lookup_table| (0+32768))
 13626  0570  3D71               	addwfc	??_Display+1,w
 13627  0571  0085               	movwf	5
 13628  0572  0800               	movf	0,w	;code access
 13629  0573  0022               	movlb	2	; select bank2
 13630  0574  008D               	movwf	13	;volatile
 13631                           
 13632                           ;DISPLAY.C: 20: if(TypeDP.TypeD.digitdp1==1)
 13633  0575  0020               	movlb	0	; select bank0
 13634  0576  1C6C               	btfss	_TypeDP,0
 13635  0577  2E07               	goto	i1l448
 13636  0578  2E04               	goto	i1l4071
 13637  0579                     i1l435:	
 13638                           ;DISPLAY.C: 25: case 1:
 13639                           
 13640                           ;DISPLAY.C: 24: break;
 13641                           
 13642                           ;DISPLAY.C: 22: else
 13643                           ;DISPLAY.C: 23: LATBbits.LATB7=0;
 13644                           
 13645                           ;DISPLAY.C: 21: LATBbits.LATB7=1;
 13646                           
 13647                           
 13648                           ;DISPLAY.C: 26: LATCbits.LATC4=1;
 13649  0579  0022               	movlb	2	; select bank2
 13650  057A  160E               	bsf	14,4	;volatile
 13651                           
 13652                           ;DISPLAY.C: 27: LATAbits.LATA6=0;
 13653  057B  130C               	bcf	12,6	;volatile
 13654                           
 13655                           ;DISPLAY.C: 28: LATAbits.LATA7=0;
 13656  057C  138C               	bcf	12,7	;volatile
 13657                           
 13658                           ;DISPLAY.C: 29: LATB=lookup_table[diswin1[digit]];
 13659  057D  0020               	movlb	0	; select bank0
 13660  057E  085D               	movf	_digit,w
 13661  057F  3EDA               	addlw	_diswin1& (0+255)
 13662  0580  0086               	movwf	6
 13663  0581  3001               	movlw	1	; select bank3/4
 13664  0582  0087               	movwf	7
 13665  0583  0801               	movf	1,w
 13666  0584  00F0               	movwf	??_Display
 13667  0585  01F1               	clrf	??_Display+1
 13668  0586  35F0               	lslf	??_Display,f
 13669  0587  0DF1               	rlf	??_Display+1,f
 13670  0588  3000               	movlw	low (_lookup_table| (0+32768))
 13671  0589  0770               	addwf	??_Display,w
 13672  058A  0084               	movwf	4
 13673  058B  30A0               	movlw	high (_lookup_table| (0+32768))
 13674  058C  3D71               	addwfc	??_Display+1,w
 13675  058D  0085               	movwf	5
 13676  058E  0800               	movf	0,w	;code access
 13677  058F  0022               	movlb	2	; select bank2
 13678  0590  008D               	movwf	13	;volatile
 13679                           
 13680                           ;DISPLAY.C: 30: if(TypeDP.TypeD.digitdp2==1)
 13681  0591  0020               	movlb	0	; select bank0
 13682  0592  1CEC               	btfss	_TypeDP,1
 13683  0593  2E07               	goto	i1l448
 13684  0594  2E04               	goto	i1l4071
 13685  0595                     i1l438:	
 13686                           ;DISPLAY.C: 35: case 2:
 13687                           
 13688                           ;DISPLAY.C: 34: break;
 13689                           
 13690                           ;DISPLAY.C: 32: else
 13691                           ;DISPLAY.C: 33: LATBbits.LATB7=0;
 13692                           
 13693                           ;DISPLAY.C: 31: LATBbits.LATB7=1;
 13694                           
 13695                           
 13696                           ;DISPLAY.C: 36: LATCbits.LATC4=0;
 13697  0595  0022               	movlb	2	; select bank2
 13698  0596  120E               	bcf	14,4	;volatile
 13699                           
 13700                           ;DISPLAY.C: 37: LATAbits.LATA6=1;
 13701  0597  170C               	bsf	12,6	;volatile
 13702                           
 13703                           ;DISPLAY.C: 38: LATAbits.LATA7=0;
 13704  0598  138C               	bcf	12,7	;volatile
 13705                           
 13706                           ;DISPLAY.C: 39: LATB=lookup_table[diswin1[digit]];
 13707  0599  0020               	movlb	0	; select bank0
 13708  059A  085D               	movf	_digit,w
 13709  059B  3EDA               	addlw	_diswin1& (0+255)
 13710  059C  0086               	movwf	6
 13711  059D  3001               	movlw	1	; select bank3/4
 13712  059E  0087               	movwf	7
 13713  059F  0801               	movf	1,w
 13714  05A0  00F0               	movwf	??_Display
 13715  05A1  01F1               	clrf	??_Display+1
 13716  05A2  35F0               	lslf	??_Display,f
 13717  05A3  0DF1               	rlf	??_Display+1,f
 13718  05A4  3000               	movlw	low (_lookup_table| (0+32768))
 13719  05A5  0770               	addwf	??_Display,w
 13720  05A6  0084               	movwf	4
 13721  05A7  30A0               	movlw	high (_lookup_table| (0+32768))
 13722  05A8  3D71               	addwfc	??_Display+1,w
 13723  05A9  0085               	movwf	5
 13724  05AA  0800               	movf	0,w	;code access
 13725  05AB  0022               	movlb	2	; select bank2
 13726  05AC  008D               	movwf	13	;volatile
 13727                           
 13728                           ;DISPLAY.C: 40: if(TypeDP.TypeD.digitdp3==1)
 13729  05AD  0020               	movlb	0	; select bank0
 13730  05AE  1D6C               	btfss	_TypeDP,2
 13731  05AF  2E07               	goto	i1l448
 13732  05B0  2E04               	goto	i1l4071
 13733  05B1                     i1l441:	
 13734                           ;DISPLAY.C: 45: case 3:
 13735                           
 13736                           ;DISPLAY.C: 44: break;
 13737                           
 13738                           ;DISPLAY.C: 42: else
 13739                           ;DISPLAY.C: 43: LATBbits.LATB7=0;
 13740                           
 13741                           ;DISPLAY.C: 41: LATBbits.LATB7=1;
 13742                           
 13743                           
 13744                           ;DISPLAY.C: 46: LATCbits.LATC4=1;
 13745  05B1  0022               	movlb	2	; select bank2
 13746  05B2  160E               	bsf	14,4	;volatile
 13747                           
 13748                           ;DISPLAY.C: 47: LATAbits.LATA6=1;
 13749  05B3  170C               	bsf	12,6	;volatile
 13750                           
 13751                           ;DISPLAY.C: 48: LATAbits.LATA7=0;
 13752  05B4  138C               	bcf	12,7	;volatile
 13753                           
 13754                           ;DISPLAY.C: 49: LATB=lookup_table[diswin1[digit]];
 13755  05B5  0020               	movlb	0	; select bank0
 13756  05B6  085D               	movf	_digit,w
 13757  05B7  3EDA               	addlw	_diswin1& (0+255)
 13758  05B8  0086               	movwf	6
 13759  05B9  3001               	movlw	1	; select bank3/4
 13760  05BA  0087               	movwf	7
 13761  05BB  0801               	movf	1,w
 13762  05BC  00F0               	movwf	??_Display
 13763  05BD  01F1               	clrf	??_Display+1
 13764  05BE  35F0               	lslf	??_Display,f
 13765  05BF  0DF1               	rlf	??_Display+1,f
 13766  05C0  3000               	movlw	low (_lookup_table| (0+32768))
 13767  05C1  0770               	addwf	??_Display,w
 13768  05C2  0084               	movwf	4
 13769  05C3  30A0               	movlw	high (_lookup_table| (0+32768))
 13770  05C4  3D71               	addwfc	??_Display+1,w
 13771  05C5  0085               	movwf	5
 13772  05C6  0800               	movf	0,w	;code access
 13773  05C7  0022               	movlb	2	; select bank2
 13774  05C8  008D               	movwf	13	;volatile
 13775                           
 13776                           ;DISPLAY.C: 50: if(TypeDP.TypeD.digitdp4==1)
 13777  05C9  0020               	movlb	0	; select bank0
 13778  05CA  1DEC               	btfss	_TypeDP,3
 13779  05CB  2E07               	goto	i1l448
 13780  05CC  2E04               	goto	i1l4071
 13781  05CD                     i1l444:	
 13782                           ;DISPLAY.C: 55: case 4:
 13783                           
 13784                           ;DISPLAY.C: 54: break;
 13785                           
 13786                           ;DISPLAY.C: 52: else
 13787                           ;DISPLAY.C: 53: LATBbits.LATB7=0;
 13788                           
 13789                           ;DISPLAY.C: 51: LATBbits.LATB7=1;
 13790                           
 13791                           
 13792                           ;DISPLAY.C: 56: LATCbits.LATC4=0;
 13793  05CD  0022               	movlb	2	; select bank2
 13794  05CE  120E               	bcf	14,4	;volatile
 13795                           
 13796                           ;DISPLAY.C: 57: LATAbits.LATA6=0;
 13797  05CF  130C               	bcf	12,6	;volatile
 13798                           
 13799                           ;DISPLAY.C: 58: LATAbits.LATA7=1;
 13800  05D0  178C               	bsf	12,7	;volatile
 13801                           
 13802                           ;DISPLAY.C: 59: LATB=lookup_table[diswin1[digit]];
 13803  05D1  0020               	movlb	0	; select bank0
 13804  05D2  085D               	movf	_digit,w
 13805  05D3  3EDA               	addlw	_diswin1& (0+255)
 13806  05D4  0086               	movwf	6
 13807  05D5  3001               	movlw	1	; select bank3/4
 13808  05D6  0087               	movwf	7
 13809  05D7  0801               	movf	1,w
 13810  05D8  00F0               	movwf	??_Display
 13811  05D9  01F1               	clrf	??_Display+1
 13812  05DA  35F0               	lslf	??_Display,f
 13813  05DB  0DF1               	rlf	??_Display+1,f
 13814  05DC  3000               	movlw	low (_lookup_table| (0+32768))
 13815  05DD  0770               	addwf	??_Display,w
 13816  05DE  0084               	movwf	4
 13817  05DF  30A0               	movlw	high (_lookup_table| (0+32768))
 13818  05E0  3D71               	addwfc	??_Display+1,w
 13819  05E1  0085               	movwf	5
 13820  05E2  0800               	movf	0,w	;code access
 13821  05E3  0022               	movlb	2	; select bank2
 13822  05E4  008D               	movwf	13	;volatile
 13823                           
 13824                           ;DISPLAY.C: 60: if(TypeDP.TypeD.digitdp5==1)
 13825  05E5  0020               	movlb	0	; select bank0
 13826  05E6  1E6C               	btfss	_TypeDP,4
 13827  05E7  2E07               	goto	i1l448
 13828  05E8  2E04               	goto	i1l4071
 13829  05E9                     i1l447:	
 13830                           ;DISPLAY.C: 65: case 5:
 13831                           
 13832                           ;DISPLAY.C: 64: break;
 13833                           
 13834                           ;DISPLAY.C: 62: else
 13835                           ;DISPLAY.C: 63: LATBbits.LATB7=0;
 13836                           
 13837                           ;DISPLAY.C: 61: LATBbits.LATB7=1;
 13838                           
 13839                           
 13840                           ;DISPLAY.C: 66: LATCbits.LATC4=1;
 13841  05E9  0022               	movlb	2	; select bank2
 13842  05EA  160E               	bsf	14,4	;volatile
 13843                           
 13844                           ;DISPLAY.C: 67: LATAbits.LATA6=0;
 13845  05EB  130C               	bcf	12,6	;volatile
 13846                           
 13847                           ;DISPLAY.C: 68: LATAbits.LATA7=1;
 13848  05EC  178C               	bsf	12,7	;volatile
 13849                           
 13850                           ;DISPLAY.C: 69: LATB=lookup_table[diswin1[digit]];
 13851  05ED  0020               	movlb	0	; select bank0
 13852  05EE  085D               	movf	_digit,w
 13853  05EF  3EDA               	addlw	_diswin1& (0+255)
 13854  05F0  0086               	movwf	6
 13855  05F1  3001               	movlw	1	; select bank3/4
 13856  05F2  0087               	movwf	7
 13857  05F3  0801               	movf	1,w
 13858  05F4  00F0               	movwf	??_Display
 13859  05F5  01F1               	clrf	??_Display+1
 13860  05F6  35F0               	lslf	??_Display,f
 13861  05F7  0DF1               	rlf	??_Display+1,f
 13862  05F8  3000               	movlw	low (_lookup_table| (0+32768))
 13863  05F9  0770               	addwf	??_Display,w
 13864  05FA  0084               	movwf	4
 13865  05FB  30A0               	movlw	high (_lookup_table| (0+32768))
 13866  05FC  3D71               	addwfc	??_Display+1,w
 13867  05FD  0085               	movwf	5
 13868  05FE  0800               	movf	0,w	;code access
 13869  05FF  0022               	movlb	2	; select bank2
 13870  0600  008D               	movwf	13	;volatile
 13871                           
 13872                           ;DISPLAY.C: 70: if(TypeDP.TypeD.digitdp6==1)
 13873  0601  0020               	movlb	0	; select bank0
 13874  0602  1EEC               	btfss	_TypeDP,5
 13875  0603  2E07               	goto	i1l448
 13876  0604                     i1l4071:	
 13877                           
 13878                           ;DISPLAY.C: 71: LATBbits.LATB7=1;
 13879  0604  0022               	movlb	2	; select bank2
 13880  0605  178D               	bsf	13,7	;volatile
 13881  0606  2E8E               	goto	i1l4145
 13882  0607                     i1l448:	
 13883                           
 13884                           ;DISPLAY.C: 72: else
 13885                           ;DISPLAY.C: 73: LATBbits.LATB7=0;
 13886  0607  0022               	movlb	2	; select bank2
 13887  0608  138D               	bcf	13,7	;volatile
 13888                           
 13889                           ;DISPLAY.C: 77: }
 13890                           
 13891                           ;DISPLAY.C: 76: break;
 13892                           
 13893                           ;DISPLAY.C: 75: default:
 13894                           
 13895                           ;DISPLAY.C: 74: break;
 13896  0609  2E8E               	goto	i1l4145
 13897  060A                     i1l4075:	
 13898  060A  0020               	movlb	0	; select bank0
 13899  060B  085D               	movf	_digit,w
 13900                           
 13901                           ; Switch size 1, requested type "space"
 13902                           ; Number of cases is 6, Range of values is 0 to 5
 13903                           ; switch strategies available:
 13904                           ; Name         Instructions Cycles
 13905                           ; direct_byte           18     6 (fixed)
 13906                           ; simple_byte           19    10 (average)
 13907                           ; jumptable            260     6 (fixed)
 13908                           ;	Chosen strategy is direct_byte
 13909  060C  0084               	movwf	4
 13910  060D  3006               	movlw	6
 13911  060E  0204               	subwf	4,w
 13912  060F  1803               	skipnc
 13913  0610  2E8E               	goto	i1l4145
 13914  0611  3198               	movlp	high i1S5761
 13915  0612  3504               	lslf	4,w
 13916  0613  3E00               	addlw	low i1S5761
 13917  0614  0082               	movwf	2
 13918                           
 13919                           ;DISPLAY.C: 78: }
 13920  0615  2E8E               	goto	i1l4145
 13921  0616                     i1l4077:	
 13922                           
 13923                           ;DISPLAY.C: 79: else if(digit == 6)
 13924  0616  085D               	movf	_digit,w
 13925  0617  3A06               	xorlw	6
 13926  0618  1D03               	skipz
 13927  0619  2E21               	goto	i1l4083
 13928                           
 13929                           ;DISPLAY.C: 80: {
 13930                           ;DISPLAY.C: 81: LATCbits.LATC4=0;
 13931  061A  0022               	movlb	2	; select bank2
 13932  061B  120E               	bcf	14,4	;volatile
 13933                           
 13934                           ;DISPLAY.C: 82: LATAbits.LATA6=1;
 13935  061C  170C               	bsf	12,6	;volatile
 13936                           
 13937                           ;DISPLAY.C: 83: LATAbits.LATA7=1;
 13938  061D  178C               	bsf	12,7	;volatile
 13939                           
 13940                           ;DISPLAY.C: 85: LATB=TypeU.LEDGROUP[0];
 13941  061E  0020               	movlb	0	; select bank0
 13942  061F  0868               	movf	_TypeU,w
 13943  0620  2E2C               	goto	L26
 13944  0621                     i1l4083:	
 13945                           ;DISPLAY.C: 86: }
 13946                           
 13947                           
 13948                           ;DISPLAY.C: 87: else if(digit == 7)
 13949  0621  0020               	movlb	0	; select bank0
 13950  0622  085D               	movf	_digit,w
 13951  0623  3A07               	xorlw	7
 13952  0624  1D03               	skipz
 13953  0625  2E2F               	goto	i1l4089
 13954                           
 13955                           ;DISPLAY.C: 88: {
 13956                           ;DISPLAY.C: 89: LATCbits.LATC4=1;
 13957  0626  0022               	movlb	2	; select bank2
 13958  0627  160E               	bsf	14,4	;volatile
 13959                           
 13960                           ;DISPLAY.C: 90: LATAbits.LATA6=1;
 13961  0628  170C               	bsf	12,6	;volatile
 13962                           
 13963                           ;DISPLAY.C: 91: LATAbits.LATA7=1;
 13964  0629  178C               	bsf	12,7	;volatile
 13965                           
 13966                           ;DISPLAY.C: 93: LATB=TypeU.LEDGROUP[1];
 13967  062A  0020               	movlb	0	; select bank0
 13968  062B  0869               	movf	_TypeU+1,w
 13969  062C                     L26:	
 13970  062C  0022               	movlb	2	; select bank2
 13971  062D  008D               	movwf	13	;volatile
 13972                           
 13973                           ;DISPLAY.C: 95: }
 13974  062E  2E8E               	goto	i1l4145
 13975  062F                     i1l4089:	
 13976                           
 13977                           ;DISPLAY.C: 96: else if(digit == 8)
 13978  062F  0020               	movlb	0	; select bank0
 13979  0630  085D               	movf	_digit,w
 13980  0631  3A08               	xorlw	8
 13981  0632  1D03               	skipz
 13982  0633  2E8E               	goto	i1l4145
 13983                           
 13984                           ;DISPLAY.C: 97: {
 13985                           ;DISPLAY.C: 98: TRISB=0X0F;
 13986  0634  300F               	movlw	15
 13987  0635  0021               	movlb	1	; select bank1
 13988  0636  008D               	movwf	13	;volatile
 13989                           
 13990                           ;DISPLAY.C: 99: for(i=0;i>=100;i++);
 13991  0637  0020               	movlb	0	; select bank0
 13992  0638  01E0               	clrf	_i
 13993  0639  3064               	movlw	100
 13994  063A  0260               	subwf	_i,w
 13995  063B  1C03               	btfss	3,0
 13996  063C  2E45               	goto	i1l4103
 13997  063D                     i1l4099:	
 13998  063D  3001               	movlw	1
 13999  063E  00F0               	movwf	??_Display
 14000  063F  0870               	movf	??_Display,w
 14001  0640  07E0               	addwf	_i,f
 14002  0641  3064               	movlw	100
 14003  0642  0260               	subwf	_i,w
 14004  0643  1803               	skipnc
 14005  0644  2E3D               	goto	i1l4099
 14006  0645                     i1l4103:	
 14007                           
 14008                           ;DISPLAY.C: 100: portbstatus=PORTB;
 14009  0645  080D               	movf	13,w	;volatile
 14010  0646  00F0               	movwf	??_Display
 14011  0647  0870               	movf	??_Display,w
 14012  0648  00E3               	movwf	_portbstatus	;volatile
 14013                           
 14014                           ;DISPLAY.C: 101: for(i=0;i>=200;i++);
 14015  0649  01E0               	clrf	_i
 14016  064A  30C8               	movlw	200
 14017  064B  0260               	subwf	_i,w
 14018  064C  1C03               	btfss	3,0
 14019  064D  2E56               	goto	i1l4115
 14020  064E                     i1l4111:	
 14021  064E  3001               	movlw	1
 14022  064F  00F0               	movwf	??_Display
 14023  0650  0870               	movf	??_Display,w
 14024  0651  07E0               	addwf	_i,f
 14025  0652  30C8               	movlw	200
 14026  0653  0260               	subwf	_i,w
 14027  0654  1803               	skipnc
 14028  0655  2E4E               	goto	i1l4111
 14029  0656                     i1l4115:	
 14030                           
 14031                           ;DISPLAY.C: 102: if(pportb==portbstatus)
 14032  0656  0022               	movlb	2	; select bank2
 14033  0657  0858               	movf	_pportb^(0+256),w	;volatile
 14034  0658  0020               	movlb	0	; select bank0
 14035  0659  0663               	xorwf	_portbstatus,w	;volatile
 14036  065A  1D03               	skipz
 14037  065B  2E84               	goto	i1l4139
 14038                           
 14039                           ;DISPLAY.C: 103: {
 14040                           ;DISPLAY.C: 104: temp=portbstatus;
 14041  065C  0863               	movf	_portbstatus,w	;volatile
 14042  065D  00F0               	movwf	??_Display
 14043  065E  0870               	movf	??_Display,w
 14044  065F  00E6               	movwf	_temp
 14045                           
 14046                           ;DISPLAY.C: 105: temp=(temp & 0x0F);
 14047  0660  0866               	movf	_temp,w
 14048  0661  390F               	andlw	15
 14049  0662  00F0               	movwf	??_Display
 14050  0663  0870               	movf	??_Display,w
 14051  0664  00E6               	movwf	_temp
 14052                           
 14053                           ;DISPLAY.C: 106: if(temp==0x01)
 14054  0665  0866               	movf	_temp,w
 14055  0666  3A01               	xorlw	1
 14056  0667  1D03               	skipz
 14057  0668  2E6B               	goto	i1l4125
 14058                           
 14059                           ;DISPLAY.C: 107: key=1;
 14060  0669  3001               	movlw	1
 14061  066A  2E7F               	goto	L29
 14062  066B                     i1l4125:	
 14063                           
 14064                           ;DISPLAY.C: 108: else if(temp==0x02)
 14065  066B  0020               	movlb	0	; select bank0
 14066  066C  0866               	movf	_temp,w
 14067  066D  3A02               	xorlw	2
 14068  066E  1D03               	skipz
 14069  066F  2E72               	goto	i1l4129
 14070                           
 14071                           ;DISPLAY.C: 109: key=2;
 14072  0670  3002               	movlw	2
 14073  0671  2E7F               	goto	L29
 14074  0672                     i1l4129:	
 14075                           
 14076                           ;DISPLAY.C: 110: else if(temp==0x04)
 14077  0672  0020               	movlb	0	; select bank0
 14078  0673  0866               	movf	_temp,w
 14079  0674  3A04               	xorlw	4
 14080  0675  1D03               	skipz
 14081  0676  2E79               	goto	i1l4133
 14082                           
 14083                           ;DISPLAY.C: 111: key=3;
 14084  0677  3003               	movlw	3
 14085  0678  2E7F               	goto	L29
 14086  0679                     i1l4133:	
 14087                           
 14088                           ;DISPLAY.C: 112: else if(temp==0x08)
 14089  0679  0020               	movlb	0	; select bank0
 14090  067A  0866               	movf	_temp,w
 14091  067B  3A08               	xorlw	8
 14092  067C  1D03               	skipz
 14093  067D  2E84               	goto	i1l4139
 14094                           
 14095                           ;DISPLAY.C: 113: key=4;
 14096  067E  3004               	movlw	4
 14097  067F                     L29:	
 14098  067F  00F0               	movwf	??_Display
 14099  0680  0870               	movf	??_Display,w
 14100  0681  0021               	movlb	1	; select bank1
 14101  0682  00EF               	movwf	_key^(0+128)	;volatile
 14102  0683  2E86               	goto	i1l4141
 14103  0684                     i1l4139:	
 14104                           ;DISPLAY.C: 116: }
 14105                           
 14106                           ;DISPLAY.C: 114: else
 14107                           ;DISPLAY.C: 115: key=0;
 14108                           
 14109                           
 14110                           ;DISPLAY.C: 117: else
 14111                           ;DISPLAY.C: 118: {
 14112                           ;DISPLAY.C: 119: key=0;
 14113  0684  0021               	movlb	1	; select bank1
 14114  0685  01EF               	clrf	_key^(0+128)	;volatile
 14115  0686                     i1l4141:	
 14116                           
 14117                           ;DISPLAY.C: 120: }
 14118                           ;DISPLAY.C: 121: pportb=portbstatus;
 14119  0686  0020               	movlb	0	; select bank0
 14120  0687  0863               	movf	_portbstatus,w	;volatile
 14121  0688  00F0               	movwf	??_Display
 14122  0689  0870               	movf	??_Display,w
 14123  068A  0022               	movlb	2	; select bank2
 14124  068B  00D8               	movwf	_pportb^(0+256)	;volatile
 14125                           
 14126                           ;DISPLAY.C: 122: TRISB=0X00;
 14127  068C  0021               	movlb	1	; select bank1
 14128  068D  018D               	clrf	13	;volatile
 14129  068E                     i1l4145:	
 14130                           
 14131                           ;DISPLAY.C: 123: }
 14132                           ;DISPLAY.C: 124: if(++digit >=9)
 14133  068E  3001               	movlw	1
 14134  068F  00F0               	movwf	??_Display
 14135  0690  0870               	movf	??_Display,w
 14136  0691  0020               	movlb	0	; select bank0
 14137  0692  07DD               	addwf	_digit,f
 14138  0693  3009               	movlw	9
 14139  0694  025D               	subwf	_digit,w
 14140  0695  1C03               	skipc
 14141  0696  0008               	return
 14142                           
 14143                           ;DISPLAY.C: 125: digit=0;
 14144  0697  01DD               	clrf	_digit
 14145  0698  0008               	return
 14146  0699                     __end_of_Display:	
 14147  007E                     btemp	set	126	;btemp
 14148  007E                     pic14e$flags	set	126
 14149  007E                     wtemp	set	126
 14150  007E                     wtemp0	set	126
 14151  0080                     wtemp1	set	128
 14152  0082                     wtemp2	set	130
 14153  0084                     wtemp3	set	132
 14154  0086                     wtemp4	set	134
 14155  0088                     wtemp5	set	136
 14156  007F                     wtemp6	set	127
 14157  007E                     ttemp	set	126
 14158  007E                     ttemp0	set	126
 14159  0081                     ttemp1	set	129
 14160  0084                     ttemp2	set	132
 14161  0087                     ttemp3	set	135
 14162  007F                     ttemp4	set	127
 14163  007E                     ltemp	set	126
 14164  007E                     ltemp0	set	126
 14165  0082                     ltemp1	set	130
 14166  0086                     ltemp2	set	134
 14167  0080                     ltemp3	set	128
 14168  2796                     
 14169                           	psect	swtext1
 14170  1800                     __pswtext1:	
 14171  1800                     i1S5761:	
 14172  1800  3185  2D5D         	ljmp	i1l431
 14173  1802  3185  2D79         	ljmp	i1l435
 14174  1804  3185  2D95         	ljmp	i1l438
 14175  1806  3185  2DB1         	ljmp	i1l441
 14176  1808  3185  2DCD         	ljmp	i1l444
 14177  180A  3185  2DE9         	ljmp	i1l447


Data Sizes:
    Strings     0
    Constant    110
    Data        33
    BSS         315
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      80
    BANK1            80     79      80
    BANK2            80      0      80
    BANK3            80      0      79
    BANK4            80      0      65
    BANK5            80      0      22
    BANK6            80      0      73
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           22      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_Function in COMMON

    _ISR_Function->i1___lwtoft
    i1___lwtoft->i1___ftpack
    i1___fttol->i1___lwtoft
    i1___ftmul->i1___lwtoft
    i1___ftdiv->i1___lwtoft
    i1___ftadd->i1___lwtoft

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_Function in BANK0

    _ISR_Function->i1___fttol
    i1___fttol->i1___ftadd
    i1___ftadd->i1___ftmul

Critical Paths under _main in BANK1

    _main->_Adaptive_base_pid
    _transmittops->_Send_Byte
    _send_status->_Send_Byte
    _key_application->_Update_PWM
    _disp_hex_window2->___lwdiv
    _disp_hex_window1->___lwdiv
    _detect_display_error->_Update_PWM
    ___lwtoft->___ftpack
    _SCANENCODER2->_enc2_port
    _SCANENCODER1->_enc1_port
    _Adaptive_base_pid->_Update_PWM
    ___fttol->___ftmul
    ___ftmul->___ftadd
    ___ftge->___altoft
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _Update_PWM->___fttol

Critical Paths under _ISR_Function in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Function in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR_Function in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR_Function in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR_Function in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR_Function in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR_Function in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR_Function in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR_Function in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR_Function in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR_Function in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR_Function in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR_Function in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR_Function in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR_Function in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   34969
                                             77 BANK1      2     2      0
                  _Adaptive_base_pid
                            _Delayms
                           _PWM_init
                       _SCANENCODER1
                       _SCANENCODER2
                        _Timer0_init
                         _Update_PWM
                            ___ftmul
                            ___fttol
                           ___lwtoft
                             ___wmul
                       _capture_init
               _detect_display_error
                   _disp_hex_window1
                  _disp_hex_window11
                   _disp_hex_window2
                  _disp_hex_window22
                    _key_application
                       _portpin_init
                        _send_status
                        _system_init
                       _transmittops
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _transmittops                                         1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status                                          1     1      0      22
                                              1 BANK1      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Send_Byte                                            1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _portpin_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_application                                      3     3      0    3769
                                             59 BANK1      3     3      0
                         _Update_PWM
                             ___wmul
                   _disp_hex_window2
 ---------------------------------------------------------------------------------
 (2) _disp_hex_window2                                     3     1      2    2033
                                              8 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window22                                    2     0      2      64
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window11                                    2     0      2      64
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _disp_hex_window1                                     3     1      2    2033
                                              8 BANK1      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     927
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     674
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _detect_display_error                                 1     1      0     766
                                             59 BANK1      1     1      0
                         _Update_PWM
 ---------------------------------------------------------------------------------
 (1) _capture_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2735
                                              8 BANK1      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER2                                         2     2      0     123
                                              5 BANK1      2     2      0
                          _enc2_port
 ---------------------------------------------------------------------------------
 (2) _enc2_port                                            5     5      0      94
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SCANENCODER1                                         2     2      0     123
                                              6 BANK1      2     2      0
                          _enc1_port
 ---------------------------------------------------------------------------------
 (2) _enc1_port                                            6     6      0      94
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delayms                                              6     4      2     286
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Adaptive_base_pid                                   18    18      0   16400
                                             59 BANK1     18    18      0
                         _Update_PWM
                            ___aldiv
                           ___altoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     860
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     802
                                             37 BANK1     14    10      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    4101
                                             21 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     392
                                             16 BANK1      9     3      6
                           ___altoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2699
                                             37 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3745
                                              8 BANK1     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    2353
                                              8 BANK1      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2087
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     504
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (2) _Update_PWM                                           8     6      2     766
                                             51 BANK1      8     6      2
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Function                                        11    11      0    4658
                                             12 COMMON     2     2      0
                                             43 BANK0      9     9      0
                            _Display
                       i1_Update_PWM
                          i1___aldiv
                          i1___ftadd
                          i1___ftdiv
                          i1___ftmul
                          i1___fttol
                         i1___lwtoft
 ---------------------------------------------------------------------------------
 (5) i1___lwtoft                                           4     1      3     621
                                              8 COMMON     4     1      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (5) i1___fttol                                           14    10      4     278
                                             29 BANK0     14    10      4
                          i1___ftadd (ARG)
                          i1___ftmul (ARG)
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftmul                                           16    10      6     951
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftdiv                                           16    10      6     853
                                              0 BANK0     16    10      6
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftadd                                           13     7      6    1413
                                             16 BANK0     13     7      6
                          i1___ftmul (ARG)
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___ftpack                                           8     3      5     521
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) i1___aldiv                                           15     7      8     352
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) i1_Update_PWM                                         8     6      2     166
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Display                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adaptive_base_pid
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___aldiv
     ___altoft
       ___ftpack
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
       ___altoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftneg
     ___fttol
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
   _Delayms
   _PWM_init
   _SCANENCODER1
     _enc1_port
   _SCANENCODER2
     _enc2_port
   _Timer0_init
   _Update_PWM
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___ftmul
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___fttol
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
     ___wmul (ARG)
   ___wmul
   _capture_init
   _detect_display_error
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
   _disp_hex_window1
     ___lwdiv
     ___lwmod
   _disp_hex_window11
   _disp_hex_window2
     ___lwdiv
     ___lwmod
   _disp_hex_window22
   _key_application
     _Update_PWM
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _disp_hex_window2
       ___lwdiv
       ___lwmod
   _portpin_init
   _send_status
     _Send_Byte
   _system_init
   _transmittops
     _Send_Byte
   _uart_init

 _ISR_Function (ROOT)
   _Display
   i1_Update_PWM
   i1___aldiv
   i1___ftadd
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftpack (ARG)
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftdiv
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___ftmul
     i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___fttol
     i1___ftadd (ARG)
       i1___ftmul (ARG)
         i1___ftpack
         i1___lwtoft (ARG)
           i1___ftpack
       i1___ftpack (ARG)
       i1___lwtoft (ARG)
         i1___ftpack
     i1___ftmul (ARG)
       i1___ftpack
       i1___lwtoft (ARG)
         i1___ftpack
     i1___lwtoft (ARG)
       i1___ftpack
   i1___lwtoft
     i1___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      41      13       81.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1ED      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      16      16       27.5%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      49      18       91.3%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1ED      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              16      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Dec 16 17:32:11 2020

          Update_PWM@setwsduty 00D3                    _portbstatus 0063                    _updatedispf 01D8  
                 ___altoft@exp 00AE                     __CFG_CP$ON 0000                              _i 0060  
                            pc 0002                     i1___ftpack 1B66                  ___altoft@sign 00AF  
    __end_of_Adaptive_base_pid 1800                    __CFG_CPD$ON 0000                     i1___lwtoft 18D3  
          ___wmul@multiplicand 00A2                   _portpin_init 1938            __end_of_system_init 1899  
                 ___ftadd@exp1 00B4                   ___ftadd@exp2 00B3                    __CFG_LVP$ON 0000  
                 ___ftadd@sign 00B2                            l630 0932                            l544 1764  
                          l720 0D9E                            l704 0C9B                            l721 0D9F  
                          l722 0F98                            l803 1A63                            l723 0E25  
                          l707 0CF2                            l644 0A87                            l636 09EC  
                          l821 11AA                            l662 0B34                            l487 196E  
                          l831 11E3                            l823 11B4                            l815 118C  
                          l647 0A79                            l920 100A                            l825 11BE  
                          l817 1196                            l761 0784                            l745 06CF  
                          l729 0EE1                            l665 0B26                            l746 06A0  
                          l819 11A0                            l659 0B3B                            l692 0D97  
                          l766 079C                            l686 0BC6                            l768 07A2  
                          l696 0C29                            l697 0C39                   i1___ftadd@f1 0030  
                 i1___ftadd@f2 0033                            l699 0C4C                            l797 1887  
                          l975 1E81                            _PR2 001B                    _transmitonf 0161  
                          _One 01AA                            _Two 01AE                            _iii 023E  
                          _ijk 0128                            _key 00EF                            _lmn 012A  
                 i1___ftdiv@f1 0023                   i1___ftdiv@f2 0020                   i1___ftdiv@f3 002B  
                 __CFG_BORV$LO 0000                            wreg 0009                   i1___ftmul@f1 0020  
                 i1___ftmul@f2 0023                   i1___fttol@f1 003D                _key_application 0699  
               i1___aldiv@sign 0021                   ___ftdiv@cntr 00CF                   ___ftdiv@sign 00D4  
                         l1110 08D8                           l1081 1BF9                           l1087 1C10  
                         l4205 1DB0                           l4301 1D63                           l4231 1DE2  
                         l4303 1D67                           l4233 1DE6                           l4305 1D6C  
                         l3601 19BF                           l4323 160E                           l4163 197F  
                         l4227 1DDE                           l4219 1DCC                           l4235 1DEB  
                         l3603 19CB                           l3611 19E0                           l3541 1BCF  
                         l4341 1720                           l4325 161A                           l4165 198A  
                         l4501 1A9B                           l4351 17A2                           l3607 19D7  
                         l3545 1BD6                           l3801 08A4                           l4361 17C8  
                         l4185 1D8F                           l4257 1D11                           l4521 06E3  
                         l4505 1AA1                           l5401 0AC1                           l3555 1BFE  
                         l3547 1BE0                           l3803 08AE                           l4355 17B8  
                         l4195 1D9C                           l4267 1D1E                           l5403 0AC3  
                         l3741 1EDB                           l3557 1C06                           l3549 1BE5  
                         l3813 08CA                           l3805 08B3                           l4365 17E5  
                         l3645 1B5A                           l4277 1D32                           l5405 0ACA  
                         l5317 09D1                           l5309 09C3                           l3727 1EA2  
                         l3719 1E92                           l3823 08FC                           l3815 08D4  
                         l3807 08B7                           l3911 1300                           l4551 0751  
                         l5431 0B31                           l5335 09F0                           l5239 0940  
                         l3745 1EE9                           l3737 1ED0                           l3729 1EB0  
                         l3761 07E0                           l3833 0917                           l3905 12EA  
                         l4297 1D5F                           l4289 1D4D                           l4641 11F2  
                         l3585 0829                           l3577 080B                           l4545 0741  
                         l4481 1A64                           l5505 0BE5                           l5425 0B1B  
                         l5345 0A15                           l3819 08EA                           l3843 10DF  
                         l3923 133B                           l3675 1AFB                           l4627 11C9  
                         l3579 0817                           l4571 078F                           l4547 074C  
                         l5443 0B56                           l5419 0AF2                           l5363 0A43  
                         l3773 0861                           l4629 11D1                           l3589 0832  
                         l4549 06ED                           l4493 1A7A                           l5517 0C0F  
                         l5381 0A98                           l3759 07D0                           l3783 0877  
                         l3871 114F                           l3863 1136                           l3935 1357  
                         l3927 1343                           l4639 11F0                           l4559 0775  
                         l5623 0D8A                           l5607 0D49                           l5535 0C60  
                         l5543 0C76                           l5471 0B98                           l5455 0B7C  
                         l5463 0B84                           l5375 0A84                           l3777 0868  
                         l3849 10F5                           l4569 078B                           l5617 0D6B  
                         l5449 0B67                           l5465 0B87                           l5385 0AA4  
                         l5369 0A6E                           l3795 0891                           l3883 1A2F  
                         l3939 135F                           l3963 1F92                           l3699 1004  
                         l4595 07A9                           l5707 0FBD                           l5491 0BC3  
                         l5475 0BA4                           l5459 0B81                           l3981 1FC2  
                         l4597 07AA                           l5581 0D18                           l5397 0ABB  
                         l5493 0BC8                           l3887 1A45                           l3991 1FE6  
                         l3983 1FD0                           l4599 07B1                           l5735 0FF3  
                         l5487 0BBC                           l3993 1FE9                           l5681 0ECD  
                         l5649 0DF4                           l5585 0D29                           l5569 0CDC  
                         l5729 0FE6                           l5739 0FFC                           l5691 0F19  
                         l5683 0ECF                           l5579 0D06                           l3997 1FF7  
                         l3989 1FDD                           l5695 0F2A                           l5679 0ECB  
                         _LATB 010D                           u5005 1344                           u4215 1BF4  
                         u5015 134A                           u4235 1C01                           u4315 0818  
                         u5045 1360                           u5125 1FC3                           u4325 0822  
                         u5055 1366                           u4335 082A                           u4265 1C17  
                         u4515 1EA5                           u4195 1BDB                           u5155 1FDE  
                         u4365 19C2                           u4535 1EB1                           u5095 1F99  
                         u4455 100B                           u4295 080E                           u4545 1EC5  
                         u4705 0892                           u4465 1010                           u4385 19D1  
                         u4555 1ED1                           u5515 1974                           u4395 19D8  
                         u8005 0C24                           u4735 08A5                           u4905 1150  
                         _PIR1 0011                           u4595 07D5                           u4765 08B8  
                         u8045 0C94                           u5823 1714                           u4865 1107  
                         u5833 174A                           u4795 08CB                           u4875 1117  
                         u8075 0CEB                           u4885 1137                           u5845 1799  
                         u7605 0A56                           u4895 1146                           u4975 130C  
                         u5855 17AC                           u4985 131C                           u7735 0B04  
                         u7965 0BFC                           u7975 0C08                           u7995 0C19  
                         _TMR0 0015                           _OneH 0133                           _OneL 0134  
                 __CFG_WRT$OFF 0000                           _TwoH 0135                           _TwoL 0136  
                 _transmittops 1A54                     _Actual_amp 01E5                           _old1 01B8  
                         _old2 01BA                           _new1 0054                           _new2 0056  
                         _main 092F                   ___ftpack@arg 00A0                     _Actual_vtg 025B  
                 ___ftpack@exp 00A3                           _tans 015E                           _temp 0066  
                 i1___lwtoft@c 0078                           fsr0h 0005                           fsr1h 0007  
                         fsr0l 0004                           indf0 0000                           indf1 0001  
                         fsr1l 0006                           btemp 007E                  i1___ftdiv@exp 002E  
                         ltemp 007E                           start 04D1                           ttemp 007E  
                         wtemp 007E                  __CFG_IESO$OFF 0000                __end_of_Delayms 198F  
     disp_hex_window1@hex_data 00A8         ??_detect_display_error 00DB                  __CFG_MCLRE$ON 0000  
                 ___ftmul@cntr 00C3                __end_of_Display 0699                   ___ftmul@sign 00C4  
                i1___ftmul@exp 002A       disp_hex_window2@hex_data 00A8                   ___fttol@exp1 00D2  
                 ___fttol@lval 00CE                  __CFG_PLLEN$ON 0000                   _torchstatus1 015F  
                 _torchstatus2 0160        i1___ftmul@f3_as_product 002B             enc2_port@portvalue 00A3  
              __end_of___aldiv 1EF2                          ?_main 0070                __end_of___ftadd 092F  
                __CFG_WDTE$OFF 0000                __end_of___ftdiv 1171                __end_of___ftneg 1885  
              __end_of___ftmul 1387                          _T1CON 0018                __end_of___fttol 2000  
              __end_of___lwdiv 0839                          i1l431 055D                          i1l441 05B1  
              __end_of___lwmod 19E7                          i1l435 0579                          i1l444 05CD  
                        i1l621 03FD                          i1l438 0595                          i1l622 0475  
                        i1l447 05E9                          i1l623 04A5                          i1l448 0607  
                        i1l624 04A8                          i1l609 0356                          i1l561 004C  
                        i1l626 04AF                          i1l582 04CC                          i1l578 00C5  
                        i1l597 02D1                          i1l975 1DFF                          _RCREG 0199  
                ?_SCANENCODER1 0070                  ?_SCANENCODER2 0070                          _TMR1H 0017  
                        _TMR1L 0016                          _SPBRG 019B                          _PORTA 000C  
                        _PORTB 000D                          _PORTC 000E                 i1___ftadd@exp1 003C  
               i1___ftadd@exp2 003B                          _TORCH 016C                          _TRISA 008C  
                        _TRISB 008D                          _TRISC 008E                          _TXREG 019A  
               i1___ftadd@sign 003A                          _TXSTA 019E                          _Count 0132  
                   _Hi_setppwm 01A6                 __CFG_FCMEN$OFF 0000                   _wfstatusbyte 01D9  
                        _TypeU 0068                     _Displayarr 2058                          _iTest 023C  
                        _delay 022E                          _digit 005D           __end_of_capture_init 18D3  
                        _pfreq 0168                  ___ftpack@sign 00A4                          _txonf 01D7  
               __CFG_BOREN$OFF 0000     __size_of_disp_hex_window11 0001     __size_of_disp_hex_window22 0001  
                        ltemp0 007E                          ltemp1 0082                          ltemp2 0086  
                        ltemp3 0080                 i1___ftdiv@cntr 002A                 i1___ftdiv@sign 002F  
             __end_of_PWM_init 1967                          ttemp0 007E                          ttemp1 0081  
                        ttemp2 0084                          ttemp3 0087                          ttemp4 007F  
                        status 0003             __size_ofi1___aldiv 0082                          wtemp0 007E  
                        wtemp1 0080                          wtemp2 0082                          wtemp3 0084  
                        wtemp4 0086                          wtemp5 0088                          wtemp6 007F  
           __size_ofi1___ftadd 00F6             __size_ofi1___ftdiv 00A9             __size_ofi1___ftmul 00B4  
           __size_ofi1___fttol 0087                 i1___ftpack@arg 0070                 i1___ftpack@exp 0073  
              __initialization 04D3                    _system_init 188F                   __end_of_main 1000  
        _universal_error_latch 0163                    ?i1___ftpack 0070                 i1___ftmul@cntr 002E  
               i1___ftmul@sign 002F     __size_of_Adaptive_base_pid 0383                 __CFG_LPBOR$OFF 0000  
                  ?i1___lwtoft 0078                 i1___fttol@exp1 004A                 i1___fttol@lval 0046  
                       ??_main 00ED                  ___fttol@sign1 00CD        __end_of_key_application 07BB  
               ??_SCANENCODER1 00A6                 ??_SCANENCODER2 00A5                     _Lo_setppwm 01A8  
                _count_transms 022A               __end_of___altoft 07F8                         i1S5761 1800  
                       _CCPR2H 0299                         _CCPR1L 0291                         _CCPR2L 0298  
                       _ANSELA 018C                         _ANSELB 018D               __end_of___ftpack 1C27  
                 _adaptivepidf 0137                         i1l1110 1426                         i1l1081 1B98  
                       i1l1087 1BAF                         i1l4011 1B7F                         i1l4021 1BA5  
                       i1l4013 1B84                         i1l4005 1B6E                         i1l4111 064E  
                       i1l4103 0645                         i1l4009 1B75                         i1l5001 00B5  
                       i1l4115 0656                         i1l4019 1B9D                         i1l5011 00D4  
                       i1l4133 0679                         i1l4141 0686                         i1l4125 066B  
                       i1l5101 02B8                         i1l5005 00C6                         i1l4071 0604  
                       i1l5015 00E1                         i1l4129 0672                         i1l4145 068E  
                       i1l5201 03AC                         i1l5113 02D7                         i1l5009 00CD  
                       i1l4139 0684                         i1l4083 0621                         i1l4075 060A  
                       i1l5123 02EC                         i1l5027 0111                         i1l5019 00ED  
                       i1l4077 0616                         i1l5207 03C9                         i1l5071 0229  
                       i1l4089 062F                         i1l5233 04C2                         i1l5145 0320  
                       i1l5137 0301                         i1l5081 0293                         i1l4099 063D  
                       i1l5227 04AE                         i1l5075 022F                         i1l4701 1E4E  
                       i1l5181 0373                         i1l5085 0299                         i1l5167 0366  
                       i1l4705 1E59                         i1l4721 13AF                         i1l5193 039C  
                       i1l4731 13C5                         i1l4811 108D                         i1l5099 02B6  
                       i1l4709 1E67                         i1l4725 13B6                         i1l4901 1F3B  
                       i1l4751 13FC                         i1l4743 13DF                         i1l4911 1F5F  
                       i1l4903 1F49                         i1l4761 1418                         i1l4753 1401  
                       i1l4833 1236                         i1l4913 1F62                         i1l4691 1E20  
                       i1l4683 1E10                         i1l4771 144A                         i1l4763 1422  
                       i1l4755 1405                         i1l4819 10A6                         i1l4851 1287  
                       i1l4693 1E2E                         i1l4781 1465                         i1l4749 13F2  
                       i1l4917 1F70                         i1l4909 1F56                         i1l4767 1438  
                       i1l4791 1036                         i1l4863 12A3                         i1l4855 128F  
                       i1l4839 124C                         i1l4953 0042                         i1l4867 12AB  
                       i1l4883 1F0B                         i1l4955 0047                         i1l4797 104C  
                       i1l4973 007A                   ?_send_status 0070                         i1l4983 008A  
                       i1l4975 007C                         i1l4959 0050                         i1l4993 009B  
                       i1l4969 0068                         i1l4977 007F                         u520_25 1B7A  
             __end_of___lwtoft 190E                         u522_25 1B93                         u524_25 1BA0  
                       u630_25 1E4F                      ??_Delayms 00A2                         u527_25 1BB6  
                       u626_25 1E23                         u642_25 13E0                         u706_25 0130  
                       u651_25 1419                         u707_25 014D                         u628_25 1E2F  
                       u660_25 108E                         u740_25 03F0                         u629_25 1E43  
                       u645_25 13F3                         u661_25 109D                         u741_25 040A  
                       u709_25 01C5                         u662_25 10A7                         u670_25 1296  
                       u742_25 0427                         u743_25 0444                         u648_25 1406  
                       u680_25 1F3C                         u673_25 12AC                         u729_25 0333  
                       u658_25 105E                         u674_25 12B2                         u666_25 1258  
                       u659_25 106E                         u667_25 1268                         u683_25 1F57  
                       u669_25 1290                         u677_25 1F12                      ??_Display 0070  
               __CFG_PWRTE$OFF 0000                  ??_Timer0_init 00A0                         _TypeDP 006C  
                       ___ftge 1A18                         _Tx_ptr 01CC                      ??___aldiv 00A8  
           __size_of_Send_Byte 000A                         ___wmul 1001              i1Update_PWM@Temp1 0074  
                    ??___ftadd 00AE                 __CFG_STVREN$ON 0000                      ??___ftdiv 00CB  
                    ??___ftneg 00A3                      ??___ftmul 00BB                      ??___fttol 00C9  
                       _encod1 005E                         _encod2 005F                         _chksum 013E  
                    ??___lwdiv 00A4                      ??___lwmod 00A4                         _arrptr 0138  
                       _error4 01D0                         _error8 0146                         _erroru 0166  
                       _pcount 0151                         _pportb 0158                         _rxdata 0064  
            __end_ofi1___aldiv 1E70          ___ftmul@f3_as_product 00C0              __end_ofi1___ftadd 147D  
            __end_ofi1___ftdiv 10C8              __end_ofi1___ftmul 12D3              __end_ofi1___fttol 1F79  
                   _Update_PWM 19E7                 _controller_out 0224            __size_ofi1___ftpack 0060  
               _wfspeedchangef 016F        __end_of__initialization 0552                     ___altoft@c 00A8  
          __size_ofi1___lwtoft 0013                     ___ftadd@f1 00A8                     ___ftadd@f2 00AB  
                   ___ftge@ff1 00B0                     ___ftge@ff2 00B3                i1___ftpack@sign 0074  
                   ___ftdiv@f1 00C8                     ___ftdiv@f2 00C5                     ___ftdiv@f3 00D0  
                   ___ftneg@f1 00A0      __size_of_disp_hex_window1 0064      __size_of_disp_hex_window2 0066  
                   ___ftmul@f1 00B5                     ___ftmul@f2 00B8                     ___fttol@f1 00C5  
           __size_of_enc1_port 005F             __size_of_enc2_port 005D                 __pcstackCOMMON 0070  
            _ISR_Function$1186 007C                   __pidataBANK0 07FE                   __pidataBANK1 07FF  
                 __pidataBANK2 1878                   __pidataBANK3 1923                   __pidataBANK4 07F8  
          __end_of_Timer0_init 18C2                     ___lwtoft@c 00A8                   _capintervalf 01CD  
             ?_key_application 0070          __size_of_capture_init 0011                      ?_PWM_init 0070  
               _OPTION_REGbits 0095                i1___fttol@sign1 0045              __end_of_Send_Byte 188F  
            i1___aldiv@divisor 0070              i1___aldiv@counter 0020                     __pbssBANK0 0054  
                   __pbssBANK2 0120                     __pbssBANK3 01A0                     __pbssBANK4 0220  
                   __pbssBANK5 02A0                     __pbssBANK6 0320                __CFG_VCAPEN$OFF 0000  
                ?_ISR_Function 0070           __end_of_SCANENCODER1 1DEE           __end_of_SCANENCODER2 1D6F  
                   __pmaintext 092F                        ?___ftge 00B0                        ?___wmul 00A0  
                 _capture_init 18C2                     __pintentry 0004                      ?___altoft 00A8  
                    ?___ftpack 00A0             SCANENCODER1@result 00A7             SCANENCODER2@result 00A6  
                    ?___lwtoft 00A8                     ??_PWM_init 00A0             __size_of_uart_init 0013  
                  ?_Update_PWM 00D3                     _creepspeed 022C              __end_of_enc1_port 1B66  
            __end_of_enc2_port 1B07                     _closeloopf 013F                     _displayonf 01ED  
                   _avgpperiod 0164                        _Delayms 1967                 ??_ISR_Function 004B  
                      _Display 0556           __size_of_send_status 0015                     _cyclestrtf 0144  
                      _cEditfg 0139                    _Timer0_init 18B1                   ?_system_init 0070  
                   _pidParams2 2796                        ___aldiv 1E70                __size_of___ftge 003C  
__size_of_detect_display_error 00AE                        _cTestfg 013C                   ??i1___ftpack 0075  
                      ___ftadd 0839                        ___ftdiv 10C8                        ___ftneg 187C  
              __size_of___wmul 001E                        ___ftmul 12D3                        ___fttol 1F79  
                      ___lwdiv 0802                        ___lwmod 19B8                   ??i1___lwtoft 007B  
                   ??___altoft 00AC                     _read_enc1f 0159                     ??___ftpack 00A5  
                      _delinch 01B2                        _gapfreq 023A                        __ptext1 18E6  
                      __ptext2 1A54                        __ptext3 188F                        __ptext4 190E  
                      __ptext5 1885                        __ptext6 1938                        __ptext7 0699  
                      __ptext8 1C8B                        __ptext9 0003                     _maxfmspeed 01E7  
    disp_hex_window11@hex_data 00A0                     ??___lwtoft 00AB                        _diswin1 01DA  
                      _inchcnt 006D                     _parclength 025F                      _T2CONbits 001C  
                      _rec_arr 02A0                        _plus111 0152               ___aldiv@dividend 00A4  
                      _plus222 0153                        _onesecf 0062                     _minfmspeed 01E9  
                      _pperiod 01BC                        _prevkey 016E                        clrloop0 18A6  
         end_of_initialization 0552      disp_hex_window22@hex_data 00A0                     _minuspara1 0150  
                   _minuspara2 0061             __end_ofi1___ftpack 1BC6                        init_ram 1899  
                      initloop 189A             __end_ofi1___lwtoft 18E6                     _kpressread 0149  
            Update_PWM@Dutycnt 00D9              __end_of_uart_init 18F9               _disp_hex_window1 1C27  
             _disp_hex_window2 1C8B         _Adaptive_base_pid$1781 00E4         _Adaptive_base_pid$1782 00E7  
       _Adaptive_base_pid$1783 00EA            __size_of_Update_PWM 0031          i1Update_PWM@setwsduty 0070  
                 _crater_speed 005C                      _RCSTAbits 019D               ___aldiv@quotient 00AB  
                 __pstringtext 2000                     _setcurrent 012E                      _PORTAbits 000C  
                  _Total_Count 01AC                      _PORTCbits 000E                     _pluscount1 0154  
                   _pluscount2 0155               __CFG_FOSC$INTOSC 0000                     _setvoltage 0058  
                    _TRISAbits 008C                      _TRISCbits 008E                  _cWf2t4tmodefg 013D  
                    i1___aldiv 1DEE                      i1___ftadd 1387                      i1___ftdiv 101F  
                    i1___ftmul 121F                      i1___fttol 1EF2                     _softstartf 01D5  
        __size_of_SCANENCODER1 007F          __size_of_SCANENCODER2 007E                    _CCP1CONbits 0293  
                  ___ftdiv@exp 00D3                     _statusptr1 0130                    _CCP2CONbits 029A  
                    _TXSTAbits 019E                     _pstowfstru 0244                  ?i1_Update_PWM 0070  
              _newsetwirespeed 006A                    ___ftmul@exp 00BF             enc1_port@portvalue 00A4  
           __end_of_Displayarr 206E                 __end_of___ftge 1A54                 __end_of___wmul 101F  
                  _BAUDCTLbits 019F                  ?_portpin_init 0070           __end_of_ISR_Function 04D1  
                 _SCANENCODER1 1D6F                   _SCANENCODER2 1CF1            start_initialization 04D3  
            __size_of_PWM_init 0019                     ?i1___aldiv 0070                     ?i1___ftadd 0030  
                   ?i1___ftdiv 0020                     ?i1___ftmul 0020                     ?i1___fttol 003D  
                ?_transmittops 0070               _comm_error_count 0140                      _Send_Byte 1885  
               ??i1_Update_PWM 0072                   _fixintervalf 01D3                  _rel_wirespeed 01C8  
         __end_of_lookup_table 2058                       ??___ftge 00B6                      _iGasDbCnt 01B6  
                     ??___wmul 00A4                    __pdataBANK0 006F                    __pdataBANK1 00EF  
                  __pdataBANK2 016C                    __pdataBANK3 01DA                    __pdataBANK4 025B  
         __size_of_system_init 000A                 ??_portpin_init 00A0             i1___aldiv@dividend 0074  
              Update_PWM@Temp1 00D7                      _Tsampling 01E2                _scaled_baseval2 012C  
            __size_of___altoft 003D                   Delayms@delay 00A0              __size_of___ftpack 0061  
                 ??_Update_PWM 00D5                    __pbssBIGRAM 2796                      ___latbits 0003  
      key_application@keypress 00DD              __size_of___lwtoft 0015                  __pcstackBANK0 0020  
                __pcstackBANK1 00A0       __size_of_key_application 0122                 ??_transmittops 00A1  
                    _enc1_port 1B07                       ?_Delayms 00A0                      _enc2_port 1AAA  
           i1___aldiv@quotient 0022                     ?_Send_Byte 0070                       ?_Display 0070  
             ___lwdiv@dividend 00A2                   ?_Timer0_init 0070             __end_of_Update_PWM 1A18  
                     ?___aldiv 00A0                      _disp1term 0230                      _disp2term 0232  
                    _disp3term 0234                      _disp4term 0236                       ?___ftadd 00A8  
                     ?___ftdiv 00C5               _prevsetwirespeed 01C2                       ?___ftneg 00A0  
                     ?___ftmul 00B5                       ?___fttol 00C5                       ?___lwdiv 00A0  
                     ?___lwmod 00A0                      __pswtext1 1800                      _mili1_100 014A  
                    _mili2_100 014B                   _cGasRlyClrfg 013A                      _count_1ms 01B0  
                    _count_2ms 0142       __end_of_disp_hex_window1 1C8B       __end_of_disp_hex_window2 1CF1  
                    _count_pid 01CF                      _inchkeyon 01D4                    ??i1___aldiv 0078  
 __end_of_detect_display_error 121F                    ??i1___ftadd 0036                    ??i1___ftdiv 0026  
                 _integral_old 01A3                   _integral_new 0123                    ??i1___ftmul 0026  
                  ??i1___fttol 0041               ___lwdiv@quotient 00A5                   _scalefactor2 01EB  
                    _error_old 01A0                      _error_new 0120                  ??_send_status 00A1  
                    _recchksum 015A                     ?_enc1_port 0070                ___aldiv@divisor 00A0  
                   ?_enc2_port 0070                ___aldiv@counter 00A9                 ___wmul@product 00A4  
                     _LATAbits 010C                       _LATBbits 010D                       _LATCbits 010E  
                    _minoutmax 0227                      clear_ram0 18A5                      _recstatus 01C6  
                     _PIE1bits 0091                    _creep_speed 0143                       _PIE2bits 0092  
                    _prevTORCH 016D                       _PIR1bits 0011                       _PIR2bits 0012  
              _universal_error 0162                    _closeloop1f 01CE                      _uart_init 18E6  
        __size_of_ISR_Function 04CD                      _pluspara1 0156                      _pluspara2 0157  
                    _togglepin 01EE              ___wmul@multiplier 00A0                       _PWM_init 194E  
                  _dispupdatef 006F                      _startptr1 0065                      _psstatusu 006E  
         __end_ofi1_Update_PWM 19B8                      _wfstatusu 016B                    _mahesh_test 025D  
                _cRelSpeedSign 013B                    _count_1msec 0141           __end_of_portpin_init 194E  
                     _Fltpfreq 0126                    ??_Send_Byte 00A0               __size_of_Delayms 0028  
                 _ISR_Function 0004               __size_of_Display 0143              ??_key_application 00DB  
          __end_of_send_status 1923                    _firstpulse1 0147                    _firstpulse2 0148  
                 _secondpulse1 015B                   _secondpulse2 015C                     ?_uart_init 0070  
             __size_of___aldiv 0082               __size_of___ftadd 00F6               __size_of___ftdiv 00A9  
             __size_of___ftneg 0009                       ___altoft 07BB               __size_of___ftmul 00B4  
             __size_of___fttol 0087               __size_of___lwdiv 0037               __size_of___lwmod 002F  
         __end_of_transmittops 1AAA                       ___ftpack 1BC6                       ___lwtoft 18F9  
          i1Update_PWM@Dutycnt 0076                   _send_statusf 015D                    _error_code1 01D1  
                  _error_code2 01D2                       _delinch1 01B4                   _lookup_table 2000  
              ___lwdiv@divisor 00A0                ___lwdiv@counter 00A7                       __ptext10 0002  
                     __ptext11 1C27                       __ptext20 1D6F                       __ptext12 19B8  
                     __ptext21 1B07                       __ptext13 0802                       __ptext30 10C8  
                     __ptext22 194E                       __ptext14 1171                       __ptext31 0839  
                     __ptext23 1967                       __ptext15 18C2                       __ptext40 101F  
                     __ptext32 07BB                       __ptext24 147D                       __ptext16 18F9  
                     __ptext41 1387                       __ptext33 1BC6                       __ptext25 1001  
                     __ptext17 18B1                       __ptext42 1B66                       __ptext34 1E70  
                     __ptext26 1F79                       __ptext18 1CF1                       __ptext43 1DEE  
                     __ptext35 19E7                       __ptext27 187C                       __ptext19 1AAA  
                     __ptext44 198F                       __ptext28 12D3                       __ptext45 0556  
                     __ptext37 18D3                       __ptext29 1A18                       __ptext38 1EF2  
                     __ptext39 121F                       _enccount 0145                       _commandu 016A  
           Send_Byte@transbyte 00A0                    ??_enc1_port 00A0                    ??_enc2_port 00A0  
                __size_of_main 06D1                       _minus111 014C                       _minus222 014D  
                     _setpfreq 01CA                  ?_capture_init 0070                       _weldmode 0067  
         _detect_display_error 1171           __size_of_Timer0_init 0011                       _torchonf 01D6  
                 _prevFltpfreq 0242                    _OSCTUNEbits 0098                     _INTCONbits 000B  
                  _PID_sParams 0320                    _minuscount1 014E                    _minuscount2 014F  
                  _recpsstatus 01C4                 _prevsetcurrent 01BE                    pic14e$flags 007E  
                   Delayms@xxx 00A2                     Delayms@yyy 00A4                       intlevel1 0000  
                  _send_status 190E               ___lwmod@dividend 00A2                 _prevsetvoltage 01C0  
            _disp_hex_window11 0002              _disp_hex_window22 0003              __CFG_CLKOUTEN$OFF 0000  
           ?_disp_hex_window11 00A0             ?_disp_hex_window22 00A0                     _OSCCONbits 0099  
                  _openloopcnt 0240                  ??_system_init 00A0                 ??_capture_init 00A0  
        ?_detect_display_error 0070                    ??_uart_init 00A0            ??_disp_hex_window11 00A2  
          ??_disp_hex_window22 00A2          __size_ofi1_Update_PWM 0029              _Adaptive_base_pid 147D  
                _disparclength 0238                ___lwmod@divisor 00A0             ?_Adaptive_base_pid 0070  
              ___lwmod@counter 00A5              ?_disp_hex_window1 00A8              ?_disp_hex_window2 00A8  
                 ___aldiv@sign 00AA          __size_of_portpin_init 0016             ??_disp_hex_window1 00AA  
           ??_disp_hex_window2 00AA                   _Total_Period 0220                   _setwirespeed 005A  
          ??_Adaptive_base_pid 00DB      __end_of_disp_hex_window11 0003      __end_of_disp_hex_window22 0004  
                 i1_Update_PWM 198F          __size_of_transmittops 0056  
