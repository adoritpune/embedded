CCS PCM C Compiler, Version 4.005, 35007               08-Feb-23 17:56

               Filename: D:\Rahul -\Thyroluxe\Throluxe DPM PA79-557-B_R2 DT06.02.23 (400Amp)\PA79-557-B-REV2.lst

               ROM used: 5249 words (64%)
                         Largest free fragment is 2048
               RAM used: 114 (42%) at main() level
                         138 (51%) worst case
               Stack:    4 worst case (2 in main + 2 for interrupts)

*
0000:  MOVLW  10
0001:  MOVWF  0A
0002:  GOTO   3B5
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.0
001C:  GOTO   01F
001D:  BTFSC  0C.0
001E:  GOTO   032
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   27,W
002A:  MOVWF  7B
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   08D
....................    /* 
.................... * File:  PA79-557-B-REV0.c 
.................... * Author: PT03 
.................... * 
.................... * 
.................... * ********************* # MODIFICATION DETAILS # ******************************* 
.................... *   Date     Rev.No      Done By         Description 
.................... * 14-08-14   REV 0.0       PPT         DPM shows Actual current,Voltage & Ref current 
.................... *                                      ARC ON TIME & RESET, ESD ON/OFF 
.................... * 16-10-14   REV 0.0       PPT         Added ERROR 04 for NO OCV 
.................... * 03-02-22   REV 2.0                  Display shows  Set and Actual Current 
.................... ******************************************************************************** 
.................... */ 
....................  
.................... #include "curandref.h" 
.................... #include <16F886.h> 
.................... //////// Standard Header file for the PIC16F886 device //////////////// 
.................... #device PIC16F886 
.................... #list 
....................  
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz) 
.................... #FUSES NOMCLR                   //Master Clear pin enabled 
.................... #FUSES NOCPD                    //No EE protection 
.................... //#FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES IESO                     //Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES LVP                      //Low Voltage Programming on B3(PIC16) or B5(PIC18) 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... //#FUSES NIWRTC 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES INTRC 
.................... #use delay(clock=8000000) 
.................... //#use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
....................  
.................... //#include "D:\PRIYANKA\PROJECT\DPM\current&ref\DPM.h" 
.................... #include "controller.c" 
.................... //------------------------------------------------------------------------------ 
.................... #byte MCU_STATUS = 0x003 
.................... #bit    MCU_C = MCU_STATUS.0 
.................... #bit    MCU_DC = MCU_STATUS.1 
.................... #bit    MCU_Z = MCU_STATUS.2 
.................... #bit    MCU_PD = MCU_STATUS.3 
.................... #bit    MCU_TO = MCU_STATUS.4 
.................... #bit    MCU_RP0 = MCU_STATUS.5 
.................... #bit    MCU_RP1 = MCU_STATUS.6 
.................... #bit    MCU_IRP = MCU_STATUS.7 
.................... #byte MCU_PORTA = 0x005 
.................... #byte MCU_PORTB = 0x006 
.................... #byte MCU_PORTC = 0x007 
.................... #byte MCU_PORTD = 0x008 
.................... #byte MCU_PORTE = 0x009 
.................... #bit    MCU_RE0 = MCU_PORTE.0 
.................... #bit    MCU_RE1 = MCU_PORTE.1 
.................... #bit    MCU_RE2 = MCU_PORTE.2 
.................... #byte MCU_INTCON = 0x00B 
.................... #bit    MCU_RBIF = MCU_INTCON.0 
.................... #bit    MCU_INTF = MCU_INTCON.1 
.................... #bit    MCU_T0IF = MCU_INTCON.2 
.................... #bit    MCU_RBIE = MCU_INTCON.3 
.................... #bit    MCU_INTE = MCU_INTCON.4 
.................... #bit    MCU_T0IE = MCU_INTCON.5 
.................... #bit    MCU_PEIE = MCU_INTCON.6 
.................... #bit    MCU_GIE = MCU_INTCON.7 
.................... #byte MCU_PIR1 = 0x00C 
.................... #bit    MCU_TMR1IF = MCU_PIR1.0 
.................... #bit    MCU_TMR2IF = MCU_PIR1.1 
.................... #bit    MCU_CCP1IF = MCU_PIR1.2 
.................... #bit    MCU_SSPIF = MCU_PIR1.3 
.................... #bit    MCU_TXIF = MCU_PIR1.4 
.................... #bit    MCU_RCIF = MCU_PIR1.5 
.................... #bit    MCU_ADIF = MCU_PIR1.6 
.................... #bit    MCU_PSPIF = MCU_PIR1.7 
.................... #byte MCU_OPTION_REG = 0x181 
.................... #bit    MCU_PS0 = MCU_OPTION_REG.0 
.................... #bit    MCU_PS1 = MCU_OPTION_REG.1 
.................... #bit    MCU_PS2 = MCU_OPTION_REG.2 
.................... #bit    MCU_PSA = MCU_OPTION_REG.3 
.................... #bit    MCU_T0SE = MCU_OPTION_REG.4 
.................... #bit    MCU_T0CS = MCU_OPTION_REG.5 
.................... #bit    MCU_INTEDG = MCU_OPTION_REG.6 
.................... #bit    MCU_RBPU = MCU_OPTION_REG.7 
.................... #byte MCU_ANSEL = 0x188 
.................... #bit    MCU_ANSELANSO = MCU_ANSEL.0 
.................... #bit    MCU_ANSELANS1 = MCU_ANSEL.1 
.................... #bit    MCU_ANSELANS2 = MCU_ANSEL.2 
.................... #bit    MCU_ANSELANS3 = MCU_ANSEL.3 
.................... #bit    MCU_ANSELANS4 = MCU_ANSEL.4 
.................... #bit    MCU_ANSELANS5 = MCU_ANSEL.5 
.................... #bit    MCU_ANSELANS6 = MCU_ANSEL.6 
.................... #bit    MCU_ANSELANS7 = MCU_ANSEL.7 
.................... #byte MCU_ANSELH = 0x189 
.................... #bit    MCU_ANSELHANS8 = MCU_ANSELH.0 
.................... #bit    MCU_ANSELHANS9 = MCU_ANSELH.1 
.................... #bit    MCU_ANSELHANS10 = MCU_ANSELH.2 
.................... #bit    MCU_ANSELHANS11 = MCU_ANSELH.3 
.................... #byte MCU_ADCON0 = 0x01F 
.................... #bit    MCU_ADON = MCU_ADCON0.0 
.................... //#bit    MCU_GO/DONE = MCU_ADCON0.1 
.................... #bit    MCU_CHS0 = MCU_ADCON0.2 
.................... #bit    MCU_CHS1 = MCU_ADCON0.3 
.................... #bit    MCU_CHS2 = MCU_ADCON0.4 
.................... #bit    MCU_CHS3 = MCU_ADCON0.5 
.................... #byte MCU_OSCCON = 0x08F 
.................... #byte MCU_OSCTUNE= 0x090 
....................  
....................  
.................... #fuses HS,NOWDT,NOLVP,INTRC_IO,NOWDT,NOMCLR 
.................... #use delay(clock=8000000) 
*
02D9:  MOVLW  B1
02DA:  MOVWF  04
02DB:  BCF    03.7
02DC:  MOVF   00,W
02DD:  BTFSC  03.2
02DE:  GOTO   2EC
02DF:  MOVLW  02
02E0:  MOVWF  78
02E1:  CLRF   77
02E2:  DECFSZ 77,F
02E3:  GOTO   2E2
02E4:  DECFSZ 78,F
02E5:  GOTO   2E1
02E6:  MOVLW  97
02E7:  MOVWF  77
02E8:  DECFSZ 77,F
02E9:  GOTO   2E8
02EA:  DECFSZ 00,F
02EB:  GOTO   2DF
02EC:  RETLW  00
....................  
....................  
.................... #include "variable.c" 
.................... #define disp1      PIN_B0 
.................... #define disp2      PIN_B1 
.................... #define disp3      PIN_B2 
.................... #define disp4      PIN_B3 
.................... #define disp5      PIN_A4 
.................... #define disp6      PIN_A7 
.................... #define disp7      PIN_A6 
.................... #define disp8      PIN_B5 
....................  
.................... #define segmenta   PIN_c0 
.................... #define segmentb   PIN_c1 
.................... #define segmentc   PIN_c2 
.................... #define segmentd   PIN_c3 
.................... #define segmente   PIN_c4 
.................... #define segmentf   PIN_c5 
.................... #define segmentg   PIN_c6 
.................... #define segmentdp  PIN_c7 
....................  
.................... #define ARCONKEY    PIN_B7 
.................... #define ARCONRST    PIN_B6 
.................... #define ESDIN       PIN_B4 
.................... //#define sw1        PIN_A3 
.................... //#define sw2        PIN_A4 
.................... //#define sw3        PIN_A5 
.................... #define TIGSW      PIN_B5 
.................... //#define offset     PIN_B4 
....................  
.................... #define adcavg      256   // 256 
.................... #define leftshift   8 
.................... #define adcavg1     64 
.................... #define leftshift1   6 //8 
....................  
.................... //--------------------------------------------------------------------- 
.................... unsigned char digitcnt=0,hexvalue=0,readadcf=0,jj=0,setdp1=0,setdp=0;//mma=0,hibyte=0,lowbyte=0; //,pinout=0,,readswitch1=0 
*
13C1:  CLRF   28
13C2:  CLRF   29
13C3:  CLRF   2A
13C4:  CLRF   2B
13C5:  CLRF   2C
13C6:  CLRF   2D
.................... static unsigned char digit[8],offsetokf=0,model=0,range=0,weldon=0;//,band=0; 
13C7:  CLRF   2E
13C8:  CLRF   2F
13C9:  CLRF   30
13CA:  CLRF   31
13CB:  CLRF   32
13CC:  CLRF   33
13CD:  CLRF   34
13CE:  CLRF   35
13CF:  CLRF   36
13D0:  CLRF   37
13D1:  CLRF   38
13D2:  CLRF   39
.................... unsigned int32 current=0,value=0,voltage=0,cur=0,prevcur=0,curoffset=0,offcnt=0;//,offset2=0; 
13D3:  CLRF   3A
13D4:  CLRF   3B
13D5:  CLRF   3C
13D6:  CLRF   3D
13D7:  CLRF   3E
13D8:  CLRF   3F
13D9:  CLRF   40
13DA:  CLRF   41
13DB:  CLRF   42
13DC:  CLRF   43
13DD:  CLRF   44
13DE:  CLRF   45
13DF:  CLRF   46
13E0:  CLRF   47
13E1:  CLRF   48
13E2:  CLRF   49
13E3:  CLRF   4A
13E4:  CLRF   4B
13E5:  CLRF   4C
13E6:  CLRF   4D
13E7:  CLRF   4E
13E8:  CLRF   4F
13E9:  CLRF   50
13EA:  CLRF   51
13EB:  CLRF   52
13EC:  CLRF   53
13ED:  CLRF   54
13EE:  CLRF   55
.................... unsigned int32 calcur=0,maxadc=675,maxshunt=400,voltage1=0; 
13EF:  CLRF   56
13F0:  CLRF   57
13F1:  CLRF   58
13F2:  CLRF   59
13F3:  MOVLW  A3
13F4:  MOVWF  5A
13F5:  MOVLW  02
13F6:  MOVWF  5B
13F7:  CLRF   5C
13F8:  CLRF   5D
13F9:  MOVLW  90
13FA:  MOVWF  5E
13FB:  MOVLW  01
13FC:  MOVWF  5F
13FD:  CLRF   60
13FE:  CLRF   61
13FF:  CLRF   62
1400:  CLRF   63
1401:  CLRF   64
1402:  CLRF   65
.................... unsigned int16 vtg=0;//100;//7;//20;//123;//130;//123; //102; 
1403:  CLRF   66
1404:  CLRF   67
.................... unsigned int16 prevvtg=1000; 
1405:  MOVLW  E8
1406:  MOVWF  68
1407:  MOVLW  03
1408:  MOVWF  69
.................... unsigned char dispvalf=0,ucModelSel=0; 
1409:  CLRF   6A
140A:  CLRF   6B
.................... unsigned char  esdonf=0,setdp2=0,dispcnt=0; 
140B:  CLRF   6C
140C:  CLRF   6D
140D:  CLRF   6E
.................... unsigned int32 prevref=0, ref2=0; 
140E:  CLRF   6F
140F:  CLRF   70
1410:  CLRF   71
1411:  CLRF   72
1412:  CLRF   73
1413:  CLRF   74
1414:  CLRF   75
1415:  CLRF   76
....................  
.................... //unsigned int16 i=0,num=1900, 
.................... //------------------------------------------------------------------------------ 
.................... //------------------------------------------------------------------------------ 
.................... void initialise(void); 
.................... void display(void); 
.................... void short_del(void); 
.................... void inttochar1(unsigned int16); 
.................... void adc_init(void); 
.................... void inttochar(unsigned int16); 
.................... void readadc(void); 
.................... void dispmodel(void); 
.................... unsigned char readswitch(); 
.................... unsigned char chk_band(unsigned int16,unsigned int16); 
.................... void write_memory(); 
.................... void read_memory(); 
.................... void debounce(); 
.................... void readmem(); 
.................... void SetCurrentCal_600(void); 
.................... void SetCurrentCal_400(void); 
....................  
.................... //void inttochar2(unsigned int16 hour,unsigned int16 min); 
.................... void inttochar2(unsigned char hour,unsigned char min); 
....................  
.................... //------------------------------------------------------------------------------ 
.................... const unsigned char lookup_table[40] = { 
....................                                        0x3F, //0    // Position - 0x00 
....................                                        0x06, //1    // Position - 0x01 
....................                                        0x5B, //2    // Position - 0x02 
....................                                        0x4F, //3    // Position - 0x03 
....................                                        0x66, //4    // Position - 0x04 
....................                                        0x6D, //5    // Position - 0x05 
....................                                        0x7D, //6    // Position - 0x06 
....................                                        0x07, //7    // Position - 0x07 
....................                                        0x7F, //8    // Position - 0x08 
....................                                        0x6F, //9    // Position - 0x09 
....................                                        0x80, //DP   // Position - 0x0A 
....................                                        0x77, //A    // Position - 0x0B 
....................                                        0x7C, //B    // Position - 0x0C 
....................                                        0x39, //c    // Position - 0x0D 
....................                                        0x5E, //D    // Position - 0x0E 
....................                                        0x79, //E    // Position - 0x0F 
....................                                        0x71, //F    // Position - 0x10 
....................                                        0x3D  //0x7D, //G    // Position - 0x11 
....................                                        0x76, //H    // Position - 0x12 
....................                                        0x06, //I    // Position - 0x13 
....................                                        0x1E, //J    // Position - 0x14 
....................                                        0x70, //K    // Position - 0x15 
....................                                        0x38, //L    // Position - 0x16 
....................                                        0x55, //M    // Position - 0x17 
....................                                        0x54, //N    // Position - 0x18 
....................                                        0x3F, //O    // Position - 0x19 
....................                                        0x73, //P    // Position - 0x1A 
....................                                        0x67, //Q    // Position - 0x1B 
....................                                        0x50, //R    // Position - 0x1C 
....................                                        0x6D, //S    // Position - 0x1D 
....................                                        0x78, //T    // Position - 0x1E 
....................                                        0x1C, //3E, //U    // Position - 0x1F 
....................                                        0x3E, //1C, //1C   //V    // Position - 0x20 
....................                                        0x6A, //7E,  //W    // Position - 0x21 
....................                                        0x68, //X    // Position - 0x22 
....................                                        0x6E, //Y    // Position - 0x23 
....................                                        0x89, //Z    // Position - 0x24 
....................                                        0x00, //all seg ON  // Position - 0x25 
....................                                        0x40, //-         // Position - 0x26 
....................                                        0xFF, //o         // Position - 0x27 
.................... }; 
....................  
.................... const unsigned char lookup_table1[40] = { 
....................                                        0x3F, //0    // Position - 0x00 
....................                                        0x06, //1    // Position - 0x01 
....................                                        0x9B, //2    // Position - 0x02 
....................                                        0x8F, //3    // Position - 0x03 
....................                                        0xA6, //4    // Position - 0x04 
....................                                        0xAD, //5    // Position - 0x05 
....................                                        0xBD, //6    // Position - 0x06 
....................                                        0x07, //7    // Position - 0x07 
....................                                        0xBF, //8    // Position - 0x08 
....................                                        0xAF, //9    // Position - 0x09 
....................                                        0x40, //DP   // Position - 0x0A 
....................                                        0xB7, //A    // Position - 0x0B 
....................                                        0xBC, //B    // Position - 0x0C 
....................                                        0x39, //c    // Position - 0x0D 
....................                                        0x9E, //D    // Position - 0x0E 
....................                                        0xB9, //E    // Position - 0x0F 
....................                                        0xB1, //F    // Position - 0x10 
....................                                        0x3D  //0x7D, //G    // Position - 0x11 
....................                                        0xB6, //H    // Position - 0x12 
....................                                        0x06, //I    // Position - 0x13 
....................                                        0x1E, //J    // Position - 0x14 
....................                                        0xB0, //K    // Position - 0x15 
....................                                        0x38, //L    // Position - 0x16 
....................                                        0x95, //M    // Position - 0x17 
....................                                        0x94, //N    // Position - 0x18 
....................                                        0x3F, //O    // Position - 0x19 
....................                                        0xB3, //P    // Position - 0x1A 
....................                                        0xA7, //Q    // Position - 0x1B 
....................                                        0x90, //R    // Position - 0x1C 
....................                                        0xAD, //S    // Position - 0x1D 
....................                                        0xB8, //T    // Position - 0x1E 
....................                                        0x1C, //3E, //U    // Position - 0x1F 
....................                                        0x3E, //1C, //1C   //V    // Position - 0x20 
....................                                        0xAA, //7E,  //W    // Position - 0x21 
....................                                        0xA8, //X    // Position - 0x22 
....................                                        0xAE, //Y    // Position - 0x23 
....................                                        0x49, //Z    // Position - 0x24 
....................                                        0x00, //all seg ON  // Position - 0x25 
....................                                        0x80, //-         // Position - 0x26 
....................                                        0xFF, //o         // Position - 0x27 
.................... }; 
....................  
....................  
.................... #include "interrupt.c" 
....................  
.................... /*#int_timer0 
.................... void timer0_isr(void) 
.................... { 
....................     static unsigned int count3=0; 
....................     clear_interrupt(INT_TIMER0); 
....................     set_timer0(0xFC40);              //sets timer to interrupt in 6ms 
....................     count3++; 
....................      if(count3==10) 
....................         { 
....................             count3=0; 
....................             readswitch1=1; 
....................         } 
.................... }*/ 
....................  
.................... #int_timer1 
.................... void timer1_isr(void) 
.................... { 
....................     static unsigned char count=0,count1=0; 
1416:  CLRF   7C
1417:  CLRF   7D
....................     clear_interrupt(INT_TIMER1); 
*
008D:  BCF    0C.0
....................     set_timer1(0xFC40);            //FC40 for 500usec at 8mhz 
008E:  MOVLW  FC
008F:  MOVWF  0F
0090:  MOVLW  40
0091:  MOVWF  0E
....................     count++; 
0092:  INCF   7C,F
....................     count1++; 
0093:  INCF   7D,F
....................  
....................  
....................  
....................    if(count>=5)  //10 
0094:  MOVF   7C,W
0095:  SUBLW  04
0096:  BTFSC  03.0
0097:  GOTO   22A
....................    { 
....................          count=0; 
0098:  CLRF   7C
....................          display(); 
....................    } 
....................    if(count1>=2) 
*
022A:  MOVF   7D,W
022B:  SUBLW  01
022C:  BTFSC  03.0
022D:  GOTO   231
....................    { 
....................       count1=0; 
022E:  CLRF   7D
....................       readadcf=1; 
022F:  MOVLW  01
0230:  MOVWF  2A
....................    } 
....................  
....................  
....................  
....................  
....................  
.................... } 
....................  
....................  
.................... #include "display.c" 
....................  
....................  
....................  
....................  
....................  
.................... //#use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7) 
....................  
....................  
0231:  BCF    0C.0
0232:  BCF    0A.3
0233:  BCF    0A.4
0234:  GOTO   01F
.................... void main() 
.................... { 
*
13B5:  CLRF   04
13B6:  BCF    03.7
13B7:  MOVLW  1F
13B8:  ANDWF  03,F
13B9:  BSF    03.5
13BA:  BCF    1F.4
13BB:  BCF    1F.5
13BC:  MOVLW  00
13BD:  MOVWF  1D
13BE:  MOVLW  07
13BF:  BCF    03.5
13C0:  MOVWF  1F
....................    #asm 
....................          CLRF  MCU_ANSEL ;      //0-i/o,1-analog 
*
142B:  BSF    03.6
142C:  CLRF   08
....................          CLRF  MCU_ANSELH ; 
142D:  CLRF   09
....................          ; 
....................          BCF   MCU_RP1; 
142E:  BCF    03.6
....................          BCF   MCU_RP0; 
142F:  BCF    03.5
....................          ; 
....................          BCF   MCU_RP1; 
1430:  BCF    03.6
....................          BSF   MCU_RP0; 
1431:  BSF    03.5
....................          MOVLW  0xff 
1432:  MOVLW  FF
....................          MOVWF  0X90 
1433:  BCF    03.6
1434:  MOVWF  10
....................          MOVLW  0x73 
1435:  MOVLW  73
....................          MOVWF  0X8F 
1436:  MOVWF  0F
....................          BCF   MCU_RP1; 
1437:  BCF    03.6
....................          BCF   MCU_RP0; 
1438:  BCF    03.5
....................     #endasm 
....................     initialise(); 
1439:  BCF    0A.4
143A:  BCF    03.5
143B:  GOTO   235
143C:  BSF    0A.4
....................     adc_init(); 
143D:  BCF    0A.4
143E:  GOTO   262
143F:  BSF    0A.4
....................   // current=000; 
....................   // inttochar1(current); 
....................    //set_tris_a(0x38); 
....................  
....................    model= readswitch(); 
1440:  BCF    0A.4
1441:  GOTO   272
1442:  BSF    0A.4
1443:  MOVF   78,W
1444:  MOVWF  37
....................    set_tris_a(0x2F); //0x38 
1445:  MOVLW  2F
1446:  BSF    03.5
1447:  MOVWF  05
....................    set_tris_b(0xD0);//(0x10); 
1448:  MOVLW  D0
1449:  MOVWF  06
....................    set_tris_c(0x00); 
*
1418:  MOVLW  FF
1419:  MOVWF  7E
*
144A:  MOVLW  00
144B:  MOVWF  07
144C:  MOVWF  7E
....................  
....................    delay_ms(2); 
144D:  MOVLW  02
144E:  MOVWF  31
144F:  BCF    0A.4
1450:  BCF    03.5
1451:  CALL   2D9
1452:  BSF    0A.4
....................    digit[0]=0x27; //'D'- 0x30;  //0X40;   //'D'- 0x30;; 
1453:  MOVLW  27
1454:  MOVWF  2E
....................    digit[1]=0X27; 
1455:  MOVWF  2F
....................    digit[2]=0X27; 
1456:  MOVWF  30
....................    digit[3]=0x27; //'R'- 0x30; 
1457:  MOVWF  31
....................    digit[4]=0X27; 
1458:  MOVWF  32
....................    digit[5]=0X27; 
1459:  MOVWF  33
....................    digit[6]=0X27; 
145A:  MOVWF  34
....................    digit[7]=0X27; 
145B:  MOVWF  35
....................    //setdp=1; 
....................    delay_ms(500); 
145C:  MOVLW  02
145D:  BSF    03.5
145E:  MOVWF  30
145F:  MOVLW  FA
1460:  MOVWF  31
1461:  BCF    0A.4
1462:  BCF    03.5
1463:  CALL   2D9
1464:  BSF    0A.4
1465:  BSF    03.5
1466:  DECFSZ 30,F
1467:  GOTO   45F
....................  
....................    digit[0]=0x0E; //'D'- 0x30; 
1468:  MOVLW  0E
1469:  BCF    03.5
146A:  MOVWF  2E
....................    digit[1]=0x19; //'O'- 0x30; 
146B:  MOVLW  19
146C:  MOVWF  2F
....................    digit[2]=0x1C; //'R'- 0x30; 
146D:  MOVLW  1C
146E:  MOVWF  30
....................    digit[3]=0X0B; //'A'- 0x30; 
146F:  MOVLW  0B
1470:  MOVWF  31
....................    dispmodel(); 
1471:  BCF    0A.4
1472:  GOTO   2ED
1473:  BSF    0A.4
....................    setdp=0; 
1474:  CLRF   2D
....................    delay_ms(500); 
1475:  MOVLW  02
1476:  BSF    03.5
1477:  MOVWF  30
1478:  MOVLW  FA
1479:  MOVWF  31
147A:  BCF    0A.4
147B:  BCF    03.5
147C:  CALL   2D9
147D:  BSF    0A.4
147E:  BSF    03.5
147F:  DECFSZ 30,F
1480:  GOTO   478
....................    delay_ms(500); 
1481:  MOVLW  02
1482:  MOVWF  30
1483:  MOVLW  FA
1484:  MOVWF  31
1485:  BCF    0A.4
1486:  BCF    03.5
1487:  CALL   2D9
1488:  BSF    0A.4
1489:  BSF    03.5
148A:  DECFSZ 30,F
148B:  GOTO   483
....................  
....................    digit[0]=0x0F; //'D'- 0x30;  //0X40;   //'D'- 0x30;;    0F 
148C:  MOVLW  0F
148D:  BCF    03.5
148E:  MOVWF  2E
....................    digit[1]=0X20; 
148F:  MOVLW  20
1490:  MOVWF  2F
....................    digit[2]=0x02;  //19 
1491:  MOVLW  02
1492:  MOVWF  30
....................    digit[3]=0x1C; //'R'- 0x30; 
1493:  MOVLW  1C
1494:  MOVWF  31
....................  
....................    digit[4]=0X00; 
1495:  CLRF   32
....................    digit[5]=0X00; 
1496:  CLRF   33
....................    digit[6]=0X00; 
1497:  CLRF   34
....................    digit[7]=0X00; 
1498:  CLRF   35
....................    setdp=1; 
1499:  MOVLW  01
149A:  MOVWF  2D
....................    delay_ms(1000); 
149B:  MOVLW  04
149C:  BSF    03.5
149D:  MOVWF  30
149E:  MOVLW  FA
149F:  MOVWF  31
14A0:  BCF    0A.4
14A1:  BCF    03.5
14A2:  CALL   2D9
14A3:  BSF    0A.4
14A4:  BSF    03.5
14A5:  DECFSZ 30,F
14A6:  GOTO   49E
....................    esdonf=0; 
14A7:  BCF    03.5
14A8:  CLRF   6C
....................    //mma=1; 
....................    ref2=10; 
14A9:  CLRF   76
14AA:  CLRF   75
14AB:  CLRF   74
14AC:  MOVLW  0A
14AD:  MOVWF  73
....................  
....................    while(1) 
....................    { 
....................  
....................          if(readadcf==1) 
14AE:  DECFSZ 2A,W
14AF:  GOTO   4B6
....................          { 
....................             readadc(); 
14B0:  BCF    0A.4
14B1:  BSF    0A.3
14B2:  GOTO   000
14B3:  BSF    0A.4
14B4:  BCF    0A.3
....................             readadcf=0; 
14B5:  CLRF   2A
....................          } 
....................  
....................          if(weldon==1) 
14B6:  DECFSZ 39,W
14B7:  GOTO   4E4
....................          { 
....................             if((prevcur!=current))// && offsetokf==1) 
14B8:  MOVF   3A,W
14B9:  SUBWF  4A,W
14BA:  BTFSS  03.2
14BB:  GOTO   4C8
14BC:  MOVF   3B,W
14BD:  SUBWF  4B,W
14BE:  BTFSS  03.2
14BF:  GOTO   4C8
14C0:  MOVF   3C,W
14C1:  SUBWF  4C,W
14C2:  BTFSS  03.2
14C3:  GOTO   4C8
14C4:  MOVF   3D,W
14C5:  SUBWF  4D,W
14C6:  BTFSC  03.2
14C7:  GOTO   4DF
....................             { 
....................                inttochar1(current); 
14C8:  MOVF   3B,W
14C9:  BSF    03.5
14CA:  MOVWF  31
14CB:  BCF    03.5
14CC:  MOVF   3A,W
14CD:  BSF    03.5
14CE:  MOVWF  30
14CF:  MOVF   31,W
14D0:  MOVWF  33
14D1:  MOVF   30,W
14D2:  MOVWF  32
14D3:  BCF    0A.4
14D4:  BCF    03.5
14D5:  CALL   62E
14D6:  BSF    0A.4
....................                prevcur=current; 
14D7:  MOVF   3D,W
14D8:  MOVWF  4D
14D9:  MOVF   3C,W
14DA:  MOVWF  4C
14DB:  MOVF   3B,W
14DC:  MOVWF  4B
14DD:  MOVF   3A,W
14DE:  MOVWF  4A
....................             } 
....................             prevref=0; 
14DF:  CLRF   72
14E0:  CLRF   71
14E1:  CLRF   70
14E2:  CLRF   6F
....................          } 
....................  
....................          else if(weldon==0) 
14E3:  GOTO   518
14E4:  MOVF   39,F
14E5:  BTFSS  03.2
14E6:  GOTO   518
....................          { 
....................             if((prevref!=ref2)) 
14E7:  MOVF   73,W
14E8:  SUBWF  6F,W
14E9:  BTFSS  03.2
14EA:  GOTO   4F7
14EB:  MOVF   74,W
14EC:  SUBWF  70,W
14ED:  BTFSS  03.2
14EE:  GOTO   4F7
14EF:  MOVF   75,W
14F0:  SUBWF  71,W
14F1:  BTFSS  03.2
14F2:  GOTO   4F7
14F3:  MOVF   76,W
14F4:  SUBWF  72,W
14F5:  BTFSC  03.2
14F6:  GOTO   518
....................             { 
....................                if(ucModelSel==1) 
14F7:  DECFSZ 6B,W
14F8:  GOTO   4FE
....................                   SetCurrentCal_600(); 
14F9:  BCF    0A.4
14FA:  BSF    0A.3
14FB:  GOTO   394
14FC:  BSF    0A.4
14FD:  BCF    0A.3
....................                else if(ucModelSel==2) 
14FE:  MOVF   6B,W
14FF:  SUBLW  02
1500:  BTFSS  03.2
1501:  GOTO   503
....................                   SetCurrentCal_400(); 
1502:  GOTO   000
....................  
....................                inttochar1(ref2); 
1503:  MOVF   74,W
1504:  BSF    03.5
1505:  MOVWF  31
1506:  MOVF   73,W
1507:  MOVWF  30
1508:  MOVF   31,W
1509:  MOVWF  33
150A:  MOVF   30,W
150B:  MOVWF  32
150C:  BCF    0A.4
150D:  BCF    03.5
150E:  CALL   62E
150F:  BSF    0A.4
....................                prevref=ref2; 
1510:  MOVF   76,W
1511:  MOVWF  72
1512:  MOVF   75,W
1513:  MOVWF  71
1514:  MOVF   74,W
1515:  MOVWF  70
1516:  MOVF   73,W
1517:  MOVWF  6F
....................             } 
....................          } 
....................  
....................          if((prevvtg!=voltage)) 
1518:  MOVF   42,W
1519:  SUBWF  68,W
151A:  BTFSS  03.2
151B:  GOTO   526
151C:  MOVF   43,W
151D:  SUBWF  69,W
151E:  BTFSS  03.2
151F:  GOTO   526
1520:  MOVF   44,F
1521:  BTFSS  03.2
1522:  GOTO   526
1523:  MOVF   45,F
1524:  BTFSC  03.2
1525:  GOTO   597
....................          { 
....................             if(voltage<=9999) 
1526:  MOVF   45,F
1527:  BTFSS  03.2
1528:  GOTO   548
1529:  MOVF   44,F
152A:  BTFSS  03.2
152B:  GOTO   548
152C:  MOVF   43,W
152D:  SUBLW  27
152E:  BTFSS  03.0
152F:  GOTO   548
1530:  BTFSS  03.2
1531:  GOTO   536
1532:  MOVF   42,W
1533:  SUBLW  0F
1534:  BTFSS  03.0
1535:  GOTO   548
....................             { 
....................                inttochar(voltage); 
1536:  MOVF   43,W
1537:  BSF    03.5
1538:  MOVWF  31
1539:  BCF    03.5
153A:  MOVF   42,W
153B:  BSF    03.5
153C:  MOVWF  30
153D:  MOVF   31,W
153E:  MOVWF  33
153F:  MOVF   30,W
1540:  MOVWF  32
1541:  BCF    0A.4
1542:  BCF    03.5
1543:  CALL   6C3
1544:  BSF    0A.4
....................                setdp=1; 
1545:  MOVLW  01
1546:  MOVWF  2D
....................             } 
....................             else 
1547:  GOTO   593
....................             { 
....................                voltage1=(voltage/100.0); 
1548:  MOVF   45,W
1549:  BSF    03.5
154A:  MOVWF  37
154B:  BCF    03.5
154C:  MOVF   44,W
154D:  BSF    03.5
154E:  MOVWF  36
154F:  BCF    03.5
1550:  MOVF   43,W
1551:  BSF    03.5
1552:  MOVWF  35
1553:  BCF    03.5
1554:  MOVF   42,W
1555:  BSF    03.5
1556:  MOVWF  34
1557:  BCF    0A.4
1558:  BCF    03.5
1559:  CALL   422
155A:  BSF    0A.4
155B:  MOVF   7A,W
155C:  BSF    03.5
155D:  MOVWF  3F
155E:  MOVF   79,W
155F:  MOVWF  3E
1560:  MOVF   78,W
1561:  MOVWF  3D
1562:  MOVF   77,W
1563:  MOVWF  3C
1564:  CLRF   43
1565:  CLRF   42
1566:  MOVLW  48
1567:  MOVWF  41
1568:  MOVLW  85
1569:  MOVWF  40
156A:  BCF    0A.4
156B:  BCF    03.5
156C:  CALL   51A
156D:  BSF    0A.4
156E:  MOVF   7A,W
156F:  BSF    03.5
1570:  MOVWF  3F
1571:  MOVF   79,W
1572:  MOVWF  3E
1573:  MOVF   78,W
1574:  MOVWF  3D
1575:  MOVF   77,W
1576:  MOVWF  3C
1577:  BCF    0A.4
1578:  BCF    03.5
1579:  CALL   5E6
157A:  BSF    0A.4
157B:  MOVF   7A,W
157C:  MOVWF  65
157D:  MOVF   79,W
157E:  MOVWF  64
157F:  MOVF   78,W
1580:  MOVWF  63
1581:  MOVF   77,W
1582:  MOVWF  62
....................                inttochar(voltage1); 
1583:  MOVF   63,W
1584:  BSF    03.5
1585:  MOVWF  31
1586:  BCF    03.5
1587:  MOVF   62,W
1588:  BSF    03.5
1589:  MOVWF  30
158A:  MOVF   31,W
158B:  MOVWF  33
158C:  MOVF   30,W
158D:  MOVWF  32
158E:  BCF    0A.4
158F:  BCF    03.5
1590:  CALL   6C3
1591:  BSF    0A.4
....................                setdp=0; 
1592:  CLRF   2D
....................             } 
....................             prevvtg=voltage; 
1593:  MOVF   43,W
1594:  MOVWF  69
1595:  MOVF   42,W
1596:  MOVWF  68
....................          } 
....................  
....................          if(dispcnt==1) 
1597:  DECFSZ 6E,W
1598:  GOTO   59C
....................          { 
....................             dispcnt=0; 
1599:  CLRF   6E
....................             dispvalf=1; 
159A:  MOVLW  01
159B:  MOVWF  6A
....................          } 
....................       } 
159C:  GOTO   4AE
....................  
.................... }//main 
....................  
.................... void inttochar1(unsigned int16 parameter) 
.................... { 
159D:  SLEEP
....................    if(model=='G' || model=='H') 
*
062E:  MOVF   37,W
062F:  SUBLW  47
0630:  BTFSC  03.2
0631:  GOTO   636
0632:  MOVF   37,W
0633:  SUBLW  48
0634:  BTFSS  03.2
0635:  GOTO   689
....................    { 
....................       digit[2]=parameter % 10; 
0636:  BSF    03.5
0637:  MOVF   33,W
0638:  MOVWF  35
0639:  MOVF   32,W
063A:  MOVWF  34
063B:  CLRF   37
063C:  MOVLW  0A
063D:  MOVWF  36
063E:  BCF    03.5
063F:  CALL   607
0640:  MOVF   77,W
0641:  MOVWF  30
....................       parameter /= 10; 
0642:  BSF    03.5
0643:  MOVF   33,W
0644:  MOVWF  35
0645:  MOVF   32,W
0646:  MOVWF  34
0647:  CLRF   37
0648:  MOVLW  0A
0649:  MOVWF  36
064A:  BCF    03.5
064B:  CALL   607
064C:  MOVF   79,W
064D:  BSF    03.5
064E:  MOVWF  33
064F:  MOVF   78,W
0650:  MOVWF  32
....................       digit[1] = parameter % 10; 
0651:  MOVF   33,W
0652:  MOVWF  35
0653:  MOVF   32,W
0654:  MOVWF  34
0655:  CLRF   37
0656:  MOVLW  0A
0657:  MOVWF  36
0658:  BCF    03.5
0659:  CALL   607
065A:  MOVF   77,W
065B:  MOVWF  2F
....................       parameter /= 10; 
065C:  BSF    03.5
065D:  MOVF   33,W
065E:  MOVWF  35
065F:  MOVF   32,W
0660:  MOVWF  34
0661:  CLRF   37
0662:  MOVLW  0A
0663:  MOVWF  36
0664:  BCF    03.5
0665:  CALL   607
0666:  MOVF   79,W
0667:  BSF    03.5
0668:  MOVWF  33
0669:  MOVF   78,W
066A:  MOVWF  32
....................       digit[0] = parameter % 10; 
066B:  MOVF   33,W
066C:  MOVWF  35
066D:  MOVF   32,W
066E:  MOVWF  34
066F:  CLRF   37
0670:  MOVLW  0A
0671:  MOVWF  36
0672:  BCF    03.5
0673:  CALL   607
0674:  MOVF   77,W
0675:  MOVWF  2E
....................       parameter /= 10; 
0676:  BSF    03.5
0677:  MOVF   33,W
0678:  MOVWF  35
0679:  MOVF   32,W
067A:  MOVWF  34
067B:  CLRF   37
067C:  MOVLW  0A
067D:  MOVWF  36
067E:  BCF    03.5
067F:  CALL   607
0680:  MOVF   79,W
0681:  BSF    03.5
0682:  MOVWF  33
0683:  MOVF   78,W
0684:  MOVWF  32
....................       digit[3] = parameter; 
0685:  MOVF   32,W
0686:  BCF    03.5
0687:  MOVWF  31
....................    } 
....................    else 
0688:  GOTO   6C2
....................    { 
....................       digit[3]=0; 
0689:  CLRF   31
....................       digit[2] = parameter % 10; 
068A:  BSF    03.5
068B:  MOVF   33,W
068C:  MOVWF  35
068D:  MOVF   32,W
068E:  MOVWF  34
068F:  CLRF   37
0690:  MOVLW  0A
0691:  MOVWF  36
0692:  BCF    03.5
0693:  CALL   607
0694:  MOVF   77,W
0695:  MOVWF  30
....................       parameter /= 10; 
0696:  BSF    03.5
0697:  MOVF   33,W
0698:  MOVWF  35
0699:  MOVF   32,W
069A:  MOVWF  34
069B:  CLRF   37
069C:  MOVLW  0A
069D:  MOVWF  36
069E:  BCF    03.5
069F:  CALL   607
06A0:  MOVF   79,W
06A1:  BSF    03.5
06A2:  MOVWF  33
06A3:  MOVF   78,W
06A4:  MOVWF  32
....................       digit[1] = parameter % 10; 
06A5:  MOVF   33,W
06A6:  MOVWF  35
06A7:  MOVF   32,W
06A8:  MOVWF  34
06A9:  CLRF   37
06AA:  MOVLW  0A
06AB:  MOVWF  36
06AC:  BCF    03.5
06AD:  CALL   607
06AE:  MOVF   77,W
06AF:  MOVWF  2F
....................       parameter /= 10; 
06B0:  BSF    03.5
06B1:  MOVF   33,W
06B2:  MOVWF  35
06B3:  MOVF   32,W
06B4:  MOVWF  34
06B5:  CLRF   37
06B6:  MOVLW  0A
06B7:  MOVWF  36
06B8:  BCF    03.5
06B9:  CALL   607
06BA:  MOVF   79,W
06BB:  BSF    03.5
06BC:  MOVWF  33
06BD:  MOVF   78,W
06BE:  MOVWF  32
....................       digit[0] = parameter; 
06BF:  MOVF   32,W
06C0:  BCF    03.5
06C1:  MOVWF  2E
....................    } 
.................... } 
06C2:  RETLW  00
....................  
.................... void inttochar2(unsigned char hour,unsigned char min) 
.................... { 
....................       digit[7] = hour % 10; 
....................       hour /= 10;               //Hour 
....................       digit[6] = hour % 10; 
....................       digit[5] = min % 10; 
....................       min /= 10;               //min 
....................       digit[4] =  min % 10; 
.................... } 
.................... void inttochar(unsigned int16 parameter) 
.................... { 
....................       digit[7] = parameter % 10; 
06C3:  BSF    03.5
06C4:  MOVF   33,W
06C5:  MOVWF  35
06C6:  MOVF   32,W
06C7:  MOVWF  34
06C8:  CLRF   37
06C9:  MOVLW  0A
06CA:  MOVWF  36
06CB:  BCF    03.5
06CC:  CALL   607
06CD:  MOVF   77,W
06CE:  MOVWF  35
....................       parameter /= 10; 
06CF:  BSF    03.5
06D0:  MOVF   33,W
06D1:  MOVWF  35
06D2:  MOVF   32,W
06D3:  MOVWF  34
06D4:  CLRF   37
06D5:  MOVLW  0A
06D6:  MOVWF  36
06D7:  BCF    03.5
06D8:  CALL   607
06D9:  MOVF   79,W
06DA:  BSF    03.5
06DB:  MOVWF  33
06DC:  MOVF   78,W
06DD:  MOVWF  32
....................       digit[6] = parameter % 10; 
06DE:  MOVF   33,W
06DF:  MOVWF  35
06E0:  MOVF   32,W
06E1:  MOVWF  34
06E2:  CLRF   37
06E3:  MOVLW  0A
06E4:  MOVWF  36
06E5:  BCF    03.5
06E6:  CALL   607
06E7:  MOVF   77,W
06E8:  MOVWF  34
....................       parameter /= 10; 
06E9:  BSF    03.5
06EA:  MOVF   33,W
06EB:  MOVWF  35
06EC:  MOVF   32,W
06ED:  MOVWF  34
06EE:  CLRF   37
06EF:  MOVLW  0A
06F0:  MOVWF  36
06F1:  BCF    03.5
06F2:  CALL   607
06F3:  MOVF   79,W
06F4:  BSF    03.5
06F5:  MOVWF  33
06F6:  MOVF   78,W
06F7:  MOVWF  32
....................       digit[5] = parameter % 10; 
06F8:  MOVF   33,W
06F9:  MOVWF  35
06FA:  MOVF   32,W
06FB:  MOVWF  34
06FC:  CLRF   37
06FD:  MOVLW  0A
06FE:  MOVWF  36
06FF:  BCF    03.5
0700:  CALL   607
0701:  MOVF   77,W
0702:  MOVWF  33
....................       parameter /= 10; 
0703:  BSF    03.5
0704:  MOVF   33,W
0705:  MOVWF  35
0706:  MOVF   32,W
0707:  MOVWF  34
0708:  CLRF   37
0709:  MOVLW  0A
070A:  MOVWF  36
070B:  BCF    03.5
070C:  CALL   607
070D:  MOVF   79,W
070E:  BSF    03.5
070F:  MOVWF  33
0710:  MOVF   78,W
0711:  MOVWF  32
....................       digit[4] = parameter; 
0712:  MOVF   32,W
0713:  BCF    03.5
0714:  MOVWF  32
.................... } 
0715:  RETLW  00
....................  
.................... void short_del() 
.................... { 
....................   unsigned int16 i=0,j=0; 
....................   for(i=0;i<100;i++) 
....................   { 
....................      for(j=0;j<30;j++); 
....................   } 
.................... } 
....................  
.................... void initialise() 
.................... { 
....................          setup_adc_ports(NO_ANALOGS|VSS_VDD); 
*
0235:  BSF    03.5
0236:  BCF    1F.4
0237:  BCF    1F.5
0238:  MOVLW  00
0239:  MOVWF  1D
....................          setup_comparator(NC_NC_NC_NC); 
023A:  MOVLW  07
023B:  BCF    03.5
023C:  MOVWF  1F
023D:  BSF    03.5
023E:  MOVF   05,W
023F:  MOVLW  06
0240:  MOVWF  77
0241:  DECFSZ 77,F
0242:  GOTO   241
0243:  NOP
0244:  BCF    03.5
0245:  MOVF   1F,W
0246:  BCF    0D.5
....................          setup_adc(ADC_CLOCK_INTERNAL  ); 
0247:  BSF    1F.6
0248:  BSF    1F.7
0249:  BSF    03.5
024A:  BSF    1F.7
024B:  BCF    03.5
024C:  BSF    1F.0
....................          enable_interrupts(GLOBAL); 
024D:  MOVLW  C0
024E:  IORWF  0B,F
....................          enable_interrupts(INT_TIMER1); 
024F:  BSF    03.5
0250:  BSF    0C.0
....................          setup_timer_0(T1_DISABLED); 
0251:  MOVF   01,W
0252:  ANDLW  C0
0253:  MOVWF  01
....................          setup_timer_1(T1_DISABLED); 
0254:  BCF    03.5
0255:  CLRF   10
....................          setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
0256:  MOVLW  85
0257:  MOVWF  10
....................          disable_interrupts(INT_EXT); 
0258:  BCF    0B.4
....................          set_timer0(0x0f); 
0259:  MOVLW  0F
025A:  MOVWF  01
....................          set_timer1(0xFC40); 
025B:  MOVLW  FC
025C:  MOVWF  0F
025D:  MOVLW  40
025E:  MOVWF  0E
.................... } 
025F:  BCF    0A.3
0260:  BSF    0A.4
0261:  GOTO   43C (RETURN)
.................... //============================================================================== 
.................... void adc_init() 
.................... { 
....................    setup_adc_ports(sAN0|sAN1|VSS_VDD); 
0262:  BSF    03.5
0263:  BCF    1F.4
0264:  BCF    1F.5
0265:  MOVLW  00
0266:  IORLW  03
0267:  MOVWF  1D
....................      //setup_adc_ports(ALL_ANALOG); 
....................    setup_adc(ADC_CLOCK_INTERNAL ); 
0268:  BCF    03.5
0269:  BSF    1F.6
026A:  BSF    1F.7
026B:  BSF    03.5
026C:  BSF    1F.7
026D:  BCF    03.5
026E:  BSF    1F.0
....................    //set_adc_channel(0); 
.................... } 
026F:  BCF    0A.3
0270:  BSF    0A.4
0271:  GOTO   43F (RETURN)
.................... //------------------------------------------------------------------------------ 
....................  
.................... //------------------------------------------------------------------------------ 
.................... void display() 
.................... { 
....................    if(digitcnt==0) 
*
0099:  MOVF   28,F
009A:  BTFSS  03.2
009B:  GOTO   0BD
....................    { 
....................      OUTPUT_BIT(disp8,0); 
009C:  BCF    06.5
009D:  BSF    03.5
009E:  BCF    06.5
....................      //digit[0]=5; 
....................      hexvalue=lookup_table[digit[2]]; 
009F:  BCF    03.5
00A0:  MOVF   30,W
00A1:  CALL   035
00A2:  MOVWF  78
00A3:  MOVWF  29
....................      output_c(hexvalue); 
00A4:  MOVLW  00
00A5:  MOVWF  7E
00A6:  BSF    03.5
00A7:  CLRF   07
00A8:  BCF    03.5
00A9:  MOVF   29,W
00AA:  MOVWF  07
....................      //set_tris_b(0x01); 
....................      OUTPUT_BIT(disp1,1); 
00AB:  BSF    06.0
00AC:  BSF    03.5
00AD:  BCF    06.0
....................      OUTPUT_BIT(disp2,0); 
00AE:  BCF    03.5
00AF:  BCF    06.1
00B0:  BSF    03.5
00B1:  BCF    06.1
....................      OUTPUT_BIT(disp3,0); 
00B2:  BCF    03.5
00B3:  BCF    06.2
00B4:  BSF    03.5
00B5:  BCF    06.2
....................      OUTPUT_BIT(disp4,0); 
00B6:  BCF    03.5
00B7:  BCF    06.3
00B8:  BSF    03.5
00B9:  BCF    06.3
....................      digitcnt++; 
00BA:  BCF    03.5
00BB:  INCF   28,F
....................    } 
....................    else if(digitcnt==1) 
00BC:  GOTO   22A
00BD:  DECFSZ 28,W
00BE:  GOTO   0E0
....................    { 
....................      OUTPUT_BIT(disp1,0); 
00BF:  BCF    06.0
00C0:  BSF    03.5
00C1:  BCF    06.0
....................       //digit[1]=8; 
....................      hexvalue =lookup_table[digit[1]]; 
00C2:  BCF    03.5
00C3:  MOVF   2F,W
00C4:  CALL   035
00C5:  MOVWF  78
00C6:  MOVWF  29
....................      output_c(hexvalue); 
00C7:  MOVLW  00
00C8:  MOVWF  7E
00C9:  BSF    03.5
00CA:  CLRF   07
00CB:  BCF    03.5
00CC:  MOVF   29,W
00CD:  MOVWF  07
....................      //set_tris_b(0x01); 
....................      OUTPUT_BIT(disp1,0); 
00CE:  BCF    06.0
00CF:  BSF    03.5
00D0:  BCF    06.0
....................      OUTPUT_BIT(disp2,1); 
00D1:  BCF    03.5
00D2:  BSF    06.1
00D3:  BSF    03.5
00D4:  BCF    06.1
....................      OUTPUT_BIT(disp3,0); 
00D5:  BCF    03.5
00D6:  BCF    06.2
00D7:  BSF    03.5
00D8:  BCF    06.2
....................      OUTPUT_BIT(disp4,0); 
00D9:  BCF    03.5
00DA:  BCF    06.3
00DB:  BSF    03.5
00DC:  BCF    06.3
....................      digitcnt++;// ++; 
00DD:  BCF    03.5
00DE:  INCF   28,F
....................    } 
....................    else if(digitcnt==2) 
00DF:  GOTO   22A
00E0:  MOVF   28,W
00E1:  SUBLW  02
00E2:  BTFSS  03.2
00E3:  GOTO   114
....................    { 
....................      OUTPUT_BIT(disp2,0); 
00E4:  BCF    06.1
00E5:  BSF    03.5
00E6:  BCF    06.1
....................       //digit[2]=7; 
....................      hexvalue = lookup_table[digit[0]]; 
00E7:  BCF    03.5
00E8:  MOVF   2E,W
00E9:  CALL   035
00EA:  MOVWF  78
00EB:  MOVWF  29
....................      output_c(hexvalue); 
00EC:  MOVLW  00
00ED:  MOVWF  7E
00EE:  BSF    03.5
00EF:  CLRF   07
00F0:  BCF    03.5
00F1:  MOVF   29,W
00F2:  MOVWF  07
....................       if(setdp2==1) 
00F3:  DECFSZ 6D,W
00F4:  GOTO   0FC
....................         output_bit(segmentdp,1); 
00F5:  BSF    07.7
00F6:  BCF    7E.7
00F7:  MOVF   7E,W
00F8:  BSF    03.5
00F9:  MOVWF  07
....................      else 
00FA:  GOTO   101
00FB:  BCF    03.5
....................         output_bit(segmentdp,0); 
00FC:  BCF    07.7
00FD:  BCF    7E.7
00FE:  MOVF   7E,W
00FF:  BSF    03.5
0100:  MOVWF  07
....................      //set_tris_b(0x01); 
....................      OUTPUT_BIT(disp1,0); 
0101:  BCF    03.5
0102:  BCF    06.0
0103:  BSF    03.5
0104:  BCF    06.0
....................      OUTPUT_BIT(disp2,0); 
0105:  BCF    03.5
0106:  BCF    06.1
0107:  BSF    03.5
0108:  BCF    06.1
....................      OUTPUT_BIT(disp3,1); 
0109:  BCF    03.5
010A:  BSF    06.2
010B:  BSF    03.5
010C:  BCF    06.2
....................      OUTPUT_BIT(disp4,0); 
010D:  BCF    03.5
010E:  BCF    06.3
010F:  BSF    03.5
0110:  BCF    06.3
....................      digitcnt++; 
0111:  BCF    03.5
0112:  INCF   28,F
....................    } 
....................    else if(digitcnt==3) 
0113:  GOTO   22A
0114:  MOVF   28,W
0115:  SUBLW  03
0116:  BTFSS  03.2
0117:  GOTO   139
....................    { 
....................      OUTPUT_BIT(disp3,0); 
0118:  BCF    06.2
0119:  BSF    03.5
011A:  BCF    06.2
....................      //digit[3]=6; 
....................      hexvalue = lookup_table[digit[3]]; 
011B:  BCF    03.5
011C:  MOVF   31,W
011D:  CALL   035
011E:  MOVWF  78
011F:  MOVWF  29
....................      output_c(hexvalue); 
0120:  MOVLW  00
0121:  MOVWF  7E
0122:  BSF    03.5
0123:  CLRF   07
0124:  BCF    03.5
0125:  MOVF   29,W
0126:  MOVWF  07
....................      //set_tris_b(0x01); 
....................      OUTPUT_BIT(disp1,0); 
0127:  BCF    06.0
0128:  BSF    03.5
0129:  BCF    06.0
....................      OUTPUT_BIT(disp2,0); 
012A:  BCF    03.5
012B:  BCF    06.1
012C:  BSF    03.5
012D:  BCF    06.1
....................      OUTPUT_BIT(disp3,0); 
012E:  BCF    03.5
012F:  BCF    06.2
0130:  BSF    03.5
0131:  BCF    06.2
....................      OUTPUT_BIT(disp4,1); 
0132:  BCF    03.5
0133:  BSF    06.3
0134:  BSF    03.5
0135:  BCF    06.3
....................      digitcnt++; 
0136:  BCF    03.5
0137:  INCF   28,F
....................    } 
....................    else if(digitcnt==4) 
0138:  GOTO   22A
0139:  MOVF   28,W
013A:  SUBLW  04
013B:  BTFSS  03.2
013C:  GOTO   16E
....................    { 
....................      OUTPUT_BIT(disp4,0); 
013D:  BCF    06.3
013E:  BSF    03.5
013F:  BCF    06.3
....................      //digit[3]=6; 
....................      hexvalue = lookup_table[digit[4]]; 
0140:  BCF    03.5
0141:  MOVF   32,W
0142:  CALL   035
0143:  MOVWF  78
0144:  MOVWF  29
....................      output_c(hexvalue); 
0145:  MOVLW  00
0146:  MOVWF  7E
0147:  BSF    03.5
0148:  CLRF   07
0149:  BCF    03.5
014A:  MOVF   29,W
014B:  MOVWF  07
....................      //set_tris_b(0x01); 
....................      OUTPUT_BIT(disp1,0); 
014C:  BCF    06.0
014D:  BSF    03.5
014E:  BCF    06.0
....................      OUTPUT_BIT(disp2,0); 
014F:  BCF    03.5
0150:  BCF    06.1
0151:  BSF    03.5
0152:  BCF    06.1
....................      OUTPUT_BIT(disp3,0); 
0153:  BCF    03.5
0154:  BCF    06.2
0155:  BSF    03.5
0156:  BCF    06.2
....................      OUTPUT_BIT(disp4,0); 
0157:  BCF    03.5
0158:  BCF    06.3
0159:  BSF    03.5
015A:  BCF    06.3
....................      OUTPUT_BIT(disp5,1); 
015B:  BCF    03.5
015C:  BSF    05.4
015D:  BSF    03.5
015E:  BCF    05.4
....................      OUTPUT_BIT(disp6,0); 
015F:  BCF    03.5
0160:  BCF    05.7
0161:  BSF    03.5
0162:  BCF    05.7
....................      OUTPUT_BIT(disp7,0); 
0163:  BCF    03.5
0164:  BCF    05.6
0165:  BSF    03.5
0166:  BCF    05.6
....................      OUTPUT_BIT(disp8,0); 
0167:  BCF    03.5
0168:  BCF    06.5
0169:  BSF    03.5
016A:  BCF    06.5
....................      digitcnt++; 
016B:  BCF    03.5
016C:  INCF   28,F
....................    } 
....................    else if(digitcnt==5) 
016D:  GOTO   22A
016E:  MOVF   28,W
016F:  SUBLW  05
0170:  BTFSS  03.2
0171:  GOTO   1B2
....................    { 
....................      OUTPUT_BIT(disp5,0); 
0172:  BCF    05.4
0173:  BSF    03.5
0174:  BCF    05.4
....................      //digit[3]=6; 
....................      hexvalue = lookup_table[digit[5]]; 
0175:  BCF    03.5
0176:  MOVF   33,W
0177:  CALL   035
0178:  MOVWF  78
0179:  MOVWF  29
....................      output_c(hexvalue); 
017A:  MOVLW  00
017B:  MOVWF  7E
017C:  BSF    03.5
017D:  CLRF   07
017E:  BCF    03.5
017F:  MOVF   29,W
0180:  MOVWF  07
....................      if(setdp==1) 
0181:  DECFSZ 2D,W
0182:  GOTO   18A
....................         output_bit(segmentdp,1); 
0183:  BSF    07.7
0184:  BCF    7E.7
0185:  MOVF   7E,W
0186:  BSF    03.5
0187:  MOVWF  07
....................      else 
0188:  GOTO   18F
0189:  BCF    03.5
....................         output_bit(segmentdp,0); 
018A:  BCF    07.7
018B:  BCF    7E.7
018C:  MOVF   7E,W
018D:  BSF    03.5
018E:  MOVWF  07
....................      //set_tris_b(0x01); 
....................      OUTPUT_BIT(disp1,0); 
018F:  BCF    03.5
0190:  BCF    06.0
0191:  BSF    03.5
0192:  BCF    06.0
....................      OUTPUT_BIT(disp2,0); 
0193:  BCF    03.5
0194:  BCF    06.1
0195:  BSF    03.5
0196:  BCF    06.1
....................      OUTPUT_BIT(disp3,0); 
0197:  BCF    03.5
0198:  BCF    06.2
0199:  BSF    03.5
019A:  BCF    06.2
....................      OUTPUT_BIT(disp4,0); 
019B:  BCF    03.5
019C:  BCF    06.3
019D:  BSF    03.5
019E:  BCF    06.3
....................      OUTPUT_BIT(disp5,0); 
019F:  BCF    03.5
01A0:  BCF    05.4
01A1:  BSF    03.5
01A2:  BCF    05.4
....................      OUTPUT_BIT(disp6,1); 
01A3:  BCF    03.5
01A4:  BSF    05.7
01A5:  BSF    03.5
01A6:  BCF    05.7
....................      OUTPUT_BIT(disp7,0); 
01A7:  BCF    03.5
01A8:  BCF    05.6
01A9:  BSF    03.5
01AA:  BCF    05.6
....................      OUTPUT_BIT(disp8,0); 
01AB:  BCF    03.5
01AC:  BCF    06.5
01AD:  BSF    03.5
01AE:  BCF    06.5
....................      digitcnt++; 
01AF:  BCF    03.5
01B0:  INCF   28,F
....................    } 
....................    else if(digitcnt==6) 
01B1:  GOTO   22A
01B2:  MOVF   28,W
01B3:  SUBLW  06
01B4:  BTFSS  03.2
01B5:  GOTO   1F6
....................    { 
....................      OUTPUT_BIT(disp6,0); 
01B6:  BCF    05.7
01B7:  BSF    03.5
01B8:  BCF    05.7
....................      //digit[3]=6; 
....................      hexvalue = lookup_table1[digit[6]]; 
01B9:  BCF    03.5
01BA:  MOVF   34,W
01BB:  CALL   061
01BC:  MOVWF  78
01BD:  MOVWF  29
....................      output_c(hexvalue); 
01BE:  MOVLW  00
01BF:  MOVWF  7E
01C0:  BSF    03.5
01C1:  CLRF   07
01C2:  BCF    03.5
01C3:  MOVF   29,W
01C4:  MOVWF  07
....................      if(setdp1==1) 
01C5:  DECFSZ 2C,W
01C6:  GOTO   1CE
....................         output_bit(segmentg,1); 
01C7:  BSF    07.6
01C8:  BCF    7E.6
01C9:  MOVF   7E,W
01CA:  BSF    03.5
01CB:  MOVWF  07
....................      else 
01CC:  GOTO   1D3
01CD:  BCF    03.5
....................         output_bit(segmentg,0); 
01CE:  BCF    07.6
01CF:  BCF    7E.6
01D0:  MOVF   7E,W
01D1:  BSF    03.5
01D2:  MOVWF  07
....................      //set_tris_b(0x01); 
....................      OUTPUT_BIT(disp1,0); 
01D3:  BCF    03.5
01D4:  BCF    06.0
01D5:  BSF    03.5
01D6:  BCF    06.0
....................      OUTPUT_BIT(disp2,0); 
01D7:  BCF    03.5
01D8:  BCF    06.1
01D9:  BSF    03.5
01DA:  BCF    06.1
....................      OUTPUT_BIT(disp3,0); 
01DB:  BCF    03.5
01DC:  BCF    06.2
01DD:  BSF    03.5
01DE:  BCF    06.2
....................      OUTPUT_BIT(disp4,0); 
01DF:  BCF    03.5
01E0:  BCF    06.3
01E1:  BSF    03.5
01E2:  BCF    06.3
....................      OUTPUT_BIT(disp5,0); 
01E3:  BCF    03.5
01E4:  BCF    05.4
01E5:  BSF    03.5
01E6:  BCF    05.4
....................      OUTPUT_BIT(disp6,0); 
01E7:  BCF    03.5
01E8:  BCF    05.7
01E9:  BSF    03.5
01EA:  BCF    05.7
....................      OUTPUT_BIT(disp7,1); 
01EB:  BCF    03.5
01EC:  BSF    05.6
01ED:  BSF    03.5
01EE:  BCF    05.6
....................      OUTPUT_BIT(disp8,0); 
01EF:  BCF    03.5
01F0:  BCF    06.5
01F1:  BSF    03.5
01F2:  BCF    06.5
....................      digitcnt++; 
01F3:  BCF    03.5
01F4:  INCF   28,F
....................    } 
....................     else if(digitcnt==7) 
01F5:  GOTO   22A
01F6:  MOVF   28,W
01F7:  SUBLW  07
01F8:  BTFSS  03.2
01F9:  GOTO   22A
....................    { 
....................      OUTPUT_BIT(disp7,0); 
01FA:  BCF    05.6
01FB:  BSF    03.5
01FC:  BCF    05.6
....................      //digit[3]=6; 
....................      hexvalue = lookup_table[digit[7]]; 
01FD:  BCF    03.5
01FE:  MOVF   35,W
01FF:  CALL   035
0200:  MOVWF  78
0201:  MOVWF  29
....................      output_c(hexvalue); 
0202:  MOVLW  00
0203:  MOVWF  7E
0204:  BSF    03.5
0205:  CLRF   07
0206:  BCF    03.5
0207:  MOVF   29,W
0208:  MOVWF  07
....................      //set_tris_b(0x01); 
....................      OUTPUT_BIT(disp1,0); 
0209:  BCF    06.0
020A:  BSF    03.5
020B:  BCF    06.0
....................      OUTPUT_BIT(disp2,0); 
020C:  BCF    03.5
020D:  BCF    06.1
020E:  BSF    03.5
020F:  BCF    06.1
....................      OUTPUT_BIT(disp3,0); 
0210:  BCF    03.5
0211:  BCF    06.2
0212:  BSF    03.5
0213:  BCF    06.2
....................      OUTPUT_BIT(disp4,0); 
0214:  BCF    03.5
0215:  BCF    06.3
0216:  BSF    03.5
0217:  BCF    06.3
....................      OUTPUT_BIT(disp5,0); 
0218:  BCF    03.5
0219:  BCF    05.4
021A:  BSF    03.5
021B:  BCF    05.4
....................      OUTPUT_BIT(disp6,0); 
021C:  BCF    03.5
021D:  BCF    05.7
021E:  BSF    03.5
021F:  BCF    05.7
....................      OUTPUT_BIT(disp7,0); 
0220:  BCF    03.5
0221:  BCF    05.6
0222:  BSF    03.5
0223:  BCF    05.6
....................      OUTPUT_BIT(disp8,1); 
0224:  BCF    03.5
0225:  BSF    06.5
0226:  BSF    03.5
0227:  BCF    06.5
....................      digitcnt=0; 
0228:  BCF    03.5
0229:  CLRF   28
....................    } 
.................... } 
....................  
.................... void readadc() 
.................... { 
....................     static unsigned int32 totalcur=0,totalvtg=0,totalref2=0;// 
*
141A:  BSF    03.5
141B:  CLRF   20
141C:  CLRF   21
141D:  CLRF   22
141E:  CLRF   23
141F:  CLRF   24
1420:  CLRF   25
1421:  CLRF   26
1422:  CLRF   27
1423:  CLRF   28
1424:  CLRF   29
1425:  CLRF   2A
1426:  CLRF   2B
....................     static unsigned int16 adccntr=0,adccntr1=0; 
1427:  CLRF   2C
1428:  CLRF   2D
1429:  CLRF   2E
142A:  CLRF   2F
....................  
....................     set_adc_channel(0);          //current 
*
0800:  MOVLW  00
0801:  MOVWF  78
0802:  MOVF   1F,W
0803:  ANDLW  C3
0804:  IORWF  78,W
0805:  MOVWF  1F
....................     delay_ms(1); 
0806:  MOVLW  01
0807:  BSF    03.5
0808:  MOVWF  31
0809:  BCF    0A.3
080A:  BCF    03.5
080B:  CALL   2D9
080C:  BSF    0A.3
....................     value=read_adc(); 
080D:  BSF    1F.1
080E:  BTFSC  1F.1
080F:  GOTO   00E
0810:  BSF    03.5
0811:  MOVF   1E,W
0812:  BCF    03.5
0813:  MOVWF  3E
0814:  MOVF   1E,W
0815:  MOVWF  3F
0816:  CLRF   40
0817:  CLRF   41
....................     totalcur= totalcur + value; 
0818:  MOVF   3E,W
0819:  BSF    03.5
081A:  ADDWF  20,F
081B:  BCF    03.5
081C:  MOVF   3F,W
081D:  BTFSC  03.0
081E:  INCFSZ 3F,W
081F:  GOTO   021
0820:  GOTO   024
0821:  BSF    03.5
0822:  ADDWF  21,F
0823:  BCF    03.5
0824:  MOVF   40,W
0825:  BTFSC  03.0
0826:  INCFSZ 40,W
0827:  GOTO   029
0828:  GOTO   02C
0829:  BSF    03.5
082A:  ADDWF  22,F
082B:  BCF    03.5
082C:  MOVF   41,W
082D:  BTFSC  03.0
082E:  INCFSZ 41,W
082F:  GOTO   031
0830:  GOTO   034
0831:  BSF    03.5
0832:  ADDWF  23,F
0833:  BCF    03.5
....................     set_adc_channel(1);          //voltage 
0834:  MOVLW  04
0835:  MOVWF  78
0836:  MOVF   1F,W
0837:  ANDLW  C3
0838:  IORWF  78,W
0839:  MOVWF  1F
....................     delay_ms(1); 
083A:  MOVLW  01
083B:  BSF    03.5
083C:  MOVWF  31
083D:  BCF    0A.3
083E:  BCF    03.5
083F:  CALL   2D9
0840:  BSF    0A.3
....................     value=read_adc(); 
0841:  BSF    1F.1
0842:  BTFSC  1F.1
0843:  GOTO   042
0844:  BSF    03.5
0845:  MOVF   1E,W
0846:  BCF    03.5
0847:  MOVWF  3E
0848:  MOVF   1E,W
0849:  MOVWF  3F
084A:  CLRF   40
084B:  CLRF   41
....................     totalvtg= totalvtg + value; 
084C:  MOVF   3E,W
084D:  BSF    03.5
084E:  ADDWF  24,F
084F:  BCF    03.5
0850:  MOVF   3F,W
0851:  BTFSC  03.0
0852:  INCFSZ 3F,W
0853:  GOTO   055
0854:  GOTO   058
0855:  BSF    03.5
0856:  ADDWF  25,F
0857:  BCF    03.5
0858:  MOVF   40,W
0859:  BTFSC  03.0
085A:  INCFSZ 40,W
085B:  GOTO   05D
085C:  GOTO   060
085D:  BSF    03.5
085E:  ADDWF  26,F
085F:  BCF    03.5
0860:  MOVF   41,W
0861:  BTFSC  03.0
0862:  INCFSZ 41,W
0863:  GOTO   065
0864:  GOTO   068
0865:  BSF    03.5
0866:  ADDWF  27,F
0867:  BCF    03.5
....................     set_adc_channel(4); 
0868:  MOVLW  10
0869:  MOVWF  78
086A:  MOVF   1F,W
086B:  ANDLW  C3
086C:  IORWF  78,W
086D:  MOVWF  1F
....................  
....................    // delay_ms(1); 
....................     delay_us(100); 
086E:  MOVLW  42
086F:  MOVWF  77
0870:  DECFSZ 77,F
0871:  GOTO   070
0872:  NOP
....................     value=read_adc(); 
0873:  BSF    1F.1
0874:  BTFSC  1F.1
0875:  GOTO   074
0876:  BSF    03.5
0877:  MOVF   1E,W
0878:  BCF    03.5
0879:  MOVWF  3E
087A:  MOVF   1E,W
087B:  MOVWF  3F
087C:  CLRF   40
087D:  CLRF   41
....................     totalref2= totalref2 + value; 
087E:  MOVF   3E,W
087F:  BSF    03.5
0880:  ADDWF  28,F
0881:  BCF    03.5
0882:  MOVF   3F,W
0883:  BTFSC  03.0
0884:  INCFSZ 3F,W
0885:  GOTO   087
0886:  GOTO   08A
0887:  BSF    03.5
0888:  ADDWF  29,F
0889:  BCF    03.5
088A:  MOVF   40,W
088B:  BTFSC  03.0
088C:  INCFSZ 40,W
088D:  GOTO   08F
088E:  GOTO   092
088F:  BSF    03.5
0890:  ADDWF  2A,F
0891:  BCF    03.5
0892:  MOVF   41,W
0893:  BTFSC  03.0
0894:  INCFSZ 41,W
0895:  GOTO   097
0896:  GOTO   09A
0897:  BSF    03.5
0898:  ADDWF  2B,F
0899:  BCF    03.5
....................  
....................     adccntr++; 
089A:  BSF    03.5
089B:  INCF   2C,F
089C:  BTFSC  03.2
089D:  INCF   2D,F
....................     adccntr1++; 
089E:  INCF   2E,F
089F:  BTFSC  03.2
08A0:  INCF   2F,F
....................  
....................     if(adccntr>=adcavg)//256)//128) 
08A1:  MOVF   2D,W
08A2:  SUBLW  00
08A3:  BTFSC  03.0
08A4:  GOTO   24A
....................     { 
....................          cur=totalcur>>leftshift;//8; 
08A5:  MOVF   21,W
08A6:  BCF    03.5
08A7:  MOVWF  46
08A8:  BSF    03.5
08A9:  MOVF   22,W
08AA:  BCF    03.5
08AB:  MOVWF  47
08AC:  BSF    03.5
08AD:  MOVF   23,W
08AE:  BCF    03.5
08AF:  MOVWF  48
08B0:  CLRF   49
....................          calcur=(cur*maxshunt)/maxadc;          //*1.5 is added by sayali 16.08.18 
08B1:  MOVF   49,W
08B2:  BSF    03.5
08B3:  MOVWF  33
08B4:  BCF    03.5
08B5:  MOVF   48,W
08B6:  BSF    03.5
08B7:  MOVWF  32
08B8:  BCF    03.5
08B9:  MOVF   47,W
08BA:  BSF    03.5
08BB:  MOVWF  31
08BC:  BCF    03.5
08BD:  MOVF   46,W
08BE:  BSF    03.5
08BF:  MOVWF  30
08C0:  BCF    03.5
08C1:  MOVF   61,W
08C2:  BSF    03.5
08C3:  MOVWF  37
08C4:  BCF    03.5
08C5:  MOVF   60,W
08C6:  BSF    03.5
08C7:  MOVWF  36
08C8:  BCF    03.5
08C9:  MOVF   5F,W
08CA:  BSF    03.5
08CB:  MOVWF  35
08CC:  BCF    03.5
08CD:  MOVF   5E,W
08CE:  BSF    03.5
08CF:  MOVWF  34
08D0:  BCF    0A.3
08D1:  BCF    03.5
08D2:  GOTO   3AE
08D3:  BSF    0A.3
08D4:  MOVF   7A,W
08D5:  BSF    03.5
08D6:  MOVWF  33
08D7:  MOVF   79,W
08D8:  MOVWF  32
08D9:  MOVF   78,W
08DA:  MOVWF  31
08DB:  MOVF   77,W
08DC:  MOVWF  30
08DD:  MOVF   33,W
08DE:  MOVWF  37
08DF:  MOVF   32,W
08E0:  MOVWF  36
08E1:  MOVF   31,W
08E2:  MOVWF  35
08E3:  MOVF   30,W
08E4:  MOVWF  34
08E5:  BCF    03.5
08E6:  MOVF   5D,W
08E7:  BSF    03.5
08E8:  MOVWF  3B
08E9:  BCF    03.5
08EA:  MOVF   5C,W
08EB:  BSF    03.5
08EC:  MOVWF  3A
08ED:  BCF    03.5
08EE:  MOVF   5B,W
08EF:  BSF    03.5
08F0:  MOVWF  39
08F1:  BCF    03.5
08F2:  MOVF   5A,W
08F3:  BSF    03.5
08F4:  MOVWF  38
08F5:  BCF    0A.3
08F6:  BCF    03.5
08F7:  GOTO   3DC
08F8:  BSF    0A.3
08F9:  MOVF   7A,W
08FA:  MOVWF  59
08FB:  MOVF   79,W
08FC:  MOVWF  58
08FD:  MOVF   78,W
08FE:  MOVWF  57
08FF:  MOVF   77,W
0900:  MOVWF  56
....................  
....................          if(offsetokf==0)                        //executes once on power ON to calculate offset 
0901:  MOVF   36,F
0902:  BTFSS  03.2
0903:  GOTO   12E
....................          { 
....................             offcnt++; 
0904:  MOVLW  01
0905:  ADDWF  52,F
0906:  BTFSC  03.0
0907:  INCF   53,F
0908:  BTFSC  03.2
0909:  INCF   54,F
090A:  BTFSC  03.2
090B:  INCF   55,F
....................             if(offcnt==3)     //for reading offset 
090C:  MOVF   52,W
090D:  SUBLW  03
090E:  BTFSS  03.2
090F:  GOTO   128
0910:  MOVF   53,F
0911:  BTFSS  03.2
0912:  GOTO   128
0913:  MOVF   54,F
0914:  BTFSS  03.2
0915:  GOTO   128
0916:  MOVF   55,F
0917:  BTFSS  03.2
0918:  GOTO   128
....................             { 
....................                offsetokf=1; 
0919:  MOVLW  01
091A:  MOVWF  36
....................                offcnt=0; 
091B:  CLRF   55
091C:  CLRF   54
091D:  CLRF   53
091E:  CLRF   52
....................                curoffset=calcur; 
091F:  MOVF   59,W
0920:  MOVWF  51
0921:  MOVF   58,W
0922:  MOVWF  50
0923:  MOVF   57,W
0924:  MOVWF  4F
0925:  MOVF   56,W
0926:  MOVWF  4E
....................             } 
....................             else 
0927:  GOTO   12D
....................             { 
....................                 current=1;      //curoffset;   //current=1 changed by sayali 18.08.18 
0928:  CLRF   3D
0929:  CLRF   3C
092A:  CLRF   3B
092B:  MOVLW  01
092C:  MOVWF  3A
....................             } 
....................           } 
....................          else 
092D:  GOTO   18E
....................          { 
....................             if(calcur >= curoffset) 
092E:  MOVF   51,W
092F:  SUBWF  59,W
0930:  BTFSS  03.0
0931:  GOTO   188
0932:  BTFSS  03.2
0933:  GOTO   144
0934:  MOVF   50,W
0935:  SUBWF  58,W
0936:  BTFSS  03.0
0937:  GOTO   188
0938:  BTFSS  03.2
0939:  GOTO   144
093A:  MOVF   4F,W
093B:  SUBWF  57,W
093C:  BTFSS  03.0
093D:  GOTO   188
093E:  BTFSS  03.2
093F:  GOTO   144
0940:  MOVF   4E,W
0941:  SUBWF  56,W
0942:  BTFSS  03.0
0943:  GOTO   188
....................             { 
....................                current=calcur-curoffset; 
0944:  MOVF   4E,W
0945:  SUBWF  56,W
0946:  MOVWF  3A
0947:  MOVF   57,W
0948:  MOVWF  3B
0949:  MOVF   4F,W
094A:  BTFSS  03.0
094B:  INCFSZ 4F,W
094C:  SUBWF  3B,F
094D:  MOVF   58,W
094E:  MOVWF  3C
094F:  MOVF   50,W
0950:  BTFSS  03.0
0951:  INCFSZ 50,W
0952:  SUBWF  3C,F
0953:  MOVF   59,W
0954:  MOVWF  3D
0955:  MOVF   51,W
0956:  BTFSS  03.0
0957:  INCFSZ 51,W
0958:  SUBWF  3D,F
....................                if(current >= 10.0) 
0959:  MOVF   3D,W
095A:  BSF    03.5
095B:  MOVWF  37
095C:  BCF    03.5
095D:  MOVF   3C,W
095E:  BSF    03.5
095F:  MOVWF  36
0960:  BCF    03.5
0961:  MOVF   3B,W
0962:  BSF    03.5
0963:  MOVWF  35
0964:  BCF    03.5
0965:  MOVF   3A,W
0966:  BSF    03.5
0967:  MOVWF  34
0968:  BCF    0A.3
0969:  BCF    03.5
096A:  CALL   422
096B:  BSF    0A.3
096C:  BSF    03.5
096D:  CLRF   33
096E:  CLRF   32
096F:  MOVLW  20
0970:  MOVWF  31
0971:  MOVLW  82
0972:  MOVWF  30
0973:  MOVF   7A,W
0974:  MOVWF  37
0975:  MOVF   79,W
0976:  MOVWF  36
0977:  MOVF   78,W
0978:  MOVWF  35
0979:  MOVF   77,W
097A:  MOVWF  34
097B:  BCF    0A.3
097C:  BCF    03.5
097D:  GOTO   43F
097E:  BSF    0A.3
097F:  BTFSC  03.0
0980:  GOTO   183
0981:  BTFSS  03.2
0982:  GOTO   186
....................                { 
....................                   weldon=1;                  //welding started... 
0983:  MOVLW  01
0984:  MOVWF  39
....................                } 
....................                else 
0985:  GOTO   187
....................                { 
....................                   weldon=0; 
0986:  CLRF   39
....................                } 
....................             } 
....................             else 
0987:  GOTO   18E
....................             { 
....................                current=1;  //current=1 changed   16.08.18 
0988:  CLRF   3D
0989:  CLRF   3C
098A:  CLRF   3B
098B:  MOVLW  01
098C:  MOVWF  3A
....................                weldon=0; 
098D:  CLRF   39
....................             } 
....................          } 
....................  
....................       vtg=totalvtg>>leftshift;//8; 
098E:  BSF    03.5
098F:  MOVF   25,W
0990:  BCF    03.5
0991:  MOVWF  66
0992:  BSF    03.5
0993:  MOVF   26,W
0994:  BCF    03.5
0995:  MOVWF  67
....................       voltage=(vtg*1000.0)/62.5;//17.0;//3.3=97V fvtg;//decimal count 
0996:  MOVF   67,W
0997:  BSF    03.5
0998:  MOVWF  31
0999:  BCF    03.5
099A:  MOVF   66,W
099B:  BSF    03.5
099C:  MOVWF  30
099D:  BCF    0A.3
099E:  BCF    03.5
099F:  GOTO   482
09A0:  BSF    0A.3
09A1:  MOVF   7A,W
09A2:  BSF    03.5
09A3:  MOVWF  37
09A4:  MOVF   79,W
09A5:  MOVWF  36
09A6:  MOVF   78,W
09A7:  MOVWF  35
09A8:  MOVF   77,W
09A9:  MOVWF  34
09AA:  CLRF   3B
09AB:  CLRF   3A
09AC:  MOVLW  7A
09AD:  MOVWF  39
09AE:  MOVLW  88
09AF:  MOVWF  38
09B0:  BCF    0A.3
09B1:  BCF    03.5
09B2:  CALL   4A3
09B3:  BSF    0A.3
09B4:  MOVF   77,W
09B5:  BSF    03.5
09B6:  MOVWF  30
09B7:  MOVF   78,W
09B8:  MOVWF  31
09B9:  MOVF   79,W
09BA:  MOVWF  32
09BB:  MOVF   7A,W
09BC:  MOVWF  33
09BD:  MOVWF  3F
09BE:  MOVF   32,W
09BF:  MOVWF  3E
09C0:  MOVF   31,W
09C1:  MOVWF  3D
09C2:  MOVF   30,W
09C3:  MOVWF  3C
09C4:  CLRF   43
09C5:  CLRF   42
09C6:  MOVLW  7A
09C7:  MOVWF  41
09C8:  MOVLW  84
09C9:  MOVWF  40
09CA:  BCF    0A.3
09CB:  BCF    03.5
09CC:  CALL   51A
09CD:  BSF    0A.3
09CE:  MOVF   7A,W
09CF:  BSF    03.5
09D0:  MOVWF  3F
09D1:  MOVF   79,W
09D2:  MOVWF  3E
09D3:  MOVF   78,W
09D4:  MOVWF  3D
09D5:  MOVF   77,W
09D6:  MOVWF  3C
09D7:  BCF    0A.3
09D8:  BCF    03.5
09D9:  CALL   5E6
09DA:  BSF    0A.3
09DB:  MOVF   7A,W
09DC:  MOVWF  45
09DD:  MOVF   79,W
09DE:  MOVWF  44
09DF:  MOVF   78,W
09E0:  MOVWF  43
09E1:  MOVF   77,W
09E2:  MOVWF  42
....................       totalvtg=0; 
09E3:  BSF    03.5
09E4:  CLRF   27
09E5:  CLRF   26
09E6:  CLRF   25
09E7:  CLRF   24
....................       totalcur=0; 
09E8:  CLRF   23
09E9:  CLRF   22
09EA:  CLRF   21
09EB:  CLRF   20
....................       adccntr=0; 
09EC:  CLRF   2D
09ED:  CLRF   2C
....................  
....................       ref2=totalref2>>leftshift; //8; 
09EE:  MOVF   29,W
09EF:  MOVWF  73
09F0:  MOVF   2A,W
09F1:  MOVWF  74
09F2:  MOVF   2B,W
09F3:  MOVWF  75
09F4:  CLRF   76
....................       ref2=(ref2*4.88)/10;// 3.02V =600Amp  POt Output=4.347V 
09F5:  MOVF   76,W
09F6:  MOVWF  37
09F7:  MOVF   75,W
09F8:  MOVWF  36
09F9:  MOVF   74,W
09FA:  MOVWF  35
09FB:  MOVF   73,W
09FC:  MOVWF  34
09FD:  BCF    0A.3
09FE:  BCF    03.5
09FF:  CALL   422
0A00:  BSF    0A.3
0A01:  MOVF   7A,W
0A02:  BSF    03.5
0A03:  MOVWF  37
0A04:  MOVF   79,W
0A05:  MOVWF  36
0A06:  MOVF   78,W
0A07:  MOVWF  35
0A08:  MOVF   77,W
0A09:  MOVWF  34
0A0A:  MOVLW  F6
0A0B:  MOVWF  3B
0A0C:  MOVLW  28
0A0D:  MOVWF  3A
0A0E:  MOVLW  1C
0A0F:  MOVWF  39
0A10:  MOVLW  81
0A11:  MOVWF  38
0A12:  BCF    0A.3
0A13:  BCF    03.5
0A14:  CALL   4A3
0A15:  BSF    0A.3
0A16:  MOVF   77,W
0A17:  BSF    03.5
0A18:  MOVWF  30
0A19:  MOVF   78,W
0A1A:  MOVWF  31
0A1B:  MOVF   79,W
0A1C:  MOVWF  32
0A1D:  MOVF   7A,W
0A1E:  MOVWF  33
0A1F:  MOVWF  3F
0A20:  MOVF   32,W
0A21:  MOVWF  3E
0A22:  MOVF   31,W
0A23:  MOVWF  3D
0A24:  MOVF   30,W
0A25:  MOVWF  3C
0A26:  CLRF   43
0A27:  CLRF   42
0A28:  MOVLW  20
0A29:  MOVWF  41
0A2A:  MOVLW  82
0A2B:  MOVWF  40
0A2C:  BCF    0A.3
0A2D:  BCF    03.5
0A2E:  CALL   51A
0A2F:  BSF    0A.3
0A30:  MOVF   7A,W
0A31:  BSF    03.5
0A32:  MOVWF  3F
0A33:  MOVF   79,W
0A34:  MOVWF  3E
0A35:  MOVF   78,W
0A36:  MOVWF  3D
0A37:  MOVF   77,W
0A38:  MOVWF  3C
0A39:  BCF    0A.3
0A3A:  BCF    03.5
0A3B:  CALL   5E6
0A3C:  BSF    0A.3
0A3D:  MOVF   7A,W
0A3E:  MOVWF  76
0A3F:  MOVF   79,W
0A40:  MOVWF  75
0A41:  MOVF   78,W
0A42:  MOVWF  74
0A43:  MOVF   77,W
0A44:  MOVWF  73
....................      /* if(ref2<148) 
....................          ref2=((ref2*18.88)+100)/10; 
....................       else 
....................          ref2=((ref2*20)+100)/10;      //18.4375 =4.456   //20==4.242 // tp6 =2.95 
....................       */ 
....................       totalref2=0; 
0A45:  BSF    03.5
0A46:  CLRF   2B
0A47:  CLRF   2A
0A48:  CLRF   29
0A49:  CLRF   28
....................  
....................      } 
.................... } 
0A4A:  BCF    03.5
0A4B:  BCF    0A.3
0A4C:  BSF    0A.4
0A4D:  GOTO   4B3 (RETURN)
....................  
....................  
.................... unsigned char readswitch() 
.................... { 
....................    unsigned char data=0,data1=0; 
*
0272:  BSF    03.5
0273:  CLRF   30
0274:  CLRF   31
....................    data=input_c(); 
0275:  MOVLW  FF
0276:  MOVWF  7E
0277:  MOVWF  07
0278:  BCF    03.5
0279:  MOVF   07,W
027A:  BSF    03.5
027B:  MOVWF  30
....................    data=data & 0x07; 
027C:  MOVLW  07
027D:  ANDWF  30,F
....................   // data=data>>1; 
....................    delay_us(200); 
027E:  MOVLW  85
027F:  MOVWF  77
0280:  DECFSZ 77,F
0281:  GOTO   280
....................    data1=input_c(); 
0282:  MOVLW  FF
0283:  MOVWF  7E
0284:  MOVWF  07
0285:  BCF    03.5
0286:  MOVF   07,W
0287:  BSF    03.5
0288:  MOVWF  31
....................    data1=data1 & 0x07; 
0289:  MOVLW  07
028A:  ANDWF  31,F
....................    //data1=data1>>1; 
....................  
....................    if(data==data1) 
028B:  MOVF   31,W
028C:  SUBWF  30,W
028D:  BTFSS  03.2
028E:  GOTO   2D3
....................    { 
....................       if(data==0x00) 
028F:  MOVF   30,F
0290:  BTFSS  03.2
0291:  GOTO   297
....................       {range='A';} 
0292:  MOVLW  41
0293:  BCF    03.5
0294:  MOVWF  38
....................       else if(data==0x01) 
0295:  GOTO   2D2
0296:  BSF    03.5
0297:  DECFSZ 30,W
0298:  GOTO   29E
....................       {range='B';} 
0299:  MOVLW  42
029A:  BCF    03.5
029B:  MOVWF  38
....................       else if(data==0x02) 
029C:  GOTO   2D2
029D:  BSF    03.5
029E:  MOVF   30,W
029F:  SUBLW  02
02A0:  BTFSS  03.2
02A1:  GOTO   2A7
....................       {range='C';} 
02A2:  MOVLW  43
02A3:  BCF    03.5
02A4:  MOVWF  38
....................       else if(data==0x03) 
02A5:  GOTO   2D2
02A6:  BSF    03.5
02A7:  MOVF   30,W
02A8:  SUBLW  03
02A9:  BTFSS  03.2
02AA:  GOTO   2B0
....................       {range='D';} 
02AB:  MOVLW  44
02AC:  BCF    03.5
02AD:  MOVWF  38
....................       else if(data==0x04) 
02AE:  GOTO   2D2
02AF:  BSF    03.5
02B0:  MOVF   30,W
02B1:  SUBLW  04
02B2:  BTFSS  03.2
02B3:  GOTO   2B9
....................       {range='E';} 
02B4:  MOVLW  45
02B5:  BCF    03.5
02B6:  MOVWF  38
....................       else if(data==0x05) 
02B7:  GOTO   2D2
02B8:  BSF    03.5
02B9:  MOVF   30,W
02BA:  SUBLW  05
02BB:  BTFSS  03.2
02BC:  GOTO   2C2
....................       {range='F';} 
02BD:  MOVLW  46
02BE:  BCF    03.5
02BF:  MOVWF  38
....................       else if(data==0x06) 
02C0:  GOTO   2D2
02C1:  BSF    03.5
02C2:  MOVF   30,W
02C3:  SUBLW  06
02C4:  BTFSS  03.2
02C5:  GOTO   2CB
....................       {range='G';} 
02C6:  MOVLW  47
02C7:  BCF    03.5
02C8:  MOVWF  38
....................       else if(data==0x07) 
02C9:  GOTO   2D2
02CA:  BSF    03.5
02CB:  MOVF   30,W
02CC:  SUBLW  07
02CD:  BTFSS  03.2
02CE:  GOTO   2D3
....................       {range='H';} 
02CF:  MOVLW  48
02D0:  BCF    03.5
02D1:  MOVWF  38
02D2:  BSF    03.5
....................    } 
....................  return(range); 
02D3:  BCF    03.5
02D4:  MOVF   38,W
02D5:  MOVWF  78
.................... } 
02D6:  BCF    0A.3
02D7:  BSF    0A.4
02D8:  GOTO   442 (RETURN)
....................  
....................  
.................... void debounce() 
.................... { 
....................     for(jj=0;jj<255;jj++); 
.................... } 
....................  
....................  
.................... void dispmodel() 
.................... { 
....................    if(model=='A') 
*
02ED:  MOVF   37,W
02EE:  SUBLW  41
02EF:  BTFSS  03.2
02F0:  GOTO   305
....................    { 
....................      // digit[0]=0X02; //'2'- 0x30;; 
....................       //digit[1]=0X05; //'5'- 0x30; 
....................      // digit[2]=0X00; //'0'- 0x30; 
....................       //digit[3]=0x0D; //'C'- 0x30; 
....................       digit[4]=0X01; 
02F1:  MOVLW  01
02F2:  MOVWF  32
....................       digit[5]=0X05; 
02F3:  MOVLW  05
02F4:  MOVWF  33
....................       digit[6]=0X01; 
02F5:  MOVLW  01
02F6:  MOVWF  34
....................       digit[7]=0X00; 
02F7:  CLRF   35
....................       maxadc =625; 
02F8:  CLRF   5D
02F9:  CLRF   5C
02FA:  MOVLW  02
02FB:  MOVWF  5B
02FC:  MOVLW  71
02FD:  MOVWF  5A
....................       maxshunt=1500; 
02FE:  CLRF   61
02FF:  CLRF   60
0300:  MOVLW  05
0301:  MOVWF  5F
0302:  MOVLW  DC
0303:  MOVWF  5E
....................    } 
....................    else if(model=='B') 
0304:  GOTO   3AB
0305:  MOVF   37,W
0306:  SUBLW  42
0307:  BTFSS  03.2
0308:  GOTO   31B
....................    { 
....................       digit[4]=0X01; 
0309:  MOVLW  01
030A:  MOVWF  32
....................       digit[5]=0X02; 
030B:  MOVLW  02
030C:  MOVWF  33
....................       digit[6]=0X02; 
030D:  MOVWF  34
....................       digit[7]=0X00; 
030E:  CLRF   35
....................       maxadc=625; 
030F:  CLRF   5D
0310:  CLRF   5C
0311:  MOVWF  5B
0312:  MOVLW  71
0313:  MOVWF  5A
....................       maxshunt=1200; 
0314:  CLRF   61
0315:  CLRF   60
0316:  MOVLW  04
0317:  MOVWF  5F
0318:  MOVLW  B0
0319:  MOVWF  5E
....................    } 
....................    else if(model=='C') 
031A:  GOTO   3AB
031B:  MOVF   37,W
031C:  SUBLW  43
031D:  BTFSS  03.2
031E:  GOTO   332
....................    { 
....................       digit[4]=0X01; 
031F:  MOVLW  01
0320:  MOVWF  32
....................       digit[5]=0X00; 
0321:  CLRF   33
....................       digit[6]=0X03; 
0322:  MOVLW  03
0323:  MOVWF  34
....................       digit[7]=0X00; 
0324:  CLRF   35
....................       maxadc=625; 
0325:  CLRF   5D
0326:  CLRF   5C
0327:  MOVLW  02
0328:  MOVWF  5B
0329:  MOVLW  71
032A:  MOVWF  5A
....................       maxshunt=1000; 
032B:  CLRF   61
032C:  CLRF   60
032D:  MOVLW  03
032E:  MOVWF  5F
032F:  MOVLW  E8
0330:  MOVWF  5E
....................    } 
....................    else if(model=='D') 
0331:  GOTO   3AB
0332:  MOVF   37,W
0333:  SUBLW  44
0334:  BTFSS  03.2
0335:  GOTO   34A
....................    { 
....................       digit[4]=0X08; 
0336:  MOVLW  08
0337:  MOVWF  32
....................       digit[5]=0X00; 
0338:  CLRF   33
....................       digit[6]=0X04; 
0339:  MOVLW  04
033A:  MOVWF  34
....................       digit[7]=0X25; 
033B:  MOVLW  25
033C:  MOVWF  35
....................       maxadc=625; 
033D:  CLRF   5D
033E:  CLRF   5C
033F:  MOVLW  02
0340:  MOVWF  5B
0341:  MOVLW  71
0342:  MOVWF  5A
....................       maxshunt=800; 
0343:  CLRF   61
0344:  CLRF   60
0345:  MOVLW  03
0346:  MOVWF  5F
0347:  MOVLW  20
0348:  MOVWF  5E
....................    } 
....................    else if(model=='E')   //600A 
0349:  GOTO   3AB
034A:  MOVF   37,W
034B:  SUBLW  45
034C:  BTFSS  03.2
034D:  GOTO   363
....................    { 
....................       digit[4]=0X06; 
034E:  MOVLW  06
034F:  MOVWF  32
....................       digit[5]=0X00; 
0350:  CLRF   33
....................       digit[6]=0X00; 
0351:  CLRF   34
....................       digit[7]=0X25; 
0352:  MOVLW  25
0353:  MOVWF  35
....................       maxadc=625; 
0354:  CLRF   5D
0355:  CLRF   5C
0356:  MOVLW  02
0357:  MOVWF  5B
0358:  MOVLW  71
0359:  MOVWF  5A
....................       maxshunt=600; 
035A:  CLRF   61
035B:  CLRF   60
035C:  MOVLW  02
035D:  MOVWF  5F
035E:  MOVLW  58
035F:  MOVWF  5E
....................       ucModelSel=1; 
0360:  MOVLW  01
0361:  MOVWF  6B
....................    } 
....................    else if(model=='F') 
0362:  GOTO   3AB
0363:  MOVF   37,W
0364:  SUBLW  46
0365:  BTFSS  03.2
0366:  GOTO   37C
....................    { 
....................       digit[4]=0X04; 
0367:  MOVLW  04
0368:  MOVWF  32
....................       digit[5]=0X00; 
0369:  CLRF   33
....................       digit[6]=0X00; 
036A:  CLRF   34
....................       digit[7]=0X25; 
036B:  MOVLW  25
036C:  MOVWF  35
....................       maxadc=625; 
036D:  CLRF   5D
036E:  CLRF   5C
036F:  MOVLW  02
0370:  MOVWF  5B
0371:  MOVLW  71
0372:  MOVWF  5A
....................       maxshunt=400; 
0373:  CLRF   61
0374:  CLRF   60
0375:  MOVLW  01
0376:  MOVWF  5F
0377:  MOVLW  90
0378:  MOVWF  5E
....................       ucModelSel=2; 
0379:  MOVLW  02
037A:  MOVWF  6B
....................    } 
....................    else if(model=='G') 
037B:  GOTO   3AB
037C:  MOVF   37,W
037D:  SUBLW  47
037E:  BTFSS  03.2
037F:  GOTO   394
....................    { 
....................       digit[4]=0X03; 
0380:  MOVLW  03
0381:  MOVWF  32
....................       digit[5]=0X00; 
0382:  CLRF   33
....................       digit[6]=0X07; 
0383:  MOVLW  07
0384:  MOVWF  34
....................       digit[7]=0X25; 
0385:  MOVLW  25
0386:  MOVWF  35
....................       maxadc=625; 
0387:  CLRF   5D
0388:  CLRF   5C
0389:  MOVLW  02
038A:  MOVWF  5B
038B:  MOVLW  71
038C:  MOVWF  5A
....................       maxshunt=300; 
038D:  CLRF   61
038E:  CLRF   60
038F:  MOVLW  01
0390:  MOVWF  5F
0391:  MOVLW  2C
0392:  MOVWF  5E
....................    } 
....................    else if(model=='H') 
0393:  GOTO   3AB
0394:  MOVF   37,W
0395:  SUBLW  48
0396:  BTFSS  03.2
0397:  GOTO   3AB
....................    { 
....................       digit[4]=0X02; 
0398:  MOVLW  02
0399:  MOVWF  32
....................       digit[5]=0X05; 
039A:  MOVLW  05
039B:  MOVWF  33
....................       digit[6]=0X08; 
039C:  MOVLW  08
039D:  MOVWF  34
....................       digit[7]=0X25; 
039E:  MOVLW  25
039F:  MOVWF  35
....................       maxadc  =625; 
03A0:  CLRF   5D
03A1:  CLRF   5C
03A2:  MOVLW  02
03A3:  MOVWF  5B
03A4:  MOVLW  71
03A5:  MOVWF  5A
....................       maxshunt=250; 
03A6:  CLRF   61
03A7:  CLRF   60
03A8:  CLRF   5F
03A9:  MOVLW  FA
03AA:  MOVWF  5E
....................    } 
....................  } 
03AB:  BCF    0A.3
03AC:  BSF    0A.4
03AD:  GOTO   473 (RETURN)
....................  
....................  
.................... void SetCurrentCal_600(void) 
.................... { 
....................  
....................       if(ref2>=0 && ref2<=30)                              //10 to 50AMP 
*
0B94:  MOVF   76,F
0B95:  BTFSS  03.2
0B96:  GOTO   40D
0B97:  MOVF   75,F
0B98:  BTFSS  03.2
0B99:  GOTO   40D
0B9A:  MOVF   74,F
0B9B:  BTFSS  03.2
0B9C:  GOTO   40D
0B9D:  MOVF   73,W
0B9E:  SUBLW  1E
0B9F:  BTFSS  03.0
0BA0:  GOTO   40D
....................            ref2=(((ref2*12.89)+100))/10; 
0BA1:  MOVF   76,W
0BA2:  BSF    03.5
0BA3:  MOVWF  37
0BA4:  MOVF   75,W
0BA5:  MOVWF  36
0BA6:  MOVF   74,W
0BA7:  MOVWF  35
0BA8:  MOVF   73,W
0BA9:  MOVWF  34
0BAA:  BCF    0A.3
0BAB:  BCF    03.5
0BAC:  CALL   422
0BAD:  BSF    0A.3
0BAE:  MOVF   7A,W
0BAF:  BSF    03.5
0BB0:  MOVWF  37
0BB1:  MOVF   79,W
0BB2:  MOVWF  36
0BB3:  MOVF   78,W
0BB4:  MOVWF  35
0BB5:  MOVF   77,W
0BB6:  MOVWF  34
0BB7:  MOVLW  71
0BB8:  MOVWF  3B
0BB9:  MOVLW  3D
0BBA:  MOVWF  3A
0BBB:  MOVLW  4E
0BBC:  MOVWF  39
0BBD:  MOVLW  82
0BBE:  MOVWF  38
0BBF:  BCF    0A.3
0BC0:  BCF    03.5
0BC1:  CALL   4A3
0BC2:  BSF    0A.3
0BC3:  MOVF   77,W
0BC4:  BSF    03.5
0BC5:  MOVWF  30
0BC6:  MOVF   78,W
0BC7:  MOVWF  31
0BC8:  MOVF   79,W
0BC9:  MOVWF  32
0BCA:  MOVF   7A,W
0BCB:  MOVWF  33
0BCC:  BCF    03.1
0BCD:  MOVF   33,W
0BCE:  MOVWF  3B
0BCF:  MOVF   32,W
0BD0:  MOVWF  3A
0BD1:  MOVF   31,W
0BD2:  MOVWF  39
0BD3:  MOVF   30,W
0BD4:  MOVWF  38
0BD5:  CLRF   3F
0BD6:  CLRF   3E
0BD7:  MOVLW  48
0BD8:  MOVWF  3D
0BD9:  MOVLW  85
0BDA:  MOVWF  3C
0BDB:  BCF    03.5
0BDC:  CALL   24E
0BDD:  MOVF   77,W
0BDE:  BSF    03.5
0BDF:  MOVWF  34
0BE0:  MOVF   78,W
0BE1:  MOVWF  35
0BE2:  MOVF   79,W
0BE3:  MOVWF  36
0BE4:  MOVF   7A,W
0BE5:  MOVWF  37
0BE6:  MOVWF  3F
0BE7:  MOVF   36,W
0BE8:  MOVWF  3E
0BE9:  MOVF   35,W
0BEA:  MOVWF  3D
0BEB:  MOVF   34,W
0BEC:  MOVWF  3C
0BED:  CLRF   43
0BEE:  CLRF   42
0BEF:  MOVLW  20
0BF0:  MOVWF  41
0BF1:  MOVLW  82
0BF2:  MOVWF  40
0BF3:  BCF    0A.3
0BF4:  BCF    03.5
0BF5:  CALL   51A
0BF6:  BSF    0A.3
0BF7:  MOVF   7A,W
0BF8:  BSF    03.5
0BF9:  MOVWF  3F
0BFA:  MOVF   79,W
0BFB:  MOVWF  3E
0BFC:  MOVF   78,W
0BFD:  MOVWF  3D
0BFE:  MOVF   77,W
0BFF:  MOVWF  3C
0C00:  BCF    0A.3
0C01:  BCF    03.5
0C02:  CALL   5E6
0C03:  BSF    0A.3
0C04:  MOVF   7A,W
0C05:  MOVWF  76
0C06:  MOVF   79,W
0C07:  MOVWF  75
0C08:  MOVF   78,W
0C09:  MOVWF  74
0C0A:  MOVF   77,W
0C0B:  MOVWF  73
....................  
....................       else if(ref2>30 && ref2<=55)                         //>50 to 100AMP 
0C0C:  GOTO   7CA
0C0D:  MOVF   76,F
0C0E:  BTFSS  03.2
0C0F:  GOTO   41A
0C10:  MOVF   75,F
0C11:  BTFSS  03.2
0C12:  GOTO   41A
0C13:  MOVF   74,F
0C14:  BTFSS  03.2
0C15:  GOTO   41A
0C16:  MOVF   73,W
0C17:  SUBLW  1E
0C18:  BTFSC  03.0
0C19:  GOTO   4A8
0C1A:  MOVF   76,F
0C1B:  BTFSS  03.2
0C1C:  GOTO   4A8
0C1D:  MOVF   75,F
0C1E:  BTFSS  03.2
0C1F:  GOTO   4A8
0C20:  MOVF   74,F
0C21:  BTFSS  03.2
0C22:  GOTO   4A8
0C23:  MOVF   73,W
0C24:  SUBLW  37
0C25:  BTFSS  03.0
0C26:  GOTO   4A8
....................            ref2=((((ref2-30)*19.60)+500))/10;     //507 
0C27:  MOVLW  1E
0C28:  SUBWF  73,W
0C29:  BSF    03.5
0C2A:  MOVWF  30
0C2B:  MOVF   74,W
0C2C:  MOVWF  31
0C2D:  MOVLW  00
0C2E:  BTFSS  03.0
0C2F:  MOVLW  01
0C30:  SUBWF  31,F
0C31:  MOVF   75,W
0C32:  MOVWF  32
0C33:  MOVLW  00
0C34:  BTFSS  03.0
0C35:  MOVLW  01
0C36:  SUBWF  32,F
0C37:  MOVF   76,W
0C38:  MOVWF  33
0C39:  MOVLW  00
0C3A:  BTFSS  03.0
0C3B:  MOVLW  01
0C3C:  SUBWF  33,F
0C3D:  MOVF   33,W
0C3E:  MOVWF  37
0C3F:  MOVF   32,W
0C40:  MOVWF  36
0C41:  MOVF   31,W
0C42:  MOVWF  35
0C43:  MOVF   30,W
0C44:  MOVWF  34
0C45:  BCF    0A.3
0C46:  BCF    03.5
0C47:  CALL   422
0C48:  BSF    0A.3
0C49:  MOVF   7A,W
0C4A:  BSF    03.5
0C4B:  MOVWF  37
0C4C:  MOVF   79,W
0C4D:  MOVWF  36
0C4E:  MOVF   78,W
0C4F:  MOVWF  35
0C50:  MOVF   77,W
0C51:  MOVWF  34
0C52:  MOVLW  CD
0C53:  MOVWF  3B
0C54:  MOVLW  CC
0C55:  MOVWF  3A
0C56:  MOVLW  1C
0C57:  MOVWF  39
0C58:  MOVLW  83
0C59:  MOVWF  38
0C5A:  BCF    0A.3
0C5B:  BCF    03.5
0C5C:  CALL   4A3
0C5D:  BSF    0A.3
0C5E:  MOVF   77,W
0C5F:  BSF    03.5
0C60:  MOVWF  34
0C61:  MOVF   78,W
0C62:  MOVWF  35
0C63:  MOVF   79,W
0C64:  MOVWF  36
0C65:  MOVF   7A,W
0C66:  MOVWF  37
0C67:  BCF    03.1
0C68:  MOVF   37,W
0C69:  MOVWF  3B
0C6A:  MOVF   36,W
0C6B:  MOVWF  3A
0C6C:  MOVF   35,W
0C6D:  MOVWF  39
0C6E:  MOVF   34,W
0C6F:  MOVWF  38
0C70:  CLRF   3F
0C71:  CLRF   3E
0C72:  MOVLW  7A
0C73:  MOVWF  3D
0C74:  MOVLW  87
0C75:  MOVWF  3C
0C76:  BCF    03.5
0C77:  CALL   24E
0C78:  MOVF   77,W
0C79:  BSF    03.5
0C7A:  MOVWF  38
0C7B:  MOVF   78,W
0C7C:  MOVWF  39
0C7D:  MOVF   79,W
0C7E:  MOVWF  3A
0C7F:  MOVF   7A,W
0C80:  MOVWF  3B
0C81:  MOVWF  3F
0C82:  MOVF   3A,W
0C83:  MOVWF  3E
0C84:  MOVF   39,W
0C85:  MOVWF  3D
0C86:  MOVF   38,W
0C87:  MOVWF  3C
0C88:  CLRF   43
0C89:  CLRF   42
0C8A:  MOVLW  20
0C8B:  MOVWF  41
0C8C:  MOVLW  82
0C8D:  MOVWF  40
0C8E:  BCF    0A.3
0C8F:  BCF    03.5
0C90:  CALL   51A
0C91:  BSF    0A.3
0C92:  MOVF   7A,W
0C93:  BSF    03.5
0C94:  MOVWF  3F
0C95:  MOVF   79,W
0C96:  MOVWF  3E
0C97:  MOVF   78,W
0C98:  MOVWF  3D
0C99:  MOVF   77,W
0C9A:  MOVWF  3C
0C9B:  BCF    0A.3
0C9C:  BCF    03.5
0C9D:  CALL   5E6
0C9E:  BSF    0A.3
0C9F:  MOVF   7A,W
0CA0:  MOVWF  76
0CA1:  MOVF   79,W
0CA2:  MOVWF  75
0CA3:  MOVF   78,W
0CA4:  MOVWF  74
0CA5:  MOVF   77,W
0CA6:  MOVWF  73
....................  
....................       else if(ref2>55 && ref2<=79)                         //>100 to 150AMP 
0CA7:  GOTO   7CA
0CA8:  MOVF   76,F
0CA9:  BTFSS  03.2
0CAA:  GOTO   4B5
0CAB:  MOVF   75,F
0CAC:  BTFSS  03.2
0CAD:  GOTO   4B5
0CAE:  MOVF   74,F
0CAF:  BTFSS  03.2
0CB0:  GOTO   4B5
0CB1:  MOVF   73,W
0CB2:  SUBLW  37
0CB3:  BTFSC  03.0
0CB4:  GOTO   543
0CB5:  MOVF   76,F
0CB6:  BTFSS  03.2
0CB7:  GOTO   543
0CB8:  MOVF   75,F
0CB9:  BTFSS  03.2
0CBA:  GOTO   543
0CBB:  MOVF   74,F
0CBC:  BTFSS  03.2
0CBD:  GOTO   543
0CBE:  MOVF   73,W
0CBF:  SUBLW  4F
0CC0:  BTFSS  03.0
0CC1:  GOTO   543
....................            ref2=((((ref2-55)*20.42)+1000))/10;    //999 
0CC2:  MOVLW  37
0CC3:  SUBWF  73,W
0CC4:  BSF    03.5
0CC5:  MOVWF  30
0CC6:  MOVF   74,W
0CC7:  MOVWF  31
0CC8:  MOVLW  00
0CC9:  BTFSS  03.0
0CCA:  MOVLW  01
0CCB:  SUBWF  31,F
0CCC:  MOVF   75,W
0CCD:  MOVWF  32
0CCE:  MOVLW  00
0CCF:  BTFSS  03.0
0CD0:  MOVLW  01
0CD1:  SUBWF  32,F
0CD2:  MOVF   76,W
0CD3:  MOVWF  33
0CD4:  MOVLW  00
0CD5:  BTFSS  03.0
0CD6:  MOVLW  01
0CD7:  SUBWF  33,F
0CD8:  MOVF   33,W
0CD9:  MOVWF  37
0CDA:  MOVF   32,W
0CDB:  MOVWF  36
0CDC:  MOVF   31,W
0CDD:  MOVWF  35
0CDE:  MOVF   30,W
0CDF:  MOVWF  34
0CE0:  BCF    0A.3
0CE1:  BCF    03.5
0CE2:  CALL   422
0CE3:  BSF    0A.3
0CE4:  MOVF   7A,W
0CE5:  BSF    03.5
0CE6:  MOVWF  37
0CE7:  MOVF   79,W
0CE8:  MOVWF  36
0CE9:  MOVF   78,W
0CEA:  MOVWF  35
0CEB:  MOVF   77,W
0CEC:  MOVWF  34
0CED:  MOVLW  29
0CEE:  MOVWF  3B
0CEF:  MOVLW  5C
0CF0:  MOVWF  3A
0CF1:  MOVLW  23
0CF2:  MOVWF  39
0CF3:  MOVLW  83
0CF4:  MOVWF  38
0CF5:  BCF    0A.3
0CF6:  BCF    03.5
0CF7:  CALL   4A3
0CF8:  BSF    0A.3
0CF9:  MOVF   77,W
0CFA:  BSF    03.5
0CFB:  MOVWF  34
0CFC:  MOVF   78,W
0CFD:  MOVWF  35
0CFE:  MOVF   79,W
0CFF:  MOVWF  36
0D00:  MOVF   7A,W
0D01:  MOVWF  37
0D02:  BCF    03.1
0D03:  MOVF   37,W
0D04:  MOVWF  3B
0D05:  MOVF   36,W
0D06:  MOVWF  3A
0D07:  MOVF   35,W
0D08:  MOVWF  39
0D09:  MOVF   34,W
0D0A:  MOVWF  38
0D0B:  CLRF   3F
0D0C:  CLRF   3E
0D0D:  MOVLW  7A
0D0E:  MOVWF  3D
0D0F:  MOVLW  88
0D10:  MOVWF  3C
0D11:  BCF    03.5
0D12:  CALL   24E
0D13:  MOVF   77,W
0D14:  BSF    03.5
0D15:  MOVWF  38
0D16:  MOVF   78,W
0D17:  MOVWF  39
0D18:  MOVF   79,W
0D19:  MOVWF  3A
0D1A:  MOVF   7A,W
0D1B:  MOVWF  3B
0D1C:  MOVWF  3F
0D1D:  MOVF   3A,W
0D1E:  MOVWF  3E
0D1F:  MOVF   39,W
0D20:  MOVWF  3D
0D21:  MOVF   38,W
0D22:  MOVWF  3C
0D23:  CLRF   43
0D24:  CLRF   42
0D25:  MOVLW  20
0D26:  MOVWF  41
0D27:  MOVLW  82
0D28:  MOVWF  40
0D29:  BCF    0A.3
0D2A:  BCF    03.5
0D2B:  CALL   51A
0D2C:  BSF    0A.3
0D2D:  MOVF   7A,W
0D2E:  BSF    03.5
0D2F:  MOVWF  3F
0D30:  MOVF   79,W
0D31:  MOVWF  3E
0D32:  MOVF   78,W
0D33:  MOVWF  3D
0D34:  MOVF   77,W
0D35:  MOVWF  3C
0D36:  BCF    0A.3
0D37:  BCF    03.5
0D38:  CALL   5E6
0D39:  BSF    0A.3
0D3A:  MOVF   7A,W
0D3B:  MOVWF  76
0D3C:  MOVF   79,W
0D3D:  MOVWF  75
0D3E:  MOVF   78,W
0D3F:  MOVWF  74
0D40:  MOVF   77,W
0D41:  MOVWF  73
....................  
....................       else if(ref2>79 && ref2<=125)                         //>150 to 250AMP 
0D42:  GOTO   7CA
0D43:  MOVF   76,F
0D44:  BTFSS  03.2
0D45:  GOTO   550
0D46:  MOVF   75,F
0D47:  BTFSS  03.2
0D48:  GOTO   550
0D49:  MOVF   74,F
0D4A:  BTFSS  03.2
0D4B:  GOTO   550
0D4C:  MOVF   73,W
0D4D:  SUBLW  4F
0D4E:  BTFSC  03.0
0D4F:  GOTO   5DF
0D50:  MOVF   76,F
0D51:  BTFSS  03.2
0D52:  GOTO   5DF
0D53:  MOVF   75,F
0D54:  BTFSS  03.2
0D55:  GOTO   5DF
0D56:  MOVF   74,F
0D57:  BTFSS  03.2
0D58:  GOTO   5DF
0D59:  MOVF   73,W
0D5A:  SUBLW  7D
0D5B:  BTFSS  03.0
0D5C:  GOTO   5DF
....................            ref2=((((ref2-79)*21.78)+1500))/10;    //1487 
0D5D:  MOVLW  4F
0D5E:  SUBWF  73,W
0D5F:  BSF    03.5
0D60:  MOVWF  30
0D61:  MOVF   74,W
0D62:  MOVWF  31
0D63:  MOVLW  00
0D64:  BTFSS  03.0
0D65:  MOVLW  01
0D66:  SUBWF  31,F
0D67:  MOVF   75,W
0D68:  MOVWF  32
0D69:  MOVLW  00
0D6A:  BTFSS  03.0
0D6B:  MOVLW  01
0D6C:  SUBWF  32,F
0D6D:  MOVF   76,W
0D6E:  MOVWF  33
0D6F:  MOVLW  00
0D70:  BTFSS  03.0
0D71:  MOVLW  01
0D72:  SUBWF  33,F
0D73:  MOVF   33,W
0D74:  MOVWF  37
0D75:  MOVF   32,W
0D76:  MOVWF  36
0D77:  MOVF   31,W
0D78:  MOVWF  35
0D79:  MOVF   30,W
0D7A:  MOVWF  34
0D7B:  BCF    0A.3
0D7C:  BCF    03.5
0D7D:  CALL   422
0D7E:  BSF    0A.3
0D7F:  MOVF   7A,W
0D80:  BSF    03.5
0D81:  MOVWF  37
0D82:  MOVF   79,W
0D83:  MOVWF  36
0D84:  MOVF   78,W
0D85:  MOVWF  35
0D86:  MOVF   77,W
0D87:  MOVWF  34
0D88:  MOVLW  71
0D89:  MOVWF  3B
0D8A:  MOVLW  3D
0D8B:  MOVWF  3A
0D8C:  MOVLW  2E
0D8D:  MOVWF  39
0D8E:  MOVLW  83
0D8F:  MOVWF  38
0D90:  BCF    0A.3
0D91:  BCF    03.5
0D92:  CALL   4A3
0D93:  BSF    0A.3
0D94:  MOVF   77,W
0D95:  BSF    03.5
0D96:  MOVWF  34
0D97:  MOVF   78,W
0D98:  MOVWF  35
0D99:  MOVF   79,W
0D9A:  MOVWF  36
0D9B:  MOVF   7A,W
0D9C:  MOVWF  37
0D9D:  BCF    03.1
0D9E:  MOVF   37,W
0D9F:  MOVWF  3B
0DA0:  MOVF   36,W
0DA1:  MOVWF  3A
0DA2:  MOVF   35,W
0DA3:  MOVWF  39
0DA4:  MOVF   34,W
0DA5:  MOVWF  38
0DA6:  CLRF   3F
0DA7:  MOVLW  80
0DA8:  MOVWF  3E
0DA9:  MOVLW  3B
0DAA:  MOVWF  3D
0DAB:  MOVLW  89
0DAC:  MOVWF  3C
0DAD:  BCF    03.5
0DAE:  CALL   24E
0DAF:  MOVF   77,W
0DB0:  BSF    03.5
0DB1:  MOVWF  38
0DB2:  MOVF   78,W
0DB3:  MOVWF  39
0DB4:  MOVF   79,W
0DB5:  MOVWF  3A
0DB6:  MOVF   7A,W
0DB7:  MOVWF  3B
0DB8:  MOVWF  3F
0DB9:  MOVF   3A,W
0DBA:  MOVWF  3E
0DBB:  MOVF   39,W
0DBC:  MOVWF  3D
0DBD:  MOVF   38,W
0DBE:  MOVWF  3C
0DBF:  CLRF   43
0DC0:  CLRF   42
0DC1:  MOVLW  20
0DC2:  MOVWF  41
0DC3:  MOVLW  82
0DC4:  MOVWF  40
0DC5:  BCF    0A.3
0DC6:  BCF    03.5
0DC7:  CALL   51A
0DC8:  BSF    0A.3
0DC9:  MOVF   7A,W
0DCA:  BSF    03.5
0DCB:  MOVWF  3F
0DCC:  MOVF   79,W
0DCD:  MOVWF  3E
0DCE:  MOVF   78,W
0DCF:  MOVWF  3D
0DD0:  MOVF   77,W
0DD1:  MOVWF  3C
0DD2:  BCF    0A.3
0DD3:  BCF    03.5
0DD4:  CALL   5E6
0DD5:  BSF    0A.3
0DD6:  MOVF   7A,W
0DD7:  MOVWF  76
0DD8:  MOVF   79,W
0DD9:  MOVWF  75
0DDA:  MOVF   78,W
0DDB:  MOVWF  74
0DDC:  MOVF   77,W
0DDD:  MOVWF  73
....................  
....................       else if(ref2>125 && ref2<=200)                        //>250 to 400AMP 
0DDE:  GOTO   7CA
0DDF:  MOVF   76,F
0DE0:  BTFSS  03.2
0DE1:  GOTO   5EC
0DE2:  MOVF   75,F
0DE3:  BTFSS  03.2
0DE4:  GOTO   5EC
0DE5:  MOVF   74,F
0DE6:  BTFSS  03.2
0DE7:  GOTO   5EC
0DE8:  MOVF   73,W
0DE9:  SUBLW  7D
0DEA:  BTFSC  03.0
0DEB:  GOTO   679
0DEC:  MOVF   76,F
0DED:  BTFSS  03.2
0DEE:  GOTO   679
0DEF:  MOVF   75,F
0DF0:  BTFSS  03.2
0DF1:  GOTO   679
0DF2:  MOVF   74,F
0DF3:  BTFSS  03.2
0DF4:  GOTO   679
0DF5:  MOVF   73,W
0DF6:  SUBLW  C8
0DF7:  BTFSS  03.0
0DF8:  GOTO   679
....................            ref2=((((ref2-125)*20.50)+2500))/10;    //2487 
0DF9:  MOVLW  7D
0DFA:  SUBWF  73,W
0DFB:  BSF    03.5
0DFC:  MOVWF  30
0DFD:  MOVF   74,W
0DFE:  MOVWF  31
0DFF:  MOVLW  00
0E00:  BTFSS  03.0
0E01:  MOVLW  01
0E02:  SUBWF  31,F
0E03:  MOVF   75,W
0E04:  MOVWF  32
0E05:  MOVLW  00
0E06:  BTFSS  03.0
0E07:  MOVLW  01
0E08:  SUBWF  32,F
0E09:  MOVF   76,W
0E0A:  MOVWF  33
0E0B:  MOVLW  00
0E0C:  BTFSS  03.0
0E0D:  MOVLW  01
0E0E:  SUBWF  33,F
0E0F:  MOVF   33,W
0E10:  MOVWF  37
0E11:  MOVF   32,W
0E12:  MOVWF  36
0E13:  MOVF   31,W
0E14:  MOVWF  35
0E15:  MOVF   30,W
0E16:  MOVWF  34
0E17:  BCF    0A.3
0E18:  BCF    03.5
0E19:  CALL   422
0E1A:  BSF    0A.3
0E1B:  MOVF   7A,W
0E1C:  BSF    03.5
0E1D:  MOVWF  37
0E1E:  MOVF   79,W
0E1F:  MOVWF  36
0E20:  MOVF   78,W
0E21:  MOVWF  35
0E22:  MOVF   77,W
0E23:  MOVWF  34
0E24:  CLRF   3B
0E25:  CLRF   3A
0E26:  MOVLW  24
0E27:  MOVWF  39
0E28:  MOVLW  83
0E29:  MOVWF  38
0E2A:  BCF    0A.3
0E2B:  BCF    03.5
0E2C:  CALL   4A3
0E2D:  BSF    0A.3
0E2E:  MOVF   77,W
0E2F:  BSF    03.5
0E30:  MOVWF  34
0E31:  MOVF   78,W
0E32:  MOVWF  35
0E33:  MOVF   79,W
0E34:  MOVWF  36
0E35:  MOVF   7A,W
0E36:  MOVWF  37
0E37:  BCF    03.1
0E38:  MOVF   37,W
0E39:  MOVWF  3B
0E3A:  MOVF   36,W
0E3B:  MOVWF  3A
0E3C:  MOVF   35,W
0E3D:  MOVWF  39
0E3E:  MOVF   34,W
0E3F:  MOVWF  38
0E40:  CLRF   3F
0E41:  MOVLW  40
0E42:  MOVWF  3E
0E43:  MOVLW  1C
0E44:  MOVWF  3D
0E45:  MOVLW  8A
0E46:  MOVWF  3C
0E47:  BCF    03.5
0E48:  CALL   24E
0E49:  MOVF   77,W
0E4A:  BSF    03.5
0E4B:  MOVWF  38
0E4C:  MOVF   78,W
0E4D:  MOVWF  39
0E4E:  MOVF   79,W
0E4F:  MOVWF  3A
0E50:  MOVF   7A,W
0E51:  MOVWF  3B
0E52:  MOVWF  3F
0E53:  MOVF   3A,W
0E54:  MOVWF  3E
0E55:  MOVF   39,W
0E56:  MOVWF  3D
0E57:  MOVF   38,W
0E58:  MOVWF  3C
0E59:  CLRF   43
0E5A:  CLRF   42
0E5B:  MOVLW  20
0E5C:  MOVWF  41
0E5D:  MOVLW  82
0E5E:  MOVWF  40
0E5F:  BCF    0A.3
0E60:  BCF    03.5
0E61:  CALL   51A
0E62:  BSF    0A.3
0E63:  MOVF   7A,W
0E64:  BSF    03.5
0E65:  MOVWF  3F
0E66:  MOVF   79,W
0E67:  MOVWF  3E
0E68:  MOVF   78,W
0E69:  MOVWF  3D
0E6A:  MOVF   77,W
0E6B:  MOVWF  3C
0E6C:  BCF    0A.3
0E6D:  BCF    03.5
0E6E:  CALL   5E6
0E6F:  BSF    0A.3
0E70:  MOVF   7A,W
0E71:  MOVWF  76
0E72:  MOVF   79,W
0E73:  MOVWF  75
0E74:  MOVF   78,W
0E75:  MOVWF  74
0E76:  MOVF   77,W
0E77:  MOVWF  73
....................  
....................       else if(ref2>200 && ref2<=248)                        //>400 to 500AMP 
0E78:  GOTO   7CA
0E79:  MOVF   76,F
0E7A:  BTFSS  03.2
0E7B:  GOTO   686
0E7C:  MOVF   75,F
0E7D:  BTFSS  03.2
0E7E:  GOTO   686
0E7F:  MOVF   74,F
0E80:  BTFSS  03.2
0E81:  GOTO   686
0E82:  MOVF   73,W
0E83:  SUBLW  C8
0E84:  BTFSC  03.0
0E85:  GOTO   714
0E86:  MOVF   76,F
0E87:  BTFSS  03.2
0E88:  GOTO   714
0E89:  MOVF   75,F
0E8A:  BTFSS  03.2
0E8B:  GOTO   714
0E8C:  MOVF   74,F
0E8D:  BTFSS  03.2
0E8E:  GOTO   714
0E8F:  MOVF   73,W
0E90:  SUBLW  F8
0E91:  BTFSS  03.0
0E92:  GOTO   714
....................            ref2=((((ref2-200)*20.24)+4000))/10; 
0E93:  MOVLW  C8
0E94:  SUBWF  73,W
0E95:  BSF    03.5
0E96:  MOVWF  30
0E97:  MOVF   74,W
0E98:  MOVWF  31
0E99:  MOVLW  00
0E9A:  BTFSS  03.0
0E9B:  MOVLW  01
0E9C:  SUBWF  31,F
0E9D:  MOVF   75,W
0E9E:  MOVWF  32
0E9F:  MOVLW  00
0EA0:  BTFSS  03.0
0EA1:  MOVLW  01
0EA2:  SUBWF  32,F
0EA3:  MOVF   76,W
0EA4:  MOVWF  33
0EA5:  MOVLW  00
0EA6:  BTFSS  03.0
0EA7:  MOVLW  01
0EA8:  SUBWF  33,F
0EA9:  MOVF   33,W
0EAA:  MOVWF  37
0EAB:  MOVF   32,W
0EAC:  MOVWF  36
0EAD:  MOVF   31,W
0EAE:  MOVWF  35
0EAF:  MOVF   30,W
0EB0:  MOVWF  34
0EB1:  BCF    0A.3
0EB2:  BCF    03.5
0EB3:  CALL   422
0EB4:  BSF    0A.3
0EB5:  MOVF   7A,W
0EB6:  BSF    03.5
0EB7:  MOVWF  37
0EB8:  MOVF   79,W
0EB9:  MOVWF  36
0EBA:  MOVF   78,W
0EBB:  MOVWF  35
0EBC:  MOVF   77,W
0EBD:  MOVWF  34
0EBE:  MOVLW  85
0EBF:  MOVWF  3B
0EC0:  MOVLW  EB
0EC1:  MOVWF  3A
0EC2:  MOVLW  21
0EC3:  MOVWF  39
0EC4:  MOVLW  83
0EC5:  MOVWF  38
0EC6:  BCF    0A.3
0EC7:  BCF    03.5
0EC8:  CALL   4A3
0EC9:  BSF    0A.3
0ECA:  MOVF   77,W
0ECB:  BSF    03.5
0ECC:  MOVWF  34
0ECD:  MOVF   78,W
0ECE:  MOVWF  35
0ECF:  MOVF   79,W
0ED0:  MOVWF  36
0ED1:  MOVF   7A,W
0ED2:  MOVWF  37
0ED3:  BCF    03.1
0ED4:  MOVF   37,W
0ED5:  MOVWF  3B
0ED6:  MOVF   36,W
0ED7:  MOVWF  3A
0ED8:  MOVF   35,W
0ED9:  MOVWF  39
0EDA:  MOVF   34,W
0EDB:  MOVWF  38
0EDC:  CLRF   3F
0EDD:  CLRF   3E
0EDE:  MOVLW  7A
0EDF:  MOVWF  3D
0EE0:  MOVLW  8A
0EE1:  MOVWF  3C
0EE2:  BCF    03.5
0EE3:  CALL   24E
0EE4:  MOVF   77,W
0EE5:  BSF    03.5
0EE6:  MOVWF  38
0EE7:  MOVF   78,W
0EE8:  MOVWF  39
0EE9:  MOVF   79,W
0EEA:  MOVWF  3A
0EEB:  MOVF   7A,W
0EEC:  MOVWF  3B
0EED:  MOVWF  3F
0EEE:  MOVF   3A,W
0EEF:  MOVWF  3E
0EF0:  MOVF   39,W
0EF1:  MOVWF  3D
0EF2:  MOVF   38,W
0EF3:  MOVWF  3C
0EF4:  CLRF   43
0EF5:  CLRF   42
0EF6:  MOVLW  20
0EF7:  MOVWF  41
0EF8:  MOVLW  82
0EF9:  MOVWF  40
0EFA:  BCF    0A.3
0EFB:  BCF    03.5
0EFC:  CALL   51A
0EFD:  BSF    0A.3
0EFE:  MOVF   7A,W
0EFF:  BSF    03.5
0F00:  MOVWF  3F
0F01:  MOVF   79,W
0F02:  MOVWF  3E
0F03:  MOVF   78,W
0F04:  MOVWF  3D
0F05:  MOVF   77,W
0F06:  MOVWF  3C
0F07:  BCF    0A.3
0F08:  BCF    03.5
0F09:  CALL   5E6
0F0A:  BSF    0A.3
0F0B:  MOVF   7A,W
0F0C:  MOVWF  76
0F0D:  MOVF   79,W
0F0E:  MOVWF  75
0F0F:  MOVF   78,W
0F10:  MOVWF  74
0F11:  MOVF   77,W
0F12:  MOVWF  73
....................  
....................       else if(ref2>248 && ref2<=302)                        //>500 to 600AMP 
0F13:  GOTO   7CA
0F14:  MOVF   76,F
0F15:  BTFSS  03.2
0F16:  GOTO   721
0F17:  MOVF   75,F
0F18:  BTFSS  03.2
0F19:  GOTO   721
0F1A:  MOVF   74,F
0F1B:  BTFSS  03.2
0F1C:  GOTO   721
0F1D:  MOVF   73,W
0F1E:  SUBLW  F8
0F1F:  BTFSC  03.0
0F20:  GOTO   7B3
0F21:  MOVF   76,F
0F22:  BTFSS  03.2
0F23:  GOTO   7B3
0F24:  MOVF   75,F
0F25:  BTFSS  03.2
0F26:  GOTO   7B3
0F27:  MOVF   74,W
0F28:  SUBLW  01
0F29:  BTFSS  03.0
0F2A:  GOTO   7B3
0F2B:  BTFSS  03.2
0F2C:  GOTO   731
0F2D:  MOVF   73,W
0F2E:  SUBLW  2E
0F2F:  BTFSS  03.0
0F30:  GOTO   7B3
....................            ref2=((((ref2-248)*18.76)+5000))/10; 
0F31:  MOVLW  F8
0F32:  SUBWF  73,W
0F33:  BSF    03.5
0F34:  MOVWF  30
0F35:  MOVF   74,W
0F36:  MOVWF  31
0F37:  MOVLW  00
0F38:  BTFSS  03.0
0F39:  MOVLW  01
0F3A:  SUBWF  31,F
0F3B:  MOVF   75,W
0F3C:  MOVWF  32
0F3D:  MOVLW  00
0F3E:  BTFSS  03.0
0F3F:  MOVLW  01
0F40:  SUBWF  32,F
0F41:  MOVF   76,W
0F42:  MOVWF  33
0F43:  MOVLW  00
0F44:  BTFSS  03.0
0F45:  MOVLW  01
0F46:  SUBWF  33,F
0F47:  MOVF   33,W
0F48:  MOVWF  37
0F49:  MOVF   32,W
0F4A:  MOVWF  36
0F4B:  MOVF   31,W
0F4C:  MOVWF  35
0F4D:  MOVF   30,W
0F4E:  MOVWF  34
0F4F:  BCF    0A.3
0F50:  BCF    03.5
0F51:  CALL   422
0F52:  BSF    0A.3
0F53:  MOVF   7A,W
0F54:  BSF    03.5
0F55:  MOVWF  37
0F56:  MOVF   79,W
0F57:  MOVWF  36
0F58:  MOVF   78,W
0F59:  MOVWF  35
0F5A:  MOVF   77,W
0F5B:  MOVWF  34
0F5C:  MOVLW  7B
0F5D:  MOVWF  3B
0F5E:  MOVLW  14
0F5F:  MOVWF  3A
0F60:  MOVLW  16
0F61:  MOVWF  39
0F62:  MOVLW  83
0F63:  MOVWF  38
0F64:  BCF    0A.3
0F65:  BCF    03.5
0F66:  CALL   4A3
0F67:  BSF    0A.3
0F68:  MOVF   77,W
0F69:  BSF    03.5
0F6A:  MOVWF  34
0F6B:  MOVF   78,W
0F6C:  MOVWF  35
0F6D:  MOVF   79,W
0F6E:  MOVWF  36
0F6F:  MOVF   7A,W
0F70:  MOVWF  37
0F71:  BCF    03.1
0F72:  MOVF   37,W
0F73:  MOVWF  3B
0F74:  MOVF   36,W
0F75:  MOVWF  3A
0F76:  MOVF   35,W
0F77:  MOVWF  39
0F78:  MOVF   34,W
0F79:  MOVWF  38
0F7A:  CLRF   3F
0F7B:  MOVLW  40
0F7C:  MOVWF  3E
0F7D:  MOVLW  1C
0F7E:  MOVWF  3D
0F7F:  MOVLW  8B
0F80:  MOVWF  3C
0F81:  BCF    03.5
0F82:  CALL   24E
0F83:  MOVF   77,W
0F84:  BSF    03.5
0F85:  MOVWF  38
0F86:  MOVF   78,W
0F87:  MOVWF  39
0F88:  MOVF   79,W
0F89:  MOVWF  3A
0F8A:  MOVF   7A,W
0F8B:  MOVWF  3B
0F8C:  MOVWF  3F
0F8D:  MOVF   3A,W
0F8E:  MOVWF  3E
0F8F:  MOVF   39,W
0F90:  MOVWF  3D
0F91:  MOVF   38,W
0F92:  MOVWF  3C
0F93:  CLRF   43
0F94:  CLRF   42
0F95:  MOVLW  20
0F96:  MOVWF  41
0F97:  MOVLW  82
0F98:  MOVWF  40
0F99:  BCF    0A.3
0F9A:  BCF    03.5
0F9B:  CALL   51A
0F9C:  BSF    0A.3
0F9D:  MOVF   7A,W
0F9E:  BSF    03.5
0F9F:  MOVWF  3F
0FA0:  MOVF   79,W
0FA1:  MOVWF  3E
0FA2:  MOVF   78,W
0FA3:  MOVWF  3D
0FA4:  MOVF   77,W
0FA5:  MOVWF  3C
0FA6:  BCF    0A.3
0FA7:  BCF    03.5
0FA8:  CALL   5E6
0FA9:  BSF    0A.3
0FAA:  MOVF   7A,W
0FAB:  MOVWF  76
0FAC:  MOVF   79,W
0FAD:  MOVWF  75
0FAE:  MOVF   78,W
0FAF:  MOVWF  74
0FB0:  MOVF   77,W
0FB1:  MOVWF  73
....................  
....................       else if(ref2>302) 
0FB2:  GOTO   7CA
0FB3:  MOVF   76,F
0FB4:  BTFSS  03.2
0FB5:  GOTO   7C4
0FB6:  MOVF   75,F
0FB7:  BTFSS  03.2
0FB8:  GOTO   7C4
0FB9:  MOVF   74,W
0FBA:  SUBLW  00
0FBB:  BTFSC  03.0
0FBC:  GOTO   7CA
0FBD:  XORLW  FF
0FBE:  BTFSS  03.2
0FBF:  GOTO   7C4
0FC0:  MOVF   73,W
0FC1:  SUBLW  2E
0FC2:  BTFSC  03.0
0FC3:  GOTO   7CA
....................            ref2=600; 
0FC4:  CLRF   76
0FC5:  CLRF   75
0FC6:  MOVLW  02
0FC7:  MOVWF  74
0FC8:  MOVLW  58
0FC9:  MOVWF  73
.................... } 
0FCA:  BCF    0A.3
0FCB:  BSF    0A.4
0FCC:  GOTO   503 (RETURN)
....................  
.................... void SetCurrentCal_400(void) 
.................... { 
....................       if(ref2>=0 && ref2<=32)                              //10 to 50AMP 
*
1000:  MOVF   76,F
1001:  BTFSS  03.2
1002:  GOTO   07D
1003:  MOVF   75,F
1004:  BTFSS  03.2
1005:  GOTO   07D
1006:  MOVF   74,F
1007:  BTFSS  03.2
1008:  GOTO   07D
1009:  MOVF   73,W
100A:  SUBLW  20
100B:  BTFSS  03.0
100C:  GOTO   07D
....................            ref2=(((ref2*12.66)+100))/10; 
100D:  MOVF   76,W
100E:  BSF    03.5
100F:  MOVWF  37
1010:  MOVF   75,W
1011:  MOVWF  36
1012:  MOVF   74,W
1013:  MOVWF  35
1014:  MOVF   73,W
1015:  MOVWF  34
1016:  BCF    0A.4
1017:  BCF    03.5
1018:  CALL   422
1019:  BSF    0A.4
101A:  MOVF   7A,W
101B:  BSF    03.5
101C:  MOVWF  37
101D:  MOVF   79,W
101E:  MOVWF  36
101F:  MOVF   78,W
1020:  MOVWF  35
1021:  MOVF   77,W
1022:  MOVWF  34
1023:  MOVLW  5C
1024:  MOVWF  3B
1025:  MOVLW  8F
1026:  MOVWF  3A
1027:  MOVLW  4A
1028:  MOVWF  39
1029:  MOVLW  82
102A:  MOVWF  38
102B:  BCF    0A.4
102C:  BCF    03.5
102D:  CALL   4A3
102E:  BSF    0A.4
102F:  MOVF   77,W
1030:  BSF    03.5
1031:  MOVWF  30
1032:  MOVF   78,W
1033:  MOVWF  31
1034:  MOVF   79,W
1035:  MOVWF  32
1036:  MOVF   7A,W
1037:  MOVWF  33
1038:  BCF    03.1
1039:  MOVF   33,W
103A:  MOVWF  3B
103B:  MOVF   32,W
103C:  MOVWF  3A
103D:  MOVF   31,W
103E:  MOVWF  39
103F:  MOVF   30,W
1040:  MOVWF  38
1041:  CLRF   3F
1042:  CLRF   3E
1043:  MOVLW  48
1044:  MOVWF  3D
1045:  MOVLW  85
1046:  MOVWF  3C
1047:  BCF    0A.4
1048:  BSF    0A.3
1049:  BCF    03.5
104A:  CALL   24E
104B:  BSF    0A.4
104C:  BCF    0A.3
104D:  MOVF   77,W
104E:  BSF    03.5
104F:  MOVWF  34
1050:  MOVF   78,W
1051:  MOVWF  35
1052:  MOVF   79,W
1053:  MOVWF  36
1054:  MOVF   7A,W
1055:  MOVWF  37
1056:  MOVWF  3F
1057:  MOVF   36,W
1058:  MOVWF  3E
1059:  MOVF   35,W
105A:  MOVWF  3D
105B:  MOVF   34,W
105C:  MOVWF  3C
105D:  CLRF   43
105E:  CLRF   42
105F:  MOVLW  20
1060:  MOVWF  41
1061:  MOVLW  82
1062:  MOVWF  40
1063:  BCF    0A.4
1064:  BCF    03.5
1065:  CALL   51A
1066:  BSF    0A.4
1067:  MOVF   7A,W
1068:  BSF    03.5
1069:  MOVWF  3F
106A:  MOVF   79,W
106B:  MOVWF  3E
106C:  MOVF   78,W
106D:  MOVWF  3D
106E:  MOVF   77,W
106F:  MOVWF  3C
1070:  BCF    0A.4
1071:  BCF    03.5
1072:  CALL   5E6
1073:  BSF    0A.4
1074:  MOVF   7A,W
1075:  MOVWF  76
1076:  MOVF   79,W
1077:  MOVWF  75
1078:  MOVF   78,W
1079:  MOVWF  74
107A:  MOVF   77,W
107B:  MOVWF  73
....................  
....................       else if(ref2>32 && ref2<=72)                         //>50 to 100AMP 
107C:  GOTO   3B2
107D:  MOVF   76,F
107E:  BTFSS  03.2
107F:  GOTO   08A
1080:  MOVF   75,F
1081:  BTFSS  03.2
1082:  GOTO   08A
1083:  MOVF   74,F
1084:  BTFSS  03.2
1085:  GOTO   08A
1086:  MOVF   73,W
1087:  SUBLW  20
1088:  BTFSC  03.0
1089:  GOTO   11C
108A:  MOVF   76,F
108B:  BTFSS  03.2
108C:  GOTO   11C
108D:  MOVF   75,F
108E:  BTFSS  03.2
108F:  GOTO   11C
1090:  MOVF   74,F
1091:  BTFSS  03.2
1092:  GOTO   11C
1093:  MOVF   73,W
1094:  SUBLW  48
1095:  BTFSS  03.0
1096:  GOTO   11C
....................            ref2=((((ref2-32)*11.60)+500))/10; 
1097:  MOVLW  20
1098:  SUBWF  73,W
1099:  BSF    03.5
109A:  MOVWF  30
109B:  MOVF   74,W
109C:  MOVWF  31
109D:  MOVLW  00
109E:  BTFSS  03.0
109F:  MOVLW  01
10A0:  SUBWF  31,F
10A1:  MOVF   75,W
10A2:  MOVWF  32
10A3:  MOVLW  00
10A4:  BTFSS  03.0
10A5:  MOVLW  01
10A6:  SUBWF  32,F
10A7:  MOVF   76,W
10A8:  MOVWF  33
10A9:  MOVLW  00
10AA:  BTFSS  03.0
10AB:  MOVLW  01
10AC:  SUBWF  33,F
10AD:  MOVF   33,W
10AE:  MOVWF  37
10AF:  MOVF   32,W
10B0:  MOVWF  36
10B1:  MOVF   31,W
10B2:  MOVWF  35
10B3:  MOVF   30,W
10B4:  MOVWF  34
10B5:  BCF    0A.4
10B6:  BCF    03.5
10B7:  CALL   422
10B8:  BSF    0A.4
10B9:  MOVF   7A,W
10BA:  BSF    03.5
10BB:  MOVWF  37
10BC:  MOVF   79,W
10BD:  MOVWF  36
10BE:  MOVF   78,W
10BF:  MOVWF  35
10C0:  MOVF   77,W
10C1:  MOVWF  34
10C2:  MOVLW  9A
10C3:  MOVWF  3B
10C4:  MOVLW  99
10C5:  MOVWF  3A
10C6:  MOVLW  39
10C7:  MOVWF  39
10C8:  MOVLW  82
10C9:  MOVWF  38
10CA:  BCF    0A.4
10CB:  BCF    03.5
10CC:  CALL   4A3
10CD:  BSF    0A.4
10CE:  MOVF   77,W
10CF:  BSF    03.5
10D0:  MOVWF  34
10D1:  MOVF   78,W
10D2:  MOVWF  35
10D3:  MOVF   79,W
10D4:  MOVWF  36
10D5:  MOVF   7A,W
10D6:  MOVWF  37
10D7:  BCF    03.1
10D8:  MOVF   37,W
10D9:  MOVWF  3B
10DA:  MOVF   36,W
10DB:  MOVWF  3A
10DC:  MOVF   35,W
10DD:  MOVWF  39
10DE:  MOVF   34,W
10DF:  MOVWF  38
10E0:  CLRF   3F
10E1:  CLRF   3E
10E2:  MOVLW  7A
10E3:  MOVWF  3D
10E4:  MOVLW  87
10E5:  MOVWF  3C
10E6:  BCF    0A.4
10E7:  BSF    0A.3
10E8:  BCF    03.5
10E9:  CALL   24E
10EA:  BSF    0A.4
10EB:  BCF    0A.3
10EC:  MOVF   77,W
10ED:  BSF    03.5
10EE:  MOVWF  38
10EF:  MOVF   78,W
10F0:  MOVWF  39
10F1:  MOVF   79,W
10F2:  MOVWF  3A
10F3:  MOVF   7A,W
10F4:  MOVWF  3B
10F5:  MOVWF  3F
10F6:  MOVF   3A,W
10F7:  MOVWF  3E
10F8:  MOVF   39,W
10F9:  MOVWF  3D
10FA:  MOVF   38,W
10FB:  MOVWF  3C
10FC:  CLRF   43
10FD:  CLRF   42
10FE:  MOVLW  20
10FF:  MOVWF  41
1100:  MOVLW  82
1101:  MOVWF  40
1102:  BCF    0A.4
1103:  BCF    03.5
1104:  CALL   51A
1105:  BSF    0A.4
1106:  MOVF   7A,W
1107:  BSF    03.5
1108:  MOVWF  3F
1109:  MOVF   79,W
110A:  MOVWF  3E
110B:  MOVF   78,W
110C:  MOVWF  3D
110D:  MOVF   77,W
110E:  MOVWF  3C
110F:  BCF    0A.4
1110:  BCF    03.5
1111:  CALL   5E6
1112:  BSF    0A.4
1113:  MOVF   7A,W
1114:  MOVWF  76
1115:  MOVF   79,W
1116:  MOVWF  75
1117:  MOVF   78,W
1118:  MOVWF  74
1119:  MOVF   77,W
111A:  MOVWF  73
....................  
....................       else if(ref2>72 && ref2<=110)                        //>100 to 150AMP 
111B:  GOTO   3B2
111C:  MOVF   76,F
111D:  BTFSS  03.2
111E:  GOTO   129
111F:  MOVF   75,F
1120:  BTFSS  03.2
1121:  GOTO   129
1122:  MOVF   74,F
1123:  BTFSS  03.2
1124:  GOTO   129
1125:  MOVF   73,W
1126:  SUBLW  48
1127:  BTFSC  03.0
1128:  GOTO   1BB
1129:  MOVF   76,F
112A:  BTFSS  03.2
112B:  GOTO   1BB
112C:  MOVF   75,F
112D:  BTFSS  03.2
112E:  GOTO   1BB
112F:  MOVF   74,F
1130:  BTFSS  03.2
1131:  GOTO   1BB
1132:  MOVF   73,W
1133:  SUBLW  6E
1134:  BTFSS  03.0
1135:  GOTO   1BB
....................            ref2=((((ref2-72)*12.14)+1000))/10;   //12.53 
1136:  MOVLW  48
1137:  SUBWF  73,W
1138:  BSF    03.5
1139:  MOVWF  30
113A:  MOVF   74,W
113B:  MOVWF  31
113C:  MOVLW  00
113D:  BTFSS  03.0
113E:  MOVLW  01
113F:  SUBWF  31,F
1140:  MOVF   75,W
1141:  MOVWF  32
1142:  MOVLW  00
1143:  BTFSS  03.0
1144:  MOVLW  01
1145:  SUBWF  32,F
1146:  MOVF   76,W
1147:  MOVWF  33
1148:  MOVLW  00
1149:  BTFSS  03.0
114A:  MOVLW  01
114B:  SUBWF  33,F
114C:  MOVF   33,W
114D:  MOVWF  37
114E:  MOVF   32,W
114F:  MOVWF  36
1150:  MOVF   31,W
1151:  MOVWF  35
1152:  MOVF   30,W
1153:  MOVWF  34
1154:  BCF    0A.4
1155:  BCF    03.5
1156:  CALL   422
1157:  BSF    0A.4
1158:  MOVF   7A,W
1159:  BSF    03.5
115A:  MOVWF  37
115B:  MOVF   79,W
115C:  MOVWF  36
115D:  MOVF   78,W
115E:  MOVWF  35
115F:  MOVF   77,W
1160:  MOVWF  34
1161:  MOVLW  71
1162:  MOVWF  3B
1163:  MOVLW  3D
1164:  MOVWF  3A
1165:  MOVLW  42
1166:  MOVWF  39
1167:  MOVLW  82
1168:  MOVWF  38
1169:  BCF    0A.4
116A:  BCF    03.5
116B:  CALL   4A3
116C:  BSF    0A.4
116D:  MOVF   77,W
116E:  BSF    03.5
116F:  MOVWF  34
1170:  MOVF   78,W
1171:  MOVWF  35
1172:  MOVF   79,W
1173:  MOVWF  36
1174:  MOVF   7A,W
1175:  MOVWF  37
1176:  BCF    03.1
1177:  MOVF   37,W
1178:  MOVWF  3B
1179:  MOVF   36,W
117A:  MOVWF  3A
117B:  MOVF   35,W
117C:  MOVWF  39
117D:  MOVF   34,W
117E:  MOVWF  38
117F:  CLRF   3F
1180:  CLRF   3E
1181:  MOVLW  7A
1182:  MOVWF  3D
1183:  MOVLW  88
1184:  MOVWF  3C
1185:  BCF    0A.4
1186:  BSF    0A.3
1187:  BCF    03.5
1188:  CALL   24E
1189:  BSF    0A.4
118A:  BCF    0A.3
118B:  MOVF   77,W
118C:  BSF    03.5
118D:  MOVWF  38
118E:  MOVF   78,W
118F:  MOVWF  39
1190:  MOVF   79,W
1191:  MOVWF  3A
1192:  MOVF   7A,W
1193:  MOVWF  3B
1194:  MOVWF  3F
1195:  MOVF   3A,W
1196:  MOVWF  3E
1197:  MOVF   39,W
1198:  MOVWF  3D
1199:  MOVF   38,W
119A:  MOVWF  3C
119B:  CLRF   43
119C:  CLRF   42
119D:  MOVLW  20
119E:  MOVWF  41
119F:  MOVLW  82
11A0:  MOVWF  40
11A1:  BCF    0A.4
11A2:  BCF    03.5
11A3:  CALL   51A
11A4:  BSF    0A.4
11A5:  MOVF   7A,W
11A6:  BSF    03.5
11A7:  MOVWF  3F
11A8:  MOVF   79,W
11A9:  MOVWF  3E
11AA:  MOVF   78,W
11AB:  MOVWF  3D
11AC:  MOVF   77,W
11AD:  MOVWF  3C
11AE:  BCF    0A.4
11AF:  BCF    03.5
11B0:  CALL   5E6
11B1:  BSF    0A.4
11B2:  MOVF   7A,W
11B3:  MOVWF  76
11B4:  MOVF   79,W
11B5:  MOVWF  75
11B6:  MOVF   78,W
11B7:  MOVWF  74
11B8:  MOVF   77,W
11B9:  MOVWF  73
....................  
....................       else if(ref2>110 && ref2<=149)                        //>150 to 200AMP 
11BA:  GOTO   3B2
11BB:  MOVF   76,F
11BC:  BTFSS  03.2
11BD:  GOTO   1C8
11BE:  MOVF   75,F
11BF:  BTFSS  03.2
11C0:  GOTO   1C8
11C1:  MOVF   74,F
11C2:  BTFSS  03.2
11C3:  GOTO   1C8
11C4:  MOVF   73,W
11C5:  SUBLW  6E
11C6:  BTFSC  03.0
11C7:  GOTO   25B
11C8:  MOVF   76,F
11C9:  BTFSS  03.2
11CA:  GOTO   25B
11CB:  MOVF   75,F
11CC:  BTFSS  03.2
11CD:  GOTO   25B
11CE:  MOVF   74,F
11CF:  BTFSS  03.2
11D0:  GOTO   25B
11D1:  MOVF   73,W
11D2:  SUBLW  95
11D3:  BTFSS  03.0
11D4:  GOTO   25B
....................            ref2=((((ref2-110)*12.76)+1500))/10;  //14.49 
11D5:  MOVLW  6E
11D6:  SUBWF  73,W
11D7:  BSF    03.5
11D8:  MOVWF  30
11D9:  MOVF   74,W
11DA:  MOVWF  31
11DB:  MOVLW  00
11DC:  BTFSS  03.0
11DD:  MOVLW  01
11DE:  SUBWF  31,F
11DF:  MOVF   75,W
11E0:  MOVWF  32
11E1:  MOVLW  00
11E2:  BTFSS  03.0
11E3:  MOVLW  01
11E4:  SUBWF  32,F
11E5:  MOVF   76,W
11E6:  MOVWF  33
11E7:  MOVLW  00
11E8:  BTFSS  03.0
11E9:  MOVLW  01
11EA:  SUBWF  33,F
11EB:  MOVF   33,W
11EC:  MOVWF  37
11ED:  MOVF   32,W
11EE:  MOVWF  36
11EF:  MOVF   31,W
11F0:  MOVWF  35
11F1:  MOVF   30,W
11F2:  MOVWF  34
11F3:  BCF    0A.4
11F4:  BCF    03.5
11F5:  CALL   422
11F6:  BSF    0A.4
11F7:  MOVF   7A,W
11F8:  BSF    03.5
11F9:  MOVWF  37
11FA:  MOVF   79,W
11FB:  MOVWF  36
11FC:  MOVF   78,W
11FD:  MOVWF  35
11FE:  MOVF   77,W
11FF:  MOVWF  34
1200:  MOVLW  F6
1201:  MOVWF  3B
1202:  MOVLW  28
1203:  MOVWF  3A
1204:  MOVLW  4C
1205:  MOVWF  39
1206:  MOVLW  82
1207:  MOVWF  38
1208:  BCF    0A.4
1209:  BCF    03.5
120A:  CALL   4A3
120B:  BSF    0A.4
120C:  MOVF   77,W
120D:  BSF    03.5
120E:  MOVWF  34
120F:  MOVF   78,W
1210:  MOVWF  35
1211:  MOVF   79,W
1212:  MOVWF  36
1213:  MOVF   7A,W
1214:  MOVWF  37
1215:  BCF    03.1
1216:  MOVF   37,W
1217:  MOVWF  3B
1218:  MOVF   36,W
1219:  MOVWF  3A
121A:  MOVF   35,W
121B:  MOVWF  39
121C:  MOVF   34,W
121D:  MOVWF  38
121E:  CLRF   3F
121F:  MOVLW  80
1220:  MOVWF  3E
1221:  MOVLW  3B
1222:  MOVWF  3D
1223:  MOVLW  89
1224:  MOVWF  3C
1225:  BCF    0A.4
1226:  BSF    0A.3
1227:  BCF    03.5
1228:  CALL   24E
1229:  BSF    0A.4
122A:  BCF    0A.3
122B:  MOVF   77,W
122C:  BSF    03.5
122D:  MOVWF  38
122E:  MOVF   78,W
122F:  MOVWF  39
1230:  MOVF   79,W
1231:  MOVWF  3A
1232:  MOVF   7A,W
1233:  MOVWF  3B
1234:  MOVWF  3F
1235:  MOVF   3A,W
1236:  MOVWF  3E
1237:  MOVF   39,W
1238:  MOVWF  3D
1239:  MOVF   38,W
123A:  MOVWF  3C
123B:  CLRF   43
123C:  CLRF   42
123D:  MOVLW  20
123E:  MOVWF  41
123F:  MOVLW  82
1240:  MOVWF  40
1241:  BCF    0A.4
1242:  BCF    03.5
1243:  CALL   51A
1244:  BSF    0A.4
1245:  MOVF   7A,W
1246:  BSF    03.5
1247:  MOVWF  3F
1248:  MOVF   79,W
1249:  MOVWF  3E
124A:  MOVF   78,W
124B:  MOVWF  3D
124C:  MOVF   77,W
124D:  MOVWF  3C
124E:  BCF    0A.4
124F:  BCF    03.5
1250:  CALL   5E6
1251:  BSF    0A.4
1252:  MOVF   7A,W
1253:  MOVWF  76
1254:  MOVF   79,W
1255:  MOVWF  75
1256:  MOVF   78,W
1257:  MOVWF  74
1258:  MOVF   77,W
1259:  MOVWF  73
....................  
....................       else if(ref2>149 && ref2<=227)                        //>200 to 300AMP 
125A:  GOTO   3B2
125B:  MOVF   76,F
125C:  BTFSS  03.2
125D:  GOTO   268
125E:  MOVF   75,F
125F:  BTFSS  03.2
1260:  GOTO   268
1261:  MOVF   74,F
1262:  BTFSS  03.2
1263:  GOTO   268
1264:  MOVF   73,W
1265:  SUBLW  95
1266:  BTFSC  03.0
1267:  GOTO   2FA
1268:  MOVF   76,F
1269:  BTFSS  03.2
126A:  GOTO   2FA
126B:  MOVF   75,F
126C:  BTFSS  03.2
126D:  GOTO   2FA
126E:  MOVF   74,F
126F:  BTFSS  03.2
1270:  GOTO   2FA
1271:  MOVF   73,W
1272:  SUBLW  E3
1273:  BTFSS  03.0
1274:  GOTO   2FA
....................            ref2=((((ref2-149)*12.85)+2000))/10; 
1275:  MOVLW  95
1276:  SUBWF  73,W
1277:  BSF    03.5
1278:  MOVWF  30
1279:  MOVF   74,W
127A:  MOVWF  31
127B:  MOVLW  00
127C:  BTFSS  03.0
127D:  MOVLW  01
127E:  SUBWF  31,F
127F:  MOVF   75,W
1280:  MOVWF  32
1281:  MOVLW  00
1282:  BTFSS  03.0
1283:  MOVLW  01
1284:  SUBWF  32,F
1285:  MOVF   76,W
1286:  MOVWF  33
1287:  MOVLW  00
1288:  BTFSS  03.0
1289:  MOVLW  01
128A:  SUBWF  33,F
128B:  MOVF   33,W
128C:  MOVWF  37
128D:  MOVF   32,W
128E:  MOVWF  36
128F:  MOVF   31,W
1290:  MOVWF  35
1291:  MOVF   30,W
1292:  MOVWF  34
1293:  BCF    0A.4
1294:  BCF    03.5
1295:  CALL   422
1296:  BSF    0A.4
1297:  MOVF   7A,W
1298:  BSF    03.5
1299:  MOVWF  37
129A:  MOVF   79,W
129B:  MOVWF  36
129C:  MOVF   78,W
129D:  MOVWF  35
129E:  MOVF   77,W
129F:  MOVWF  34
12A0:  MOVLW  9A
12A1:  MOVWF  3B
12A2:  MOVLW  99
12A3:  MOVWF  3A
12A4:  MOVLW  4D
12A5:  MOVWF  39
12A6:  MOVLW  82
12A7:  MOVWF  38
12A8:  BCF    0A.4
12A9:  BCF    03.5
12AA:  CALL   4A3
12AB:  BSF    0A.4
12AC:  MOVF   77,W
12AD:  BSF    03.5
12AE:  MOVWF  34
12AF:  MOVF   78,W
12B0:  MOVWF  35
12B1:  MOVF   79,W
12B2:  MOVWF  36
12B3:  MOVF   7A,W
12B4:  MOVWF  37
12B5:  BCF    03.1
12B6:  MOVF   37,W
12B7:  MOVWF  3B
12B8:  MOVF   36,W
12B9:  MOVWF  3A
12BA:  MOVF   35,W
12BB:  MOVWF  39
12BC:  MOVF   34,W
12BD:  MOVWF  38
12BE:  CLRF   3F
12BF:  CLRF   3E
12C0:  MOVLW  7A
12C1:  MOVWF  3D
12C2:  MOVLW  89
12C3:  MOVWF  3C
12C4:  BCF    0A.4
12C5:  BSF    0A.3
12C6:  BCF    03.5
12C7:  CALL   24E
12C8:  BSF    0A.4
12C9:  BCF    0A.3
12CA:  MOVF   77,W
12CB:  BSF    03.5
12CC:  MOVWF  38
12CD:  MOVF   78,W
12CE:  MOVWF  39
12CF:  MOVF   79,W
12D0:  MOVWF  3A
12D1:  MOVF   7A,W
12D2:  MOVWF  3B
12D3:  MOVWF  3F
12D4:  MOVF   3A,W
12D5:  MOVWF  3E
12D6:  MOVF   39,W
12D7:  MOVWF  3D
12D8:  MOVF   38,W
12D9:  MOVWF  3C
12DA:  CLRF   43
12DB:  CLRF   42
12DC:  MOVLW  20
12DD:  MOVWF  41
12DE:  MOVLW  82
12DF:  MOVWF  40
12E0:  BCF    0A.4
12E1:  BCF    03.5
12E2:  CALL   51A
12E3:  BSF    0A.4
12E4:  MOVF   7A,W
12E5:  BSF    03.5
12E6:  MOVWF  3F
12E7:  MOVF   79,W
12E8:  MOVWF  3E
12E9:  MOVF   78,W
12EA:  MOVWF  3D
12EB:  MOVF   77,W
12EC:  MOVWF  3C
12ED:  BCF    0A.4
12EE:  BCF    03.5
12EF:  CALL   5E6
12F0:  BSF    0A.4
12F1:  MOVF   7A,W
12F2:  MOVWF  76
12F3:  MOVF   79,W
12F4:  MOVWF  75
12F5:  MOVF   78,W
12F6:  MOVWF  74
12F7:  MOVF   77,W
12F8:  MOVWF  73
....................  
....................       else if(ref2>227 && ref2<=302)                        //>300 to 400AMP 
12F9:  GOTO   3B2
12FA:  MOVF   76,F
12FB:  BTFSS  03.2
12FC:  GOTO   307
12FD:  MOVF   75,F
12FE:  BTFSS  03.2
12FF:  GOTO   307
1300:  MOVF   74,F
1301:  BTFSS  03.2
1302:  GOTO   307
1303:  MOVF   73,W
1304:  SUBLW  E3
1305:  BTFSC  03.0
1306:  GOTO   39B
1307:  MOVF   76,F
1308:  BTFSS  03.2
1309:  GOTO   39B
130A:  MOVF   75,F
130B:  BTFSS  03.2
130C:  GOTO   39B
130D:  MOVF   74,W
130E:  SUBLW  01
130F:  BTFSS  03.0
1310:  GOTO   39B
1311:  BTFSS  03.2
1312:  GOTO   317
1313:  MOVF   73,W
1314:  SUBLW  2E
1315:  BTFSS  03.0
1316:  GOTO   39B
....................            ref2=((((ref2-227)*13.25)+3000))/10; 
1317:  MOVLW  E3
1318:  SUBWF  73,W
1319:  BSF    03.5
131A:  MOVWF  30
131B:  MOVF   74,W
131C:  MOVWF  31
131D:  MOVLW  00
131E:  BTFSS  03.0
131F:  MOVLW  01
1320:  SUBWF  31,F
1321:  MOVF   75,W
1322:  MOVWF  32
1323:  MOVLW  00
1324:  BTFSS  03.0
1325:  MOVLW  01
1326:  SUBWF  32,F
1327:  MOVF   76,W
1328:  MOVWF  33
1329:  MOVLW  00
132A:  BTFSS  03.0
132B:  MOVLW  01
132C:  SUBWF  33,F
132D:  MOVF   33,W
132E:  MOVWF  37
132F:  MOVF   32,W
1330:  MOVWF  36
1331:  MOVF   31,W
1332:  MOVWF  35
1333:  MOVF   30,W
1334:  MOVWF  34
1335:  BCF    0A.4
1336:  BCF    03.5
1337:  CALL   422
1338:  BSF    0A.4
1339:  MOVF   7A,W
133A:  BSF    03.5
133B:  MOVWF  37
133C:  MOVF   79,W
133D:  MOVWF  36
133E:  MOVF   78,W
133F:  MOVWF  35
1340:  MOVF   77,W
1341:  MOVWF  34
1342:  CLRF   3B
1343:  CLRF   3A
1344:  MOVLW  54
1345:  MOVWF  39
1346:  MOVLW  82
1347:  MOVWF  38
1348:  BCF    0A.4
1349:  BCF    03.5
134A:  CALL   4A3
134B:  BSF    0A.4
134C:  MOVF   77,W
134D:  BSF    03.5
134E:  MOVWF  34
134F:  MOVF   78,W
1350:  MOVWF  35
1351:  MOVF   79,W
1352:  MOVWF  36
1353:  MOVF   7A,W
1354:  MOVWF  37
1355:  BCF    03.1
1356:  MOVF   37,W
1357:  MOVWF  3B
1358:  MOVF   36,W
1359:  MOVWF  3A
135A:  MOVF   35,W
135B:  MOVWF  39
135C:  MOVF   34,W
135D:  MOVWF  38
135E:  CLRF   3F
135F:  MOVLW  80
1360:  MOVWF  3E
1361:  MOVLW  3B
1362:  MOVWF  3D
1363:  MOVLW  8A
1364:  MOVWF  3C
1365:  BCF    0A.4
1366:  BSF    0A.3
1367:  BCF    03.5
1368:  CALL   24E
1369:  BSF    0A.4
136A:  BCF    0A.3
136B:  MOVF   77,W
136C:  BSF    03.5
136D:  MOVWF  38
136E:  MOVF   78,W
136F:  MOVWF  39
1370:  MOVF   79,W
1371:  MOVWF  3A
1372:  MOVF   7A,W
1373:  MOVWF  3B
1374:  MOVWF  3F
1375:  MOVF   3A,W
1376:  MOVWF  3E
1377:  MOVF   39,W
1378:  MOVWF  3D
1379:  MOVF   38,W
137A:  MOVWF  3C
137B:  CLRF   43
137C:  CLRF   42
137D:  MOVLW  20
137E:  MOVWF  41
137F:  MOVLW  82
1380:  MOVWF  40
1381:  BCF    0A.4
1382:  BCF    03.5
1383:  CALL   51A
1384:  BSF    0A.4
1385:  MOVF   7A,W
1386:  BSF    03.5
1387:  MOVWF  3F
1388:  MOVF   79,W
1389:  MOVWF  3E
138A:  MOVF   78,W
138B:  MOVWF  3D
138C:  MOVF   77,W
138D:  MOVWF  3C
138E:  BCF    0A.4
138F:  BCF    03.5
1390:  CALL   5E6
1391:  BSF    0A.4
1392:  MOVF   7A,W
1393:  MOVWF  76
1394:  MOVF   79,W
1395:  MOVWF  75
1396:  MOVF   78,W
1397:  MOVWF  74
1398:  MOVF   77,W
1399:  MOVWF  73
....................  
....................       else if(ref2>302) 
139A:  GOTO   3B2
139B:  MOVF   76,F
139C:  BTFSS  03.2
139D:  GOTO   3AC
139E:  MOVF   75,F
139F:  BTFSS  03.2
13A0:  GOTO   3AC
13A1:  MOVF   74,W
13A2:  SUBLW  00
13A3:  BTFSC  03.0
13A4:  GOTO   3B2
13A5:  XORLW  FF
13A6:  BTFSS  03.2
13A7:  GOTO   3AC
13A8:  MOVF   73,W
13A9:  SUBLW  2E
13AA:  BTFSC  03.0
13AB:  GOTO   3B2
....................            ref2=400; 
13AC:  CLRF   76
13AD:  CLRF   75
13AE:  MOVLW  01
13AF:  MOVWF  74
13B0:  MOVLW  90
13B1:  MOVWF  73
.................... } 
13B2:  BCF    0A.3
13B3:  BSF    0A.4
13B4:  GOTO   503 (RETURN)
....................  
....................  

Configuration Fuses:
   Word  1: 2FD4   INTRC_IO NOWDT NOPWRT NOMCLR NOCP NOCPD BOREN IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BOR4VBROWNOUT_SL NOWRT
